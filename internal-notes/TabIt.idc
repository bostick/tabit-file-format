#include <idc.idc>
static clear(from){
auto ea;
ea = from;
while (1){
ea = NextFunction(ea);
if (ea == -1) break;
DelFunction(ea);
MakeNameEx(ea, "", 0);}
ea = from;
while (1){
ea = FindExplored(ea, SEARCH_DOWN | SEARCH_NEXT);
if (ea == -1) break;
MakeUnkn(ea, 1);}
}
static main(){
clear(0x401000);
MakeUnkn(0x401000, 1);
MakeNameEx(0x401000, "RTTI_401000_Enumeration_Boolean", 0);
MakeDword(0x401000);
MakeUnkn(0x401004, 1);
MakeNameEx(0x401004, "", 0);
MakeByte(0x401004);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x401005, 0x40100D);
MakeByte(0x40100D);
MakeDword(0x40100E);
MakeDword(0x401012);
MakeDword(0x401016);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40101A, 0x401020);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x401020, 0x401025);
MakeUnkn(0x401028, 1);
MakeNameEx(0x401028, "RTTI_401028_Char_Char", 0);
MakeDword(0x401028);
MakeUnkn(0x40102C, 1);
MakeNameEx(0x40102C, "", 0);
MakeByte(0x40102C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40102D, 0x401032);
MakeByte(0x401032);
MakeDword(0x401033);
MakeDword(0x401037);
MakeUnkn(0x40103C, 1);
MakeNameEx(0x40103C, "RTTI_40103C_Integer_Smallint", 0);
MakeDword(0x40103C);
MakeUnkn(0x401040, 1);
MakeNameEx(0x401040, "", 0);
MakeByte(0x401040);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x401041, 0x40104A);
MakeByte(0x40104A);
MakeDword(0x40104B);
MakeDword(0x40104F);
MakeUnkn(0x401054, 1);
MakeNameEx(0x401054, "RTTI_401054_Integer_Integer", 0);
MakeDword(0x401054);
MakeUnkn(0x401058, 1);
MakeNameEx(0x401058, "", 0);
MakeByte(0x401058);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x401059, 0x401061);
MakeByte(0x401061);
MakeDword(0x401062);
MakeDword(0x401066);
MakeUnkn(0x40106C, 1);
MakeNameEx(0x40106C, "RTTI_40106C_Integer_Byte", 0);
MakeDword(0x40106C);
MakeUnkn(0x401070, 1);
MakeNameEx(0x401070, "", 0);
MakeByte(0x401070);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x401071, 0x401076);
MakeByte(0x401076);
MakeDword(0x401077);
MakeDword(0x40107B);
MakeUnkn(0x401080, 1);
MakeNameEx(0x401080, "RTTI_401080_Integer_Word", 0);
MakeDword(0x401080);
MakeUnkn(0x401084, 1);
MakeNameEx(0x401084, "", 0);
MakeByte(0x401084);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x401085, 0x40108A);
MakeByte(0x40108A);
MakeDword(0x40108B);
MakeDword(0x40108F);
MakeUnkn(0x401094, 1);
MakeNameEx(0x401094, "RTTI_401094_Integer_Cardinal", 0);
MakeDword(0x401094);
MakeUnkn(0x401098, 1);
MakeNameEx(0x401098, "", 0);
MakeByte(0x401098);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x401099, 0x4010A2);
MakeByte(0x4010A2);
MakeDword(0x4010A3);
MakeDword(0x4010A7);
MakeUnkn(0x4010AC, 1);
MakeNameEx(0x4010AC, "RTTI_4010AC_AnsiString_string", 0);
MakeDword(0x4010AC);
MakeUnkn(0x4010B0, 1);
MakeNameEx(0x4010B0, "", 0);
MakeByte(0x4010B0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4010B1, 0x4010B8);
MakeUnkn(0x4010B8, 1);
MakeNameEx(0x4010B8, "VMT_4010B8_TObject", 0);
MakeDword(0x4010B8);
MakeDword(0x4010BC);
MakeDword(0x4010C0);
MakeDword(0x4010C4);
MakeDword(0x4010C8);
MakeDword(0x4010CC);
MakeDword(0x4010D0);
MakeDword(0x4010D4);
MakeDword(0x4010D8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x401104, 0x40110C);
MakeDword(0x4010DC);
MakeDword(0x4010E0);
MakeDword(0x4010E4);
MakeDword(0x4010E8);
MakeDword(0x4010EC);
MakeDword(0x4010F0);
MakeDword(0x4010F4);
MakeDword(0x4010F8);
MakeDword(0x4010FC);
MakeDword(0x401100);
MakeUnkn(0x40110C, 1);
MakeNameEx(0x40110C, "RTTI_40110C_Class_TObject", 0);
MakeDword(0x40110C);
MakeUnkn(0x401110, 1);
MakeNameEx(0x401110, "", 0);
MakeByte(0x401110);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x401111, 0x401119);
MakeDword(0x401119);
MakeDword(0x40111D);
MakeWord(0x401121);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x401123, 0x40112A);
MakeWord(0x40112A);
MakeUnkn(0x40112C, 1);
MakeNameEx(0x40112C, "RTTI_40112C_Interface_IInterface", 0);
MakeDword(0x40112C);
MakeUnkn(0x401130, 1);
MakeNameEx(0x401130, "", 0);
MakeByte(0x401130);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x401131, 0x40113C);
MakeDword(0x40113C);
MakeByte(0x401140);
MakeByte(0x401141);
MakeArray(0x401141, 16);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x401151, 0x401158);
MakeWord(0x401158);
MakeWord(0x40115A);
MakeUnkn(0x4011AC, 1);
MakeNameEx(0x4011AC, "VMT_4011AC_TInterfacedObject", 0);
MakeDword(0x4011AC);
MakeDword(0x4011B0);
MakeUnkn(0x401189, 1);
MakeNameEx(0x401189, "TInterfacedObject_IntfTable", 0);
MakeDword(0x401189);
MakeByte(0x40118D);
MakeArray(0x40118D, 16);
MakeDword(0x40119D);
MakeDword(0x40117D);
MakeFunction(0x40115D, -1);
MakeCode(0x40115D);
MakeDword(0x401181);
MakeFunction(0x401167, -1);
MakeCode(0x401167);
MakeDword(0x401185);
MakeFunction(0x401171, -1);
MakeCode(0x401171);
MakeByte(0x40115C);
MakeDword(0x4011A1);
MakeDword(0x4011A5);
MakeDword(0x4011B4);
MakeDword(0x4011B8);
MakeDword(0x4011BC);
MakeDword(0x4011C0);
MakeDword(0x4011C4);
MakeDword(0x4011C8);
MakeDword(0x4011CC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4011F8, 0x40120A);
MakeDword(0x4011D0);
MakeDword(0x4011D4);
MakeDword(0x4011D8);
MakeDword(0x4011DC);
MakeDword(0x4011E0);
MakeDword(0x4011E4);
MakeDword(0x4011E8);
MakeDword(0x4011EC);
MakeDword(0x4011F0);
MakeDword(0x4011F4);
MakeUnkn(0x40120C, 1);
MakeNameEx(0x40120C, "kernel32.CloseHandle", 0x20);
MakeComm(0x40120C, "'function kernel32.CloseHandle:Integer; stdcall;'");
MakeCode(0x40120C);
MakeFunction(0x40120C, 0x401212);
MakeUnkn(0x401214, 1);
MakeNameEx(0x401214, "kernel32.CreateFileA", 0x20);
MakeComm(0x401214, "'function kernel32.CreateFileA(dwDesiredAccess:DWORD; dwShareMode:DWORD; lpSecurityAttributes:PSecurityAttributes; dwCreationDisposition:DWORD; dwFlagsAndAttributes:DWORD; hTemplateFile:THandle):THandle; stdcall;'");
MakeCode(0x401214);
MakeFunction(0x401214, 0x40121A);
MakeUnkn(0x40121C, 1);
MakeNameEx(0x40121C, "kernel32.GetFileType", 0x20);
MakeComm(0x40121C, "'function kernel32.GetFileType:DWORD; stdcall;'");
MakeCode(0x40121C);
MakeFunction(0x40121C, 0x401222);
MakeUnkn(0x401224, 1);
MakeNameEx(0x401224, "kernel32.GetFileSize", 0x20);
MakeComm(0x401224, "'function kernel32.GetFileSize(lpFileSizeHigh:Pointer):DWORD; stdcall;'");
MakeCode(0x401224);
MakeFunction(0x401224, 0x40122A);
MakeUnkn(0x40122C, 1);
MakeNameEx(0x40122C, "kernel32.GetStdHandle", 0x20);
MakeComm(0x40122C, "'function kernel32.GetStdHandle:Integer; stdcall;'");
MakeCode(0x40122C);
MakeFunction(0x40122C, 0x401232);
MakeUnkn(0x401234, 1);
MakeNameEx(0x401234, "kernel32.RaiseException", 0x20);
MakeComm(0x401234, "'procedure kernel32.RaiseException(dwExceptionFlags:DWORD; nNumberOfArguments:DWORD; lpArguments:PDWORD); stdcall;'");
MakeCode(0x401234);
MakeFunction(0x401234, 0x40123A);
MakeUnkn(0x40123C, 1);
MakeNameEx(0x40123C, "kernel32.ReadFile", 0x20);
MakeComm(0x40123C, "'function kernel32.ReadFile(var Buffer:void ; nNumberOfBytesToRead:Cardinal; var lpNumberOfBytesRead:Cardinal; lpOverlapped:Pointer):Integer; stdcall;'");
MakeCode(0x40123C);
MakeFunction(0x40123C, 0x401242);
MakeUnkn(0x401244, 1);
MakeNameEx(0x401244, "kernel32.RtlUnwind", 0x20);
MakeComm(0x401244, "'procedure kernel32.RtlUnwind;'");
MakeCode(0x401244);
MakeFunction(0x401244, 0x40124A);
MakeUnkn(0x40124C, 1);
MakeNameEx(0x40124C, "kernel32.SetEndOfFile", 0x20);
MakeComm(0x40124C, "'function kernel32.SetEndOfFile:LongBool; stdcall;'");
MakeCode(0x40124C);
MakeFunction(0x40124C, 0x401252);
MakeUnkn(0x401254, 1);
MakeNameEx(0x401254, "kernel32.SetFilePointer", 0x20);
MakeComm(0x401254, "'function kernel32.SetFilePointer(lDistanceToMove:Longint; lpDistanceToMoveHigh:Pointer; dwMoveMethod:DWORD):DWORD; stdcall;'");
MakeCode(0x401254);
MakeFunction(0x401254, 0x40125A);
MakeUnkn(0x40125C, 1);
MakeNameEx(0x40125C, "kernel32.UnhandledExceptionFilter", 0x20);
MakeComm(0x40125C, "'function kernel32.UnhandledExceptionFilter:Longint; stdcall;'");
MakeCode(0x40125C);
MakeFunction(0x40125C, 0x401262);
MakeUnkn(0x401264, 1);
MakeNameEx(0x401264, "kernel32.WriteFile", 0x20);
MakeComm(0x401264, "'function kernel32.WriteFile(const Buffer:void ; nNumberOfBytesToWrite:Cardinal; var lpNumberOfBytesWritten:Cardinal; lpOverlapped:Pointer):Integer; stdcall;'");
MakeCode(0x401264);
MakeFunction(0x401264, 0x40126A);
MakeUnkn(0x40126C, 1);
MakeNameEx(0x40126C, "user32.CharNextA", 0x20);
MakeComm(0x40126C, "'function user32.CharNextA:PAnsiChar; stdcall;'");
MakeCode(0x40126C);
MakeFunction(0x40126C, 0x401272);
MakeUnkn(0x401274, 1);
MakeNameEx(0x401274, "kernel32.CompareStringA", 0x20);
MakeComm(0x401274, "'function kernel32.CompareStringA(dwCmpFlags:DWORD; lpString1:PAnsiChar; cchCount1:Integer; lpString2:PAnsiChar; cchCount2:Integer):Integer; stdcall;'");
MakeCode(0x401274);
MakeFunction(0x401274, 0x40127A);
MakeUnkn(0x40127C, 1);
MakeNameEx(0x40127C, "kernel32.ExitProcess", 0x20);
MakeComm(0x40127C, "'procedure kernel32.ExitProcess; stdcall;'");
MakeCode(0x40127C);
MakeFunction(0x40127C, 0x401282);
MakeUnkn(0x401284, 1);
MakeNameEx(0x401284, "user32.MessageBoxA", 0x20);
MakeComm(0x401284, "'function user32.MessageBoxA(lpText:PAnsiChar; lpCaption:PAnsiChar; uType:LongWord):Integer; stdcall;'");
MakeCode(0x401284);
MakeFunction(0x401284, 0x40128A);
MakeUnkn(0x40128C, 1);
MakeNameEx(0x40128C, "kernel32.FindClose", 0x20);
MakeComm(0x40128C, "'procedure kernel32.FindClose;'");
MakeCode(0x40128C);
MakeFunction(0x40128C, 0x401292);
MakeUnkn(0x401294, 1);
MakeNameEx(0x401294, "kernel32.FindFirstFileA", 0x20);
MakeComm(0x401294, "'function kernel32.FindFirstFileA(var lpFindFileData:_WIN32_FIND_DATAA):THandle; stdcall;'");
MakeCode(0x401294);
MakeFunction(0x401294, 0x40129A);
MakeUnkn(0x40129C, 1);
MakeNameEx(0x40129C, "kernel32.FreeLibrary", 0x20);
MakeComm(0x40129C, "'function kernel32.FreeLibrary:LongBool; stdcall;'");
MakeCode(0x40129C);
MakeFunction(0x40129C, 0x4012A2);
MakeUnkn(0x4012A4, 1);
MakeNameEx(0x4012A4, "kernel32.GetCommandLineA", 0x20);
MakeComm(0x4012A4, "'function kernel32.GetCommandLineA:PAnsiChar;'");
MakeCode(0x4012A4);
MakeFunction(0x4012A4, 0x4012AA);
MakeUnkn(0x4012AC, 1);
MakeNameEx(0x4012AC, "kernel32.GetLastError", 0x20);
MakeComm(0x4012AC, "'function kernel32.GetLastError:Integer;'");
MakeCode(0x4012AC);
MakeFunction(0x4012AC, 0x4012B2);
MakeUnkn(0x4012B4, 1);
MakeNameEx(0x4012B4, "kernel32.GetLocaleInfoA", 0x20);
MakeComm(0x4012B4, "'function kernel32.GetLocaleInfoA(LCType:DWORD; lpLCData:PAnsiChar; cchData:Integer):Integer; stdcall;'");
MakeCode(0x4012B4);
MakeFunction(0x4012B4, 0x4012BA);
MakeUnkn(0x4012BC, 1);
MakeNameEx(0x4012BC, "kernel32.GetModuleFileNameA", 0x20);
MakeComm(0x4012BC, "'function kernel32.GetModuleFileNameA(lpFilename:PAnsiChar; nSize:DWORD):DWORD; stdcall;'");
MakeCode(0x4012BC);
MakeFunction(0x4012BC, 0x4012C2);
MakeUnkn(0x4012C4, 1);
MakeNameEx(0x4012C4, "kernel32.GetModuleHandleA", 0x20);
MakeComm(0x4012C4, "'function kernel32.GetModuleHandleA:HMODULE; stdcall;'");
MakeCode(0x4012C4);
MakeFunction(0x4012C4, 0x4012CA);
MakeUnkn(0x4012CC, 1);
MakeNameEx(0x4012CC, "kernel32.GetProcAddress", 0x20);
MakeComm(0x4012CC, "'function kernel32.GetProcAddress(ProcName:PAnsiChar):Pointer; stdcall;'");
MakeCode(0x4012CC);
MakeFunction(0x4012CC, 0x4012D2);
MakeUnkn(0x4012D4, 1);
MakeNameEx(0x4012D4, "kernel32.GetStartupInfoA", 0x20);
MakeComm(0x4012D4, "'procedure kernel32.GetStartupInfoA; stdcall;'");
MakeCode(0x4012D4);
MakeFunction(0x4012D4, 0x4012DA);
MakeUnkn(0x4012DC, 1);
MakeNameEx(0x4012DC, "kernel32.GetThreadLocale", 0x20);
MakeComm(0x4012DC, "'function kernel32.GetThreadLocale:Integer;'");
MakeCode(0x4012DC);
MakeFunction(0x4012DC, 0x4012E2);
MakeUnkn(0x4012E4, 1);
MakeNameEx(0x4012E4, "kernel32.LoadLibraryExA", 0x20);
MakeComm(0x4012E4, "'function kernel32.LoadLibraryExA(hFile:THandle; dwFlags:DWORD):HMODULE; stdcall;'");
MakeCode(0x4012E4);
MakeFunction(0x4012E4, 0x4012EA);
MakeUnkn(0x4012EC, 1);
MakeNameEx(0x4012EC, "user32.LoadStringA", 0x20);
MakeComm(0x4012EC, "'function user32.LoadStringA(uID:LongWord; lpBuffer:PAnsiChar; nBufferMax:Integer):Integer; stdcall;'");
MakeCode(0x4012EC);
MakeFunction(0x4012EC, 0x4012F2);
MakeUnkn(0x4012F4, 1);
MakeNameEx(0x4012F4, "kernel32.lstrcpynA", 0x20);
MakeComm(0x4012F4, "'function kernel32.lstrcpynA(lpString2:PAnsiChar; iMaxLength:Integer):PAnsiChar; stdcall;'");
MakeCode(0x4012F4);
MakeFunction(0x4012F4, 0x4012FA);
MakeUnkn(0x4012FC, 1);
MakeNameEx(0x4012FC, "kernel32.lstrlenA", 0x20);
MakeComm(0x4012FC, "'function kernel32.lstrlenA:Integer; stdcall;'");
MakeCode(0x4012FC);
MakeFunction(0x4012FC, 0x401302);
MakeUnkn(0x401304, 1);
MakeNameEx(0x401304, "kernel32.MultiByteToWideChar", 0x20);
MakeComm(0x401304, "'function kernel32.MultiByteToWideChar(Flags:Integer; MBStr:PAnsiChar; MBCount:Integer; WCStr:PWideChar; WCCount:Integer):Integer; stdcall;'");
MakeCode(0x401304);
MakeFunction(0x401304, 0x40130A);
MakeUnkn(0x40130C, 1);
MakeNameEx(0x40130C, "advapi32.RegCloseKey", 0x20);
MakeComm(0x40130C, "'function advapi32.RegCloseKey:Longint; stdcall;'");
MakeCode(0x40130C);
MakeFunction(0x40130C, 0x401312);
MakeUnkn(0x401314, 1);
MakeNameEx(0x401314, "advapi32.RegOpenKeyExA", 0x20);
MakeComm(0x401314, "'function advapi32.RegOpenKeyExA(lpSubKey:PAnsiChar; ulOptions:DWORD; samDesired:DWORD; var phkResult:HKEY):Longint; stdcall;'");
MakeCode(0x401314);
MakeFunction(0x401314, 0x40131A);
MakeUnkn(0x40131C, 1);
MakeNameEx(0x40131C, "advapi32.RegQueryValueExA", 0x20);
MakeComm(0x40131C, "'function advapi32.RegQueryValueExA(lpValueName:PAnsiChar; lpReserved:Pointer; lpType:PDWORD; lpData:PByte; lpcbData:PDWORD):Longint; stdcall;'");
MakeCode(0x40131C);
MakeFunction(0x40131C, 0x401322);
MakeUnkn(0x401324, 1);
MakeNameEx(0x401324, "kernel32.WideCharToMultiByte", 0x20);
MakeComm(0x401324, "'function kernel32.WideCharToMultiByte(dwFlags:DWORD; lpWideCharStr:PWideChar; cchWideChar:Integer; lpMultiByteStr:PAnsiChar; cchMultiByte:Integer; lpDefaultChar:PAnsiChar; lpUsedDefaultChar:PBOOL):Integer; stdcall;'");
MakeCode(0x401324);
MakeFunction(0x401324, 0x40132A);
MakeUnkn(0x40132C, 1);
MakeNameEx(0x40132C, "kernel32.VirtualQuery", 0x20);
MakeComm(0x40132C, "'function kernel32.VirtualQuery(var lpBuffer:_MEMORY_BASIC_INFORMATION; dwLength:DWORD):DWORD; stdcall;'");
MakeCode(0x40132C);
MakeFunction(0x40132C, 0x401332);
MakeUnkn(0x401334, 1);
MakeNameEx(0x401334, "oleaut32.SysAllocStringLen", 0x20);
MakeComm(0x401334, "'function oleaut32.SysAllocStringLen(len:Integer):PWideChar; stdcall;'");
MakeCode(0x401334);
MakeFunction(0x401334, 0x40133A);
MakeUnkn(0x40133C, 1);
MakeNameEx(0x40133C, "oleaut32.SysReAllocStringLen", 0x20);
MakeComm(0x40133C, "'function oleaut32.SysReAllocStringLen(psz:PWideChar; len:Integer):Integer; stdcall;'");
MakeCode(0x40133C);
MakeFunction(0x40133C, 0x401342);
MakeUnkn(0x401344, 1);
MakeNameEx(0x401344, "oleaut32.SysFreeString", 0x20);
MakeComm(0x401344, "'procedure oleaut32.SysFreeString; stdcall;'");
MakeCode(0x401344);
MakeFunction(0x401344, 0x40134A);
MakeUnkn(0x40134C, 1);
MakeNameEx(0x40134C, "kernel32.InterlockedIncrement", 0x20);
MakeComm(0x40134C, "'function kernel32.InterlockedIncrement:Integer;'");
MakeCode(0x40134C);
MakeFunction(0x40134C, 0x401352);
MakeUnkn(0x401354, 1);
MakeNameEx(0x401354, "kernel32.InterlockedDecrement", 0x20);
MakeComm(0x401354, "'function kernel32.InterlockedDecrement:Integer; stdcall;'");
MakeCode(0x401354);
MakeFunction(0x401354, 0x40135A);
MakeUnkn(0x40135C, 1);
MakeNameEx(0x40135C, "kernel32.GetCurrentThreadId", 0x20);
MakeComm(0x40135C, "'function kernel32.GetCurrentThreadId:Cardinal;'");
MakeCode(0x40135C);
MakeFunction(0x40135C, 0x401362);
MakeUnkn(0x401364, 1);
MakeNameEx(0x401364, "kernel32.QueryPerformanceCounter", 0x20);
MakeComm(0x401364, "'function kernel32.QueryPerformanceCounter:LongBool; stdcall;'");
MakeCode(0x401364);
MakeFunction(0x401364, 0x40136A);
MakeUnkn(0x40136C, 1);
MakeNameEx(0x40136C, "kernel32.GetTickCount", 0x20);
MakeComm(0x40136C, "'function kernel32.GetTickCount:Cardinal;'");
MakeCode(0x40136C);
MakeFunction(0x40136C, 0x401372);
MakeUnkn(0x401374, 1);
MakeNameEx(0x401374, "GetCmdShow", 0x20);
MakeComm(0x401374, "'function GetCmdShow:Integer;'");
MakeCode(0x401374);
MakeCode(0x40138F);
MakeFunction(0x401374, 0x401396);
MakeUnkn(0x401398, 1);
MakeNameEx(0x401398, "kernel32.VirtualAlloc", 0x20);
MakeComm(0x401398, "'function kernel32.VirtualAlloc(dwSize:DWORD; flAllocationType:DWORD; flProtect:DWORD):Pointer; stdcall;'");
MakeCode(0x401398);
MakeFunction(0x401398, 0x40139E);
MakeUnkn(0x4013A0, 1);
MakeNameEx(0x4013A0, "kernel32.VirtualFree", 0x20);
MakeComm(0x4013A0, "'function kernel32.VirtualFree(dwSize:DWORD; dwFreeType:DWORD):LongBool; stdcall;'");
MakeCode(0x4013A0);
MakeFunction(0x4013A0, 0x4013A6);
MakeUnkn(0x4013A8, 1);
MakeNameEx(0x4013A8, "kernel32.Sleep", 0x20);
MakeComm(0x4013A8, "'function kernel32.Sleep:?; stdcall;'");
MakeCode(0x4013A8);
MakeFunction(0x4013A8, 0x4013AE);
MakeUnkn(0x4013B0, 1);
MakeNameEx(0x4013B0, "user32.DestroyWindow", 0x20);
MakeComm(0x4013B0, "'function user32.DestroyWindow:LongBool; stdcall;'");
MakeCode(0x4013B0);
MakeFunction(0x4013B0, 0x4013B6);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4013C0, -1);
MakeDword(0x4013BC);
MakeDword(0x4013B8);
MakeUnkn(0x401418, 1);
MakeNameEx(0x401418, "LockCmpxchg", 0x20);
MakeComm(0x401418, "'function LockCmpxchg(CompareVal:Byte; NewVal:Byte; AAddress:PByte):Byte;'");
MakeCode(0x401418);
MakeFunction(0x401418, 0x40141D);
MakeUnkn(0x401420, 1);
MakeNameEx(0x401420, "Move12", 0x20);
MakeComm(0x401420, "'procedure Move12(const ASource:void ; var ADest:void ; ACount:Integer);'");
MakeCode(0x401420);
MakeFunction(0x401420, 0x401431);
MakeUnkn(0x401434, 1);
MakeNameEx(0x401434, "Move20", 0x20);
MakeComm(0x401434, "'procedure Move20(const ASource:void ; var ADest:void ; ACount:Integer);'");
MakeCode(0x401434);
MakeFunction(0x401434, 0x401451);
MakeUnkn(0x401454, 1);
MakeNameEx(0x401454, "Move28", 0x20);
MakeComm(0x401454, "'procedure Move28(const ASource:void ; var ADest:void ; ACount:Integer);'");
MakeCode(0x401454);
MakeFunction(0x401454, 0x40147D);
MakeUnkn(0x401480, 1);
MakeNameEx(0x401480, "Move36", 0x20);
MakeComm(0x401480, "'procedure Move36(const ASource:void ; var ADest:void ; ACount:Integer);'");
MakeCode(0x401480);
MakeFunction(0x401480, 0x40149D);
MakeUnkn(0x4014A0, 1);
MakeNameEx(0x4014A0, "Move44", 0x20);
MakeComm(0x4014A0, "'procedure Move44(const ASource:void ; var ADest:void ; ACount:Integer);'");
MakeCode(0x4014A0);
MakeFunction(0x4014A0, 0x4014C3);
MakeUnkn(0x4014C4, 1);
MakeNameEx(0x4014C4, "Move52", 0x20);
MakeComm(0x4014C4, "'procedure Move52(const ASource:void ; var ADest:void ; ACount:Integer);'");
MakeCode(0x4014C4);
MakeFunction(0x4014C4, 0x4014ED);
MakeUnkn(0x4014F0, 1);
MakeNameEx(0x4014F0, "Move60", 0x20);
MakeComm(0x4014F0, "'procedure Move60(const ASource:void ; var ADest:void ; ACount:Integer);'");
MakeCode(0x4014F0);
MakeFunction(0x4014F0, 0x40151F);
MakeUnkn(0x401520, 1);
MakeNameEx(0x401520, "Move68", 0x20);
MakeComm(0x401520, "'procedure Move68(const ASource:void ; var ADest:void ; ACount:Integer);'");
MakeCode(0x401520);
MakeFunction(0x401520, 0x401555);
MakeUnkn(0x401558, 1);
MakeNameEx(0x401558, "MoveX16L4", 0x20);
MakeComm(0x401558, "'procedure MoveX16L4(const ASource:void ; var ADest:void ; ACount:Integer);'");
MakeCode(0x401558);
MakeCode(0x401563);
MakeCode(0x401576);
MakeFunction(0x401558, 0x401585);
MakeUnkn(0x401588, 1);
MakeNameEx(0x401588, "MoveX8L4", 0x20);
MakeComm(0x401588, "'procedure MoveX8L4(const ASource:void ; var ADest:void ; ACount:Integer);'");
MakeCode(0x401588);
MakeCode(0x401591);
MakeFunction(0x401588, 0x4015A3);
MakeUnkn(0x4015A4, 1);
MakeNameEx(0x4015A4, "RemoveMediumFreeBlock", 0x20);
MakeComm(0x4015A4, "'procedure RemoveMediumFreeBlock(APMediumFreeBlock:PMediumFreeBlock);'");
MakeCode(0x4015A4);
MakeCode(0x4015B2);
MakeCode(0x4015B4);
MakeFunction(0x4015A4, 0x4015E2);
MakeUnkn(0x4015E4, 1);
MakeNameEx(0x4015E4, "InsertMediumBlockIntoBin", 0x20);
MakeComm(0x4015E4, "'procedure InsertMediumBlockIntoBin(APMediumFreeBlock:PMediumFreeBlock; AMediumBlockSize:Cardinal);'");
MakeCode(0x4015E4);
MakeCode(0x401618);
MakeFunction(0x4015E4, 0x401644);
MakeUnkn(0x401644, 1);
MakeNameEx(0x401644, "BinMediumSequentialFeedRemainder", 0x20);
MakeComm(0x401644, "'procedure BinMediumSequentialFeedRemainder;'");
MakeCode(0x401644);
MakeCode(0x401650);
MakeCode(0x401667);
MakeCode(0x401680);
MakeCode(0x4016A2);
MakeFunction(0x401644, 0x4016AF);
MakeUnkn(0x4016B0, 1);
MakeNameEx(0x4016B0, "AllocNewSequentialFeedMediumPool", 0x20);
MakeComm(0x4016B0, "'function AllocNewSequentialFeedMediumPool(AFirstBlockSize:Cardinal):Pointer;'");
MakeCode(0x4016B0);
MakeCode(0x40171C);
MakeFunction(0x4016B0, 0x401727);
MakeUnkn(0x401728, 1);
MakeNameEx(0x401728, "LockLargeBlocks", 0x20);
MakeComm(0x401728, "'procedure LockLargeBlocks;'");
MakeCode(0x401728);
MakeCode(0x401733);
MakeCode(0x401753);
MakeFunction(0x401728, 0x401766);
MakeUnkn(0x401768, 1);
MakeNameEx(0x401768, "AllocateLargeBlock", 0x20);
MakeComm(0x401768, "'function AllocateLargeBlock(ASize:Cardinal):Pointer;'");
MakeCode(0x401768);
MakeCode(0x4017C3);
MakeFunction(0x401768, 0x4017CA);
MakeUnkn(0x4017CC, 1);
MakeNameEx(0x4017CC, "FreeLargeBlock", 0x20);
MakeComm(0x4017CC, "'function FreeLargeBlock(APointer:Pointer):Integer;'");
MakeCode(0x4017CC);
MakeCode(0x4017FA);
MakeCode(0x4017FD);
MakeFunction(0x4017CC, 0x401808);
MakeUnkn(0x401808, 1);
MakeNameEx(0x401808, "SysGetMem", 0x20);
MakeComm(0x401808, "'function SysGetMem(Size:Integer):Pointer;'");
MakeCode(0x401808);
MakeCode(0x401832);
MakeCode(0x401858);
MakeCode(0x401878);
MakeCode(0x401888);
MakeCode(0x4018D4);
MakeCode(0x4018DF);
MakeCode(0x401910);
MakeCode(0x401960);
MakeCode(0x40198C);
MakeCode(0x4019B0);
MakeCode(0x4019C0);
MakeCode(0x4019DC);
MakeCode(0x4019E1);
MakeCode(0x401A1C);
MakeCode(0x401A4C);
MakeCode(0x401A6A);
MakeCode(0x401A94);
MakeCode(0x401ABC);
MakeCode(0x401AE0);
MakeCode(0x401AE7);
MakeCode(0x401AF0);
MakeCode(0x401B1F);
MakeCode(0x401B4C);
MakeCode(0x401B51);
MakeCode(0x401B64);
MakeFunction(0x401808, 0x401B70);
MakeUnkn(0x4020DC, 1);
MakeNameEx(0x4020DC, "SysAllocMem", 0x20);
MakeComm(0x4020DC, "'function SysAllocMem(Size:Cardinal):Pointer;'");
MakeCode(0x4020DC);
MakeCode(0x4020FE);
MakeCode(0x40210A);
MakeFunction(0x4020DC, 0x40210C);
MakeUnkn(0x40210C, 1);
MakeNameEx(0x40210C, "NextMediumBlock", 0x20);
MakeComm(0x40210C, "'function NextMediumBlock(APMediumBlock:Pointer):Pointer;'");
MakeCode(0x40210C);
MakeFunction(0x40210C, 0x40212D);
MakeUnkn(0x402130, 1);
MakeNameEx(0x402130, "GetFirstMediumBlockInPool", 0x20);
MakeComm(0x402130, "'function GetFirstMediumBlockInPool(APMediumBlockPoolHeader:PMediumBlockPoolHeader):Pointer;'");
MakeCode(0x402130);
MakeCode(0x402153);
MakeCode(0x402157);
MakeCode(0x40216A);
MakeFunction(0x402130, 0x40216D);
MakeUnkn(0x402170, 1);
MakeNameEx(0x402170, "GetFirstAndLastSmallBlockInPool", 0x20);
MakeComm(0x402170, "'procedure GetFirstAndLastSmallBlockInPool(APSmallBlockPool:PSmallBlockPoolHeader; var AFirstPtr:Pointer; var ALastPtr:Pointer);'");
MakeCode(0x402170);
MakeCode(0x402188);
MakeCode(0x4021A1);
MakeFunction(0x402170, 0x4021AA);
MakeUnkn(0x4021AC, 1);
MakeNameEx(0x4021AC, "CardinalToStrBuf", 0x20);
MakeComm(0x4021AC, "'function CardinalToStrBuf(ACardinal:Cardinal; ABuffer:PAnsiChar):PAnsiChar;'");
MakeCode(0x4021AC);
MakeFunction(0x4021AC, 0x4022C5);
MakeUnkn(0x4022C8, 1);
MakeNameEx(0x4022C8, "AppendStringToBuffer", 0x20);
MakeComm(0x4022C8, "'function AppendStringToBuffer(const ASource:PAnsiChar; const ADestination:PAnsiChar; ACount:Cardinal):PAnsiChar;'");
MakeCode(0x4022C8);
MakeFunction(0x4022C8, 0x4022DE);
MakeUnkn(0x4022E0, 1);
MakeNameEx(0x4022E0, "InternalIsValidClass", 0x20);
MakeComm(0x4022E0, "'function InternalIsValidClass(APossibleClass:Pointer; ADepth:Integer):Boolean;'");
MakeCode(0x4022E0);
MakeCode(0x40230A);
MakeCode(0x40231E);
MakeCode(0x402362);
MakeCode(0x402366);
MakeCode(0x402368);
MakeCode(0x40238F);
MakeCode(0x402391);
MakeFunction(0x4022E0, 0x402395);
MakeUnkn(0x402398, 1);
MakeNameEx(0x402398, "GetObjectClass", 0x20);
MakeComm(0x402398, "'function GetObjectClass(APointer:Pointer):TClass;'");
MakeCode(0x402398);
MakeCode(0x4023BD);
MakeCode(0x4023BF);
MakeFunction(0x402398, 0x4023C6);
MakeUnkn(0x4023C8, 1);
MakeNameEx(0x4023C8, "LockExpectedMemoryLeaksList", 0x20);
MakeComm(0x4023C8, "'function LockExpectedMemoryLeaksList:Boolean;'");
MakeCode(0x4023C8);
MakeCode(0x4023D3);
MakeCode(0x4023F3);
MakeCode(0x402405);
MakeCode(0x402426);
MakeFunction(0x4023C8, 0x402431);
MakeUnkn(0x402434, 1);
MakeNameEx(0x402434, "SysRegisterExpectedMemoryLeak", 0x20);
MakeComm(0x402434, "'function SysRegisterExpectedMemoryLeak(P:Pointer):Boolean;'");
MakeCode(0x402434);
MakeCode(0x402469);
MakeCode(0x40246B);
MakeFunction(0x402434, 0x402474);
MakeUnkn(0x402474, 1);
MakeNameEx(0x402474, "SysUnregisterExpectedMemoryLeak", 0x20);
MakeComm(0x402474, "'function SysUnregisterExpectedMemoryLeak(P:Pointer):Boolean;'");
MakeCode(0x402474);
MakeCode(0x40249A);
MakeCode(0x4024B9);
MakeCode(0x4024BD);
MakeCode(0x4024C4);
MakeFunction(0x402474, 0x4024CA);
MakeUnkn(0x4024CC, 1);
MakeNameEx(0x4024CC, "CheckSmallBlockPoolForLeaks", 0x20);
MakeComm(0x4024CC, "'procedure CheckSmallBlockPoolForLeaks(APSmallBlockPool:PSmallBlockPoolHeader);'");
MakeCode(0x4024CC);
MakeCode(0x402506);
MakeCode(0x40258F);
MakeCode(0x4025A5);
MakeCode(0x4025A9);
MakeCode(0x4025AB);
MakeCode(0x4025B6);
MakeCode(0x4025CB);
MakeCode(0x4025D0);
MakeCode(0x4025E4);
MakeCode(0x4025F1);
MakeCode(0x4025F3);
MakeCode(0x4025F7);
MakeCode(0x402603);
MakeFunction(0x4024CC, 0x402616);
MakeUnkn(0x402618, 1);
MakeNameEx(0x402618, "ScanForMemoryLeaks", 0x20);
MakeComm(0x402618, "'procedure ScanForMemoryLeaks;'");
MakeCode(0x402618);
MakeCode(0x402621);
MakeCode(0x402675);
MakeCode(0x402682);
MakeCode(0x4026A4);
MakeCode(0x4026E7);
MakeCode(0x4026F4);
MakeCode(0x4026F7);
MakeCode(0x40270B);
MakeCode(0x40273F);
MakeCode(0x402742);
MakeCode(0x402756);
MakeCode(0x4027A9);
MakeCode(0x4027CF);
MakeCode(0x402809);
MakeCode(0x402861);
MakeCode(0x402869);
MakeCode(0x402874);
MakeCode(0x402889);
MakeCode(0x40289E);
MakeCode(0x4028C2);
MakeCode(0x4028D9);
MakeCode(0x4028E6);
MakeCode(0x402931);
MakeCode(0x402960);
MakeCode(0x402971);
MakeCode(0x402992);
MakeCode(0x4029BB);
MakeFunction(0x402618, 0x4029C2);
MakeUnkn(0x402A90, 1);
MakeNameEx(0x402A90, "BuildBlockTypeLookupTable", 0x20);
MakeComm(0x402A90, "'procedure BuildBlockTypeLookupTable;'");
MakeCode(0x402A90);
MakeCode(0x402A9B);
MakeCode(0x402AA9);
MakeCode(0x402AB9);
MakeCode(0x402AC4);
MakeCode(0x402AC6);
MakeFunction(0x402A90, 0x402AD2);
MakeUnkn(0x402AD4, 1);
MakeNameEx(0x402AD4, "InitializeMemoryManager", 0x20);
MakeComm(0x402AD4, "'procedure InitializeMemoryManager;'");
MakeCode(0x402AD4);
MakeCode(0x402AE1);
MakeCode(0x402AEC);
MakeCode(0x402B28);
MakeCode(0x402B3A);
MakeCode(0x402B79);
MakeCode(0x402B86);
MakeCode(0x402BD4);
MakeFunction(0x402AD4, 0x402BF9);
MakeUnkn(0x402BFC, 1);
MakeNameEx(0x402BFC, "FreeAllMemory", 0x20);
MakeComm(0x402BFC, "'procedure FreeAllMemory;'");
MakeCode(0x402BFC);
MakeCode(0x402C0F);
MakeCode(0x402C21);
MakeCode(0x402C2F);
MakeCode(0x402C5A);
MakeCode(0x402C6C);
MakeCode(0x402C7E);
MakeFunction(0x402BFC, 0x402C8C);
MakeUnkn(0x402C8C, 1);
MakeNameEx(0x402C8C, "FinalizeMemoryManager", 0x20);
MakeComm(0x402C8C, "'procedure FinalizeMemoryManager;'");
MakeCode(0x402C8C);
MakeCode(0x402CA7);
MakeCode(0x402CB5);
MakeCode(0x402CD7);
MakeFunction(0x402C8C, 0x402CDD);
MakeUnkn(0x402CE0, 1);
MakeNameEx(0x402CE0, "AllocMem", 0x20);
MakeComm(0x402CE0, "'function AllocMem(Size:Cardinal):Pointer;'");
MakeCode(0x402CE0);
MakeCode(0x402CEE);
MakeCode(0x402CF0);
MakeFunction(0x402CE0, 0x402CF8);
MakeUnkn(0x402CF8, 1);
MakeNameEx(0x402CF8, "@GetMem", 0x20);
MakeComm(0x402CF8, "'function @GetMem(size:Integer):Pointer;'");
MakeCode(0x402CF8);
MakeCode(0x402D08);
MakeCode(0x402D0F);
MakeFunction(0x402CF8, 0x402D13);
MakeUnkn(0x402D14, 1);
MakeNameEx(0x402D14, "@FreeMem", 0x20);
MakeComm(0x402D14, "'function @FreeMem(p:Pointer):Integer;'");
MakeCode(0x402D14);
MakeCode(0x402D22);
MakeCode(0x402D24);
MakeFunction(0x402D14, 0x402D2C);
MakeUnkn(0x402D2C, 1);
MakeNameEx(0x402D2C, "@ReallocMem", 0x20);
MakeComm(0x402D2C, "'function @ReallocMem(var P:Pointer; NewSize:Integer):Pointer;'");
MakeCode(0x402D2C);
MakeCode(0x402D47);
MakeCode(0x402D4E);
MakeCode(0x402D5D);
MakeCode(0x402D64);
MakeFunction(0x402D2C, 0x402D79);
MakeUnkn(0x402D7C, 1);
MakeNameEx(0x402D7C, "ExceptObject", 0x20);
MakeComm(0x402D7C, "'function ExceptObject:TObject;'");
MakeCode(0x402D7C);
MakeCode(0x402D99);
MakeFunction(0x402D7C, 0x402D9C);
MakeUnkn(0x402D9C, 1);
MakeNameEx(0x402D9C, "ExceptAddr", 0x20);
MakeComm(0x402D9C, "'function ExceptAddr:Pointer;'");
MakeCode(0x402D9C);
MakeCode(0x402DB9);
MakeFunction(0x402D9C, 0x402DBC);
MakeUnkn(0x402DBC, 1);
MakeNameEx(0x402DBC, "AcquireExceptionObject", 0x20);
MakeComm(0x402DBC, "'function AcquireExceptionObject:Pointer;'");
MakeCode(0x402DBC);
MakeCode(0x402DE6);
MakeCode(0x402DE8);
MakeFunction(0x402DBC, 0x402DED);
MakeUnkn(0x402DF0, 1);
MakeNameEx(0x402DF0, "RunErrorAt", 0x20);
MakeComm(0x402DF0, "'procedure RunErrorAt(ErrCode:Integer; ErrorAtAddr:Pointer);'");
MakeCode(0x402DF0);
MakeFunction(0x402DF0, 0x402DFC);
MakeUnkn(0x402DFC, 1);
MakeNameEx(0x402DFC, "ErrorAt", 0x20);
MakeComm(0x402DFC, "'procedure ErrorAt(ErrorCode:Byte; ErrorAddr:Pointer);'");
MakeCode(0x402DFC);
MakeCode(0x402E18);
MakeCode(0x402E29);
MakeCode(0x402E38);
MakeFunction(0x402DFC, 0x402E45);
MakeUnkn(0x402E48, 1);
MakeNameEx(0x402E48, "Error", 0x20);
MakeComm(0x402E48, "'procedure Error(errorCode:TRuntimeError);'");
MakeCode(0x402E48);
MakeFunction(0x402E48, 0x402E54);
MakeUnkn(0x402E54, 1);
MakeNameEx(0x402E54, "@_IOTest", 0x20);
MakeComm(0x402E54, "'procedure @_IOTest;'");
MakeCode(0x402E54);
MakeCode(0x402E69);
MakeFunction(0x402E54, 0x402E71);
MakeUnkn(0x402E74, 1);
MakeNameEx(0x402E74, "SetInOutRes", 0x20);
MakeComm(0x402E74, "'procedure SetInOutRes(NewValue:Integer);'");
MakeCode(0x402E74);
MakeFunction(0x402E74, 0x402E84);
MakeUnkn(0x402E84, 1);
MakeNameEx(0x402E84, "@Copy", 0x20);
MakeComm(0x402E84, "'procedure @Copy(S:ShortString; Index:Integer; Count:Integer; Result:ShortString);'");
MakeCode(0x402E84);
MakeCode(0x402E9A);
MakeCode(0x402EA5);
MakeCode(0x402EAE);
MakeCode(0x402EB5);
MakeCode(0x402EB9);
MakeCode(0x402EBD);
MakeCode(0x402EBF);
MakeFunction(0x402E84, 0x402EC4);
MakeUnkn(0x402EC8, 1);
MakeNameEx(0x402EC8, "IOResult", 0x20);
MakeComm(0x402EC8, "'function IOResult:Integer;'");
MakeCode(0x402EC8);
MakeFunction(0x402EC8, 0x402EE5);
MakeUnkn(0x402EE8, 1);
MakeNameEx(0x402EE8, "Move", 0x20);
MakeComm(0x402EE8, "'procedure Move(const Source:void ; var Dest:void ; Count:Integer);'");
MakeCode(0x402EE8);
MakeCode(0x402EFD);
MakeCode(0x402F15);
MakeCode(0x402F18);
MakeCode(0x402F1D);
MakeCode(0x402F44);
MakeCode(0x402F5C);
MakeCode(0x402F6D);
MakeCode(0x402F8C);
MakeFunction(0x402EE8, 0x402F9E);
MakeUnkn(0x402FE8, 1);
MakeNameEx(0x402FE8, "GetParamStr", 0x20);
MakeComm(0x402FE8, "'function GetParamStr(P:PAnsiChar; var Param:AnsiString):PAnsiChar;'");
MakeCode(0x402FE8);
MakeCode(0x402FF3);
MakeCode(0x402FFB);
MakeCode(0x403005);
MakeCode(0x403015);
MakeCode(0x40301C);
MakeCode(0x40302B);
MakeCode(0x40303B);
MakeCode(0x403045);
MakeCode(0x403054);
MakeCode(0x403064);
MakeCode(0x40307B);
MakeCode(0x40308A);
MakeCode(0x403096);
MakeCode(0x4030A3);
MakeCode(0x4030AD);
MakeCode(0x4030BC);
MakeCode(0x4030C8);
MakeCode(0x4030D5);
MakeFunction(0x402FE8, 0x4030E2);
MakeUnkn(0x4030E4, 1);
MakeNameEx(0x4030E4, "ParamStr", 0x20);
MakeComm(0x4030E4, "'function ParamStr(Index:Integer):string;'");
MakeCode(0x4030E4);
MakeCode(0x40311A);
MakeCode(0x403121);
MakeCode(0x403138);
MakeFunction(0x4030E4, 0x403142);
MakeUnkn(0x403144, 1);
MakeNameEx(0x403144, "Randomize", 0x20);
MakeComm(0x403144, "'procedure Randomize;'");
MakeCode(0x403144);
MakeCode(0x40315C);
MakeFunction(0x403144, 0x403169);
MakeUnkn(0x40316C, 1);
MakeNameEx(0x40316C, "Random", 0x20);
MakeComm(0x40316C, "'function Random(const ARange:Integer):Integer;'");
MakeCode(0x40316C);
MakeFunction(0x40316C, 0x403186);
MakeUnkn(0x403188, 1);
MakeNameEx(0x403188, "UpCase", 0x20);
MakeComm(0x403188, "'function UpCase(Ch:Char):Char;'");
MakeCode(0x403188);
MakeFunction(0x403188, 0x403193);
MakeUnkn(0x403194, 1);
MakeNameEx(0x403194, "Set8087CW", 0x20);
MakeComm(0x403194, "'procedure Set8087CW(NewCW:Word);'");
MakeCode(0x403194);
MakeFunction(0x403194, 0x4031A3);
MakeUnkn(0x4031A4, 1);
MakeNameEx(0x4031A4, "Get8087CW", 0x20);
MakeComm(0x4031A4, "'function Get8087CW:Word;'");
MakeCode(0x4031A4);
MakeFunction(0x4031A4, 0x4031AB);
MakeUnkn(0x4031AC, 1);
MakeNameEx(0x4031AC, "@ROUND", 0x20);
MakeComm(0x4031AC, "'procedure @ROUND;'");
MakeCode(0x4031AC);
MakeFunction(0x4031AC, 0x4031B6);
MakeUnkn(0x4031B8, 1);
MakeNameEx(0x4031B8, "@TRUNC", 0x20);
MakeComm(0x4031B8, "'function @TRUNC(X:Extended):Int64;'");
MakeCode(0x4031B8);
MakeFunction(0x4031B8, 0x4031DA);
MakeUnkn(0x4031DC, 1);
MakeNameEx(0x4031DC, "@AbstractError", 0x20);
MakeComm(0x4031DC, "'procedure @AbstractError;'");
MakeCode(0x4031DC);
MakeCode(0x4031EB);
MakeFunction(0x4031DC, 0x4031F6);
MakeUnkn(0x4031F8, 1);
MakeNameEx(0x4031F8, "OpenText", 0x20);
MakeComm(0x4031F8, "'function OpenText(var t:TTextRec; Mode:Word):Integer;'");
MakeCode(0x4031F8);
MakeCode(0x40320E);
MakeCode(0x403215);
MakeCode(0x403222);
MakeCode(0x403239);
MakeCode(0x403240);
MakeCode(0x40324B);
MakeFunction(0x4031F8, 0x403250);
MakeUnkn(0x403250, 1);
MakeNameEx(0x403250, "@RewritText", 0x20);
MakeComm(0x403250, "'function @RewritText(var T:TTextRec):Integer;'");
MakeCode(0x403250);
MakeFunction(0x403250, 0x40325A);
MakeUnkn(0x40325C, 1);
MakeNameEx(0x40325C, "TextIn", 0x20);
MakeComm(0x40325C, "'function TextIn(var t:TTextRec):Integer;'");
MakeCode(0x40325C);
MakeCode(0x403291);
MakeCode(0x403293);
MakeFunction(0x40325C, 0x403295);
MakeUnkn(0x403298, 1);
MakeNameEx(0x403298, "FileNOPProc", 0x20);
MakeComm(0x403298, "'function FileNOPProc(var t:void ):Integer;'");
MakeCode(0x403298);
MakeFunction(0x403298, 0x40329B);
MakeUnkn(0x40329C, 1);
MakeNameEx(0x40329C, "TextOut", 0x20);
MakeComm(0x40329C, "'function TextOut(var t:TTextRec):Integer;'");
MakeCode(0x40329C);
MakeCode(0x4032AC);
MakeCode(0x4032CB);
MakeCode(0x4032CD);
MakeCode(0x4032D2);
MakeFunction(0x40329C, 0x4032D6);
MakeUnkn(0x4032D8, 1);
MakeNameEx(0x4032D8, "InternalClose", 0x20);
MakeComm(0x4032D8, "'function InternalClose(Handle:Integer):Boolean;'");
MakeCode(0x4032D8);
MakeFunction(0x4032D8, 0x4032E7);
MakeUnkn(0x4032E8, 1);
MakeNameEx(0x4032E8, "TextClose", 0x20);
MakeComm(0x4032E8, "'function TextClose(var t:TTextRec):Integer;'");
MakeCode(0x4032E8);
MakeCode(0x403303);
MakeFunction(0x4032E8, 0x403307);
MakeUnkn(0x403308, 1);
MakeNameEx(0x403308, "TextOpen", 0x20);
MakeComm(0x403308, "'function TextOpen(var t:TTextRec):Integer;'");
MakeCode(0x403308);
MakeCode(0x403329);
MakeCode(0x403341);
MakeCode(0x403352);
MakeCode(0x403361);
MakeCode(0x403368);
MakeCode(0x4033C9);
MakeCode(0x403400);
MakeCode(0x403411);
MakeCode(0x403432);
MakeCode(0x403455);
MakeCode(0x403461);
MakeCode(0x403463);
MakeCode(0x40346F);
MakeCode(0x40348E);
MakeCode(0x403490);
MakeCode(0x403492);
MakeCode(0x4034A6);
MakeFunction(0x403308, 0x4034B4);
MakeUnkn(0x4034B4, 1);
MakeNameEx(0x4034B4, "@Assign", 0x20);
MakeComm(0x4034B4, "'function @Assign(var F:TFileRec; S:String):Integer;'");
MakeCode(0x4034B4);
MakeFunction(0x4034B4, 0x403519);
MakeUnkn(0x40351C, 1);
MakeNameEx(0x40351C, "InternalFlush", 0x20);
MakeComm(0x40351C, "'function InternalFlush(var t:TTextRec; Func:TTextIOFunc):Integer;'");
MakeCode(0x40351C);
MakeCode(0x403537);
MakeCode(0x40353B);
MakeCode(0x403549);
MakeCode(0x40354D);
MakeCode(0x403552);
MakeCode(0x40355D);
MakeFunction(0x40351C, 0x403561);
MakeUnkn(0x403564, 1);
MakeNameEx(0x403564, "Flush", 0x20);
MakeComm(0x403564, "'function Flush(var t:Text):Integer;'");
MakeCode(0x403564);
MakeFunction(0x403564, 0x40356D);
MakeUnkn(0x403570, 1);
MakeNameEx(0x403570, "@Flush", 0x20);
MakeComm(0x403570, "'procedure @Flush(var F:TFileRec);'");
MakeCode(0x403570);
MakeFunction(0x403570, 0x403579);
MakeUnkn(0x40357C, 1);
MakeNameEx(0x40357C, "@Close", 0x20);
MakeComm(0x40357C, "'procedure @Close(var F:TFileRec);'");
MakeCode(0x40357C);
MakeCode(0x4035A3);
MakeCode(0x4035AE);
MakeCode(0x4035BB);
MakeCode(0x4035CD);
MakeFunction(0x40357C, 0x4035D2);
MakeUnkn(0x4035D4, 1);
MakeNameEx(0x4035D4, "@PStrNCat", 0x20);
MakeComm(0x4035D4, "'procedure @PStrNCat(Dest:PShortString; Source:PShortString; MaxLen:Byte);'");
MakeCode(0x4035D4);
MakeCode(0x4035EB);
MakeCode(0x4035F6);
MakeCode(0x4035F9);
MakeFunction(0x4035D4, 0x403604);
MakeUnkn(0x403604, 1);
MakeNameEx(0x403604, "@PStrCpy", 0x20);
MakeComm(0x403604, "'procedure @PStrCpy(Dest:PShortString; Source:PShortString);'");
MakeCode(0x403604);
MakeFunction(0x403604, 0x40360F);
MakeUnkn(0x403610, 1);
MakeNameEx(0x403610, "@PStrNCpy", 0x20);
MakeComm(0x403610, "'procedure @PStrNCpy(Dest:PShortString; Source:PShortString; MaxLen:Byte);'");
MakeCode(0x403610);
MakeCode(0x40361A);
MakeFunction(0x403610, 0x403629);
MakeUnkn(0x40362C, 1);
MakeNameEx(0x40362C, "@PStrCmp", 0x20);
MakeComm(0x40362C, "'procedure @PStrCmp(S1:PShortString; S2:PShortString);'");
MakeCode(0x40362C);
MakeCode(0x403643);
MakeCode(0x403649);
MakeCode(0x403669);
MakeCode(0x40366F);
MakeCode(0x403691);
MakeCode(0x403695);
MakeCode(0x4036AA);
MakeFunction(0x40362C, 0x4036AE);
MakeUnkn(0x4036B0, 1);
MakeNameEx(0x4036B0, "@AStrCmp", 0x20);
MakeComm(0x4036B0, "'procedure @AStrCmp(S1:PShortString; S2:PShortString; Bytes:Integer);'");
MakeCode(0x4036B0);
MakeCode(0x4036BA);
MakeCode(0x4036DA);
MakeCode(0x4036E0);
MakeCode(0x403702);
MakeCode(0x403707);
MakeCode(0x40371C);
MakeFunction(0x4036B0, 0x40371F);
MakeUnkn(0x403720, 1);
MakeNameEx(0x403720, "@FillChar", 0x20);
MakeComm(0x403720, "'procedure @FillChar(var dst:Pointer; cnt:Integer; val:Char);'");
MakeCode(0x403720);
MakeCode(0x403752);
MakeCode(0x403764);
MakeFunction(0x403720, 0x4037B9);
MakeUnkn(0x4037BC, 1);
MakeNameEx(0x4037BC, "@ValLong", 0x20);
MakeComm(0x4037BC, "'function @ValLong(s:AnsiString; var code:Integer):Longint;'");
MakeCode(0x4037BC);
MakeCode(0x4037CF);
MakeCode(0x4037E3);
MakeCode(0x40380A);
MakeCode(0x40380E);
MakeCode(0x403828);
MakeCode(0x403832);
MakeCode(0x403835);
MakeCode(0x40383B);
MakeCode(0x403840);
MakeCode(0x403842);
MakeCode(0x403847);
MakeCode(0x403853);
MakeCode(0x40385B);
MakeCode(0x40386E);
MakeCode(0x403884);
MakeCode(0x403887);
MakeFunction(0x4037BC, 0x40388D);
MakeUnkn(0x403890, 1);
MakeNameEx(0x403890, "TryOpenForOutput", 0x20);
MakeComm(0x403890, "'function TryOpenForOutput(var t:TTextRec):Boolean;'");
MakeCode(0x403890);
MakeCode(0x4038A3);
MakeCode(0x4038B5);
MakeCode(0x4038CE);
MakeFunction(0x403890, 0x4038D2);
MakeUnkn(0x4038D4, 1);
MakeNameEx(0x4038D4, "@WriteBytes", 0x20);
MakeComm(0x4038D4, "'function @WriteBytes(var t:TTextRec; const b:void ; cnt:Integer):Pointer;'");
MakeCode(0x4038D4);
MakeCode(0x4038EF);
MakeCode(0x403915);
MakeCode(0x40391F);
MakeCode(0x403924);
MakeFunction(0x4038D4, 0x403927);
MakeUnkn(0x403928, 1);
MakeNameEx(0x403928, "@WriteSpaces", 0x20);
MakeComm(0x403928, "'function @WriteSpaces(var t:TTextRec; cnt:Integer):Pointer;'");
MakeCode(0x403928);
MakeCode(0x40392A);
MakeCode(0x403955);
MakeCode(0x403998);
MakeFunction(0x403928, 0x4039A1);
MakeUnkn(0x4039A4, 1);
MakeNameEx(0x4039A4, "@Write0Char", 0x20);
MakeComm(0x4039A4, "'procedure @Write0Char(var T:TTextRec; C:AnsiChar);'");
MakeCode(0x4039A4);
MakeCode(0x4039BA);
MakeCode(0x4039C7);
MakeCode(0x4039CF);
MakeFunction(0x4039A4, 0x4039E0);
MakeUnkn(0x4039E0, 1);
MakeNameEx(0x4039E0, "@WriteLn", 0x20);
MakeComm(0x4039E0, "'procedure @WriteLn(var T:TTextRec);'");
MakeCode(0x4039E0);
MakeCode(0x403A06);
MakeCode(0x403A1A);
MakeFunction(0x4039E0, 0x403A27);
MakeUnkn(0x403A28, 1);
MakeNameEx(0x403A28, "@_CToPasStr", 0x20);
MakeComm(0x403A28, "'procedure @_CToPasStr(Dest:PShortString; const Source:PAnsiChar);'");
MakeCode(0x403A28);
MakeFunction(0x403A28, 0x403A33);
MakeUnkn(0x403A34, 1);
MakeNameEx(0x403A34, "@_CLenToPasStr", 0x20);
MakeComm(0x403A34, "'procedure @_CLenToPasStr(Dest:PShortString; const Source:PAnsiChar; MaxLen:Integer);'");
MakeCode(0x403A34);
MakeCode(0x403A43);
MakeCode(0x403A50);
MakeFunction(0x403A34, 0x403A57);
MakeUnkn(0x403A58, 1);
MakeNameEx(0x403A58, "FPower10", 0x20);
MakeComm(0x403A58, "'procedure FPower10;'");
MakeCode(0x403A58);
MakeFunction(0x403A58, 0x403A5E);
MakeUnkn(0x403A60, 1);
MakeNameEx(0x403A60, "@Pow10", 0x20);
MakeComm(0x403A60, "'procedure @Pow10;'");
MakeCode(0x403A60);
MakeCode(0x403AA1);
MakeCode(0x403AB4);
MakeCode(0x403AE6);
MakeCode(0x403AF9);
MakeCode(0x403B03);
MakeCode(0x403B07);
MakeFunction(0x403A60, 0x403B09);
MakeUnkn(0x403D44, 1);
MakeNameEx(0x403D44, "user32.GetKeyboardType", 0x20);
MakeComm(0x403D44, "'function user32.GetKeyboardType:Integer; stdcall;'");
MakeCode(0x403D44);
MakeFunction(0x403D44, 0x403D4A);
MakeUnkn(0x403D4C, 1);
MakeNameEx(0x403D4C, "@isNECWindows", 0x20);
MakeComm(0x403D4C, "'function @isNECWindows:Boolean;'");
MakeCode(0x403D4C);
MakeCode(0x403D75);
MakeCode(0x403D77);
MakeFunction(0x403D4C, 0x403D7B);
MakeUnkn(0x403D7C, 1);
MakeNameEx(0x403D7C, "@FpuMaskInit", 0x20);
MakeComm(0x403D7C, "'procedure @FpuMaskInit;'");
MakeCode(0x403D7C);
MakeCode(0x403DD6);
MakeCode(0x403DE3);
MakeCode(0x403DED);
MakeCode(0x403DF2);
MakeCode(0x403DF4);
MakeFunction(0x403D7C, 0x403E14);
MakeUnkn(0x403E40, 1);
MakeNameEx(0x403E40, "@FpuInit", 0x20);
MakeComm(0x403E40, "'procedure @FpuInit;'");
MakeCode(0x403E40);
MakeFunction(0x403E40, 0x403E4A);
MakeUnkn(0x403E4C, 1);
MakeNameEx(0x403E4C, "@BoundErr", 0x20);
MakeComm(0x403E4C, "'procedure @BoundErr;'");
MakeCode(0x403E4C);
MakeFunction(0x403E4C, 0x403E54);
MakeUnkn(0x403E54, 1);
MakeNameEx(0x403E54, "TObject.ClassType", 0x20);
MakeComm(0x403E54, "'function TObject.ClassType:TClass;'");
MakeCode(0x403E54);
MakeFunction(0x403E54, 0x403E5B);
MakeUnkn(0x403E5C, 1);
MakeNameEx(0x403E5C, "TObject.ClassName", 0x20);
MakeComm(0x403E5C, "'function TObject.ClassName:ShortString;'");
MakeCode(0x403E5C);
MakeFunction(0x403E5C, 0x403E6D);
MakeUnkn(0x403E70, 1);
MakeNameEx(0x403E70, "TObject.ClassNameIs", 0x20);
MakeComm(0x403E70, "'function TObject.ClassNameIs(const Name:AnsiString):Boolean;'");
MakeCode(0x403E70);
MakeCode(0x403EE1);
MakeCode(0x403EEE);
MakeCode(0x403EF7);
MakeCode(0x403EFC);
MakeFunction(0x403E70, 0x403F06);
MakeUnkn(0x403F08, 1);
MakeNameEx(0x403F08, "TObject.ClassParent", 0x20);
MakeComm(0x403F08, "'function TObject.ClassParent:TClass;'");
MakeCode(0x403F08);
MakeFunction(0x403F08, 0x403F12);
MakeUnkn(0x403F14, 1);
MakeNameEx(0x403F14, "TObject.NewInstance", 0x20);
MakeComm(0x403F14, "'function TObject.NewInstance:TObject;'");
MakeCode(0x403F14);
MakeFunction(0x403F14, 0x403F2E);
MakeUnkn(0x403F30, 1);
MakeNameEx(0x403F30, "TObject.FreeInstance", 0x20);
MakeComm(0x403F30, "'procedure TObject.FreeInstance;'");
MakeCode(0x403F30);
MakeFunction(0x403F30, 0x403F43);
MakeUnkn(0x403F44, 1);
MakeNameEx(0x403F44, "TObject.InstanceSize", 0x20);
MakeComm(0x403F44, "'function TObject.InstanceSize:Integer;'");
MakeCode(0x403F44);
MakeFunction(0x403F44, 0x403F4A);
MakeUnkn(0x403F4C, 1);
MakeNameEx(0x403F4C, "TObject.Create", 0x20);
MakeComm(0x403F4C, "'constructor TObject.Create;'");
MakeCode(0x403F4C);
MakeCode(0x403F58);
MakeFunction(0x403F4C, 0x403F6C);
MakeUnkn(0x403F6C, 1);
MakeNameEx(0x403F6C, "TObject.Destroy", 0x20);
MakeComm(0x403F6C, "'destructor TObject.Destroy;'");
MakeCode(0x403F6C);
MakeFunction(0x403F6C, 0x403F7B);
MakeUnkn(0x403F7C, 1);
MakeNameEx(0x403F7C, "TObject.Free", 0x20);
MakeComm(0x403F7C, "'procedure TObject.Free;'");
MakeCode(0x403F7C);
MakeFunction(0x403F7C, 0x403F88);
MakeUnkn(0x403F88, 1);
MakeNameEx(0x403F88, "TObject.InitInstance", 0x20);
MakeComm(0x403F88, "'function TObject.InitInstance(Instance:Pointer):TObject;'");
MakeCode(0x403F88);
MakeCode(0x403FA6);
MakeCode(0x403FAE);
MakeCode(0x403FB9);
MakeCode(0x403FBD);
MakeCode(0x403FC3);
MakeCode(0x403FD0);
MakeCode(0x403FDA);
MakeFunction(0x403F88, 0x403FDE);
MakeUnkn(0x403FE0, 1);
MakeNameEx(0x403FE0, "TObject.CleanupInstance", 0x20);
MakeComm(0x403FE0, "'procedure TObject.CleanupInstance;'");
MakeCode(0x403FE0);
MakeCode(0x403FE6);
MakeCode(0x403FF9);
MakeFunction(0x403FE0, 0x404000);
MakeUnkn(0x404000, 1);
MakeNameEx(0x404000, "InvokeImplGetter", 0x20);
MakeComm(0x404000, "'function InvokeImplGetter(Self:TObject; ImplGetter:Cardinal):IInterface;'");
MakeCode(0x404000);
MakeCode(0x404019);
MakeCode(0x40401B);
MakeFunction(0x404000, 0x40402D);
MakeUnkn(0x404030, 1);
MakeNameEx(0x404030, "TObject.GetInterface", 0x20);
MakeComm(0x404030, "'function TObject.GetInterface(const IID:TGUID; var Obj:void ):Boolean;'");
MakeCode(0x404030);
MakeCode(0x404081);
MakeCode(0x404098);
MakeCode(0x40409E);
MakeCode(0x4040AB);
MakeCode(0x4040B4);
MakeCode(0x4040B9);
MakeFunction(0x404030, 0x4040C4);
MakeUnkn(0x4040C4, 1);
MakeNameEx(0x4040C4, "TObject.GetInterfaceEntry", 0x20);
MakeComm(0x4040C4, "'function TObject.GetInterfaceEntry(const IID:TGUID):PInterfaceEntry;'");
MakeCode(0x4040C4);
MakeCode(0x4040C8);
MakeCode(0x4040D4);
MakeCode(0x4040F2);
MakeCode(0x4040F8);
MakeCode(0x404103);
MakeCode(0x404105);
MakeFunction(0x4040C4, 0x404108);
MakeUnkn(0x404108, 1);
MakeNameEx(0x404108, "@IsClass", 0x20);
MakeComm(0x404108, "'function @IsClass(Child:TObject; Parent:TClass):Boolean;'");
MakeCode(0x404108);
MakeCode(0x40411F);
MakeCode(0x404124);
MakeFunction(0x404108, 0x404129);
MakeUnkn(0x40412C, 1);
MakeNameEx(0x40412C, "@AsClass", 0x20);
MakeComm(0x40412C, "'function @AsClass(child:TObject; parent:TClass):TObject;'");
MakeCode(0x40412C);
MakeCode(0x404132);
MakeFunction(0x40412C, 0x404147);
MakeUnkn(0x404148, 1);
MakeNameEx(0x404148, "GetDynaMethod", 0x20);
MakeComm(0x404148, "'procedure GetDynaMethod;'");
MakeCode(0x404148);
MakeCode(0x40414C);
MakeCode(0x40414E);
MakeCode(0x404162);
MakeCode(0x40416B);
MakeFunction(0x404148, 0x404176);
MakeUnkn(0x404178, 1);
MakeNameEx(0x404178, "@CallDynaInst", 0x20);
MakeComm(0x404178, "'procedure @CallDynaInst;'");
MakeCode(0x404178);
MakeCode(0x404187);
MakeFunction(0x404178, 0x40418E);
MakeUnkn(0x404190, 1);
MakeNameEx(0x404190, "@FindDynaInst", 0x20);
MakeComm(0x404190, "'procedure @FindDynaInst;'");
MakeCode(0x404190);
MakeFunction(0x404190, 0x4041A6);
MakeUnkn(0x4041A8, 1);
MakeNameEx(0x4041A8, "TObject.InheritsFrom", 0x20);
MakeComm(0x4041A8, "'function TObject.InheritsFrom(AClass:TClass):Boolean;'");
MakeCode(0x4041A8);
MakeFunction(0x4041A8, 0x4041BB);
MakeUnkn(0x4041BC, 1);
MakeNameEx(0x4041BC, "TObject.ClassInfo", 0x20);
MakeComm(0x4041BC, "'function TObject.ClassInfo:Pointer;'");
MakeCode(0x4041BC);
MakeFunction(0x4041BC, 0x4041C2);
MakeUnkn(0x4041C4, 1);
MakeNameEx(0x4041C4, "TObject.SafeCallException", 0x20);
MakeComm(0x4041C4, "'function TObject.SafeCallException(ExceptObject:TObject; ExceptAddr:Pointer):HRESULT;'");
MakeCode(0x4041C4);
MakeFunction(0x4041C4, 0x4041CA);
MakeUnkn(0x4041CC, 1);
MakeNameEx(0x4041CC, "TObject.DefaultHandler", 0x20);
MakeComm(0x4041CC, "'procedure TObject.DefaultHandler(var Message:void );'");
MakeCode(0x4041CC);
MakeFunction(0x4041CC, 0x4041CD);
MakeUnkn(0x4041D0, 1);
MakeNameEx(0x4041D0, "TObject.AfterConstruction", 0x20);
MakeComm(0x4041D0, "'procedure TObject.AfterConstruction;'");
MakeCode(0x4041D0);
MakeFunction(0x4041D0, 0x4041D1);
MakeUnkn(0x4041D4, 1);
MakeNameEx(0x4041D4, "TCustomVariantType.BeforeDestruction", 0x20);
MakeComm(0x4041D4, "'procedure TCustomVariantType.BeforeDestruction;'");
MakeCode(0x4041D4);
MakeFunction(0x4041D4, 0x4041D5);
MakeUnkn(0x4041D8, 1);
MakeNameEx(0x4041D8, "TObject.Dispatch", 0x20);
MakeComm(0x4041D8, "'procedure TObject.Dispatch(var Message:void );'");
MakeCode(0x4041D8);
MakeCode(0x4041F8);
MakeFunction(0x4041D8, 0x4041FF);
MakeUnkn(0x404200, 1);
MakeNameEx(0x404200, "TObject.MethodAddress", 0x20);
MakeComm(0x404200, "'function TObject.MethodAddress(const Name:ShortString):Pointer;'");
MakeCode(0x404200);
MakeCode(0x40420B);
MakeCode(0x40420D);
MakeCode(0x40421A);
MakeCode(0x404221);
MakeCode(0x404229);
MakeCode(0x404232);
MakeCode(0x404236);
MakeCode(0x404238);
MakeCode(0x40424A);
MakeFunction(0x404200, 0x40424E);
MakeUnkn(0x404250, 1);
MakeNameEx(0x404250, "TObject.FieldAddress", 0x20);
MakeComm(0x404250, "'function TObject.FieldAddress(const Name:ShortString):Pointer;'");
MakeCode(0x404250);
MakeCode(0x40425A);
MakeCode(0x404269);
MakeCode(0x404270);
MakeCode(0x404277);
MakeCode(0x404281);
MakeCode(0x404288);
MakeCode(0x40429C);
MakeFunction(0x404250, 0x4042A0);
MakeUnkn(0x4042A0, 1);
MakeNameEx(0x4042A0, "@ClassCreate", 0x20);
MakeComm(0x4042A0, "'function @ClassCreate(AClass:TClass; Alloc:Boolean):TObject;'");
MakeCode(0x4042A0);
MakeCode(0x4042AA);
MakeFunction(0x4042A0, 0x4042C9);
MakeUnkn(0x4042F0, 1);
MakeNameEx(0x4042F0, "@ClassDestroy", 0x20);
MakeComm(0x4042F0, "'procedure @ClassDestroy(Instance:TObject);'");
MakeCode(0x4042F0);
MakeFunction(0x4042F0, 0x4042F6);
MakeUnkn(0x4042F8, 1);
MakeNameEx(0x4042F8, "@AfterConstruction", 0x20);
MakeComm(0x4042F8, "'function @AfterConstruction(Instance:TObject):TObject;'");
MakeCode(0x4042F8);
MakeCode(0x404327);
MakeCode(0x404340);
MakeFunction(0x4042F8, 0x404346);
MakeUnkn(0x404348, 1);
MakeNameEx(0x404348, "@BeforeDestruction", 0x20);
MakeComm(0x404348, "'function @BeforeDestruction(Instance:TObject; OuterMost:Shortint):TObject;'");
MakeCode(0x404348);
MakeCode(0x40434D);
MakeFunction(0x404348, 0x404357);
MakeUnkn(0x404358, 1);
MakeNameEx(0x404358, "NotifyReRaise", 0x20);
MakeComm(0x404358, "'procedure NotifyReRaise;'");
MakeCode(0x404358);
MakeFunction(0x404358, 0x404373);
MakeUnkn(0x404374, 1);
MakeNameEx(0x404374, "NotifyNonDelphiException", 0x20);
MakeComm(0x404374, "'procedure NotifyNonDelphiException;'");
MakeCode(0x404374);
MakeFunction(0x404374, 0x404395);
MakeUnkn(0x404398, 1);
MakeNameEx(0x404398, "NotifyExcept", 0x20);
MakeComm(0x404398, "'procedure NotifyExcept;'");
MakeCode(0x404398);
MakeFunction(0x404398, 0x4043AD);
MakeUnkn(0x4043B0, 1);
MakeNameEx(0x4043B0, "NotifyOnExcept", 0x20);
MakeComm(0x4043B0, "'procedure NotifyOnExcept;'");
MakeCode(0x4043B0);
MakeFunction(0x4043B0, 0x4043C3);
MakeUnkn(0x4043C4, 1);
MakeNameEx(0x4043C4, "NotifyAnyExcept", 0x20);
MakeComm(0x4043C4, "'procedure NotifyAnyExcept;'");
MakeCode(0x4043C4);
MakeFunction(0x4043C4, 0x4043D5);
MakeUnkn(0x4043D8, 1);
MakeNameEx(0x4043D8, "CheckJmp", 0x20);
MakeComm(0x4043D8, "'procedure CheckJmp;'");
MakeCode(0x4043D8);
MakeCode(0x4043F0);
MakeCode(0x4043F3);
MakeFunction(0x4043D8, 0x4043F6);
MakeUnkn(0x4043F8, 1);
MakeNameEx(0x4043F8, "NotifyExceptFinally", 0x20);
MakeComm(0x4043F8, "'procedure NotifyExceptFinally;'");
MakeCode(0x4043F8);
MakeFunction(0x4043F8, 0x40441F);
MakeUnkn(0x404420, 1);
MakeNameEx(0x404420, "NotifyTerminate", 0x20);
MakeComm(0x404420, "'procedure NotifyTerminate;'");
MakeCode(0x404420);
MakeFunction(0x404420, 0x40443C);
MakeUnkn(0x40443C, 1);
MakeNameEx(0x40443C, "NotifyUnhandled", 0x20);
MakeComm(0x40443C, "'procedure NotifyUnhandled;'");
MakeCode(0x40443C);
MakeCode(0x404457);
MakeFunction(0x40443C, 0x40445A);
MakeUnkn(0x40445C, 1);
MakeNameEx(0x40445C, "@HandleAnyException", 0x20);
MakeComm(0x40445C, "'procedure @HandleAnyException;'");
MakeCode(0x40445C);
MakeCode(0x4044E0);
MakeCode(0x4044E9);
MakeCode(0x404510);
MakeCode(0x404580);
MakeFunction(0x40445C, 0x404586);
MakeUnkn(0x404588, 1);
MakeNameEx(0x404588, "@HandleOnException", 0x20);
MakeComm(0x404588, "'procedure @HandleOnException;'");
MakeCode(0x404588);
MakeCode(0x4045C0);
MakeCode(0x4045C5);
MakeCode(0x4045D8);
MakeCode(0x4045E2);
MakeCode(0x4045E4);
MakeCode(0x404609);
MakeCode(0x404621);
MakeCode(0x404669);
MakeCode(0x404674);
MakeCode(0x40469B);
MakeCode(0x404708);
MakeFunction(0x404588, 0x40470E);
MakeUnkn(0x404710, 1);
MakeNameEx(0x404710, "@HandleFinally", 0x20);
MakeComm(0x404710, "'procedure @HandleFinally;'");
MakeCode(0x404710);
MakeCode(0x4047B0);
MakeFunction(0x404710, 0x4047B6);
MakeUnkn(0x4047B8, 1);
MakeNameEx(0x4047B8, "@HandleFinallyInternal", 0x20);
MakeComm(0x4047B8, "'procedure @HandleFinallyInternal;'");
MakeCode(0x4047B8);
MakeCode(0x4047E8);
MakeFunction(0x4047B8, 0x4047EE);
MakeUnkn(0x4047F0, 1);
MakeNameEx(0x4047F0, "@RaiseExcept", 0x20);
MakeComm(0x4047F0, "'procedure @RaiseExcept;'");
MakeCode(0x4047F0);
MakeCode(0x4047FE);
MakeFunction(0x4047F0, 0x404818);
MakeUnkn(0x404818, 1);
MakeNameEx(0x404818, "@RaiseAgain", 0x20);
MakeComm(0x404818, "'procedure @RaiseAgain;'");
MakeCode(0x404818);
MakeCode(0x404852);
MakeFunction(0x404818, 0x404869);
MakeUnkn(0x40486C, 1);
MakeNameEx(0x40486C, "@DoneExcept", 0x20);
MakeComm(0x40486C, "'procedure @DoneExcept;'");
MakeCode(0x40486C);
MakeFunction(0x40486C, 0x40489C);
MakeUnkn(0x40489C, 1);
MakeNameEx(0x40489C, "@TryFinallyExit", 0x20);
MakeComm(0x40489C, "'procedure @TryFinallyExit;'");
MakeCode(0x40489C);
MakeFunction(0x40489C, 0x4048B1);
MakeUnkn(0x4048B4, 1);
MakeNameEx(0x4048B4, "MapToRunError", 0x20);
MakeComm(0x4048B4, "'procedure MapToRunError(P:PExceptionRecord); stdcall;'");
MakeCode(0x4048B4);
MakeCode(0x4048E1);
MakeCode(0x4048EF);
MakeCode(0x404907);
MakeCode(0x404915);
MakeCode(0x404919);
MakeCode(0x40491D);
MakeCode(0x404921);
MakeCode(0x404925);
MakeCode(0x404929);
MakeCode(0x40492D);
MakeCode(0x404931);
MakeCode(0x404935);
MakeCode(0x404939);
MakeCode(0x40493D);
MakeCode(0x404941);
MakeCode(0x404943);
MakeFunction(0x4048B4, 0x404952);
MakeUnkn(0x404954, 1);
MakeNameEx(0x404954, "@ExceptionHandler", 0x20);
MakeComm(0x404954, "'procedure @ExceptionHandler;'");
MakeCode(0x404954);
MakeCode(0x40497D);
MakeCode(0x4049C9);
MakeCode(0x4049DA);
MakeCode(0x4049EE);
MakeFunction(0x404954, 0x4049F1);
MakeUnkn(0x4049F4, 1);
MakeNameEx(0x4049F4, "SetExceptionHandler", 0x20);
MakeComm(0x4049F4, "'procedure SetExceptionHandler;'");
MakeCode(0x4049F4);
MakeFunction(0x4049F4, 0x404A11);
MakeUnkn(0x404A14, 1);
MakeNameEx(0x404A14, "UnsetExceptionHandler", 0x20);
MakeComm(0x404A14, "'procedure UnsetExceptionHandler;'");
MakeCode(0x404A14);
MakeCode(0x404A2C);
MakeCode(0x404A2E);
MakeFunction(0x404A14, 0x404A3C);
MakeUnkn(0x404A3C, 1);
MakeNameEx(0x404A3C, "FinalizeUnits", 0x20);
MakeComm(0x404A3C, "'procedure FinalizeUnits;'");
MakeCode(0x404A3C);
MakeFunction(0x404A3C, 0x404A9E);
MakeUnkn(0x404AA0, 1);
MakeNameEx(0x404AA0, "InitUnits", 0x20);
MakeComm(0x404AA0, "'procedure InitUnits;'");
MakeCode(0x404AA0);
MakeCode(0x404ACC);
MakeCode(0x404ADF);
MakeCode(0x404AE3);
MakeCode(0x404AED);
MakeCode(0x404B01);
MakeFunction(0x404AA0, 0x404B07);
MakeUnkn(0x404B08, 1);
MakeNameEx(0x404B08, "@StartExe", 0x20);
MakeComm(0x404B08, "'procedure @StartExe(InitTable:PackageInfo; Module:PLibModule);'");
MakeCode(0x404B08);
MakeFunction(0x404B08, 0x404B48);
MakeUnkn(0x404B48, 1);
MakeNameEx(0x404B48, "@InitResStringImports", 0x20);
MakeComm(0x404B48, "'procedure @InitResStringImports;'");
MakeCode(0x404B48);
MakeCode(0x404B54);
MakeFunction(0x404B48, 0x404B6D);
MakeUnkn(0x404B70, 1);
MakeNameEx(0x404B70, "@InitImports", 0x20);
MakeComm(0x404B70, "'procedure @InitImports;'");
MakeCode(0x404B70);
MakeCode(0x404B7C);
MakeFunction(0x404B70, 0x404B94);
MakeUnkn(0x404B94, 1);
MakeNameEx(0x404B94, "MakeErrorMessage", 0x20);
MakeComm(0x404B94, "'procedure MakeErrorMessage;'");
MakeCode(0x404B94);
MakeCode(0x404BA4);
MakeCode(0x404BD0);
MakeFunction(0x404B94, 0x404BF8);
MakeUnkn(0x404BF8, 1);
MakeNameEx(0x404BF8, "ExitDll", 0x20);
MakeComm(0x404BF8, "'procedure ExitDll;'");
MakeCode(0x404BF8);
MakeFunction(0x404BF8, 0x404C25);
MakeUnkn(0x404C28, 1);
MakeNameEx(0x404C28, "WriteErrorMessage", 0x20);
MakeComm(0x404C28, "'procedure WriteErrorMessage;'");
MakeCode(0x404C28);
MakeCode(0x404C51);
MakeCode(0x404C89);
MakeCode(0x404CA5);
MakeFunction(0x404C28, 0x404CA7);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x404CB0, -1);
MakeDword(0x404CAC);
MakeDword(0x404CA8);
MakeUnkn(0x404CB4, 1);
MakeNameEx(0x404CB4, "@Halt0", 0x20);
MakeComm(0x404CB4, "'procedure @Halt0;'");
MakeCode(0x404CB4);
MakeCode(0x404CCD);
MakeCode(0x404CDC);
MakeCode(0x404CF6);
MakeCode(0x404D0A);
MakeCode(0x404D1E);
MakeCode(0x404D41);
MakeCode(0x404D4F);
MakeCode(0x404D5A);
MakeCode(0x404D6E);
MakeCode(0x404D79);
MakeFunction(0x404CB4, 0x404D90);
MakeUnkn(0x404D90, 1);
MakeNameEx(0x404D90, "@Halt", 0x20);
MakeComm(0x404D90, "'procedure @Halt(Code:Integer);'");
MakeCode(0x404D90);
MakeFunction(0x404D90, 0x404D9B);
MakeUnkn(0x404D9C, 1);
MakeNameEx(0x404D9C, "@RunError", 0x20);
MakeComm(0x404D9C, "'procedure @RunError(errorCode:Byte);'");
MakeCode(0x404D9C);
MakeFunction(0x404D9C, 0x404DA8);
MakeUnkn(0x404DA8, 1);
MakeNameEx(0x404DA8, "@Assert", 0x20);
MakeComm(0x404DA8, "'procedure @Assert(Message:AnsiString; Filename:AnsiString; LineNumber:Integer);'");
MakeCode(0x404DA8);
MakeCode(0x404DBB);
MakeFunction(0x404DA8, 0x404DC7);
MakeUnkn(0x404DC8, 1);
MakeNameEx(0x404DC8, "@LStrClr", 0x20);
MakeComm(0x404DC8, "'procedure @LStrClr(var S:AnsiString);'");
MakeCode(0x404DC8);
MakeFunction(0x404DC8, 0x404DEB);
MakeUnkn(0x404DEC, 1);
MakeNameEx(0x404DEC, "@LStrArrayClr", 0x20);
MakeComm(0x404DEC, "'procedure @LStrArrayClr(var StrArray:Pointer; Count:Integer);'");
MakeCode(0x404DEC);
MakeCode(0x404DF2);
MakeCode(0x404E12);
MakeFunction(0x404DEC, 0x404E1B);
MakeUnkn(0x404E1C, 1);
MakeNameEx(0x404E1C, "@LStrAsg", 0x20);
MakeComm(0x404E1C, "'procedure @LStrAsg(var Dest:AnsiString; Source:AnsiString);'");
MakeCode(0x404E1C);
MakeCode(0x404E40);
MakeCode(0x404E44);
MakeFunction(0x404E1C, 0x404E5F);
MakeUnkn(0x404E60, 1);
MakeNameEx(0x404E60, "@LStrLAsg", 0x20);
MakeComm(0x404E60, "'procedure @LStrLAsg(var Dest:AnsiString; const Source:AnsiString);'");
MakeCode(0x404E60);
MakeCode(0x404E6E);
MakeFunction(0x404E60, 0x404E89);
MakeUnkn(0x404E8C, 1);
MakeNameEx(0x404E8C, "@NewAnsiString", 0x20);
MakeComm(0x404E8C, "'function @NewAnsiString(length:Integer):Pointer;'");
MakeCode(0x404E8C);
MakeCode(0x404EB4);
MakeFunction(0x404E8C, 0x404EB7);
MakeUnkn(0x404EB8, 1);
MakeNameEx(0x404EB8, "@LStrFromPCharLen", 0x20);
MakeComm(0x404EB8, "'procedure @LStrFromPCharLen(var Dest:AnsiString; Source:PAnsiChar; Length:Integer);'");
MakeCode(0x404EB8);
MakeCode(0x404ED9);
MakeFunction(0x404EB8, 0x404EE6);
MakeUnkn(0x404EE8, 1);
MakeNameEx(0x404EE8, "CharFromWChar", 0x20);
MakeComm(0x404EE8, "'function CharFromWChar(CharDest:PAnsiChar; DestBytes:Integer; const WCharSource:PWideChar; SrcChars:Integer):Integer;'");
MakeCode(0x404EE8);
MakeFunction(0x404EE8, 0x404F07);
MakeUnkn(0x404F08, 1);
MakeNameEx(0x404F08, "WCharFromChar", 0x20);
MakeComm(0x404F08, "'function WCharFromChar(WCharDest:PWideChar; DestChars:Integer; const CharSource:PAnsiChar; SrcBytes:Integer):Integer;'");
MakeCode(0x404F08);
MakeFunction(0x404F08, 0x404F23);
MakeUnkn(0x404F24, 1);
MakeNameEx(0x404F24, "@LStrFromPWCharLen", 0x20);
MakeComm(0x404F24, "'procedure @LStrFromPWCharLen(var Dest:AnsiString; Source:PWideChar; Length:Integer);'");
MakeCode(0x404F24);
MakeCode(0x404F46);
MakeCode(0x404F79);
MakeCode(0x404F9C);
MakeCode(0x404FA5);
MakeFunction(0x404F24, 0x404FB0);
MakeUnkn(0x404FB0, 1);
MakeNameEx(0x404FB0, "@LStrFromChar", 0x20);
MakeComm(0x404FB0, "'procedure @LStrFromChar(var Dest:AnsiString; Source:AnsiChar);'");
MakeCode(0x404FB0);
MakeFunction(0x404FB0, 0x404FBF);
MakeUnkn(0x404FC0, 1);
MakeNameEx(0x404FC0, "@LStrFromPChar", 0x20);
MakeComm(0x404FC0, "'procedure @LStrFromPChar(var Dest:AnsiString; Source:PAnsiChar);'");
MakeCode(0x404FC0);
MakeCode(0x404FC7);
MakeCode(0x404FDF);
MakeCode(0x404FE0);
MakeCode(0x404FE1);
MakeCode(0x404FE2);
MakeCode(0x404FE7);
MakeFunction(0x404FC0, 0x404FED);
MakeUnkn(0x404FF0, 1);
MakeNameEx(0x404FF0, "@LStrFromPWChar", 0x20);
MakeComm(0x404FF0, "'procedure @LStrFromPWChar(var Dest:AnsiString; Source:PWideChar);'");
MakeCode(0x404FF0);
MakeCode(0x404FF7);
MakeCode(0x405013);
MakeCode(0x405016);
MakeCode(0x405019);
MakeCode(0x40501C);
MakeCode(0x405023);
MakeFunction(0x404FF0, 0x405029);
MakeUnkn(0x40502C, 1);
MakeNameEx(0x40502C, "@LStrFromString", 0x20);
MakeComm(0x40502C, "'procedure @LStrFromString(var Dest:AnsiString; const Source:ShortString);'");
MakeCode(0x40502C);
MakeFunction(0x40502C, 0x405037);
MakeUnkn(0x405038, 1);
MakeNameEx(0x405038, "@LStrFromArray", 0x20);
MakeComm(0x405038, "'procedure @LStrFromArray(var Dest:AnsiString; Source:PAnsiChar; Length:Integer);'");
MakeCode(0x405038);
MakeCode(0x405045);
MakeFunction(0x405038, 0x405050);
MakeUnkn(0x405050, 1);
MakeNameEx(0x405050, "@LStrFromWStr", 0x20);
MakeComm(0x405050, "'procedure @LStrFromWStr(var Dest:AnsiString; const Source:WideString);'");
MakeCode(0x405050);
MakeCode(0x40505B);
MakeFunction(0x405050, 0x405061);
MakeUnkn(0x405064, 1);
MakeNameEx(0x405064, "@LStrToString", 0x20);
MakeComm(0x405064, "'procedure @LStrToString(var Dest:ShortString; const Source:AnsiString; MaxLen:Integer);'");
MakeCode(0x405064);
MakeCode(0x405076);
MakeCode(0x405081);
MakeFunction(0x405064, 0x405086);
MakeUnkn(0x405088, 1);
MakeNameEx(0x405088, "@LStrLen", 0x20);
MakeComm(0x405088, "'function @LStrLen(S:AnsiString):Integer;'");
MakeCode(0x405088);
MakeFunction(0x405088, 0x405092);
MakeUnkn(0x405094, 1);
MakeNameEx(0x405094, "@LStrCat", 0x20);
MakeComm(0x405094, "'procedure @LStrCat(var Dest:AnsiString; Source:AnsiString);'");
MakeCode(0x405094);
MakeCode(0x4050BF);
MakeCode(0x4050CC);
MakeFunction(0x405094, 0x4050D8);
MakeUnkn(0x4050D8, 1);
MakeNameEx(0x4050D8, "@LStrCat3", 0x20);
MakeComm(0x4050D8, "'procedure @LStrCat3(var Dest:AnsiString; Source1:AnsiString; Source2:AnsiString);'");
MakeCode(0x4050D8);
MakeCode(0x4050FA);
MakeCode(0x405134);
MakeCode(0x40513D);
MakeCode(0x405144);
MakeFunction(0x4050D8, 0x40514C);
MakeUnkn(0x40514C, 1);
MakeNameEx(0x40514C, "@LStrCatN", 0x20);
MakeComm(0x40514C, "'procedure @LStrCatN(var Dest:AnsiString; ArgCnt:Integer);'");
MakeCode(0x40514C);
MakeCode(0x405169);
MakeCode(0x40516B);
MakeCode(0x40517C);
MakeCode(0x40519A);
MakeCode(0x4051A2);
MakeCode(0x4051B6);
MakeCode(0x4051C6);
MakeCode(0x4051CB);
MakeFunction(0x40514C, 0x4051D6);
MakeUnkn(0x4051D8, 1);
MakeNameEx(0x4051D8, "@LStrCmp", 0x20);
MakeComm(0x4051D8, "'function @LStrCmp(Left:AnsiString; Right:AnsiString):?;'");
MakeCode(0x4051D8);
MakeCode(0x4051FB);
MakeCode(0x405201);
MakeCode(0x405221);
MakeCode(0x405227);
MakeCode(0x40524F);
MakeCode(0x405253);
MakeCode(0x40525A);
MakeCode(0x405261);
MakeCode(0x405276);
MakeFunction(0x4051D8, 0x40527A);
MakeUnkn(0x40527C, 1);
MakeNameEx(0x40527C, "@LStrAddRef", 0x20);
MakeComm(0x40527C, "'function @LStrAddRef(var S:AnsiString):Pointer;'");
MakeCode(0x40527C);
MakeFunction(0x40527C, 0x40528B);
MakeUnkn(0x40528C, 1);
MakeNameEx(0x40528C, "@LStrToPChar", 0x20);
MakeComm(0x40528C, "'function @LStrToPChar(S:AnsiString):PChar;'");
MakeCode(0x40528C);
MakeCode(0x405292);
MakeFunction(0x40528C, 0x405298);
MakeUnkn(0x405298, 1);
MakeNameEx(0x405298, "InternalUniqueString", 0x20);
MakeComm(0x405298, "'function InternalUniqueString(var str:void ):Pointer;'");
MakeCode(0x405298);
MakeCode(0x4052D3);
MakeCode(0x4052D6);
MakeFunction(0x405298, 0x4052D9);
MakeUnkn(0x4052DC, 1);
MakeNameEx(0x4052DC, "UniqueString", 0x20);
MakeComm(0x4052DC, "'procedure UniqueString(var str:AnsiString);'");
MakeCode(0x4052DC);
MakeFunction(0x4052DC, 0x4052E2);
MakeUnkn(0x4052E4, 1);
MakeNameEx(0x4052E4, "@UniqueStringA", 0x20);
MakeComm(0x4052E4, "'procedure @UniqueStringA(var str:AnsiString);'");
MakeCode(0x4052E4);
MakeFunction(0x4052E4, 0x4052EA);
MakeUnkn(0x4052EC, 1);
MakeNameEx(0x4052EC, "@LStrCopy", 0x20);
MakeComm(0x4052EC, "'function @LStrCopy(const S:AnsiString; Index:Integer; Count:Integer):AnsiString;'");
MakeCode(0x4052EC);
MakeCode(0x4052FF);
MakeCode(0x405309);
MakeCode(0x405316);
MakeCode(0x40531A);
MakeCode(0x40531E);
MakeCode(0x405327);
MakeFunction(0x4052EC, 0x40532B);
MakeUnkn(0x40532C, 1);
MakeNameEx(0x40532C, "@LStrDelete", 0x20);
MakeComm(0x40532C, "'procedure @LStrDelete(var S:AnsiString; Index:Integer; Count:Integer);'");
MakeCode(0x40532C);
MakeCode(0x405356);
MakeCode(0x405370);
MakeFunction(0x40532C, 0x405374);
MakeUnkn(0x405374, 1);
MakeNameEx(0x405374, "@LStrInsert", 0x20);
MakeComm(0x405374, "'procedure @LStrInsert(const Source:AnsiString; var S:AnsiString; Index:Integer);'");
MakeCode(0x405374);
MakeCode(0x40538C);
MakeCode(0x405391);
MakeCode(0x405397);
MakeCode(0x4053AA);
MakeFunction(0x405374, 0x4053CF);
MakeUnkn(0x4053D0, 1);
MakeNameEx(0x4053D0, "Pos", 0x20);
MakeComm(0x4053D0, "'function Pos(const substr:AnsiString; const str:AnsiString):Integer;'");
MakeCode(0x4053D0);
MakeCode(0x40540F);
MakeCode(0x405427);
MakeCode(0x40542B);
MakeCode(0x405451);
MakeCode(0x405454);
MakeCode(0x40545B);
MakeCode(0x405461);
MakeCode(0x405464);
MakeCode(0x405475);
MakeCode(0x40547B);
MakeCode(0x4054A1);
MakeCode(0x4054A8);
MakeCode(0x4054AC);
MakeCode(0x4054B1);
MakeCode(0x4054C4);
MakeCode(0x4054C7);
MakeCode(0x4054CA);
MakeCode(0x4054EB);
MakeCode(0x4054F1);
MakeCode(0x4054F4);
MakeCode(0x4054F7);
MakeFunction(0x4053D0, 0x405513);
MakeUnkn(0x405514, 1);
MakeNameEx(0x405514, "@LStrSetLength", 0x20);
MakeComm(0x405514, "'procedure @LStrSetLength(var S:AnsiString; NewLen:Integer);'");
MakeCode(0x405514);
MakeCode(0x40554A);
MakeCode(0x405564);
MakeCode(0x405569);
MakeCode(0x405572);
MakeFunction(0x405514, 0x405576);
MakeUnkn(0x405578, 1);
MakeNameEx(0x405578, "StringOfChar", 0x20);
MakeComm(0x405578, "'function StringOfChar(ch:Char; Count:Integer):string;'");
MakeCode(0x405578);
MakeCode(0x40559E);
MakeFunction(0x405578, 0x4055A2);
MakeUnkn(0x4055A4, 1);
MakeNameEx(0x4055A4, "@Write0Bool", 0x20);
MakeComm(0x4055A4, "'procedure @Write0Bool(var T:TTextRec; Val:Boolean);'");
MakeCode(0x4055A4);
MakeFunction(0x4055A4, 0x4055AC);
MakeUnkn(0x4055AC, 1);
MakeNameEx(0x4055AC, "@WriteBool", 0x20);
MakeComm(0x4055AC, "'procedure @WriteBool(var T:TTextRec; Val:Boolean; Width:Longint);'");
MakeCode(0x4055AC);
MakeCode(0x4055BC);
MakeFunction(0x4055AC, 0x4055CB);
MakeUnkn(0x4055CC, 1);
MakeNameEx(0x4055CC, "WStrError", 0x20);
MakeComm(0x4055CC, "'procedure WStrError;'");
MakeCode(0x4055CC);
MakeFunction(0x4055CC, 0x4055D4);
MakeUnkn(0x4055D4, 1);
MakeNameEx(0x4055D4, "@NewWideString", 0x20);
MakeComm(0x4055D4, "'function @NewWideString(CharLength:Integer):Pointer;'");
MakeCode(0x4055D4);
MakeFunction(0x4055D4, 0x4055E9);
MakeUnkn(0x4055EC, 1);
MakeNameEx(0x4055EC, "WStrSet", 0x20);
MakeComm(0x4055EC, "'procedure WStrSet(var S:WideString; P:PWideChar);'");
MakeCode(0x4055EC);
MakeFunction(0x4055EC, 0x4055F9);
MakeUnkn(0x4055FC, 1);
MakeNameEx(0x4055FC, "@WStrClr", 0x20);
MakeComm(0x4055FC, "'procedure @WStrClr(var S:WideString);'");
MakeCode(0x4055FC);
MakeFunction(0x4055FC, 0x405611);
MakeUnkn(0x405614, 1);
MakeNameEx(0x405614, "@WStrArrayClr", 0x20);
MakeComm(0x405614, "'procedure @WStrArrayClr(var StrArray:Pointer; Count:Integer);'");
MakeCode(0x405614);
MakeCode(0x40561A);
MakeCode(0x40562C);
MakeFunction(0x405614, 0x405635);
MakeUnkn(0x405638, 1);
MakeNameEx(0x405638, "@WStrAsg", 0x20);
MakeComm(0x405638, "'procedure @WStrAsg(var Dest:WideString; Source:WideString);'");
MakeCode(0x405638);
MakeFunction(0x405638, 0x405660);
MakeUnkn(0x405660, 1);
MakeNameEx(0x405660, "@WStrFromPCharLen", 0x20);
MakeComm(0x405660, "'procedure @WStrFromPCharLen(var Dest:WideString; Source:PAnsiChar; Length:Integer);'");
MakeCode(0x405660);
MakeCode(0x405682);
MakeCode(0x4056B5);
MakeCode(0x4056D6);
MakeCode(0x4056DF);
MakeFunction(0x405660, 0x4056EA);
MakeUnkn(0x4056EC, 1);
MakeNameEx(0x4056EC, "@WStrFromPWCharLen", 0x20);
MakeComm(0x4056EC, "'procedure @WStrFromPWCharLen(var Dest:WideString; Source:PWideChar; Length:Integer);'");
MakeCode(0x4056EC);
MakeFunction(0x4056EC, 0x40570F);
MakeUnkn(0x405710, 1);
MakeNameEx(0x405710, "@WStrFromChar", 0x20);
MakeComm(0x405710, "'procedure @WStrFromChar(var Dest:WideString; Source:AnsiChar);'");
MakeCode(0x405710);
MakeFunction(0x405710, 0x40571F);
MakeUnkn(0x405720, 1);
MakeNameEx(0x405720, "@WStrFromPWChar", 0x20);
MakeComm(0x405720, "'procedure @WStrFromPWChar(var Dest:WideString; Source:PWideChar);'");
MakeCode(0x405720);
MakeCode(0x405727);
MakeCode(0x405743);
MakeCode(0x405746);
MakeCode(0x405749);
MakeCode(0x40574C);
MakeCode(0x405753);
MakeFunction(0x405720, 0x405759);
MakeUnkn(0x40575C, 1);
MakeNameEx(0x40575C, "@WStrFromLStr", 0x20);
MakeComm(0x40575C, "'procedure @WStrFromLStr(var Dest:WideString; const Source:AnsiString);'");
MakeCode(0x40575C);
MakeCode(0x405765);
MakeFunction(0x40575C, 0x40576B);
MakeUnkn(0x40576C, 1);
MakeNameEx(0x40576C, "@WStrToPWChar", 0x20);
MakeComm(0x40576C, "'function @WStrToPWChar(S:WideString):PWideChar;'");
MakeCode(0x40576C);
MakeCode(0x405774);
MakeFunction(0x40576C, 0x40577A);
MakeUnkn(0x40577C, 1);
MakeNameEx(0x40577C, "@WStrLen", 0x20);
MakeComm(0x40577C, "'function @WStrLen(S:WideString):Integer;'");
MakeCode(0x40577C);
MakeFunction(0x40577C, 0x405786);
MakeUnkn(0x405788, 1);
MakeNameEx(0x405788, "@WStrCmp", 0x20);
MakeComm(0x405788, "'function @WStrCmp(Left:WideString; Right:WideString):?;'");
MakeCode(0x405788);
MakeCode(0x4057A7);
MakeCode(0x4057AD);
MakeCode(0x4057CD);
MakeCode(0x4057D3);
MakeCode(0x4057E4);
MakeCode(0x4057E8);
MakeCode(0x4057EF);
MakeCode(0x4057F6);
MakeCode(0x405805);
MakeFunction(0x405788, 0x405809);
MakeUnkn(0x40580C, 1);
MakeNameEx(0x40580C, "@WStrCopy", 0x20);
MakeComm(0x40580C, "'function @WStrCopy(const S:WideString; Index:Integer; Count:Integer):WideString;'");
MakeCode(0x40580C);
MakeCode(0x405828);
MakeCode(0x40582F);
MakeCode(0x405837);
MakeCode(0x40583F);
MakeFunction(0x40580C, 0x405855);
MakeUnkn(0x405858, 1);
MakeNameEx(0x405858, "@WStrSetLength", 0x20);
MakeComm(0x405858, "'procedure @WStrSetLength(var S:WideString; NewLen:Integer);'");
MakeCode(0x405858);
MakeCode(0x40587F);
MakeCode(0x40588C);
MakeFunction(0x405858, 0x405899);
MakeUnkn(0x40589C, 1);
MakeNameEx(0x40589C, "@AddRefRecord", 0x20);
MakeComm(0x40589C, "'procedure @AddRefRecord;'");
MakeCode(0x40589C);
MakeCode(0x4058AE);
MakeFunction(0x40589C, 0x4058CB);
MakeUnkn(0x4058CC, 1);
MakeNameEx(0x4058CC, "@AddRefArray", 0x20);
MakeComm(0x4058CC, "'procedure @AddRefArray;'");
MakeCode(0x4058CC);
MakeCode(0x40590C);
MakeCode(0x405916);
MakeCode(0x405929);
MakeCode(0x40592C);
MakeCode(0x405947);
MakeCode(0x40594A);
MakeCode(0x40595B);
MakeFunction(0x4058CC, 0x40595F);
MakeUnkn(0x405960, 1);
MakeNameEx(0x405960, "@AddRef", 0x20);
MakeComm(0x405960, "'procedure @AddRef;'");
MakeCode(0x405960);
MakeFunction(0x405960, 0x40596B);
MakeUnkn(0x40596C, 1);
MakeNameEx(0x40596C, "@FinalizeRecord", 0x20);
MakeComm(0x40596C, "'procedure @FinalizeRecord(P:Pointer; typeInfo:Pointer);'");
MakeCode(0x40596C);
MakeCode(0x40597E);
MakeFunction(0x40596C, 0x40599D);
MakeUnkn(0x4059A0, 1);
MakeNameEx(0x4059A0, "@VarClr", 0x20);
MakeComm(0x4059A0, "'procedure @VarClr(var v:TVarData);'");
MakeCode(0x4059A0);
MakeCode(0x4059B0);
MakeFunction(0x4059A0, 0x4059B8);
MakeUnkn(0x4059B8, 1);
MakeNameEx(0x4059B8, "@FinalizeArray", 0x20);
MakeComm(0x4059B8, "'procedure @FinalizeArray(p:Pointer; typeInfo:Pointer; elemCount:Cardinal);'");
MakeCode(0x4059B8);
MakeCode(0x4059FB);
MakeCode(0x405A0C);
MakeCode(0x405A18);
MakeCode(0x405A26);
MakeCode(0x405A2F);
MakeCode(0x405A3E);
MakeCode(0x405A41);
MakeCode(0x405A5C);
MakeCode(0x405A5F);
MakeCode(0x405A72);
MakeCode(0x405A81);
MakeCode(0x405A92);
MakeCode(0x405A9D);
MakeFunction(0x4059B8, 0x405AA2);
MakeUnkn(0x405AA4, 1);
MakeNameEx(0x405AA4, "@Finalize", 0x20);
MakeComm(0x405AA4, "'procedure @Finalize(p:Pointer; typeInfo:Pointer);'");
MakeCode(0x405AA4);
MakeFunction(0x405AA4, 0x405AAF);
MakeUnkn(0x405AB0, 1);
MakeNameEx(0x405AB0, "@VarAddRef", 0x20);
MakeComm(0x405AB0, "'procedure @VarAddRef(var v:TVarData);'");
MakeCode(0x405AB0);
MakeCode(0x405AC0);
MakeFunction(0x405AB0, 0x405AC8);
MakeUnkn(0x405AC8, 1);
MakeNameEx(0x405AC8, "@CopyRecord", 0x20);
MakeComm(0x405AC8, "'procedure @CopyRecord(Dest:Pointer; Source:Pointer; TypeInfo:Pointer);'");
MakeCode(0x405AC8);
MakeCode(0x405AE2);
MakeCode(0x405AF4);
MakeCode(0x405B33);
MakeCode(0x405B44);
MakeCode(0x405B55);
MakeCode(0x405B66);
MakeCode(0x405B86);
MakeCode(0x405B9F);
MakeCode(0x405BB0);
MakeCode(0x405BC1);
MakeCode(0x405BDD);
MakeFunction(0x405AC8, 0x405BE2);
MakeUnkn(0x405BE4, 1);
MakeNameEx(0x405BE4, "@CopyArray", 0x20);
MakeComm(0x405BE4, "'procedure @CopyArray(Dest:Pointer; Source:Pointer; TypeInfo:Pointer; Cnt:Integer);'");
MakeCode(0x405BE4);
MakeCode(0x405C2A);
MakeCode(0x405C41);
MakeCode(0x405C55);
MakeCode(0x405C69);
MakeCode(0x405C72);
MakeCode(0x405C8A);
MakeCode(0x405CA7);
MakeCode(0x405CBB);
MakeCode(0x405CCF);
MakeFunction(0x405BE4, 0x405CD7);
MakeUnkn(0x405CD8, 1);
MakeNameEx(0x405CD8, "@New", 0x20);
MakeComm(0x405CD8, "'function @New(size:Integer; typeInfo:Pointer):Pointer;'");
MakeCode(0x405CD8);
MakeFunction(0x405CD8, 0x405CEB);
MakeUnkn(0x405CEC, 1);
MakeNameEx(0x405CEC, "@Dispose", 0x20);
MakeComm(0x405CEC, "'procedure @Dispose(p:Pointer; typeInfo:Pointer);'");
MakeCode(0x405CEC);
MakeFunction(0x405CEC, 0x405CF9);
MakeUnkn(0x405CFC, 1);
MakeNameEx(0x405CFC, "@DispCallByIDError", 0x20);
MakeComm(0x405CFC, "'procedure @DispCallByIDError;'");
MakeCode(0x405CFC);
MakeFunction(0x405CFC, 0x405D04);
MakeUnkn(0x405D04, 1);
MakeNameEx(0x405D04, "@_llmul", 0x20);
MakeComm(0x405D04, "'procedure @_llmul;'");
MakeCode(0x405D04);
MakeFunction(0x405D04, 0x405D27);
MakeUnkn(0x405D28, 1);
MakeNameEx(0x405D28, "@_lldiv", 0x20);
MakeComm(0x405D28, "'procedure @_lldiv;'");
MakeCode(0x405D28);
MakeCode(0x405D5E);
MakeCode(0x405D64);
MakeCode(0x405DAB);
MakeFunction(0x405D28, 0x405DB9);
MakeUnkn(0x405DBC, 1);
MakeNameEx(0x405DBC, "@_llmod", 0x20);
MakeComm(0x405DBC, "'procedure @_llmod;'");
MakeCode(0x405DBC);
MakeCode(0x405DD6);
MakeCode(0x405DE4);
MakeCode(0x405DEF);
MakeCode(0x405E0D);
MakeCode(0x405E12);
MakeCode(0x405E28);
MakeCode(0x405E2F);
MakeFunction(0x405DBC, 0x405E37);
MakeUnkn(0x405E38, 1);
MakeNameEx(0x405E38, "@ValInt64", 0x20);
MakeComm(0x405E38, "'function @ValInt64(const s:AnsiString; var code:Integer):Int64;'");
MakeCode(0x405E38);
MakeCode(0x405E69);
MakeCode(0x405E6A);
MakeCode(0x405E87);
MakeCode(0x405E8C);
MakeCode(0x405EBF);
MakeCode(0x405EC7);
MakeCode(0x405EC8);
MakeCode(0x405EE3);
MakeCode(0x405EEB);
MakeCode(0x405EF3);
MakeCode(0x405EF9);
MakeCode(0x405F09);
MakeCode(0x405F0B);
MakeCode(0x405F1E);
MakeCode(0x405F20);
MakeCode(0x405F4E);
MakeCode(0x405F75);
MakeCode(0x405F98);
MakeCode(0x405F9A);
MakeCode(0x405FB0);
MakeCode(0x405FB2);
MakeCode(0x405FDF);
MakeCode(0x405FFD);
MakeCode(0x406009);
MakeCode(0x40601C);
MakeCode(0x40601F);
MakeCode(0x406026);
MakeCode(0x406039);
MakeCode(0x406040);
MakeFunction(0x405E38, 0x406050);
MakeUnkn(0x406050, 1);
MakeNameEx(0x406050, "@DynArrayLength", 0x20);
MakeComm(0x406050, "'function @DynArrayLength(Arr:Pointer):Longint;'");
MakeCode(0x406050);
MakeFunction(0x406050, 0x406058);
MakeUnkn(0x406058, 1);
MakeNameEx(0x406058, "@DynArrayHigh", 0x20);
MakeComm(0x406058, "'function @DynArrayHigh(Arr:Pointer):Longint;'");
MakeCode(0x406058);
MakeFunction(0x406058, 0x40605F);
MakeUnkn(0x406060, 1);
MakeNameEx(0x406060, "CopyArray", 0x20);
MakeComm(0x406060, "'procedure CopyArray(dest:Pointer; source:Pointer; typeInfo:Pointer; cnt:Integer);'");
MakeCode(0x406060);
MakeFunction(0x406060, 0x40606F);
MakeUnkn(0x406070, 1);
MakeNameEx(0x406070, "FinalizeArray", 0x20);
MakeComm(0x406070, "'procedure FinalizeArray(p:Pointer; typeInfo:Pointer; cnt:Integer);'");
MakeCode(0x406070);
MakeFunction(0x406070, 0x406076);
MakeUnkn(0x406078, 1);
MakeNameEx(0x406078, "DynArrayClear", 0x20);
MakeComm(0x406078, "'procedure DynArrayClear(var arr:Pointer; typeInfo:PDynArrayTypeInfo);'");
MakeCode(0x406078);
MakeFunction(0x406078, 0x40607E);
MakeUnkn(0x406080, 1);
MakeNameEx(0x406080, "DynArraySetLength", 0x20);
MakeComm(0x406080, "'procedure DynArraySetLength(var arr:Pointer; typeInfo:PDynArrayTypeInfo; dimCnt:Longint; lenVec:PLongint);'");
MakeCode(0x406080);
MakeCode(0x4060AA);
MakeCode(0x4060B9);
MakeCode(0x4060CD);
MakeCode(0x4060E6);
MakeCode(0x4060E8);
MakeCode(0x406102);
MakeCode(0x40610F);
MakeCode(0x406134);
MakeCode(0x406144);
MakeCode(0x40615E);
MakeCode(0x40618C);
MakeCode(0x4061A2);
MakeCode(0x4061E3);
MakeCode(0x4061FD);
MakeCode(0x406202);
MakeFunction(0x406080, 0x40620B);
MakeUnkn(0x40620C, 1);
MakeNameEx(0x40620C, "@DynArraySetLength", 0x20);
MakeComm(0x40620C, "'procedure @DynArraySetLength(var Arr:Pointer; TypeInfo:PDynArrayTypeInfo; DimCnt:Longint; LengthVec:Longint);'");
MakeCode(0x40620C);
MakeFunction(0x40620C, 0x406217);
MakeUnkn(0x406218, 1);
MakeNameEx(0x406218, "@DynArrayClear", 0x20);
MakeComm(0x406218, "'procedure @DynArrayClear(var Arr:Pointer; TypeInfo:PDynArrayTypeInfo);'");
MakeCode(0x406218);
MakeCode(0x406248);
MakeFunction(0x406218, 0x406252);
MakeUnkn(0x406254, 1);
MakeNameEx(0x406254, "@DynArrayAsg", 0x20);
MakeComm(0x406254, "'procedure @DynArrayAsg(var Dest:Pointer; Source:Pointer; TypeInfo:PDynArrayTypeInfo);'");
MakeCode(0x406254);
MakeCode(0x40625F);
MakeCode(0x406277);
MakeFunction(0x406254, 0x40627B);
MakeUnkn(0x40627C, 1);
MakeNameEx(0x40627C, "FindHInstance", 0x20);
MakeComm(0x40627C, "'function FindHInstance(Address:Pointer):Cardinal;'");
MakeCode(0x40627C);
MakeCode(0x40629C);
MakeCode(0x40629E);
MakeFunction(0x40627C, 0x4062A2);
MakeUnkn(0x4062A4, 1);
MakeNameEx(0x4062A4, "FindClassHInstance", 0x20);
MakeComm(0x4062A4, "'function FindClassHInstance(ClassType:TClass):Cardinal;'");
MakeCode(0x4062A4);
MakeFunction(0x4062A4, 0x4062AA);
MakeUnkn(0x4062AC, 1);
MakeNameEx(0x4062AC, "DelayLoadResourceModule", 0x20);
MakeComm(0x4062AC, "'function DelayLoadResourceModule(Module:PLibModule):Cardinal;'");
MakeCode(0x4062AC);
MakeCode(0x4062E7);
MakeFunction(0x4062AC, 0x4062F3);
MakeUnkn(0x4062F4, 1);
MakeNameEx(0x4062F4, "FindResourceHInstance", 0x20);
MakeComm(0x4062F4, "'function FindResourceHInstance(Instance:Cardinal):Cardinal;'");
MakeCode(0x4062F4);
MakeCode(0x406303);
MakeCode(0x406312);
MakeCode(0x40631D);
MakeCode(0x406323);
MakeCode(0x406325);
MakeFunction(0x4062F4, 0x40632B);
MakeUnkn(0x40632C, 1);
MakeNameEx(0x40632C, "FindBS", 0x20);
MakeComm(0x40632C, "'function FindBS(Current:PAnsiChar):PAnsiChar;'");
MakeCode(0x40632C);
MakeCode(0x406332);
MakeCode(0x40633A);
MakeCode(0x406346);
MakeFunction(0x40632C, 0x40634B);
MakeUnkn(0x40634C, 1);
MakeNameEx(0x40634C, "ToLongPath", 0x20);
MakeComm(0x40634C, "'function ToLongPath(AFileName:PAnsiChar; BufSize:Integer):PAnsiChar;'");
MakeCode(0x40634C);
MakeCode(0x4063BA);
MakeCode(0x4063FA);
MakeCode(0x406400);
MakeCode(0x40641E);
MakeCode(0x4064C5);
MakeCode(0x4064E2);
MakeFunction(0x40634C, 0x4064EC);
MakeUnkn(0x406510, 1);
MakeNameEx(0x406510, "LoadResourceModule", 0x20);
MakeComm(0x406510, "'function LoadResourceModule(ModuleName:PAnsiChar; CheckOwner:Boolean):Cardinal;'");
MakeCode(0x406510);
MakeCode(0x406593);
MakeCode(0x4065FA);
MakeCode(0x4065FE);
MakeCode(0x40660B);
MakeCode(0x406615);
MakeCode(0x40661A);
MakeCode(0x40661C);
MakeCode(0x406663);
MakeCode(0x40667B);
MakeCode(0x40667C);
MakeCode(0x40668B);
MakeCode(0x4066C8);
MakeCode(0x406736);
MakeFunction(0x406510, 0x40673E);
MakeUnkn(0x406780, 1);
MakeNameEx(0x406780, "AddModuleUnloadProc", 0x20);
MakeComm(0x406780, "'procedure AddModuleUnloadProc(Proc:TModuleUnloadProc);'");
MakeCode(0x406780);
MakeFunction(0x406780, 0x406786);
MakeUnkn(0x406788, 1);
MakeNameEx(0x406788, "RemoveModuleUnloadProc", 0x20);
MakeComm(0x406788, "'procedure RemoveModuleUnloadProc(Proc:TModuleUnloadProcLW);'");
MakeCode(0x406788);
MakeFunction(0x406788, 0x40678E);
MakeUnkn(0x406790, 1);
MakeNameEx(0x406790, "AddModuleUnloadProc_0", 0x20);
MakeComm(0x406790, "'procedure AddModuleUnloadProc(Proc:TModuleUnloadProcLW);'");
MakeCode(0x406790);
MakeFunction(0x406790, 0x4067AF);
MakeCode(0x4067B0);
MakeComm(0x4067B6, "'0x0'");
MakeComm(0x4067C7, "'0x0'");
MakeCode(0x4067E1);
MakeCode(0x4067E7);
MakeCode(0x406808);
MakeCode(0x40680E);
MakeFunction(0x4067B0, 0x406813);
MakeUnkn(0x406814, 1);
MakeNameEx(0x406814, "NotifyModuleUnload", 0x20);
MakeComm(0x406814, "'procedure NotifyModuleUnload(HInstance:Cardinal);'");
MakeCode(0x406814);
MakeCode(0x40682E);
MakeCode(0x406845);
MakeCode(0x40684F);
MakeCode(0x406859);
MakeCode(0x406867);
MakeFunction(0x406814, 0x40686E);
MakeUnkn(0x406870, 1);
MakeNameEx(0x406870, "RegisterModule", 0x20);
MakeComm(0x406870, "'procedure RegisterModule(LibModule:PLibModule);'");
MakeCode(0x406870);
MakeFunction(0x406870, 0x40687E);
MakeUnkn(0x406880, 1);
MakeNameEx(0x406880, "UnregisterModule", 0x20);
MakeComm(0x406880, "'procedure UnregisterModule(LibModule:PLibModule);'");
MakeCode(0x406880);
MakeCode(0x4068A0);
MakeCode(0x4068AD);
MakeCode(0x4068C4);
MakeCode(0x4068CD);
MakeCode(0x4068DD);
MakeCode(0x4068E3);
MakeCode(0x4068E4);
MakeCode(0x4068E9);
MakeFunction(0x406880, 0x4068EE);
MakeUnkn(0x4068F0, 1);
MakeNameEx(0x4068F0, "@IntfClear", 0x20);
MakeComm(0x4068F0, "'function @IntfClear(var Dest:IInterface):Pointer;'");
MakeCode(0x4068F0);
MakeFunction(0x4068F0, 0x406905);
MakeUnkn(0x406908, 1);
MakeNameEx(0x406908, "@IntfCopy", 0x20);
MakeComm(0x406908, "'procedure @IntfCopy(var Dest:IInterface; const Source:IInterface);'");
MakeCode(0x406908);
MakeCode(0x40691E);
MakeCode(0x406925);
MakeFunction(0x406908, 0x406934);
MakeUnkn(0x406934, 1);
MakeNameEx(0x406934, "@IntfCast", 0x20);
MakeComm(0x406934, "'procedure @IntfCast(var Dest:IInterface; const Source:IInterface; const IID:TGUID);'");
MakeCode(0x406934);
MakeCode(0x406953);
MakeCode(0x40695F);
MakeFunction(0x406934, 0x406964);
MakeUnkn(0x406964, 1);
MakeNameEx(0x406964, "@IntfAddRef", 0x20);
MakeComm(0x406964, "'procedure @IntfAddRef(const Dest:IInterface);'");
MakeCode(0x406964);
MakeFunction(0x406964, 0x40696F);
MakeUnkn(0x406970, 1);
MakeNameEx(0x406970, "TInterfacedObject.AfterConstruction", 0x20);
MakeComm(0x406970, "'procedure TInterfacedObject.AfterConstruction;'");
MakeCode(0x406970);
MakeFunction(0x406970, 0x40697A);
MakeUnkn(0x40697C, 1);
MakeNameEx(0x40697C, "TInterfacedObject.BeforeDestruction", 0x20);
MakeComm(0x40697C, "'procedure TInterfacedObject.BeforeDestruction;'");
MakeCode(0x40697C);
MakeFunction(0x40697C, 0x40698A);
MakeUnkn(0x40698C, 1);
MakeNameEx(0x40698C, "TInterfacedObject.NewInstance", 0x20);
MakeComm(0x40698C, "'function TInterfacedObject.NewInstance:TObject;'");
MakeCode(0x40698C);
MakeFunction(0x40698C, 0x406999);
MakeUnkn(0x40699C, 1);
MakeNameEx(0x40699C, "TContainedObject.QueryInterface", 0x20);
MakeComm(0x40699C, "'function TContainedObject.QueryInterface(const IID:TGUID; var Obj:Pointer):HRESULT; stdcall;'");
MakeCode(0x40699C);
MakeCode(0x4069B8);
MakeCode(0x4069BD);
MakeFunction(0x40699C, 0x4069C2);
MakeUnkn(0x4069C4, 1);
MakeNameEx(0x4069C4, "TInterfacedObject._AddRef", 0x20);
MakeComm(0x4069C4, "'function TInterfacedObject._AddRef:Integer; stdcall;'");
MakeCode(0x4069C4);
MakeFunction(0x4069C4, 0x4069D7);
MakeUnkn(0x4069D8, 1);
MakeNameEx(0x4069D8, "TInterfacedObject._Release", 0x20);
MakeComm(0x4069D8, "'function TInterfacedObject._Release:Integer; stdcall;'");
MakeCode(0x4069D8);
MakeCode(0x4069F8);
MakeFunction(0x4069D8, 0x406A00);
MakeUnkn(0x406A00, 1);
MakeNameEx(0x406A00, "UnicodeToUtf8", 0x20);
MakeComm(0x406A00, "'function UnicodeToUtf8(Dest:PAnsiChar; MaxDestBytes:Cardinal; Source:PWideChar; SourceChars:Cardinal):Cardinal;'");
MakeCode(0x406A00);
MakeCode(0x406A28);
MakeCode(0x406A3B);
MakeCode(0x406A74);
MakeCode(0x406A94);
MakeCode(0x406A9E);
MakeCode(0x406AA7);
MakeCode(0x406AAD);
MakeCode(0x406AB2);
MakeCode(0x406AC8);
MakeCode(0x406AC9);
MakeCode(0x406ACF);
MakeCode(0x406AD2);
MakeFunction(0x406A00, 0x406ADC);
MakeUnkn(0x406ADC, 1);
MakeNameEx(0x406ADC, "Utf8ToUnicode", 0x20);
MakeComm(0x406ADC, "'function Utf8ToUnicode(Dest:PWideChar; MaxDestChars:Cardinal; Source:PAnsiChar; SourceBytes:Cardinal):Cardinal;'");
MakeCode(0x406ADC);
MakeCode(0x406AFD);
MakeCode(0x406B14);
MakeCode(0x406B5E);
MakeCode(0x406B89);
MakeCode(0x406B90);
MakeCode(0x406B91);
MakeCode(0x406B9F);
MakeCode(0x406BA8);
MakeCode(0x406BB3);
MakeCode(0x406BB8);
MakeCode(0x406BE7);
MakeCode(0x406BF7);
MakeCode(0x406BFD);
MakeCode(0x406C01);
MakeFunction(0x406ADC, 0x406C0C);
MakeUnkn(0x406C0C, 1);
MakeNameEx(0x406C0C, "UTF8Encode", 0x20);
MakeComm(0x406C0C, "'function UTF8Encode(const WS:WideString):UTF8String;'");
MakeCode(0x406C0C);
MakeCode(0x406C5D);
MakeCode(0x406C8F);
MakeCode(0x406C97);
MakeCode(0x406CA2);
MakeCode(0x406CAF);
MakeCode(0x406CB8);
MakeCode(0x406CBD);
MakeFunction(0x406C0C, 0x406CC5);
MakeUnkn(0x406CC8, 1);
MakeNameEx(0x406CC8, "UTF8Decode", 0x20);
MakeComm(0x406CC8, "'function UTF8Decode(const S:UTF8String):WideString;'");
MakeCode(0x406CC8);
MakeCode(0x406D05);
MakeCode(0x406D17);
MakeCode(0x406D4A);
MakeCode(0x406D52);
MakeCode(0x406D5D);
MakeCode(0x406D6A);
MakeCode(0x406D73);
MakeCode(0x406D78);
MakeFunction(0x406CC8, 0x406D80);
MakeUnkn(0x406D80, 1);
MakeNameEx(0x406D80, "AnsiToUtf8", 0x20);
MakeComm(0x406D80, "'function AnsiToUtf8(const S:AnsiString):UTF8String;'");
MakeCode(0x406D80);
MakeCode(0x406DAD);
MakeCode(0x406DBA);
MakeCode(0x406DC3);
MakeCode(0x406DC8);
MakeFunction(0x406D80, 0x406DCF);
MakeUnkn(0x406DD0, 1);
MakeNameEx(0x406DD0, "LoadResString", 0x20);
MakeComm(0x406DD0, "'function LoadResString(ResStringRec:PResStringRec):string;'");
MakeCode(0x406DD0);
MakeCode(0x406E14);
MakeCode(0x406E1E);
MakeFunction(0x406DD0, 0x406E27);
MakeUnkn(0x406E28, 1);
MakeNameEx(0x406E28, "kernel32.GetACP", 0x20);
MakeComm(0x406E28, "'function kernel32.GetACP:Cardinal;'");
MakeCode(0x406E28);
MakeFunction(0x406E28, 0x406E2E);
MakeCode(0x406E30);
MakeCode(0x406E76);
MakeCode(0x406E83);
MakeCode(0x406E84);
MakeCode(0x406E89);
MakeFunction(0x406E30, 0x406E8D);
MakeUnkn(0x406E90, 1);
MakeNameEx(0x406E90, "kernel32.GetModuleHandleA_0", 0x20);
MakeComm(0x406E90, "'function kernel32.GetModuleHandleA:HMODULE; stdcall;'");
MakeCode(0x406E90);
MakeFunction(0x406E90, 0x406E96);
MakeUnkn(0x406E98, 1);
MakeNameEx(0x406E98, "kernel32.LocalAlloc", 0x20);
MakeComm(0x406E98, "'function kernel32.LocalAlloc(size:Integer):Pointer; stdcall;'");
MakeCode(0x406E98);
MakeFunction(0x406E98, 0x406E9E);
MakeUnkn(0x406EA0, 1);
MakeNameEx(0x406EA0, "kernel32.TlsGetValue", 0x20);
MakeComm(0x406EA0, "'function kernel32.TlsGetValue:Pointer; stdcall;'");
MakeCode(0x406EA0);
MakeFunction(0x406EA0, 0x406EA6);
MakeUnkn(0x406EA8, 1);
MakeNameEx(0x406EA8, "kernel32.TlsSetValue", 0x20);
MakeComm(0x406EA8, "'function kernel32.TlsSetValue(TlsValue:Pointer):Boolean; stdcall;'");
MakeCode(0x406EA8);
MakeFunction(0x406EA8, 0x406EAE);
MakeUnkn(0x406EB0, 1);
MakeNameEx(0x406EB0, "AllocTlsBuffer", 0x20);
MakeComm(0x406EB0, "'function AllocTlsBuffer(Size:Integer):Pointer;'");
MakeCode(0x406EB0);
MakeFunction(0x406EB0, 0x406EB9);
MakeUnkn(0x406EBC, 1);
MakeNameEx(0x406EBC, "GetTlsSize", 0x20);
MakeComm(0x406EBC, "'function GetTlsSize:Integer;'");
MakeCode(0x406EBC);
MakeFunction(0x406EBC, 0x406EC2);
MakeUnkn(0x406EC4, 1);
MakeNameEx(0x406EC4, "InitThreadTLS", 0x20);
MakeComm(0x406EC4, "'procedure InitThreadTLS;'");
MakeCode(0x406EC4);
MakeCode(0x406EE3);
MakeCode(0x406EFA);
MakeCode(0x406F06);
MakeFunction(0x406EC4, 0x406F08);
MakeUnkn(0x406F08, 1);
MakeNameEx(0x406F08, "@GetTls", 0x20);
MakeComm(0x406F08, "'function @GetTls:Pointer;'");
MakeCode(0x406F08);
MakeCode(0x406F22);
MakeCode(0x406F37);
MakeCode(0x406F3D);
MakeFunction(0x406F08, 0x406F48);
MakeUnkn(0x406F48, 1);
MakeNameEx(0x406F48, "InitializeModule", 0x20);
MakeComm(0x406F48, "'procedure InitializeModule;'");
MakeCode(0x406F48);
MakeFunction(0x406F48, 0x406F53);
MakeUnkn(0x406F54, 1);
MakeNameEx(0x406F54, "@InitExe", 0x20);
MakeComm(0x406F54, "'procedure @InitExe;'");
MakeCode(0x406F54);
MakeFunction(0x406F54, 0x406F95);
MakeUnkn(0x406F98, 1);
MakeNameEx(0x406F98, "Rect", 0x20);
MakeComm(0x406F98, "'function Rect(Left:Integer; Top:Integer; Right:Integer; Bottom:Integer):TRect;'");
MakeCode(0x406F98);
MakeFunction(0x406F98, 0x406FB2);
MakeUnkn(0x406FB4, 1);
MakeNameEx(0x406FB4, "Point", 0x20);
MakeComm(0x406FB4, "'function Point(X:Integer; Y:Integer):TPoint;'");
MakeCode(0x406FB4);
MakeFunction(0x406FB4, 0x406FBA);
MakeUnkn(0x406FBC, 1);
MakeNameEx(0x406FBC, "SmallPoint", 0x20);
MakeComm(0x406FBC, "'function SmallPoint(XY:LongWord):TSmallPoint;'");
MakeCode(0x406FBC);
MakeFunction(0x406FBC, 0x406FD4);
MakeUnkn(0x406FD4, 1);
MakeNameEx(0x406FD4, "OffsetRect", 0x20);
MakeComm(0x406FD4, "'function OffsetRect(var Rect:TRect; DX:Integer; DY:Integer):Boolean;'");
MakeCode(0x406FD4);
MakeCode(0x406FE6);
MakeFunction(0x406FD4, 0x406FE9);
MakeUnkn(0x406FEC, 1);
MakeNameEx(0x406FEC, "Bounds", 0x20);
MakeComm(0x406FEC, "'function Bounds(ALeft:Integer; ATop:Integer; AWidth:Integer; AHeight:Integer):TRect;'");
MakeCode(0x406FEC);
MakeFunction(0x406FEC, 0x407008);
MakeUnkn(0x407008, 1);
MakeNameEx(0x407008, "RTTI_407008_Enumeration_.1", 0);
MakeDword(0x407008);
MakeUnkn(0x40700C, 1);
MakeNameEx(0x40700C, "", 0);
MakeByte(0x40700C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40700D, 0x407010);
MakeByte(0x407010);
MakeDword(0x407011);
MakeDword(0x407015);
MakeDword(0x407019);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40701D, 0x407028);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x407028, 0x407031);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x407031, 0x40703C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40703C, 0x407046);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x407046, 0x407050);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x407050, 0x40705A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40705A, 0x407065);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x407065, 0x407070);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x407070, 0x40707A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40707A, 0x407088);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x407088, 0x407094);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x407094, 0x4070A0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4070A0, 0x4070AF);
MakeUnkn(0x4070B8, 1);
MakeNameEx(0x4070B8, "RTTI_4070B8_Set_TOwnerDrawState", 0);
MakeDword(0x4070B8);
MakeUnkn(0x4070BC, 1);
MakeNameEx(0x4070BC, "", 0);
MakeByte(0x4070BC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4070BD, 0x4070CD);
MakeByte(0x4070CD);
MakeDword(0x4070CE);
MakeUnkn(0x4070D4, 1);
MakeNameEx(0x4070D4, "advapi32.RegCloseKey_0", 0x20);
MakeComm(0x4070D4, "'function advapi32.RegCloseKey:Longint; stdcall;'");
MakeCode(0x4070D4);
MakeFunction(0x4070D4, 0x4070DA);
MakeUnkn(0x4070DC, 1);
MakeNameEx(0x4070DC, "advapi32.RegCreateKeyExA", 0x20);
MakeComm(0x4070DC, "'function advapi32.RegCreateKeyExA(lpSubKey:PAnsiChar; Reserved:DWORD; lpClass:PAnsiChar; dwOptions:DWORD; samDesired:DWORD; lpSecurityAttributes:PSecurityAttributes; var phkResult:HKEY; lpdwDisposition:PDWORD):Longint; stdcall;'");
MakeCode(0x4070DC);
MakeFunction(0x4070DC, 0x4070E2);
MakeUnkn(0x4070E4, 1);
MakeNameEx(0x4070E4, "advapi32.RegDeleteKeyA", 0x20);
MakeComm(0x4070E4, "'function advapi32.RegDeleteKeyA(lpSubKey:PAnsiChar):Longint; stdcall;'");
MakeCode(0x4070E4);
MakeFunction(0x4070E4, 0x4070EA);
MakeUnkn(0x4070EC, 1);
MakeNameEx(0x4070EC, "advapi32.RegDeleteValueA", 0x20);
MakeComm(0x4070EC, "'function advapi32.RegDeleteValueA(lpValueName:PAnsiChar):Longint; stdcall;'");
MakeCode(0x4070EC);
MakeFunction(0x4070EC, 0x4070F2);
MakeUnkn(0x4070F4, 1);
MakeNameEx(0x4070F4, "advapi32.RegEnumKeyExA", 0x20);
MakeComm(0x4070F4, "'function advapi32.RegEnumKeyExA(dwIndex:DWORD; lpName:PAnsiChar; var lpcbName:DWORD; lpReserved:Pointer; lpClass:PAnsiChar; lpcbClass:PDWORD; lpftLastWriteTime:PFileTime):Longint; stdcall;'");
MakeCode(0x4070F4);
MakeFunction(0x4070F4, 0x4070FA);
MakeUnkn(0x4070FC, 1);
MakeNameEx(0x4070FC, "advapi32.RegEnumValueA", 0x20);
MakeComm(0x4070FC, "'function advapi32.RegEnumValueA(dwIndex:DWORD; lpValueName:PAnsiChar; var lpcbValueName:DWORD; lpReserved:Pointer; lpType:PDWORD; lpData:PByte; lpcbData:PDWORD):Longint; stdcall;'");
MakeCode(0x4070FC);
MakeFunction(0x4070FC, 0x407102);
MakeUnkn(0x407104, 1);
MakeNameEx(0x407104, "advapi32.RegFlushKey", 0x20);
MakeComm(0x407104, "'function advapi32.RegFlushKey:Longint; stdcall;'");
MakeCode(0x407104);
MakeFunction(0x407104, 0x40710A);
MakeUnkn(0x40710C, 1);
MakeNameEx(0x40710C, "advapi32.RegOpenKeyExA_0", 0x20);
MakeComm(0x40710C, "'function advapi32.RegOpenKeyExA(lpSubKey:PAnsiChar; ulOptions:DWORD; samDesired:DWORD; var phkResult:HKEY):Longint; stdcall;'");
MakeCode(0x40710C);
MakeFunction(0x40710C, 0x407112);
MakeUnkn(0x407114, 1);
MakeNameEx(0x407114, "advapi32.RegQueryInfoKeyA", 0x20);
MakeComm(0x407114, "'function advapi32.RegQueryInfoKeyA(lpClass:PAnsiChar; lpcbClass:PDWORD; lpReserved:Pointer; lpcSubKeys:PDWORD; lpcbMaxSubKeyLen:PDWORD; lpcbMaxClassLen:PDWORD; lpcValues:PDWORD; lpcbMaxValueNameLen:PDWORD; lpcbMaxValueLen:PDWORD; lpcbSecurityDescriptor:PDWORD; lpftLastWriteTime:PFileTime):Longint; stdcall;'");
MakeCode(0x407114);
MakeFunction(0x407114, 0x40711A);
MakeUnkn(0x40711C, 1);
MakeNameEx(0x40711C, "advapi32.RegQueryValueExA_0", 0x20);
MakeComm(0x40711C, "'function advapi32.RegQueryValueExA(lpValueName:PAnsiChar; lpReserved:Pointer; lpType:PDWORD; lpData:PByte; lpcbData:PDWORD):Longint; stdcall;'");
MakeCode(0x40711C);
MakeFunction(0x40711C, 0x407122);
MakeUnkn(0x407124, 1);
MakeNameEx(0x407124, "advapi32.RegQueryValueExW", 0x20);
MakeComm(0x407124, "'function advapi32.RegQueryValueExW(lpValueName:PWideChar; lpReserved:Pointer; lpType:PDWORD; lpData:PByte; lpcbData:PDWORD):Longint; stdcall;'");
MakeCode(0x407124);
MakeFunction(0x407124, 0x40712A);
MakeUnkn(0x40712C, 1);
MakeNameEx(0x40712C, "advapi32.RegSetValueExA", 0x20);
MakeComm(0x40712C, "'function advapi32.RegSetValueExA(lpValueName:PAnsiChar; Reserved:DWORD; dwType:DWORD; lpData:Pointer; cbData:DWORD):Longint; stdcall;'");
MakeCode(0x40712C);
MakeFunction(0x40712C, 0x407132);
MakeUnkn(0x407134, 1);
MakeNameEx(0x407134, "kernel32.CloseHandle_0", 0x20);
MakeComm(0x407134, "'function kernel32.CloseHandle:Integer; stdcall;'");
MakeCode(0x407134);
MakeFunction(0x407134, 0x40713A);
MakeUnkn(0x40713C, 1);
MakeNameEx(0x40713C, "kernel32.CompareFileTime", 0x20);
MakeComm(0x40713C, "'function kernel32.CompareFileTime(const lpFileTime2:_FILETIME):Longint; stdcall;'");
MakeCode(0x40713C);
MakeFunction(0x40713C, 0x407142);
MakeUnkn(0x407144, 1);
MakeNameEx(0x407144, "kernel32.CompareStringA_0", 0x20);
MakeComm(0x407144, "'function kernel32.CompareStringA(dwCmpFlags:DWORD; lpString1:PAnsiChar; cchCount1:Integer; lpString2:PAnsiChar; cchCount2:Integer):Integer; stdcall;'");
MakeCode(0x407144);
MakeFunction(0x407144, 0x40714A);
MakeUnkn(0x40714C, 1);
MakeNameEx(0x40714C, "kernel32.CreateDirectoryA", 0x20);
MakeComm(0x40714C, "'function kernel32.CreateDirectoryA(lpSecurityAttributes:PSecurityAttributes):LongBool; stdcall;'");
MakeCode(0x40714C);
MakeFunction(0x40714C, 0x407152);
MakeUnkn(0x407154, 1);
MakeNameEx(0x407154, "kernel32.CreateEventA", 0x20);
MakeComm(0x407154, "'function kernel32.CreateEventA(bManualReset:LongBool; bInitialState:LongBool; lpName:PAnsiChar):THandle; stdcall;'");
MakeCode(0x407154);
MakeFunction(0x407154, 0x40715A);
MakeUnkn(0x40715C, 1);
MakeNameEx(0x40715C, "kernel32.CreateFileA_0", 0x20);
MakeComm(0x40715C, "'function kernel32.CreateFileA(dwDesiredAccess:DWORD; dwShareMode:DWORD; lpSecurityAttributes:PSecurityAttributes; dwCreationDisposition:DWORD; dwFlagsAndAttributes:DWORD; hTemplateFile:THandle):THandle; stdcall;'");
MakeCode(0x40715C);
MakeFunction(0x40715C, 0x407162);
MakeUnkn(0x407164, 1);
MakeNameEx(0x407164, "kernel32.CreateFileMappingA", 0x20);
MakeComm(0x407164, "'function kernel32.CreateFileMappingA(lpFileMappingAttributes:PSecurityAttributes; flProtect:DWORD; dwMaximumSizeHigh:DWORD; dwMaximumSizeLow:DWORD; lpName:PAnsiChar):THandle; stdcall;'");
MakeCode(0x407164);
MakeFunction(0x407164, 0x40716A);
MakeUnkn(0x40716C, 1);
MakeNameEx(0x40716C, "kernel32.CreateMutexA", 0x20);
MakeComm(0x40716C, "'function kernel32.CreateMutexA(bInitialOwner:LongBool; lpName:PAnsiChar):THandle; stdcall;'");
MakeCode(0x40716C);
MakeFunction(0x40716C, 0x407172);
MakeCode(0x407174);
MakeFunction(0x407174, 0x407193);
MakeUnkn(0x407194, 1);
MakeNameEx(0x407194, "kernel32.CreateThread", 0x20);
MakeComm(0x407194, "'function kernel32.CreateThread(StackSize:Cardinal; ThreadFunc:TThreadFunc; Parameter:Pointer; CreationFlags:Cardinal; var ThreadId:Cardinal):Integer; stdcall;'");
MakeCode(0x407194);
MakeFunction(0x407194, 0x40719A);
MakeUnkn(0x40719C, 1);
MakeNameEx(0x40719C, "kernel32.DeleteCriticalSection", 0x20);
MakeComm(0x40719C, "'procedure kernel32.DeleteCriticalSection; stdcall;'");
MakeCode(0x40719C);
MakeFunction(0x40719C, 0x4071A2);
MakeUnkn(0x4071A4, 1);
MakeNameEx(0x4071A4, "kernel32.DeleteFileA", 0x20);
MakeComm(0x4071A4, "'function kernel32.DeleteFileA:LongBool; stdcall;'");
MakeCode(0x4071A4);
MakeFunction(0x4071A4, 0x4071AA);
MakeUnkn(0x4071AC, 1);
MakeNameEx(0x4071AC, "kernel32.EnterCriticalSection", 0x20);
MakeComm(0x4071AC, "'procedure kernel32.EnterCriticalSection; stdcall;'");
MakeCode(0x4071AC);
MakeFunction(0x4071AC, 0x4071B2);
MakeUnkn(0x4071B4, 1);
MakeNameEx(0x4071B4, "kernel32.EnumCalendarInfoA", 0x20);
MakeComm(0x4071B4, "'function kernel32.EnumCalendarInfoA(Locale:DWORD; Calendar:DWORD; CalType:DWORD):LongBool; stdcall;'");
MakeCode(0x4071B4);
MakeFunction(0x4071B4, 0x4071BA);
MakeUnkn(0x4071BC, 1);
MakeNameEx(0x4071BC, "kernel32.FindResourceA", 0x20);
MakeComm(0x4071BC, "'function kernel32.FindResourceA(lpName:PAnsiChar; lpType:PAnsiChar):HRSRC; stdcall;'");
MakeCode(0x4071BC);
MakeFunction(0x4071BC, 0x4071C2);
MakeUnkn(0x4071C4, 1);
MakeNameEx(0x4071C4, "kernel32.FormatMessageA", 0x20);
MakeComm(0x4071C4, "'function kernel32.FormatMessageA(lpSource:Pointer; dwMessageId:DWORD; dwLanguageId:DWORD; lpBuffer:PAnsiChar; nSize:DWORD; Arguments:Pointer):DWORD; stdcall;'");
MakeCode(0x4071C4);
MakeFunction(0x4071C4, 0x4071CA);
MakeUnkn(0x4071CC, 1);
MakeNameEx(0x4071CC, "kernel32.FreeLibrary_0", 0x20);
MakeComm(0x4071CC, "'function kernel32.FreeLibrary:LongBool; stdcall;'");
MakeCode(0x4071CC);
MakeFunction(0x4071CC, 0x4071D2);
MakeUnkn(0x4071D4, 1);
MakeNameEx(0x4071D4, "kernel32.InterlockedDecrement_0", 0x20);
MakeComm(0x4071D4, "'function kernel32.InterlockedDecrement:Integer; stdcall;'");
MakeCode(0x4071D4);
MakeFunction(0x4071D4, 0x4071DA);
MakeUnkn(0x4071DC, 1);
MakeNameEx(0x4071DC, "kernel32.InterlockedExchange", 0x20);
MakeComm(0x4071DC, "'function kernel32.InterlockedExchange(B:Integer):Integer;'");
MakeCode(0x4071DC);
MakeFunction(0x4071DC, 0x4071E2);
MakeUnkn(0x4071E4, 1);
MakeNameEx(0x4071E4, "kernel32.InterlockedIncrement_0", 0x20);
MakeComm(0x4071E4, "'function kernel32.InterlockedIncrement:Integer;'");
MakeCode(0x4071E4);
MakeFunction(0x4071E4, 0x4071EA);
MakeUnkn(0x4071EC, 1);
MakeNameEx(0x4071EC, "kernel32.FreeResource", 0x20);
MakeComm(0x4071EC, "'function kernel32.FreeResource:LongBool; stdcall;'");
MakeCode(0x4071EC);
MakeFunction(0x4071EC, 0x4071F2);
MakeUnkn(0x4071F4, 1);
MakeNameEx(0x4071F4, "kernel32.GetCPInfo", 0x20);
MakeComm(0x4071F4, "'function kernel32.GetCPInfo(var lpCPInfo:_cpinfo):LongBool; stdcall;'");
MakeCode(0x4071F4);
MakeFunction(0x4071F4, 0x4071FA);
MakeUnkn(0x4071FC, 1);
MakeNameEx(0x4071FC, "kernel32.GetCurrentProcessId", 0x20);
MakeComm(0x4071FC, "'function kernel32.GetCurrentProcessId:DWORD;'");
MakeCode(0x4071FC);
MakeFunction(0x4071FC, 0x407202);
MakeUnkn(0x407204, 1);
MakeNameEx(0x407204, "kernel32.GetCurrentThreadId_0", 0x20);
MakeComm(0x407204, "'function kernel32.GetCurrentThreadId:Cardinal;'");
MakeCode(0x407204);
MakeFunction(0x407204, 0x40720A);
MakeUnkn(0x40720C, 1);
MakeNameEx(0x40720C, "kernel32.GetDateFormatA", 0x20);
MakeComm(0x40720C, "'function kernel32.GetDateFormatA(dwFlags:DWORD; lpDate:PSystemTime; lpFormat:PAnsiChar; lpDateStr:PAnsiChar; cchDate:Integer):Integer; stdcall;'");
MakeCode(0x40720C);
MakeFunction(0x40720C, 0x407212);
MakeUnkn(0x407214, 1);
MakeNameEx(0x407214, "kernel32.GetDiskFreeSpaceA", 0x20);
MakeComm(0x407214, "'function kernel32.GetDiskFreeSpaceA(var lpSectorsPerCluster:DWORD; var lpBytesPerSector:DWORD; var lpNumberOfFreeClusters:DWORD; var lpTotalNumberOfClusters:DWORD):LongBool; stdcall;'");
MakeCode(0x407214);
MakeFunction(0x407214, 0x40721A);
MakeUnkn(0x40721C, 1);
MakeNameEx(0x40721C, "kernel32.GetEnvironmentVariableA", 0x20);
MakeComm(0x40721C, "'function kernel32.GetEnvironmentVariableA(lpBuffer:PAnsiChar; nSize:DWORD):DWORD; stdcall;'");
MakeCode(0x40721C);
MakeFunction(0x40721C, 0x407222);
MakeUnkn(0x407224, 1);
MakeNameEx(0x407224, "kernel32.GetFileAttributesA", 0x20);
MakeComm(0x407224, "'function kernel32.GetFileAttributesA:DWORD; stdcall;'");
MakeCode(0x407224);
MakeFunction(0x407224, 0x40722A);
MakeUnkn(0x40722C, 1);
MakeNameEx(0x40722C, "kernel32.GetFullPathNameA", 0x20);
MakeComm(0x40722C, "'function kernel32.GetFullPathNameA(nBufferLength:DWORD; lpBuffer:PAnsiChar; var lpFilePart:PAnsiChar):DWORD; stdcall;'");
MakeCode(0x40722C);
MakeFunction(0x40722C, 0x407232);
MakeUnkn(0x407234, 1);
MakeNameEx(0x407234, "kernel32.GetLastError_0", 0x20);
MakeComm(0x407234, "'function kernel32.GetLastError:Integer;'");
MakeCode(0x407234);
MakeFunction(0x407234, 0x40723A);
MakeUnkn(0x40723C, 1);
MakeNameEx(0x40723C, "kernel32.GetLocalTime", 0x20);
MakeComm(0x40723C, "'procedure kernel32.GetLocalTime; stdcall;'");
MakeCode(0x40723C);
MakeFunction(0x40723C, 0x407242);
MakeUnkn(0x407244, 1);
MakeNameEx(0x407244, "kernel32.GetLocaleInfoA_0", 0x20);
MakeComm(0x407244, "'function kernel32.GetLocaleInfoA(LCType:DWORD; lpLCData:PAnsiChar; cchData:Integer):Integer; stdcall;'");
MakeCode(0x407244);
MakeFunction(0x407244, 0x40724A);
MakeUnkn(0x40724C, 1);
MakeNameEx(0x40724C, "kernel32.GetModuleFileNameA_0", 0x20);
MakeComm(0x40724C, "'function kernel32.GetModuleFileNameA(lpFilename:PAnsiChar; nSize:DWORD):DWORD; stdcall;'");
MakeCode(0x40724C);
MakeFunction(0x40724C, 0x407252);
MakeUnkn(0x407254, 1);
MakeNameEx(0x407254, "kernel32.GetModuleHandleA_1", 0x20);
MakeComm(0x407254, "'function kernel32.GetModuleHandleA:HMODULE; stdcall;'");
MakeCode(0x407254);
MakeFunction(0x407254, 0x40725A);
MakeUnkn(0x40725C, 1);
MakeNameEx(0x40725C, "kernel32.GetProcAddress_0", 0x20);
MakeComm(0x40725C, "'function kernel32.GetProcAddress(ProcName:PAnsiChar):Pointer; stdcall;'");
MakeCode(0x40725C);
MakeFunction(0x40725C, 0x407262);
MakeUnkn(0x407264, 1);
MakeNameEx(0x407264, "kernel32.GetProfileStringA", 0x20);
MakeComm(0x407264, "'function kernel32.GetProfileStringA(lpKeyName:PAnsiChar; lpDefault:PAnsiChar; lpReturnedString:PAnsiChar; nSize:DWORD):DWORD; stdcall;'");
MakeCode(0x407264);
MakeFunction(0x407264, 0x40726A);
MakeUnkn(0x40726C, 1);
MakeNameEx(0x40726C, "kernel32.GetStdHandle_0", 0x20);
MakeComm(0x40726C, "'function kernel32.GetStdHandle:Integer; stdcall;'");
MakeCode(0x40726C);
MakeFunction(0x40726C, 0x407272);
MakeUnkn(0x407274, 1);
MakeNameEx(0x407274, "kernel32.GetSystemInfo", 0x20);
MakeComm(0x407274, "'procedure kernel32.GetSystemInfo; stdcall;'");
MakeCode(0x407274);
MakeFunction(0x407274, 0x40727A);
MakeUnkn(0x40727C, 1);
MakeNameEx(0x40727C, "kernel32.GetThreadLocale_0", 0x20);
MakeComm(0x40727C, "'function kernel32.GetThreadLocale:Integer;'");
MakeCode(0x40727C);
MakeFunction(0x40727C, 0x407282);
MakeUnkn(0x407284, 1);
MakeNameEx(0x407284, "kernel32.GetTickCount_0", 0x20);
MakeComm(0x407284, "'function kernel32.GetTickCount:Cardinal;'");
MakeCode(0x407284);
MakeFunction(0x407284, 0x40728A);
MakeUnkn(0x40728C, 1);
MakeNameEx(0x40728C, "kernel32.GetVersion", 0x20);
MakeComm(0x40728C, "'function kernel32.GetVersion:Cardinal;'");
MakeCode(0x40728C);
MakeFunction(0x40728C, 0x407292);
MakeUnkn(0x407294, 1);
MakeNameEx(0x407294, "kernel32.GetVersionExA", 0x20);
MakeComm(0x407294, "'function kernel32.GetVersionExA:LongBool; stdcall;'");
MakeCode(0x407294);
MakeFunction(0x407294, 0x40729A);
MakeUnkn(0x40729C, 1);
MakeNameEx(0x40729C, "kernel32.GlobalAddAtomA", 0x20);
MakeComm(0x40729C, "'function kernel32.GlobalAddAtomA:Word; stdcall;'");
MakeCode(0x40729C);
MakeFunction(0x40729C, 0x4072A2);
MakeUnkn(0x4072A4, 1);
MakeNameEx(0x4072A4, "kernel32.GlobalAlloc", 0x20);
MakeComm(0x4072A4, "'function kernel32.GlobalAlloc(dwBytes:DWORD):THandle; stdcall;'");
MakeCode(0x4072A4);
MakeFunction(0x4072A4, 0x4072AA);
MakeUnkn(0x4072AC, 1);
MakeNameEx(0x4072AC, "kernel32.GlobalDeleteAtom", 0x20);
MakeComm(0x4072AC, "'function kernel32.GlobalDeleteAtom:Word; stdcall;'");
MakeCode(0x4072AC);
MakeFunction(0x4072AC, 0x4072B2);
MakeUnkn(0x4072B4, 1);
MakeNameEx(0x4072B4, "kernel32.GlobalFindAtomA", 0x20);
MakeComm(0x4072B4, "'function kernel32.GlobalFindAtomA:Word; stdcall;'");
MakeCode(0x4072B4);
MakeFunction(0x4072B4, 0x4072BA);
MakeUnkn(0x4072BC, 1);
MakeNameEx(0x4072BC, "kernel32.GlobalFree", 0x20);
MakeComm(0x4072BC, "'function kernel32.GlobalFree:THandle; stdcall;'");
MakeCode(0x4072BC);
MakeFunction(0x4072BC, 0x4072C2);
MakeUnkn(0x4072C4, 1);
MakeNameEx(0x4072C4, "kernel32.GlobalLock", 0x20);
MakeComm(0x4072C4, "'function kernel32.GlobalLock:Pointer; stdcall;'");
MakeCode(0x4072C4);
MakeFunction(0x4072C4, 0x4072CA);
MakeUnkn(0x4072CC, 1);
MakeNameEx(0x4072CC, "kernel32.GlobalSize", 0x20);
MakeComm(0x4072CC, "'function kernel32.GlobalSize:DWORD; stdcall;'");
MakeCode(0x4072CC);
MakeFunction(0x4072CC, 0x4072D2);
MakeUnkn(0x4072D4, 1);
MakeNameEx(0x4072D4, "kernel32.GlobalUnlock", 0x20);
MakeComm(0x4072D4, "'function kernel32.GlobalUnlock:LongBool; stdcall;'");
MakeCode(0x4072D4);
MakeFunction(0x4072D4, 0x4072DA);
MakeUnkn(0x4072DC, 1);
MakeNameEx(0x4072DC, "kernel32.InitializeCriticalSection", 0x20);
MakeComm(0x4072DC, "'procedure kernel32.InitializeCriticalSection; stdcall;'");
MakeCode(0x4072DC);
MakeFunction(0x4072DC, 0x4072E2);
MakeUnkn(0x4072E4, 1);
MakeNameEx(0x4072E4, "kernel32.IsDBCSLeadByte", 0x20);
MakeComm(0x4072E4, "'function kernel32.IsDBCSLeadByte:LongBool; stdcall;'");
MakeCode(0x4072E4);
MakeFunction(0x4072E4, 0x4072EA);
MakeUnkn(0x4072EC, 1);
MakeNameEx(0x4072EC, "kernel32.IsValidCodePage", 0x20);
MakeComm(0x4072EC, "'function kernel32.IsValidCodePage:LongBool; stdcall;'");
MakeCode(0x4072EC);
MakeFunction(0x4072EC, 0x4072F2);
MakeUnkn(0x4072F4, 1);
MakeNameEx(0x4072F4, "kernel32.LeaveCriticalSection", 0x20);
MakeComm(0x4072F4, "'procedure kernel32.LeaveCriticalSection; stdcall;'");
MakeCode(0x4072F4);
MakeFunction(0x4072F4, 0x4072FA);
MakeUnkn(0x4072FC, 1);
MakeNameEx(0x4072FC, "kernel32.LoadLibraryA", 0x20);
MakeComm(0x4072FC, "'function kernel32.LoadLibraryA:HMODULE; stdcall;'");
MakeCode(0x4072FC);
MakeFunction(0x4072FC, 0x407302);
MakeUnkn(0x407304, 1);
MakeNameEx(0x407304, "kernel32.LoadResource", 0x20);
MakeComm(0x407304, "'function kernel32.LoadResource(hResInfo:HRSRC):THandle; stdcall;'");
MakeCode(0x407304);
MakeFunction(0x407304, 0x40730A);
MakeUnkn(0x40730C, 1);
MakeNameEx(0x40730C, "kernel32.LockResource", 0x20);
MakeComm(0x40730C, "'function kernel32.LockResource:Pointer; stdcall;'");
MakeCode(0x40730C);
MakeFunction(0x40730C, 0x407312);
MakeUnkn(0x407314, 1);
MakeNameEx(0x407314, "kernel32.MapViewOfFile", 0x20);
MakeComm(0x407314, "'function kernel32.MapViewOfFile(dwDesiredAccess:DWORD; dwFileOffsetHigh:DWORD; dwFileOffsetLow:DWORD; dwNumberOfBytesToMap:DWORD):Pointer; stdcall;'");
MakeCode(0x407314);
MakeFunction(0x407314, 0x40731A);
MakeUnkn(0x40731C, 1);
MakeNameEx(0x40731C, "kernel32.MulDiv", 0x20);
MakeComm(0x40731C, "'function kernel32.MulDiv(nNumerator:Integer; nDenominator:Integer):Integer; stdcall;'");
MakeCode(0x40731C);
MakeFunction(0x40731C, 0x407322);
MakeUnkn(0x407324, 1);
MakeNameEx(0x407324, "kernel32.ReadFile_0", 0x20);
MakeComm(0x407324, "'function kernel32.ReadFile(var Buffer:void ; nNumberOfBytesToRead:Cardinal; var lpNumberOfBytesRead:Cardinal; lpOverlapped:Pointer):Integer; stdcall;'");
MakeCode(0x407324);
MakeFunction(0x407324, 0x40732A);
MakeUnkn(0x40732C, 1);
MakeNameEx(0x40732C, "kernel32.ReleaseMutex", 0x20);
MakeComm(0x40732C, "'function kernel32.ReleaseMutex:LongBool; stdcall;'");
MakeCode(0x40732C);
MakeFunction(0x40732C, 0x407332);
MakeUnkn(0x407334, 1);
MakeNameEx(0x407334, "kernel32.RemoveDirectoryA", 0x20);
MakeComm(0x407334, "'function kernel32.RemoveDirectoryA:LongBool; stdcall;'");
MakeCode(0x407334);
MakeFunction(0x407334, 0x40733A);
MakeUnkn(0x40733C, 1);
MakeNameEx(0x40733C, "kernel32.ResetEvent", 0x20);
MakeComm(0x40733C, "'function kernel32.ResetEvent:LongBool; stdcall;'");
MakeCode(0x40733C);
MakeFunction(0x40733C, 0x407342);
MakeUnkn(0x407344, 1);
MakeNameEx(0x407344, "kernel32.SetEndOfFile_0", 0x20);
MakeComm(0x407344, "'function kernel32.SetEndOfFile:LongBool; stdcall;'");
MakeCode(0x407344);
MakeFunction(0x407344, 0x40734A);
MakeUnkn(0x40734C, 1);
MakeNameEx(0x40734C, "kernel32.SetErrorMode", 0x20);
MakeComm(0x40734C, "'function kernel32.SetErrorMode:LongWord; stdcall;'");
MakeCode(0x40734C);
MakeFunction(0x40734C, 0x407352);
MakeUnkn(0x407354, 1);
MakeNameEx(0x407354, "kernel32.SetEvent", 0x20);
MakeComm(0x407354, "'function kernel32.SetEvent:LongBool; stdcall;'");
MakeCode(0x407354);
MakeFunction(0x407354, 0x40735A);
MakeUnkn(0x40735C, 1);
MakeNameEx(0x40735C, "kernel32.SetFilePointer_0", 0x20);
MakeComm(0x40735C, "'function kernel32.SetFilePointer(lDistanceToMove:Longint; lpDistanceToMoveHigh:Pointer; dwMoveMethod:DWORD):DWORD; stdcall;'");
MakeCode(0x40735C);
MakeFunction(0x40735C, 0x407362);
MakeUnkn(0x407364, 1);
MakeNameEx(0x407364, "kernel32.SetThreadLocale", 0x20);
MakeComm(0x407364, "'function kernel32.SetThreadLocale:LongBool; stdcall;'");
MakeCode(0x407364);
MakeFunction(0x407364, 0x40736A);
MakeUnkn(0x40736C, 1);
MakeNameEx(0x40736C, "kernel32.SizeofResource", 0x20);
MakeComm(0x40736C, "'function kernel32.SizeofResource(hResInfo:HRSRC):DWORD; stdcall;'");
MakeCode(0x40736C);
MakeFunction(0x40736C, 0x407372);
MakeUnkn(0x407374, 1);
MakeNameEx(0x407374, "kernel32.UnmapViewOfFile", 0x20);
MakeComm(0x407374, "'function kernel32.UnmapViewOfFile:LongBool; stdcall;'");
MakeCode(0x407374);
MakeFunction(0x407374, 0x40737A);
MakeUnkn(0x40737C, 1);
MakeNameEx(0x40737C, "kernel32.VirtualAlloc_0", 0x20);
MakeComm(0x40737C, "'function kernel32.VirtualAlloc(dwSize:DWORD; flAllocationType:DWORD; flProtect:DWORD):Pointer; stdcall;'");
MakeCode(0x40737C);
MakeFunction(0x40737C, 0x407382);
MakeUnkn(0x407384, 1);
MakeNameEx(0x407384, "kernel32.VirtualFree_0", 0x20);
MakeComm(0x407384, "'function kernel32.VirtualFree(dwSize:DWORD; dwFreeType:DWORD):LongBool; stdcall;'");
MakeCode(0x407384);
MakeFunction(0x407384, 0x40738A);
MakeUnkn(0x40738C, 1);
MakeNameEx(0x40738C, "kernel32.VirtualQuery_0", 0x20);
MakeComm(0x40738C, "'function kernel32.VirtualQuery(var lpBuffer:_MEMORY_BASIC_INFORMATION; dwLength:DWORD):DWORD; stdcall;'");
MakeCode(0x40738C);
MakeFunction(0x40738C, 0x407392);
MakeUnkn(0x407394, 1);
MakeNameEx(0x407394, "kernel32.WaitForSingleObject", 0x20);
MakeComm(0x407394, "'function kernel32.WaitForSingleObject(dwMilliseconds:DWORD):DWORD; stdcall;'");
MakeCode(0x407394);
MakeFunction(0x407394, 0x40739A);
MakeUnkn(0x40739C, 1);
MakeNameEx(0x40739C, "kernel32.WideCharToMultiByte_0", 0x20);
MakeComm(0x40739C, "'function kernel32.WideCharToMultiByte(dwFlags:DWORD; lpWideCharStr:PWideChar; cchWideChar:Integer; lpMultiByteStr:PAnsiChar; cchMultiByte:Integer; lpDefaultChar:PAnsiChar; lpUsedDefaultChar:PBOOL):Integer; stdcall;'");
MakeCode(0x40739C);
MakeFunction(0x40739C, 0x4073A2);
MakeUnkn(0x4073A4, 1);
MakeNameEx(0x4073A4, "kernel32.WriteFile_0", 0x20);
MakeComm(0x4073A4, "'function kernel32.WriteFile(const Buffer:void ; nNumberOfBytesToWrite:Cardinal; var lpNumberOfBytesWritten:Cardinal; lpOverlapped:Pointer):Integer; stdcall;'");
MakeCode(0x4073A4);
MakeFunction(0x4073A4, 0x4073AA);
MakeUnkn(0x4073AC, 1);
MakeNameEx(0x4073AC, "kernel32.lstrcpyA", 0x20);
MakeComm(0x4073AC, "'function kernel32.lstrcpyA(lpString2:PAnsiChar):PAnsiChar; stdcall;'");
MakeCode(0x4073AC);
MakeFunction(0x4073AC, 0x4073B2);
MakeUnkn(0x4073B4, 1);
MakeNameEx(0x4073B4, "version.GetFileVersionInfoA", 0x20);
MakeComm(0x4073B4, "'function version.GetFileVersionInfoA(dwHandle:DWORD; dwLen:DWORD; lpData:Pointer):LongBool; stdcall;'");
MakeCode(0x4073B4);
MakeFunction(0x4073B4, 0x4073BA);
MakeUnkn(0x4073BC, 1);
MakeNameEx(0x4073BC, "version.GetFileVersionInfoSizeA", 0x20);
MakeComm(0x4073BC, "'function version.GetFileVersionInfoSizeA(var lpdwHandle:DWORD):DWORD; stdcall;'");
MakeCode(0x4073BC);
MakeFunction(0x4073BC, 0x4073C2);
MakeUnkn(0x4073C4, 1);
MakeNameEx(0x4073C4, "version.VerQueryValueA", 0x20);
MakeComm(0x4073C4, "'function version.VerQueryValueA(lpSubBlock:PAnsiChar; var lplpBuffer:Pointer; var puLen:LongWord):LongBool; stdcall;'");
MakeCode(0x4073C4);
MakeFunction(0x4073C4, 0x4073CA);
MakeUnkn(0x4073CC, 1);
MakeNameEx(0x4073CC, "gdi32.AbortDoc", 0x20);
MakeComm(0x4073CC, "'function gdi32.AbortDoc:Integer; stdcall;'");
MakeCode(0x4073CC);
MakeFunction(0x4073CC, 0x4073D2);
MakeUnkn(0x4073D4, 1);
MakeNameEx(0x4073D4, "gdi32.BitBlt", 0x20);
MakeComm(0x4073D4, "'function gdi32.BitBlt(X:Integer; Y:Integer; Width:Integer; Height:Integer; SrcDC:HDC; XSrc:Integer; YSrc:Integer; Rop:DWORD):LongBool; stdcall;'");
MakeCode(0x4073D4);
MakeFunction(0x4073D4, 0x4073DA);
MakeUnkn(0x4073DC, 1);
MakeNameEx(0x4073DC, "gdi32.CombineRgn", 0x20);
MakeComm(0x4073DC, "'function gdi32.CombineRgn(p2:HRGN; p3:HRGN; p4:Integer):Integer; stdcall;'");
MakeCode(0x4073DC);
MakeFunction(0x4073DC, 0x4073E2);
MakeUnkn(0x4073E4, 1);
MakeNameEx(0x4073E4, "gdi32.CopyEnhMetaFileA", 0x20);
MakeComm(0x4073E4, "'function gdi32.CopyEnhMetaFileA(p2:PAnsiChar):HENHMETAFILE; stdcall;'");
MakeCode(0x4073E4);
MakeFunction(0x4073E4, 0x4073EA);
MakeUnkn(0x4073EC, 1);
MakeNameEx(0x4073EC, "gdi32.CreateBitmap", 0x20);
MakeComm(0x4073EC, "'function gdi32.CreateBitmap(Height:Integer; Planes:Longint; BitCount:Longint; Bits:Pointer):HBITMAP; stdcall;'");
MakeCode(0x4073EC);
MakeFunction(0x4073EC, 0x4073F2);
MakeUnkn(0x4073F4, 1);
MakeNameEx(0x4073F4, "gdi32.CreateBrushIndirect", 0x20);
MakeComm(0x4073F4, "'function gdi32.CreateBrushIndirect:HBRUSH; stdcall;'");
MakeCode(0x4073F4);
MakeFunction(0x4073F4, 0x4073FA);
MakeUnkn(0x4073FC, 1);
MakeNameEx(0x4073FC, "gdi32.CreateCompatibleBitmap", 0x20);
MakeComm(0x4073FC, "'function gdi32.CreateCompatibleBitmap(Width:Integer; Height:Integer):HBITMAP; stdcall;'");
MakeCode(0x4073FC);
MakeFunction(0x4073FC, 0x407402);
MakeUnkn(0x407404, 1);
MakeNameEx(0x407404, "gdi32.CreateCompatibleDC", 0x20);
MakeComm(0x407404, "'function gdi32.CreateCompatibleDC:HDC; stdcall;'");
MakeCode(0x407404);
MakeFunction(0x407404, 0x40740A);
MakeUnkn(0x40740C, 1);
MakeNameEx(0x40740C, "gdi32.CreateDCA", 0x20);
MakeComm(0x40740C, "'function gdi32.CreateDCA(lpszDevice:PAnsiChar; lpszOutput:PAnsiChar; lpdvmInit:PDeviceModeA):HDC; stdcall;'");
MakeCode(0x40740C);
MakeFunction(0x40740C, 0x407412);
MakeUnkn(0x407414, 1);
MakeNameEx(0x407414, "gdi32.CreateDIBSection", 0x20);
MakeComm(0x407414, "'function gdi32.CreateDIBSection(const p2:tagBITMAPINFO; p3:LongWord; var p4:Pointer; p5:THandle; p6:DWORD):HBITMAP; stdcall;'");
MakeCode(0x407414);
MakeFunction(0x407414, 0x40741A);
MakeUnkn(0x40741C, 1);
MakeNameEx(0x40741C, "gdi32.CreateDIBitmap", 0x20);
MakeComm(0x40741C, "'function gdi32.CreateDIBitmap(var InfoHeader:tagBITMAPINFOHEADER; dwUsage:DWORD; InitBits:PChar; var InitInfo:tagBITMAPINFO; wUsage:LongWord):HBITMAP; stdcall;'");
MakeCode(0x40741C);
MakeFunction(0x40741C, 0x407422);
MakeUnkn(0x407424, 1);
MakeNameEx(0x407424, "gdi32.CreateFontIndirectA", 0x20);
MakeComm(0x407424, "'function gdi32.CreateFontIndirectA:HFONT; stdcall;'");
MakeCode(0x407424);
MakeFunction(0x407424, 0x40742A);
MakeUnkn(0x40742C, 1);
MakeNameEx(0x40742C, "gdi32.CreateHalftonePalette", 0x20);
MakeComm(0x40742C, "'function gdi32.CreateHalftonePalette:HPALETTE; stdcall;'");
MakeCode(0x40742C);
MakeFunction(0x40742C, 0x407432);
MakeUnkn(0x407434, 1);
MakeNameEx(0x407434, "gdi32.CreateICA", 0x20);
MakeComm(0x407434, "'function gdi32.CreateICA(lpszDevice:PAnsiChar; lpszOutput:PAnsiChar; lpdvmInit:PDeviceModeA):HDC; stdcall;'");
MakeCode(0x407434);
MakeFunction(0x407434, 0x40743A);
MakeUnkn(0x40743C, 1);
MakeNameEx(0x40743C, "gdi32.CreatePalette", 0x20);
MakeComm(0x40743C, "'function gdi32.CreatePalette:HPALETTE; stdcall;'");
MakeCode(0x40743C);
MakeFunction(0x40743C, 0x407442);
MakeUnkn(0x407444, 1);
MakeNameEx(0x407444, "gdi32.CreatePatternBrush", 0x20);
MakeComm(0x407444, "'function gdi32.CreatePatternBrush:HBRUSH; stdcall;'");
MakeCode(0x407444);
MakeFunction(0x407444, 0x40744A);
MakeUnkn(0x40744C, 1);
MakeNameEx(0x40744C, "gdi32.CreatePen", 0x20);
MakeComm(0x40744C, "'function gdi32.CreatePen(Width:Integer; Color:DWORD):HPEN; stdcall;'");
MakeCode(0x40744C);
MakeFunction(0x40744C, 0x407452);
MakeUnkn(0x407454, 1);
MakeNameEx(0x407454, "gdi32.CreatePenIndirect", 0x20);
MakeComm(0x407454, "'function gdi32.CreatePenIndirect:HPEN; stdcall;'");
MakeCode(0x407454);
MakeFunction(0x407454, 0x40745A);
MakeUnkn(0x40745C, 1);
MakeNameEx(0x40745C, "gdi32.CreateRectRgn", 0x20);
MakeComm(0x40745C, "'function gdi32.CreateRectRgn(p2:Integer; p3:Integer; p4:Integer):HRGN; stdcall;'");
MakeCode(0x40745C);
MakeFunction(0x40745C, 0x407462);
MakeUnkn(0x407464, 1);
MakeNameEx(0x407464, "gdi32.CreateRectRgnIndirect", 0x20);
MakeComm(0x407464, "'function gdi32.CreateRectRgnIndirect:HRGN; stdcall;'");
MakeCode(0x407464);
MakeFunction(0x407464, 0x40746A);
MakeUnkn(0x40746C, 1);
MakeNameEx(0x40746C, "gdi32.CreateSolidBrush", 0x20);
MakeComm(0x40746C, "'function gdi32.CreateSolidBrush:HBRUSH; stdcall;'");
MakeCode(0x40746C);
MakeFunction(0x40746C, 0x407472);
MakeUnkn(0x407474, 1);
MakeNameEx(0x407474, "gdi32.DeleteDC", 0x20);
MakeComm(0x407474, "'function gdi32.DeleteDC:LongBool; stdcall;'");
MakeCode(0x407474);
MakeFunction(0x407474, 0x40747A);
MakeUnkn(0x40747C, 1);
MakeNameEx(0x40747C, "gdi32.DeleteEnhMetaFile", 0x20);
MakeComm(0x40747C, "'function gdi32.DeleteEnhMetaFile:LongBool; stdcall;'");
MakeCode(0x40747C);
MakeFunction(0x40747C, 0x407482);
MakeUnkn(0x407484, 1);
MakeNameEx(0x407484, "gdi32.DeleteObject", 0x20);
MakeComm(0x407484, "'function gdi32.DeleteObject:LongBool; stdcall;'");
MakeCode(0x407484);
MakeFunction(0x407484, 0x40748A);
MakeUnkn(0x40748C, 1);
MakeNameEx(0x40748C, "gdi32.EndDoc", 0x20);
MakeComm(0x40748C, "'function gdi32.EndDoc:Integer; stdcall;'");
MakeCode(0x40748C);
MakeFunction(0x40748C, 0x407492);
MakeUnkn(0x407494, 1);
MakeNameEx(0x407494, "gdi32.EndPage", 0x20);
MakeComm(0x407494, "'function gdi32.EndPage:Integer; stdcall;'");
MakeCode(0x407494);
MakeFunction(0x407494, 0x40749A);
MakeUnkn(0x40749C, 1);
MakeNameEx(0x40749C, "gdi32.EnumFontFamiliesExA", 0x20);
MakeComm(0x40749C, "'function gdi32.EnumFontFamiliesExA(var p2:tagLOGFONTA; p3:Pointer; p4:Longint; p5:DWORD):LongBool; stdcall;'");
MakeCode(0x40749C);
MakeFunction(0x40749C, 0x4074A2);
MakeUnkn(0x4074A4, 1);
MakeNameEx(0x4074A4, "gdi32.EnumFontsA", 0x20);
MakeComm(0x4074A4, "'function gdi32.EnumFontsA(lpszFace:PAnsiChar; fntenmprc:Pointer; lpszData:PChar):Integer; stdcall;'");
MakeCode(0x4074A4);
MakeFunction(0x4074A4, 0x4074AA);
MakeUnkn(0x4074AC, 1);
MakeNameEx(0x4074AC, "gdi32.EnumObjects", 0x20);
MakeComm(0x4074AC, "'function gdi32.EnumObjects(p2:Integer; p3:Pointer; p4:Longint):Integer; stdcall;'");
MakeCode(0x4074AC);
MakeFunction(0x4074AC, 0x4074B2);
MakeUnkn(0x4074B4, 1);
MakeNameEx(0x4074B4, "gdi32.ExcludeClipRect", 0x20);
MakeComm(0x4074B4, "'function gdi32.ExcludeClipRect(LeftRect:Integer; TopRect:Integer; RightRect:Integer; BottomRect:Integer):Integer; stdcall;'");
MakeCode(0x4074B4);
MakeFunction(0x4074B4, 0x4074BA);
MakeUnkn(0x4074BC, 1);
MakeNameEx(0x4074BC, "gdi32.ExtTextOutA", 0x20);
MakeComm(0x4074BC, "'function gdi32.ExtTextOutA(X:Integer; Y:Integer; Options:Longint; Rect:PRect; Str:PAnsiChar; Count:Longint; Dx:PInteger):LongBool; stdcall;'");
MakeCode(0x4074BC);
MakeFunction(0x4074BC, 0x4074C2);
MakeUnkn(0x4074C4, 1);
MakeNameEx(0x4074C4, "gdi32.GetBitmapBits", 0x20);
MakeComm(0x4074C4, "'function gdi32.GetBitmapBits(Count:Longint; Bits:Pointer):Longint; stdcall;'");
MakeCode(0x4074C4);
MakeFunction(0x4074C4, 0x4074CA);
MakeUnkn(0x4074CC, 1);
MakeNameEx(0x4074CC, "gdi32.GetBrushOrgEx", 0x20);
MakeComm(0x4074CC, "'function gdi32.GetBrushOrgEx(var lppt:TPoint):LongBool; stdcall;'");
MakeCode(0x4074CC);
MakeFunction(0x4074CC, 0x4074D2);
MakeUnkn(0x4074D4, 1);
MakeNameEx(0x4074D4, "gdi32.GetClipBox", 0x20);
MakeComm(0x4074D4, "'function gdi32.GetClipBox(var Rect:TRect):Integer; stdcall;'");
MakeCode(0x4074D4);
MakeFunction(0x4074D4, 0x4074DA);
MakeUnkn(0x4074DC, 1);
MakeNameEx(0x4074DC, "gdi32.GetClipRgn", 0x20);
MakeComm(0x4074DC, "'function gdi32.GetClipRgn(rgn:HRGN):Integer; stdcall;'");
MakeCode(0x4074DC);
MakeFunction(0x4074DC, 0x4074E2);
MakeUnkn(0x4074E4, 1);
MakeNameEx(0x4074E4, "gdi32.GetCurrentObject", 0x20);
MakeComm(0x4074E4, "'function gdi32.GetCurrentObject(p2:LongWord):HGDIOBJ; stdcall;'");
MakeCode(0x4074E4);
MakeFunction(0x4074E4, 0x4074EA);
MakeUnkn(0x4074EC, 1);
MakeNameEx(0x4074EC, "gdi32.GetCurrentPositionEx", 0x20);
MakeComm(0x4074EC, "'function gdi32.GetCurrentPositionEx(Point:PPoint):LongBool; stdcall;'");
MakeCode(0x4074EC);
MakeFunction(0x4074EC, 0x4074F2);
MakeUnkn(0x4074F4, 1);
MakeNameEx(0x4074F4, "gdi32.GetDCOrgEx", 0x20);
MakeComm(0x4074F4, "'function gdi32.GetDCOrgEx(var Origin:TPoint):LongBool; stdcall;'");
MakeCode(0x4074F4);
MakeFunction(0x4074F4, 0x4074FA);
MakeUnkn(0x4074FC, 1);
MakeNameEx(0x4074FC, "gdi32.GetDIBColorTable", 0x20);
MakeComm(0x4074FC, "'function gdi32.GetDIBColorTable(p2:LongWord; p3:LongWord; var RGBQuadStructs:void ):LongWord; stdcall;'");
MakeCode(0x4074FC);
MakeFunction(0x4074FC, 0x407502);
MakeUnkn(0x407504, 1);
MakeNameEx(0x407504, "gdi32.GetDIBits", 0x20);
MakeComm(0x407504, "'function gdi32.GetDIBits(Bitmap:HBITMAP; StartScan:LongWord; NumScans:LongWord; Bits:Pointer; var BitInfo:tagBITMAPINFO; Usage:LongWord):Integer; stdcall;'");
MakeCode(0x407504);
MakeFunction(0x407504, 0x40750A);
MakeUnkn(0x40750C, 1);
MakeNameEx(0x40750C, "gdi32.GetDeviceCaps", 0x20);
MakeComm(0x40750C, "'function gdi32.GetDeviceCaps(Index:Integer):Integer; stdcall;'");
MakeCode(0x40750C);
MakeFunction(0x40750C, 0x407512);
MakeUnkn(0x407514, 1);
MakeNameEx(0x407514, "gdi32.GetEnhMetaFileBits", 0x20);
MakeComm(0x407514, "'function gdi32.GetEnhMetaFileBits(p2:LongWord; p3:PByte):LongWord; stdcall;'");
MakeCode(0x407514);
MakeFunction(0x407514, 0x40751A);
MakeUnkn(0x40751C, 1);
MakeNameEx(0x40751C, "gdi32.GetEnhMetaFileHeader", 0x20);
MakeComm(0x40751C, "'function gdi32.GetEnhMetaFileHeader(p2:LongWord; p3:PEnhMetaHeader):LongWord; stdcall;'");
MakeCode(0x40751C);
MakeFunction(0x40751C, 0x407522);
MakeUnkn(0x407524, 1);
MakeNameEx(0x407524, "gdi32.GetEnhMetaFilePaletteEntries", 0x20);
MakeComm(0x407524, "'function gdi32.GetEnhMetaFilePaletteEntries(p2:LongWord; p3:Pointer):LongWord; stdcall;'");
MakeCode(0x407524);
MakeFunction(0x407524, 0x40752A);
MakeUnkn(0x40752C, 1);
MakeNameEx(0x40752C, "gdi32.GetObjectA", 0x20);
MakeComm(0x40752C, "'function gdi32.GetObjectA(p2:Integer; p3:Pointer):Integer; stdcall;'");
MakeCode(0x40752C);
MakeFunction(0x40752C, 0x407532);
MakeUnkn(0x407534, 1);
MakeNameEx(0x407534, "gdi32.GetPaletteEntries", 0x20);
MakeComm(0x407534, "'function gdi32.GetPaletteEntries(StartIndex:LongWord; NumEntries:LongWord; var PaletteEntries:void ):LongWord; stdcall;'");
MakeCode(0x407534);
MakeFunction(0x407534, 0x40753A);
MakeUnkn(0x40753C, 1);
MakeNameEx(0x40753C, "gdi32.GetPixel", 0x20);
MakeComm(0x40753C, "'function gdi32.GetPixel(X:Integer; Y:Integer):DWORD; stdcall;'");
MakeCode(0x40753C);
MakeFunction(0x40753C, 0x407542);
MakeUnkn(0x407544, 1);
MakeNameEx(0x407544, "gdi32.GetRgnBox", 0x20);
MakeComm(0x407544, "'function gdi32.GetRgnBox(var p2:TRect):Integer; stdcall;'");
MakeCode(0x407544);
MakeFunction(0x407544, 0x40754A);
MakeUnkn(0x40754C, 1);
MakeNameEx(0x40754C, "gdi32.GetStockObject", 0x20);
MakeComm(0x40754C, "'function gdi32.GetStockObject:HGDIOBJ; stdcall;'");
MakeCode(0x40754C);
MakeFunction(0x40754C, 0x407552);
MakeUnkn(0x407554, 1);
MakeNameEx(0x407554, "gdi32.GetSystemPaletteEntries", 0x20);
MakeComm(0x407554, "'function gdi32.GetSystemPaletteEntries(StartIndex:LongWord; NumEntries:LongWord; var PaletteEntries:void ):LongWord; stdcall;'");
MakeCode(0x407554);
MakeFunction(0x407554, 0x40755A);
MakeUnkn(0x40755C, 1);
MakeNameEx(0x40755C, "gdi32.GetTextColor", 0x20);
MakeComm(0x40755C, "'function gdi32.GetTextColor:DWORD; stdcall;'");
MakeCode(0x40755C);
MakeFunction(0x40755C, 0x407562);
MakeUnkn(0x407564, 1);
MakeNameEx(0x407564, "gdi32.GetTextExtentPoint32A", 0x20);
MakeComm(0x407564, "'function gdi32.GetTextExtentPoint32A(Str:PAnsiChar; Count:Integer; var Size:TSize):LongBool; stdcall;'");
MakeCode(0x407564);
MakeFunction(0x407564, 0x40756A);
MakeUnkn(0x40756C, 1);
MakeNameEx(0x40756C, "gdi32.GetTextExtentPointA", 0x20);
MakeComm(0x40756C, "'function gdi32.GetTextExtentPointA(Str:PAnsiChar; Count:Integer; var Size:TSize):LongBool; stdcall;'");
MakeCode(0x40756C);
MakeFunction(0x40756C, 0x407572);
MakeUnkn(0x407574, 1);
MakeNameEx(0x407574, "gdi32.GetTextMetricsA", 0x20);
MakeComm(0x407574, "'function gdi32.GetTextMetricsA(var TM:tagTEXTMETRICA):LongBool; stdcall;'");
MakeCode(0x407574);
MakeFunction(0x407574, 0x40757A);
MakeUnkn(0x40757C, 1);
MakeNameEx(0x40757C, "gdi32.GetWinMetaFileBits", 0x20);
MakeComm(0x40757C, "'function gdi32.GetWinMetaFileBits(p2:LongWord; p3:PByte; p4:Integer; p5:HDC):LongWord; stdcall;'");
MakeCode(0x40757C);
MakeFunction(0x40757C, 0x407582);
MakeUnkn(0x407584, 1);
MakeNameEx(0x407584, "gdi32.GetWindowOrgEx", 0x20);
MakeComm(0x407584, "'function gdi32.GetWindowOrgEx(var Point:TPoint):LongBool; stdcall;'");
MakeCode(0x407584);
MakeFunction(0x407584, 0x40758A);
MakeUnkn(0x40758C, 1);
MakeNameEx(0x40758C, "gdi32.IntersectClipRect", 0x20);
MakeComm(0x40758C, "'function gdi32.IntersectClipRect(X1:Integer; Y1:Integer; X2:Integer; Y2:Integer):Integer; stdcall;'");
MakeCode(0x40758C);
MakeFunction(0x40758C, 0x407592);
MakeUnkn(0x407594, 1);
MakeNameEx(0x407594, "gdi32.InvertRgn", 0x20);
MakeComm(0x407594, "'function gdi32.InvertRgn(p2:HRGN):LongBool; stdcall;'");
MakeCode(0x407594);
MakeFunction(0x407594, 0x40759A);
MakeUnkn(0x40759C, 1);
MakeNameEx(0x40759C, "gdi32.LineTo", 0x20);
MakeComm(0x40759C, "'function gdi32.LineTo(X:Integer; Y:Integer):LongBool; stdcall;'");
MakeCode(0x40759C);
MakeFunction(0x40759C, 0x4075A2);
MakeUnkn(0x4075A4, 1);
MakeNameEx(0x4075A4, "gdi32.MaskBlt", 0x20);
MakeComm(0x4075A4, "'function gdi32.MaskBlt(XDest:Integer; YDest:Integer; Width:Integer; Height:Integer; SrcDC:HDC; XScr:Integer; YScr:Integer; Mask:HBITMAP; xMask:Integer; yMask:Integer; Rop:DWORD):LongBool; stdcall;'");
MakeCode(0x4075A4);
MakeFunction(0x4075A4, 0x4075AA);
MakeUnkn(0x4075AC, 1);
MakeNameEx(0x4075AC, "gdi32.MoveToEx", 0x20);
MakeComm(0x4075AC, "'function gdi32.MoveToEx(p2:Integer; p3:Integer; p4:PPoint):LongBool; stdcall;'");
MakeCode(0x4075AC);
MakeFunction(0x4075AC, 0x4075B2);
MakeUnkn(0x4075B4, 1);
MakeNameEx(0x4075B4, "gdi32.OffsetClipRgn", 0x20);
MakeComm(0x4075B4, "'function gdi32.OffsetClipRgn(XOffset:Integer; YOffset:Integer):Integer; stdcall;'");
MakeCode(0x4075B4);
MakeFunction(0x4075B4, 0x4075BA);
MakeUnkn(0x4075BC, 1);
MakeNameEx(0x4075BC, "gdi32.PatBlt", 0x20);
MakeComm(0x4075BC, "'function gdi32.PatBlt(X:Integer; Y:Integer; Width:Integer; Height:Integer; Rop:DWORD):LongBool; stdcall;'");
MakeCode(0x4075BC);
MakeFunction(0x4075BC, 0x4075C2);
MakeUnkn(0x4075C4, 1);
MakeNameEx(0x4075C4, "gdi32.PlayEnhMetaFile", 0x20);
MakeComm(0x4075C4, "'function gdi32.PlayEnhMetaFile(p2:HENHMETAFILE; const p3:TRect):LongBool; stdcall;'");
MakeCode(0x4075C4);
MakeFunction(0x4075C4, 0x4075CA);
MakeUnkn(0x4075CC, 1);
MakeNameEx(0x4075CC, "gdi32.Polygon", 0x20);
MakeComm(0x4075CC, "'function gdi32.Polygon(var Points:void ; Count:Integer):LongBool; stdcall;'");
MakeCode(0x4075CC);
MakeFunction(0x4075CC, 0x4075D2);
MakeUnkn(0x4075D4, 1);
MakeNameEx(0x4075D4, "gdi32.Polyline", 0x20);
MakeComm(0x4075D4, "'function gdi32.Polyline(var Points:void ; Count:Integer):LongBool; stdcall;'");
MakeCode(0x4075D4);
MakeFunction(0x4075D4, 0x4075DA);
MakeUnkn(0x4075DC, 1);
MakeNameEx(0x4075DC, "gdi32.RealizePalette", 0x20);
MakeComm(0x4075DC, "'function gdi32.RealizePalette:LongWord; stdcall;'");
MakeCode(0x4075DC);
MakeFunction(0x4075DC, 0x4075E2);
MakeUnkn(0x4075E4, 1);
MakeNameEx(0x4075E4, "gdi32.RectVisible", 0x20);
MakeComm(0x4075E4, "'function gdi32.RectVisible(const Rect:TRect):LongBool; stdcall;'");
MakeCode(0x4075E4);
MakeFunction(0x4075E4, 0x4075EA);
MakeUnkn(0x4075EC, 1);
MakeNameEx(0x4075EC, "gdi32.Rectangle", 0x20);
MakeComm(0x4075EC, "'function gdi32.Rectangle(X1:Integer; Y1:Integer; X2:Integer; Y2:Integer):LongBool; stdcall;'");
MakeCode(0x4075EC);
MakeFunction(0x4075EC, 0x4075F2);
MakeUnkn(0x4075F4, 1);
MakeNameEx(0x4075F4, "gdi32.RestoreDC", 0x20);
MakeComm(0x4075F4, "'function gdi32.RestoreDC(SavedDC:Integer):LongBool; stdcall;'");
MakeCode(0x4075F4);
MakeFunction(0x4075F4, 0x4075FA);
MakeUnkn(0x4075FC, 1);
MakeNameEx(0x4075FC, "gdi32.RoundRect", 0x20);
MakeComm(0x4075FC, "'function gdi32.RoundRect(X1:Integer; Y1:Integer; X2:Integer; Y2:Integer; X3:Integer; Y3:Integer):LongBool; stdcall;'");
MakeCode(0x4075FC);
MakeFunction(0x4075FC, 0x407602);
MakeUnkn(0x407604, 1);
MakeNameEx(0x407604, "gdi32.SaveDC", 0x20);
MakeComm(0x407604, "'function gdi32.SaveDC:Integer; stdcall;'");
MakeCode(0x407604);
MakeFunction(0x407604, 0x40760A);
MakeUnkn(0x40760C, 1);
MakeNameEx(0x40760C, "gdi32.SelectClipRgn", 0x20);
MakeComm(0x40760C, "'function gdi32.SelectClipRgn(Region:HRGN):Integer; stdcall;'");
MakeCode(0x40760C);
MakeFunction(0x40760C, 0x407612);
MakeUnkn(0x407614, 1);
MakeNameEx(0x407614, "gdi32.SelectObject", 0x20);
MakeComm(0x407614, "'function gdi32.SelectObject(p2:HGDIOBJ):HGDIOBJ; stdcall;'");
MakeCode(0x407614);
MakeFunction(0x407614, 0x40761A);
MakeUnkn(0x40761C, 1);
MakeNameEx(0x40761C, "gdi32.SelectPalette", 0x20);
MakeComm(0x40761C, "'function gdi32.SelectPalette(Palette:HPALETTE; ForceBackground:LongBool):HPALETTE; stdcall;'");
MakeCode(0x40761C);
MakeFunction(0x40761C, 0x407622);
MakeUnkn(0x407624, 1);
MakeNameEx(0x407624, "gdi32.SetAbortProc", 0x20);
MakeComm(0x407624, "'function gdi32.SetAbortProc(lpAbortProc:TFNAbortProc):Integer; stdcall;'");
MakeCode(0x407624);
MakeFunction(0x407624, 0x40762A);
MakeUnkn(0x40762C, 1);
MakeNameEx(0x40762C, "gdi32.SetBkColor", 0x20);
MakeComm(0x40762C, "'function gdi32.SetBkColor(Color:DWORD):DWORD; stdcall;'");
MakeCode(0x40762C);
MakeFunction(0x40762C, 0x407632);
MakeUnkn(0x407634, 1);
MakeNameEx(0x407634, "gdi32.SetBkMode", 0x20);
MakeComm(0x407634, "'function gdi32.SetBkMode(BkMode:Integer):Integer; stdcall;'");
MakeCode(0x407634);
MakeFunction(0x407634, 0x40763A);
MakeUnkn(0x40763C, 1);
MakeNameEx(0x40763C, "gdi32.SetBrushOrgEx", 0x20);
MakeComm(0x40763C, "'function gdi32.SetBrushOrgEx(X:Integer; Y:Integer; PrevPt:PPoint):LongBool; stdcall;'");
MakeCode(0x40763C);
MakeFunction(0x40763C, 0x407642);
MakeUnkn(0x407644, 1);
MakeNameEx(0x407644, "gdi32.SetDIBColorTable", 0x20);
MakeComm(0x407644, "'function gdi32.SetDIBColorTable(p2:LongWord; p3:LongWord; var RGBQuadSTructs:void ):LongWord; stdcall;'");
MakeCode(0x407644);
MakeFunction(0x407644, 0x40764A);
MakeUnkn(0x40764C, 1);
MakeNameEx(0x40764C, "gdi32.SetEnhMetaFileBits", 0x20);
MakeComm(0x40764C, "'function gdi32.SetEnhMetaFileBits(p2:PChar):HENHMETAFILE; stdcall;'");
MakeCode(0x40764C);
MakeFunction(0x40764C, 0x407652);
MakeUnkn(0x407654, 1);
MakeNameEx(0x407654, "gdi32.SetMapMode", 0x20);
MakeComm(0x407654, "'function gdi32.SetMapMode(p2:Integer):Integer; stdcall;'");
MakeCode(0x407654);
MakeFunction(0x407654, 0x40765A);
MakeUnkn(0x40765C, 1);
MakeNameEx(0x40765C, "gdi32.SetPixel", 0x20);
MakeComm(0x40765C, "'function gdi32.SetPixel(X:Integer; Y:Integer; Color:DWORD):DWORD; stdcall;'");
MakeCode(0x40765C);
MakeFunction(0x40765C, 0x407662);
MakeUnkn(0x407664, 1);
MakeNameEx(0x407664, "gdi32.SetPixelV", 0x20);
MakeComm(0x407664, "'function gdi32.SetPixelV(X:Integer; Y:Integer; Color:DWORD):LongBool; stdcall;'");
MakeCode(0x407664);
MakeFunction(0x407664, 0x40766A);
MakeUnkn(0x40766C, 1);
MakeNameEx(0x40766C, "gdi32.SetROP2", 0x20);
MakeComm(0x40766C, "'function gdi32.SetROP2(p2:Integer):Integer; stdcall;'");
MakeCode(0x40766C);
MakeFunction(0x40766C, 0x407672);
MakeUnkn(0x407674, 1);
MakeNameEx(0x407674, "gdi32.SetStretchBltMode", 0x20);
MakeComm(0x407674, "'function gdi32.SetStretchBltMode(StretchMode:Integer):Integer; stdcall;'");
MakeCode(0x407674);
MakeFunction(0x407674, 0x40767A);
MakeUnkn(0x40767C, 1);
MakeNameEx(0x40767C, "gdi32.SetTextAlign", 0x20);
MakeComm(0x40767C, "'function gdi32.SetTextAlign(Flags:LongWord):LongWord; stdcall;'");
MakeCode(0x40767C);
MakeFunction(0x40767C, 0x407682);
MakeUnkn(0x407684, 1);
MakeNameEx(0x407684, "gdi32.SetTextColor", 0x20);
MakeComm(0x407684, "'function gdi32.SetTextColor(Color:DWORD):DWORD; stdcall;'");
MakeCode(0x407684);
MakeFunction(0x407684, 0x40768A);
MakeUnkn(0x40768C, 1);
MakeNameEx(0x40768C, "gdi32.SetViewportExtEx", 0x20);
MakeComm(0x40768C, "'function gdi32.SetViewportExtEx(XExt:Integer; YExt:Integer; Size:PSize):LongBool; stdcall;'");
MakeCode(0x40768C);
MakeFunction(0x40768C, 0x407692);
MakeUnkn(0x407694, 1);
MakeNameEx(0x407694, "gdi32.SetViewportOrgEx", 0x20);
MakeComm(0x407694, "'function gdi32.SetViewportOrgEx(X:Integer; Y:Integer; Point:PPoint):LongBool; stdcall;'");
MakeCode(0x407694);
MakeFunction(0x407694, 0x40769A);
MakeUnkn(0x40769C, 1);
MakeNameEx(0x40769C, "gdi32.SetWinMetaFileBits", 0x20);
MakeComm(0x40769C, "'function gdi32.SetWinMetaFileBits(p2:PChar; p3:HDC; const p4:tagMETAFILEPICT):HENHMETAFILE; stdcall;'");
MakeCode(0x40769C);
MakeFunction(0x40769C, 0x4076A2);
MakeUnkn(0x4076A4, 1);
MakeNameEx(0x4076A4, "gdi32.SetWindowExtEx", 0x20);
MakeComm(0x4076A4, "'function gdi32.SetWindowExtEx(XExt:Integer; YExt:Integer; Size:PSize):LongBool; stdcall;'");
MakeCode(0x4076A4);
MakeFunction(0x4076A4, 0x4076AA);
MakeUnkn(0x4076AC, 1);
MakeNameEx(0x4076AC, "gdi32.SetWindowOrgEx", 0x20);
MakeComm(0x4076AC, "'function gdi32.SetWindowOrgEx(X:Integer; Y:Integer; Point:PPoint):LongBool; stdcall;'");
MakeCode(0x4076AC);
MakeFunction(0x4076AC, 0x4076B2);
MakeUnkn(0x4076B4, 1);
MakeNameEx(0x4076B4, "gdi32.StartDocA", 0x20);
MakeComm(0x4076B4, "'function gdi32.StartDocA(const p2:_DOCINFOA):Integer; stdcall;'");
MakeCode(0x4076B4);
MakeFunction(0x4076B4, 0x4076BA);
MakeUnkn(0x4076BC, 1);
MakeNameEx(0x4076BC, "gdi32.StartPage", 0x20);
MakeComm(0x4076BC, "'function gdi32.StartPage:Integer; stdcall;'");
MakeCode(0x4076BC);
MakeFunction(0x4076BC, 0x4076C2);
MakeUnkn(0x4076C4, 1);
MakeNameEx(0x4076C4, "gdi32.StretchBlt", 0x20);
MakeComm(0x4076C4, "'function gdi32.StretchBlt(X:Integer; Y:Integer; Width:Integer; Height:Integer; SrcDC:HDC; XSrc:Integer; YSrc:Integer; SrcWidth:Integer; SrcHeight:Integer; Rop:DWORD):LongBool; stdcall;'");
MakeCode(0x4076C4);
MakeFunction(0x4076C4, 0x4076CA);
MakeUnkn(0x4076CC, 1);
MakeNameEx(0x4076CC, "gdi32.TextOutA", 0x20);
MakeComm(0x4076CC, "'function gdi32.TextOutA(X:Integer; Y:Integer; Str:PAnsiChar; Count:Integer):LongBool; stdcall;'");
MakeCode(0x4076CC);
MakeFunction(0x4076CC, 0x4076D2);
MakeUnkn(0x4076D4, 1);
MakeNameEx(0x4076D4, "gdi32.UnrealizeObject", 0x20);
MakeComm(0x4076D4, "'function gdi32.UnrealizeObject:LongBool; stdcall;'");
MakeCode(0x4076D4);
MakeFunction(0x4076D4, 0x4076DA);
MakeUnkn(0x4076DC, 1);
MakeNameEx(0x4076DC, "user32.ActivateKeyboardLayout", 0x20);
MakeComm(0x4076DC, "'function user32.ActivateKeyboardLayout(Flags:LongWord):HKL; stdcall;'");
MakeCode(0x4076DC);
MakeFunction(0x4076DC, 0x4076E2);
MakeUnkn(0x4076E4, 1);
MakeNameEx(0x4076E4, "user32.AdjustWindowRectEx", 0x20);
MakeComm(0x4076E4, "'function user32.AdjustWindowRectEx(dwStyle:DWORD; bMenu:LongBool; dwExStyle:DWORD):LongBool; stdcall;'");
MakeCode(0x4076E4);
MakeFunction(0x4076E4, 0x4076EA);
MakeUnkn(0x4076EC, 1);
MakeNameEx(0x4076EC, "user32.CharLowerA", 0x20);
MakeComm(0x4076EC, "'function user32.CharLowerA:PAnsiChar; stdcall;'");
MakeCode(0x4076EC);
MakeFunction(0x4076EC, 0x4076F2);
MakeUnkn(0x4076F4, 1);
MakeNameEx(0x4076F4, "user32.BeginPaint", 0x20);
MakeComm(0x4076F4, "'function user32.BeginPaint(var lpPaint:tagPAINTSTRUCT):HDC; stdcall;'");
MakeCode(0x4076F4);
MakeFunction(0x4076F4, 0x4076FA);
MakeUnkn(0x4076FC, 1);
MakeNameEx(0x4076FC, "user32.BringWindowToTop", 0x20);
MakeComm(0x4076FC, "'function user32.BringWindowToTop:LongBool; stdcall;'");
MakeCode(0x4076FC);
MakeFunction(0x4076FC, 0x407702);
MakeUnkn(0x407704, 1);
MakeNameEx(0x407704, "user32.CallNextHookEx", 0x20);
MakeComm(0x407704, "'function user32.CallNextHookEx(nCode:Integer; wParam:Longint; lParam:Longint):Longint; stdcall;'");
MakeCode(0x407704);
MakeFunction(0x407704, 0x40770A);
MakeUnkn(0x40770C, 1);
MakeNameEx(0x40770C, "user32.CallWindowProcA", 0x20);
MakeComm(0x40770C, "'function user32.CallWindowProcA(hWnd:HWND; Msg:LongWord; wParam:Longint; lParam:Longint):Longint; stdcall;'");
MakeCode(0x40770C);
MakeFunction(0x40770C, 0x407712);
MakeUnkn(0x407714, 1);
MakeNameEx(0x407714, "user32.CharLowerA_0", 0x20);
MakeComm(0x407714, "'function user32.CharLowerA:PAnsiChar; stdcall;'");
MakeCode(0x407714);
MakeFunction(0x407714, 0x40771A);
MakeUnkn(0x40771C, 1);
MakeNameEx(0x40771C, "user32.CharLowerBuffA", 0x20);
MakeComm(0x40771C, "'function user32.CharLowerBuffA(cchLength:DWORD):DWORD; stdcall;'");
MakeCode(0x40771C);
MakeFunction(0x40771C, 0x407722);
MakeUnkn(0x407724, 1);
MakeNameEx(0x407724, "user32.CharNextA_0", 0x20);
MakeComm(0x407724, "'function user32.CharNextA:PAnsiChar; stdcall;'");
MakeCode(0x407724);
MakeFunction(0x407724, 0x40772A);
MakeUnkn(0x40772C, 1);
MakeNameEx(0x40772C, "user32.CharPrevA", 0x20);
MakeComm(0x40772C, "'function user32.CharPrevA(lpszCurrent:PAnsiChar):PAnsiChar; stdcall;'");
MakeCode(0x40772C);
MakeFunction(0x40772C, 0x407732);
MakeUnkn(0x407734, 1);
MakeNameEx(0x407734, "user32.CharToOemA", 0x20);
MakeComm(0x407734, "'function user32.CharToOemA(lpszDst:PAnsiChar):LongBool; stdcall;'");
MakeCode(0x407734);
MakeFunction(0x407734, 0x40773A);
MakeUnkn(0x40773C, 1);
MakeNameEx(0x40773C, "user32.CharUpperBuffA", 0x20);
MakeComm(0x40773C, "'function user32.CharUpperBuffA(cchLength:DWORD):DWORD; stdcall;'");
MakeCode(0x40773C);
MakeFunction(0x40773C, 0x407742);
MakeUnkn(0x407744, 1);
MakeNameEx(0x407744, "user32.CheckMenuItem", 0x20);
MakeComm(0x407744, "'function user32.CheckMenuItem(uIDCheckItem:LongWord; uCheck:LongWord):DWORD; stdcall;'");
MakeCode(0x407744);
MakeFunction(0x407744, 0x40774A);
MakeUnkn(0x40774C, 1);
MakeNameEx(0x40774C, "user32.ChildWindowFromPointEx", 0x20);
MakeComm(0x40774C, "'function user32.ChildWindowFromPointEx(Point:TPoint; Flags:LongWord):HWND; stdcall;'");
MakeCode(0x40774C);
MakeFunction(0x40774C, 0x407752);
MakeUnkn(0x407754, 1);
MakeNameEx(0x407754, "user32.ClientToScreen", 0x20);
MakeComm(0x407754, "'function user32.ClientToScreen(var lpPoint:TPoint):LongBool; stdcall;'");
MakeCode(0x407754);
MakeFunction(0x407754, 0x40775A);
MakeUnkn(0x40775C, 1);
MakeNameEx(0x40775C, "user32.ClipCursor", 0x20);
MakeComm(0x40775C, "'function user32.ClipCursor:LongBool; stdcall;'");
MakeCode(0x40775C);
MakeFunction(0x40775C, 0x407762);
MakeUnkn(0x407764, 1);
MakeNameEx(0x407764, "user32.CloseClipboard", 0x20);
MakeComm(0x407764, "'function user32.CloseClipboard:LongBool;'");
MakeCode(0x407764);
MakeFunction(0x407764, 0x40776A);
MakeUnkn(0x40776C, 1);
MakeNameEx(0x40776C, "user32.CreateCaret", 0x20);
MakeComm(0x40776C, "'function user32.CreateCaret(hBitmap:HBITMAP; nWidth:Integer; nHeight:Integer):LongBool; stdcall;'");
MakeCode(0x40776C);
MakeFunction(0x40776C, 0x407772);
MakeUnkn(0x407774, 1);
MakeNameEx(0x407774, "user32.CreateIcon", 0x20);
MakeComm(0x407774, "'function user32.CreateIcon(nWidth:Integer; nHeight:Integer; cPlanes:Byte; cBitsPixel:Byte; lpbANDbits:Pointer; lpbXORbits:Pointer):HICON; stdcall;'");
MakeCode(0x407774);
MakeFunction(0x407774, 0x40777A);
MakeUnkn(0x40777C, 1);
MakeNameEx(0x40777C, "user32.CreateMenu", 0x20);
MakeComm(0x40777C, "'function user32.CreateMenu:HMENU;'");
MakeCode(0x40777C);
MakeFunction(0x40777C, 0x407782);
MakeUnkn(0x407784, 1);
MakeNameEx(0x407784, "user32.CreatePopupMenu", 0x20);
MakeComm(0x407784, "'function user32.CreatePopupMenu:HMENU;'");
MakeCode(0x407784);
MakeFunction(0x407784, 0x40778A);
MakeUnkn(0x40778C, 1);
MakeNameEx(0x40778C, "user32.DefFrameProcA", 0x20);
MakeComm(0x40778C, "'function user32.DefFrameProcA(hWndMDIClient:HWND; uMsg:LongWord; wParam:Longint; lParam:Longint):Longint; stdcall;'");
MakeCode(0x40778C);
MakeFunction(0x40778C, 0x407792);
MakeUnkn(0x407794, 1);
MakeNameEx(0x407794, "user32.DefMDIChildProcA", 0x20);
MakeComm(0x407794, "'function user32.DefMDIChildProcA(uMsg:LongWord; wParam:Longint; lParam:Longint):Longint; stdcall;'");
MakeCode(0x407794);
MakeFunction(0x407794, 0x40779A);
MakeUnkn(0x40779C, 1);
MakeNameEx(0x40779C, "user32.DefWindowProcA", 0x20);
MakeComm(0x40779C, "'function user32.DefWindowProcA(Msg:LongWord; wParam:Longint; lParam:Longint):Longint; stdcall;'");
MakeCode(0x40779C);
MakeFunction(0x40779C, 0x4077A2);
MakeUnkn(0x4077A4, 1);
MakeNameEx(0x4077A4, "user32.DeleteMenu", 0x20);
MakeComm(0x4077A4, "'function user32.DeleteMenu(uPosition:LongWord; uFlags:LongWord):LongBool; stdcall;'");
MakeCode(0x4077A4);
MakeFunction(0x4077A4, 0x4077AA);
MakeUnkn(0x4077AC, 1);
MakeNameEx(0x4077AC, "user32.DestroyCaret", 0x20);
MakeComm(0x4077AC, "'function user32.DestroyCaret:LongBool;'");
MakeCode(0x4077AC);
MakeFunction(0x4077AC, 0x4077B2);
MakeUnkn(0x4077B4, 1);
MakeNameEx(0x4077B4, "user32.DestroyCursor", 0x20);
MakeComm(0x4077B4, "'function user32.DestroyCursor:LongBool; stdcall;'");
MakeCode(0x4077B4);
MakeFunction(0x4077B4, 0x4077BA);
MakeUnkn(0x4077BC, 1);
MakeNameEx(0x4077BC, "user32.DestroyIcon", 0x20);
MakeComm(0x4077BC, "'function user32.DestroyIcon:LongBool; stdcall;'");
MakeCode(0x4077BC);
MakeFunction(0x4077BC, 0x4077C2);
MakeUnkn(0x4077C4, 1);
MakeNameEx(0x4077C4, "user32.DestroyMenu", 0x20);
MakeComm(0x4077C4, "'function user32.DestroyMenu:LongBool; stdcall;'");
MakeCode(0x4077C4);
MakeFunction(0x4077C4, 0x4077CA);
MakeUnkn(0x4077CC, 1);
MakeNameEx(0x4077CC, "user32.DestroyWindow_0", 0x20);
MakeComm(0x4077CC, "'function user32.DestroyWindow:LongBool; stdcall;'");
MakeCode(0x4077CC);
MakeFunction(0x4077CC, 0x4077D2);
MakeUnkn(0x4077D4, 1);
MakeNameEx(0x4077D4, "user32.DispatchMessageA", 0x20);
MakeComm(0x4077D4, "'function user32.DispatchMessageA:Longint; stdcall;'");
MakeCode(0x4077D4);
MakeFunction(0x4077D4, 0x4077DA);
MakeUnkn(0x4077DC, 1);
MakeNameEx(0x4077DC, "user32.DispatchMessageW", 0x20);
MakeComm(0x4077DC, "'function user32.DispatchMessageW:Longint; stdcall;'");
MakeCode(0x4077DC);
MakeFunction(0x4077DC, 0x4077E2);
MakeUnkn(0x4077E4, 1);
MakeNameEx(0x4077E4, "user32.DrawCaption", 0x20);
MakeComm(0x4077E4, "'function user32.DrawCaption(p2:HDC; const p3:TRect; p4:LongWord):LongBool; stdcall;'");
MakeCode(0x4077E4);
MakeFunction(0x4077E4, 0x4077EA);
MakeUnkn(0x4077EC, 1);
MakeNameEx(0x4077EC, "user32.DrawEdge", 0x20);
MakeComm(0x4077EC, "'function user32.DrawEdge(var qrc:TRect; edge:LongWord; grfFlags:LongWord):LongBool; stdcall;'");
MakeCode(0x4077EC);
MakeFunction(0x4077EC, 0x4077F2);
MakeUnkn(0x4077F4, 1);
MakeNameEx(0x4077F4, "user32.DrawFocusRect", 0x20);
MakeComm(0x4077F4, "'function user32.DrawFocusRect(const lprc:TRect):LongBool; stdcall;'");
MakeCode(0x4077F4);
MakeFunction(0x4077F4, 0x4077FA);
MakeUnkn(0x4077FC, 1);
MakeNameEx(0x4077FC, "user32.DrawFrameControl", 0x20);
MakeComm(0x4077FC, "'function user32.DrawFrameControl(const Rect:TRect; uType:LongWord; uState:LongWord):LongBool; stdcall;'");
MakeCode(0x4077FC);
MakeFunction(0x4077FC, 0x407802);
MakeUnkn(0x407804, 1);
MakeNameEx(0x407804, "user32.DrawIcon", 0x20);
MakeComm(0x407804, "'function user32.DrawIcon(X:Integer; Y:Integer; hIcon:HICON):LongBool; stdcall;'");
MakeCode(0x407804);
MakeFunction(0x407804, 0x40780A);
MakeUnkn(0x40780C, 1);
MakeNameEx(0x40780C, "user32.DrawIconEx", 0x20);
MakeComm(0x40780C, "'function user32.DrawIconEx(xLeft:Integer; yTop:Integer; hIcon:HICON; cxWidth:Integer; cyWidth:Integer; istepIfAniCur:LongWord; hbrFlickerFreeDraw:HBRUSH; diFlags:LongWord):LongBool; stdcall;'");
MakeCode(0x40780C);
MakeFunction(0x40780C, 0x407812);
MakeUnkn(0x407814, 1);
MakeNameEx(0x407814, "user32.DrawMenuBar", 0x20);
MakeComm(0x407814, "'function user32.DrawMenuBar:LongBool; stdcall;'");
MakeCode(0x407814);
MakeFunction(0x407814, 0x40781A);
MakeUnkn(0x40781C, 1);
MakeNameEx(0x40781C, "user32.DrawTextA", 0x20);
MakeComm(0x40781C, "'function user32.DrawTextA(lpString:PAnsiChar; nCount:Integer; var lpRect:TRect; uFormat:LongWord):Integer; stdcall;'");
MakeCode(0x40781C);
MakeFunction(0x40781C, 0x407822);
MakeUnkn(0x407824, 1);
MakeNameEx(0x407824, "user32.EmptyClipboard", 0x20);
MakeComm(0x407824, "'function user32.EmptyClipboard:LongBool;'");
MakeCode(0x407824);
MakeFunction(0x407824, 0x40782A);
MakeUnkn(0x40782C, 1);
MakeNameEx(0x40782C, "user32.EnableMenuItem", 0x20);
MakeComm(0x40782C, "'function user32.EnableMenuItem(uIDEnableItem:LongWord; uEnable:LongWord):LongBool; stdcall;'");
MakeCode(0x40782C);
MakeFunction(0x40782C, 0x407832);
MakeUnkn(0x407834, 1);
MakeNameEx(0x407834, "user32.EnableScrollBar", 0x20);
MakeComm(0x407834, "'function user32.EnableScrollBar(wSBflags:LongWord; wArrows:LongWord):LongBool; stdcall;'");
MakeCode(0x407834);
MakeFunction(0x407834, 0x40783A);
MakeUnkn(0x40783C, 1);
MakeNameEx(0x40783C, "user32.EnableWindow", 0x20);
MakeComm(0x40783C, "'function user32.EnableWindow(bEnable:LongBool):LongBool; stdcall;'");
MakeCode(0x40783C);
MakeFunction(0x40783C, 0x407842);
MakeUnkn(0x407844, 1);
MakeNameEx(0x407844, "user32.EndPaint", 0x20);
MakeComm(0x407844, "'function user32.EndPaint(const lpPaint:tagPAINTSTRUCT):LongBool; stdcall;'");
MakeCode(0x407844);
MakeFunction(0x407844, 0x40784A);
MakeUnkn(0x40784C, 1);
MakeNameEx(0x40784C, "user32.EnumChildWindows", 0x20);
MakeComm(0x40784C, "'function user32.EnumChildWindows(lpEnumFunc:Pointer; lParam:Longint):LongBool; stdcall;'");
MakeCode(0x40784C);
MakeFunction(0x40784C, 0x407852);
MakeUnkn(0x407854, 1);
MakeNameEx(0x407854, "user32.EnumClipboardFormats", 0x20);
MakeComm(0x407854, "'function user32.EnumClipboardFormats:LongWord; stdcall;'");
MakeCode(0x407854);
MakeFunction(0x407854, 0x40785A);
MakeUnkn(0x40785C, 1);
MakeNameEx(0x40785C, "user32.EnumThreadWindows", 0x20);
MakeComm(0x40785C, "'function user32.EnumThreadWindows(lpfn:Pointer; lParam:Longint):LongBool; stdcall;'");
MakeCode(0x40785C);
MakeFunction(0x40785C, 0x407862);
MakeUnkn(0x407864, 1);
MakeNameEx(0x407864, "user32.EnumWindows", 0x20);
MakeComm(0x407864, "'function user32.EnumWindows(lParam:Longint):LongBool; stdcall;'");
MakeCode(0x407864);
MakeFunction(0x407864, 0x40786A);
MakeUnkn(0x40786C, 1);
MakeNameEx(0x40786C, "user32.EqualRect", 0x20);
MakeComm(0x40786C, "'function user32.EqualRect(const R2:TRect):Boolean;'");
MakeCode(0x40786C);
MakeFunction(0x40786C, 0x407872);
MakeUnkn(0x407874, 1);
MakeNameEx(0x407874, "user32.FillRect", 0x20);
MakeComm(0x407874, "'function user32.FillRect(const lprc:TRect; hbr:HBRUSH):Integer; stdcall;'");
MakeCode(0x407874);
MakeFunction(0x407874, 0x40787A);
MakeUnkn(0x40787C, 1);
MakeNameEx(0x40787C, "user32.FindWindowA", 0x20);
MakeComm(0x40787C, "'function user32.FindWindowA(lpWindowName:PAnsiChar):HWND; stdcall;'");
MakeCode(0x40787C);
MakeFunction(0x40787C, 0x407882);
MakeUnkn(0x407884, 1);
MakeNameEx(0x407884, "user32.FlashWindow", 0x20);
MakeComm(0x407884, "'function user32.FlashWindow(bInvert:LongBool):LongBool; stdcall;'");
MakeCode(0x407884);
MakeFunction(0x407884, 0x40788A);
MakeUnkn(0x40788C, 1);
MakeNameEx(0x40788C, "user32.FrameRect", 0x20);
MakeComm(0x40788C, "'function user32.FrameRect(const lprc:TRect; hbr:HBRUSH):Integer; stdcall;'");
MakeCode(0x40788C);
MakeFunction(0x40788C, 0x407892);
MakeUnkn(0x407894, 1);
MakeNameEx(0x407894, "user32.GetActiveWindow", 0x20);
MakeComm(0x407894, "'function user32.GetActiveWindow:HWND;'");
MakeCode(0x407894);
MakeFunction(0x407894, 0x40789A);
MakeUnkn(0x40789C, 1);
MakeNameEx(0x40789C, "user32.GetCapture", 0x20);
MakeComm(0x40789C, "'function user32.GetCapture:HWND;'");
MakeCode(0x40789C);
MakeFunction(0x40789C, 0x4078A2);
MakeUnkn(0x4078A4, 1);
MakeNameEx(0x4078A4, "user32.GetClassInfoA", 0x20);
MakeComm(0x4078A4, "'function user32.GetClassInfoA(lpClassName:PAnsiChar; var lpWndClass:tagWNDCLASSA):LongBool; stdcall;'");
MakeCode(0x4078A4);
MakeFunction(0x4078A4, 0x4078AA);
MakeUnkn(0x4078AC, 1);
MakeNameEx(0x4078AC, "user32.GetClassLongA", 0x20);
MakeComm(0x4078AC, "'function user32.GetClassLongA(nIndex:Integer):DWORD; stdcall;'");
MakeCode(0x4078AC);
MakeFunction(0x4078AC, 0x4078B2);
MakeUnkn(0x4078B4, 1);
MakeNameEx(0x4078B4, "user32.GetClassNameA", 0x20);
MakeComm(0x4078B4, "'function user32.GetClassNameA(lpClassName:PAnsiChar; nMaxCount:Integer):Integer; stdcall;'");
MakeCode(0x4078B4);
MakeFunction(0x4078B4, 0x4078BA);
MakeUnkn(0x4078BC, 1);
MakeNameEx(0x4078BC, "user32.GetClientRect", 0x20);
MakeComm(0x4078BC, "'function user32.GetClientRect(var lpRect:TRect):LongBool; stdcall;'");
MakeCode(0x4078BC);
MakeFunction(0x4078BC, 0x4078C2);
MakeUnkn(0x4078C4, 1);
MakeNameEx(0x4078C4, "user32.GetClipboardData", 0x20);
MakeComm(0x4078C4, "'function user32.GetClipboardData:THandle; stdcall;'");
MakeCode(0x4078C4);
MakeFunction(0x4078C4, 0x4078CA);
MakeUnkn(0x4078CC, 1);
MakeNameEx(0x4078CC, "user32.GetCursor", 0x20);
MakeComm(0x4078CC, "'function user32.GetCursor:HICON;'");
MakeCode(0x4078CC);
MakeFunction(0x4078CC, 0x4078D2);
MakeUnkn(0x4078D4, 1);
MakeNameEx(0x4078D4, "user32.GetCursorPos", 0x20);
MakeComm(0x4078D4, "'function user32.GetCursorPos:LongBool; stdcall;'");
MakeCode(0x4078D4);
MakeFunction(0x4078D4, 0x4078DA);
MakeUnkn(0x4078DC, 1);
MakeNameEx(0x4078DC, "user32.GetDC", 0x20);
MakeComm(0x4078DC, "'function user32.GetDC:HDC; stdcall;'");
MakeCode(0x4078DC);
MakeFunction(0x4078DC, 0x4078E2);
MakeUnkn(0x4078E4, 1);
MakeNameEx(0x4078E4, "user32.GetDCEx", 0x20);
MakeComm(0x4078E4, "'function user32.GetDCEx(hrgnClip:HRGN; flags:DWORD):HDC; stdcall;'");
MakeCode(0x4078E4);
MakeFunction(0x4078E4, 0x4078EA);
MakeUnkn(0x4078EC, 1);
MakeNameEx(0x4078EC, "user32.GetDesktopWindow", 0x20);
MakeComm(0x4078EC, "'function user32.GetDesktopWindow:HWND;'");
MakeCode(0x4078EC);
MakeFunction(0x4078EC, 0x4078F2);
MakeUnkn(0x4078F4, 1);
MakeNameEx(0x4078F4, "user32.GetDlgItem", 0x20);
MakeComm(0x4078F4, "'function user32.GetDlgItem(nIDDlgItem:Integer):HWND; stdcall;'");
MakeCode(0x4078F4);
MakeFunction(0x4078F4, 0x4078FA);
MakeUnkn(0x4078FC, 1);
MakeNameEx(0x4078FC, "user32.GetFocus", 0x20);
MakeComm(0x4078FC, "'function user32.GetFocus:HWND;'");
MakeCode(0x4078FC);
MakeFunction(0x4078FC, 0x407902);
MakeUnkn(0x407904, 1);
MakeNameEx(0x407904, "user32.GetForegroundWindow", 0x20);
MakeComm(0x407904, "'function user32.GetForegroundWindow:HWND;'");
MakeCode(0x407904);
MakeFunction(0x407904, 0x40790A);
MakeUnkn(0x40790C, 1);
MakeNameEx(0x40790C, "user32.GetIconInfo", 0x20);
MakeComm(0x40790C, "'function user32.GetIconInfo(var piconinfo:_ICONINFO):LongBool; stdcall;'");
MakeCode(0x40790C);
MakeFunction(0x40790C, 0x407912);
MakeUnkn(0x407914, 1);
MakeNameEx(0x407914, "user32.GetKeyNameTextA", 0x20);
MakeComm(0x407914, "'function user32.GetKeyNameTextA(lpString:PAnsiChar; nSize:Integer):Integer; stdcall;'");
MakeCode(0x407914);
MakeFunction(0x407914, 0x40791A);
MakeUnkn(0x40791C, 1);
MakeNameEx(0x40791C, "user32.GetKeyState", 0x20);
MakeComm(0x40791C, "'function user32.GetKeyState:Smallint; stdcall;'");
MakeCode(0x40791C);
MakeFunction(0x40791C, 0x407922);
MakeUnkn(0x407924, 1);
MakeNameEx(0x407924, "user32.GetKeyboardLayout", 0x20);
MakeComm(0x407924, "'function user32.GetKeyboardLayout:HKL; stdcall;'");
MakeCode(0x407924);
MakeFunction(0x407924, 0x40792A);
MakeUnkn(0x40792C, 1);
MakeNameEx(0x40792C, "user32.GetKeyboardLayoutList", 0x20);
MakeComm(0x40792C, "'function user32.GetKeyboardLayoutList(var List:void ):LongWord; stdcall;'");
MakeCode(0x40792C);
MakeFunction(0x40792C, 0x407932);
MakeUnkn(0x407934, 1);
MakeNameEx(0x407934, "user32.GetKeyboardLayoutNameA", 0x20);
MakeComm(0x407934, "'function user32.GetKeyboardLayoutNameA:LongBool; stdcall;'");
MakeCode(0x407934);
MakeFunction(0x407934, 0x40793A);
MakeUnkn(0x40793C, 1);
MakeNameEx(0x40793C, "user32.GetKeyboardState", 0x20);
MakeComm(0x40793C, "'function user32.GetKeyboardState:LongBool; stdcall;'");
MakeCode(0x40793C);
MakeFunction(0x40793C, 0x407942);
MakeUnkn(0x407944, 1);
MakeNameEx(0x407944, "user32.GetLastActivePopup", 0x20);
MakeComm(0x407944, "'function user32.GetLastActivePopup:HWND; stdcall;'");
MakeCode(0x407944);
MakeFunction(0x407944, 0x40794A);
MakeUnkn(0x40794C, 1);
MakeNameEx(0x40794C, "user32.GetMenu", 0x20);
MakeComm(0x40794C, "'function user32.GetMenu:HMENU; stdcall;'");
MakeCode(0x40794C);
MakeFunction(0x40794C, 0x407952);
MakeUnkn(0x407954, 1);
MakeNameEx(0x407954, "user32.GetMenuItemCount", 0x20);
MakeComm(0x407954, "'function user32.GetMenuItemCount:Integer; stdcall;'");
MakeCode(0x407954);
MakeFunction(0x407954, 0x40795A);
MakeUnkn(0x40795C, 1);
MakeNameEx(0x40795C, "user32.GetMenuItemID", 0x20);
MakeComm(0x40795C, "'function user32.GetMenuItemID(nPos:Integer):LongWord; stdcall;'");
MakeCode(0x40795C);
MakeFunction(0x40795C, 0x407962);
MakeUnkn(0x407964, 1);
MakeNameEx(0x407964, "user32.GetMenuItemInfoA", 0x20);
MakeComm(0x407964, "'function user32.GetMenuItemInfoA(p2:LongWord; p3:LongBool; var p4:tagMENUITEMINFOA):LongBool; stdcall;'");
MakeCode(0x407964);
MakeFunction(0x407964, 0x40796A);
MakeUnkn(0x40796C, 1);
MakeNameEx(0x40796C, "user32.GetMenuState", 0x20);
MakeComm(0x40796C, "'function user32.GetMenuState(uId:LongWord; uFlags:LongWord):LongWord; stdcall;'");
MakeCode(0x40796C);
MakeFunction(0x40796C, 0x407972);
MakeUnkn(0x407974, 1);
MakeNameEx(0x407974, "user32.GetMenuStringA", 0x20);
MakeComm(0x407974, "'function user32.GetMenuStringA(uIDItem:LongWord; lpString:PAnsiChar; nMaxCount:Integer; uFlag:LongWord):Integer; stdcall;'");
MakeCode(0x407974);
MakeFunction(0x407974, 0x40797A);
MakeUnkn(0x40797C, 1);
MakeNameEx(0x40797C, "user32.GetMessageA", 0x20);
MakeComm(0x40797C, "'function user32.GetMessageA(hWnd:HWND; wMsgFilterMin:LongWord; wMsgFilterMax:LongWord):LongBool; stdcall;'");
MakeCode(0x40797C);
MakeFunction(0x40797C, 0x407982);
MakeUnkn(0x407984, 1);
MakeNameEx(0x407984, "user32.GetMessagePos", 0x20);
MakeComm(0x407984, "'function user32.GetMessagePos:DWORD;'");
MakeCode(0x407984);
MakeFunction(0x407984, 0x40798A);
MakeUnkn(0x40798C, 1);
MakeNameEx(0x40798C, "user32.GetWindow", 0x20);
MakeComm(0x40798C, "'function user32.GetWindow(uCmd:LongWord):HWND; stdcall;'");
MakeCode(0x40798C);
MakeFunction(0x40798C, 0x407992);
MakeUnkn(0x407994, 1);
MakeNameEx(0x407994, "user32.GetParent", 0x20);
MakeComm(0x407994, "'function user32.GetParent:HWND; stdcall;'");
MakeCode(0x407994);
MakeFunction(0x407994, 0x40799A);
MakeUnkn(0x40799C, 1);
MakeNameEx(0x40799C, "user32.GetPropA", 0x20);
MakeComm(0x40799C, "'function user32.GetPropA(lpString:PAnsiChar):THandle; stdcall;'");
MakeCode(0x40799C);
MakeFunction(0x40799C, 0x4079A2);
MakeUnkn(0x4079A4, 1);
MakeNameEx(0x4079A4, "user32.GetScrollInfo", 0x20);
MakeComm(0x4079A4, "'function user32.GetScrollInfo(BarFlag:Integer; var ScrollInfo:tagSCROLLINFO):LongBool; stdcall;'");
MakeCode(0x4079A4);
MakeFunction(0x4079A4, 0x4079AA);
MakeUnkn(0x4079AC, 1);
MakeNameEx(0x4079AC, "user32.GetScrollPos", 0x20);
MakeComm(0x4079AC, "'function user32.GetScrollPos(nBar:Integer):Integer; stdcall;'");
MakeCode(0x4079AC);
MakeFunction(0x4079AC, 0x4079B2);
MakeUnkn(0x4079B4, 1);
MakeNameEx(0x4079B4, "user32.GetScrollRange", 0x20);
MakeComm(0x4079B4, "'function user32.GetScrollRange(nBar:Integer; var lpMinPos:Integer; var lpMaxPos:Integer):LongBool; stdcall;'");
MakeCode(0x4079B4);
MakeFunction(0x4079B4, 0x4079BA);
MakeUnkn(0x4079BC, 1);
MakeNameEx(0x4079BC, "user32.GetSubMenu", 0x20);
MakeComm(0x4079BC, "'function user32.GetSubMenu(nPos:Integer):HMENU; stdcall;'");
MakeCode(0x4079BC);
MakeFunction(0x4079BC, 0x4079C2);
MakeUnkn(0x4079C4, 1);
MakeNameEx(0x4079C4, "user32.GetSysColor", 0x20);
MakeComm(0x4079C4, "'function user32.GetSysColor:DWORD; stdcall;'");
MakeCode(0x4079C4);
MakeFunction(0x4079C4, 0x4079CA);
MakeUnkn(0x4079CC, 1);
MakeNameEx(0x4079CC, "user32.GetSysColorBrush", 0x20);
MakeComm(0x4079CC, "'function user32.GetSysColorBrush:HBRUSH; stdcall;'");
MakeCode(0x4079CC);
MakeFunction(0x4079CC, 0x4079D2);
MakeUnkn(0x4079D4, 1);
MakeNameEx(0x4079D4, "user32.GetSystemMenu", 0x20);
MakeComm(0x4079D4, "'function user32.GetSystemMenu(bRevert:LongBool):HMENU; stdcall;'");
MakeCode(0x4079D4);
MakeFunction(0x4079D4, 0x4079DA);
MakeUnkn(0x4079DC, 1);
MakeNameEx(0x4079DC, "user32.GetSystemMetrics", 0x20);
MakeComm(0x4079DC, "'function user32.GetSystemMetrics:Integer; stdcall;'");
MakeCode(0x4079DC);
MakeFunction(0x4079DC, 0x4079E2);
MakeUnkn(0x4079E4, 1);
MakeNameEx(0x4079E4, "user32.GetTopWindow", 0x20);
MakeComm(0x4079E4, "'function user32.GetTopWindow(var ReturnVar:THandle):BOOL; stdcall;'");
MakeCode(0x4079E4);
MakeFunction(0x4079E4, 0x4079EA);
MakeUnkn(0x4079EC, 1);
MakeNameEx(0x4079EC, "user32.GetUpdateRect", 0x20);
MakeComm(0x4079EC, "'function user32.GetUpdateRect(lpRect:PRect; bErase:LongBool):LongBool; stdcall;'");
MakeCode(0x4079EC);
MakeFunction(0x4079EC, 0x4079F2);
MakeUnkn(0x4079F4, 1);
MakeNameEx(0x4079F4, "user32.GetWindow_0", 0x20);
MakeComm(0x4079F4, "'function user32.GetWindow(uCmd:LongWord):HWND; stdcall;'");
MakeCode(0x4079F4);
MakeFunction(0x4079F4, 0x4079FA);
MakeUnkn(0x4079FC, 1);
MakeNameEx(0x4079FC, "user32.GetWindowDC", 0x20);
MakeComm(0x4079FC, "'function user32.GetWindowDC:HDC; stdcall;'");
MakeCode(0x4079FC);
MakeFunction(0x4079FC, 0x407A02);
MakeUnkn(0x407A04, 1);
MakeNameEx(0x407A04, "user32.GetWindowLongA", 0x20);
MakeComm(0x407A04, "'function user32.GetWindowLongA(nIndex:Integer):Longint; stdcall;'");
MakeCode(0x407A04);
MakeFunction(0x407A04, 0x407A0A);
MakeUnkn(0x407A0C, 1);
MakeNameEx(0x407A0C, "user32.GetWindowLongW", 0x20);
MakeComm(0x407A0C, "'function user32.GetWindowLongW(nIndex:Integer):Longint; stdcall;'");
MakeCode(0x407A0C);
MakeFunction(0x407A0C, 0x407A12);
MakeUnkn(0x407A14, 1);
MakeNameEx(0x407A14, "user32.GetWindowPlacement", 0x20);
MakeComm(0x407A14, "'function user32.GetWindowPlacement(WindowPlacement:PWindowPlacement):LongBool; stdcall;'");
MakeCode(0x407A14);
MakeFunction(0x407A14, 0x407A1A);
MakeUnkn(0x407A1C, 1);
MakeNameEx(0x407A1C, "user32.GetWindowRect", 0x20);
MakeComm(0x407A1C, "'function user32.GetWindowRect(var lpRect:TRect):LongBool; stdcall;'");
MakeCode(0x407A1C);
MakeFunction(0x407A1C, 0x407A22);
MakeUnkn(0x407A24, 1);
MakeNameEx(0x407A24, "user32.GetWindowTextA", 0x20);
MakeComm(0x407A24, "'function user32.GetWindowTextA(lpString:PAnsiChar; nMaxCount:Integer):Integer; stdcall;'");
MakeCode(0x407A24);
MakeFunction(0x407A24, 0x407A2A);
MakeUnkn(0x407A2C, 1);
MakeNameEx(0x407A2C, "user32.GetWindowThreadProcessId", 0x20);
MakeComm(0x407A2C, "'function user32.GetWindowThreadProcessId(var dwProcessId:DWORD):DWORD; stdcall;'");
MakeCode(0x407A2C);
MakeFunction(0x407A2C, 0x407A32);
MakeUnkn(0x407A34, 1);
MakeNameEx(0x407A34, "user32.GetWindowThreadProcessId_0", 0x20);
MakeComm(0x407A34, "'function user32.GetWindowThreadProcessId(var dwProcessId:DWORD):DWORD; stdcall;'");
MakeCode(0x407A34);
MakeFunction(0x407A34, 0x407A3A);
MakeUnkn(0x407A3C, 1);
MakeNameEx(0x407A3C, "user32.HideCaret", 0x20);
MakeComm(0x407A3C, "'function user32.HideCaret:LongBool; stdcall;'");
MakeCode(0x407A3C);
MakeFunction(0x407A3C, 0x407A42);
MakeUnkn(0x407A44, 1);
MakeNameEx(0x407A44, "user32.InflateRect", 0x20);
MakeComm(0x407A44, "'function user32.InflateRect(dx:Integer; dy:Integer):LongBool; stdcall;'");
MakeCode(0x407A44);
MakeFunction(0x407A44, 0x407A4A);
MakeUnkn(0x407A4C, 1);
MakeNameEx(0x407A4C, "user32.InsertMenuA", 0x20);
MakeComm(0x407A4C, "'function user32.InsertMenuA(uPosition:LongWord; uFlags:LongWord; uIDNewItem:LongWord; lpNewItem:PAnsiChar):LongBool; stdcall;'");
MakeCode(0x407A4C);
MakeFunction(0x407A4C, 0x407A52);
MakeUnkn(0x407A54, 1);
MakeNameEx(0x407A54, "user32.InsertMenuItemA", 0x20);
MakeComm(0x407A54, "'function user32.InsertMenuItemA(p2:LongWord; p3:LongBool; const p4:tagMENUITEMINFOA):LongBool; stdcall;'");
MakeCode(0x407A54);
MakeFunction(0x407A54, 0x407A5A);
MakeUnkn(0x407A5C, 1);
MakeNameEx(0x407A5C, "user32.IntersectRect", 0x20);
MakeComm(0x407A5C, "'function user32.IntersectRect(const R1:TRect; const R2:TRect):Boolean;'");
MakeCode(0x407A5C);
MakeFunction(0x407A5C, 0x407A62);
MakeUnkn(0x407A64, 1);
MakeNameEx(0x407A64, "user32.InvalidateRect", 0x20);
MakeComm(0x407A64, "'function user32.InvalidateRect(lpRect:PRect; bErase:LongBool):LongBool; stdcall;'");
MakeCode(0x407A64);
MakeFunction(0x407A64, 0x407A6A);
MakeUnkn(0x407A6C, 1);
MakeNameEx(0x407A6C, "user32.IsCharAlphaA", 0x20);
MakeComm(0x407A6C, "'function user32.IsCharAlphaA:LongBool; stdcall;'");
MakeCode(0x407A6C);
MakeFunction(0x407A6C, 0x407A72);
MakeUnkn(0x407A74, 1);
MakeNameEx(0x407A74, "user32.IsChild", 0x20);
MakeComm(0x407A74, "'function user32.IsChild(hWnd:HWND):LongBool; stdcall;'");
MakeCode(0x407A74);
MakeFunction(0x407A74, 0x407A7A);
MakeUnkn(0x407A7C, 1);
MakeNameEx(0x407A7C, "user32.IsClipboardFormatAvailable", 0x20);
MakeComm(0x407A7C, "'function user32.IsClipboardFormatAvailable:LongBool; stdcall;'");
MakeCode(0x407A7C);
MakeFunction(0x407A7C, 0x407A82);
MakeUnkn(0x407A84, 1);
MakeNameEx(0x407A84, "user32.IsDialogMessageA", 0x20);
MakeComm(0x407A84, "'function user32.IsDialogMessageA(var lpMsg:tagMSG):LongBool; stdcall;'");
MakeCode(0x407A84);
MakeFunction(0x407A84, 0x407A8A);
MakeUnkn(0x407A8C, 1);
MakeNameEx(0x407A8C, "user32.IsDialogMessageW", 0x20);
MakeComm(0x407A8C, "'function user32.IsDialogMessageW(var lpMsg:tagMSG):LongBool; stdcall;'");
MakeCode(0x407A8C);
MakeFunction(0x407A8C, 0x407A92);
MakeUnkn(0x407A94, 1);
MakeNameEx(0x407A94, "user32.IsIconic", 0x20);
MakeComm(0x407A94, "'function user32.IsIconic:LongBool; stdcall;'");
MakeCode(0x407A94);
MakeFunction(0x407A94, 0x407A9A);
MakeUnkn(0x407A9C, 1);
MakeNameEx(0x407A9C, "user32.IsRectEmpty", 0x20);
MakeComm(0x407A9C, "'function user32.IsRectEmpty:Boolean;'");
MakeCode(0x407A9C);
MakeFunction(0x407A9C, 0x407AA2);
MakeUnkn(0x407AA4, 1);
MakeNameEx(0x407AA4, "user32.IsWindow", 0x20);
MakeComm(0x407AA4, "'function user32.IsWindow:LongBool; stdcall;'");
MakeCode(0x407AA4);
MakeFunction(0x407AA4, 0x407AAA);
MakeUnkn(0x407AAC, 1);
MakeNameEx(0x407AAC, "user32.IsWindowEnabled", 0x20);
MakeComm(0x407AAC, "'function user32.IsWindowEnabled:LongBool; stdcall;'");
MakeCode(0x407AAC);
MakeFunction(0x407AAC, 0x407AB2);
MakeUnkn(0x407AB4, 1);
MakeNameEx(0x407AB4, "user32.IsWindowUnicode", 0x20);
MakeComm(0x407AB4, "'function user32.IsWindowUnicode:LongBool; stdcall;'");
MakeCode(0x407AB4);
MakeFunction(0x407AB4, 0x407ABA);
MakeUnkn(0x407ABC, 1);
MakeNameEx(0x407ABC, "user32.IsWindowVisible", 0x20);
MakeComm(0x407ABC, "'function user32.IsWindowVisible:LongBool; stdcall;'");
MakeCode(0x407ABC);
MakeFunction(0x407ABC, 0x407AC2);
MakeUnkn(0x407AC4, 1);
MakeNameEx(0x407AC4, "user32.IsZoomed", 0x20);
MakeComm(0x407AC4, "'function user32.IsZoomed:LongBool; stdcall;'");
MakeCode(0x407AC4);
MakeFunction(0x407AC4, 0x407ACA);
MakeUnkn(0x407ACC, 1);
MakeNameEx(0x407ACC, "user32.KillTimer", 0x20);
MakeComm(0x407ACC, "'function user32.KillTimer(uIDEvent:LongWord):LongBool; stdcall;'");
MakeCode(0x407ACC);
MakeFunction(0x407ACC, 0x407AD2);
MakeUnkn(0x407AD4, 1);
MakeNameEx(0x407AD4, "user32.LoadBitmapA", 0x20);
MakeComm(0x407AD4, "'function user32.LoadBitmapA(lpBitmapName:PAnsiChar):HBITMAP; stdcall;'");
MakeCode(0x407AD4);
MakeFunction(0x407AD4, 0x407ADA);
MakeUnkn(0x407ADC, 1);
MakeNameEx(0x407ADC, "user32.LoadCursorA", 0x20);
MakeComm(0x407ADC, "'function user32.LoadCursorA(lpCursorName:PAnsiChar):HICON; stdcall;'");
MakeCode(0x407ADC);
MakeFunction(0x407ADC, 0x407AE2);
MakeUnkn(0x407AE4, 1);
MakeNameEx(0x407AE4, "user32.LoadIconA", 0x20);
MakeComm(0x407AE4, "'function user32.LoadIconA(lpIconName:PAnsiChar):HICON; stdcall;'");
MakeCode(0x407AE4);
MakeFunction(0x407AE4, 0x407AEA);
MakeUnkn(0x407AEC, 1);
MakeNameEx(0x407AEC, "user32.LoadKeyboardLayoutA", 0x20);
MakeComm(0x407AEC, "'function user32.LoadKeyboardLayoutA(Flags:LongWord):HKL; stdcall;'");
MakeCode(0x407AEC);
MakeFunction(0x407AEC, 0x407AF2);
MakeUnkn(0x407AF4, 1);
MakeNameEx(0x407AF4, "user32.LoadStringA_0", 0x20);
MakeComm(0x407AF4, "'function user32.LoadStringA(uID:LongWord; lpBuffer:PAnsiChar; nBufferMax:Integer):Integer; stdcall;'");
MakeCode(0x407AF4);
MakeFunction(0x407AF4, 0x407AFA);
MakeUnkn(0x407AFC, 1);
MakeNameEx(0x407AFC, "user32.LockWindowUpdate", 0x20);
MakeComm(0x407AFC, "'function user32.LockWindowUpdate:LongBool; stdcall;'");
MakeCode(0x407AFC);
MakeFunction(0x407AFC, 0x407B02);
MakeUnkn(0x407B04, 1);
MakeNameEx(0x407B04, "user32.MapVirtualKeyA", 0x20);
MakeComm(0x407B04, "'function user32.MapVirtualKeyA(uMapType:LongWord):LongWord; stdcall;'");
MakeCode(0x407B04);
MakeFunction(0x407B04, 0x407B0A);
MakeUnkn(0x407B0C, 1);
MakeNameEx(0x407B0C, "user32.MapWindowPoints", 0x20);
MakeComm(0x407B0C, "'function user32.MapWindowPoints(hWndTo:HWND; var lpPoints:void ; cPoints:LongWord):Integer; stdcall;'");
MakeCode(0x407B0C);
MakeFunction(0x407B0C, 0x407B12);
MakeUnkn(0x407B14, 1);
MakeNameEx(0x407B14, "user32.MessageBeep", 0x20);
MakeComm(0x407B14, "'function user32.MessageBeep:LongBool; stdcall;'");
MakeCode(0x407B14);
MakeFunction(0x407B14, 0x407B1A);
MakeUnkn(0x407B1C, 1);
MakeNameEx(0x407B1C, "user32.MessageBoxA_0", 0x20);
MakeComm(0x407B1C, "'function user32.MessageBoxA(lpText:PAnsiChar; lpCaption:PAnsiChar; uType:LongWord):Integer; stdcall;'");
MakeCode(0x407B1C);
MakeFunction(0x407B1C, 0x407B22);
MakeUnkn(0x407B24, 1);
MakeNameEx(0x407B24, "user32.MsgWaitForMultipleObjects", 0x20);
MakeComm(0x407B24, "'function user32.MsgWaitForMultipleObjects(var pHandles:void ; fWaitAll:LongBool; dwMilliseconds:DWORD; dwWakeMask:DWORD):DWORD; stdcall;'");
MakeCode(0x407B24);
MakeFunction(0x407B24, 0x407B2A);
MakeUnkn(0x407B2C, 1);
MakeNameEx(0x407B2C, "user32.OemToCharA", 0x20);
MakeComm(0x407B2C, "'function user32.OemToCharA(lpszDst:PAnsiChar):LongBool; stdcall;'");
MakeCode(0x407B2C);
MakeFunction(0x407B2C, 0x407B32);
MakeUnkn(0x407B34, 1);
MakeNameEx(0x407B34, "user32.OffsetRect", 0x20);
MakeComm(0x407B34, "'function user32.OffsetRect(DX:Integer; DY:Integer):Boolean;'");
MakeCode(0x407B34);
MakeFunction(0x407B34, 0x407B3A);
MakeUnkn(0x407B3C, 1);
MakeNameEx(0x407B3C, "user32.OpenClipboard", 0x20);
MakeComm(0x407B3C, "'function user32.OpenClipboard:LongBool; stdcall;'");
MakeCode(0x407B3C);
MakeFunction(0x407B3C, 0x407B42);
MakeUnkn(0x407B44, 1);
MakeNameEx(0x407B44, "user32.PeekMessageA", 0x20);
MakeComm(0x407B44, "'function user32.PeekMessageA(hWnd:HWND; wMsgFilterMin:LongWord; wMsgFilterMax:LongWord; wRemoveMsg:LongWord):LongBool; stdcall;'");
MakeCode(0x407B44);
MakeFunction(0x407B44, 0x407B4A);
MakeUnkn(0x407B4C, 1);
MakeNameEx(0x407B4C, "user32.PeekMessageW", 0x20);
MakeComm(0x407B4C, "'function user32.PeekMessageW(hWnd:HWND; wMsgFilterMin:LongWord; wMsgFilterMax:LongWord; wRemoveMsg:LongWord):LongBool; stdcall;'");
MakeCode(0x407B4C);
MakeFunction(0x407B4C, 0x407B52);
MakeUnkn(0x407B54, 1);
MakeNameEx(0x407B54, "user32.PostMessageA", 0x20);
MakeComm(0x407B54, "'function user32.PostMessageA(Msg:LongWord; wParam:Longint; lParam:Longint):LongBool; stdcall;'");
MakeCode(0x407B54);
MakeFunction(0x407B54, 0x407B5A);
MakeUnkn(0x407B5C, 1);
MakeNameEx(0x407B5C, "user32.PostQuitMessage", 0x20);
MakeComm(0x407B5C, "'procedure user32.PostQuitMessage; stdcall;'");
MakeCode(0x407B5C);
MakeFunction(0x407B5C, 0x407B62);
MakeUnkn(0x407B64, 1);
MakeNameEx(0x407B64, "user32.PtInRect", 0x20);
MakeComm(0x407B64, "'function user32.PtInRect(const P:TPoint):Boolean;'");
MakeCode(0x407B64);
MakeFunction(0x407B64, 0x407B6A);
MakeUnkn(0x407B6C, 1);
MakeNameEx(0x407B6C, "user32.RedrawWindow", 0x20);
MakeComm(0x407B6C, "'function user32.RedrawWindow(lprcUpdate:PRect; hrgnUpdate:HRGN; flags:LongWord):LongBool; stdcall;'");
MakeCode(0x407B6C);
MakeFunction(0x407B6C, 0x407B72);
MakeUnkn(0x407B74, 1);
MakeNameEx(0x407B74, "user32.RegisterClassA", 0x20);
MakeComm(0x407B74, "'function user32.RegisterClassA:Word; stdcall;'");
MakeCode(0x407B74);
MakeFunction(0x407B74, 0x407B7A);
MakeUnkn(0x407B7C, 1);
MakeNameEx(0x407B7C, "user32.RegisterClipboardFormatA", 0x20);
MakeComm(0x407B7C, "'function user32.RegisterClipboardFormatA:LongWord; stdcall;'");
MakeCode(0x407B7C);
MakeFunction(0x407B7C, 0x407B82);
MakeUnkn(0x407B84, 1);
MakeNameEx(0x407B84, "user32.RegisterWindowMessageA", 0x20);
MakeComm(0x407B84, "'function user32.RegisterWindowMessageA:LongWord; stdcall;'");
MakeCode(0x407B84);
MakeFunction(0x407B84, 0x407B8A);
MakeUnkn(0x407B8C, 1);
MakeNameEx(0x407B8C, "user32.ReleaseCapture", 0x20);
MakeComm(0x407B8C, "'function user32.ReleaseCapture:LongBool;'");
MakeCode(0x407B8C);
MakeFunction(0x407B8C, 0x407B92);
MakeUnkn(0x407B94, 1);
MakeNameEx(0x407B94, "user32.ReleaseDC", 0x20);
MakeComm(0x407B94, "'function user32.ReleaseDC(hDC:HDC):Integer; stdcall;'");
MakeCode(0x407B94);
MakeFunction(0x407B94, 0x407B9A);
MakeUnkn(0x407B9C, 1);
MakeNameEx(0x407B9C, "user32.RemoveMenu", 0x20);
MakeComm(0x407B9C, "'function user32.RemoveMenu(uPosition:LongWord; uFlags:LongWord):LongBool; stdcall;'");
MakeCode(0x407B9C);
MakeFunction(0x407B9C, 0x407BA2);
MakeUnkn(0x407BA4, 1);
MakeNameEx(0x407BA4, "user32.RemovePropA", 0x20);
MakeComm(0x407BA4, "'function user32.RemovePropA(lpString:PAnsiChar):THandle; stdcall;'");
MakeCode(0x407BA4);
MakeFunction(0x407BA4, 0x407BAA);
MakeUnkn(0x407BAC, 1);
MakeNameEx(0x407BAC, "user32.ReplyMessage", 0x20);
MakeComm(0x407BAC, "'function user32.ReplyMessage:LongBool; stdcall;'");
MakeCode(0x407BAC);
MakeFunction(0x407BAC, 0x407BB2);
MakeUnkn(0x407BB4, 1);
MakeNameEx(0x407BB4, "user32.ScreenToClient", 0x20);
MakeComm(0x407BB4, "'function user32.ScreenToClient(var lpPoint:TPoint):LongBool; stdcall;'");
MakeCode(0x407BB4);
MakeFunction(0x407BB4, 0x407BBA);
MakeUnkn(0x407BBC, 1);
MakeNameEx(0x407BBC, "user32.ScrollWindow", 0x20);
MakeComm(0x407BBC, "'function user32.ScrollWindow(XAmount:Integer; YAmount:Integer; Rect:PRect; ClipRect:PRect):LongBool; stdcall;'");
MakeCode(0x407BBC);
MakeFunction(0x407BBC, 0x407BC2);
MakeUnkn(0x407BC4, 1);
MakeNameEx(0x407BC4, "user32.ScrollWindowEx", 0x20);
MakeComm(0x407BC4, "'function user32.ScrollWindowEx(dx:Integer; dy:Integer; prcScroll:PRect; prcClip:PRect; hrgnUpdate:HRGN; prcUpdate:PRect; flags:LongWord):LongBool; stdcall;'");
MakeCode(0x407BC4);
MakeFunction(0x407BC4, 0x407BCA);
MakeUnkn(0x407BCC, 1);
MakeNameEx(0x407BCC, "user32.SendMessageA", 0x20);
MakeComm(0x407BCC, "'function user32.SendMessageA(Msg:LongWord; wParam:Longint; lParam:Longint):Longint; stdcall;'");
MakeCode(0x407BCC);
MakeFunction(0x407BCC, 0x407BD2);
MakeUnkn(0x407BD4, 1);
MakeNameEx(0x407BD4, "user32.SendMessageA_0", 0x20);
MakeComm(0x407BD4, "'function user32.SendMessageA(Msg:LongWord; wParam:Longint; lParam:Longint):Longint; stdcall;'");
MakeCode(0x407BD4);
MakeFunction(0x407BD4, 0x407BDA);
MakeUnkn(0x407BDC, 1);
MakeNameEx(0x407BDC, "user32.SendMessageW", 0x20);
MakeComm(0x407BDC, "'function user32.SendMessageW(Msg:LongWord; wParam:Longint; lParam:Longint):Longint; stdcall;'");
MakeCode(0x407BDC);
MakeFunction(0x407BDC, 0x407BE2);
MakeUnkn(0x407BE4, 1);
MakeNameEx(0x407BE4, "user32.SendMessageTimeoutA", 0x20);
MakeComm(0x407BE4, "'function user32.SendMessageTimeoutA(Msg:LongWord; wParam:Longint; lParam:Longint; fuFlags:LongWord; uTimeout:LongWord; var lpdwResult:DWORD):Longint; stdcall;'");
MakeCode(0x407BE4);
MakeFunction(0x407BE4, 0x407BEA);
MakeUnkn(0x407BEC, 1);
MakeNameEx(0x407BEC, "user32.SendNotifyMessageA", 0x20);
MakeComm(0x407BEC, "'function user32.SendNotifyMessageA(Msg:LongWord; wParam:Longint; lParam:Longint):LongBool; stdcall;'");
MakeCode(0x407BEC);
MakeFunction(0x407BEC, 0x407BF2);
MakeUnkn(0x407BF4, 1);
MakeNameEx(0x407BF4, "user32.SetActiveWindow", 0x20);
MakeComm(0x407BF4, "'function user32.SetActiveWindow:HWND; stdcall;'");
MakeCode(0x407BF4);
MakeFunction(0x407BF4, 0x407BFA);
MakeUnkn(0x407BFC, 1);
MakeNameEx(0x407BFC, "user32.SetCapture", 0x20);
MakeComm(0x407BFC, "'function user32.SetCapture:HWND; stdcall;'");
MakeCode(0x407BFC);
MakeFunction(0x407BFC, 0x407C02);
MakeUnkn(0x407C04, 1);
MakeNameEx(0x407C04, "user32.SetCaretPos", 0x20);
MakeComm(0x407C04, "'function user32.SetCaretPos(Y:Integer):LongBool; stdcall;'");
MakeCode(0x407C04);
MakeFunction(0x407C04, 0x407C0A);
MakeUnkn(0x407C0C, 1);
MakeNameEx(0x407C0C, "user32.SetClassLongA", 0x20);
MakeComm(0x407C0C, "'function user32.SetClassLongA(nIndex:Integer; dwNewLong:Longint):DWORD; stdcall;'");
MakeCode(0x407C0C);
MakeFunction(0x407C0C, 0x407C12);
MakeUnkn(0x407C14, 1);
MakeNameEx(0x407C14, "user32.SetClipboardData", 0x20);
MakeComm(0x407C14, "'function user32.SetClipboardData(hMem:THandle):THandle; stdcall;'");
MakeCode(0x407C14);
MakeFunction(0x407C14, 0x407C1A);
MakeUnkn(0x407C1C, 1);
MakeNameEx(0x407C1C, "user32.SetCursor", 0x20);
MakeComm(0x407C1C, "'function user32.SetCursor:HICON; stdcall;'");
MakeCode(0x407C1C);
MakeFunction(0x407C1C, 0x407C22);
MakeUnkn(0x407C24, 1);
MakeNameEx(0x407C24, "user32.SetFocus", 0x20);
MakeComm(0x407C24, "'function user32.SetFocus:HWND; stdcall;'");
MakeCode(0x407C24);
MakeFunction(0x407C24, 0x407C2A);
MakeUnkn(0x407C2C, 1);
MakeNameEx(0x407C2C, "user32.SetForegroundWindow", 0x20);
MakeComm(0x407C2C, "'function user32.SetForegroundWindow:LongBool; stdcall;'");
MakeCode(0x407C2C);
MakeFunction(0x407C2C, 0x407C32);
MakeUnkn(0x407C34, 1);
MakeNameEx(0x407C34, "user32.SetMenu", 0x20);
MakeComm(0x407C34, "'function user32.SetMenu(hMenu:HMENU):LongBool; stdcall;'");
MakeCode(0x407C34);
MakeFunction(0x407C34, 0x407C3A);
MakeUnkn(0x407C3C, 1);
MakeNameEx(0x407C3C, "user32.SetMenuItemInfoA", 0x20);
MakeComm(0x407C3C, "'function user32.SetMenuItemInfoA(p2:LongWord; p3:LongBool; const p4:tagMENUITEMINFOA):LongBool; stdcall;'");
MakeCode(0x407C3C);
MakeFunction(0x407C3C, 0x407C42);
MakeUnkn(0x407C44, 1);
MakeNameEx(0x407C44, "user32.SetParent", 0x20);
MakeComm(0x407C44, "'function user32.SetParent(hWndNewParent:HWND):HWND; stdcall;'");
MakeCode(0x407C44);
MakeFunction(0x407C44, 0x407C4A);
MakeUnkn(0x407C4C, 1);
MakeNameEx(0x407C4C, "user32.SetPropA", 0x20);
MakeComm(0x407C4C, "'function user32.SetPropA(lpString:PAnsiChar; hData:THandle):LongBool; stdcall;'");
MakeCode(0x407C4C);
MakeFunction(0x407C4C, 0x407C52);
MakeUnkn(0x407C54, 1);
MakeNameEx(0x407C54, "user32.SetRect", 0x20);
MakeComm(0x407C54, "'function user32.SetRect(xLeft:Integer; yTop:Integer; xRight:Integer; yBottom:Integer):LongBool; stdcall;'");
MakeCode(0x407C54);
MakeFunction(0x407C54, 0x407C5A);
MakeUnkn(0x407C5C, 1);
MakeNameEx(0x407C5C, "user32.SetRectEmpty", 0x20);
MakeComm(0x407C5C, "'function user32.SetRectEmpty:LongBool; stdcall;'");
MakeCode(0x407C5C);
MakeFunction(0x407C5C, 0x407C62);
MakeUnkn(0x407C64, 1);
MakeNameEx(0x407C64, "user32.SetScrollInfo", 0x20);
MakeComm(0x407C64, "'function user32.SetScrollInfo(BarFlag:Integer; const ScrollInfo:tagSCROLLINFO; Redraw:LongBool):Integer; stdcall;'");
MakeCode(0x407C64);
MakeFunction(0x407C64, 0x407C6A);
MakeUnkn(0x407C6C, 1);
MakeNameEx(0x407C6C, "user32.SetScrollPos", 0x20);
MakeComm(0x407C6C, "'function user32.SetScrollPos(nBar:Integer; nPos:Integer; bRedraw:LongBool):Integer; stdcall;'");
MakeCode(0x407C6C);
MakeFunction(0x407C6C, 0x407C72);
MakeUnkn(0x407C74, 1);
MakeNameEx(0x407C74, "user32.SetScrollRange", 0x20);
MakeComm(0x407C74, "'function user32.SetScrollRange(nBar:Integer; nMinPos:Integer; nMaxPos:Integer; bRedraw:LongBool):LongBool; stdcall;'");
MakeCode(0x407C74);
MakeFunction(0x407C74, 0x407C7A);
MakeUnkn(0x407C7C, 1);
MakeNameEx(0x407C7C, "user32.SetTimer", 0x20);
MakeComm(0x407C7C, "'function user32.SetTimer(nIDEvent:LongWord; uElapse:LongWord; lpTimerFunc:Pointer):LongWord; stdcall;'");
MakeCode(0x407C7C);
MakeFunction(0x407C7C, 0x407C82);
MakeUnkn(0x407C84, 1);
MakeNameEx(0x407C84, "user32.SetWindowLongA", 0x20);
MakeComm(0x407C84, "'function user32.SetWindowLongA(nIndex:Integer; dwNewLong:Longint):Longint; stdcall;'");
MakeCode(0x407C84);
MakeFunction(0x407C84, 0x407C8A);
MakeUnkn(0x407C8C, 1);
MakeNameEx(0x407C8C, "user32.SetWindowLongW", 0x20);
MakeComm(0x407C8C, "'function user32.SetWindowLongW(nIndex:Integer; dwNewLong:Longint):Longint; stdcall;'");
MakeCode(0x407C8C);
MakeFunction(0x407C8C, 0x407C92);
MakeUnkn(0x407C94, 1);
MakeNameEx(0x407C94, "user32.SetWindowPlacement", 0x20);
MakeComm(0x407C94, "'function user32.SetWindowPlacement(WindowPlacement:PWindowPlacement):LongBool; stdcall;'");
MakeCode(0x407C94);
MakeFunction(0x407C94, 0x407C9A);
MakeUnkn(0x407C9C, 1);
MakeNameEx(0x407C9C, "user32.SetWindowPos", 0x20);
MakeComm(0x407C9C, "'function user32.SetWindowPos(hWndInsertAfter:HWND; X:Integer; Y:Integer; cx:Integer; cy:Integer; uFlags:LongWord):LongBool; stdcall;'");
MakeCode(0x407C9C);
MakeFunction(0x407C9C, 0x407CA2);
MakeUnkn(0x407CA4, 1);
MakeNameEx(0x407CA4, "user32.SetWindowTextA", 0x20);
MakeComm(0x407CA4, "'function user32.SetWindowTextA(lpString:PAnsiChar):LongBool; stdcall;'");
MakeCode(0x407CA4);
MakeFunction(0x407CA4, 0x407CAA);
MakeUnkn(0x407CAC, 1);
MakeNameEx(0x407CAC, "user32.SetWindowsHookExA", 0x20);
MakeComm(0x407CAC, "'function user32.SetWindowsHookExA(lpfn:TFNHookProc; hmod:HINST; dwThreadId:DWORD):HHOOK; stdcall;'");
MakeCode(0x407CAC);
MakeFunction(0x407CAC, 0x407CB2);
MakeUnkn(0x407CB4, 1);
MakeNameEx(0x407CB4, "user32.SetWindowsHookExW", 0x20);
MakeComm(0x407CB4, "'function user32.SetWindowsHookExW(lpfn:TFNHookProc; hmod:HINST; dwThreadId:DWORD):HHOOK; stdcall;'");
MakeCode(0x407CB4);
MakeFunction(0x407CB4, 0x407CBA);
MakeUnkn(0x407CBC, 1);
MakeNameEx(0x407CBC, "user32.SetWindowRgn", 0x20);
MakeComm(0x407CBC, "'function user32.SetWindowRgn(hRgn:HRGN; bRedraw:LongBool):Integer; stdcall;'");
MakeCode(0x407CBC);
MakeFunction(0x407CBC, 0x407CC2);
MakeUnkn(0x407CC4, 1);
MakeNameEx(0x407CC4, "user32.ShowCaret", 0x20);
MakeComm(0x407CC4, "'function user32.ShowCaret:LongBool; stdcall;'");
MakeCode(0x407CC4);
MakeFunction(0x407CC4, 0x407CCA);
MakeUnkn(0x407CCC, 1);
MakeNameEx(0x407CCC, "user32.ShowOwnedPopups", 0x20);
MakeComm(0x407CCC, "'function user32.ShowOwnedPopups(fShow:LongBool):LongBool; stdcall;'");
MakeCode(0x407CCC);
MakeFunction(0x407CCC, 0x407CD2);
MakeUnkn(0x407CD4, 1);
MakeNameEx(0x407CD4, "user32.ShowScrollBar", 0x20);
MakeComm(0x407CD4, "'function user32.ShowScrollBar(wBar:Integer; bShow:LongBool):LongBool; stdcall;'");
MakeCode(0x407CD4);
MakeFunction(0x407CD4, 0x407CDA);
MakeUnkn(0x407CDC, 1);
MakeNameEx(0x407CDC, "user32.ShowWindow", 0x20);
MakeComm(0x407CDC, "'function user32.ShowWindow(nCmdShow:Integer):LongBool; stdcall;'");
MakeCode(0x407CDC);
MakeFunction(0x407CDC, 0x407CE2);
MakeUnkn(0x407CE4, 1);
MakeNameEx(0x407CE4, "user32.SystemParametersInfoA", 0x20);
MakeComm(0x407CE4, "'function user32.SystemParametersInfoA(uiParam:LongWord; pvParam:Pointer; fWinIni:LongWord):LongBool; stdcall;'");
MakeCode(0x407CE4);
MakeFunction(0x407CE4, 0x407CEA);
MakeUnkn(0x407CEC, 1);
MakeNameEx(0x407CEC, "user32.TrackPopupMenu", 0x20);
MakeComm(0x407CEC, "'function user32.TrackPopupMenu(uFlags:LongWord; x:Integer; y:Integer; nReserved:Integer; hWnd:HWND; prcRect:PRect):LongBool; stdcall;'");
MakeCode(0x407CEC);
MakeFunction(0x407CEC, 0x407CF2);
MakeUnkn(0x407CF4, 1);
MakeNameEx(0x407CF4, "user32.TranslateMDISysAccel", 0x20);
MakeComm(0x407CF4, "'function user32.TranslateMDISysAccel(const lpMsg:tagMSG):LongBool; stdcall;'");
MakeCode(0x407CF4);
MakeFunction(0x407CF4, 0x407CFA);
MakeUnkn(0x407CFC, 1);
MakeNameEx(0x407CFC, "user32.TranslateMessage", 0x20);
MakeComm(0x407CFC, "'function user32.TranslateMessage:LongBool; stdcall;'");
MakeCode(0x407CFC);
MakeFunction(0x407CFC, 0x407D02);
MakeUnkn(0x407D04, 1);
MakeNameEx(0x407D04, "user32.UnhookWindowsHookEx", 0x20);
MakeComm(0x407D04, "'function user32.UnhookWindowsHookEx:LongBool; stdcall;'");
MakeCode(0x407D04);
MakeFunction(0x407D04, 0x407D0A);
MakeUnkn(0x407D0C, 1);
MakeNameEx(0x407D0C, "user32.UnregisterClassA", 0x20);
MakeComm(0x407D0C, "'function user32.UnregisterClassA(hInstance:HINST):LongBool; stdcall;'");
MakeCode(0x407D0C);
MakeFunction(0x407D0C, 0x407D12);
MakeUnkn(0x407D14, 1);
MakeNameEx(0x407D14, "user32.UpdateWindow", 0x20);
MakeComm(0x407D14, "'function user32.UpdateWindow:LongBool; stdcall;'");
MakeCode(0x407D14);
MakeFunction(0x407D14, 0x407D1A);
MakeUnkn(0x407D1C, 1);
MakeNameEx(0x407D1C, "user32.ValidateRect", 0x20);
MakeComm(0x407D1C, "'function user32.ValidateRect(lpRect:PRect):LongBool; stdcall;'");
MakeCode(0x407D1C);
MakeFunction(0x407D1C, 0x407D22);
MakeUnkn(0x407D24, 1);
MakeNameEx(0x407D24, "user32.WaitMessage", 0x20);
MakeComm(0x407D24, "'function user32.WaitMessage:LongBool;'");
MakeCode(0x407D24);
MakeFunction(0x407D24, 0x407D2A);
MakeUnkn(0x407D2C, 1);
MakeNameEx(0x407D2C, "user32.WindowFromPoint", 0x20);
MakeComm(0x407D2C, "'function user32.WindowFromPoint:HWND; stdcall;'");
MakeCode(0x407D2C);
MakeFunction(0x407D2C, 0x407D32);
MakeUnkn(0x407D34, 1);
MakeNameEx(0x407D34, "user32.CreateWindowExA", 0x20);
MakeComm(0x407D34, "'function user32.CreateWindowExA(dwExStyle:DWORD; lpClassName:PAnsiChar; lpParam:Pointer; hInstance:HINST; hMenu:HMENU; hWndParent:HWND; nHeight:Integer; nWidth:Integer; Y:Integer; X:Integer; dwStyle:DWORD):HWND;'");
MakeCode(0x407D34);
MakeFunction(0x407D34, 0x407D3A);
MakeUnkn(0x407D3C, 1);
MakeNameEx(0x407D3C, "CreateWindowEx", 0x20);
MakeComm(0x407D3C, "'function CreateWindowEx(dwExStyle:DWORD; lpClassName:PChar; lpWindowName:PChar; dwStyle:DWORD; X:Integer; Y:Integer; nWidth:Integer; nHeight:Integer; hWndParent:HWND; hMenu:HMENU; hInstance:HINST; lpParam:Pointer):HWND;'");
MakeCode(0x407D3C);
MakeFunction(0x407D3C, 0x407D93);
MakeUnkn(0x407D94, 1);
MakeNameEx(0x407D94, "CreateWindow", 0x20);
MakeComm(0x407D94, "'function CreateWindow(lpClassName:PAnsiChar; lpWindowName:PAnsiChar; dwStyle:Integer; X:Integer; Y:Integer; nWidth:Integer; nHeight:Integer; hWndParent:Cardinal; hMenu:Cardinal; hInstance:Cardinal; lpParam:Pointer):Cardinal;'");
MakeCode(0x407D94);
MakeFunction(0x407D94, 0x407DE9);
MakeUnkn(0x407DEC, 1);
MakeNameEx(0x407DEC, "HwndMSWheel", 0x20);
MakeComm(0x407DEC, "'function HwndMSWheel(var puiMsh_MsgMouseWheel:LongWord; var puiMsh_Msg3DSupport:LongWord; var puiMsh_MsgScrollLines:LongWord; var pf3DSupport:LongBool; var piScrollLines:Integer):HWND;'");
MakeCode(0x407DEC);
MakeCode(0x407E4F);
MakeCode(0x407E56);
MakeCode(0x407E73);
MakeCode(0x407E7C);
MakeFunction(0x407DEC, 0x407E86);
MakeCode(0x407EE4);
MakeCode(0x407F11);
MakeCode(0x407F1E);
MakeCode(0x407F1F);
MakeCode(0x407F24);
MakeFunction(0x407EE4, 0x407F28);
MakeUnkn(0x407F28, 1);
MakeNameEx(0x407F28, "ole32.CoInitialize", 0x20);
MakeComm(0x407F28, "'function ole32.CoInitialize:HRESULT; stdcall;'");
MakeCode(0x407F28);
MakeFunction(0x407F28, 0x407F2E);
MakeUnkn(0x407F30, 1);
MakeNameEx(0x407F30, "ole32.CoInitializeEx", 0x20);
MakeComm(0x407F30, "'function ole32.CoInitializeEx(coInit:Longint):HRESULT; stdcall;'");
MakeCode(0x407F30);
MakeFunction(0x407F30, 0x407F36);
MakeUnkn(0x407F38, 1);
MakeNameEx(0x407F38, "ole32.CoUninitialize", 0x20);
MakeComm(0x407F38, "'procedure ole32.CoUninitialize;'");
MakeCode(0x407F38);
MakeFunction(0x407F38, 0x407F3E);
MakeUnkn(0x407F40, 1);
MakeNameEx(0x407F40, "ole32.CoDisconnectObject", 0x20);
MakeComm(0x407F40, "'function ole32.CoDisconnectObject(dwReserved:Longint):HRESULT; stdcall;'");
MakeCode(0x407F40);
MakeFunction(0x407F40, 0x407F46);
MakeUnkn(0x407F48, 1);
MakeNameEx(0x407F48, "comctl32.InitCommonControls", 0x20);
MakeComm(0x407F48, "'function comctl32.InitCommonControls:Boolean;'");
MakeCode(0x407F48);
MakeFunction(0x407F48, 0x407F4E);
MakeUnkn(0x407F50, 1);
MakeNameEx(0x407F50, "InitComCtl", 0x20);
MakeComm(0x407F50, "'procedure InitComCtl;'");
MakeCode(0x407F50);
MakeFunction(0x407F50, 0x407F87);
MakeUnkn(0x407FB0, 1);
MakeNameEx(0x407FB0, "InitCommonControlsEx", 0x20);
MakeComm(0x407FB0, "'function InitCommonControlsEx(var ICC:tagINITCOMMONCONTROLSEX):BOOL;'");
MakeCode(0x407FB0);
MakeCode(0x407FC1);
MakeCode(0x407FD5);
MakeCode(0x407FD9);
MakeCode(0x407FDB);
MakeFunction(0x407FB0, 0x407FE1);
MakeUnkn(0x407FE4, 1);
MakeNameEx(0x407FE4, "comctl32.ImageList_Create", 0x20);
MakeComm(0x407FE4, "'function comctl32.ImageList_Create(CY:Integer; Flags:UINT; Initial:Integer; Grow:Integer):THandle; stdcall;'");
MakeCode(0x407FE4);
MakeFunction(0x407FE4, 0x407FEA);
MakeUnkn(0x407FEC, 1);
MakeNameEx(0x407FEC, "comctl32.ImageList_Destroy", 0x20);
MakeComm(0x407FEC, "'function comctl32.ImageList_Destroy:BOOL; stdcall;'");
MakeCode(0x407FEC);
MakeFunction(0x407FEC, 0x407FF2);
MakeUnkn(0x407FF4, 1);
MakeNameEx(0x407FF4, "comctl32.ImageList_GetImageCount", 0x20);
MakeComm(0x407FF4, "'function comctl32.ImageList_GetImageCount:Integer; stdcall;'");
MakeCode(0x407FF4);
MakeFunction(0x407FF4, 0x407FFA);
MakeUnkn(0x407FFC, 1);
MakeNameEx(0x407FFC, "comctl32.ImageList_Add", 0x20);
MakeComm(0x407FFC, "'function comctl32.ImageList_Add(Image:HBITMAP; Mask:HBITMAP):Integer; stdcall;'");
MakeCode(0x407FFC);
MakeFunction(0x407FFC, 0x408002);
MakeUnkn(0x408004, 1);
MakeNameEx(0x408004, "comctl32.ImageList_SetBkColor", 0x20);
MakeComm(0x408004, "'function comctl32.ImageList_SetBkColor(ClrBk:TColorRef):TColorRef; stdcall;'");
MakeCode(0x408004);
MakeFunction(0x408004, 0x40800A);
MakeUnkn(0x40800C, 1);
MakeNameEx(0x40800C, "comctl32.ImageList_GetBkColor", 0x20);
MakeComm(0x40800C, "'function comctl32.ImageList_GetBkColor:TColorRef; stdcall;'");
MakeCode(0x40800C);
MakeFunction(0x40800C, 0x408012);
MakeUnkn(0x408014, 1);
MakeNameEx(0x408014, "comctl32.ImageList_Draw", 0x20);
MakeComm(0x408014, "'function comctl32.ImageList_Draw(Index:Integer; Dest:HDC; X:Integer; Y:Integer; Style:UINT):BOOL; stdcall;'");
MakeCode(0x408014);
MakeFunction(0x408014, 0x40801A);
MakeUnkn(0x40801C, 1);
MakeNameEx(0x40801C, "comctl32.ImageList_DrawEx", 0x20);
MakeComm(0x40801C, "'function comctl32.ImageList_DrawEx(Index:Integer; Dest:HDC; X:Integer; Y:Integer; DX:Integer; DY:Integer; Bk:TColorRef; Fg:TColorRef; Style:Cardinal):BOOL; stdcall;'");
MakeCode(0x40801C);
MakeFunction(0x40801C, 0x408022);
MakeUnkn(0x408024, 1);
MakeNameEx(0x408024, "comctl32.ImageList_Remove", 0x20);
MakeComm(0x408024, "'function comctl32.ImageList_Remove(Index:Integer):BOOL; stdcall;'");
MakeCode(0x408024);
MakeFunction(0x408024, 0x40802A);
MakeUnkn(0x40802C, 1);
MakeNameEx(0x40802C, "comctl32.ImageList_LoadImageA", 0x20);
MakeComm(0x40802C, "'function comctl32.ImageList_LoadImageA(Bmp:PAnsiChar; CX:Integer; Grow:Integer; Mask:TColorRef; pType:Cardinal; Flags:Cardinal):THandle; stdcall;'");
MakeCode(0x40802C);
MakeFunction(0x40802C, 0x408032);
MakeUnkn(0x408034, 1);
MakeNameEx(0x408034, "comctl32.ImageList_BeginDrag", 0x20);
MakeComm(0x408034, "'function comctl32.ImageList_BeginDrag(Track:Integer; XHotSpot:Integer; YHotSpot:Integer):BOOL; stdcall;'");
MakeCode(0x408034);
MakeFunction(0x408034, 0x40803A);
MakeUnkn(0x40803C, 1);
MakeNameEx(0x40803C, "comctl32.ImageList_EndDrag", 0x20);
MakeComm(0x40803C, "'function comctl32.ImageList_EndDrag:BOOL;'");
MakeCode(0x40803C);
MakeFunction(0x40803C, 0x408042);
MakeUnkn(0x408044, 1);
MakeNameEx(0x408044, "comctl32.ImageList_DragEnter", 0x20);
MakeComm(0x408044, "'function comctl32.ImageList_DragEnter(X:Integer; Y:Integer):BOOL; stdcall;'");
MakeCode(0x408044);
MakeFunction(0x408044, 0x40804A);
MakeUnkn(0x40804C, 1);
MakeNameEx(0x40804C, "comctl32.ImageList_DragLeave", 0x20);
MakeComm(0x40804C, "'function comctl32.ImageList_DragLeave:BOOL; stdcall;'");
MakeCode(0x40804C);
MakeFunction(0x40804C, 0x408052);
MakeUnkn(0x408054, 1);
MakeNameEx(0x408054, "comctl32.ImageList_DragMove", 0x20);
MakeComm(0x408054, "'function comctl32.ImageList_DragMove(Y:Integer):BOOL; stdcall;'");
MakeCode(0x408054);
MakeFunction(0x408054, 0x40805A);
MakeUnkn(0x40805C, 1);
MakeNameEx(0x40805C, "comctl32.ImageList_DragShowNolock", 0x20);
MakeComm(0x40805C, "'function comctl32.ImageList_DragShowNolock:BOOL; stdcall;'");
MakeCode(0x40805C);
MakeFunction(0x40805C, 0x408062);
MakeUnkn(0x408064, 1);
MakeNameEx(0x408064, "comctl32.ImageList_GetDragImage", 0x20);
MakeComm(0x408064, "'function comctl32.ImageList_GetDragImage(HotSpot:PPoint):THandle; stdcall;'");
MakeCode(0x408064);
MakeFunction(0x408064, 0x40806A);
MakeUnkn(0x40806C, 1);
MakeNameEx(0x40806C, "ImageList_LoadBitmap", 0x20);
MakeComm(0x40806C, "'function ImageList_LoadBitmap(Instance:THandle; Bmp:PChar; CX:Integer; Grow:Integer; MasK:TColorRef):THandle;'");
MakeCode(0x40806C);
MakeFunction(0x40806C, 0x408089);
MakeUnkn(0x40808C, 1);
MakeNameEx(0x40808C, "comctl32.ImageList_Read", 0x20);
MakeComm(0x40808C, "'function comctl32.ImageList_Read:THandle; stdcall;'");
MakeCode(0x40808C);
MakeFunction(0x40808C, 0x408092);
MakeUnkn(0x408094, 1);
MakeNameEx(0x408094, "comctl32.ImageList_Write", 0x20);
MakeComm(0x408094, "'function comctl32.ImageList_Write(Stream:IStream):BOOL; stdcall;'");
MakeCode(0x408094);
MakeFunction(0x408094, 0x40809A);
MakeUnkn(0x40809C, 1);
MakeNameEx(0x40809C, "comctl32.ImageList_GetIconSize", 0x20);
MakeComm(0x40809C, "'function comctl32.ImageList_GetIconSize(var CX:Integer; var CY:Integer):BOOL; stdcall;'");
MakeCode(0x40809C);
MakeFunction(0x40809C, 0x4080A2);
MakeUnkn(0x4080A4, 1);
MakeNameEx(0x4080A4, "comctl32.ImageList_SetIconSize", 0x20);
MakeComm(0x4080A4, "'function comctl32.ImageList_SetIconSize(CX:Integer; CY:Integer):BOOL; stdcall;'");
MakeCode(0x4080A4);
MakeFunction(0x4080A4, 0x4080AA);
MakeUnkn(0x4080AC, 1);
MakeNameEx(0x4080AC, "comctl32._TrackMouseEvent", 0x20);
MakeComm(0x4080AC, "'function comctl32._TrackMouseEvent:BOOL; stdcall;'");
MakeCode(0x4080AC);
MakeFunction(0x4080AC, 0x4080B2);
MakeCode(0x4080B4);
MakeCode(0x4080CB);
MakeCode(0x4080D8);
MakeCode(0x4080D9);
MakeCode(0x4080DE);
MakeFunction(0x4080B4, 0x4080E2);
MakeComm(0x4080E4, "'SResString0'");
MakeDword(0x4080E4);
MakeDword(0x4080E8);
MakeComm(0x4080EC, "'SResString1'");
MakeDword(0x4080EC);
MakeDword(0x4080F0);
MakeComm(0x4080F4, "'SResString2'");
MakeDword(0x4080F4);
MakeDword(0x4080F8);
MakeComm(0x4080FC, "'SResString3'");
MakeDword(0x4080FC);
MakeDword(0x408100);
MakeComm(0x408104, "'SResString4'");
MakeDword(0x408104);
MakeDword(0x408108);
MakeComm(0x40810C, "'SResString5'");
MakeDword(0x40810C);
MakeDword(0x408110);
MakeComm(0x408114, "'SResString6'");
MakeDword(0x408114);
MakeDword(0x408118);
MakeComm(0x40811C, "'SResString7'");
MakeDword(0x40811C);
MakeDword(0x408120);
MakeComm(0x408124, "'SResString8'");
MakeDword(0x408124);
MakeDword(0x408128);
MakeComm(0x40812C, "'SResString9'");
MakeDword(0x40812C);
MakeDword(0x408130);
MakeComm(0x408134, "'SResString10'");
MakeDword(0x408134);
MakeDword(0x408138);
MakeComm(0x40813C, "'SResString11'");
MakeDword(0x40813C);
MakeDword(0x408140);
MakeComm(0x408144, "'SResString12'");
MakeDword(0x408144);
MakeDword(0x408148);
MakeComm(0x40814C, "'SResString13'");
MakeDword(0x40814C);
MakeDword(0x408150);
MakeComm(0x408154, "'SResString14'");
MakeDword(0x408154);
MakeDword(0x408158);
MakeComm(0x40815C, "'SResString15'");
MakeDword(0x40815C);
MakeDword(0x408160);
MakeComm(0x408164, "'SResString16'");
MakeDword(0x408164);
MakeDword(0x408168);
MakeComm(0x40816C, "'SResString17'");
MakeDword(0x40816C);
MakeDword(0x408170);
MakeComm(0x408174, "'SResString18'");
MakeDword(0x408174);
MakeDword(0x408178);
MakeComm(0x40817C, "'SResString19'");
MakeDword(0x40817C);
MakeDword(0x408180);
MakeComm(0x408184, "'SResString20'");
MakeDword(0x408184);
MakeDword(0x408188);
MakeComm(0x40818C, "'SResString21'");
MakeDword(0x40818C);
MakeDword(0x408190);
MakeComm(0x408194, "'SResString22'");
MakeDword(0x408194);
MakeDword(0x408198);
MakeComm(0x40819C, "'SResString23'");
MakeDword(0x40819C);
MakeDword(0x4081A0);
MakeComm(0x4081A4, "'SResString24'");
MakeDword(0x4081A4);
MakeDword(0x4081A8);
MakeComm(0x4081AC, "'SResString25'");
MakeDword(0x4081AC);
MakeDword(0x4081B0);
MakeComm(0x4081B4, "'SResString26'");
MakeDword(0x4081B4);
MakeDword(0x4081B8);
MakeComm(0x4081BC, "'SResString27'");
MakeDword(0x4081BC);
MakeDword(0x4081C0);
MakeComm(0x4081C4, "'SResString28'");
MakeDword(0x4081C4);
MakeDword(0x4081C8);
MakeComm(0x4081CC, "'SResString29'");
MakeDword(0x4081CC);
MakeDword(0x4081D0);
MakeComm(0x4081D4, "'SResString30'");
MakeDword(0x4081D4);
MakeDword(0x4081D8);
MakeComm(0x4081DC, "'SResString31'");
MakeDword(0x4081DC);
MakeDword(0x4081E0);
MakeComm(0x4081E4, "'SResString32'");
MakeDword(0x4081E4);
MakeDword(0x4081E8);
MakeComm(0x4081EC, "'SResString33'");
MakeDword(0x4081EC);
MakeDword(0x4081F0);
MakeComm(0x4081F4, "'SResString34'");
MakeDword(0x4081F4);
MakeDword(0x4081F8);
MakeComm(0x4081FC, "'SResString35'");
MakeDword(0x4081FC);
MakeDword(0x408200);
MakeComm(0x408204, "'SResString36'");
MakeDword(0x408204);
MakeDword(0x408208);
MakeComm(0x40820C, "'SResString37'");
MakeDword(0x40820C);
MakeDword(0x408210);
MakeComm(0x408214, "'SResString38'");
MakeDword(0x408214);
MakeDword(0x408218);
MakeComm(0x40821C, "'SResString39'");
MakeDword(0x40821C);
MakeDword(0x408220);
MakeComm(0x408224, "'SResString40'");
MakeDword(0x408224);
MakeDword(0x408228);
MakeComm(0x40822C, "'SResString41'");
MakeDword(0x40822C);
MakeDword(0x408230);
MakeComm(0x408234, "'SResString42'");
MakeDword(0x408234);
MakeDword(0x408238);
MakeComm(0x40823C, "'SResString43'");
MakeDword(0x40823C);
MakeDword(0x408240);
MakeComm(0x408244, "'SResString44'");
MakeDword(0x408244);
MakeDword(0x408248);
MakeComm(0x40824C, "'SResString45'");
MakeDword(0x40824C);
MakeDword(0x408250);
MakeComm(0x408254, "'SResString46'");
MakeDword(0x408254);
MakeDword(0x408258);
MakeComm(0x40825C, "'SResString47'");
MakeDword(0x40825C);
MakeDword(0x408260);
MakeComm(0x408264, "'SResString48'");
MakeDword(0x408264);
MakeDword(0x408268);
MakeComm(0x40826C, "'SResString49'");
MakeDword(0x40826C);
MakeDword(0x408270);
MakeComm(0x408274, "'SResString50'");
MakeDword(0x408274);
MakeDword(0x408278);
MakeComm(0x40827C, "'SResString51'");
MakeDword(0x40827C);
MakeDword(0x408280);
MakeComm(0x408284, "'SResString52'");
MakeDword(0x408284);
MakeDword(0x408288);
MakeComm(0x40828C, "'SResString53'");
MakeDword(0x40828C);
MakeDword(0x408290);
MakeComm(0x408294, "'SResString54'");
MakeDword(0x408294);
MakeDword(0x408298);
MakeComm(0x40829C, "'SResString55'");
MakeDword(0x40829C);
MakeDword(0x4082A0);
MakeComm(0x4082A4, "'SResString56'");
MakeDword(0x4082A4);
MakeDword(0x4082A8);
MakeComm(0x4082AC, "'SResString57'");
MakeDword(0x4082AC);
MakeDword(0x4082B0);
MakeComm(0x4082B4, "'SResString58'");
MakeDword(0x4082B4);
MakeDword(0x4082B8);
MakeComm(0x4082BC, "'SResString59'");
MakeDword(0x4082BC);
MakeDword(0x4082C0);
MakeComm(0x4082C4, "'SResString60'");
MakeDword(0x4082C4);
MakeDword(0x4082C8);
MakeComm(0x4082CC, "'SResString61'");
MakeDword(0x4082CC);
MakeDword(0x4082D0);
MakeComm(0x4082D4, "'SResString62'");
MakeDword(0x4082D4);
MakeDword(0x4082D8);
MakeComm(0x4082DC, "'SResString63'");
MakeDword(0x4082DC);
MakeDword(0x4082E0);
MakeComm(0x4082E4, "'SResString64'");
MakeDword(0x4082E4);
MakeDword(0x4082E8);
MakeComm(0x4082EC, "'SResString65'");
MakeDword(0x4082EC);
MakeDword(0x4082F0);
MakeComm(0x4082F4, "'SResString66'");
MakeDword(0x4082F4);
MakeDword(0x4082F8);
MakeComm(0x4082FC, "'SResString67'");
MakeDword(0x4082FC);
MakeDword(0x408300);
MakeComm(0x408304, "'SResString68'");
MakeDword(0x408304);
MakeDword(0x408308);
MakeComm(0x40830C, "'SResString69'");
MakeDword(0x40830C);
MakeDword(0x408310);
MakeComm(0x408314, "'SResString70'");
MakeDword(0x408314);
MakeDword(0x408318);
MakeComm(0x40831C, "'SResString71'");
MakeDword(0x40831C);
MakeDword(0x408320);
MakeComm(0x408324, "'SResString72'");
MakeDword(0x408324);
MakeDword(0x408328);
MakeComm(0x40832C, "'SResString73'");
MakeDword(0x40832C);
MakeDword(0x408330);
MakeComm(0x408334, "'SResString74'");
MakeDword(0x408334);
MakeDword(0x408338);
MakeComm(0x40833C, "'SResString75'");
MakeDword(0x40833C);
MakeDword(0x408340);
MakeComm(0x408344, "'SResString76'");
MakeDword(0x408344);
MakeDword(0x408348);
MakeComm(0x40834C, "'SResString77'");
MakeDword(0x40834C);
MakeDword(0x408350);
MakeComm(0x408354, "'SResString78'");
MakeDword(0x408354);
MakeDword(0x408358);
MakeComm(0x40835C, "'SResString79'");
MakeDword(0x40835C);
MakeDword(0x408360);
MakeComm(0x408364, "'SResString80'");
MakeDword(0x408364);
MakeDword(0x408368);
MakeComm(0x40836C, "'SResString81'");
MakeDword(0x40836C);
MakeDword(0x408370);
MakeComm(0x408374, "'SResString82'");
MakeDword(0x408374);
MakeDword(0x408378);
MakeComm(0x40837C, "'SResString83'");
MakeDword(0x40837C);
MakeDword(0x408380);
MakeComm(0x408384, "'SResString84'");
MakeDword(0x408384);
MakeDword(0x408388);
MakeComm(0x40838C, "'SResString85'");
MakeDword(0x40838C);
MakeDword(0x408390);
MakeComm(0x408394, "'SResString86'");
MakeDword(0x408394);
MakeDword(0x408398);
MakeComm(0x40839C, "'SResString87'");
MakeDword(0x40839C);
MakeDword(0x4083A0);
MakeComm(0x4083A4, "'SResString88'");
MakeDword(0x4083A4);
MakeDword(0x4083A8);
MakeComm(0x4083AC, "'SResString89'");
MakeDword(0x4083AC);
MakeDword(0x4083B0);
MakeComm(0x4083B4, "'SResString90'");
MakeDword(0x4083B4);
MakeDword(0x4083B8);
MakeComm(0x4083BC, "'SResString91'");
MakeDword(0x4083BC);
MakeDword(0x4083C0);
MakeUnkn(0x4083C4, 1);
MakeNameEx(0x4083C4, "RTTI_4083C4_AnsiString_TFileName", 0);
MakeDword(0x4083C4);
MakeUnkn(0x4083C8, 1);
MakeNameEx(0x4083C8, "", 0);
MakeByte(0x4083C8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4083C9, 0x4083D3);
MakeUnkn(0x4083D4, 1);
MakeNameEx(0x4083D4, "VMT_4083D4_Exception", 0);
MakeDword(0x4083D4);
MakeDword(0x4083D8);
MakeDword(0x4083DC);
MakeDword(0x4083E0);
MakeUnkn(0x408420, 1);
MakeNameEx(0x408420, "Exception_InitTable", 0);
MakeByte(0x408420);
MakeByte(0x408421);
MakeDword(0x408422);
MakeDword(0x408426);
MakeDword(0x40842A);
MakeDword(0x40842E);
MakeDword(0x4083E4);
MakeDword(0x4083E8);
MakeDword(0x4083EC);
MakeDword(0x4083F0);
MakeDword(0x4083F4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x408432, 0x40843C);
MakeDword(0x4083F8);
MakeDword(0x4083FC);
MakeDword(0x408400);
MakeDword(0x408404);
MakeDword(0x408408);
MakeDword(0x40840C);
MakeDword(0x408410);
MakeDword(0x408414);
MakeDword(0x408418);
MakeDword(0x40841C);
MakeUnkn(0x40843C, 1);
MakeNameEx(0x40843C, "VMT_40843C_EAbort", 0);
MakeDword(0x40843C);
MakeDword(0x408440);
MakeDword(0x408444);
MakeDword(0x408448);
MakeDword(0x40844C);
MakeDword(0x408450);
MakeDword(0x408454);
MakeDword(0x408458);
MakeDword(0x40845C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x408488, 0x40848F);
MakeDword(0x408460);
MakeDword(0x408464);
MakeDword(0x408468);
MakeDword(0x40846C);
MakeDword(0x408470);
MakeDword(0x408474);
MakeDword(0x408478);
MakeDword(0x40847C);
MakeDword(0x408480);
MakeDword(0x408484);
MakeUnkn(0x408490, 1);
MakeNameEx(0x408490, "VMT_408490_EHeapException", 0);
MakeDword(0x408490);
MakeDword(0x408494);
MakeDword(0x408498);
MakeDword(0x40849C);
MakeDword(0x4084A0);
MakeDword(0x4084A4);
MakeDword(0x4084A8);
MakeDword(0x4084AC);
MakeDword(0x4084B0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4084DC, 0x4084EB);
MakeDword(0x4084B4);
MakeDword(0x4084B8);
MakeDword(0x4084BC);
MakeDword(0x4084C0);
MakeDword(0x4084C4);
MakeDword(0x4084C8);
MakeDword(0x4084CC);
MakeDword(0x4084D0);
MakeDword(0x4084D4);
MakeDword(0x4084D8);
MakeUnkn(0x4084EC, 1);
MakeNameEx(0x4084EC, "VMT_4084EC_EOutOfMemory", 0);
MakeDword(0x4084EC);
MakeDword(0x4084F0);
MakeDword(0x4084F4);
MakeDword(0x4084F8);
MakeDword(0x4084FC);
MakeDword(0x408500);
MakeDword(0x408504);
MakeDword(0x408508);
MakeDword(0x40850C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x408538, 0x408545);
MakeDword(0x408510);
MakeDword(0x408514);
MakeDword(0x408518);
MakeDword(0x40851C);
MakeDword(0x408520);
MakeDword(0x408524);
MakeDword(0x408528);
MakeDword(0x40852C);
MakeDword(0x408530);
MakeDword(0x408534);
MakeUnkn(0x408548, 1);
MakeNameEx(0x408548, "VMT_408548_EInOutError", 0);
MakeDword(0x408548);
MakeDword(0x40854C);
MakeDword(0x408550);
MakeDword(0x408554);
MakeDword(0x408558);
MakeDword(0x40855C);
MakeDword(0x408560);
MakeDword(0x408564);
MakeDword(0x408568);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x408594, 0x4085A0);
MakeDword(0x40856C);
MakeDword(0x408570);
MakeDword(0x408574);
MakeDword(0x408578);
MakeDword(0x40857C);
MakeDword(0x408580);
MakeDword(0x408584);
MakeDword(0x408588);
MakeDword(0x40858C);
MakeDword(0x408590);
MakeUnkn(0x4085A0, 1);
MakeNameEx(0x4085A0, "VMT_4085A0_EExternal", 0);
MakeDword(0x4085A0);
MakeDword(0x4085A4);
MakeDword(0x4085A8);
MakeDword(0x4085AC);
MakeDword(0x4085B0);
MakeDword(0x4085B4);
MakeDword(0x4085B8);
MakeDword(0x4085BC);
MakeDword(0x4085C0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4085EC, 0x4085F6);
MakeDword(0x4085C4);
MakeDword(0x4085C8);
MakeDword(0x4085CC);
MakeDword(0x4085D0);
MakeDword(0x4085D4);
MakeDword(0x4085D8);
MakeDword(0x4085DC);
MakeDword(0x4085E0);
MakeDword(0x4085E4);
MakeDword(0x4085E8);
MakeUnkn(0x4085F8, 1);
MakeNameEx(0x4085F8, "VMT_4085F8_EExternalException", 0);
MakeDword(0x4085F8);
MakeDword(0x4085FC);
MakeDword(0x408600);
MakeDword(0x408604);
MakeDword(0x408608);
MakeDword(0x40860C);
MakeDword(0x408610);
MakeDword(0x408614);
MakeDword(0x408618);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x408644, 0x408657);
MakeDword(0x40861C);
MakeDword(0x408620);
MakeDword(0x408624);
MakeDword(0x408628);
MakeDword(0x40862C);
MakeDword(0x408630);
MakeDword(0x408634);
MakeDword(0x408638);
MakeDword(0x40863C);
MakeDword(0x408640);
MakeUnkn(0x408658, 1);
MakeNameEx(0x408658, "VMT_408658_EIntError", 0);
MakeDword(0x408658);
MakeDword(0x40865C);
MakeDword(0x408660);
MakeDword(0x408664);
MakeDword(0x408668);
MakeDword(0x40866C);
MakeDword(0x408670);
MakeDword(0x408674);
MakeDword(0x408678);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4086A4, 0x4086AE);
MakeDword(0x40867C);
MakeDword(0x408680);
MakeDword(0x408684);
MakeDword(0x408688);
MakeDword(0x40868C);
MakeDword(0x408690);
MakeDword(0x408694);
MakeDword(0x408698);
MakeDword(0x40869C);
MakeDword(0x4086A0);
MakeUnkn(0x4086B0, 1);
MakeNameEx(0x4086B0, "VMT_4086B0_EDivByZero", 0);
MakeDword(0x4086B0);
MakeDword(0x4086B4);
MakeDword(0x4086B8);
MakeDword(0x4086BC);
MakeDword(0x4086C0);
MakeDword(0x4086C4);
MakeDword(0x4086C8);
MakeDword(0x4086CC);
MakeDword(0x4086D0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4086FC, 0x408707);
MakeDword(0x4086D4);
MakeDword(0x4086D8);
MakeDword(0x4086DC);
MakeDword(0x4086E0);
MakeDword(0x4086E4);
MakeDword(0x4086E8);
MakeDword(0x4086EC);
MakeDword(0x4086F0);
MakeDword(0x4086F4);
MakeDword(0x4086F8);
MakeUnkn(0x408708, 1);
MakeNameEx(0x408708, "VMT_408708_ERangeError", 0);
MakeDword(0x408708);
MakeDword(0x40870C);
MakeDword(0x408710);
MakeDword(0x408714);
MakeDword(0x408718);
MakeDword(0x40871C);
MakeDword(0x408720);
MakeDword(0x408724);
MakeDword(0x408728);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x408754, 0x408760);
MakeDword(0x40872C);
MakeDword(0x408730);
MakeDword(0x408734);
MakeDword(0x408738);
MakeDword(0x40873C);
MakeDword(0x408740);
MakeDword(0x408744);
MakeDword(0x408748);
MakeDword(0x40874C);
MakeDword(0x408750);
MakeUnkn(0x408760, 1);
MakeNameEx(0x408760, "VMT_408760_EIntOverflow", 0);
MakeDword(0x408760);
MakeDword(0x408764);
MakeDword(0x408768);
MakeDword(0x40876C);
MakeDword(0x408770);
MakeDword(0x408774);
MakeDword(0x408778);
MakeDword(0x40877C);
MakeDword(0x408780);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4087AC, 0x4087B9);
MakeDword(0x408784);
MakeDword(0x408788);
MakeDword(0x40878C);
MakeDword(0x408790);
MakeDword(0x408794);
MakeDword(0x408798);
MakeDword(0x40879C);
MakeDword(0x4087A0);
MakeDword(0x4087A4);
MakeDword(0x4087A8);
MakeUnkn(0x4087BC, 1);
MakeNameEx(0x4087BC, "VMT_4087BC_EMathError", 0);
MakeDword(0x4087BC);
MakeDword(0x4087C0);
MakeDword(0x4087C4);
MakeDword(0x4087C8);
MakeDword(0x4087CC);
MakeDword(0x4087D0);
MakeDword(0x4087D4);
MakeDword(0x4087D8);
MakeDword(0x4087DC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x408808, 0x408813);
MakeDword(0x4087E0);
MakeDword(0x4087E4);
MakeDword(0x4087E8);
MakeDword(0x4087EC);
MakeDword(0x4087F0);
MakeDword(0x4087F4);
MakeDword(0x4087F8);
MakeDword(0x4087FC);
MakeDword(0x408800);
MakeDword(0x408804);
MakeUnkn(0x408814, 1);
MakeNameEx(0x408814, "VMT_408814_EInvalidOp", 0);
MakeDword(0x408814);
MakeDword(0x408818);
MakeDword(0x40881C);
MakeDword(0x408820);
MakeDword(0x408824);
MakeDword(0x408828);
MakeDword(0x40882C);
MakeDword(0x408830);
MakeDword(0x408834);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x408860, 0x40886B);
MakeDword(0x408838);
MakeDword(0x40883C);
MakeDword(0x408840);
MakeDword(0x408844);
MakeDword(0x408848);
MakeDword(0x40884C);
MakeDword(0x408850);
MakeDword(0x408854);
MakeDword(0x408858);
MakeDword(0x40885C);
MakeUnkn(0x40886C, 1);
MakeNameEx(0x40886C, "VMT_40886C_EZeroDivide", 0);
MakeDword(0x40886C);
MakeDword(0x408870);
MakeDword(0x408874);
MakeDword(0x408878);
MakeDword(0x40887C);
MakeDword(0x408880);
MakeDword(0x408884);
MakeDword(0x408888);
MakeDword(0x40888C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4088B8, 0x4088C4);
MakeDword(0x408890);
MakeDword(0x408894);
MakeDword(0x408898);
MakeDword(0x40889C);
MakeDword(0x4088A0);
MakeDword(0x4088A4);
MakeDword(0x4088A8);
MakeDword(0x4088AC);
MakeDword(0x4088B0);
MakeDword(0x4088B4);
MakeUnkn(0x4088C4, 1);
MakeNameEx(0x4088C4, "VMT_4088C4_EOverflow", 0);
MakeDword(0x4088C4);
MakeDword(0x4088C8);
MakeDword(0x4088CC);
MakeDword(0x4088D0);
MakeDword(0x4088D4);
MakeDword(0x4088D8);
MakeDword(0x4088DC);
MakeDword(0x4088E0);
MakeDword(0x4088E4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x408910, 0x40891A);
MakeDword(0x4088E8);
MakeDword(0x4088EC);
MakeDword(0x4088F0);
MakeDword(0x4088F4);
MakeDword(0x4088F8);
MakeDword(0x4088FC);
MakeDword(0x408900);
MakeDword(0x408904);
MakeDword(0x408908);
MakeDword(0x40890C);
MakeUnkn(0x40891C, 1);
MakeNameEx(0x40891C, "VMT_40891C_EUnderflow", 0);
MakeDword(0x40891C);
MakeDword(0x408920);
MakeDword(0x408924);
MakeDword(0x408928);
MakeDword(0x40892C);
MakeDword(0x408930);
MakeDword(0x408934);
MakeDword(0x408938);
MakeDword(0x40893C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x408968, 0x408973);
MakeDword(0x408940);
MakeDword(0x408944);
MakeDword(0x408948);
MakeDword(0x40894C);
MakeDword(0x408950);
MakeDword(0x408954);
MakeDword(0x408958);
MakeDword(0x40895C);
MakeDword(0x408960);
MakeDword(0x408964);
MakeUnkn(0x408974, 1);
MakeNameEx(0x408974, "VMT_408974_EInvalidPointer", 0);
MakeDword(0x408974);
MakeDword(0x408978);
MakeDword(0x40897C);
MakeDword(0x408980);
MakeDword(0x408984);
MakeDword(0x408988);
MakeDword(0x40898C);
MakeDword(0x408990);
MakeDword(0x408994);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4089C0, 0x4089D0);
MakeDword(0x408998);
MakeDword(0x40899C);
MakeDword(0x4089A0);
MakeDword(0x4089A4);
MakeDword(0x4089A8);
MakeDword(0x4089AC);
MakeDword(0x4089B0);
MakeDword(0x4089B4);
MakeDword(0x4089B8);
MakeDword(0x4089BC);
MakeUnkn(0x4089D0, 1);
MakeNameEx(0x4089D0, "VMT_4089D0_EInvalidCast", 0);
MakeDword(0x4089D0);
MakeDword(0x4089D4);
MakeDword(0x4089D8);
MakeDword(0x4089DC);
MakeDword(0x4089E0);
MakeDword(0x4089E4);
MakeDword(0x4089E8);
MakeDword(0x4089EC);
MakeDword(0x4089F0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x408A1C, 0x408A29);
MakeDword(0x4089F4);
MakeDword(0x4089F8);
MakeDword(0x4089FC);
MakeDword(0x408A00);
MakeDword(0x408A04);
MakeDword(0x408A08);
MakeDword(0x408A0C);
MakeDword(0x408A10);
MakeDword(0x408A14);
MakeDword(0x408A18);
MakeUnkn(0x408A2C, 1);
MakeNameEx(0x408A2C, "VMT_408A2C_EConvertError", 0);
MakeDword(0x408A2C);
MakeDword(0x408A30);
MakeDword(0x408A34);
MakeDword(0x408A38);
MakeDword(0x408A3C);
MakeDword(0x408A40);
MakeDword(0x408A44);
MakeDword(0x408A48);
MakeDword(0x408A4C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x408A78, 0x408A86);
MakeDword(0x408A50);
MakeDword(0x408A54);
MakeDword(0x408A58);
MakeDword(0x408A5C);
MakeDword(0x408A60);
MakeDword(0x408A64);
MakeDword(0x408A68);
MakeDword(0x408A6C);
MakeDword(0x408A70);
MakeDword(0x408A74);
MakeUnkn(0x408A88, 1);
MakeNameEx(0x408A88, "VMT_408A88_EAccessViolation", 0);
MakeDword(0x408A88);
MakeDword(0x408A8C);
MakeDword(0x408A90);
MakeDword(0x408A94);
MakeDword(0x408A98);
MakeDword(0x408A9C);
MakeDword(0x408AA0);
MakeDword(0x408AA4);
MakeDword(0x408AA8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x408AD4, 0x408AE5);
MakeDword(0x408AAC);
MakeDword(0x408AB0);
MakeDword(0x408AB4);
MakeDword(0x408AB8);
MakeDword(0x408ABC);
MakeDword(0x408AC0);
MakeDword(0x408AC4);
MakeDword(0x408AC8);
MakeDword(0x408ACC);
MakeDword(0x408AD0);
MakeUnkn(0x408AE8, 1);
MakeNameEx(0x408AE8, "VMT_408AE8_EPrivilege", 0);
MakeDword(0x408AE8);
MakeDword(0x408AEC);
MakeDword(0x408AF0);
MakeDword(0x408AF4);
MakeDword(0x408AF8);
MakeDword(0x408AFC);
MakeDword(0x408B00);
MakeDword(0x408B04);
MakeDword(0x408B08);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x408B34, 0x408B3F);
MakeDword(0x408B0C);
MakeDword(0x408B10);
MakeDword(0x408B14);
MakeDword(0x408B18);
MakeDword(0x408B1C);
MakeDword(0x408B20);
MakeDword(0x408B24);
MakeDword(0x408B28);
MakeDword(0x408B2C);
MakeDword(0x408B30);
MakeUnkn(0x408B40, 1);
MakeNameEx(0x408B40, "VMT_408B40_EStackOverflow", 0);
MakeDword(0x408B40);
MakeDword(0x408B44);
MakeDword(0x408B48);
MakeDword(0x408B4C);
MakeDword(0x408B50);
MakeDword(0x408B54);
MakeDword(0x408B58);
MakeDword(0x408B5C);
MakeDword(0x408B60);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x408B8C, 0x408B9B);
MakeDword(0x408B64);
MakeDword(0x408B68);
MakeDword(0x408B6C);
MakeDword(0x408B70);
MakeDword(0x408B74);
MakeDword(0x408B78);
MakeDword(0x408B7C);
MakeDword(0x408B80);
MakeDword(0x408B84);
MakeDword(0x408B88);
MakeUnkn(0x408B9C, 1);
MakeNameEx(0x408B9C, "VMT_408B9C_EControlC", 0);
MakeDword(0x408B9C);
MakeDword(0x408BA0);
MakeDword(0x408BA4);
MakeDword(0x408BA8);
MakeDword(0x408BAC);
MakeDword(0x408BB0);
MakeDword(0x408BB4);
MakeDword(0x408BB8);
MakeDword(0x408BBC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x408BE8, 0x408BF2);
MakeDword(0x408BC0);
MakeDword(0x408BC4);
MakeDword(0x408BC8);
MakeDword(0x408BCC);
MakeDword(0x408BD0);
MakeDword(0x408BD4);
MakeDword(0x408BD8);
MakeDword(0x408BDC);
MakeDword(0x408BE0);
MakeDword(0x408BE4);
MakeUnkn(0x408BF4, 1);
MakeNameEx(0x408BF4, "VMT_408BF4_EVariantError", 0);
MakeDword(0x408BF4);
MakeDword(0x408BF8);
MakeDword(0x408BFC);
MakeDword(0x408C00);
MakeDword(0x408C04);
MakeDword(0x408C08);
MakeDword(0x408C0C);
MakeDword(0x408C10);
MakeDword(0x408C14);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x408C40, 0x408C4E);
MakeDword(0x408C18);
MakeDword(0x408C1C);
MakeDword(0x408C20);
MakeDword(0x408C24);
MakeDword(0x408C28);
MakeDword(0x408C2C);
MakeDword(0x408C30);
MakeDword(0x408C34);
MakeDword(0x408C38);
MakeDword(0x408C3C);
MakeUnkn(0x408C50, 1);
MakeNameEx(0x408C50, "VMT_408C50_EAssertionFailed", 0);
MakeDword(0x408C50);
MakeDword(0x408C54);
MakeDword(0x408C58);
MakeDword(0x408C5C);
MakeDword(0x408C60);
MakeDword(0x408C64);
MakeDword(0x408C68);
MakeDword(0x408C6C);
MakeDword(0x408C70);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x408C9C, 0x408CAD);
MakeDword(0x408C74);
MakeDword(0x408C78);
MakeDword(0x408C7C);
MakeDword(0x408C80);
MakeDword(0x408C84);
MakeDword(0x408C88);
MakeDword(0x408C8C);
MakeDword(0x408C90);
MakeDword(0x408C94);
MakeDword(0x408C98);
MakeUnkn(0x408CB0, 1);
MakeNameEx(0x408CB0, "VMT_408CB0_EAbstractError", 0);
MakeDword(0x408CB0);
MakeDword(0x408CB4);
MakeDword(0x408CB8);
MakeDword(0x408CBC);
MakeDword(0x408CC0);
MakeDword(0x408CC4);
MakeDword(0x408CC8);
MakeDword(0x408CCC);
MakeDword(0x408CD0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x408CFC, 0x408D0B);
MakeDword(0x408CD4);
MakeDword(0x408CD8);
MakeDword(0x408CDC);
MakeDword(0x408CE0);
MakeDword(0x408CE4);
MakeDword(0x408CE8);
MakeDword(0x408CEC);
MakeDword(0x408CF0);
MakeDword(0x408CF4);
MakeDword(0x408CF8);
MakeUnkn(0x408D0C, 1);
MakeNameEx(0x408D0C, "VMT_408D0C_EIntfCastError", 0);
MakeDword(0x408D0C);
MakeDword(0x408D10);
MakeDword(0x408D14);
MakeDword(0x408D18);
MakeDword(0x408D1C);
MakeDword(0x408D20);
MakeDword(0x408D24);
MakeDword(0x408D28);
MakeDword(0x408D2C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x408D58, 0x408D67);
MakeDword(0x408D30);
MakeDword(0x408D34);
MakeDword(0x408D38);
MakeDword(0x408D3C);
MakeDword(0x408D40);
MakeDword(0x408D44);
MakeDword(0x408D48);
MakeDword(0x408D4C);
MakeDword(0x408D50);
MakeDword(0x408D54);
MakeUnkn(0x408D68, 1);
MakeNameEx(0x408D68, "VMT_408D68_EOSError", 0);
MakeDword(0x408D68);
MakeDword(0x408D6C);
MakeDword(0x408D70);
MakeDword(0x408D74);
MakeDword(0x408D78);
MakeDword(0x408D7C);
MakeDword(0x408D80);
MakeDword(0x408D84);
MakeDword(0x408D88);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x408DB4, 0x408DBD);
MakeDword(0x408D8C);
MakeDword(0x408D90);
MakeDword(0x408D94);
MakeDword(0x408D98);
MakeDword(0x408D9C);
MakeDword(0x408DA0);
MakeDword(0x408DA4);
MakeDword(0x408DA8);
MakeDword(0x408DAC);
MakeDword(0x408DB0);
MakeUnkn(0x408DC0, 1);
MakeNameEx(0x408DC0, "VMT_408DC0_ESafecallException", 0);
MakeDword(0x408DC0);
MakeDword(0x408DC4);
MakeDword(0x408DC8);
MakeDword(0x408DCC);
MakeDword(0x408DD0);
MakeDword(0x408DD4);
MakeDword(0x408DD8);
MakeDword(0x408DDC);
MakeDword(0x408DE0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x408E0C, 0x408E1F);
MakeDword(0x408DE4);
MakeDword(0x408DE8);
MakeDword(0x408DEC);
MakeDword(0x408DF0);
MakeDword(0x408DF4);
MakeDword(0x408DF8);
MakeDword(0x408DFC);
MakeDword(0x408E00);
MakeDword(0x408E04);
MakeDword(0x408E08);
MakeUnkn(0x408E20, 1);
MakeNameEx(0x408E20, "RTTI_408E20_DynArray_.74", 0);
MakeDword(0x408E20);
MakeUnkn(0x408E24, 1);
MakeNameEx(0x408E24, "", 0);
MakeByte(0x408E24);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x408E25, 0x408E29);
MakeDword(0x408E29);
MakeDword(0x408E2D);
MakeDword(0x408E31);
MakeDword(0x408E35);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x408E39, 0x408E42);
MakeUnkn(0x408E44, 1);
MakeNameEx(0x408E44, "RTTI_408E44_DynArray_.84", 0);
MakeDword(0x408E44);
MakeUnkn(0x408E48, 1);
MakeNameEx(0x408E48, "", 0);
MakeByte(0x408E48);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x408E49, 0x408E4D);
MakeDword(0x408E4D);
MakeDword(0x408E51);
MakeDword(0x408E55);
MakeDword(0x408E59);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x408E5D, 0x408E66);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x408E70, -1);
MakeDword(0x408E6C);
MakeDword(0x408E68);
MakeUnkn(0x408E74, 1);
MakeNameEx(0x408E74, "VMT_408E74_TThreadLocalCounter", 0);
MakeDword(0x408E74);
MakeDword(0x408E78);
MakeDword(0x408E7C);
MakeDword(0x408E80);
MakeDword(0x408E84);
MakeDword(0x408E88);
MakeDword(0x408E8C);
MakeDword(0x408E90);
MakeDword(0x408E94);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x408EC0, 0x408ED4);
MakeDword(0x408E98);
MakeDword(0x408E9C);
MakeDword(0x408EA0);
MakeDword(0x408EA4);
MakeDword(0x408EA8);
MakeDword(0x408EAC);
MakeDword(0x408EB0);
MakeDword(0x408EB4);
MakeDword(0x408EB8);
MakeDword(0x408EBC);
MakeUnkn(0x408F50, 1);
MakeNameEx(0x408F50, "VMT_408F50_TMultiReadExclusiveWriteSynchronizer", 0);
MakeDword(0x408F50);
MakeDword(0x408F54);
MakeUnkn(0x408F30, 1);
MakeNameEx(0x408F30, "TMultiReadExclusiveWriteSynchronizer_IntfTable", 0);
MakeDword(0x408F30);
MakeByte(0x408F34);
MakeArray(0x408F34, 16);
MakeDword(0x408F44);
MakeDword(0x408F14);
MakeFunction(0x408EF5, -1);
MakeCode(0x408EF5);
MakeDword(0x408F18);
MakeFunction(0x408EFF, -1);
MakeCode(0x408EFF);
MakeDword(0x408F1C);
MakeFunction(0x408F09, -1);
MakeCode(0x408F09);
MakeDword(0x408F20);
MakeFunction(0x408ED5, -1);
MakeCode(0x408ED5);
MakeDword(0x408F24);
MakeFunction(0x408EDD, -1);
MakeCode(0x408EDD);
MakeDword(0x408F28);
MakeFunction(0x408EE5, -1);
MakeCode(0x408EE5);
MakeDword(0x408F2C);
MakeFunction(0x408EED, -1);
MakeCode(0x408EED);
MakeByte(0x408ED4);
MakeDword(0x408F48);
MakeDword(0x408F4C);
MakeDword(0x408F58);
MakeDword(0x408F5C);
MakeDword(0x408F60);
MakeDword(0x408F64);
MakeDword(0x408F68);
MakeDword(0x408F6C);
MakeDword(0x408F70);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x408F9C, 0x408FC1);
MakeDword(0x408F74);
MakeDword(0x408F78);
MakeDword(0x408F7C);
MakeDword(0x408F80);
MakeDword(0x408F84);
MakeDword(0x408F88);
MakeDword(0x408F8C);
MakeDword(0x408F90);
MakeDword(0x408F94);
MakeDword(0x408F98);
MakeUnkn(0x408FC4, 1);
MakeNameEx(0x408FC4, "DivMod", 0x20);
MakeComm(0x408FC4, "'procedure DivMod(Dividend:Integer; Divisor:Word; var Result:Word; var Remainder:Word);'");
MakeCode(0x408FC4);
MakeFunction(0x408FC4, 0x408FE0);
MakeUnkn(0x408FE0, 1);
MakeNameEx(0x408FE0, "ConvertErrorFmt", 0x20);
MakeComm(0x408FE0, "'procedure ConvertErrorFmt(ResString:PResStringRec; const Args:array[$0..-$1] of System.TVarRec; const _Dv_:$0..-$1);'");
MakeCode(0x408FE0);
MakeFunction(0x408FE0, 0x409002);
MakeUnkn(0x409004, 1);
MakeNameEx(0x409004, "DoExitProc", 0x20);
MakeComm(0x409004, "'procedure DoExitProc;'");
MakeCode(0x409004);
MakeFunction(0x409004, 0x40902E);
MakeUnkn(0x409030, 1);
MakeNameEx(0x409030, "AddExitProc", 0x20);
MakeComm(0x409030, "'procedure AddExitProc(Proc:TProcedure);'");
MakeCode(0x409030);
MakeFunction(0x409030, 0x409065);
MakeUnkn(0x409068, 1);
MakeNameEx(0x409068, "UpperCase", 0x20);
MakeComm(0x409068, "'function UpperCase(const S:AnsiString):AnsiString;'");
MakeCode(0x409068);
MakeCode(0x40909A);
MakeCode(0x4090A5);
MakeCode(0x4090AB);
MakeCode(0x4090B5);
MakeCode(0x4090C7);
MakeCode(0x4090F8);
MakeFunction(0x409068, 0x409101);
MakeUnkn(0x409104, 1);
MakeNameEx(0x409104, "LowerCase", 0x20);
MakeComm(0x409104, "'function LowerCase(const S:AnsiString):AnsiString;'");
MakeCode(0x409104);
MakeCode(0x409136);
MakeCode(0x409141);
MakeCode(0x409147);
MakeCode(0x409151);
MakeCode(0x409163);
MakeCode(0x409194);
MakeFunction(0x409104, 0x40919D);
MakeUnkn(0x4091A0, 1);
MakeNameEx(0x4091A0, "CompareStr", 0x20);
MakeComm(0x4091A0, "'function CompareStr(const S1:AnsiString; const S2:AnsiString):Integer;'");
MakeCode(0x4091A0);
MakeCode(0x4091AD);
MakeCode(0x4091B4);
MakeCode(0x4091BC);
MakeCode(0x4091CA);
MakeFunction(0x4091A0, 0x4091CF);
MakeUnkn(0x4091D0, 1);
MakeNameEx(0x4091D0, "CompareMem", 0x20);
MakeComm(0x4091D0, "'function CompareMem(P1:Pointer; P2:Pointer; Length:Integer):Boolean;'");
MakeCode(0x4091D0);
MakeCode(0x4091F8);
MakeCode(0x409226);
MakeCode(0x409236);
MakeCode(0x409248);
MakeCode(0x409256);
MakeCode(0x40925D);
MakeFunction(0x4091D0, 0x409261);
MakeUnkn(0x409264, 1);
MakeNameEx(0x409264, "CompareText", 0x20);
MakeComm(0x409264, "'function CompareText(const S1:AnsiString; const S2:AnsiString):Integer;'");
MakeCode(0x409264);
MakeCode(0x409271);
MakeCode(0x409272);
MakeCode(0x40927A);
MakeCode(0x409294);
MakeCode(0x4092B3);
MakeCode(0x4092C0);
MakeCode(0x4092D0);
MakeCode(0x4092E1);
MakeCode(0x4092EE);
MakeCode(0x4092F2);
MakeCode(0x4092F7);
MakeCode(0x4092F9);
MakeFunction(0x409264, 0x4092FD);
MakeUnkn(0x409300, 1);
MakeNameEx(0x409300, "SameText", 0x20);
MakeComm(0x409300, "'function SameText(const S1:AnsiString; const S2:AnsiString):Boolean;'");
MakeCode(0x409300);
MakeCode(0x40931D);
MakeCode(0x40931F);
MakeCode(0x409320);
MakeFunction(0x409300, 0x409323);
MakeUnkn(0x409324, 1);
MakeNameEx(0x409324, "AnsiUpperCase", 0x20);
MakeComm(0x409324, "'function AnsiUpperCase(const S:AnsiString):AnsiString;'");
MakeCode(0x409324);
MakeCode(0x409336);
MakeCode(0x409357);
MakeFunction(0x409324, 0x40935B);
MakeUnkn(0x40935C, 1);
MakeNameEx(0x40935C, "AnsiLowerCase", 0x20);
MakeComm(0x40935C, "'function AnsiLowerCase(const S:AnsiString):AnsiString;'");
MakeCode(0x40935C);
MakeCode(0x40936E);
MakeCode(0x40938F);
MakeFunction(0x40935C, 0x409393);
MakeUnkn(0x409394, 1);
MakeNameEx(0x409394, "AnsiCompareText", 0x20);
MakeComm(0x409394, "'function AnsiCompareText(const S1:AnsiString; const S2:AnsiString):Integer;'");
MakeCode(0x409394);
MakeCode(0x4093A7);
MakeCode(0x4093B2);
MakeFunction(0x409394, 0x4093D8);
MakeUnkn(0x4093D8, 1);
MakeNameEx(0x4093D8, "AnsiStrLIComp", 0x20);
MakeComm(0x4093D8, "'function AnsiStrLIComp(S1:PChar; S2:PChar; MaxLen:Cardinal):Integer;'");
MakeCode(0x4093D8);
MakeFunction(0x4093D8, 0x4093F8);
MakeUnkn(0x4093F8, 1);
MakeNameEx(0x4093F8, "Trim", 0x20);
MakeComm(0x4093F8, "'function Trim(const S:AnsiString):AnsiString;'");
MakeCode(0x4093F8);
MakeCode(0x40940B);
MakeCode(0x409414);
MakeCode(0x409415);
MakeCode(0x409420);
MakeCode(0x40942D);
MakeCode(0x40942E);
MakeCode(0x409444);
MakeFunction(0x4093F8, 0x409449);
MakeUnkn(0x40944C, 1);
MakeNameEx(0x40944C, "AdjustLineBreaks", 0x20);
MakeComm(0x40944C, "'function AdjustLineBreaks(const S:AnsiString; Style:TTextLineBreakStyle):AnsiString;'");
MakeCode(0x40944C);
MakeCode(0x40947F);
MakeCode(0x40948D);
MakeCode(0x409494);
MakeCode(0x4094A1);
MakeCode(0x4094AC);
MakeCode(0x4094BB);
MakeCode(0x4094C0);
MakeCode(0x4094CB);
MakeCode(0x4094E5);
MakeCode(0x4094E6);
MakeCode(0x4094EA);
MakeCode(0x409500);
MakeCode(0x409514);
MakeCode(0x40952C);
MakeCode(0x409539);
MakeCode(0x409543);
MakeCode(0x40954A);
MakeCode(0x409554);
MakeCode(0x409561);
MakeCode(0x409592);
MakeCode(0x409599);
MakeCode(0x40959D);
MakeCode(0x4095AA);
MakeCode(0x4095B3);
MakeCode(0x4095B8);
MakeFunction(0x40944C, 0x4095C1);
MakeUnkn(0x4095C4, 1);
MakeNameEx(0x4095C4, "IsValidIdent", 0x20);
MakeComm(0x4095C4, "'function IsValidIdent(const Ident:AnsiString; AllowDots:Boolean):Boolean;'");
MakeCode(0x4095C4);
MakeCode(0x4095D7);
MakeCode(0x4095DF);
MakeCode(0x4095FB);
MakeCode(0x4095FD);
MakeCode(0x409600);
MakeCode(0x409617);
MakeCode(0x409622);
MakeCode(0x409649);
MakeCode(0x40964F);
MakeCode(0x40965A);
MakeCode(0x409665);
MakeCode(0x409687);
MakeCode(0x40968B);
MakeCode(0x40968D);
MakeFunction(0x4095C4, 0x409690);
MakeUnkn(0x409690, 1);
MakeNameEx(0x409690, "CvtInt", 0x20);
MakeComm(0x409690, "'procedure CvtInt;'");
MakeCode(0x409690);
MakeCode(0x4096A6);
MakeCode(0x4096AB);
MakeCode(0x4096AD);
MakeCode(0x4096BD);
MakeCode(0x4096D3);
MakeCode(0x4096D6);
MakeFunction(0x409690, 0x4096DC);
MakeUnkn(0x4096DC, 1);
MakeNameEx(0x4096DC, "IntToStr", 0x20);
MakeComm(0x4096DC, "'function IntToStr(Value:Integer):AnsiString;'");
MakeCode(0x4096DC);
MakeFunction(0x4096DC, 0x4096F9);
MakeUnkn(0x4096FC, 1);
MakeNameEx(0x4096FC, "CvtInt64", 0x20);
MakeComm(0x4096FC, "'procedure CvtInt64;'");
MakeCode(0x4096FC);
MakeFunction(0x4096FC, 0x409730);
MakeUnkn(0x4097C8, 1);
MakeNameEx(0x4097C8, "IntToStr_0", 0x20);
MakeComm(0x4097C8, "'function IntToStr(Value:Int64):AnsiString;'");
MakeCode(0x4097C8);
MakeFunction(0x4097C8, 0x4097EE);
MakeUnkn(0x4097F0, 1);
MakeNameEx(0x4097F0, "IntToHex", 0x20);
MakeComm(0x4097F0, "'function IntToHex(Value:Integer; Digits:Integer):AnsiString;'");
MakeCode(0x4097F0);
MakeCode(0x4097F7);
MakeFunction(0x4097F0, 0x409815);
MakeUnkn(0x409818, 1);
MakeNameEx(0x409818, "StrToInt", 0x20);
MakeComm(0x409818, "'function StrToInt(const S:AnsiString):Integer;'");
MakeCode(0x409818);
MakeCode(0x409849);
MakeFunction(0x409818, 0x409851);
MakeUnkn(0x409854, 1);
MakeNameEx(0x409854, "StrToIntDef", 0x20);
MakeComm(0x409854, "'function StrToIntDef(const S:AnsiString; Default:Integer):Integer;'");
MakeCode(0x409854);
MakeCode(0x409867);
MakeFunction(0x409854, 0x40986A);
MakeUnkn(0x40986C, 1);
MakeNameEx(0x40986C, "TryStrToInt", 0x20);
MakeComm(0x40986C, "'function TryStrToInt(const S:AnsiString; var Value:Integer):Boolean;'");
MakeCode(0x40986C);
MakeFunction(0x40986C, 0x409889);
MakeUnkn(0x40988C, 1);
MakeNameEx(0x40988C, "VerifyBoolStrArray", 0x20);
MakeComm(0x40988C, "'procedure VerifyBoolStrArray;'");
MakeCode(0x40988C);
MakeCode(0x4098C3);
MakeFunction(0x40988C, 0x4098FB);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x409904, -1);
MakeDword(0x409900);
MakeDword(0x4098FC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x409914, -1);
MakeDword(0x409910);
MakeDword(0x40990C);
MakeUnkn(0x40991C, 1);
MakeNameEx(0x40991C, "CompareWith", 0x20);
MakeComm(0x40991C, "'function CompareWith(const aArray:array[$0..-$1] of System.AnsiString; const _Dv_:$0..-$1):Boolean;'");
MakeCode(0x40991C);
MakeCode(0x409933);
MakeCode(0x40994D);
MakeCode(0x409959);
MakeCode(0x40998B);
MakeCode(0x409993);
MakeFunction(0x40991C, 0x40999E);
MakeUnkn(0x4099A0, 1);
MakeNameEx(0x4099A0, "TryStrToBool", 0x20);
MakeComm(0x4099A0, "'function TryStrToBool(const S:AnsiString; var Value:Boolean):Boolean;'");
MakeCode(0x4099A0);
MakeCode(0x4099CF);
MakeCode(0x4099F7);
MakeCode(0x409A18);
MakeFunction(0x4099A0, 0x409A1F);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x409A2C, -1);
MakeDword(0x409A28);
MakeDword(0x409A24);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x409A38, -1);
MakeDword(0x409A34);
MakeDword(0x409A30);
MakeUnkn(0x409A3C, 1);
MakeNameEx(0x409A3C, "BoolToStr", 0x20);
MakeComm(0x409A3C, "'function BoolToStr(B:Boolean; UseBoolStrs:Boolean):AnsiString;'");
MakeCode(0x409A3C);
MakeCode(0x409A60);
MakeCode(0x409A72);
MakeCode(0x409A83);
MakeFunction(0x409A3C, 0x409A86);
MakeUnkn(0x409A88, 1);
MakeNameEx(0x409A88, "FileOpen", 0x20);
MakeComm(0x409A88, "'function FileOpen(const FileName:AnsiString; Mode:LongWord):Integer;'");
MakeCode(0x409A88);
MakeCode(0x409ADB);
MakeFunction(0x409A88, 0x409ADF);
MakeUnkn(0x409AE0, 1);
MakeNameEx(0x409AE0, "FileRead", 0x20);
MakeComm(0x409AE0, "'function FileRead(Handle:Integer; var Buffer:void ; Count:LongWord):Integer;'");
MakeCode(0x409AE0);
MakeCode(0x409B04);
MakeFunction(0x409AE0, 0x409B0C);
MakeUnkn(0x409B0C, 1);
MakeNameEx(0x409B0C, "FileWrite", 0x20);
MakeComm(0x409B0C, "'function FileWrite(Handle:Integer; const Buffer:void ; Count:LongWord):Integer;'");
MakeCode(0x409B0C);
MakeCode(0x409B30);
MakeFunction(0x409B0C, 0x409B38);
MakeUnkn(0x409B38, 1);
MakeNameEx(0x409B38, "FileSeek", 0x20);
MakeComm(0x409B38, "'function FileSeek(Handle:Integer; Origin:Integer; const Offset:Int64):Int64;'");
MakeCode(0x409B38);
MakeCode(0x409B78);
MakeFunction(0x409B38, 0x409B86);
MakeUnkn(0x409B88, 1);
MakeNameEx(0x409B88, "DirectoryExists", 0x20);
MakeComm(0x409B88, "'function DirectoryExists(const Directory:AnsiString):Boolean;'");
MakeCode(0x409B88);
MakeCode(0x409BA1);
MakeCode(0x409BA5);
MakeFunction(0x409B88, 0x409BA9);
MakeUnkn(0x409BAC, 1);
MakeNameEx(0x409BAC, "AnsiLastChar", 0x20);
MakeComm(0x409BAC, "'function AnsiLastChar(const S:AnsiString):PChar;'");
MakeCode(0x409BAC);
MakeCode(0x409BBB);
MakeCode(0x409BC3);
MakeCode(0x409BC4);
MakeCode(0x409BD8);
MakeFunction(0x409BAC, 0x409BDD);
MakeUnkn(0x409BE0, 1);
MakeNameEx(0x409BE0, "LastDelimiter", 0x20);
MakeComm(0x409BE0, "'function LastDelimiter(const Delimiters:AnsiString; const S:AnsiString):Integer;'");
MakeCode(0x409BE0);
MakeCode(0x409BF3);
MakeCode(0x409C02);
MakeCode(0x409C26);
MakeCode(0x409C2B);
MakeFunction(0x409BE0, 0x409C32);
MakeUnkn(0x409C34, 1);
MakeNameEx(0x409C34, "ExtractFileName", 0x20);
MakeComm(0x409C34, "'function ExtractFileName(const FileName:AnsiString):AnsiString;'");
MakeCode(0x409C34);
MakeFunction(0x409C34, 0x409C5D);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x409C68, -1);
MakeDword(0x409C64);
MakeDword(0x409C60);
MakeUnkn(0x409C6C, 1);
MakeNameEx(0x409C6C, "ExtractFileExt", 0x20);
MakeComm(0x409C6C, "'function ExtractFileExt(const FileName:AnsiString):AnsiString;'");
MakeCode(0x409C6C);
MakeCode(0x409C9D);
MakeCode(0x409CA4);
MakeFunction(0x409C6C, 0x409CA8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x409CB0, -1);
MakeDword(0x409CAC);
MakeDword(0x409CA8);
MakeUnkn(0x409CB4, 1);
MakeNameEx(0x409CB4, "ExpandFileName", 0x20);
MakeComm(0x409CB4, "'function ExpandFileName(const FileName:AnsiString):AnsiString;'");
MakeCode(0x409CB4);
MakeFunction(0x409CB4, 0x409CEE);
MakeUnkn(0x409CF0, 1);
MakeNameEx(0x409CF0, "BackfillGetDiskFreeSpaceEx", 0x20);
MakeComm(0x409CF0, "'function BackfillGetDiskFreeSpaceEx(Directory:PChar; var FreeAvailable:TLargeInteger; var TotalSpace:TLargeInteger; TotalFree:PLargeInteger):BOOL; stdcall;'");
MakeCode(0x409CF0);
MakeCode(0x409D00);
MakeFunction(0x409CF0, 0x409D63);
MakeUnkn(0x409D64, 1);
MakeNameEx(0x409D64, "CreateDir", 0x20);
MakeComm(0x409D64, "'function CreateDir(const Dir:AnsiString):Boolean;'");
MakeCode(0x409D64);
MakeFunction(0x409D64, 0x409D7E);
MakeUnkn(0x409D80, 1);
MakeNameEx(0x409D80, "RemoveDir", 0x20);
MakeComm(0x409D80, "'function RemoveDir(const Dir:AnsiString):Boolean;'");
MakeCode(0x409D80);
MakeFunction(0x409D80, 0x409D98);
MakeUnkn(0x409D98, 1);
MakeNameEx(0x409D98, "StrLen", 0x20);
MakeComm(0x409D98, "'function StrLen(const Str:PChar):Cardinal;'");
MakeCode(0x409D98);
MakeFunction(0x409D98, 0x409DAF);
MakeUnkn(0x409DB0, 1);
MakeNameEx(0x409DB0, "StrEnd", 0x20);
MakeComm(0x409DB0, "'function StrEnd(const Str:PChar):PChar;'");
MakeCode(0x409DB0);
MakeFunction(0x409DB0, 0x409DC3);
MakeUnkn(0x409DC4, 1);
MakeNameEx(0x409DC4, "StrMove", 0x20);
MakeComm(0x409DC4, "'function StrMove(Dest:PChar; const Source:PChar; Count:Cardinal):PChar;'");
MakeCode(0x409DC4);
MakeFunction(0x409DC4, 0x409DD1);
MakeUnkn(0x409DD4, 1);
MakeNameEx(0x409DD4, "StrCopy", 0x20);
MakeComm(0x409DD4, "'function StrCopy(Dest:PChar; const Source:PChar):PChar;'");
MakeCode(0x409DD4);
MakeCode(0x409DE9);
MakeCode(0x409E03);
MakeCode(0x409E05);
MakeFunction(0x409DD4, 0x409E09);
MakeUnkn(0x409E0C, 1);
MakeNameEx(0x409E0C, "StrECopy", 0x20);
MakeComm(0x409E0C, "'function StrECopy(Dest:PChar; const Source:PChar):PChar;'");
MakeCode(0x409E0C);
MakeFunction(0x409E0C, 0x409E35);
MakeUnkn(0x409E38, 1);
MakeNameEx(0x409E38, "StrLCopy", 0x20);
MakeComm(0x409E38, "'function StrLCopy(Dest:PChar; const Source:PChar; MaxLen:Cardinal):PChar;'");
MakeCode(0x409E38);
MakeCode(0x409E4C);
MakeFunction(0x409E38, 0x409E69);
MakeUnkn(0x409E6C, 1);
MakeNameEx(0x409E6C, "StrPCopy", 0x20);
MakeComm(0x409E6C, "'function StrPCopy(Dest:PChar; const Source:AnsiString):PChar;'");
MakeCode(0x409E6C);
MakeCode(0x409E7E);
MakeFunction(0x409E6C, 0x409E94);
MakeUnkn(0x409E94, 1);
MakeNameEx(0x409E94, "StrPLCopy", 0x20);
MakeComm(0x409E94, "'function StrPLCopy(Dest:PChar; const Source:AnsiString; MaxLen:Cardinal):PChar;'");
MakeCode(0x409E94);
MakeFunction(0x409E94, 0x409EB3);
MakeUnkn(0x409EB4, 1);
MakeNameEx(0x409EB4, "StrComp", 0x20);
MakeComm(0x409EB4, "'function StrComp(const Str1:PChar; const Str2:PChar):Integer;'");
MakeCode(0x409EB4);
MakeCode(0x409EBB);
MakeCode(0x409F2D);
MakeCode(0x409F30);
MakeCode(0x409F33);
MakeCode(0x409F36);
MakeCode(0x409F39);
MakeFunction(0x409EB4, 0x409F3F);
MakeUnkn(0x409F40, 1);
MakeNameEx(0x409F40, "StrIComp", 0x20);
MakeComm(0x409F40, "'function StrIComp(const Str1:PChar; const Str2:PChar):Integer;'");
MakeCode(0x409F40);
MakeCode(0x409F55);
MakeCode(0x409F66);
MakeCode(0x409F76);
MakeCode(0x409F7A);
MakeFunction(0x409F40, 0x409F7D);
MakeUnkn(0x409F80, 1);
MakeNameEx(0x409F80, "StrLIComp", 0x20);
MakeComm(0x409F80, "'function StrLIComp(const Str1:PChar; const Str2:PChar; MaxLen:Cardinal):Integer;'");
MakeCode(0x409F80);
MakeCode(0x409F99);
MakeCode(0x409FAA);
MakeCode(0x409FBA);
MakeCode(0x409FBE);
MakeFunction(0x409F80, 0x409FC2);
MakeUnkn(0x409FC4, 1);
MakeNameEx(0x409FC4, "StrScan", 0x20);
MakeComm(0x409FC4, "'function StrScan(const Str:PChar; Chr:Char):PChar;'");
MakeCode(0x409FC4);
MakeFunction(0x409FC4, 0x409FD6);
MakeUnkn(0x409FD8, 1);
MakeNameEx(0x409FD8, "StrRScan", 0x20);
MakeComm(0x409FD8, "'function StrRScan(const Str:PChar; Chr:Char):PChar;'");
MakeCode(0x409FD8);
MakeCode(0x409FE6);
MakeCode(0x409FEA);
MakeCode(0x409FEF);
MakeCode(0x409FFB);
MakeFunction(0x409FD8, 0x409FFF);
MakeUnkn(0x40A000, 1);
MakeNameEx(0x40A000, "StrPos", 0x20);
MakeComm(0x40A000, "'function StrPos(const Str1:PChar; const Str2:PChar):PChar;'");
MakeCode(0x40A000);
MakeCode(0x40A033);
MakeCode(0x40A04B);
MakeCode(0x40A04D);
MakeFunction(0x40A000, 0x40A051);
MakeUnkn(0x40A054, 1);
MakeNameEx(0x40A054, "StrPas", 0x20);
MakeComm(0x40A054, "'function StrPas(const Str:PChar):AnsiString;'");
MakeCode(0x40A054);
MakeFunction(0x40A054, 0x40A066);
MakeUnkn(0x40A068, 1);
MakeNameEx(0x40A068, "StrAlloc", 0x20);
MakeComm(0x40A068, "'function StrAlloc(Size:Cardinal):PChar;'");
MakeCode(0x40A068);
MakeFunction(0x40A068, 0x40A07C);
MakeUnkn(0x40A07C, 1);
MakeNameEx(0x40A07C, "StrBufSize", 0x20);
MakeComm(0x40A07C, "'function StrBufSize(const Str:PChar):Cardinal;'");
MakeCode(0x40A07C);
MakeFunction(0x40A07C, 0x40A085);
MakeUnkn(0x40A088, 1);
MakeNameEx(0x40A088, "StrNew", 0x20);
MakeComm(0x40A088, "'function StrNew(const Str:PChar):PChar;'");
MakeCode(0x40A088);
MakeCode(0x40A095);
MakeFunction(0x40A088, 0x40A0B2);
MakeUnkn(0x40A0B4, 1);
MakeNameEx(0x40A0B4, "StrDispose", 0x20);
MakeComm(0x40A0B4, "'procedure StrDispose(Str:PChar);'");
MakeCode(0x40A0B4);
MakeFunction(0x40A0B4, 0x40A0C3);
MakeUnkn(0x40A0C4, 1);
MakeNameEx(0x40A0C4, "FormatError", 0x20);
MakeComm(0x40A0C4, "'procedure FormatError(ErrorCode:Integer; Format:PChar; FmtLen:Cardinal);'");
MakeCode(0x40A0C4);
MakeCode(0x40A0DA);
MakeCode(0x40A0E9);
MakeFunction(0x40A0C4, 0x40A11C);
MakeUnkn(0x40A11C, 1);
MakeNameEx(0x40A11C, "FormatVarToStr", 0x20);
MakeComm(0x40A11C, "'procedure FormatVarToStr(var S:AnsiString; const V:TVarData);'");
MakeCode(0x40A11C);
MakeCode(0x40A134);
MakeFunction(0x40A11C, 0x40A13D);
MakeUnkn(0x40A140, 1);
MakeNameEx(0x40A140, "FormatClearStr", 0x20);
MakeComm(0x40A140, "'procedure FormatClearStr(var S:AnsiString);'");
MakeCode(0x40A140);
MakeFunction(0x40A140, 0x40A14C);
MakeUnkn(0x40A14C, 1);
MakeNameEx(0x40A14C, "FormatBuf", 0x20);
MakeComm(0x40A14C, "'function FormatBuf(var Buffer:void ; BufLen:Cardinal; const Format:void ; FmtLen:Cardinal; const Args:array[$0..-$1] of System.TVarRec; const _Dv_:$0..-$1):Cardinal;'");
MakeCode(0x40A14C);
MakeCode(0x40A175);
MakeCode(0x40A179);
MakeCode(0x40A182);
MakeCode(0x40A186);
MakeCode(0x40A190);
MakeCode(0x40A19F);
MakeCode(0x40A1AB);
MakeCode(0x40A1BE);
MakeCode(0x40A1D4);
MakeCode(0x40A1EB);
MakeCode(0x40A1F9);
MakeCode(0x40A1FB);
MakeCode(0x40A205);
MakeCode(0x40A213);
MakeCode(0x40A225);
MakeCode(0x40A22E);
MakeCode(0x40A234);
MakeCode(0x40A250);
MakeCode(0x40A256);
MakeCode(0x40A270);
MakeFunction(0x40A14C, 0x40A276);
MakeUnkn(0x40A4C4, 1);
MakeNameEx(0x40A4C4, "StrFmt", 0x20);
MakeComm(0x40A4C4, "'function StrFmt(Buffer:PChar; Format:PChar; const Args:array[$0..-$1] of System.TVarRec; const _Dv_:$0..-$1):PChar;'");
MakeCode(0x40A4C4);
MakeCode(0x40A4FB);
MakeCode(0x40A4FD);
MakeFunction(0x40A4C4, 0x40A504);
MakeUnkn(0x40A504, 1);
MakeNameEx(0x40A504, "StrLFmt", 0x20);
MakeComm(0x40A504, "'function StrLFmt(Buffer:PChar; MaxBufLen:Cardinal; Format:PChar; const Args:array[$0..-$1] of System.TVarRec; const _Dv_:$0..-$1):PChar;'");
MakeCode(0x40A504);
MakeCode(0x40A53B);
MakeCode(0x40A53D);
MakeFunction(0x40A504, 0x40A544);
MakeUnkn(0x40A544, 1);
MakeNameEx(0x40A544, "Format", 0x20);
MakeComm(0x40A544, "'function Format(const Format:AnsiString; const Args:array[$0..-$1] of System.TVarRec; const _Dv_:$0..-$1):AnsiString;'");
MakeCode(0x40A544);
MakeFunction(0x40A544, 0x40A557);
MakeUnkn(0x40A558, 1);
MakeNameEx(0x40A558, "FmtStr", 0x20);
MakeComm(0x40A558, "'procedure FmtStr(var Result:AnsiString; const Format:AnsiString; const Args:array[$0..-$1] of System.TVarRec; const _Dv_:$0..-$1);'");
MakeCode(0x40A558);
MakeCode(0x40A583);
MakeCode(0x40A595);
MakeCode(0x40A5B6);
MakeCode(0x40A5C1);
MakeCode(0x40A5C6);
MakeCode(0x40A5D0);
MakeCode(0x40A5EE);
MakeCode(0x40A607);
MakeCode(0x40A61B);
MakeCode(0x40A62B);
MakeFunction(0x40A558, 0x40A634);
MakeUnkn(0x40A634, 1);
MakeNameEx(0x40A634, "PutExponent", 0x20);
MakeComm(0x40A634, "'procedure PutExponent;'");
MakeCode(0x40A634);
MakeCode(0x40A640);
MakeCode(0x40A64A);
MakeCode(0x40A650);
MakeCode(0x40A651);
MakeCode(0x40A655);
MakeCode(0x40A66C);
MakeFunction(0x40A634, 0x40A677);
MakeUnkn(0x40A678, 1);
MakeNameEx(0x40A678, "FloatToText", 0x20);
MakeComm(0x40A678, "'function FloatToText(BufferArg:PChar; const Value:void ; ValueType:TFloatValue; Format:TFloatFormat; Precision:Integer; Digits:Integer):Integer;'");
MakeCode(0x40A678);
MakeCode(0x40A6CA);
MakeCode(0x40A6D4);
MakeCode(0x40A6E6);
MakeCode(0x40A71A);
MakeCode(0x40A734);
MakeCode(0x40A736);
MakeCode(0x40A747);
MakeCode(0x40A76E);
MakeFunction(0x40A678, 0x40A777);
MakeUnkn(0x40A94C, 1);
MakeNameEx(0x40A94C, "FloatToDecimal", 0x20);
MakeComm(0x40A94C, "'procedure FloatToDecimal(var Result:TFloatRec; const Value:void ; ValueType:TFloatValue; Precision:Integer; Decimals:Integer);'");
MakeCode(0x40A94C);
MakeCode(0x40A96F);
MakeCode(0x40A979);
MakeCode(0x40A9A3);
MakeCode(0x40A9A4);
MakeCode(0x40A9A6);
MakeCode(0x40A9AF);
MakeCode(0x40A9FA);
MakeCode(0x40AA06);
MakeCode(0x40AA2D);
MakeCode(0x40AA35);
MakeCode(0x40AA41);
MakeCode(0x40AA56);
MakeCode(0x40AA61);
MakeCode(0x40AA66);
MakeCode(0x40AA75);
MakeCode(0x40AA79);
MakeCode(0x40AA7C);
MakeCode(0x40AA87);
MakeCode(0x40AA9B);
MakeCode(0x40AB6F);
MakeFunction(0x40A94C, 0x40AB78);
MakeUnkn(0x40AB78, 1);
MakeNameEx(0x40AB78, "TextToFloat", 0x20);
MakeComm(0x40AB78, "'function TextToFloat(Buffer:PChar; var Value:void ; ValueType:TFloatValue):Boolean;'");
MakeCode(0x40AB78);
MakeCode(0x40ABB6);
MakeCode(0x40ABB7);
MakeCode(0x40ABCF);
MakeCode(0x40ABE5);
MakeCode(0x40ABF9);
MakeCode(0x40AC0A);
MakeCode(0x40AC13);
MakeCode(0x40AC15);
MakeCode(0x40AC22);
MakeCode(0x40AC24);
MakeCode(0x40AC26);
MakeCode(0x40AC2F);
MakeCode(0x40AC38);
MakeCode(0x40AC3A);
MakeCode(0x40AC3E);
MakeCode(0x40AC54);
MakeCode(0x40AC56);
MakeCode(0x40AC66);
MakeCode(0x40AC67);
MakeCode(0x40AC7D);
MakeCode(0x40AC84);
MakeCode(0x40AC85);
MakeFunction(0x40AB78, 0x40AC8C);
MakeUnkn(0x40AC8C, 1);
MakeNameEx(0x40AC8C, "FloatToStr", 0x20);
MakeComm(0x40AC8C, "'function FloatToStr(Value:Extended):AnsiString;'");
MakeCode(0x40AC8C);
MakeFunction(0x40AC8C, 0x40ACBB);
MakeUnkn(0x40ACBC, 1);
MakeNameEx(0x40ACBC, "CurrToStr", 0x20);
MakeComm(0x40ACBC, "'function CurrToStr(Value:Currency):AnsiString;'");
MakeCode(0x40ACBC);
MakeFunction(0x40ACBC, 0x40ACEB);
MakeUnkn(0x40ACEC, 1);
MakeNameEx(0x40ACEC, "TryStrToFloat", 0x20);
MakeComm(0x40ACEC, "'function TryStrToFloat(const S:AnsiString; var Value:Extended):Boolean;'");
MakeCode(0x40ACEC);
MakeFunction(0x40ACEC, 0x40AD05);
MakeUnkn(0x40AD08, 1);
MakeNameEx(0x40AD08, "TryStrToFloat_0", 0x20);
MakeComm(0x40AD08, "'function TryStrToFloat(const S:AnsiString; var Value:Double):Boolean;'");
MakeCode(0x40AD08);
MakeCode(0x40AD2B);
MakeFunction(0x40AD08, 0x40AD31);
MakeUnkn(0x40AD34, 1);
MakeNameEx(0x40AD34, "TryStrToFloat_1", 0x20);
MakeComm(0x40AD34, "'function TryStrToFloat(const S:AnsiString; var Value:Single):Boolean;'");
MakeCode(0x40AD34);
MakeCode(0x40AD57);
MakeFunction(0x40AD34, 0x40AD5D);
MakeUnkn(0x40AD60, 1);
MakeNameEx(0x40AD60, "TryStrToCurr", 0x20);
MakeComm(0x40AD60, "'function TryStrToCurr(const S:AnsiString; var Value:Currency):Boolean;'");
MakeCode(0x40AD60);
MakeFunction(0x40AD60, 0x40AD79);
MakeUnkn(0x40AD7C, 1);
MakeNameEx(0x40AD7C, "DateTimeToTimeStamp", 0x20);
MakeComm(0x40AD7C, "'function DateTimeToTimeStamp(DateTime:TDateTime):TTimeStamp;'");
MakeCode(0x40AD7C);
MakeCode(0x40ADAB);
MakeCode(0x40ADB1);
MakeFunction(0x40AD7C, 0x40ADC0);
MakeUnkn(0x40ADC0, 1);
MakeNameEx(0x40ADC0, "TryEncodeTime", 0x20);
MakeComm(0x40ADC0, "'function TryEncodeTime(Hour:Word; Min:Word; Sec:Word; MSec:Word; var Time:TDateTime):Boolean;'");
MakeCode(0x40ADC0);
MakeCode(0x40AE21);
MakeFunction(0x40ADC0, 0x40AE2C);
MakeUnkn(0x40AE30, 1);
MakeNameEx(0x40AE30, "DecodeTime", 0x20);
MakeComm(0x40AE30, "'procedure DecodeTime(var Hour:Word; var Min:Word; var Sec:Word; const DateTime:TDateTime; var MSec:Word);'");
MakeCode(0x40AE30);
MakeFunction(0x40AE30, 0x40AE8C);
MakeUnkn(0x40AE8C, 1);
MakeNameEx(0x40AE8C, "IsLeapYear", 0x20);
MakeComm(0x40AE8C, "'function IsLeapYear(Year:Word):Boolean;'");
MakeCode(0x40AE8C);
MakeCode(0x40AEBB);
MakeCode(0x40AEC0);
MakeFunction(0x40AE8C, 0x40AEC5);
MakeUnkn(0x40AEC8, 1);
MakeNameEx(0x40AEC8, "TryEncodeDate", 0x20);
MakeComm(0x40AEC8, "'function TryEncodeDate(Year:Word; Month:Word; Day:Word; var Date:TDateTime):Boolean;'");
MakeCode(0x40AEC8);
MakeCode(0x40AF2F);
MakeCode(0x40AF38);
MakeCode(0x40AF56);
MakeCode(0x40AF84);
MakeFunction(0x40AEC8, 0x40AF91);
MakeUnkn(0x40AF94, 1);
MakeNameEx(0x40AF94, "DecodeDateFully", 0x20);
MakeComm(0x40AF94, "'function DecodeDateFully(var Year:Word; var Month:Word; var Day:Word; const DateTime:TDateTime; var DOW:Word):Boolean;'");
MakeCode(0x40AF94);
MakeCode(0x40AFE1);
MakeCode(0x40AFFC);
MakeCode(0x40B00F);
MakeCode(0x40B031);
MakeCode(0x40B07D);
MakeCode(0x40B09B);
MakeCode(0x40B0BC);
MakeCode(0x40B0D3);
MakeFunction(0x40AF94, 0x40B0DD);
MakeUnkn(0x40B0E0, 1);
MakeNameEx(0x40B0E0, "DecodeDate", 0x20);
MakeComm(0x40B0E0, "'procedure DecodeDate(var Year:Word; var Month:Word; var Day:Word; const DateTime:TDateTime);'");
MakeCode(0x40B0E0);
MakeFunction(0x40B0E0, 0x40B0FE);
MakeUnkn(0x40B100, 1);
MakeNameEx(0x40B100, "DayOfWeek", 0x20);
MakeComm(0x40B100, "'function DayOfWeek(const DateTime:TDateTime):Word;'");
MakeCode(0x40B100);
MakeFunction(0x40B100, 0x40B128);
MakeUnkn(0x40B128, 1);
MakeNameEx(0x40B128, "CurrentYear", 0x20);
MakeComm(0x40B128, "'function CurrentYear:Word;'");
MakeCode(0x40B128);
MakeFunction(0x40B128, 0x40B139);
MakeUnkn(0x40B13C, 1);
MakeNameEx(0x40B13C, "AppendChars", 0x20);
MakeComm(0x40B13C, "'procedure AppendChars(P:PChar; Count:Integer);'");
MakeCode(0x40B13C);
MakeCode(0x40B154);
MakeCode(0x40B172);
MakeFunction(0x40B13C, 0x40B17E);
MakeUnkn(0x40B180, 1);
MakeNameEx(0x40B180, "AppendString", 0x20);
MakeComm(0x40B180, "'procedure AppendString(const S:AnsiString);'");
MakeCode(0x40B180);
MakeCode(0x40B18E);
MakeFunction(0x40B180, 0x40B19A);
MakeUnkn(0x40B19C, 1);
MakeNameEx(0x40B19C, "AppendNumber", 0x20);
MakeComm(0x40B19C, "'procedure AppendNumber(Number:Integer; Digits:Integer);'");
MakeCode(0x40B19C);
MakeFunction(0x40B19C, 0x40B1E5);
MakeUnkn(0x40B1E8, 1);
MakeNameEx(0x40B1E8, "GetCount", 0x20);
MakeComm(0x40B1E8, "'procedure GetCount;'");
MakeCode(0x40B1E8);
MakeCode(0x40B1F6);
MakeCode(0x40B1F8);
MakeFunction(0x40B1E8, 0x40B213);
MakeUnkn(0x40B214, 1);
MakeNameEx(0x40B214, "GetDate", 0x20);
MakeComm(0x40B214, "'procedure GetDate;'");
MakeCode(0x40B214);
MakeCode(0x40B24A);
MakeFunction(0x40B214, 0x40B24C);
MakeUnkn(0x40B24C, 1);
MakeNameEx(0x40B24C, "GetTime", 0x20);
MakeComm(0x40B24C, "'procedure GetTime;'");
MakeCode(0x40B24C);
MakeCode(0x40B289);
MakeFunction(0x40B24C, 0x40B28B);
MakeUnkn(0x40B28C, 1);
MakeNameEx(0x40B28C, "ConvertEraString", 0x20);
MakeComm(0x40B28C, "'function ConvertEraString(const Count:Integer):AnsiString;'");
MakeCode(0x40B28C);
MakeCode(0x40B360);
MakeCode(0x40B380);
MakeCode(0x40B3CD);
MakeCode(0x40B3DA);
MakeCode(0x40B3EE);
MakeCode(0x40B3F3);
MakeFunction(0x40B28C, 0x40B3FB);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40B404, -1);
MakeDword(0x40B400);
MakeDword(0x40B3FC);
MakeUnkn(0x40B408, 1);
MakeNameEx(0x40B408, "ConvertYearString", 0x20);
MakeComm(0x40B408, "'function ConvertYearString(const Count:Integer):AnsiString;'");
MakeCode(0x40B408);
MakeCode(0x40B466);
MakeCode(0x40B473);
MakeCode(0x40B4D0);
MakeCode(0x40B4E0);
MakeCode(0x40B4ED);
MakeCode(0x40B4F6);
MakeCode(0x40B4FB);
MakeFunction(0x40B408, 0x40B503);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40B50C, -1);
MakeDword(0x40B508);
MakeDword(0x40B504);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40B518, -1);
MakeDword(0x40B514);
MakeDword(0x40B510);
MakeUnkn(0x40B520, 1);
MakeNameEx(0x40B520, "AppendFormat", 0x20);
MakeComm(0x40B520, "'procedure AppendFormat(Format:PChar);'");
MakeCode(0x40B520);
MakeFunction(0x40B520, 0x40BCD8);
MakeUnkn(0x40BCD8, 1);
MakeNameEx(0x40BCD8, "DateTimeToString", 0x20);
MakeComm(0x40BCD8, "'procedure DateTimeToString(var Result:AnsiString; const Format:AnsiString; DateTime:TDateTime);'");
MakeCode(0x40BCD8);
MakeCode(0x40BD06);
MakeCode(0x40BD12);
MakeFunction(0x40BCD8, 0x40BD2D);
MakeUnkn(0x40BD34, 1);
MakeNameEx(0x40BD34, "ScanBlanks", 0x20);
MakeComm(0x40BD34, "'procedure ScanBlanks(const S:AnsiString; var Pos:Integer);'");
MakeCode(0x40BD34);
MakeCode(0x40BD3F);
MakeCode(0x40BD40);
MakeCode(0x40BD52);
MakeFunction(0x40BD34, 0x40BD58);
MakeUnkn(0x40BD58, 1);
MakeNameEx(0x40BD58, "ScanNumber", 0x20);
MakeComm(0x40BD58, "'function ScanNumber(const S:AnsiString; var Pos:Integer; var Number:Word; var CharCount:Byte):Boolean;'");
MakeCode(0x40BD58);
MakeCode(0x40BD86);
MakeCode(0x40BD9C);
MakeCode(0x40BDB9);
MakeCode(0x40BDDD);
MakeFunction(0x40BD58, 0x40BDEA);
MakeUnkn(0x40BDEC, 1);
MakeNameEx(0x40BDEC, "ScanString", 0x20);
MakeComm(0x40BDEC, "'function ScanString(const S:AnsiString; var Pos:Integer; const Symbol:AnsiString):Boolean;'");
MakeCode(0x40BDEC);
MakeCode(0x40BE32);
MakeCode(0x40BE56);
MakeCode(0x40BE62);
MakeCode(0x40BE93);
MakeCode(0x40BE9C);
MakeCode(0x40BEA9);
MakeCode(0x40BEB2);
MakeCode(0x40BEB7);
MakeFunction(0x40BDEC, 0x40BEC4);
MakeUnkn(0x40BEC4, 1);
MakeNameEx(0x40BEC4, "ScanChar", 0x20);
MakeComm(0x40BEC4, "'function ScanChar(const S:AnsiString; var Pos:Integer; Ch:Char):Boolean;'");
MakeCode(0x40BEC4);
MakeCode(0x40BEE5);
MakeCode(0x40BEF9);
MakeFunction(0x40BEC4, 0x40BF00);
MakeUnkn(0x40BF00, 1);
MakeNameEx(0x40BF00, "GetDateOrder", 0x20);
MakeComm(0x40BF00, "'function GetDateOrder(const DateFormat:AnsiString):TDateOrder;'");
MakeCode(0x40BF00);
MakeCode(0x40BF0E);
MakeCode(0x40BF27);
MakeCode(0x40BF2B);
MakeCode(0x40BF2F);
MakeCode(0x40BF33);
MakeCode(0x40BF37);
MakeCode(0x40BF38);
MakeCode(0x40BF45);
MakeFunction(0x40BF00, 0x40BF4B);
MakeUnkn(0x40BF4C, 1);
MakeNameEx(0x40BF4C, "ScanToNumber", 0x20);
MakeComm(0x40BF4C, "'procedure ScanToNumber(const S:AnsiString; var Pos:Integer);'");
MakeCode(0x40BF4C);
MakeCode(0x40BF54);
MakeCode(0x40BF74);
MakeCode(0x40BF76);
MakeCode(0x40BF8E);
MakeFunction(0x40BF4C, 0x40BF91);
MakeUnkn(0x40BF94, 1);
MakeNameEx(0x40BF94, "GetEraYearOffset", 0x20);
MakeComm(0x40BF94, "'function GetEraYearOffset(const Name:AnsiString):Integer;'");
MakeCode(0x40BF94);
MakeCode(0x40BFAF);
MakeCode(0x40BFD4);
MakeCode(0x40BFDD);
MakeFunction(0x40BF94, 0x40BFE6);
MakeUnkn(0x40BFE8, 1);
MakeNameEx(0x40BFE8, "EraToYear", 0x20);
MakeComm(0x40BFE8, "'function EraToYear(Year:Integer):Integer;'");
MakeCode(0x40BFE8);
MakeCode(0x40C020);
MakeCode(0x40C031);
MakeCode(0x40C037);
MakeFunction(0x40BFE8, 0x40C042);
MakeUnkn(0x40C044, 1);
MakeNameEx(0x40C044, "ScanDate", 0x20);
MakeComm(0x40C044, "'function ScanDate(const S:AnsiString; var Pos:Integer; var Date:TDateTime):Boolean;'");
MakeCode(0x40C044);
MakeCode(0x40C0D6);
MakeCode(0x40C0F2);
MakeCode(0x40C17A);
MakeCode(0x40C197);
MakeCode(0x40C1B4);
MakeCode(0x40C1CF);
MakeCode(0x40C1E3);
MakeCode(0x40C224);
MakeCode(0x40C243);
MakeCode(0x40C253);
MakeCode(0x40C2AF);
MakeCode(0x40C2B1);
MakeCode(0x40C2C5);
MakeCode(0x40C32D);
MakeCode(0x40C343);
MakeCode(0x40C350);
MakeCode(0x40C366);
MakeCode(0x40C36B);
MakeFunction(0x40C044, 0x40C378);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40C380, -1);
MakeDword(0x40C37C);
MakeDword(0x40C378);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40C38C, -1);
MakeDword(0x40C388);
MakeDword(0x40C384);
MakeUnkn(0x40C390, 1);
MakeNameEx(0x40C390, "ScanTime", 0x20);
MakeComm(0x40C390, "'function ScanTime(const S:AnsiString; var Pos:Integer; var Time:TDateTime):Boolean;'");
MakeCode(0x40C390);
MakeCode(0x40C3C8);
MakeCode(0x40C3CC);
MakeCode(0x40C3F1);
MakeCode(0x40C3F6);
MakeCode(0x40C403);
MakeCode(0x40C4BC);
MakeCode(0x40C4E5);
MakeCode(0x40C4E9);
MakeCode(0x40C50E);
MakeCode(0x40C513);
MakeCode(0x40C536);
MakeCode(0x40C53B);
MakeCode(0x40C565);
MakeFunction(0x40C390, 0x40C56F);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40C578, -1);
MakeDword(0x40C574);
MakeDword(0x40C570);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40C584, -1);
MakeDword(0x40C580);
MakeDword(0x40C57C);
MakeUnkn(0x40C588, 1);
MakeNameEx(0x40C588, "TryStrToTime", 0x20);
MakeComm(0x40C588, "'function TryStrToTime(const S:AnsiString; var Value:TDateTime):Boolean;'");
MakeCode(0x40C588);
MakeCode(0x40C5B0);
MakeCode(0x40C5B8);
MakeCode(0x40C5BA);
MakeFunction(0x40C588, 0x40C5BE);
MakeUnkn(0x40C5C0, 1);
MakeNameEx(0x40C5C0, "TryStrToDateTime", 0x20);
MakeComm(0x40C5C0, "'function TryStrToDateTime(const S:AnsiString; var Value:TDateTime):Boolean;'");
MakeCode(0x40C5C0);
MakeCode(0x40C5F2);
MakeCode(0x40C5FD);
MakeCode(0x40C606);
MakeCode(0x40C613);
MakeCode(0x40C615);
MakeCode(0x40C626);
MakeCode(0x40C643);
MakeCode(0x40C64E);
MakeFunction(0x40C5C0, 0x40C657);
MakeUnkn(0x40C65C, 1);
MakeNameEx(0x40C65C, "SysErrorMessage", 0x20);
MakeComm(0x40C65C, "'function SysErrorMessage(ErrorCode:Integer):AnsiString;'");
MakeCode(0x40C65C);
MakeCode(0x40C682);
MakeCode(0x40C683);
MakeCode(0x40C696);
MakeFunction(0x40C65C, 0x40C6A8);
MakeUnkn(0x40C6A8, 1);
MakeNameEx(0x40C6A8, "GetLocaleStr", 0x20);
MakeComm(0x40C6A8, "'function GetLocaleStr(Locale:Integer; LocaleType:Integer; const Default:AnsiString):AnsiString;'");
MakeCode(0x40C6A8);
MakeCode(0x40C6E1);
MakeCode(0x40C6EA);
MakeFunction(0x40C6A8, 0x40C6F2);
MakeUnkn(0x40C6F4, 1);
MakeNameEx(0x40C6F4, "GetLocaleChar", 0x20);
MakeComm(0x40C6F4, "'function GetLocaleChar(Locale:Integer; LocaleType:Integer; Default:Char):Char;'");
MakeCode(0x40C6F4);
MakeCode(0x40C716);
MakeCode(0x40C718);
MakeFunction(0x40C6F4, 0x40C71D);
MakeUnkn(0x40C720, 1);
MakeNameEx(0x40C720, "LocalGetLocaleStr", 0x20);
MakeComm(0x40C720, "'function LocalGetLocaleStr(LocaleType:Integer; Index:Integer; const DefValues:array[$0..-$1] of System.Pointer; const _Dv_:$0..-$1):AnsiString;'");
MakeCode(0x40C720);
MakeCode(0x40C753);
MakeFunction(0x40C720, 0x40C75B);
MakeUnkn(0x40C75C, 1);
MakeNameEx(0x40C75C, "GetMonthDayNames", 0x20);
MakeComm(0x40C75C, "'procedure GetMonthDayNames;'");
MakeCode(0x40C75C);
MakeCode(0x40C78F);
MakeCode(0x40C7F0);
MakeCode(0x40C854);
MakeCode(0x40C861);
MakeCode(0x40C86F);
MakeCode(0x40C874);
MakeFunction(0x40C75C, 0x40C87D);
MakeUnkn(0x40C880, 1);
MakeNameEx(0x40C880, "EnumEraNames", 0x20);
MakeComm(0x40C880, "'function EnumEraNames(Names:PChar):Integer; stdcall;'");
MakeCode(0x40C880);
MakeCode(0x40C88E);
MakeCode(0x40C894);
MakeCode(0x40C8B2);
MakeFunction(0x40C880, 0x40C8BA);
MakeUnkn(0x40C8BC, 1);
MakeNameEx(0x40C8BC, "EnumEraYearOffsets", 0x20);
MakeComm(0x40C8BC, "'function EnumEraYearOffsets(YearOffsets:PChar):Integer; stdcall;'");
MakeCode(0x40C8BC);
MakeCode(0x40C8DA);
MakeCode(0x40C8E0);
MakeCode(0x40C90B);
MakeCode(0x40C918);
MakeCode(0x40C921);
MakeCode(0x40C926);
MakeFunction(0x40C8BC, 0x40C931);
MakeUnkn(0x40C934, 1);
MakeNameEx(0x40C934, "GetEraNamesAndYearOffsets", 0x20);
MakeComm(0x40C934, "'procedure GetEraNamesAndYearOffsets;'");
MakeCode(0x40C934);
MakeCode(0x40C996);
MakeCode(0x40C9B5);
MakeCode(0x40C9C2);
MakeCode(0x40C9CB);
MakeCode(0x40C9D0);
MakeFunction(0x40C934, 0x40C9D6);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40C9E0, -1);
MakeDword(0x40C9DC);
MakeDword(0x40C9D8);
MakeUnkn(0x40C9E4, 1);
MakeNameEx(0x40C9E4, "TranslateDateFormat", 0x20);
MakeComm(0x40C9E4, "'function TranslateDateFormat(const FormatStr:AnsiString):AnsiString;'");
MakeCode(0x40C9E4);
MakeCode(0x40CA56);
MakeCode(0x40CA58);
MakeCode(0x40CA5E);
MakeCode(0x40CA82);
MakeCode(0x40CA83);
MakeCode(0x40CA93);
MakeCode(0x40CAA1);
MakeCode(0x40CAE0);
MakeCode(0x40CB09);
MakeCode(0x40CB31);
MakeCode(0x40CB57);
MakeCode(0x40CB64);
MakeCode(0x40CB72);
MakeCode(0x40CB89);
MakeCode(0x40CB8A);
MakeCode(0x40CB99);
MakeCode(0x40CBA6);
MakeCode(0x40CBB4);
MakeCode(0x40CBB9);
MakeFunction(0x40C9E4, 0x40CBC2);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40CBCC, -1);
MakeDword(0x40CBC8);
MakeDword(0x40CBC4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40CBDC, -1);
MakeDword(0x40CBD8);
MakeDword(0x40CBD4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40CBF0, -1);
MakeDword(0x40CBEC);
MakeDword(0x40CBE8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40CC04, -1);
MakeDword(0x40CC00);
MakeDword(0x40CBFC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40CC10, -1);
MakeDword(0x40CC0C);
MakeDword(0x40CC08);
MakeUnkn(0x40CC14, 1);
MakeNameEx(0x40CC14, "ConvertAddr", 0x20);
MakeComm(0x40CC14, "'function ConvertAddr(Address:Pointer):Pointer;'");
MakeCode(0x40CC14);
MakeFunction(0x40CC14, 0x40CC1E);
MakeUnkn(0x40CC20, 1);
MakeNameEx(0x40CC20, "ExceptionErrorMessage", 0x20);
MakeComm(0x40CC20, "'function ExceptionErrorMessage(ExceptObject:TObject; ExceptAddr:Pointer; Buffer:PChar; Size:Integer):Integer;'");
MakeCode(0x40CC20);
MakeCode(0x40CC6A);
MakeCode(0x40CC8D);
MakeCode(0x40CC96);
MakeCode(0x40CCF2);
MakeFunction(0x40CC20, 0x40CD9F);
MakeUnkn(0x40CDA8, 1);
MakeNameEx(0x40CDA8, "ShowException", 0x20);
MakeComm(0x40CDA8, "'procedure ShowException(ExceptObject:TObject; ExceptAddr:Pointer);'");
MakeCode(0x40CDA8);
MakeCode(0x40CE24);
MakeCode(0x40CE5A);
MakeFunction(0x40CDA8, 0x40CE61);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40CE6C, -1);
MakeDword(0x40CE68);
MakeDword(0x40CE64);
MakeUnkn(0x40CE70, 1);
MakeNameEx(0x40CE70, "ReturnAddr", 0x20);
MakeComm(0x40CE70, "'function ReturnAddr:Pointer;'");
MakeCode(0x40CE70);
MakeFunction(0x40CE70, 0x40CE74);
MakeUnkn(0x40CE74, 1);
MakeNameEx(0x40CE74, "Abort", 0x20);
MakeComm(0x40CE74, "'procedure Abort;'");
MakeCode(0x40CE74);
MakeFunction(0x40CE74, 0x40CE92);
MakeUnkn(0x40CE94, 1);
MakeNameEx(0x40CE94, "OutOfMemoryError", 0x20);
MakeComm(0x40CE94, "'procedure OutOfMemoryError;'");
MakeCode(0x40CE94);
MakeFunction(0x40CE94, 0x40CE9F);
MakeUnkn(0x40CEA0, 1);
MakeNameEx(0x40CEA0, "Exception.Create", 0x20);
MakeComm(0x40CEA0, "'constructor Exception.Create(const Msg:AnsiString);'");
MakeCode(0x40CEA0);
MakeCode(0x40CEAF);
MakeCode(0x40CED4);
MakeFunction(0x40CEA0, 0x40CEDA);
MakeUnkn(0x40CEDC, 1);
MakeNameEx(0x40CEDC, "Exception.CreateFmt", 0x20);
MakeComm(0x40CEDC, "'constructor Exception.CreateFmt(const Msg:AnsiString; const Args:array[$0..-$1] of System.TVarRec; const _Dv_:$0..-$1);'");
MakeCode(0x40CEDC);
MakeCode(0x40CEF0);
MakeCode(0x40CF20);
MakeCode(0x40CF2D);
MakeCode(0x40CF36);
MakeCode(0x40CF3B);
MakeCode(0x40CF52);
MakeFunction(0x40CEDC, 0x40CF5C);
MakeUnkn(0x40CF5C, 1);
MakeNameEx(0x40CF5C, "Exception.CreateRes", 0x20);
MakeComm(0x40CF5C, "'constructor Exception.CreateRes(ResStringRec:PResStringRec);'");
MakeCode(0x40CF5C);
MakeCode(0x40CF6B);
MakeCode(0x40CF90);
MakeFunction(0x40CF5C, 0x40CF96);
MakeUnkn(0x40CF98, 1);
MakeNameEx(0x40CF98, "Exception.CreateResFmt", 0x20);
MakeComm(0x40CF98, "'constructor Exception.CreateResFmt(Ident:Integer; const Args:array[$0..-$1] of System.TVarRec; const _Dv_:$0..-$1);'");
MakeCode(0x40CF98);
MakeCode(0x40CFAE);
MakeCode(0x40CFE9);
MakeCode(0x40CFF6);
MakeCode(0x40D004);
MakeCode(0x40D009);
MakeCode(0x40D020);
MakeFunction(0x40CF98, 0x40D02B);
MakeUnkn(0x40D02C, 1);
MakeNameEx(0x40D02C, "EHeapException.FreeInstance", 0x20);
MakeComm(0x40D02C, "'procedure EHeapException.FreeInstance;'");
MakeCode(0x40D02C);
MakeFunction(0x40D02C, 0x40D038);
MakeUnkn(0x40D038, 1);
MakeNameEx(0x40D038, "RTTI_40D038_Record_TErrorRec", 0);
MakeDword(0x40D038);
MakeUnkn(0x40D03C, 1);
MakeNameEx(0x40D03C, "", 0);
MakeByte(0x40D03C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40D03D, 0x40D047);
MakeDword(0x40D047);
MakeDword(0x40D04B);
MakeDword(0x40D04F);
MakeDword(0x40D053);
MakeUnkn(0x40D058, 1);
MakeNameEx(0x40D058, "CreateInOutError", 0x20);
MakeComm(0x40D058, "'function CreateInOutError:EInOutError;'");
MakeCode(0x40D058);
MakeCode(0x40D068);
MakeCode(0x40D069);
MakeCode(0x40D077);
MakeCode(0x40D091);
MakeCode(0x40D0AE);
MakeFunction(0x40D058, 0x40D0B6);
MakeUnkn(0x40D0B8, 1);
MakeNameEx(0x40D0B8, "RTTI_40D0B8_Record_TExceptRec", 0);
MakeDword(0x40D0B8);
MakeUnkn(0x40D0BC, 1);
MakeNameEx(0x40D0BC, "", 0);
MakeByte(0x40D0BC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40D0BD, 0x40D0C8);
MakeDword(0x40D0C8);
MakeDword(0x40D0CC);
MakeDword(0x40D0D0);
MakeDword(0x40D0D4);
MakeUnkn(0x40D0D8, 1);
MakeNameEx(0x40D0D8, "ErrorHandler", 0x20);
MakeComm(0x40D0D8, "'procedure ErrorHandler(ErrorCode:Byte; ErrorAddr:Pointer);'");
MakeCode(0x40D0D8);
MakeCode(0x40D0ED);
MakeCode(0x40D0F5);
MakeCode(0x40D0FD);
MakeCode(0x40D117);
MakeCode(0x40D11E);
MakeFunction(0x40D0D8, 0x40D128);
MakeUnkn(0x40D128, 1);
MakeNameEx(0x40D128, "CreateAssertException", 0x20);
MakeComm(0x40D128, "'function CreateAssertException(const Message:AnsiString; const Filename:AnsiString; LineNumber:Integer):Exception;'");
MakeCode(0x40D128);
MakeCode(0x40D15D);
MakeCode(0x40D16A);
MakeCode(0x40D1A6);
MakeCode(0x40D1B3);
MakeCode(0x40D1C4);
MakeCode(0x40D1C9);
MakeFunction(0x40D128, 0x40D1D4);
MakeUnkn(0x40D1D4, 1);
MakeNameEx(0x40D1D4, "RaiseAssertException", 0x20);
MakeComm(0x40D1D4, "'procedure RaiseAssertException(const E:Exception; const ErrorAddr:Pointer; const ErrorStack:Pointer);'");
MakeCode(0x40D1D4);
MakeFunction(0x40D1D4, 0x40D1E2);
MakeUnkn(0x40D1E4, 1);
MakeNameEx(0x40D1E4, "AssertErrorHandler", 0x20);
MakeComm(0x40D1E4, "'procedure AssertErrorHandler(const Message:AnsiString; const Filename:AnsiString; LineNumber:Integer; ErrorAddr:Pointer);'");
MakeCode(0x40D1E4);
MakeFunction(0x40D1E4, 0x40D1FE);
MakeUnkn(0x40D200, 1);
MakeNameEx(0x40D200, "AbstractErrorHandler", 0x20);
MakeComm(0x40D200, "'procedure AbstractErrorHandler;'");
MakeCode(0x40D200);
MakeFunction(0x40D200, 0x40D218);
MakeUnkn(0x40D218, 1);
MakeNameEx(0x40D218, "MapException", 0x20);
MakeComm(0x40D218, "'function MapException(P:PExceptionRecord):TRuntimeError;'");
MakeCode(0x40D218);
MakeCode(0x40D23F);
MakeCode(0x40D24D);
MakeCode(0x40D265);
MakeCode(0x40D273);
MakeCode(0x40D276);
MakeCode(0x40D279);
MakeCode(0x40D27C);
MakeCode(0x40D27F);
MakeCode(0x40D282);
MakeCode(0x40D285);
MakeCode(0x40D288);
MakeCode(0x40D28B);
MakeCode(0x40D28E);
MakeCode(0x40D291);
MakeCode(0x40D294);
MakeFunction(0x40D218, 0x40D297);
MakeUnkn(0x40D298, 1);
MakeNameEx(0x40D298, "GetExceptionClass", 0x20);
MakeComm(0x40D298, "'function GetExceptionClass(P:PExceptionRecord):ExceptClass;'");
MakeCode(0x40D298);
MakeFunction(0x40D298, 0x40D2AE);
MakeUnkn(0x40D2B0, 1);
MakeNameEx(0x40D2B0, "CreateAVObject", 0x20);
MakeComm(0x40D2B0, "'function CreateAVObject:Exception;'");
MakeCode(0x40D2B0);
MakeCode(0x40D301);
MakeCode(0x40D30E);
MakeCode(0x40D3E0);
MakeCode(0x40D43A);
MakeCode(0x40D447);
MakeCode(0x40D46B);
MakeCode(0x40D470);
MakeFunction(0x40D2B0, 0x40D47A);
MakeUnkn(0x40D47C, 1);
MakeNameEx(0x40D47C, "GetExceptionObject", 0x20);
MakeComm(0x40D47C, "'function GetExceptionObject(P:PExceptionRecord):Exception;'");
MakeCode(0x40D47C);
MakeCode(0x40D4B6);
MakeCode(0x40D4CD);
MakeCode(0x40D4D8);
MakeCode(0x40D508);
MakeCode(0x40D51F);
MakeCode(0x40D52C);
MakeCode(0x40D535);
MakeCode(0x40D53A);
MakeFunction(0x40D47C, 0x40D543);
MakeUnkn(0x40D544, 1);
MakeNameEx(0x40D544, "ExceptHandler", 0x20);
MakeComm(0x40D544, "'procedure ExceptHandler(ExceptObject:TObject; ExceptAddr:Pointer);'");
MakeCode(0x40D544);
MakeFunction(0x40D544, 0x40D554);
MakeUnkn(0x40D554, 1);
MakeNameEx(0x40D554, "InitExceptions", 0x20);
MakeComm(0x40D554, "'procedure InitExceptions;'");
MakeCode(0x40D554);
MakeFunction(0x40D554, 0x40D5D6);
MakeUnkn(0x40D5D8, 1);
MakeNameEx(0x40D5D8, "DoneExceptions", 0x20);
MakeComm(0x40D5D8, "'procedure DoneExceptions;'");
MakeCode(0x40D5D8);
MakeCode(0x40D5FB);
MakeCode(0x40D61E);
MakeFunction(0x40D5D8, 0x40D655);
MakeUnkn(0x40D658, 1);
MakeNameEx(0x40D658, "InitPlatformId", 0x20);
MakeComm(0x40D658, "'procedure InitPlatformId;'");
MakeCode(0x40D658);
MakeCode(0x40D6A3);
MakeCode(0x40D6AC);
MakeCode(0x40D6BF);
MakeFunction(0x40D658, 0x40D6C6);
MakeUnkn(0x40D6C8, 1);
MakeNameEx(0x40D6C8, "CheckWin32Version", 0x20);
MakeComm(0x40D6C8, "'function CheckWin32Version(AMajor:Integer; AMinor:Integer):Boolean;'");
MakeCode(0x40D6C8);
MakeCode(0x40D6E0);
MakeCode(0x40D6E3);
MakeFunction(0x40D6C8, 0x40D6E6);
MakeUnkn(0x40D6E8, 1);
MakeNameEx(0x40D6E8, "GetFileVersion", 0x20);
MakeComm(0x40D6E8, "'function GetFileVersion(const AFileName:AnsiString):Cardinal;'");
MakeCode(0x40D6E8);
MakeCode(0x40D78B);
MakeCode(0x40D798);
MakeCode(0x40D7A1);
MakeCode(0x40D7A6);
MakeCode(0x40D7A8);
MakeCode(0x40D7B5);
MakeCode(0x40D7BE);
MakeCode(0x40D7C3);
MakeFunction(0x40D6E8, 0x40D7CD);
MakeUnkn(0x40D7D4, 1);
MakeNameEx(0x40D7D4, "Beep", 0x20);
MakeComm(0x40D7D4, "'procedure Beep;'");
MakeCode(0x40D7D4);
MakeFunction(0x40D7D4, 0x40D7DC);
MakeUnkn(0x40D7DC, 1);
MakeNameEx(0x40D7DC, "ByteTypeTest", 0x20);
MakeComm(0x40D7DC, "'function ByteTypeTest(P:PChar; Index:Integer):TMbcsByteType;'");
MakeCode(0x40D7DC);
MakeCode(0x40D803);
MakeCode(0x40D808);
MakeCode(0x40D809);
MakeCode(0x40D81D);
MakeCode(0x40D82E);
MakeCode(0x40D836);
MakeCode(0x40D848);
MakeFunction(0x40D7DC, 0x40D84D);
MakeUnkn(0x40D850, 1);
MakeNameEx(0x40D850, "ByteType", 0x20);
MakeComm(0x40D850, "'function ByteType(const S:AnsiString; Index:Integer):TMbcsByteType;'");
MakeCode(0x40D850);
MakeCode(0x40D870);
MakeFunction(0x40D850, 0x40D873);
MakeUnkn(0x40D874, 1);
MakeNameEx(0x40D874, "StrByteType", 0x20);
MakeComm(0x40D874, "'function StrByteType(Str:PChar; Index:Cardinal):TMbcsByteType;'");
MakeCode(0x40D874);
MakeCode(0x40D886);
MakeFunction(0x40D874, 0x40D889);
MakeUnkn(0x40D88C, 1);
MakeNameEx(0x40D88C, "ByteToCharLen", 0x20);
MakeComm(0x40D88C, "'function ByteToCharLen(const S:AnsiString; MaxLen:Integer):Integer;'");
MakeCode(0x40D88C);
MakeCode(0x40D89A);
MakeCode(0x40D8A9);
MakeFunction(0x40D88C, 0x40D8B0);
MakeUnkn(0x40D8B0, 1);
MakeNameEx(0x40D8B0, "ByteToCharIndex", 0x20);
MakeComm(0x40D8B0, "'function ByteToCharIndex(const S:AnsiString; Index:Integer):Integer;'");
MakeCode(0x40D8B0);
MakeCode(0x40D8C2);
MakeCode(0x40D8CD);
MakeCode(0x40D8D2);
MakeCode(0x40D8EC);
MakeCode(0x40D90A);
MakeCode(0x40D90B);
MakeCode(0x40D910);
MakeFunction(0x40D8B0, 0x40D917);
MakeUnkn(0x40D918, 1);
MakeNameEx(0x40D918, "CountChars", 0x20);
MakeComm(0x40D918, "'procedure CountChars(const S:AnsiString; MaxChars:Integer; var CharCount:Integer; var ByteCount:Integer);'");
MakeCode(0x40D918);
MakeCode(0x40D934);
MakeCode(0x40D943);
MakeCode(0x40D962);
MakeCode(0x40D963);
MakeCode(0x40D96D);
MakeCode(0x40D994);
MakeFunction(0x40D918, 0x40D9A7);
MakeUnkn(0x40D9A8, 1);
MakeNameEx(0x40D9A8, "CharToByteIndex", 0x20);
MakeComm(0x40D9A8, "'function CharToByteIndex(const S:AnsiString; Index:Integer):Integer;'");
MakeCode(0x40D9A8);
MakeCode(0x40D9BF);
MakeCode(0x40D9CA);
MakeCode(0x40D9CF);
MakeCode(0x40D9FC);
MakeCode(0x40DA07);
MakeCode(0x40DA0D);
MakeCode(0x40DA18);
MakeCode(0x40DA1D);
MakeCode(0x40DA20);
MakeFunction(0x40D9A8, 0x40DA29);
MakeUnkn(0x40DA2C, 1);
MakeNameEx(0x40DA2C, "CharToByteLen", 0x20);
MakeComm(0x40DA2C, "'function CharToByteLen(const S:AnsiString; MaxLen:Integer):Integer;'");
MakeCode(0x40DA2C);
MakeCode(0x40DA49);
MakeCode(0x40DA58);
MakeCode(0x40DA5A);
MakeCode(0x40DA7A);
MakeCode(0x40DA8A);
MakeCode(0x40DA8F);
MakeCode(0x40DA92);
MakeFunction(0x40DA2C, 0x40DA9A);
MakeUnkn(0x40DA9C, 1);
MakeNameEx(0x40DA9C, "StrCharLength", 0x20);
MakeComm(0x40DA9C, "'function StrCharLength(const Str:PChar):Integer;'");
MakeCode(0x40DA9C);
MakeCode(0x40DAB2);
MakeFunction(0x40DA9C, 0x40DAB9);
MakeUnkn(0x40DABC, 1);
MakeNameEx(0x40DABC, "StrNextChar", 0x20);
MakeComm(0x40DABC, "'function StrNextChar(const Str:PChar):PChar;'");
MakeCode(0x40DABC);
MakeFunction(0x40DABC, 0x40DAC3);
MakeUnkn(0x40DAC4, 1);
MakeNameEx(0x40DAC4, "CharLength", 0x20);
MakeComm(0x40DAC4, "'function CharLength(const S:AnsiString; Index:Integer):Integer;'");
MakeCode(0x40DAC4);
MakeCode(0x40DAF8);
MakeFunction(0x40DAC4, 0x40DAFB);
MakeUnkn(0x40DAFC, 1);
MakeNameEx(0x40DAFC, "NextCharIndex", 0x20);
MakeComm(0x40DAFC, "'function NextCharIndex(const S:AnsiString; Index:Integer):Integer;'");
MakeCode(0x40DAFC);
MakeCode(0x40DB30);
MakeFunction(0x40DAFC, 0x40DB33);
MakeUnkn(0x40DB34, 1);
MakeNameEx(0x40DB34, "IsPathDelimiter", 0x20);
MakeComm(0x40DB34, "'function IsPathDelimiter(const S:AnsiString; Index:Integer):Boolean;'");
MakeCode(0x40DB34);
MakeCode(0x40DB49);
MakeCode(0x40DB50);
MakeCode(0x40DB52);
MakeCode(0x40DB60);
MakeCode(0x40DB62);
MakeCode(0x40DB77);
MakeFunction(0x40DB34, 0x40DB7C);
MakeUnkn(0x40DB7C, 1);
MakeNameEx(0x40DB7C, "IsDelimiter", 0x20);
MakeComm(0x40DB7C, "'function IsDelimiter(const Delimiters:AnsiString; const S:AnsiString; Index:Integer):Boolean;'");
MakeCode(0x40DB7C);
MakeCode(0x40DB90);
MakeCode(0x40DB9B);
MakeCode(0x40DBA0);
MakeCode(0x40DBA8);
MakeCode(0x40DBB6);
MakeCode(0x40DBD0);
MakeFunction(0x40DB7C, 0x40DBD7);
MakeUnkn(0x40DBD8, 1);
MakeNameEx(0x40DBD8, "AnsiPos", 0x20);
MakeComm(0x40DBD8, "'function AnsiPos(const Substr:AnsiString; const S:AnsiString):Integer;'");
MakeCode(0x40DBD8);
MakeCode(0x40DC06);
MakeFunction(0x40DBD8, 0x40DC0D);
MakeUnkn(0x40DC10, 1);
MakeNameEx(0x40DC10, "AnsiLowerCaseFileName", 0x20);
MakeComm(0x40DC10, "'function AnsiLowerCaseFileName(const S:AnsiString):AnsiString;'");
MakeCode(0x40DC10);
MakeCode(0x40DC2C);
MakeCode(0x40DC40);
MakeCode(0x40DC74);
MakeCode(0x40DC8D);
MakeCode(0x40DC94);
MakeCode(0x40DC9D);
MakeFunction(0x40DC10, 0x40DCA2);
MakeUnkn(0x40DCA4, 1);
MakeNameEx(0x40DCA4, "AnsiStrPos", 0x20);
MakeComm(0x40DCA4, "'function AnsiStrPos(Str:PChar; SubStr:PChar):PChar;'");
MakeCode(0x40DCA4);
MakeCode(0x40DCE8);
MakeCode(0x40DD13);
MakeCode(0x40DD1B);
MakeCode(0x40DD27);
MakeCode(0x40DD38);
MakeCode(0x40DD3A);
MakeFunction(0x40DCA4, 0x40DD43);
MakeUnkn(0x40DD44, 1);
MakeNameEx(0x40DD44, "AnsiStrRScan", 0x20);
MakeComm(0x40DD44, "'function AnsiStrRScan(Str:PChar; Chr:Char):PChar;'");
MakeCode(0x40DD44);
MakeCode(0x40DD60);
MakeCode(0x40DD72);
MakeFunction(0x40DD44, 0x40DD78);
MakeUnkn(0x40DD78, 1);
MakeNameEx(0x40DD78, "AnsiStrScan", 0x20);
MakeComm(0x40DD78, "'function AnsiStrScan(Str:PChar; Chr:Char):PChar;'");
MakeCode(0x40DD78);
MakeCode(0x40DD8E);
MakeCode(0x40DDA1);
MakeCode(0x40DDA2);
MakeCode(0x40DDB2);
MakeFunction(0x40DD78, 0x40DDB8);
MakeUnkn(0x40DDB8, 1);
MakeNameEx(0x40DDB8, "InitLeadBytes", 0x20);
MakeComm(0x40DDB8, "'procedure InitLeadBytes;'");
MakeCode(0x40DDB8);
MakeCode(0x40DDD1);
MakeCode(0x40DDE3);
MakeCode(0x40DDF8);
MakeCode(0x40DDFB);
MakeCode(0x40DE0B);
MakeFunction(0x40DDB8, 0x40DE11);
MakeUnkn(0x40DE14, 1);
MakeNameEx(0x40DE14, "InitSysLocale", 0x20);
MakeComm(0x40DE14, "'procedure InitSysLocale;'");
MakeCode(0x40DE14);
MakeCode(0x40DE41);
MakeCode(0x40DE5C);
MakeCode(0x40DE87);
MakeCode(0x40DE96);
MakeCode(0x40DEB0);
MakeFunction(0x40DE14, 0x40DEB7);
MakeUnkn(0x40DED8, 1);
MakeNameEx(0x40DED8, "GetFormatSettings", 0x20);
MakeComm(0x40DED8, "'procedure GetFormatSettings;'");
MakeCode(0x40DED8);
MakeCode(0x40DEE0);
MakeCode(0x40DF0E);
MakeCode(0x40E0CC);
MakeCode(0x40E0D9);
MakeCode(0x40E12E);
MakeCode(0x40E13B);
MakeCode(0x40E188);
MakeCode(0x40E195);
MakeCode(0x40E1A3);
MakeCode(0x40E1A8);
MakeFunction(0x40DED8, 0x40E1AF);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40E1B8, -1);
MakeDword(0x40E1B4);
MakeDword(0x40E1B0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40E1C4, -1);
MakeDword(0x40E1C0);
MakeDword(0x40E1BC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40E1D4, -1);
MakeDword(0x40E1D0);
MakeDword(0x40E1CC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40E1EC, -1);
MakeDword(0x40E1E8);
MakeDword(0x40E1E4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40E1F8, -1);
MakeDword(0x40E1F4);
MakeDword(0x40E1F0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40E204, -1);
MakeDword(0x40E200);
MakeDword(0x40E1FC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40E210, -1);
MakeDword(0x40E20C);
MakeDword(0x40E208);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40E21C, -1);
MakeDword(0x40E218);
MakeDword(0x40E214);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40E22C, -1);
MakeDword(0x40E228);
MakeDword(0x40E224);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40E23C, -1);
MakeDword(0x40E238);
MakeDword(0x40E234);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40E248, -1);
MakeDword(0x40E244);
MakeDword(0x40E240);
MakeUnkn(0x40E250, 1);
MakeNameEx(0x40E250, "StringReplace", 0x20);
MakeComm(0x40E250, "'function StringReplace(const S:AnsiString; const OldPattern:AnsiString; const NewPattern:AnsiString; Flags:TReplaceFlags):AnsiString;'");
MakeCode(0x40E250);
MakeCode(0x40E29A);
MakeCode(0x40E2AF);
MakeCode(0x40E2C5);
MakeCode(0x40E2E5);
MakeCode(0x40E319);
MakeCode(0x40E33F);
MakeCode(0x40E356);
MakeCode(0x40E36C);
MakeCode(0x40E376);
MakeCode(0x40E383);
MakeCode(0x40E399);
MakeCode(0x40E39E);
MakeFunction(0x40E250, 0x40E3A9);
MakeUnkn(0x40E3AC, 1);
MakeNameEx(0x40E3AC, "RTTI_40E3AC_DynArray_TUnitHashArray", 0);
MakeDword(0x40E3AC);
MakeUnkn(0x40E3B0, 1);
MakeNameEx(0x40E3B0, "", 0);
MakeByte(0x40E3B0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40E3B1, 0x40E3C0);
MakeDword(0x40E3C0);
MakeDword(0x40E3C4);
MakeDword(0x40E3C8);
MakeDword(0x40E3CC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40E3D0, 0x40E3D9);
MakeUnkn(0x40E3DC, 1);
MakeNameEx(0x40E3DC, "RTTI_40E3DC_Record_TModuleInfo", 0);
MakeDword(0x40E3DC);
MakeUnkn(0x40E3E0, 1);
MakeNameEx(0x40E3E0, "", 0);
MakeByte(0x40E3E0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40E3E1, 0x40E3ED);
MakeDword(0x40E3ED);
MakeDword(0x40E3F1);
MakeDword(0x40E3F5);
MakeDword(0x40E3F9);
MakeUnkn(0x40E400, 1);
MakeNameEx(0x40E400, "ModuleUnloaded", 0x20);
MakeComm(0x40E400, "'procedure ModuleUnloaded(Module:LongWord);'");
MakeCode(0x40E400);
MakeCode(0x40E413);
MakeCode(0x40E41E);
MakeCode(0x40E44D);
MakeCode(0x40E455);
MakeCode(0x40E46A);
MakeCode(0x40E48E);
MakeCode(0x40E4AC);
MakeCode(0x40E558);
MakeCode(0x40E594);
MakeCode(0x40E5B3);
MakeCode(0x40E5BB);
MakeCode(0x40E5D0);
MakeFunction(0x40E400, 0x40E5D8);
MakeUnkn(0x40E5D8, 1);
MakeNameEx(0x40E5D8, "kernel32.Sleep_0", 0x20);
MakeComm(0x40E5D8, "'procedure kernel32.Sleep; stdcall;'");
MakeCode(0x40E5D8);
MakeFunction(0x40E5D8, 0x40E5DE);
MakeUnkn(0x40E5E0, 1);
MakeNameEx(0x40E5E0, "RaiseLastOSError", 0x20);
MakeComm(0x40E5E0, "'procedure RaiseLastOSError;'");
MakeCode(0x40E5E0);
MakeFunction(0x40E5E0, 0x40E5EB);
MakeUnkn(0x40E5EC, 1);
MakeNameEx(0x40E5EC, "RaiseLastOSError_0", 0x20);
MakeComm(0x40E5EC, "'procedure RaiseLastOSError(LastError:Integer);'");
MakeCode(0x40E5EC);
MakeCode(0x40E643);
MakeCode(0x40E657);
MakeCode(0x40E661);
MakeCode(0x40E66E);
MakeCode(0x40E677);
MakeCode(0x40E67C);
MakeFunction(0x40E5EC, 0x40E683);
MakeUnkn(0x40E684, 1);
MakeNameEx(0x40E684, "Win32Check", 0x20);
MakeComm(0x40E684, "'function Win32Check(RetVal:BOOL):BOOL;'");
MakeCode(0x40E684);
MakeCode(0x40E690);
MakeFunction(0x40E684, 0x40E694);
MakeUnkn(0x40E694, 1);
MakeNameEx(0x40E694, "CallTerminateProcs", 0x20);
MakeComm(0x40E694, "'function CallTerminateProcs:Boolean;'");
MakeCode(0x40E694);
MakeCode(0x40E6A0);
MakeCode(0x40E6A7);
MakeCode(0x40E6AF);
MakeFunction(0x40E694, 0x40E6B4);
MakeUnkn(0x40E6B4, 1);
MakeNameEx(0x40E6B4, "FreeTerminateProcs", 0x20);
MakeComm(0x40E6B4, "'procedure FreeTerminateProcs;'");
MakeCode(0x40E6B4);
MakeCode(0x40E6BD);
MakeCode(0x40E6CF);
MakeFunction(0x40E6B4, 0x40E6D7);
MakeUnkn(0x40E6D8, 1);
MakeNameEx(0x40E6D8, "InitDriveSpacePtr", 0x20);
MakeComm(0x40E6D8, "'procedure InitDriveSpacePtr;'");
MakeCode(0x40E6D8);
MakeCode(0x40E6F9);
MakeCode(0x40E70C);
MakeFunction(0x40E6D8, 0x40E70E);
MakeUnkn(0x40E734, 1);
MakeNameEx(0x40E734, "InterlockedIncrement", 0x20);
MakeComm(0x40E734, "'function InterlockedIncrement(var I:Integer):Integer;'");
MakeCode(0x40E734);
MakeFunction(0x40E734, 0x40E740);
MakeUnkn(0x40E740, 1);
MakeNameEx(0x40E740, "InterlockedDecrement", 0x20);
MakeComm(0x40E740, "'function InterlockedDecrement(var I:Integer):Integer;'");
MakeCode(0x40E740);
MakeFunction(0x40E740, 0x40E74C);
MakeUnkn(0x40E74C, 1);
MakeNameEx(0x40E74C, "InterlockedExchange", 0x20);
MakeComm(0x40E74C, "'function InterlockedExchange(var A:Integer; B:Integer):Integer;'");
MakeCode(0x40E74C);
MakeFunction(0x40E74C, 0x40E751);
MakeUnkn(0x40E754, 1);
MakeNameEx(0x40E754, "InterlockedExchangeAdd", 0x20);
MakeComm(0x40E754, "'function InterlockedExchangeAdd(var A:Integer; B:Integer):Integer;'");
MakeCode(0x40E754);
MakeFunction(0x40E754, 0x40E75A);
MakeUnkn(0x40E75C, 1);
MakeNameEx(0x40E75C, "TThreadLocalCounter.Destroy", 0x20);
MakeComm(0x40E75C, "'destructor TThreadLocalCounter.Destroy;'");
MakeCode(0x40E75C);
MakeCode(0x40E76D);
MakeCode(0x40E77B);
MakeCode(0x40E78A);
MakeCode(0x40E7AB);
MakeFunction(0x40E75C, 0x40E7B1);
MakeUnkn(0x40E7B4, 1);
MakeNameEx(0x40E7B4, "TThreadLocalCounter.HashIndex", 0x20);
MakeComm(0x40E7B4, "'function TThreadLocalCounter.HashIndex:Byte;'");
MakeCode(0x40E7B4);
MakeFunction(0x40E7B4, 0x40E7CD);
MakeUnkn(0x40E7D0, 1);
MakeNameEx(0x40E7D0, "TThreadLocalCounter.Open", 0x20);
MakeComm(0x40E7D0, "'procedure TThreadLocalCounter.Open(var Thread:PThreadInfo);'");
MakeCode(0x40E7D0);
MakeCode(0x40E7F3);
MakeCode(0x40E7F6);
MakeCode(0x40E7FF);
MakeCode(0x40E83A);
MakeFunction(0x40E7D0, 0x40E845);
MakeUnkn(0x40E848, 1);
MakeNameEx(0x40E848, "TThreadLocalCounter.Delete", 0x20);
MakeComm(0x40E848, "'procedure TThreadLocalCounter.Delete(var Thread:PThreadInfo);'");
MakeCode(0x40E848);
MakeFunction(0x40E848, 0x40E857);
MakeUnkn(0x40E858, 1);
MakeNameEx(0x40E858, "TThreadLocalCounter.Recycle", 0x20);
MakeComm(0x40E858, "'function TThreadLocalCounter.Recycle:PThreadInfo;'");
MakeCode(0x40E858);
MakeCode(0x40E86E);
MakeCode(0x40E88F);
MakeCode(0x40E895);
MakeFunction(0x40E858, 0x40E89A);
MakeUnkn(0x40E89C, 1);
MakeNameEx(0x40E89C, "TMultiReadExclusiveWriteSynchronizer.Create", 0x20);
MakeComm(0x40E89C, "'constructor TMultiReadExclusiveWriteSynchronizer.Create;'");
MakeCode(0x40E89C);
MakeCode(0x40E8AA);
MakeCode(0x40E909);
MakeFunction(0x40E89C, 0x40E90E);
MakeUnkn(0x40E910, 1);
MakeNameEx(0x40E910, "TMultiReadExclusiveWriteSynchronizer.Destroy", 0x20);
MakeComm(0x40E910, "'destructor TMultiReadExclusiveWriteSynchronizer.Destroy;'");
MakeCode(0x40E910);
MakeCode(0x40E953);
MakeFunction(0x40E910, 0x40E956);
MakeUnkn(0x40E958, 1);
MakeNameEx(0x40E958, "TMultiReadExclusiveWriteSynchronizer.BlockReaders", 0x20);
MakeComm(0x40E958, "'procedure TMultiReadExclusiveWriteSynchronizer.BlockReaders;'");
MakeCode(0x40E958);
MakeFunction(0x40E958, 0x40E962);
MakeUnkn(0x40E964, 1);
MakeNameEx(0x40E964, "TMultiReadExclusiveWriteSynchronizer.UnblockReaders", 0x20);
MakeComm(0x40E964, "'procedure TMultiReadExclusiveWriteSynchronizer.UnblockReaders;'");
MakeCode(0x40E964);
MakeFunction(0x40E964, 0x40E96E);
MakeUnkn(0x40E970, 1);
MakeNameEx(0x40E970, "TMultiReadExclusiveWriteSynchronizer.UnblockOneWriter", 0x20);
MakeComm(0x40E970, "'procedure TMultiReadExclusiveWriteSynchronizer.UnblockOneWriter;'");
MakeCode(0x40E970);
MakeFunction(0x40E970, 0x40E97A);
MakeUnkn(0x40E97C, 1);
MakeNameEx(0x40E97C, "TMultiReadExclusiveWriteSynchronizer.WaitForReadSignal", 0x20);
MakeComm(0x40E97C, "'procedure TMultiReadExclusiveWriteSynchronizer.WaitForReadSignal;'");
MakeCode(0x40E97C);
MakeFunction(0x40E97C, 0x40E98A);
MakeUnkn(0x40E98C, 1);
MakeNameEx(0x40E98C, "TMultiReadExclusiveWriteSynchronizer.WaitForWriteSignal", 0x20);
MakeComm(0x40E98C, "'procedure TMultiReadExclusiveWriteSynchronizer.WaitForWriteSignal;'");
MakeCode(0x40E98C);
MakeFunction(0x40E98C, 0x40E99A);
MakeUnkn(0x40E99C, 1);
MakeNameEx(0x40E99C, "TMultiReadExclusiveWriteSynchronizer.BeginWrite", 0x20);
MakeComm(0x40E99C, "'function TMultiReadExclusiveWriteSynchronizer.BeginWrite:Boolean;'");
MakeCode(0x40E99C);
MakeCode(0x40E9E7);
MakeCode(0x40EA01);
MakeCode(0x40EA28);
MakeCode(0x40EA3B);
MakeFunction(0x40E99C, 0x40EA47);
MakeUnkn(0x40EA48, 1);
MakeNameEx(0x40EA48, "TMultiReadExclusiveWriteSynchronizer.EndWrite", 0x20);
MakeComm(0x40EA48, "'procedure TMultiReadExclusiveWriteSynchronizer.EndWrite;'");
MakeCode(0x40EA48);
MakeCode(0x40EA7F);
MakeCode(0x40EA92);
MakeFunction(0x40EA48, 0x40EA95);
MakeUnkn(0x40EA98, 1);
MakeNameEx(0x40EA98, "TMultiReadExclusiveWriteSynchronizer.BeginRead", 0x20);
MakeComm(0x40EA98, "'procedure TMultiReadExclusiveWriteSynchronizer.BeginRead;'");
MakeCode(0x40EA98);
MakeCode(0x40EACF);
MakeCode(0x40EAE8);
MakeCode(0x40EAF6);
MakeCode(0x40EB02);
MakeFunction(0x40EA98, 0x40EB07);
MakeUnkn(0x40EB08, 1);
MakeNameEx(0x40EB08, "TMultiReadExclusiveWriteSynchronizer.EndRead", 0x20);
MakeComm(0x40EB08, "'procedure TMultiReadExclusiveWriteSynchronizer.EndRead;'");
MakeCode(0x40EB08);
MakeCode(0x40EB54);
MakeCode(0x40EB6D);
MakeFunction(0x40EB08, 0x40EB70);
MakeUnkn(0x40EB70, 1);
MakeNameEx(0x40EB70, "FreeAndNil", 0x20);
MakeComm(0x40EB70, "'procedure FreeAndNil(var Obj:void );'");
MakeCode(0x40EB70);
MakeFunction(0x40EB70, 0x40EB7E);
MakeUnkn(0x40EB80, 1);
MakeNameEx(0x40EB80, "Supports", 0x20);
MakeComm(0x40EB80, "'function Supports(const Instance:IInterface; const IID:TGUID; var Intf:void ):Boolean;'");
MakeCode(0x40EB80);
MakeCode(0x40EB98);
MakeCode(0x40EB9C);
MakeCode(0x40EB9E);
MakeFunction(0x40EB80, 0x40EBA2);
MakeUnkn(0x40EBA4, 1);
MakeNameEx(0x40EBA4, "Supports_0", 0x20);
MakeComm(0x40EBA4, "'function Supports(const Instance:TObject; const IID:TGUID; var Intf:void ):Boolean;'");
MakeCode(0x40EBA4);
MakeCode(0x40EBEE);
MakeCode(0x40EBFD);
MakeCode(0x40EC01);
MakeCode(0x40EC03);
MakeCode(0x40EC05);
MakeCode(0x40EC12);
MakeCode(0x40EC1B);
MakeCode(0x40EC20);
MakeFunction(0x40EBA4, 0x40EC2A);
MakeUnkn(0x40EC3C, 1);
MakeNameEx(0x40EC3C, "SafeLoadLibrary", 0x20);
MakeComm(0x40EC3C, "'function SafeLoadLibrary(const FileName:AnsiString; ErrorMode:UINT):HMODULE;'");
MakeCode(0x40EC3C);
MakeCode(0x40EC7D);
MakeCode(0x40EC8A);
MakeCode(0x40EC90);
MakeCode(0x40EC95);
MakeCode(0x40EC97);
MakeCode(0x40ECA4);
MakeCode(0x40ECAE);
MakeCode(0x40ECB3);
MakeFunction(0x40EC3C, 0x40ECBD);
MakeCode(0x40ECC0);
MakeCode(0x40ECCD);
MakeCode(0x40ECE6);
MakeCode(0x40ECEC);
MakeFunction(0x40ECC0, 0x40ECEE);
MakeCode(0x40EFC0);
MakeCode(0x40F136);
MakeCode(0x40F143);
MakeCode(0x40F144);
MakeCode(0x40F149);
MakeFunction(0x40EFC0, 0x40F14D);
MakeUnkn(0x40F150, 1);
MakeNameEx(0x40F150, "oleaut32.VariantInit", 0x20);
MakeComm(0x40F150, "'procedure oleaut32.VariantInit; stdcall;'");
MakeCode(0x40F150);
MakeFunction(0x40F150, 0x40F156);
MakeUnkn(0x40F158, 1);
MakeNameEx(0x40F158, "oleaut32.VariantClear", 0x20);
MakeComm(0x40F158, "'procedure oleaut32.VariantClear;'");
MakeCode(0x40F158);
MakeFunction(0x40F158, 0x40F15E);
MakeUnkn(0x40F160, 1);
MakeNameEx(0x40F160, "oleaut32.VariantCopy", 0x20);
MakeComm(0x40F160, "'function oleaut32.VariantCopy(const vargSrc:Variant):HRESULT; stdcall;'");
MakeCode(0x40F160);
MakeFunction(0x40F160, 0x40F166);
MakeUnkn(0x40F168, 1);
MakeNameEx(0x40F168, "oleaut32.VariantChangeType", 0x20);
MakeComm(0x40F168, "'function oleaut32.VariantChangeType(const vargSrc:Variant; wFlags:Word; vt:Word):HRESULT; stdcall;'");
MakeCode(0x40F168);
MakeFunction(0x40F168, 0x40F16E);
MakeCode(0x40F170);
MakeCode(0x40F183);
MakeCode(0x40F19A);
MakeFunction(0x40F170, 0x40F19E);
MakeCode(0x40F1A0);
MakeFunction(0x40F1A0, 0x40F1AC);
MakeCode(0x40F1AC);
MakeFunction(0x40F1AC, 0x40F1B8);
MakeCode(0x40F1B8);
MakeFunction(0x40F1B8, 0x40F1C4);
MakeUnkn(0x40F5B8, 1);
MakeNameEx(0x40F5B8, "oleaut32.SafeArrayCreate", 0x20);
MakeComm(0x40F5B8, "'function oleaut32.SafeArrayCreate(cDims:Integer; const rgsabound:void ):PSafeArray; stdcall;'");
MakeCode(0x40F5B8);
MakeFunction(0x40F5B8, 0x40F5BE);
MakeUnkn(0x40F5C0, 1);
MakeNameEx(0x40F5C0, "oleaut32.SafeArrayGetLBound", 0x20);
MakeComm(0x40F5C0, "'function oleaut32.SafeArrayGetLBound(nDim:Integer; var lLbound:Longint):HRESULT; stdcall;'");
MakeCode(0x40F5C0);
MakeFunction(0x40F5C0, 0x40F5C6);
MakeUnkn(0x40F5C8, 1);
MakeNameEx(0x40F5C8, "oleaut32.SafeArrayGetUBound", 0x20);
MakeComm(0x40F5C8, "'function oleaut32.SafeArrayGetUBound(nDim:Integer; var lUbound:Longint):HRESULT; stdcall;'");
MakeCode(0x40F5C8);
MakeFunction(0x40F5C8, 0x40F5CE);
MakeUnkn(0x40F5D0, 1);
MakeNameEx(0x40F5D0, "oleaut32.SafeArrayPtrOfIndex", 0x20);
MakeComm(0x40F5D0, "'function oleaut32.SafeArrayPtrOfIndex(var rgIndices:void ; var pvData:Pointer):HRESULT; stdcall;'");
MakeCode(0x40F5D0);
MakeFunction(0x40F5D0, 0x40F5D6);
MakeCode(0x40F5D8);
MakeCode(0x40F5FE);
MakeFunction(0x40F5D8, 0x40F603);
MakeCode(0x40F604);
MakeFunction(0x40F604, 0x40F7FC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x40F7FC, 0x40F809);
MakeCode(0x40F910);
MakeCode(0x40F927);
MakeCode(0x40F934);
MakeCode(0x40F935);
MakeCode(0x40F93A);
MakeFunction(0x40F910, 0x40F93E);
MakeUnkn(0x40F990, 1);
MakeNameEx(0x40F990, "VMT_40F990_TCustomVariantType", 0);
MakeDword(0x40F990);
MakeDword(0x40F994);
MakeUnkn(0x40F96E, 1);
MakeNameEx(0x40F96E, "TCustomVariantType_IntfTable", 0);
MakeDword(0x40F96E);
MakeByte(0x40F972);
MakeArray(0x40F972, 16);
MakeDword(0x40F982);
MakeDword(0x40F962);
MakeFunction(0x40F941, -1);
MakeCode(0x40F941);
MakeDword(0x40F966);
MakeFunction(0x40F94E, -1);
MakeCode(0x40F94E);
MakeDword(0x40F96A);
MakeFunction(0x40F958, -1);
MakeCode(0x40F958);
MakeByte(0x40F940);
MakeDword(0x40F986);
MakeDword(0x40F98A);
MakeDword(0x40F998);
MakeDword(0x40F99C);
MakeDword(0x40F9A0);
MakeDword(0x40F9A4);
MakeDword(0x40F9A8);
MakeDword(0x40F9AC);
MakeDword(0x40F9B0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40FA18, 0x40FA2B);
MakeDword(0x40F9B4);
MakeDword(0x40F9B8);
MakeDword(0x40F9BC);
MakeDword(0x40F9C0);
MakeDword(0x40F9C4);
MakeDword(0x40F9C8);
MakeDword(0x40F9CC);
MakeDword(0x40F9D0);
MakeDword(0x40F9D4);
MakeDword(0x40F9D8);
MakeComm(0x40F9DC, "'+0'");
MakeDword(0x40F9DC);
MakeComm(0x40F9E0, "'+4'");
MakeDword(0x40F9E0);
MakeComm(0x40F9E4, "'+8'");
MakeDword(0x40F9E4);
MakeComm(0x40F9E8, "'+C'");
MakeDword(0x40F9E8);
MakeComm(0x40F9EC, "'+10'");
MakeDword(0x40F9EC);
MakeComm(0x40F9F0, "'+14'");
MakeDword(0x40F9F0);
MakeComm(0x40F9F4, "'+18'");
MakeDword(0x40F9F4);
MakeComm(0x40F9F8, "'+1C'");
MakeDword(0x40F9F8);
MakeComm(0x40F9FC, "'+20'");
MakeDword(0x40F9FC);
MakeComm(0x40FA00, "'+24'");
MakeDword(0x40FA00);
MakeComm(0x40FA04, "'+28'");
MakeDword(0x40FA04);
MakeComm(0x40FA08, "'+2C'");
MakeDword(0x40FA08);
MakeComm(0x40FA0C, "'+30'");
MakeDword(0x40FA0C);
MakeComm(0x40FA10, "'+34'");
MakeDword(0x40FA10);
MakeComm(0x40FA14, "'+38'");
MakeDword(0x40FA14);
MakeUnkn(0x40FA2C, 1);
MakeNameEx(0x40FA2C, "RTTI_40FA2C_Class_TCustomVariantType", 0);
MakeDword(0x40FA2C);
MakeUnkn(0x40FA30, 1);
MakeNameEx(0x40FA30, "", 0);
MakeByte(0x40FA30);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40FA31, 0x40FA44);
MakeDword(0x40FA44);
MakeDword(0x40FA48);
MakeWord(0x40FA4C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40FA4E, 0x40FA57);
MakeWord(0x40FA57);
MakeUnkn(0x40FA5C, 1);
MakeNameEx(0x40FA5C, "VMT_40FA5C_EVariantInvalidOpError", 0);
MakeDword(0x40FA5C);
MakeDword(0x40FA60);
MakeDword(0x40FA64);
MakeDword(0x40FA68);
MakeDword(0x40FA6C);
MakeDword(0x40FA70);
MakeDword(0x40FA74);
MakeDword(0x40FA78);
MakeDword(0x40FA7C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40FAA8, 0x40FABF);
MakeDword(0x40FA80);
MakeDword(0x40FA84);
MakeDword(0x40FA88);
MakeDword(0x40FA8C);
MakeDword(0x40FA90);
MakeDword(0x40FA94);
MakeDword(0x40FA98);
MakeDword(0x40FA9C);
MakeDword(0x40FAA0);
MakeDword(0x40FAA4);
MakeUnkn(0x40FAC0, 1);
MakeNameEx(0x40FAC0, "VMT_40FAC0_EVariantTypeCastError", 0);
MakeDword(0x40FAC0);
MakeDword(0x40FAC4);
MakeDword(0x40FAC8);
MakeDword(0x40FACC);
MakeDword(0x40FAD0);
MakeDword(0x40FAD4);
MakeDword(0x40FAD8);
MakeDword(0x40FADC);
MakeDword(0x40FAE0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40FB0C, 0x40FB22);
MakeDword(0x40FAE4);
MakeDword(0x40FAE8);
MakeDword(0x40FAEC);
MakeDword(0x40FAF0);
MakeDword(0x40FAF4);
MakeDword(0x40FAF8);
MakeDword(0x40FAFC);
MakeDword(0x40FB00);
MakeDword(0x40FB04);
MakeDword(0x40FB08);
MakeUnkn(0x40FB24, 1);
MakeNameEx(0x40FB24, "VMT_40FB24_EVariantOverflowError", 0);
MakeDword(0x40FB24);
MakeDword(0x40FB28);
MakeDword(0x40FB2C);
MakeDword(0x40FB30);
MakeDword(0x40FB34);
MakeDword(0x40FB38);
MakeDword(0x40FB3C);
MakeDword(0x40FB40);
MakeDword(0x40FB44);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40FB70, 0x40FB86);
MakeDword(0x40FB48);
MakeDword(0x40FB4C);
MakeDword(0x40FB50);
MakeDword(0x40FB54);
MakeDword(0x40FB58);
MakeDword(0x40FB5C);
MakeDword(0x40FB60);
MakeDword(0x40FB64);
MakeDword(0x40FB68);
MakeDword(0x40FB6C);
MakeUnkn(0x40FB88, 1);
MakeNameEx(0x40FB88, "VMT_40FB88_EVariantInvalidArgError", 0);
MakeDword(0x40FB88);
MakeDword(0x40FB8C);
MakeDword(0x40FB90);
MakeDword(0x40FB94);
MakeDword(0x40FB98);
MakeDword(0x40FB9C);
MakeDword(0x40FBA0);
MakeDword(0x40FBA4);
MakeDword(0x40FBA8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40FBD4, 0x40FBEC);
MakeDword(0x40FBAC);
MakeDword(0x40FBB0);
MakeDword(0x40FBB4);
MakeDword(0x40FBB8);
MakeDword(0x40FBBC);
MakeDword(0x40FBC0);
MakeDword(0x40FBC4);
MakeDword(0x40FBC8);
MakeDword(0x40FBCC);
MakeDword(0x40FBD0);
MakeUnkn(0x40FBEC, 1);
MakeNameEx(0x40FBEC, "VMT_40FBEC_EVariantBadVarTypeError", 0);
MakeDword(0x40FBEC);
MakeDword(0x40FBF0);
MakeDword(0x40FBF4);
MakeDword(0x40FBF8);
MakeDword(0x40FBFC);
MakeDword(0x40FC00);
MakeDword(0x40FC04);
MakeDword(0x40FC08);
MakeDword(0x40FC0C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40FC38, 0x40FC50);
MakeDword(0x40FC10);
MakeDword(0x40FC14);
MakeDword(0x40FC18);
MakeDword(0x40FC1C);
MakeDword(0x40FC20);
MakeDword(0x40FC24);
MakeDword(0x40FC28);
MakeDword(0x40FC2C);
MakeDword(0x40FC30);
MakeDword(0x40FC34);
MakeUnkn(0x40FC50, 1);
MakeNameEx(0x40FC50, "VMT_40FC50_EVariantBadIndexError", 0);
MakeDword(0x40FC50);
MakeDword(0x40FC54);
MakeDword(0x40FC58);
MakeDword(0x40FC5C);
MakeDword(0x40FC60);
MakeDword(0x40FC64);
MakeDword(0x40FC68);
MakeDword(0x40FC6C);
MakeDword(0x40FC70);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40FC9C, 0x40FCB2);
MakeDword(0x40FC74);
MakeDword(0x40FC78);
MakeDword(0x40FC7C);
MakeDword(0x40FC80);
MakeDword(0x40FC84);
MakeDword(0x40FC88);
MakeDword(0x40FC8C);
MakeDword(0x40FC90);
MakeDword(0x40FC94);
MakeDword(0x40FC98);
MakeUnkn(0x40FCB4, 1);
MakeNameEx(0x40FCB4, "VMT_40FCB4_EVariantArrayLockedError", 0);
MakeDword(0x40FCB4);
MakeDword(0x40FCB8);
MakeDword(0x40FCBC);
MakeDword(0x40FCC0);
MakeDword(0x40FCC4);
MakeDword(0x40FCC8);
MakeDword(0x40FCCC);
MakeDword(0x40FCD0);
MakeDword(0x40FCD4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40FD00, 0x40FD19);
MakeDword(0x40FCD8);
MakeDword(0x40FCDC);
MakeDword(0x40FCE0);
MakeDword(0x40FCE4);
MakeDword(0x40FCE8);
MakeDword(0x40FCEC);
MakeDword(0x40FCF0);
MakeDword(0x40FCF4);
MakeDword(0x40FCF8);
MakeDword(0x40FCFC);
MakeUnkn(0x40FD1C, 1);
MakeNameEx(0x40FD1C, "VMT_40FD1C_EVariantArrayCreateError", 0);
MakeDword(0x40FD1C);
MakeDword(0x40FD20);
MakeDword(0x40FD24);
MakeDword(0x40FD28);
MakeDword(0x40FD2C);
MakeDword(0x40FD30);
MakeDword(0x40FD34);
MakeDword(0x40FD38);
MakeDword(0x40FD3C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40FD68, 0x40FD81);
MakeDword(0x40FD40);
MakeDword(0x40FD44);
MakeDword(0x40FD48);
MakeDword(0x40FD4C);
MakeDword(0x40FD50);
MakeDword(0x40FD54);
MakeDword(0x40FD58);
MakeDword(0x40FD5C);
MakeDword(0x40FD60);
MakeDword(0x40FD64);
MakeUnkn(0x40FD84, 1);
MakeNameEx(0x40FD84, "VMT_40FD84_EVariantNotImplError", 0);
MakeDword(0x40FD84);
MakeDword(0x40FD88);
MakeDword(0x40FD8C);
MakeDword(0x40FD90);
MakeDword(0x40FD94);
MakeDword(0x40FD98);
MakeDword(0x40FD9C);
MakeDword(0x40FDA0);
MakeDword(0x40FDA4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40FDD0, 0x40FDE5);
MakeDword(0x40FDA8);
MakeDword(0x40FDAC);
MakeDword(0x40FDB0);
MakeDword(0x40FDB4);
MakeDword(0x40FDB8);
MakeDword(0x40FDBC);
MakeDword(0x40FDC0);
MakeDword(0x40FDC4);
MakeDword(0x40FDC8);
MakeDword(0x40FDCC);
MakeUnkn(0x40FDE8, 1);
MakeNameEx(0x40FDE8, "VMT_40FDE8_EVariantOutOfMemoryError", 0);
MakeDword(0x40FDE8);
MakeDword(0x40FDEC);
MakeDword(0x40FDF0);
MakeDword(0x40FDF4);
MakeDword(0x40FDF8);
MakeDword(0x40FDFC);
MakeDword(0x40FE00);
MakeDword(0x40FE04);
MakeDword(0x40FE08);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40FE34, 0x40FE4D);
MakeDword(0x40FE0C);
MakeDword(0x40FE10);
MakeDword(0x40FE14);
MakeDword(0x40FE18);
MakeDword(0x40FE1C);
MakeDword(0x40FE20);
MakeDword(0x40FE24);
MakeDword(0x40FE28);
MakeDword(0x40FE2C);
MakeDword(0x40FE30);
MakeUnkn(0x40FE50, 1);
MakeNameEx(0x40FE50, "VMT_40FE50_EVariantUnexpectedError", 0);
MakeDword(0x40FE50);
MakeDword(0x40FE54);
MakeDword(0x40FE58);
MakeDword(0x40FE5C);
MakeDword(0x40FE60);
MakeDword(0x40FE64);
MakeDword(0x40FE68);
MakeDword(0x40FE6C);
MakeDword(0x40FE70);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40FE9C, 0x40FEB4);
MakeDword(0x40FE74);
MakeDword(0x40FE78);
MakeDword(0x40FE7C);
MakeDword(0x40FE80);
MakeDword(0x40FE84);
MakeDword(0x40FE88);
MakeDword(0x40FE8C);
MakeDword(0x40FE90);
MakeDword(0x40FE94);
MakeDword(0x40FE98);
MakeUnkn(0x40FEB4, 1);
MakeNameEx(0x40FEB4, "VMT_40FEB4_EVariantDispatchError", 0);
MakeDword(0x40FEB4);
MakeDword(0x40FEB8);
MakeDword(0x40FEBC);
MakeDword(0x40FEC0);
MakeDword(0x40FEC4);
MakeDword(0x40FEC8);
MakeDword(0x40FECC);
MakeDword(0x40FED0);
MakeDword(0x40FED4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x40FF00, 0x40FF16);
MakeDword(0x40FED8);
MakeDword(0x40FEDC);
MakeDword(0x40FEE0);
MakeDword(0x40FEE4);
MakeDword(0x40FEE8);
MakeDword(0x40FEEC);
MakeDword(0x40FEF0);
MakeDword(0x40FEF4);
MakeDword(0x40FEF8);
MakeDword(0x40FEFC);
MakeUnkn(0x40FF18, 1);
MakeNameEx(0x40FF18, "VarCastError", 0x20);
MakeComm(0x40FF18, "'procedure VarCastError;'");
MakeCode(0x40FF18);
MakeCode(0x40FF4C);
MakeCode(0x40FF59);
MakeCode(0x40FF62);
MakeCode(0x40FF67);
MakeFunction(0x40FF18, 0x40FF6C);
MakeUnkn(0x40FF6C, 1);
MakeNameEx(0x40FF6C, "VarCastError_0", 0x20);
MakeComm(0x40FF6C, "'procedure VarCastError(const ASourceType:TVarType; const ADestType:TVarType);'");
MakeCode(0x40FF6C);
MakeCode(0x40FFE0);
MakeCode(0x40FFED);
MakeCode(0x40FFFB);
MakeCode(0x410000);
MakeFunction(0x40FF6C, 0x410008);
MakeUnkn(0x410008, 1);
MakeNameEx(0x410008, "VarInvalidOp", 0x20);
MakeComm(0x410008, "'procedure VarInvalidOp;'");
MakeCode(0x410008);
MakeCode(0x41003C);
MakeCode(0x410049);
MakeCode(0x410052);
MakeCode(0x410057);
MakeFunction(0x410008, 0x41005C);
MakeUnkn(0x41005C, 1);
MakeNameEx(0x41005C, "VarOverflowError", 0x20);
MakeComm(0x41005C, "'procedure VarOverflowError(const ASourceType:TVarType; const ADestType:TVarType);'");
MakeCode(0x41005C);
MakeCode(0x4100D0);
MakeCode(0x4100DD);
MakeCode(0x4100EB);
MakeCode(0x4100F0);
MakeFunction(0x41005C, 0x4100F8);
MakeUnkn(0x4100F8, 1);
MakeNameEx(0x4100F8, "VarArrayCreateError", 0x20);
MakeComm(0x4100F8, "'procedure VarArrayCreateError;'");
MakeCode(0x4100F8);
MakeCode(0x41012C);
MakeCode(0x410139);
MakeCode(0x410142);
MakeCode(0x410147);
MakeFunction(0x4100F8, 0x41014C);
MakeUnkn(0x41014C, 1);
MakeNameEx(0x41014C, "TranslateResult", 0x20);
MakeComm(0x41014C, "'procedure TranslateResult(AResult:HRESULT);'");
MakeCode(0x41014C);
MakeCode(0x410154);
MakeCode(0x41019F);
MakeCode(0x4101AE);
MakeCode(0x4101DB);
MakeCode(0x4101E5);
MakeCode(0x41020B);
MakeCode(0x410215);
MakeCode(0x41023B);
MakeCode(0x410261);
MakeCode(0x410287);
MakeCode(0x4102AD);
MakeCode(0x4102D3);
MakeCode(0x4102F6);
MakeCode(0x410319);
MakeCode(0x410369);
MakeCode(0x410376);
MakeCode(0x410391);
MakeCode(0x410396);
MakeFunction(0x41014C, 0x41039D);
MakeUnkn(0x4103A0, 1);
MakeNameEx(0x4103A0, "VarResultCheck", 0x20);
MakeComm(0x4103A0, "'procedure VarResultCheck(AResult:HRESULT);'");
MakeCode(0x4103A0);
MakeFunction(0x4103A0, 0x4103AA);
MakeUnkn(0x4103AC, 1);
MakeNameEx(0x4103AC, "VarResultCheck_0", 0x20);
MakeComm(0x4103AC, "'procedure VarResultCheck(AResult:HRESULT; ASourceType:TVarType; ADestType:TVarType);'");
MakeCode(0x4103AC);
MakeCode(0x4103C2);
MakeCode(0x4103CD);
MakeCode(0x4103D8);
MakeCode(0x4103DD);
MakeFunction(0x4103AC, 0x4103DF);
MakeUnkn(0x4103E0, 1);
MakeNameEx(0x4103E0, "HandleConversionException", 0x20);
MakeComm(0x4103E0, "'procedure HandleConversionException(const ASourceType:TVarType; const ADestType:TVarType);'");
MakeCode(0x4103E0);
MakeCode(0x41040B);
MakeCode(0x41042F);
MakeCode(0x410453);
MakeCode(0x410461);
MakeFunction(0x4103E0, 0x410464);
MakeUnkn(0x410464, 1);
MakeNameEx(0x410464, "@DispInvokeError", 0x20);
MakeComm(0x410464, "'procedure @DispInvokeError;'");
MakeCode(0x410464);
MakeCode(0x410498);
MakeCode(0x4104A5);
MakeCode(0x4104AE);
MakeCode(0x4104B3);
MakeFunction(0x410464, 0x4104B8);
MakeUnkn(0x4104B8, 1);
MakeNameEx(0x4104B8, "@VarNull", 0x20);
MakeComm(0x4104B8, "'procedure @VarNull(var V:TVarData);'");
MakeCode(0x4104B8);
MakeFunction(0x4104B8, 0x4104C9);
MakeUnkn(0x4104CC, 1);
MakeNameEx(0x4104CC, "InBounds", 0x20);
MakeComm(0x4104CC, "'function InBounds(At:Integer):Boolean;'");
MakeCode(0x4104CC);
MakeCode(0x4104D9);
MakeCode(0x4104F6);
MakeFunction(0x4104CC, 0x4104FB);
MakeUnkn(0x4104FC, 1);
MakeNameEx(0x4104FC, "Increment", 0x20);
MakeComm(0x4104FC, "'function Increment(At:Integer):Boolean;'");
MakeCode(0x4104FC);
MakeCode(0x410537);
MakeCode(0x410551);
MakeFunction(0x4104FC, 0x410557);
MakeUnkn(0x410558, 1);
MakeNameEx(0x410558, "VarArrayClear", 0x20);
MakeComm(0x410558, "'procedure VarArrayClear(var V:TVarData);'");
MakeCode(0x410558);
MakeCode(0x410580);
MakeCode(0x4105B8);
MakeCode(0x4105C7);
MakeCode(0x4105EA);
MakeCode(0x41064C);
MakeCode(0x410664);
MakeCode(0x410671);
MakeCode(0x4106AF);
MakeCode(0x4106BC);
MakeFunction(0x410558, 0x4106D4);
MakeUnkn(0x4106D4, 1);
MakeNameEx(0x4106D4, "VarClearDeep", 0x20);
MakeComm(0x4106D4, "'procedure VarClearDeep(var V:TVarData);'");
MakeCode(0x4106D4);
MakeCode(0x4106EF);
MakeCode(0x410705);
MakeCode(0x410716);
MakeCode(0x410726);
MakeCode(0x41073F);
MakeCode(0x41074B);
MakeFunction(0x4106D4, 0x41074F);
MakeUnkn(0x410750, 1);
MakeNameEx(0x410750, "@VarClear", 0x20);
MakeComm(0x410750, "'procedure @VarClear(var V:TVarData);'");
MakeCode(0x410750);
MakeCode(0x41075D);
MakeFunction(0x410750, 0x410763);
MakeUnkn(0x410764, 1);
MakeNameEx(0x410764, "@VarClr_0", 0x20);
MakeComm(0x410764, "'procedure @VarClr(var V:TVarData);'");
MakeCode(0x410764);
MakeFunction(0x410764, 0x41076C);
MakeUnkn(0x41076C, 1);
MakeNameEx(0x41076C, "InBounds_0", 0x20);
MakeComm(0x41076C, "'function InBounds(At:Integer):Boolean;'");
MakeCode(0x41076C);
MakeCode(0x410779);
MakeCode(0x410796);
MakeFunction(0x41076C, 0x41079B);
MakeUnkn(0x41079C, 1);
MakeNameEx(0x41079C, "Increment_0", 0x20);
MakeComm(0x41079C, "'function Increment(At:Integer):Boolean;'");
MakeCode(0x41079C);
MakeCode(0x4107D7);
MakeCode(0x4107F1);
MakeFunction(0x41079C, 0x4107F7);
MakeUnkn(0x4107F8, 1);
MakeNameEx(0x4107F8, "VarArrayCopyForEach", 0x20);
MakeComm(0x4107F8, "'procedure VarArrayCopyForEach(var Dest:TVarData; const Src:TVarData; AProc:TVarArrayForEach);'");
MakeCode(0x4107F8);
MakeCode(0x410822);
MakeCode(0x410848);
MakeCode(0x410851);
MakeCode(0x410874);
MakeCode(0x4108D6);
MakeCode(0x4108F6);
MakeCode(0x41092D);
MakeCode(0x41093A);
MakeCode(0x41099A);
MakeCode(0x4109A9);
MakeCode(0x4109BB);
MakeFunction(0x4107F8, 0x4109C2);
MakeUnkn(0x4109C4, 1);
MakeNameEx(0x4109C4, "VarCopyCopyProc", 0x20);
MakeComm(0x4109C4, "'procedure VarCopyCopyProc(var Dest:TVarData; const Src:TVarData);'");
MakeCode(0x4109C4);
MakeFunction(0x4109C4, 0x4109CA);
MakeUnkn(0x4109CC, 1);
MakeNameEx(0x4109CC, "VarCopyDeep", 0x20);
MakeComm(0x4109CC, "'procedure VarCopyDeep(var Dest:TVarData; const Source:TVarData);'");
MakeCode(0x4109CC);
MakeCode(0x4109E2);
MakeCode(0x4109F9);
MakeCode(0x410A17);
MakeCode(0x410A31);
MakeCode(0x410A48);
MakeCode(0x410A66);
MakeCode(0x410A72);
MakeFunction(0x4109CC, 0x410A77);
MakeUnkn(0x410A78, 1);
MakeNameEx(0x410A78, "@VarCopy", 0x20);
MakeComm(0x410A78, "'procedure @VarCopy(var Dest:TVarData; const Source:TVarData);'");
MakeCode(0x410A78);
MakeCode(0x410A97);
MakeCode(0x410AAF);
MakeCode(0x410AB8);
MakeFunction(0x410A78, 0x410ABB);
MakeUnkn(0x410ABC, 1);
MakeNameEx(0x410ABC, "VarToIntAsString", 0x20);
MakeComm(0x410ABC, "'function VarToIntAsString(const V:TVarData):Integer;'");
MakeCode(0x410ABC);
MakeCode(0x410B0C);
MakeCode(0x410B35);
MakeCode(0x410B41);
MakeCode(0x410B4E);
MakeCode(0x410B5F);
MakeCode(0x410B64);
MakeFunction(0x410ABC, 0x410B6E);
MakeUnkn(0x410B70, 1);
MakeNameEx(0x410B70, "VarToIntViaOS", 0x20);
MakeComm(0x410B70, "'function VarToIntViaOS(const V:TVarData):Integer;'");
MakeCode(0x410B70);
MakeFunction(0x410B70, 0x410BA9);
MakeUnkn(0x410BAC, 1);
MakeNameEx(0x410BAC, "VarToIntAny", 0x20);
MakeComm(0x410BAC, "'function VarToIntAny(const V:TVarData):Integer;'");
MakeCode(0x410BAC);
MakeCode(0x410BEA);
MakeCode(0x410BF7);
MakeCode(0x410C00);
MakeCode(0x410C05);
MakeFunction(0x410BAC, 0x410C0F);
MakeUnkn(0x410C10, 1);
MakeNameEx(0x410C10, "VarToIntCustom", 0x20);
MakeComm(0x410C10, "'function VarToIntCustom(const V:TVarData; var AValue:Integer):Boolean;'");
MakeCode(0x410C10);
MakeCode(0x410C4B);
MakeFunction(0x410C10, 0x410C54);
MakeUnkn(0x410C54, 1);
MakeNameEx(0x410C54, "@VarToInteger", 0x20);
MakeComm(0x410C54, "'function @VarToInteger(const V:TVarData):Integer;'");
MakeCode(0x410C54);
MakeCode(0x410CDB);
MakeCode(0x410CE5);
MakeCode(0x410CFB);
MakeCode(0x410D05);
MakeCode(0x410D14);
MakeCode(0x410D22);
MakeCode(0x410D3B);
MakeCode(0x410D43);
MakeCode(0x410D5C);
MakeCode(0x410D64);
MakeCode(0x410D83);
MakeCode(0x410D8B);
MakeCode(0x410DA4);
MakeCode(0x410DAC);
MakeCode(0x410DBC);
MakeCode(0x410DCB);
MakeCode(0x410DDA);
MakeCode(0x410DE9);
MakeCode(0x410DF8);
MakeCode(0x410E07);
MakeCode(0x410E0F);
MakeCode(0x410E26);
MakeCode(0x410E2E);
MakeCode(0x410E41);
MakeCode(0x410E51);
MakeCode(0x410E64);
MakeCode(0x410E74);
MakeCode(0x410E84);
MakeCode(0x410EFF);
MakeCode(0x410F10);
MakeCode(0x410F20);
MakeCode(0x410F3B);
MakeCode(0x410F43);
MakeCode(0x410F5E);
MakeCode(0x410F66);
MakeCode(0x410F87);
MakeCode(0x410F8F);
MakeCode(0x410FAA);
MakeCode(0x410FB2);
MakeCode(0x410FC2);
MakeCode(0x410FD3);
MakeCode(0x410FE4);
MakeCode(0x410FF2);
MakeCode(0x411000);
MakeCode(0x411011);
MakeCode(0x411016);
MakeCode(0x41102F);
MakeCode(0x411034);
MakeCode(0x411044);
MakeCode(0x411051);
MakeCode(0x41106B);
MakeCode(0x411075);
MakeCode(0x411093);
MakeFunction(0x410C54, 0x4110A4);
MakeUnkn(0x4110A4, 1);
MakeNameEx(0x4110A4, "VarToBoolAsString", 0x20);
MakeComm(0x4110A4, "'function VarToBoolAsString(const V:TVarData):Boolean;'");
MakeCode(0x4110A4);
MakeCode(0x4110FF);
MakeCode(0x41112C);
MakeCode(0x411138);
MakeCode(0x411145);
MakeCode(0x411156);
MakeCode(0x41115B);
MakeFunction(0x4110A4, 0x411166);
MakeUnkn(0x411168, 1);
MakeNameEx(0x411168, "VarToBoolViaOS", 0x20);
MakeComm(0x411168, "'function VarToBoolViaOS(const V:TVarData):Boolean;'");
MakeCode(0x411168);
MakeFunction(0x411168, 0x4111A6);
MakeUnkn(0x4111A8, 1);
MakeNameEx(0x4111A8, "VarToBoolAny", 0x20);
MakeComm(0x4111A8, "'function VarToBoolAny(const V:TVarData):Boolean;'");
MakeCode(0x4111A8);
MakeCode(0x4111E6);
MakeCode(0x4111F3);
MakeCode(0x4111FC);
MakeCode(0x411201);
MakeFunction(0x4111A8, 0x41120C);
MakeUnkn(0x41120C, 1);
MakeNameEx(0x41120C, "VarToBoolCustom", 0x20);
MakeComm(0x41120C, "'function VarToBoolCustom(const V:TVarData; var AValue:Boolean):Boolean;'");
MakeCode(0x41120C);
MakeCode(0x41124C);
MakeFunction(0x41120C, 0x411255);
MakeUnkn(0x411258, 1);
MakeNameEx(0x411258, "@VarToBoolean", 0x20);
MakeComm(0x411258, "'function @VarToBoolean(const V:TVarData):Boolean;'");
MakeCode(0x411258);
MakeCode(0x4112C6);
MakeCode(0x4112CF);
MakeCode(0x4112E5);
MakeCode(0x4112EE);
MakeCode(0x4112FC);
MakeCode(0x411309);
MakeCode(0x41131F);
MakeCode(0x411335);
MakeCode(0x41134B);
MakeCode(0x411361);
MakeCode(0x411370);
MakeCode(0x411380);
MakeCode(0x41138D);
MakeCode(0x41139A);
MakeCode(0x4113A8);
MakeCode(0x4113B5);
MakeCode(0x4113BF);
MakeCode(0x4113CA);
MakeCode(0x4113DA);
MakeCode(0x4113E9);
MakeCode(0x4113F9);
MakeCode(0x411408);
MakeCode(0x411417);
MakeCode(0x41148C);
MakeCode(0x41149C);
MakeCode(0x4114AB);
MakeCode(0x4114C3);
MakeCode(0x4114DB);
MakeCode(0x4114F3);
MakeCode(0x41150B);
MakeCode(0x41151A);
MakeCode(0x411529);
MakeCode(0x411535);
MakeCode(0x411541);
MakeCode(0x41154E);
MakeCode(0x41155A);
MakeCode(0x411566);
MakeCode(0x41156E);
MakeCode(0x41157B);
MakeCode(0x411587);
MakeCode(0x41159E);
MakeFunction(0x411258, 0x4115AC);
MakeUnkn(0x4115AC, 1);
MakeNameEx(0x4115AC, "CurrToWStrViaOS", 0x20);
MakeComm(0x4115AC, "'function CurrToWStrViaOS(const AValue:Currency):WideString;'");
MakeCode(0x4115AC);
MakeFunction(0x4115AC, 0x4115E2);
MakeUnkn(0x4115E4, 1);
MakeNameEx(0x4115E4, "DateToWStrViaOS", 0x20);
MakeComm(0x4115E4, "'function DateToWStrViaOS(const AValue:TDateTime):WideString;'");
MakeCode(0x4115E4);
MakeFunction(0x4115E4, 0x41161A);
MakeUnkn(0x41161C, 1);
MakeNameEx(0x41161C, "BoolToWStrViaOS", 0x20);
MakeComm(0x41161C, "'function BoolToWStrViaOS(const AValue:WordBool):WideString;'");
MakeCode(0x41161C);
MakeCode(0x411672);
MakeCode(0x411693);
MakeCode(0x4116B4);
MakeCode(0x4116B9);
MakeCode(0x4116C6);
MakeCode(0x4116D4);
MakeCode(0x4116D9);
MakeFunction(0x41161C, 0x4116E1);
MakeUnkn(0x411DD8, 1);
MakeNameEx(0x411DD8, "VarToWStrViaOS", 0x20);
MakeComm(0x411DD8, "'function VarToWStrViaOS(const V:TVarData):WideString;'");
MakeCode(0x411DD8);
MakeCode(0x411E4F);
MakeCode(0x411E5C);
MakeCode(0x411E65);
MakeCode(0x411E6A);
MakeCode(0x411E6C);
MakeCode(0x411E79);
MakeCode(0x411E82);
MakeCode(0x411E87);
MakeFunction(0x411DD8, 0x411E8F);
MakeUnkn(0x411E90, 1);
MakeNameEx(0x411E90, "VarToLStrAny", 0x20);
MakeComm(0x411E90, "'function VarToLStrAny(const V:TVarData):AnsiString;'");
MakeCode(0x411E90);
MakeCode(0x411ED0);
MakeCode(0x411EDD);
MakeCode(0x411EE6);
MakeCode(0x411EEB);
MakeFunction(0x411E90, 0x411EF3);
MakeUnkn(0x411EF4, 1);
MakeNameEx(0x411EF4, "VarToWStrCustom", 0x20);
MakeComm(0x411EF4, "'function VarToWStrCustom(const V:TVarData; var AValue:WideString):Boolean;'");
MakeCode(0x411EF4);
MakeCode(0x411F10);
MakeCode(0x411F79);
MakeCode(0x411F86);
MakeCode(0x411F8F);
MakeCode(0x411F94);
MakeCode(0x411F96);
MakeCode(0x411FA3);
MakeCode(0x411FAC);
MakeCode(0x411FB1);
MakeFunction(0x411EF4, 0x411FBC);
MakeCode(0x411FBC);
MakeCode(0x411FC4);
MakeCode(0x412049);
MakeCode(0x412055);
MakeCode(0x41206B);
MakeComm(0x41206D, "'0x0'");
MakeCode(0x41207D);
MakeCode(0x412098);
MakeCode(0x4120B2);
MakeCode(0x4120D3);
MakeCode(0x4120F4);
MakeCode(0x412111);
MakeCode(0x41212E);
MakeCode(0x412146);
MakeCode(0x412161);
MakeCode(0x41217C);
MakeCode(0x412197);
MakeCode(0x4121B2);
MakeCode(0x4121D0);
MakeCode(0x4121ED);
MakeCode(0x4121FE);
MakeCode(0x412217);
MakeCode(0x412227);
MakeCode(0x412236);
MakeCode(0x41224F);
MakeCode(0x4122C4);
MakeCode(0x4122E1);
MakeCode(0x4122FD);
MakeCode(0x412320);
MakeCode(0x412343);
MakeCode(0x412362);
MakeCode(0x412381);
MakeCode(0x412392);
MakeCode(0x4123AF);
MakeCode(0x4123CC);
MakeCode(0x4123E9);
MakeCode(0x412406);
MakeCode(0x412423);
MakeCode(0x41243F);
MakeCode(0x41244D);
MakeCode(0x412463);
MakeCode(0x41248B);
MakeCode(0x412498);
MakeCode(0x412501);
MakeCode(0x412506);
MakeFunction(0x411FBC, 0x41250E);
MakeUnkn(0x412510, 1);
MakeNameEx(0x412510, "@VarFromInt", 0x20);
MakeComm(0x412510, "'procedure @VarFromInt(var V:TVarData; const Value:Integer; const Range:Shortint);'");
MakeCode(0x412510);
MakeCode(0x412527);
MakeCode(0x412540);
MakeCode(0x412545);
MakeFunction(0x412510, 0x41254C);
MakeUnkn(0x41254C, 1);
MakeNameEx(0x41254C, "@OleVarFromInt", 0x20);
MakeComm(0x41254C, "'procedure @OleVarFromInt(var V:TVarData; const Value:Integer; const Range:Shortint);'");
MakeCode(0x41254C);
MakeCode(0x412560);
MakeFunction(0x41254C, 0x41256B);
MakeUnkn(0x41256C, 1);
MakeNameEx(0x41256C, "@VarFromInt64", 0x20);
MakeComm(0x41256C, "'procedure @VarFromInt64(var V:TVarData; const Value:Int64);'");
MakeCode(0x41256C);
MakeCode(0x412580);
MakeFunction(0x41256C, 0x412596);
MakeUnkn(0x412598, 1);
MakeNameEx(0x412598, "@VarFromBool", 0x20);
MakeComm(0x412598, "'procedure @VarFromBool(var V:TVarData; const Value:Boolean);'");
MakeCode(0x412598);
MakeCode(0x4125AC);
MakeFunction(0x412598, 0x4125BE);
MakeUnkn(0x4125C0, 1);
MakeNameEx(0x4125C0, "@VarFromReal", 0x20);
MakeComm(0x4125C0, "'procedure @VarFromReal(var v:Variant);'");
MakeCode(0x4125C0);
MakeFunction(0x4125C0, 0x4125D1);
MakeUnkn(0x4125D4, 1);
MakeNameEx(0x4125D4, "@VarFromTDateTime", 0x20);
MakeComm(0x4125D4, "'procedure @VarFromTDateTime(var v:Variant);'");
MakeCode(0x4125D4);
MakeFunction(0x4125D4, 0x4125E5);
MakeUnkn(0x4125E8, 1);
MakeNameEx(0x4125E8, "@VarFromCurr", 0x20);
MakeComm(0x4125E8, "'procedure @VarFromCurr(var v:Variant);'");
MakeCode(0x4125E8);
MakeFunction(0x4125E8, 0x4125F9);
MakeUnkn(0x4125FC, 1);
MakeNameEx(0x4125FC, "@VarFromLStr", 0x20);
MakeComm(0x4125FC, "'procedure @VarFromLStr(var V:TVarData; const Value:AnsiString);'");
MakeCode(0x4125FC);
MakeCode(0x412610);
MakeFunction(0x4125FC, 0x412627);
MakeUnkn(0x412628, 1);
MakeNameEx(0x412628, "@VarFromWStr", 0x20);
MakeComm(0x412628, "'procedure @VarFromWStr(var V:TVarData; const Value:WideString);'");
MakeCode(0x412628);
MakeCode(0x41263C);
MakeFunction(0x412628, 0x41265E);
MakeUnkn(0x412660, 1);
MakeNameEx(0x412660, "@VarFromDisp", 0x20);
MakeComm(0x412660, "'procedure @VarFromDisp(var V:TVarData; const Value:IDispatch);'");
MakeCode(0x412660);
MakeCode(0x412674);
MakeFunction(0x412660, 0x41268B);
MakeUnkn(0x41268C, 1);
MakeNameEx(0x41268C, "@VarAddRef_0", 0x20);
MakeComm(0x41268C, "'procedure @VarAddRef(var V:TVarData);'");
MakeCode(0x41268C);
MakeFunction(0x41268C, 0x4126AD);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4126B8, -1);
MakeDword(0x4126B4);
MakeDword(0x4126B0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4126C8, -1);
MakeDword(0x4126C4);
MakeDword(0x4126C0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4126D8, -1);
MakeDword(0x4126D4);
MakeDword(0x4126D0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4126EC, -1);
MakeDword(0x4126E8);
MakeDword(0x4126E4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4126FC, -1);
MakeDword(0x4126F8);
MakeDword(0x4126F4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x41270C, -1);
MakeDword(0x412708);
MakeDword(0x412704);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x41271C, -1);
MakeDword(0x412718);
MakeDword(0x412714);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x412730, -1);
MakeDword(0x41272C);
MakeDword(0x412728);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x412740, -1);
MakeDword(0x41273C);
MakeDword(0x412738);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x412750, -1);
MakeDword(0x41274C);
MakeDword(0x412748);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x412764, -1);
MakeDword(0x412760);
MakeDword(0x41275C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x412774, -1);
MakeDword(0x412770);
MakeDword(0x41276C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x412784, -1);
MakeDword(0x412780);
MakeDword(0x41277C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x412794, -1);
MakeDword(0x412790);
MakeDword(0x41278C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4127A4, -1);
MakeDword(0x4127A0);
MakeDword(0x41279C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4127B4, -1);
MakeDword(0x4127B0);
MakeDword(0x4127AC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4127C0, -1);
MakeDword(0x4127BC);
MakeDword(0x4127B8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4127D4, -1);
MakeDword(0x4127D0);
MakeDword(0x4127CC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4127E4, -1);
MakeDword(0x4127E0);
MakeDword(0x4127DC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4127F4, -1);
MakeDword(0x4127F0);
MakeDword(0x4127EC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x412808, -1);
MakeDword(0x412804);
MakeDword(0x412800);
MakeUnkn(0x412810, 1);
MakeNameEx(0x412810, "VarTypeAsText", 0x20);
MakeComm(0x412810, "'function VarTypeAsText(const AType:TVarType):AnsiString;'");
MakeCode(0x412810);
MakeCode(0x412859);
MakeCode(0x412871);
MakeCode(0x412886);
MakeCode(0x4128CF);
MakeCode(0x4128F7);
MakeCode(0x41290A);
MakeCode(0x41291D);
MakeCode(0x41292A);
MakeCode(0x412936);
MakeCode(0x41293B);
MakeFunction(0x412810, 0x412980);
MakeCode(0x412980);
MakeFunction(0x412980, 0x412984);
MakeUnkn(0x412984, 1);
MakeNameEx(0x412984, "SetVarAsError", 0x20);
MakeComm(0x412984, "'procedure SetVarAsError(var V:TVarData; AResult:HRESULT);'");
MakeCode(0x412984);
MakeFunction(0x412984, 0x41299C);
MakeUnkn(0x41299C, 1);
MakeNameEx(0x41299C, "SetClearVarToEmptyParam", 0x20);
MakeComm(0x41299C, "'procedure SetClearVarToEmptyParam(var V:TVarData);'");
MakeCode(0x41299C);
MakeFunction(0x41299C, 0x4129A7);
MakeUnkn(0x4129A8, 1);
MakeNameEx(0x4129A8, "RTTI_4129A8_DynArray_.02", 0);
MakeDword(0x4129A8);
MakeUnkn(0x4129AC, 1);
MakeNameEx(0x4129AC, "", 0);
MakeByte(0x4129AC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4129AD, 0x4129B1);
MakeDword(0x4129B1);
MakeDword(0x4129B5);
MakeDword(0x4129B9);
MakeDword(0x4129BD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4129C1, 0x4129CA);
MakeUnkn(0x4129CC, 1);
MakeNameEx(0x4129CC, "ClearVariantTypeList", 0x20);
MakeComm(0x4129CC, "'procedure ClearVariantTypeList;'");
MakeCode(0x4129CC);
MakeCode(0x4129FD);
MakeCode(0x412A0F);
MakeCode(0x412A15);
MakeCode(0x412A22);
MakeCode(0x412A2D);
MakeCode(0x412A32);
MakeFunction(0x4129CC, 0x412A38);
MakeUnkn(0x412A38, 1);
MakeNameEx(0x412A38, "TCustomVariantType.BinaryOp", 0x20);
MakeComm(0x412A38, "'procedure TCustomVariantType.BinaryOp(var Left:TVarData; const Right:TVarData; const Operator:TVarOp);'");
MakeCode(0x412A38);
MakeFunction(0x412A38, 0x412A44);
MakeUnkn(0x412A44, 1);
MakeNameEx(0x412A44, "TCustomVariantType.Cast", 0x20);
MakeComm(0x412A44, "'procedure TCustomVariantType.Cast(var Dest:TVarData; const Source:TVarData);'");
MakeCode(0x412A44);
MakeCode(0x412A70);
MakeCode(0x412A77);
MakeFunction(0x412A44, 0x412A7C);
MakeUnkn(0x412A7C, 1);
MakeNameEx(0x412A7C, "TCustomVariantType.CastTo", 0x20);
MakeComm(0x412A7C, "'procedure TCustomVariantType.CastTo(var Dest:TVarData; const Source:TVarData; const AVarType:TVarType);'");
MakeCode(0x412A7C);
MakeCode(0x412AB4);
MakeCode(0x412ABB);
MakeFunction(0x412A7C, 0x412AC4);
MakeUnkn(0x412AC4, 1);
MakeNameEx(0x412AC4, "TCustomVariantType.Compare", 0x20);
MakeComm(0x412AC4, "'procedure TCustomVariantType.Compare(const Left:TVarData; const Right:TVarData; var Relationship:TVarCompareResult);'");
MakeCode(0x412AC4);
MakeFunction(0x412AC4, 0x412AD0);
MakeUnkn(0x412AD0, 1);
MakeNameEx(0x412AD0, "TCustomVariantType.CompareOp", 0x20);
MakeComm(0x412AD0, "'function TCustomVariantType.CompareOp(const Left:TVarData; const Right:TVarData; const Operator:TVarOp):Boolean;'");
MakeCode(0x412AD0);
MakeFunction(0x412AD0, 0x412B05);
MakeUnkn(0x412B08, 1);
MakeNameEx(0x412B08, "TCustomVariantType.CastToOle", 0x20);
MakeComm(0x412B08, "'procedure TCustomVariantType.CastToOle(var Dest:TVarData; const Source:TVarData);'");
MakeCode(0x412B08);
MakeCode(0x412B34);
MakeCode(0x412B3B);
MakeFunction(0x412B08, 0x412B41);
MakeUnkn(0x412B44, 1);
MakeNameEx(0x412B44, "TCustomVariantType.Destroy", 0x20);
MakeComm(0x412B44, "'destructor TCustomVariantType.Destroy;'");
MakeCode(0x412B44);
MakeCode(0x412B8F);
MakeCode(0x412B9C);
MakeCode(0x412BA7);
MakeCode(0x412BAC);
MakeCode(0x412BCB);
MakeFunction(0x412B44, 0x412BCF);
MakeCode(0x412BD0);
MakeFunction(0x412BD0, 0x412BD3);
MakeUnkn(0x412BD4, 1);
MakeNameEx(0x412BD4, "TCustomVariantType.LeftPromotion", 0x20);
MakeComm(0x412BD4, "'function TCustomVariantType.LeftPromotion(const V:TVarData; const Operator:TVarOp; var RequiredVarType:TVarType):Boolean;'");
MakeCode(0x412BD4);
MakeFunction(0x412BD4, 0x412BE7);
MakeUnkn(0x412BE8, 1);
MakeNameEx(0x412BE8, "TCustomVariantType.OlePromotion", 0x20);
MakeComm(0x412BE8, "'function TCustomVariantType.OlePromotion(const V:TVarData; var RequiredVarType:TVarType):Boolean;'");
MakeCode(0x412BE8);
MakeFunction(0x412BE8, 0x412BF0);
MakeCode(0x412BF0);
MakeFunction(0x412BF0, 0x412BF6);
MakeCode(0x412BF8);
MakeFunction(0x412BF8, 0x412BFE);
MakeCode(0x412C00);
MakeFunction(0x412C00, 0x412C06);
MakeUnkn(0x412C08, 1);
MakeNameEx(0x412C08, "TCustomVariantType.RightPromotion", 0x20);
MakeComm(0x412C08, "'function TCustomVariantType.RightPromotion(const V:TVarData; const Operator:TVarOp; var RequiredVarType:TVarType):Boolean;'");
MakeCode(0x412C08);
MakeFunction(0x412C08, 0x412C1B);
MakeCode(0x412C1C);
MakeFunction(0x412C1C, 0x412C22);
MakeUnkn(0x412C24, 1);
MakeNameEx(0x412C24, "TCustomVariantType.DispInvoke", 0x20);
MakeComm(0x412C24, "'procedure TCustomVariantType.DispInvoke(Dest:PVarData; const Source:TVarData; CallDesc:PCallDesc; Params:Pointer);'");
MakeCode(0x412C24);
MakeFunction(0x412C24, 0x412C30);
MakeUnkn(0x412C30, 1);
MakeNameEx(0x412C30, "TCustomVariantType._AddRef", 0x20);
MakeComm(0x412C30, "'function TCustomVariantType._AddRef:Integer; stdcall;'");
MakeCode(0x412C30);
MakeFunction(0x412C30, 0x412C3A);
MakeUnkn(0x412C3C, 1);
MakeNameEx(0x412C3C, "TCustomVariantType._Release", 0x20);
MakeComm(0x412C3C, "'function TCustomVariantType._Release:Integer; stdcall;'");
MakeCode(0x412C3C);
MakeFunction(0x412C3C, 0x412C46);
MakeUnkn(0x412C48, 1);
MakeNameEx(0x412C48, "TCustomVariantType.QueryInterface", 0x20);
MakeComm(0x412C48, "'function TCustomVariantType.QueryInterface(const IID:TGUID; var Obj:Pointer):HRESULT; stdcall;'");
MakeCode(0x412C48);
MakeCode(0x412C64);
MakeCode(0x412C69);
MakeFunction(0x412C48, 0x412C6E);
MakeUnkn(0x412C70, 1);
MakeNameEx(0x412C70, "FindCustomVariantType", 0x20);
MakeComm(0x412C70, "'function FindCustomVariantType(const AVarType:TVarType; var CustomVariantType:TCustomVariantType):Boolean;'");
MakeCode(0x412C70);
MakeCode(0x412C92);
MakeCode(0x412C96);
MakeCode(0x412C98);
MakeCode(0x412CF7);
MakeCode(0x412CFB);
MakeCode(0x412CFD);
MakeCode(0x412D00);
MakeCode(0x412D0D);
MakeCode(0x412D18);
MakeCode(0x412D1D);
MakeCode(0x412D1F);
MakeFunction(0x412C70, 0x412D29);
MakeUnkn(0x412D2C, 1);
MakeNameEx(0x412D2C, "FindCustomVariantType_0", 0x20);
MakeComm(0x412D2C, "'function FindCustomVariantType(const TypeName:AnsiString; var CustomVariantType:TCustomVariantType):Boolean;'");
MakeCode(0x412D2C);
MakeCode(0x412D80);
MakeCode(0x412DC9);
MakeCode(0x412DCD);
MakeCode(0x412DDA);
MakeCode(0x412DE5);
MakeCode(0x412DEA);
MakeCode(0x412DEC);
MakeCode(0x412DF9);
MakeCode(0x412E02);
MakeCode(0x412E07);
MakeFunction(0x412D2C, 0x412E14);
MakeUnkn(0x412E14, 1);
MakeNameEx(0x412E14, "Null", 0x20);
MakeComm(0x412E14, "'function Null:Variant;'");
MakeCode(0x412E14);
MakeFunction(0x412E14, 0x412E1A);
MakeCode(0x412E1C);
MakeCode(0x412E7D);
MakeCode(0x412E8A);
MakeCode(0x412E8B);
MakeCode(0x412E90);
MakeFunction(0x412E1C, 0x412E94);
MakeComm(0x412E94, "'SResString92'");
MakeDword(0x412E94);
MakeDword(0x412E98);
MakeComm(0x412E9C, "'SResString93'");
MakeDword(0x412E9C);
MakeDword(0x412EA0);
MakeComm(0x412EA4, "'SResString94'");
MakeDword(0x412EA4);
MakeDword(0x412EA8);
MakeComm(0x412EAC, "'SResString95'");
MakeDword(0x412EAC);
MakeDword(0x412EB0);
MakeComm(0x412EB4, "'SResString96'");
MakeDword(0x412EB4);
MakeDword(0x412EB8);
MakeComm(0x412EBC, "'SResString97'");
MakeDword(0x412EBC);
MakeDword(0x412EC0);
MakeComm(0x412EC4, "'SResString98'");
MakeDword(0x412EC4);
MakeDword(0x412EC8);
MakeComm(0x412ECC, "'SResString99'");
MakeDword(0x412ECC);
MakeDword(0x412ED0);
MakeComm(0x412ED4, "'SResString100'");
MakeDword(0x412ED4);
MakeDword(0x412ED8);
MakeComm(0x412EDC, "'SResString101'");
MakeDword(0x412EDC);
MakeDword(0x412EE0);
MakeComm(0x412EE4, "'SResString102'");
MakeDword(0x412EE4);
MakeDword(0x412EE8);
MakeComm(0x412EEC, "'SResString103'");
MakeDword(0x412EEC);
MakeDword(0x412EF0);
MakeComm(0x412EF4, "'SResString104'");
MakeDword(0x412EF4);
MakeDword(0x412EF8);
MakeComm(0x412EFC, "'SResString105'");
MakeDword(0x412EFC);
MakeDword(0x412F00);
MakeComm(0x412F04, "'SResString106'");
MakeDword(0x412F04);
MakeDword(0x412F08);
MakeComm(0x412F0C, "'SResString107'");
MakeDword(0x412F0C);
MakeDword(0x412F10);
MakeComm(0x412F14, "'SResString108'");
MakeDword(0x412F14);
MakeDword(0x412F18);
MakeComm(0x412F1C, "'SResString109'");
MakeDword(0x412F1C);
MakeDword(0x412F20);
MakeComm(0x412F24, "'SResString110'");
MakeDword(0x412F24);
MakeDword(0x412F28);
MakeComm(0x412F2C, "'SResString111'");
MakeDword(0x412F2C);
MakeDword(0x412F30);
MakeComm(0x412F34, "'SResString112'");
MakeDword(0x412F34);
MakeDword(0x412F38);
MakeComm(0x412F3C, "'SResString113'");
MakeDword(0x412F3C);
MakeDword(0x412F40);
MakeComm(0x412F44, "'SResString114'");
MakeDword(0x412F44);
MakeDword(0x412F48);
MakeComm(0x412F4C, "'SResString115'");
MakeDword(0x412F4C);
MakeDword(0x412F50);
MakeComm(0x412F54, "'SResString116'");
MakeDword(0x412F54);
MakeDword(0x412F58);
MakeComm(0x412F5C, "'SResString117'");
MakeDword(0x412F5C);
MakeDword(0x412F60);
MakeComm(0x412F64, "'SResString118'");
MakeDword(0x412F64);
MakeDword(0x412F68);
MakeComm(0x412F6C, "'SResString119'");
MakeDword(0x412F6C);
MakeDword(0x412F70);
MakeComm(0x412F74, "'SResString120'");
MakeDword(0x412F74);
MakeDword(0x412F78);
MakeComm(0x412F7C, "'SResString121'");
MakeDword(0x412F7C);
MakeDword(0x412F80);
MakeComm(0x412F84, "'SResString122'");
MakeDword(0x412F84);
MakeDword(0x412F88);
MakeComm(0x412F8C, "'SResString123'");
MakeDword(0x412F8C);
MakeDword(0x412F90);
MakeComm(0x412F94, "'SResString124'");
MakeDword(0x412F94);
MakeDword(0x412F98);
MakeComm(0x412F9C, "'SResString125'");
MakeDword(0x412F9C);
MakeDword(0x412FA0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x412FAC, -1);
MakeDword(0x412FA8);
MakeDword(0x412FA4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x412FBC, -1);
MakeDword(0x412FB8);
MakeDword(0x412FB4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x412FCC, -1);
MakeDword(0x412FC8);
MakeDword(0x412FC4);
MakeUnkn(0x412FD0, 1);
MakeNameEx(0x412FD0, "GetTypeData", 0x20);
MakeComm(0x412FD0, "'function GetTypeData(TypeInfo:PTypeInfo):PTypeData;'");
MakeCode(0x412FD0);
MakeFunction(0x412FD0, 0x412FDA);
MakeUnkn(0x412FDC, 1);
MakeNameEx(0x412FDC, "GetEnumName", 0x20);
MakeComm(0x412FDC, "'function GetEnumName(TypeInfo:PTypeInfo; Value:Integer):AnsiString;'");
MakeCode(0x412FDC);
MakeCode(0x413008);
MakeCode(0x413027);
MakeCode(0x413068);
MakeCode(0x41306F);
MakeCode(0x41307A);
MakeCode(0x413083);
MakeCode(0x413090);
MakeCode(0x413099);
MakeCode(0x41309E);
MakeFunction(0x412FDC, 0x4130B4);
MakeUnkn(0x4130B4, 1);
MakeNameEx(0x4130B4, "GetEnumNameValue", 0x20);
MakeComm(0x4130B4, "'function GetEnumNameValue(TypeInfo:PTypeInfo; const Name:AnsiString):Integer;'");
MakeCode(0x4130B4);
MakeCode(0x4130D3);
MakeCode(0x4130DA);
MakeCode(0x4130EB);
MakeCode(0x4130ED);
MakeCode(0x4130F6);
MakeCode(0x4130F9);
MakeFunction(0x4130B4, 0x4130FD);
MakeCode(0x413100);
MakeCode(0x413115);
MakeCode(0x413137);
MakeCode(0x41314D);
MakeCode(0x413156);
MakeCode(0x41315F);
MakeFunction(0x413100, 0x413162);
MakeUnkn(0x413164, 1);
MakeNameEx(0x413164, "GetPropInfo", 0x20);
MakeComm(0x413164, "'function GetPropInfo(TypeInfo:PTypeInfo; const PropName:AnsiString):PPropInfo;'");
MakeCode(0x413164);
MakeCode(0x41317C);
MakeCode(0x413195);
MakeCode(0x4131A0);
MakeCode(0x4131A9);
MakeCode(0x4131B4);
MakeCode(0x4131BE);
MakeCode(0x4131C0);
MakeCode(0x4131D0);
MakeFunction(0x413164, 0x4131D4);
MakeUnkn(0x4131D4, 1);
MakeNameEx(0x4131D4, "GetPropInfos", 0x20);
MakeComm(0x4131D4, "'procedure GetPropInfos(TypeInfo:PTypeInfo; PropList:PPropList);'");
MakeCode(0x4131D4);
MakeCode(0x4131E9);
MakeCode(0x413200);
MakeCode(0x413210);
MakeCode(0x413217);
MakeCode(0x413224);
MakeFunction(0x4131D4, 0x413228);
MakeUnkn(0x413228, 1);
MakeNameEx(0x413228, "GetOrdProp", 0x20);
MakeComm(0x413228, "'function GetOrdProp(Instance:TObject; PropInfo:PPropInfo):Longint;'");
MakeCode(0x413228);
MakeCode(0x41323E);
MakeCode(0x413255);
MakeCode(0x413259);
MakeCode(0x413272);
MakeCode(0x41328C);
MakeCode(0x413296);
MakeFunction(0x413228, 0x413299);
MakeUnkn(0x41329C, 1);
MakeNameEx(0x41329C, "SetOrdProp", 0x20);
MakeComm(0x41329C, "'procedure SetOrdProp(Instance:TObject; PropInfo:PPropInfo; Value:Longint);'");
MakeCode(0x41329C);
MakeCode(0x4132B5);
MakeCode(0x4132C2);
MakeCode(0x4132D6);
MakeCode(0x4132DA);
MakeCode(0x4132F3);
MakeFunction(0x41329C, 0x4132F7);
MakeUnkn(0x4132F8, 1);
MakeNameEx(0x4132F8, "GetEnumValue", 0x20);
MakeComm(0x4132F8, "'function GetEnumValue(TypeInfo:PTypeInfo; const Name:AnsiString):Integer;'");
MakeCode(0x4132F8);
MakeCode(0x41332D);
MakeCode(0x41333A);
MakeCode(0x413345);
MakeCode(0x413366);
MakeCode(0x413371);
MakeCode(0x41337E);
MakeCode(0x413387);
MakeCode(0x41338C);
MakeFunction(0x4132F8, 0x413396);
MakeUnkn(0x413398, 1);
MakeNameEx(0x413398, "SetShortStrProp", 0x20);
MakeComm(0x413398, "'procedure SetShortStrProp(Instance:TObject; PropInfo:PPropInfo; const Value:ShortString);'");
MakeCode(0x413398);
MakeCode(0x4133A9);
MakeCode(0x4133BE);
MakeCode(0x4133C3);
MakeCode(0x4133E1);
MakeFunction(0x413398, 0x4133E9);
MakeUnkn(0x4133EC, 1);
MakeNameEx(0x4133EC, "SetShortStrPropAsLongStr", 0x20);
MakeComm(0x4133EC, "'procedure SetShortStrPropAsLongStr(Instance:TObject; PropInfo:PPropInfo; const Value:AnsiString);'");
MakeCode(0x4133EC);
MakeFunction(0x4133EC, 0x41341E);
MakeUnkn(0x413420, 1);
MakeNameEx(0x413420, "AssignLongStr", 0x20);
MakeComm(0x413420, "'procedure AssignLongStr(var Dest:AnsiString; const Source:AnsiString);'");
MakeCode(0x413420);
MakeFunction(0x413420, 0x413432);
MakeUnkn(0x413434, 1);
MakeNameEx(0x413434, "SetLongStrProp", 0x20);
MakeComm(0x413434, "'procedure SetLongStrProp(Instance:TObject; PropInfo:PPropInfo; const Value:AnsiString);'");
MakeCode(0x413434);
MakeCode(0x413445);
MakeCode(0x41345A);
MakeCode(0x41345F);
MakeFunction(0x413434, 0x413471);
MakeUnkn(0x413474, 1);
MakeNameEx(0x413474, "SetWideStrPropAsLongStr", 0x20);
MakeComm(0x413474, "'procedure SetWideStrPropAsLongStr(Instance:TObject; PropInfo:PPropInfo; const Value:AnsiString);'");
MakeCode(0x413474);
MakeCode(0x4134A6);
MakeCode(0x4134B3);
MakeCode(0x4134BC);
MakeCode(0x4134C1);
MakeFunction(0x413474, 0x4134C9);
MakeUnkn(0x4134CC, 1);
MakeNameEx(0x4134CC, "SetStrProp", 0x20);
MakeComm(0x4134CC, "'procedure SetStrProp(Instance:TObject; PropInfo:PPropInfo; const Value:AnsiString);'");
MakeCode(0x4134CC);
MakeCode(0x4134E4);
MakeCode(0x4134EB);
MakeCode(0x4134F2);
MakeCode(0x4134F7);
MakeFunction(0x4134CC, 0x4134F9);
MakeUnkn(0x4134FC, 1);
MakeNameEx(0x4134FC, "SetWideStrProp", 0x20);
MakeComm(0x4134FC, "'procedure SetWideStrProp(Instance:TObject; PropInfo:PPropInfo; const Value:WideString);'");
MakeCode(0x4134FC);
MakeCode(0x413533);
MakeCode(0x41354B);
MakeCode(0x413573);
MakeCode(0x413589);
MakeCode(0x41358C);
MakeCode(0x4135A3);
MakeCode(0x4135AD);
MakeCode(0x4135BA);
MakeCode(0x4135C3);
MakeCode(0x4135C8);
MakeFunction(0x4134FC, 0x4135D1);
MakeUnkn(0x4135D4, 1);
MakeNameEx(0x4135D4, "SetFloatProp", 0x20);
MakeComm(0x4135D4, "'procedure SetFloatProp(Instance:TObject; PropInfo:PPropInfo; const Value:Extended);'");
MakeCode(0x4135D4);
MakeCode(0x413631);
MakeCode(0x41363C);
MakeCode(0x413647);
MakeCode(0x41365F);
MakeCode(0x41366A);
MakeCode(0x41367B);
MakeCode(0x413691);
MakeCode(0x413694);
MakeCode(0x4136CD);
MakeCode(0x4136E2);
MakeCode(0x4136F7);
MakeCode(0x41370D);
MakeCode(0x413722);
MakeCode(0x41373D);
MakeCode(0x413760);
MakeCode(0x413772);
MakeCode(0x413784);
MakeCode(0x413797);
MakeCode(0x4137A9);
MakeCode(0x4137BF);
MakeFunction(0x4135D4, 0x4137C8);
MakeUnkn(0x4137CC, 1);
MakeNameEx(0x4137CC, "AssignVariant", 0x20);
MakeComm(0x4137CC, "'procedure AssignVariant(var Dest:Variant; const Source:Variant);'");
MakeCode(0x4137CC);
MakeFunction(0x4137CC, 0x4137DE);
MakeUnkn(0x4137E0, 1);
MakeNameEx(0x4137E0, "SetVariantProp", 0x20);
MakeComm(0x4137E0, "'procedure SetVariantProp(Instance:TObject; PropInfo:PPropInfo; const Value:Variant);'");
MakeCode(0x4137E0);
MakeCode(0x4137F1);
MakeCode(0x413806);
MakeCode(0x41380B);
MakeFunction(0x4137E0, 0x41381D);
MakeUnkn(0x413820, 1);
MakeNameEx(0x413820, "SetMethodProp", 0x20);
MakeComm(0x413820, "'procedure SetMethodProp(Instance:TObject; PropInfo:PPropInfo; const Value:TMethod);'");
MakeCode(0x413820);
MakeCode(0x41383D);
MakeCode(0x413841);
MakeFunction(0x413820, 0x413855);
MakeUnkn(0x413858, 1);
MakeNameEx(0x413858, "SetInt64Prop", 0x20);
MakeComm(0x413858, "'procedure SetInt64Prop(Instance:TObject; PropInfo:PPropInfo; const Value:Int64);'");
MakeCode(0x413858);
MakeCode(0x413878);
MakeCode(0x41387C);
MakeCode(0x41388F);
MakeFunction(0x413858, 0x413893);
MakeUnkn(0x413894, 1);
MakeNameEx(0x413894, "SetInterfaceProp", 0x20);
MakeComm(0x413894, "'procedure SetInterfaceProp(Instance:TObject; PropInfo:PPropInfo; const Value:IInterface);'");
MakeCode(0x413894);
MakeCode(0x4138C3);
MakeCode(0x4138D9);
MakeCode(0x4138DC);
MakeCode(0x4138F5);
MakeCode(0x413900);
MakeFunction(0x413894, 0x413905);
MakeCode(0x413908);
MakeCode(0x413940);
MakeCode(0x41394D);
MakeCode(0x41394E);
MakeCode(0x413953);
MakeFunction(0x413908, 0x413957);
MakeUnkn(0x413958, 1);
MakeNameEx(0x413958, "RTTI_413958_Enumeration_TAlignment", 0);
MakeDword(0x413958);
MakeUnkn(0x41395C, 1);
MakeNameEx(0x41395C, "", 0);
MakeByte(0x41395C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41395D, 0x413968);
MakeByte(0x413968);
MakeDword(0x413969);
MakeDword(0x41396D);
MakeDword(0x413971);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x413975, 0x413983);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x413983, 0x413992);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x413992, 0x41399B);
MakeUnkn(0x4139A4, 1);
MakeNameEx(0x4139A4, "RTTI_4139A4_Enumeration_TLeftRight", 0);
MakeDword(0x4139A4);
MakeUnkn(0x4139A8, 1);
MakeNameEx(0x4139A8, "", 0);
MakeByte(0x4139A8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4139A9, 0x4139B4);
MakeByte(0x4139B4);
MakeDword(0x4139B5);
MakeDword(0x4139B9);
MakeDword(0x4139BD);
MakeUnkn(0x4139CC, 1);
MakeNameEx(0x4139CC, "RTTI_4139CC_Enumeration_TBiDiMode", 0);
MakeDword(0x4139CC);
MakeUnkn(0x4139D0, 1);
MakeNameEx(0x4139D0, "", 0);
MakeByte(0x4139D0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4139D1, 0x4139DB);
MakeByte(0x4139DB);
MakeDword(0x4139DC);
MakeDword(0x4139E0);
MakeDword(0x4139E4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4139E8, 0x4139F6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4139F6, 0x413A04);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x413A04, 0x413A19);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x413A19, 0x413A32);
MakeUnkn(0x413A3C, 1);
MakeNameEx(0x413A3C, "RTTI_413A3C_Enumeration_TVerticalAlignment", 0);
MakeDword(0x413A3C);
MakeUnkn(0x413A40, 1);
MakeNameEx(0x413A40, "", 0);
MakeByte(0x413A40);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x413A41, 0x413A54);
MakeByte(0x413A54);
MakeDword(0x413A55);
MakeDword(0x413A59);
MakeDword(0x413A5D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x413A61, 0x413A6C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x413A6C, 0x413A7A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x413A7A, 0x413A8B);
MakeUnkn(0x413A94, 1);
MakeNameEx(0x413A94, "RTTI_413A94_Enumeration_.1", 0);
MakeDword(0x413A94);
MakeUnkn(0x413A98, 1);
MakeNameEx(0x413A98, "", 0);
MakeByte(0x413A98);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x413A99, 0x413A9C);
MakeByte(0x413A9C);
MakeDword(0x413A9D);
MakeDword(0x413AA1);
MakeDword(0x413AA5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x413AA9, 0x413AB1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x413AB1, 0x413AB7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x413AB7, 0x413ABE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x413ABE, 0x413AC5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x413AC5, 0x413ACD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x413ACD, 0x413AD6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x413AD6, 0x413ADF);
MakeUnkn(0x413AE8, 1);
MakeNameEx(0x413AE8, "RTTI_413AE8_Set_TShiftState", 0);
MakeDword(0x413AE8);
MakeUnkn(0x413AEC, 1);
MakeNameEx(0x413AEC, "", 0);
MakeByte(0x413AEC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x413AED, 0x413AF9);
MakeByte(0x413AF9);
MakeDword(0x413AFA);
MakeUnkn(0x413B00, 1);
MakeNameEx(0x413B00, "RTTI_413B00_Integer_THelpContext", 0);
MakeDword(0x413B00);
MakeUnkn(0x413B04, 1);
MakeNameEx(0x413B04, "", 0);
MakeByte(0x413B04);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x413B05, 0x413B12);
MakeByte(0x413B12);
MakeDword(0x413B13);
MakeDword(0x413B17);
MakeUnkn(0x413B1C, 1);
MakeNameEx(0x413B1C, "RTTI_413B1C_Enumeration_THelpType", 0);
MakeDword(0x413B1C);
MakeUnkn(0x413B20, 1);
MakeNameEx(0x413B20, "", 0);
MakeByte(0x413B20);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x413B21, 0x413B2B);
MakeByte(0x413B2B);
MakeDword(0x413B2C);
MakeDword(0x413B30);
MakeDword(0x413B34);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x413B38, 0x413B42);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x413B42, 0x413B4C);
MakeUnkn(0x413B54, 1);
MakeNameEx(0x413B54, "RTTI_413B54_Integer_TShortCut", 0);
MakeDword(0x413B54);
MakeUnkn(0x413B58, 1);
MakeNameEx(0x413B58, "", 0);
MakeByte(0x413B58);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x413B59, 0x413B63);
MakeByte(0x413B63);
MakeDword(0x413B64);
MakeDword(0x413B68);
MakeUnkn(0x413B6C, 1);
MakeNameEx(0x413B6C, "RTTI_413B6C_Method_TNotifyEvent", 0);
MakeDword(0x413B6C);
MakeUnkn(0x413B70, 1);
MakeNameEx(0x413B70, "", 0);
MakeByte(0x413B70);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x413B71, 0x413B7E);
MakeByte(0x413B7E);
MakeByte(0x413B7F);
MakeByte(0x413B80);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x413B81, 0x413B88);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x413B88, 0x413B90);
MakeByte(0x413B90);
MakeDword(0x413B91);
MakeUnkn(0x413B98, 1);
MakeNameEx(0x413B98, "VMT_413B98_EStreamError", 0);
MakeDword(0x413B98);
MakeDword(0x413B9C);
MakeDword(0x413BA0);
MakeDword(0x413BA4);
MakeDword(0x413BA8);
MakeDword(0x413BAC);
MakeDword(0x413BB0);
MakeDword(0x413BB4);
MakeDword(0x413BB8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x413BE4, 0x413BF1);
MakeDword(0x413BBC);
MakeDword(0x413BC0);
MakeDword(0x413BC4);
MakeDword(0x413BC8);
MakeDword(0x413BCC);
MakeDword(0x413BD0);
MakeDword(0x413BD4);
MakeDword(0x413BD8);
MakeDword(0x413BDC);
MakeDword(0x413BE0);
MakeUnkn(0x413BF4, 1);
MakeNameEx(0x413BF4, "VMT_413BF4_EFileStreamError", 0);
MakeDword(0x413BF4);
MakeDword(0x413BF8);
MakeDword(0x413BFC);
MakeDword(0x413C00);
MakeDword(0x413C04);
MakeDword(0x413C08);
MakeDword(0x413C0C);
MakeDword(0x413C10);
MakeDword(0x413C14);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x413C40, 0x413C51);
MakeDword(0x413C18);
MakeDword(0x413C1C);
MakeDword(0x413C20);
MakeDword(0x413C24);
MakeDword(0x413C28);
MakeDword(0x413C2C);
MakeDword(0x413C30);
MakeDword(0x413C34);
MakeDword(0x413C38);
MakeDword(0x413C3C);
MakeUnkn(0x413C54, 1);
MakeNameEx(0x413C54, "VMT_413C54_EFCreateError", 0);
MakeDword(0x413C54);
MakeDword(0x413C58);
MakeDword(0x413C5C);
MakeDword(0x413C60);
MakeDword(0x413C64);
MakeDword(0x413C68);
MakeDword(0x413C6C);
MakeDword(0x413C70);
MakeDword(0x413C74);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x413CA0, 0x413CAE);
MakeDword(0x413C78);
MakeDword(0x413C7C);
MakeDword(0x413C80);
MakeDword(0x413C84);
MakeDword(0x413C88);
MakeDword(0x413C8C);
MakeDword(0x413C90);
MakeDword(0x413C94);
MakeDword(0x413C98);
MakeDword(0x413C9C);
MakeUnkn(0x413CB0, 1);
MakeNameEx(0x413CB0, "VMT_413CB0_EFOpenError", 0);
MakeDword(0x413CB0);
MakeDword(0x413CB4);
MakeDword(0x413CB8);
MakeDword(0x413CBC);
MakeDword(0x413CC0);
MakeDword(0x413CC4);
MakeDword(0x413CC8);
MakeDword(0x413CCC);
MakeDword(0x413CD0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x413CFC, 0x413D08);
MakeDword(0x413CD4);
MakeDword(0x413CD8);
MakeDword(0x413CDC);
MakeDword(0x413CE0);
MakeDword(0x413CE4);
MakeDword(0x413CE8);
MakeDword(0x413CEC);
MakeDword(0x413CF0);
MakeDword(0x413CF4);
MakeDword(0x413CF8);
MakeUnkn(0x413D08, 1);
MakeNameEx(0x413D08, "VMT_413D08_EFilerError", 0);
MakeDword(0x413D08);
MakeDword(0x413D0C);
MakeDword(0x413D10);
MakeDword(0x413D14);
MakeDword(0x413D18);
MakeDword(0x413D1C);
MakeDword(0x413D20);
MakeDword(0x413D24);
MakeDword(0x413D28);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x413D54, 0x413D60);
MakeDword(0x413D2C);
MakeDword(0x413D30);
MakeDword(0x413D34);
MakeDword(0x413D38);
MakeDword(0x413D3C);
MakeDword(0x413D40);
MakeDword(0x413D44);
MakeDword(0x413D48);
MakeDword(0x413D4C);
MakeDword(0x413D50);
MakeUnkn(0x413D60, 1);
MakeNameEx(0x413D60, "VMT_413D60_EReadError", 0);
MakeDword(0x413D60);
MakeDword(0x413D64);
MakeDword(0x413D68);
MakeDword(0x413D6C);
MakeDword(0x413D70);
MakeDword(0x413D74);
MakeDword(0x413D78);
MakeDword(0x413D7C);
MakeDword(0x413D80);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x413DAC, 0x413DB7);
MakeDword(0x413D84);
MakeDword(0x413D88);
MakeDword(0x413D8C);
MakeDword(0x413D90);
MakeDword(0x413D94);
MakeDword(0x413D98);
MakeDword(0x413D9C);
MakeDword(0x413DA0);
MakeDword(0x413DA4);
MakeDword(0x413DA8);
MakeUnkn(0x413DB8, 1);
MakeNameEx(0x413DB8, "VMT_413DB8_EWriteError", 0);
MakeDword(0x413DB8);
MakeDword(0x413DBC);
MakeDword(0x413DC0);
MakeDword(0x413DC4);
MakeDword(0x413DC8);
MakeDword(0x413DCC);
MakeDword(0x413DD0);
MakeDword(0x413DD4);
MakeDword(0x413DD8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x413E04, 0x413E10);
MakeDword(0x413DDC);
MakeDword(0x413DE0);
MakeDword(0x413DE4);
MakeDword(0x413DE8);
MakeDword(0x413DEC);
MakeDword(0x413DF0);
MakeDword(0x413DF4);
MakeDword(0x413DF8);
MakeDword(0x413DFC);
MakeDword(0x413E00);
MakeUnkn(0x413E10, 1);
MakeNameEx(0x413E10, "VMT_413E10_EClassNotFound", 0);
MakeDword(0x413E10);
MakeDword(0x413E14);
MakeDword(0x413E18);
MakeDword(0x413E1C);
MakeDword(0x413E20);
MakeDword(0x413E24);
MakeDword(0x413E28);
MakeDword(0x413E2C);
MakeDword(0x413E30);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x413E5C, 0x413E6B);
MakeDword(0x413E34);
MakeDword(0x413E38);
MakeDword(0x413E3C);
MakeDword(0x413E40);
MakeDword(0x413E44);
MakeDword(0x413E48);
MakeDword(0x413E4C);
MakeDword(0x413E50);
MakeDword(0x413E54);
MakeDword(0x413E58);
MakeUnkn(0x413E6C, 1);
MakeNameEx(0x413E6C, "VMT_413E6C_EResNotFound", 0);
MakeDword(0x413E6C);
MakeDword(0x413E70);
MakeDword(0x413E74);
MakeDword(0x413E78);
MakeDword(0x413E7C);
MakeDword(0x413E80);
MakeDword(0x413E84);
MakeDword(0x413E88);
MakeDword(0x413E8C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x413EB8, 0x413EC5);
MakeDword(0x413E90);
MakeDword(0x413E94);
MakeDword(0x413E98);
MakeDword(0x413E9C);
MakeDword(0x413EA0);
MakeDword(0x413EA4);
MakeDword(0x413EA8);
MakeDword(0x413EAC);
MakeDword(0x413EB0);
MakeDword(0x413EB4);
MakeUnkn(0x413EC8, 1);
MakeNameEx(0x413EC8, "VMT_413EC8_EListError", 0);
MakeDword(0x413EC8);
MakeDword(0x413ECC);
MakeDword(0x413ED0);
MakeDword(0x413ED4);
MakeDword(0x413ED8);
MakeDword(0x413EDC);
MakeDword(0x413EE0);
MakeDword(0x413EE4);
MakeDword(0x413EE8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x413F14, 0x413F1F);
MakeDword(0x413EEC);
MakeDword(0x413EF0);
MakeDword(0x413EF4);
MakeDword(0x413EF8);
MakeDword(0x413EFC);
MakeDword(0x413F00);
MakeDword(0x413F04);
MakeDword(0x413F08);
MakeDword(0x413F0C);
MakeDword(0x413F10);
MakeUnkn(0x413F20, 1);
MakeNameEx(0x413F20, "VMT_413F20_EBitsError", 0);
MakeDword(0x413F20);
MakeDword(0x413F24);
MakeDword(0x413F28);
MakeDword(0x413F2C);
MakeDword(0x413F30);
MakeDword(0x413F34);
MakeDword(0x413F38);
MakeDword(0x413F3C);
MakeDword(0x413F40);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x413F6C, 0x413F77);
MakeDword(0x413F44);
MakeDword(0x413F48);
MakeDword(0x413F4C);
MakeDword(0x413F50);
MakeDword(0x413F54);
MakeDword(0x413F58);
MakeDword(0x413F5C);
MakeDword(0x413F60);
MakeDword(0x413F64);
MakeDword(0x413F68);
MakeUnkn(0x413F78, 1);
MakeNameEx(0x413F78, "VMT_413F78_EStringListError", 0);
MakeDword(0x413F78);
MakeDword(0x413F7C);
MakeDword(0x413F80);
MakeDword(0x413F84);
MakeDword(0x413F88);
MakeDword(0x413F8C);
MakeDword(0x413F90);
MakeDword(0x413F94);
MakeDword(0x413F98);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x413FC4, 0x413FD5);
MakeDword(0x413F9C);
MakeDword(0x413FA0);
MakeDword(0x413FA4);
MakeDword(0x413FA8);
MakeDword(0x413FAC);
MakeDword(0x413FB0);
MakeDword(0x413FB4);
MakeDword(0x413FB8);
MakeDword(0x413FBC);
MakeDword(0x413FC0);
MakeUnkn(0x413FD8, 1);
MakeNameEx(0x413FD8, "VMT_413FD8_EComponentError", 0);
MakeDword(0x413FD8);
MakeDword(0x413FDC);
MakeDword(0x413FE0);
MakeDword(0x413FE4);
MakeDword(0x413FE8);
MakeDword(0x413FEC);
MakeDword(0x413FF0);
MakeDword(0x413FF4);
MakeDword(0x413FF8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x414024, 0x414034);
MakeDword(0x413FFC);
MakeDword(0x414000);
MakeDword(0x414004);
MakeDword(0x414008);
MakeDword(0x41400C);
MakeDword(0x414010);
MakeDword(0x414014);
MakeDword(0x414018);
MakeDword(0x41401C);
MakeDword(0x414020);
MakeUnkn(0x414034, 1);
MakeNameEx(0x414034, "VMT_414034_EOutOfResources", 0);
MakeDword(0x414034);
MakeDword(0x414038);
MakeDword(0x41403C);
MakeDword(0x414040);
MakeDword(0x414044);
MakeDword(0x414048);
MakeDword(0x41404C);
MakeDword(0x414050);
MakeDword(0x414054);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x414080, 0x414090);
MakeDword(0x414058);
MakeDword(0x41405C);
MakeDword(0x414060);
MakeDword(0x414064);
MakeDword(0x414068);
MakeDword(0x41406C);
MakeDword(0x414070);
MakeDword(0x414074);
MakeDword(0x414078);
MakeDword(0x41407C);
MakeUnkn(0x414090, 1);
MakeNameEx(0x414090, "VMT_414090_EInvalidOperation", 0);
MakeDword(0x414090);
MakeDword(0x414094);
MakeDword(0x414098);
MakeDword(0x41409C);
MakeDword(0x4140A0);
MakeDword(0x4140A4);
MakeDword(0x4140A8);
MakeDword(0x4140AC);
MakeDword(0x4140B0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4140DC, 0x4140EE);
MakeDword(0x4140B4);
MakeDword(0x4140B8);
MakeDword(0x4140BC);
MakeDword(0x4140C0);
MakeDword(0x4140C4);
MakeDword(0x4140C8);
MakeDword(0x4140CC);
MakeDword(0x4140D0);
MakeDword(0x4140D4);
MakeDword(0x4140D8);
MakeUnkn(0x4140F0, 1);
MakeNameEx(0x4140F0, "VMT_4140F0_TList", 0);
MakeDword(0x4140F0);
MakeDword(0x4140F4);
MakeDword(0x4140F8);
MakeDword(0x4140FC);
MakeDword(0x414100);
MakeDword(0x414104);
MakeDword(0x414108);
MakeDword(0x41410C);
MakeDword(0x414110);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41414C, 0x414152);
MakeDword(0x414114);
MakeDword(0x414118);
MakeDword(0x41411C);
MakeDword(0x414120);
MakeDword(0x414124);
MakeDword(0x414128);
MakeDword(0x41412C);
MakeDword(0x414130);
MakeDword(0x414134);
MakeDword(0x414138);
MakeComm(0x41413C, "'+0'");
MakeDword(0x41413C);
MakeComm(0x414140, "'+4'");
MakeDword(0x414140);
MakeComm(0x414144, "'+8'");
MakeDword(0x414144);
MakeComm(0x414148, "'+C'");
MakeDword(0x414148);
MakeUnkn(0x414154, 1);
MakeNameEx(0x414154, "VMT_414154_TThreadList", 0);
MakeDword(0x414154);
MakeDword(0x414158);
MakeDword(0x41415C);
MakeDword(0x414160);
MakeDword(0x414164);
MakeDword(0x414168);
MakeDword(0x41416C);
MakeDword(0x414170);
MakeDword(0x414174);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4141A0, 0x4141AC);
MakeDword(0x414178);
MakeDword(0x41417C);
MakeDword(0x414180);
MakeDword(0x414184);
MakeDword(0x414188);
MakeDword(0x41418C);
MakeDword(0x414190);
MakeDword(0x414194);
MakeDword(0x414198);
MakeDword(0x41419C);
MakeUnkn(0x4141AC, 1);
MakeNameEx(0x4141AC, "VMT_4141AC_TBits", 0);
MakeDword(0x4141AC);
MakeDword(0x4141B0);
MakeDword(0x4141B4);
MakeDword(0x4141B8);
MakeDword(0x4141BC);
MakeDword(0x4141C0);
MakeDword(0x4141C4);
MakeDword(0x4141C8);
MakeDword(0x4141CC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4141F8, 0x4141FE);
MakeDword(0x4141D0);
MakeDword(0x4141D4);
MakeDword(0x4141D8);
MakeDword(0x4141DC);
MakeDword(0x4141E0);
MakeDword(0x4141E4);
MakeDword(0x4141E8);
MakeDword(0x4141EC);
MakeDword(0x4141F0);
MakeDword(0x4141F4);
MakeUnkn(0x414200, 1);
MakeNameEx(0x414200, "VMT_414200_TPersistent", 0);
MakeDword(0x414200);
MakeDword(0x414204);
MakeDword(0x414208);
MakeDword(0x41420C);
MakeDword(0x414210);
MakeDword(0x414214);
MakeDword(0x414218);
MakeDword(0x41421C);
MakeUnkn(0x414258, 1);
MakeNameEx(0x414258, "TPersistent_DynamicTable", 0);
MakeWord(0x414258);
MakeWord(0x41425A);
MakeWord(0x41425C);
MakeDword(0x41425E);
MakeDword(0x414262);
MakeDword(0x414220);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x414266, 0x414272);
MakeDword(0x414224);
MakeDword(0x414228);
MakeDword(0x41422C);
MakeDword(0x414230);
MakeDword(0x414234);
MakeDword(0x414238);
MakeDword(0x41423C);
MakeDword(0x414240);
MakeDword(0x414244);
MakeDword(0x414248);
MakeComm(0x41424C, "'+0'");
MakeDword(0x41424C);
MakeComm(0x414250, "'+4'");
MakeDword(0x414250);
MakeComm(0x414254, "'+8'");
MakeDword(0x414254);
MakeUnkn(0x414274, 1);
MakeNameEx(0x414274, "RTTI_414274_Class_TPersistent", 0);
MakeDword(0x414274);
MakeUnkn(0x414278, 1);
MakeNameEx(0x414278, "", 0);
MakeByte(0x414278);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x414279, 0x414285);
MakeDword(0x414285);
MakeDword(0x414289);
MakeWord(0x41428D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41428F, 0x414297);
MakeWord(0x414297);
MakeUnkn(0x4142F0, 1);
MakeNameEx(0x4142F0, "VMT_4142F0_TInterfacedPersistent", 0);
MakeDword(0x4142F0);
MakeDword(0x4142F4);
MakeUnkn(0x4142CD, 1);
MakeNameEx(0x4142CD, "TInterfacedPersistent_IntfTable", 0);
MakeDword(0x4142CD);
MakeByte(0x4142D1);
MakeArray(0x4142D1, 16);
MakeDword(0x4142E1);
MakeDword(0x4142C1);
MakeFunction(0x41429D, -1);
MakeCode(0x41429D);
MakeDword(0x4142C5);
MakeFunction(0x4142AB, -1);
MakeCode(0x4142AB);
MakeDword(0x4142C9);
MakeFunction(0x4142B5, -1);
MakeCode(0x4142B5);
MakeByte(0x41429C);
MakeDword(0x4142E5);
MakeDword(0x4142E9);
MakeDword(0x4142F8);
MakeDword(0x4142FC);
MakeUnkn(0x41434C, 1);
MakeNameEx(0x41434C, "TInterfacedPersistent_InitTable", 0);
MakeByte(0x41434C);
MakeByte(0x41434D);
MakeDword(0x41434E);
MakeDword(0x414352);
MakeDword(0x414356);
MakeDword(0x41435A);
MakeDword(0x414300);
MakeDword(0x414304);
MakeDword(0x414308);
MakeDword(0x41430C);
MakeDword(0x414310);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41435E, 0x414374);
MakeDword(0x414314);
MakeDword(0x414318);
MakeDword(0x41431C);
MakeDword(0x414320);
MakeDword(0x414324);
MakeDword(0x414328);
MakeDword(0x41432C);
MakeDword(0x414330);
MakeDword(0x414334);
MakeDword(0x414338);
MakeComm(0x41433C, "'+0'");
MakeDword(0x41433C);
MakeComm(0x414340, "'+4'");
MakeDword(0x414340);
MakeComm(0x414344, "'+8'");
MakeDword(0x414344);
MakeComm(0x414348, "'+C'");
MakeDword(0x414348);
MakeUnkn(0x414374, 1);
MakeNameEx(0x414374, "RTTI_414374_Class_TInterfacedPersistent", 0);
MakeDword(0x414374);
MakeUnkn(0x414378, 1);
MakeNameEx(0x414378, "", 0);
MakeByte(0x414378);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x414379, 0x41438F);
MakeDword(0x41438F);
MakeDword(0x414393);
MakeWord(0x414397);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x414399, 0x4143A1);
MakeWord(0x4143A1);
MakeUnkn(0x4143A4, 1);
MakeNameEx(0x4143A4, "VMT_4143A4_TCollectionItem", 0);
MakeDword(0x4143A4);
MakeDword(0x4143A8);
MakeDword(0x4143AC);
MakeDword(0x4143B0);
MakeDword(0x4143B4);
MakeDword(0x4143B8);
MakeDword(0x4143BC);
MakeDword(0x4143C0);
MakeUnkn(0x414410, 1);
MakeNameEx(0x414410, "TCollectionItem_DynamicTable", 0);
MakeWord(0x414410);
MakeWord(0x414412);
MakeWord(0x414414);
MakeDword(0x414416);
MakeDword(0x41441A);
MakeDword(0x4143C4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41441E, 0x41442E);
MakeDword(0x4143C8);
MakeDword(0x4143CC);
MakeDword(0x4143D0);
MakeDword(0x4143D4);
MakeDword(0x4143D8);
MakeDword(0x4143DC);
MakeDword(0x4143E0);
MakeDword(0x4143E4);
MakeDword(0x4143E8);
MakeDword(0x4143EC);
MakeComm(0x4143F0, "'+0'");
MakeDword(0x4143F0);
MakeComm(0x4143F4, "'+4'");
MakeDword(0x4143F4);
MakeComm(0x4143F8, "'+8'");
MakeDword(0x4143F8);
MakeComm(0x4143FC, "'+C'");
MakeDword(0x4143FC);
MakeComm(0x414400, "'+10'");
MakeDword(0x414400);
MakeComm(0x414404, "'+14'");
MakeDword(0x414404);
MakeComm(0x414408, "'+18'");
MakeDword(0x414408);
MakeComm(0x41440C, "'+1C'");
MakeDword(0x41440C);
MakeUnkn(0x414430, 1);
MakeNameEx(0x414430, "RTTI_414430_Class_TCollectionItem", 0);
MakeDword(0x414430);
MakeUnkn(0x414434, 1);
MakeNameEx(0x414434, "", 0);
MakeByte(0x414434);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x414435, 0x414445);
MakeDword(0x414445);
MakeDword(0x414449);
MakeWord(0x41444D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41444F, 0x414457);
MakeWord(0x414457);
MakeUnkn(0x41445C, 1);
MakeNameEx(0x41445C, "VMT_41445C_TCollection", 0);
MakeDword(0x41445C);
MakeDword(0x414460);
MakeDword(0x414464);
MakeDword(0x414468);
MakeUnkn(0x4144D0, 1);
MakeNameEx(0x4144D0, "TCollection_InitTable", 0);
MakeByte(0x4144D0);
MakeByte(0x4144D1);
MakeDword(0x4144D2);
MakeDword(0x4144D6);
MakeDword(0x4144DA);
MakeDword(0x4144DE);
MakeDword(0x41446C);
MakeDword(0x414470);
MakeDword(0x414474);
MakeDword(0x414478);
MakeUnkn(0x4144E2, 1);
MakeNameEx(0x4144E2, "TCollection_DynamicTable", 0);
MakeWord(0x4144E2);
MakeWord(0x4144E4);
MakeWord(0x4144E6);
MakeWord(0x4144E8);
MakeWord(0x4144EA);
MakeDword(0x4144EC);
MakeDword(0x4144F0);
MakeDword(0x4144F4);
MakeDword(0x4144F8);
MakeDword(0x41447C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4144FC, 0x414508);
MakeDword(0x414480);
MakeDword(0x414484);
MakeDword(0x414488);
MakeDword(0x41448C);
MakeDword(0x414490);
MakeDword(0x414494);
MakeDword(0x414498);
MakeDword(0x41449C);
MakeDword(0x4144A0);
MakeDword(0x4144A4);
MakeComm(0x4144A8, "'+0'");
MakeDword(0x4144A8);
MakeComm(0x4144AC, "'+4'");
MakeDword(0x4144AC);
MakeComm(0x4144B0, "'+8'");
MakeDword(0x4144B0);
MakeComm(0x4144B4, "'+C'");
MakeDword(0x4144B4);
MakeComm(0x4144B8, "'+10'");
MakeDword(0x4144B8);
MakeComm(0x4144BC, "'+14'");
MakeDword(0x4144BC);
MakeComm(0x4144C0, "'+18'");
MakeDword(0x4144C0);
MakeComm(0x4144C4, "'+1C'");
MakeDword(0x4144C4);
MakeComm(0x4144C8, "'+20'");
MakeDword(0x4144C8);
MakeComm(0x4144CC, "'+24'");
MakeDword(0x4144CC);
MakeUnkn(0x414508, 1);
MakeNameEx(0x414508, "RTTI_414508_Class_TCollection", 0);
MakeDword(0x414508);
MakeUnkn(0x41450C, 1);
MakeNameEx(0x41450C, "", 0);
MakeByte(0x41450C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41450D, 0x414519);
MakeDword(0x414519);
MakeDword(0x41451D);
MakeWord(0x414521);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x414523, 0x41452B);
MakeWord(0x41452B);
MakeUnkn(0x414530, 1);
MakeNameEx(0x414530, "RTTI_414530_Interface_IStringsAdapter", 0);
MakeDword(0x414530);
MakeUnkn(0x414534, 1);
MakeNameEx(0x414534, "", 0);
MakeByte(0x414534);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x414535, 0x414545);
MakeDword(0x414545);
MakeByte(0x414549);
MakeByte(0x41454A);
MakeArray(0x41454A, 16);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41455A, 0x414562);
MakeWord(0x414562);
MakeWord(0x414564);
MakeUnkn(0x414568, 1);
MakeNameEx(0x414568, "VMT_414568_TStrings", 0);
MakeDword(0x414568);
MakeDword(0x41456C);
MakeDword(0x414570);
MakeDword(0x414574);
MakeUnkn(0x414634, 1);
MakeNameEx(0x414634, "TStrings_InitTable", 0);
MakeByte(0x414634);
MakeByte(0x414635);
MakeDword(0x414636);
MakeDword(0x41463A);
MakeDword(0x41463E);
MakeDword(0x414642);
MakeDword(0x414646);
MakeDword(0x41464A);
MakeDword(0x414578);
MakeDword(0x41457C);
MakeDword(0x414580);
MakeDword(0x414584);
MakeDword(0x414588);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41464E, 0x414657);
MakeDword(0x41458C);
MakeDword(0x414590);
MakeDword(0x414594);
MakeDword(0x414598);
MakeDword(0x41459C);
MakeDword(0x4145A0);
MakeDword(0x4145A4);
MakeDword(0x4145A8);
MakeDword(0x4145AC);
MakeDword(0x4145B0);
MakeComm(0x4145B4, "'+0'");
MakeDword(0x4145B4);
MakeComm(0x4145B8, "'+4'");
MakeDword(0x4145B8);
MakeComm(0x4145BC, "'+8'");
MakeDword(0x4145BC);
MakeComm(0x4145C0, "'+C'");
MakeDword(0x4145C0);
MakeComm(0x4145C4, "'+10'");
MakeDword(0x4145C4);
MakeComm(0x4145C8, "'+14'");
MakeDword(0x4145C8);
MakeComm(0x4145CC, "'+18'");
MakeDword(0x4145CC);
MakeComm(0x4145D0, "'+1C'");
MakeDword(0x4145D0);
MakeComm(0x4145D4, "'+20'");
MakeDword(0x4145D4);
MakeComm(0x4145D8, "'+24'");
MakeDword(0x4145D8);
MakeComm(0x4145DC, "'+28'");
MakeDword(0x4145DC);
MakeComm(0x4145E0, "'+2C'");
MakeDword(0x4145E0);
MakeComm(0x4145E4, "'+30'");
MakeDword(0x4145E4);
MakeComm(0x4145E8, "'+34'");
MakeDword(0x4145E8);
MakeComm(0x4145EC, "'+38'");
MakeDword(0x4145EC);
MakeComm(0x4145F0, "'+3C'");
MakeDword(0x4145F0);
MakeComm(0x4145F4, "'+40'");
MakeDword(0x4145F4);
MakeComm(0x4145F8, "'+44'");
MakeDword(0x4145F8);
MakeComm(0x4145FC, "'+48'");
MakeDword(0x4145FC);
MakeComm(0x414600, "'+4C'");
MakeDword(0x414600);
MakeComm(0x414604, "'+50'");
MakeDword(0x414604);
MakeComm(0x414608, "'+54'");
MakeDword(0x414608);
MakeComm(0x41460C, "'+58'");
MakeDword(0x41460C);
MakeComm(0x414610, "'+5C'");
MakeDword(0x414610);
MakeComm(0x414614, "'+60'");
MakeDword(0x414614);
MakeComm(0x414618, "'+64'");
MakeDword(0x414618);
MakeComm(0x41461C, "'+68'");
MakeDword(0x41461C);
MakeComm(0x414620, "'+6C'");
MakeDword(0x414620);
MakeComm(0x414624, "'+70'");
MakeDword(0x414624);
MakeComm(0x414628, "'+74'");
MakeDword(0x414628);
MakeComm(0x41462C, "'+78'");
MakeDword(0x41462C);
MakeComm(0x414630, "'+7C'");
MakeDword(0x414630);
MakeUnkn(0x414658, 1);
MakeNameEx(0x414658, "RTTI_414658_Class_TStrings", 0);
MakeDword(0x414658);
MakeUnkn(0x41465C, 1);
MakeNameEx(0x41465C, "", 0);
MakeByte(0x41465C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41465D, 0x414666);
MakeDword(0x414666);
MakeDword(0x41466A);
MakeWord(0x41466E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x414670, 0x414678);
MakeWord(0x414678);
MakeUnkn(0x41467C, 1);
MakeNameEx(0x41467C, "RTTI_41467C_Record_TStringItem", 0);
MakeDword(0x41467C);
MakeUnkn(0x414680, 1);
MakeNameEx(0x414680, "", 0);
MakeByte(0x414680);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x414681, 0x41468D);
MakeDword(0x41468D);
MakeDword(0x414691);
MakeDword(0x414695);
MakeDword(0x414699);
MakeUnkn(0x4146A0, 1);
MakeNameEx(0x4146A0, "VMT_4146A0_TStringList", 0);
MakeDword(0x4146A0);
MakeDword(0x4146A4);
MakeDword(0x4146A8);
MakeDword(0x4146AC);
MakeDword(0x4146B0);
MakeDword(0x4146B4);
MakeDword(0x4146B8);
MakeDword(0x4146BC);
MakeDword(0x4146C0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x414784, 0x414790);
MakeDword(0x4146C4);
MakeDword(0x4146C8);
MakeDword(0x4146CC);
MakeDword(0x4146D0);
MakeDword(0x4146D4);
MakeDword(0x4146D8);
MakeDword(0x4146DC);
MakeDword(0x4146E0);
MakeDword(0x4146E4);
MakeDword(0x4146E8);
MakeComm(0x4146EC, "'+0'");
MakeDword(0x4146EC);
MakeComm(0x4146F0, "'+4'");
MakeDword(0x4146F0);
MakeComm(0x4146F4, "'+8'");
MakeDword(0x4146F4);
MakeComm(0x4146F8, "'+C'");
MakeDword(0x4146F8);
MakeComm(0x4146FC, "'+10'");
MakeDword(0x4146FC);
MakeComm(0x414700, "'+14'");
MakeDword(0x414700);
MakeComm(0x414704, "'+18'");
MakeDword(0x414704);
MakeComm(0x414708, "'+1C'");
MakeDword(0x414708);
MakeComm(0x41470C, "'+20'");
MakeDword(0x41470C);
MakeComm(0x414710, "'+24'");
MakeDword(0x414710);
MakeComm(0x414714, "'+28'");
MakeDword(0x414714);
MakeComm(0x414718, "'+2C'");
MakeDword(0x414718);
MakeComm(0x41471C, "'+30'");
MakeDword(0x41471C);
MakeComm(0x414720, "'+34'");
MakeDword(0x414720);
MakeComm(0x414724, "'+38'");
MakeDword(0x414724);
MakeComm(0x414728, "'+3C'");
MakeDword(0x414728);
MakeComm(0x41472C, "'+40'");
MakeDword(0x41472C);
MakeComm(0x414730, "'+44'");
MakeDword(0x414730);
MakeComm(0x414734, "'+48'");
MakeDword(0x414734);
MakeComm(0x414738, "'+4C'");
MakeDword(0x414738);
MakeComm(0x41473C, "'+50'");
MakeDword(0x41473C);
MakeComm(0x414740, "'+54'");
MakeDword(0x414740);
MakeComm(0x414744, "'+58'");
MakeDword(0x414744);
MakeComm(0x414748, "'+5C'");
MakeDword(0x414748);
MakeComm(0x41474C, "'+60'");
MakeDword(0x41474C);
MakeComm(0x414750, "'+64'");
MakeDword(0x414750);
MakeComm(0x414754, "'+68'");
MakeDword(0x414754);
MakeComm(0x414758, "'+6C'");
MakeDword(0x414758);
MakeComm(0x41475C, "'+70'");
MakeDword(0x41475C);
MakeComm(0x414760, "'+74'");
MakeDword(0x414760);
MakeComm(0x414764, "'+78'");
MakeDword(0x414764);
MakeComm(0x414768, "'+7C'");
MakeDword(0x414768);
MakeComm(0x41476C, "'+80'");
MakeDword(0x41476C);
MakeComm(0x414770, "'+84'");
MakeDword(0x414770);
MakeComm(0x414774, "'+88'");
MakeDword(0x414774);
MakeComm(0x414778, "'+8C'");
MakeDword(0x414778);
MakeComm(0x41477C, "'+90'");
MakeDword(0x41477C);
MakeComm(0x414780, "'+94'");
MakeDword(0x414780);
MakeUnkn(0x414790, 1);
MakeNameEx(0x414790, "RTTI_414790_Class_TStringList", 0);
MakeDword(0x414790);
MakeUnkn(0x414794, 1);
MakeNameEx(0x414794, "", 0);
MakeByte(0x414794);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x414795, 0x4147A1);
MakeDword(0x4147A1);
MakeDword(0x4147A5);
MakeWord(0x4147A9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4147AB, 0x4147B3);
MakeWord(0x4147B3);
MakeUnkn(0x4147B8, 1);
MakeNameEx(0x4147B8, "VMT_4147B8_TStream", 0);
MakeDword(0x4147B8);
MakeDword(0x4147BC);
MakeDword(0x4147C0);
MakeDword(0x4147C4);
MakeDword(0x4147C8);
MakeDword(0x4147CC);
MakeDword(0x4147D0);
MakeDword(0x4147D4);
MakeDword(0x4147D8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x414820, 0x414828);
MakeDword(0x4147DC);
MakeDword(0x4147E0);
MakeDword(0x4147E4);
MakeDword(0x4147E8);
MakeDword(0x4147EC);
MakeDword(0x4147F0);
MakeDword(0x4147F4);
MakeDword(0x4147F8);
MakeDword(0x4147FC);
MakeDword(0x414800);
MakeComm(0x414804, "'+0'");
MakeDword(0x414804);
MakeComm(0x414808, "'+4'");
MakeDword(0x414808);
MakeComm(0x41480C, "'+8'");
MakeDword(0x41480C);
MakeComm(0x414810, "'+C'");
MakeDword(0x414810);
MakeComm(0x414814, "'+10'");
MakeDword(0x414814);
MakeComm(0x414818, "'+14'");
MakeDword(0x414818);
MakeComm(0x41481C, "'+18'");
MakeDword(0x41481C);
MakeUnkn(0x414828, 1);
MakeNameEx(0x414828, "VMT_414828_THandleStream", 0);
MakeDword(0x414828);
MakeDword(0x41482C);
MakeDword(0x414830);
MakeDword(0x414834);
MakeDword(0x414838);
MakeDword(0x41483C);
MakeDword(0x414840);
MakeDword(0x414844);
MakeDword(0x414848);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x414890, 0x41489E);
MakeDword(0x41484C);
MakeDword(0x414850);
MakeDword(0x414854);
MakeDword(0x414858);
MakeDword(0x41485C);
MakeDword(0x414860);
MakeDword(0x414864);
MakeDword(0x414868);
MakeDword(0x41486C);
MakeDword(0x414870);
MakeComm(0x414874, "'+0'");
MakeDword(0x414874);
MakeComm(0x414878, "'+4'");
MakeDword(0x414878);
MakeComm(0x41487C, "'+8'");
MakeDword(0x41487C);
MakeComm(0x414880, "'+C'");
MakeDword(0x414880);
MakeComm(0x414884, "'+10'");
MakeDword(0x414884);
MakeComm(0x414888, "'+14'");
MakeDword(0x414888);
MakeComm(0x41488C, "'+18'");
MakeDword(0x41488C);
MakeUnkn(0x4148A0, 1);
MakeNameEx(0x4148A0, "VMT_4148A0_TFileStream", 0);
MakeDword(0x4148A0);
MakeDword(0x4148A4);
MakeDword(0x4148A8);
MakeDword(0x4148AC);
MakeUnkn(0x414908, 1);
MakeNameEx(0x414908, "TFileStream_InitTable", 0);
MakeByte(0x414908);
MakeByte(0x414909);
MakeDword(0x41490A);
MakeDword(0x41490E);
MakeDword(0x414912);
MakeDword(0x414916);
MakeDword(0x4148B0);
MakeDword(0x4148B4);
MakeDword(0x4148B8);
MakeDword(0x4148BC);
MakeDword(0x4148C0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41491A, 0x414926);
MakeDword(0x4148C4);
MakeDword(0x4148C8);
MakeDword(0x4148CC);
MakeDword(0x4148D0);
MakeDword(0x4148D4);
MakeDword(0x4148D8);
MakeDword(0x4148DC);
MakeDword(0x4148E0);
MakeDword(0x4148E4);
MakeDword(0x4148E8);
MakeComm(0x4148EC, "'+0'");
MakeDword(0x4148EC);
MakeComm(0x4148F0, "'+4'");
MakeDword(0x4148F0);
MakeComm(0x4148F4, "'+8'");
MakeDword(0x4148F4);
MakeComm(0x4148F8, "'+C'");
MakeDword(0x4148F8);
MakeComm(0x4148FC, "'+10'");
MakeDword(0x4148FC);
MakeComm(0x414900, "'+14'");
MakeDword(0x414900);
MakeComm(0x414904, "'+18'");
MakeDword(0x414904);
MakeUnkn(0x414928, 1);
MakeNameEx(0x414928, "VMT_414928_TCustomMemoryStream", 0);
MakeDword(0x414928);
MakeDword(0x41492C);
MakeDword(0x414930);
MakeDword(0x414934);
MakeDword(0x414938);
MakeDword(0x41493C);
MakeDword(0x414940);
MakeDword(0x414944);
MakeDword(0x414948);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x414990, 0x4149A4);
MakeDword(0x41494C);
MakeDword(0x414950);
MakeDword(0x414954);
MakeDword(0x414958);
MakeDword(0x41495C);
MakeDword(0x414960);
MakeDword(0x414964);
MakeDword(0x414968);
MakeDword(0x41496C);
MakeDword(0x414970);
MakeComm(0x414974, "'+0'");
MakeDword(0x414974);
MakeComm(0x414978, "'+4'");
MakeDword(0x414978);
MakeComm(0x41497C, "'+8'");
MakeDword(0x41497C);
MakeComm(0x414980, "'+C'");
MakeDword(0x414980);
MakeComm(0x414984, "'+10'");
MakeDword(0x414984);
MakeComm(0x414988, "'+14'");
MakeDword(0x414988);
MakeComm(0x41498C, "'+18'");
MakeDword(0x41498C);
MakeUnkn(0x4149A4, 1);
MakeNameEx(0x4149A4, "VMT_4149A4_TMemoryStream", 0);
MakeDword(0x4149A4);
MakeDword(0x4149A8);
MakeDword(0x4149AC);
MakeDword(0x4149B0);
MakeDword(0x4149B4);
MakeDword(0x4149B8);
MakeDword(0x4149BC);
MakeDword(0x4149C0);
MakeDword(0x4149C4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x414A10, 0x414A1E);
MakeDword(0x4149C8);
MakeDword(0x4149CC);
MakeDword(0x4149D0);
MakeDword(0x4149D4);
MakeDword(0x4149D8);
MakeDword(0x4149DC);
MakeDword(0x4149E0);
MakeDword(0x4149E4);
MakeDword(0x4149E8);
MakeDword(0x4149EC);
MakeComm(0x4149F0, "'+0'");
MakeDword(0x4149F0);
MakeComm(0x4149F4, "'+4'");
MakeDword(0x4149F4);
MakeComm(0x4149F8, "'+8'");
MakeDword(0x4149F8);
MakeComm(0x4149FC, "'+C'");
MakeDword(0x4149FC);
MakeComm(0x414A00, "'+10'");
MakeDword(0x414A00);
MakeComm(0x414A04, "'+14'");
MakeDword(0x414A04);
MakeComm(0x414A08, "'+18'");
MakeDword(0x414A08);
MakeComm(0x414A0C, "'+1C'");
MakeDword(0x414A0C);
MakeUnkn(0x414A20, 1);
MakeNameEx(0x414A20, "VMT_414A20_TResourceStream", 0);
MakeDword(0x414A20);
MakeDword(0x414A24);
MakeDword(0x414A28);
MakeDword(0x414A2C);
MakeDword(0x414A30);
MakeDword(0x414A34);
MakeDword(0x414A38);
MakeDword(0x414A3C);
MakeDword(0x414A40);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x414A88, 0x414A98);
MakeDword(0x414A44);
MakeDword(0x414A48);
MakeDword(0x414A4C);
MakeDword(0x414A50);
MakeDword(0x414A54);
MakeDword(0x414A58);
MakeDword(0x414A5C);
MakeDword(0x414A60);
MakeDword(0x414A64);
MakeDword(0x414A68);
MakeComm(0x414A6C, "'+0'");
MakeDword(0x414A6C);
MakeComm(0x414A70, "'+4'");
MakeDword(0x414A70);
MakeComm(0x414A74, "'+8'");
MakeDword(0x414A74);
MakeComm(0x414A78, "'+C'");
MakeDword(0x414A78);
MakeComm(0x414A7C, "'+10'");
MakeDword(0x414A7C);
MakeComm(0x414A80, "'+14'");
MakeDword(0x414A80);
MakeComm(0x414A84, "'+18'");
MakeDword(0x414A84);
MakeUnkn(0x414BAC, 1);
MakeNameEx(0x414BAC, "VMT_414BAC_TStreamAdapter", 0);
MakeDword(0x414BAC);
MakeDword(0x414BB0);
MakeUnkn(0x414B8A, 1);
MakeNameEx(0x414B8A, "TStreamAdapter_IntfTable", 0);
MakeDword(0x414B8A);
MakeByte(0x414B8E);
MakeArray(0x414B8E, 16);
MakeDword(0x414B9E);
MakeDword(0x414B52);
MakeFunction(0x414B32, -1);
MakeCode(0x414B32);
MakeDword(0x414B56);
MakeFunction(0x414B3C, -1);
MakeCode(0x414B3C);
MakeDword(0x414B5A);
MakeFunction(0x414B46, -1);
MakeCode(0x414B46);
MakeDword(0x414B5E);
MakeFunction(0x414B17, -1);
MakeCode(0x414B17);
MakeDword(0x414B62);
MakeFunction(0x414B24, -1);
MakeCode(0x414B24);
MakeDword(0x414B66);
MakeFunction(0x414A99, -1);
MakeCode(0x414A99);
MakeDword(0x414B6A);
MakeFunction(0x414AA7, -1);
MakeCode(0x414AA7);
MakeDword(0x414B6E);
MakeFunction(0x414AB5, -1);
MakeCode(0x414AB5);
MakeDword(0x414B72);
MakeFunction(0x414AC3, -1);
MakeCode(0x414AC3);
MakeDword(0x414B76);
MakeFunction(0x414AD1, -1);
MakeCode(0x414AD1);
MakeDword(0x414B7A);
MakeFunction(0x414ADF, -1);
MakeCode(0x414ADF);
MakeDword(0x414B7E);
MakeFunction(0x414AED, -1);
MakeCode(0x414AED);
MakeDword(0x414B82);
MakeFunction(0x414AFB, -1);
MakeCode(0x414AFB);
MakeDword(0x414B86);
MakeFunction(0x414B09, -1);
MakeCode(0x414B09);
MakeByte(0x414A98);
MakeDword(0x414BA2);
MakeDword(0x414BA6);
MakeDword(0x414BB4);
MakeDword(0x414BB8);
MakeDword(0x414BBC);
MakeDword(0x414BC0);
MakeDword(0x414BC4);
MakeDword(0x414BC8);
MakeDword(0x414BCC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x414C24, 0x414C33);
MakeDword(0x414BD0);
MakeDword(0x414BD4);
MakeDword(0x414BD8);
MakeDword(0x414BDC);
MakeDword(0x414BE0);
MakeDword(0x414BE4);
MakeDword(0x414BE8);
MakeDword(0x414BEC);
MakeDword(0x414BF0);
MakeDword(0x414BF4);
MakeComm(0x414BF8, "'+0'");
MakeDword(0x414BF8);
MakeComm(0x414BFC, "'+4'");
MakeDword(0x414BFC);
MakeComm(0x414C00, "'+8'");
MakeDword(0x414C00);
MakeComm(0x414C04, "'+C'");
MakeDword(0x414C04);
MakeComm(0x414C08, "'+10'");
MakeDword(0x414C08);
MakeComm(0x414C0C, "'+14'");
MakeDword(0x414C0C);
MakeComm(0x414C10, "'+18'");
MakeDword(0x414C10);
MakeComm(0x414C14, "'+1C'");
MakeDword(0x414C14);
MakeComm(0x414C18, "'+20'");
MakeDword(0x414C18);
MakeComm(0x414C1C, "'+24'");
MakeDword(0x414C1C);
MakeComm(0x414C20, "'+28'");
MakeDword(0x414C20);
MakeUnkn(0x414C34, 1);
MakeNameEx(0x414C34, "VMT_414C34_TClassFinder", 0);
MakeDword(0x414C34);
MakeDword(0x414C38);
MakeDword(0x414C3C);
MakeDword(0x414C40);
MakeDword(0x414C44);
MakeDword(0x414C48);
MakeDword(0x414C4C);
MakeDword(0x414C50);
MakeDword(0x414C54);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x414C80, 0x414C8D);
MakeDword(0x414C58);
MakeDword(0x414C5C);
MakeDword(0x414C60);
MakeDword(0x414C64);
MakeDword(0x414C68);
MakeDword(0x414C6C);
MakeDword(0x414C70);
MakeDword(0x414C74);
MakeDword(0x414C78);
MakeDword(0x414C7C);
MakeUnkn(0x414C90, 1);
MakeNameEx(0x414C90, "VMT_414C90_TFiler", 0);
MakeDword(0x414C90);
MakeDword(0x414C94);
MakeDword(0x414C98);
MakeDword(0x414C9C);
MakeDword(0x414CA0);
MakeDword(0x414CA4);
MakeDword(0x414CA8);
MakeDword(0x414CAC);
MakeDword(0x414CB0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x414CEC, 0x414CF3);
MakeDword(0x414CB4);
MakeDword(0x414CB8);
MakeDword(0x414CBC);
MakeDword(0x414CC0);
MakeDword(0x414CC4);
MakeDword(0x414CC8);
MakeDword(0x414CCC);
MakeDword(0x414CD0);
MakeDword(0x414CD4);
MakeDword(0x414CD8);
MakeComm(0x414CDC, "'+0'");
MakeDword(0x414CDC);
MakeComm(0x414CE0, "'+4'");
MakeDword(0x414CE0);
MakeComm(0x414CE4, "'+8'");
MakeDword(0x414CE4);
MakeComm(0x414CE8, "'+C'");
MakeDword(0x414CE8);
MakeUnkn(0x414CF4, 1);
MakeNameEx(0x414CF4, "VMT_414CF4_TReader", 0);
MakeDword(0x414CF4);
MakeDword(0x414CF8);
MakeDword(0x414CFC);
MakeDword(0x414D00);
MakeUnkn(0x414D6C, 1);
MakeNameEx(0x414D6C, "TReader_InitTable", 0);
MakeByte(0x414D6C);
MakeByte(0x414D6D);
MakeDword(0x414D6E);
MakeDword(0x414D72);
MakeDword(0x414D76);
MakeDword(0x414D7A);
MakeDword(0x414D04);
MakeDword(0x414D08);
MakeDword(0x414D0C);
MakeDword(0x414D10);
MakeDword(0x414D14);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x414D7E, 0x414D86);
MakeDword(0x414D18);
MakeDword(0x414D1C);
MakeDword(0x414D20);
MakeDword(0x414D24);
MakeDword(0x414D28);
MakeDword(0x414D2C);
MakeDword(0x414D30);
MakeDword(0x414D34);
MakeDword(0x414D38);
MakeDword(0x414D3C);
MakeComm(0x414D40, "'+0'");
MakeDword(0x414D40);
MakeComm(0x414D44, "'+4'");
MakeDword(0x414D44);
MakeComm(0x414D48, "'+8'");
MakeDword(0x414D48);
MakeComm(0x414D4C, "'+C'");
MakeDword(0x414D4C);
MakeComm(0x414D50, "'+10'");
MakeDword(0x414D50);
MakeComm(0x414D54, "'+14'");
MakeDword(0x414D54);
MakeComm(0x414D58, "'+18'");
MakeDword(0x414D58);
MakeComm(0x414D5C, "'+1C'");
MakeDword(0x414D5C);
MakeComm(0x414D60, "'+20'");
MakeDword(0x414D60);
MakeComm(0x414D64, "'+24'");
MakeDword(0x414D64);
MakeComm(0x414D68, "'+28'");
MakeDword(0x414D68);
MakeUnkn(0x414D88, 1);
MakeNameEx(0x414D88, "VMT_414D88_EThread", 0);
MakeDword(0x414D88);
MakeDword(0x414D8C);
MakeDword(0x414D90);
MakeDword(0x414D94);
MakeDword(0x414D98);
MakeDword(0x414D9C);
MakeDword(0x414DA0);
MakeDword(0x414DA4);
MakeDword(0x414DA8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x414DD4, 0x414DDC);
MakeDword(0x414DAC);
MakeDword(0x414DB0);
MakeDword(0x414DB4);
MakeDword(0x414DB8);
MakeDword(0x414DBC);
MakeDword(0x414DC0);
MakeDword(0x414DC4);
MakeDword(0x414DC8);
MakeDword(0x414DCC);
MakeDword(0x414DD0);
MakeUnkn(0x414DDC, 1);
MakeNameEx(0x414DDC, "RTTI_414DDC_AnsiString_TComponentName", 0);
MakeDword(0x414DDC);
MakeUnkn(0x414DE0, 1);
MakeNameEx(0x414DE0, "", 0);
MakeByte(0x414DE0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x414DE1, 0x414DF0);
MakeUnkn(0x414DF0, 1);
MakeNameEx(0x414DF0, "RTTI_414DF0_Interface_IDesignerNotify", 0);
MakeDword(0x414DF0);
MakeUnkn(0x414DF4, 1);
MakeNameEx(0x414DF4, "", 0);
MakeByte(0x414DF4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x414DF5, 0x414E05);
MakeDword(0x414E05);
MakeByte(0x414E09);
MakeByte(0x414E0A);
MakeArray(0x414E0A, 16);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x414E1A, 0x414E22);
MakeWord(0x414E22);
MakeWord(0x414E24);
MakeUnkn(0x414ED0, 1);
MakeNameEx(0x414ED0, "VMT_414ED0_TComponent", 0);
MakeDword(0x414ED0);
MakeDword(0x414ED4);
MakeUnkn(0x414E91, 1);
MakeNameEx(0x414E91, "TComponent_IntfTable", 0);
MakeDword(0x414E91);
MakeByte(0x414E95);
MakeArray(0x414E95, 16);
MakeDword(0x414EA5);
MakeDword(0x414E75);
MakeFunction(0x414E31, -1);
MakeCode(0x414E31);
MakeDword(0x414E79);
MakeFunction(0x414E3F, -1);
MakeCode(0x414E3F);
MakeDword(0x414E7D);
MakeFunction(0x414E49, -1);
MakeCode(0x414E49);
MakeDword(0x414E81);
MakeFunction(0x414E29, -1);
MakeCode(0x414E29);
MakeDword(0x414E85);
MakeFunction(0x414E53, -1);
MakeCode(0x414E53);
MakeDword(0x414E89);
MakeFunction(0x414E61, -1);
MakeCode(0x414E61);
MakeDword(0x414E8D);
MakeFunction(0x414E6B, -1);
MakeCode(0x414E6B);
MakeByte(0x414E28);
MakeDword(0x414EA9);
MakeDword(0x414EAD);
MakeByte(0x414EB1);
MakeArray(0x414EB1, 16);
MakeDword(0x414EC1);
MakeDword(0x414E85);
MakeFunction(0x414E53, -1);
MakeCode(0x414E53);
MakeDword(0x414E89);
MakeFunction(0x414E61, -1);
MakeCode(0x414E61);
MakeDword(0x414E8D);
MakeFunction(0x414E6B, -1);
MakeCode(0x414E6B);
MakeByte(0x414E52);
MakeDword(0x414EC5);
MakeDword(0x414EC9);
MakeDword(0x414ED8);
MakeDword(0x414EDC);
MakeUnkn(0x414F4C, 1);
MakeNameEx(0x414F4C, "TComponent_InitTable", 0);
MakeByte(0x414F4C);
MakeByte(0x414F4D);
MakeDword(0x414F4E);
MakeDword(0x414F52);
MakeDword(0x414F56);
MakeDword(0x414F5A);
MakeDword(0x414EE0);
MakeDword(0x414EE4);
MakeDword(0x414EE8);
MakeDword(0x414EEC);
MakeUnkn(0x414F5E, 1);
MakeNameEx(0x414F5E, "TComponent_DynamicTable", 0);
MakeWord(0x414F5E);
MakeWord(0x414F60);
MakeWord(0x414F62);
MakeWord(0x414F64);
MakeWord(0x414F66);
MakeWord(0x414F68);
MakeWord(0x414F6A);
MakeWord(0x414F6C);
MakeWord(0x414F6E);
MakeWord(0x414F70);
MakeWord(0x414F72);
MakeWord(0x414F74);
MakeWord(0x414F76);
MakeWord(0x414F78);
MakeWord(0x414F7A);
MakeWord(0x414F7C);
MakeWord(0x414F7E);
MakeDword(0x414F80);
MakeDword(0x414F84);
MakeDword(0x414F88);
MakeDword(0x414F8C);
MakeDword(0x414F90);
MakeDword(0x414F94);
MakeDword(0x414F98);
MakeDword(0x414F9C);
MakeDword(0x414FA0);
MakeDword(0x414FA4);
MakeDword(0x414FA8);
MakeDword(0x414FAC);
MakeDword(0x414FB0);
MakeDword(0x414FB4);
MakeDword(0x414FB8);
MakeDword(0x414FBC);
MakeDword(0x414EF0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x414FC0, 0x414FCB);
MakeDword(0x414EF4);
MakeDword(0x414EF8);
MakeDword(0x414EFC);
MakeDword(0x414F00);
MakeDword(0x414F04);
MakeDword(0x414F08);
MakeDword(0x414F0C);
MakeDword(0x414F10);
MakeDword(0x414F14);
MakeDword(0x414F18);
MakeComm(0x414F1C, "'+0'");
MakeDword(0x414F1C);
MakeComm(0x414F20, "'+4'");
MakeDword(0x414F20);
MakeComm(0x414F24, "'+8'");
MakeDword(0x414F24);
MakeComm(0x414F28, "'+C'");
MakeDword(0x414F28);
MakeComm(0x414F2C, "'+10'");
MakeDword(0x414F2C);
MakeComm(0x414F30, "'+14'");
MakeDword(0x414F30);
MakeComm(0x414F34, "'+18'");
MakeDword(0x414F34);
MakeComm(0x414F38, "'+1C'");
MakeDword(0x414F38);
MakeComm(0x414F3C, "'+20'");
MakeDword(0x414F3C);
MakeComm(0x414F40, "'+24'");
MakeDword(0x414F40);
MakeComm(0x414F44, "'+28'");
MakeDword(0x414F44);
MakeComm(0x414F48, "'+2C'");
MakeDword(0x414F48);
MakeUnkn(0x414FCC, 1);
MakeNameEx(0x414FCC, "RTTI_414FCC_Class_TComponent", 0);
MakeDword(0x414FCC);
MakeUnkn(0x414FD0, 1);
MakeNameEx(0x414FD0, "", 0);
MakeByte(0x414FD0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x414FD1, 0x414FDC);
MakeDword(0x414FDC);
MakeDword(0x414FE0);
MakeWord(0x414FE4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x414FE6, 0x414FEE);
MakeWord(0x414FEE);
MakeDword(0x414FF0);
MakeDword(0x414FF4);
MakeDword(0x414FF8);
MakeDword(0x414FFC);
MakeDword(0x415000);
MakeDword(0x415004);
MakeWord(0x415008);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41500A, 0x41500F);
MakeDword(0x41500F);
MakeDword(0x415013);
MakeDword(0x415017);
MakeDword(0x41501B);
MakeDword(0x41501F);
MakeDword(0x415023);
MakeWord(0x415027);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x415029, 0x41502D);
MakeUnkn(0x415030, 1);
MakeNameEx(0x415030, "VMT_415030_TBasicActionLink", 0);
MakeDword(0x415030);
MakeDword(0x415034);
MakeDword(0x415038);
MakeDword(0x41503C);
MakeDword(0x415040);
MakeDword(0x415044);
MakeDword(0x415048);
MakeDword(0x41504C);
MakeDword(0x415050);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41509C, 0x4150AD);
MakeDword(0x415054);
MakeDword(0x415058);
MakeDword(0x41505C);
MakeDword(0x415060);
MakeDword(0x415064);
MakeDword(0x415068);
MakeDword(0x41506C);
MakeDword(0x415070);
MakeDword(0x415074);
MakeDword(0x415078);
MakeComm(0x41507C, "'+0'");
MakeDword(0x41507C);
MakeComm(0x415080, "'+4'");
MakeDword(0x415080);
MakeComm(0x415084, "'+8'");
MakeDword(0x415084);
MakeComm(0x415088, "'+C'");
MakeDword(0x415088);
MakeComm(0x41508C, "'+10'");
MakeDword(0x41508C);
MakeComm(0x415090, "'+14'");
MakeDword(0x415090);
MakeComm(0x415094, "'+18'");
MakeDword(0x415094);
MakeComm(0x415098, "'+1C'");
MakeDword(0x415098);
MakeUnkn(0x4150B0, 1);
MakeNameEx(0x4150B0, "VMT_4150B0_TBasicAction", 0);
MakeDword(0x4150B0);
MakeDword(0x4150B4);
MakeDword(0x4150B8);
MakeDword(0x4150BC);
MakeDword(0x4150C0);
MakeDword(0x4150C4);
MakeDword(0x4150C8);
MakeDword(0x4150CC);
MakeUnkn(0x415144, 1);
MakeNameEx(0x415144, "TBasicAction_DynamicTable", 0);
MakeWord(0x415144);
MakeWord(0x415146);
MakeDword(0x415148);
MakeDword(0x4150D0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41514C, 0x415159);
MakeDword(0x4150D4);
MakeDword(0x4150D8);
MakeDword(0x4150DC);
MakeDword(0x4150E0);
MakeDword(0x4150E4);
MakeDword(0x4150E8);
MakeDword(0x4150EC);
MakeDword(0x4150F0);
MakeDword(0x4150F4);
MakeDword(0x4150F8);
MakeComm(0x4150FC, "'+0'");
MakeDword(0x4150FC);
MakeComm(0x415100, "'+4'");
MakeDword(0x415100);
MakeComm(0x415104, "'+8'");
MakeDword(0x415104);
MakeComm(0x415108, "'+C'");
MakeDword(0x415108);
MakeComm(0x41510C, "'+10'");
MakeDword(0x41510C);
MakeComm(0x415110, "'+14'");
MakeDword(0x415110);
MakeComm(0x415114, "'+18'");
MakeDword(0x415114);
MakeComm(0x415118, "'+1C'");
MakeDword(0x415118);
MakeComm(0x41511C, "'+20'");
MakeDword(0x41511C);
MakeComm(0x415120, "'+24'");
MakeDword(0x415120);
MakeComm(0x415124, "'+28'");
MakeDword(0x415124);
MakeComm(0x415128, "'+2C'");
MakeDword(0x415128);
MakeComm(0x41512C, "'+30'");
MakeDword(0x41512C);
MakeComm(0x415130, "'+34'");
MakeDword(0x415130);
MakeComm(0x415134, "'+38'");
MakeDword(0x415134);
MakeComm(0x415138, "'+3C'");
MakeDword(0x415138);
MakeComm(0x41513C, "'+40'");
MakeDword(0x41513C);
MakeComm(0x415140, "'+44'");
MakeDword(0x415140);
MakeUnkn(0x41515C, 1);
MakeNameEx(0x41515C, "RTTI_41515C_Class_TBasicAction", 0);
MakeDword(0x41515C);
MakeUnkn(0x415160, 1);
MakeNameEx(0x415160, "", 0);
MakeByte(0x415160);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x415161, 0x41516E);
MakeDword(0x41516E);
MakeDword(0x415172);
MakeWord(0x415176);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x415178, 0x415180);
MakeWord(0x415180);
MakeUnkn(0x415184, 1);
MakeNameEx(0x415184, "RTTI_415184_Record_TIdentMapEntry", 0);
MakeDword(0x415184);
MakeUnkn(0x415188, 1);
MakeNameEx(0x415188, "", 0);
MakeByte(0x415188);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x415189, 0x415198);
MakeDword(0x415198);
MakeDword(0x41519C);
MakeDword(0x4151A0);
MakeDword(0x4151A4);
MakeUnkn(0x4151A8, 1);
MakeNameEx(0x4151A8, "Point_0", 0x20);
MakeComm(0x4151A8, "'function Point(AX:Integer; AY:Integer):TPoint;'");
MakeCode(0x4151A8);
MakeFunction(0x4151A8, 0x4151C0);
MakeUnkn(0x4151C0, 1);
MakeNameEx(0x4151C0, "SmallPoint_0", 0x20);
MakeComm(0x4151C0, "'function SmallPoint(AX:Smallint; AY:Smallint):TSmallPoint;'");
MakeCode(0x4151C0);
MakeFunction(0x4151C0, 0x4151CF);
MakeUnkn(0x4151D0, 1);
MakeNameEx(0x4151D0, "Bounds_0", 0x20);
MakeComm(0x4151D0, "'function Bounds(ALeft:Integer; ATop:Integer; AWidth:Integer; AHeight:Integer):TRect;'");
MakeCode(0x4151D0);
MakeFunction(0x4151D0, 0x4151F6);
MakeUnkn(0x4151F8, 1);
MakeNameEx(0x4151F8, "Rect_0", 0x20);
MakeComm(0x4151F8, "'function Rect(ALeft:Integer; ATop:Integer; ARight:Integer; ABottom:Integer):TRect;'");
MakeCode(0x4151F8);
MakeFunction(0x4151F8, 0x41521E);
MakeUnkn(0x415220, 1);
MakeNameEx(0x415220, "InvalidPoint", 0x20);
MakeComm(0x415220, "'function InvalidPoint(const At:TPoint):Boolean;'");
MakeCode(0x415220);
MakeCode(0x41522B);
MakeCode(0x41522E);
MakeFunction(0x415220, 0x415231);
MakeUnkn(0x415234, 1);
MakeNameEx(0x415234, "VMT_415234_TRegGroup", 0);
MakeDword(0x415234);
MakeDword(0x415238);
MakeDword(0x41523C);
MakeDword(0x415240);
MakeDword(0x415244);
MakeDword(0x415248);
MakeDword(0x41524C);
MakeDword(0x415250);
MakeDword(0x415254);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x415280, 0x41528A);
MakeDword(0x415258);
MakeDword(0x41525C);
MakeDword(0x415260);
MakeDword(0x415264);
MakeDword(0x415268);
MakeDword(0x41526C);
MakeDword(0x415270);
MakeDword(0x415274);
MakeDword(0x415278);
MakeDword(0x41527C);
MakeUnkn(0x41528C, 1);
MakeNameEx(0x41528C, "VMT_41528C_TRegGroups", 0);
MakeDword(0x41528C);
MakeDword(0x415290);
MakeDword(0x415294);
MakeDword(0x415298);
MakeDword(0x41529C);
MakeDword(0x4152A0);
MakeDword(0x4152A4);
MakeDword(0x4152A8);
MakeDword(0x4152AC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4152D8, 0x4152E3);
MakeDword(0x4152B0);
MakeDword(0x4152B4);
MakeDword(0x4152B8);
MakeDword(0x4152BC);
MakeDword(0x4152C0);
MakeDword(0x4152C4);
MakeDword(0x4152C8);
MakeDword(0x4152CC);
MakeDword(0x4152D0);
MakeDword(0x4152D4);
MakeUnkn(0x4152E4, 1);
MakeNameEx(0x4152E4, "TRegGroup.AddClass", 0x20);
MakeComm(0x4152E4, "'procedure TRegGroup.AddClass(AClass:TPersistentClass);'");
MakeCode(0x4152E4);
MakeFunction(0x4152E4, 0x4152ED);
MakeUnkn(0x4152F0, 1);
MakeNameEx(0x4152F0, "TRegGroup.BestClass", 0x20);
MakeComm(0x4152F0, "'function TRegGroup.BestClass(AClass:TPersistentClass):TPersistentClass;'");
MakeCode(0x4152F0);
MakeCode(0x415311);
MakeCode(0x415340);
MakeCode(0x415342);
MakeCode(0x415346);
MakeFunction(0x4152F0, 0x41534F);
MakeUnkn(0x415350, 1);
MakeNameEx(0x415350, "TRegGroup.BestGroup", 0x20);
MakeComm(0x415350, "'function TRegGroup.BestGroup(Group1:TRegGroup; Group2:TRegGroup; AClass:TPersistentClass):TRegGroup;'");
MakeCode(0x415350);
MakeCode(0x415370);
MakeCode(0x415372);
MakeCode(0x415386);
MakeCode(0x415388);
MakeCode(0x415394);
MakeCode(0x415399);
MakeCode(0x4153A1);
MakeCode(0x4153B2);
MakeCode(0x4153B5);
MakeFunction(0x415350, 0x4153BD);
MakeUnkn(0x4153C0, 1);
MakeNameEx(0x4153C0, "TRegGroup.Create", 0x20);
MakeComm(0x4153C0, "'constructor TRegGroup.Create(AClass:TPersistentClass);'");
MakeCode(0x4153C0);
MakeCode(0x4153D3);
MakeCode(0x415414);
MakeFunction(0x4153C0, 0x41541C);
MakeUnkn(0x41541C, 1);
MakeNameEx(0x41541C, "TRegGroup.Destroy", 0x20);
MakeComm(0x41541C, "'destructor TRegGroup.Destroy;'");
MakeCode(0x41541C);
MakeCode(0x415456);
MakeFunction(0x41541C, 0x415459);
MakeUnkn(0x41545C, 1);
MakeNameEx(0x41545C, "TRegGroup.GetClass", 0x20);
MakeComm(0x41545C, "'function TRegGroup.GetClass(const AClassName:AnsiString):TPersistentClass;'");
MakeCode(0x41545C);
MakeCode(0x415478);
MakeCode(0x415496);
MakeCode(0x4154B9);
MakeCode(0x4154BB);
MakeFunction(0x41545C, 0x4154C3);
MakeUnkn(0x4154C4, 1);
MakeNameEx(0x4154C4, "TRegGroup.InGroup", 0x20);
MakeComm(0x4154C4, "'function TRegGroup.InGroup(AClass:TPersistentClass):Boolean;'");
MakeCode(0x4154C4);
MakeCode(0x4154DF);
MakeCode(0x4154FA);
MakeCode(0x4154FE);
MakeFunction(0x4154C4, 0x415508);
MakeUnkn(0x415508, 1);
MakeNameEx(0x415508, "TRegGroup.RegisterClass", 0x20);
MakeComm(0x415508, "'procedure TRegGroup.RegisterClass(AClass:TPersistentClass);'");
MakeCode(0x415508);
MakeCode(0x415583);
MakeCode(0x415598);
MakeCode(0x4155A2);
MakeCode(0x4155AF);
MakeCode(0x4155B8);
MakeCode(0x4155BD);
MakeFunction(0x415508, 0x4155C5);
MakeUnkn(0x4155C8, 1);
MakeNameEx(0x4155C8, "TRegGroup.Registered", 0x20);
MakeComm(0x4155C8, "'function TRegGroup.Registered(AClass:TPersistentClass):Boolean;'");
MakeCode(0x4155C8);
MakeCode(0x4155E6);
MakeCode(0x4155E8);
MakeFunction(0x4155C8, 0x4155EC);
MakeUnkn(0x4155EC, 1);
MakeNameEx(0x4155EC, "PointerInModule", 0x20);
MakeComm(0x4155EC, "'function PointerInModule(Ptr:Pointer; Module:HMODULE):Boolean;'");
MakeCode(0x4155EC);
MakeCode(0x415606);
MakeFunction(0x4155EC, 0x41560B);
MakeUnkn(0x41560C, 1);
MakeNameEx(0x41560C, "TRegGroup.UnregisterModuleClasses", 0x20);
MakeComm(0x41560C, "'procedure TRegGroup.UnregisterModuleClasses(Module:HMODULE);'");
MakeCode(0x41560C);
MakeCode(0x41561F);
MakeCode(0x41563E);
MakeCode(0x415644);
MakeCode(0x415654);
MakeCode(0x415673);
MakeCode(0x415679);
MakeCode(0x41568F);
MakeCode(0x4156AE);
MakeCode(0x4156B4);
MakeFunction(0x41560C, 0x4156B8);
MakeUnkn(0x4156B8, 1);
MakeNameEx(0x4156B8, "TRegGroups.Activate", 0x20);
MakeComm(0x4156B8, "'procedure TRegGroups.Activate(AClass:TPersistentClass);'");
MakeCode(0x4156B8);
MakeCode(0x4156DE);
MakeCode(0x4156FB);
MakeFunction(0x4156B8, 0x415701);
MakeUnkn(0x415704, 1);
MakeNameEx(0x415704, "TRegGroups.Create", 0x20);
MakeComm(0x415704, "'constructor TRegGroups.Create;'");
MakeCode(0x415704);
MakeCode(0x415713);
MakeCode(0x41576F);
MakeFunction(0x415704, 0x415775);
MakeUnkn(0x415778, 1);
MakeNameEx(0x415778, "TRegGroups.Destroy", 0x20);
MakeComm(0x415778, "'destructor TRegGroups.Destroy;'");
MakeCode(0x415778);
MakeCode(0x4157A0);
MakeCode(0x4157B3);
MakeCode(0x4157D2);
MakeFunction(0x415778, 0x4157D7);
MakeUnkn(0x4157D8, 1);
MakeNameEx(0x4157D8, "TRegGroups.FindGroup", 0x20);
MakeComm(0x4157D8, "'function TRegGroups.FindGroup(AClass:TPersistentClass):TRegGroup;'");
MakeCode(0x4157D8);
MakeCode(0x4157F2);
MakeCode(0x415814);
MakeFunction(0x4157D8, 0x41581C);
MakeUnkn(0x41581C, 1);
MakeNameEx(0x41581C, "TRegGroups.GetClass", 0x20);
MakeComm(0x41581C, "'function TRegGroups.GetClass(const AClassName:AnsiString):TPersistentClass;'");
MakeCode(0x41581C);
MakeCode(0x415836);
MakeCode(0x415850);
MakeCode(0x415858);
MakeFunction(0x41581C, 0x415860);
MakeUnkn(0x415860, 1);
MakeNameEx(0x415860, "Error_0", 0x20);
MakeComm(0x415860, "'procedure Error;'");
MakeCode(0x415860);
MakeCode(0x4158CA);
MakeCode(0x4158D7);
MakeCode(0x4158E3);
MakeCode(0x4158E8);
MakeFunction(0x415860, 0x4158EE);
MakeUnkn(0x4158F0, 1);
MakeNameEx(0x4158F0, "TRegGroups.GroupWith", 0x20);
MakeComm(0x4158F0, "'procedure TRegGroups.GroupWith(AClass:TPersistentClass; AGroupClass:TPersistentClass);'");
MakeCode(0x4158F0);
MakeCode(0x41591D);
MakeCode(0x415941);
MakeCode(0x415966);
MakeCode(0x4159A6);
MakeCode(0x4159AC);
MakeCode(0x4159B4);
MakeFunction(0x4158F0, 0x4159BB);
MakeUnkn(0x4159BC, 1);
MakeNameEx(0x4159BC, "TRegGroups.Lock", 0x20);
MakeComm(0x4159BC, "'procedure TRegGroups.Lock;'");
MakeCode(0x4159BC);
MakeFunction(0x4159BC, 0x4159C6);
MakeUnkn(0x4159C8, 1);
MakeNameEx(0x4159C8, "TRegGroups.RegisterClass", 0x20);
MakeComm(0x4159C8, "'procedure TRegGroups.RegisterClass(AClass:TPersistentClass);'");
MakeCode(0x4159C8);
MakeCode(0x4159DD);
MakeFunction(0x4159C8, 0x4159DF);
MakeUnkn(0x4159E0, 1);
MakeNameEx(0x4159E0, "TRegGroups.Registered", 0x20);
MakeComm(0x4159E0, "'function TRegGroups.Registered(AClass:TPersistentClass):Boolean;'");
MakeCode(0x4159E0);
MakeCode(0x4159FB);
MakeCode(0x415A14);
MakeCode(0x415A18);
MakeFunction(0x4159E0, 0x415A22);
MakeUnkn(0x415A24, 1);
MakeNameEx(0x415A24, "TRegGroups.StartGroup", 0x20);
MakeComm(0x415A24, "'procedure TRegGroups.StartGroup(AClass:TPersistentClass);'");
MakeCode(0x415A24);
MakeCode(0x415A3A);
MakeCode(0x415A56);
MakeCode(0x415A6E);
MakeFunction(0x415A24, 0x415A73);
MakeUnkn(0x415A74, 1);
MakeNameEx(0x415A74, "TRegGroups.Unlock", 0x20);
MakeComm(0x415A74, "'procedure TRegGroups.Unlock;'");
MakeCode(0x415A74);
MakeFunction(0x415A74, 0x415A7E);
MakeUnkn(0x415A80, 1);
MakeNameEx(0x415A80, "TRegGroups.UnregisterModuleClasses", 0x20);
MakeComm(0x415A80, "'procedure TRegGroups.UnregisterModuleClasses(Module:HMODULE);'");
MakeCode(0x415A80);
MakeCode(0x415A94);
MakeCode(0x415AC3);
MakeCode(0x415AC9);
MakeFunction(0x415A80, 0x415ACE);
MakeUnkn(0x415AD0, 1);
MakeNameEx(0x415AD0, "TClassFinder.Create", 0x20);
MakeComm(0x415AD0, "'constructor TClassFinder.Create(AClass:TPersistentClass; AIncludeActiveGroups:Boolean);'");
MakeCode(0x415AD0);
MakeCode(0x415AE5);
MakeCode(0x415B33);
MakeCode(0x415B46);
MakeCode(0x415B72);
MakeCode(0x415B76);
MakeCode(0x415B8F);
MakeCode(0x415BB3);
MakeCode(0x415BB7);
MakeCode(0x415BC4);
MakeCode(0x415BCF);
MakeCode(0x415BD4);
MakeCode(0x415BEE);
MakeFunction(0x415AD0, 0x415BFA);
MakeUnkn(0x415BFC, 1);
MakeNameEx(0x415BFC, "TClassFinder.Destroy", 0x20);
MakeComm(0x415BFC, "'destructor TClassFinder.Destroy;'");
MakeCode(0x415BFC);
MakeCode(0x415C26);
MakeFunction(0x415BFC, 0x415C29);
MakeUnkn(0x415C2C, 1);
MakeNameEx(0x415C2C, "TClassFinder.GetClass", 0x20);
MakeComm(0x415C2C, "'function TClassFinder.GetClass(const AClassName:AnsiString):TPersistentClass;'");
MakeCode(0x415C2C);
MakeCode(0x415C65);
MakeCode(0x415C87);
MakeCode(0x415C8B);
MakeCode(0x415C98);
MakeCode(0x415CA3);
MakeCode(0x415CA8);
MakeCode(0x415CAA);
MakeFunction(0x415C2C, 0x415CB4);
MakeUnkn(0x415CB4, 1);
MakeNameEx(0x415CB4, "GetFieldClassTable", 0x20);
MakeComm(0x415CB4, "'function GetFieldClassTable(AClass:TClass):PFieldClassTable;'");
MakeCode(0x415CB4);
MakeFunction(0x415CB4, 0x415CBF);
MakeUnkn(0x415CC0, 1);
MakeNameEx(0x415CC0, "ClassNotFound", 0x20);
MakeComm(0x415CC0, "'procedure ClassNotFound(const ClassName:AnsiString);'");
MakeCode(0x415CC0);
MakeCode(0x415D0A);
MakeCode(0x415D17);
MakeCode(0x415D20);
MakeCode(0x415D25);
MakeFunction(0x415CC0, 0x415D2C);
MakeUnkn(0x415D2C, 1);
MakeNameEx(0x415D2C, "GetClass", 0x20);
MakeComm(0x415D2C, "'function GetClass(const AClassName:AnsiString):TPersistentClass;'");
MakeCode(0x415D2C);
MakeCode(0x415D5A);
MakeCode(0x415D67);
MakeCode(0x415D72);
MakeCode(0x415D77);
MakeFunction(0x415D2C, 0x415D80);
MakeUnkn(0x415D80, 1);
MakeNameEx(0x415D80, "FindClass", 0x20);
MakeComm(0x415D80, "'function FindClass(const ClassName:AnsiString):TPersistentClass;'");
MakeCode(0x415D80);
MakeCode(0x415D98);
MakeFunction(0x415D80, 0x415D9D);
MakeUnkn(0x415DA0, 1);
MakeNameEx(0x415DA0, "RegisterClass", 0x20);
MakeComm(0x415DA0, "'procedure RegisterClass(AClass:TPersistentClass);'");
MakeCode(0x415DA0);
MakeCode(0x415DC0);
MakeCode(0x415DDD);
MakeCode(0x415DED);
MakeCode(0x415DFA);
MakeCode(0x415E05);
MakeCode(0x415E0A);
MakeFunction(0x415DA0, 0x415E0F);
MakeUnkn(0x415E10, 1);
MakeNameEx(0x415E10, "UnRegisterModuleClasses", 0x20);
MakeComm(0x415E10, "'procedure UnRegisterModuleClasses(Module:HMODULE);'");
MakeCode(0x415E10);
MakeCode(0x415E3A);
MakeCode(0x415E47);
MakeCode(0x415E52);
MakeCode(0x415E57);
MakeFunction(0x415E10, 0x415E5C);
MakeUnkn(0x415E5C, 1);
MakeNameEx(0x415E5C, "StartClassGroup", 0x20);
MakeComm(0x415E5C, "'procedure StartClassGroup(AClass:TPersistentClass);'");
MakeCode(0x415E5C);
MakeCode(0x415E86);
MakeCode(0x415E93);
MakeCode(0x415E9E);
MakeCode(0x415EA3);
MakeFunction(0x415E5C, 0x415EA8);
MakeUnkn(0x415EA8, 1);
MakeNameEx(0x415EA8, "GroupDescendentsWith", 0x20);
MakeComm(0x415EA8, "'procedure GroupDescendentsWith(AClass:TPersistentClass; AClassGroup:TPersistentClass);'");
MakeCode(0x415EA8);
MakeCode(0x415ED7);
MakeCode(0x415EE4);
MakeCode(0x415EEF);
MakeCode(0x415EF4);
MakeFunction(0x415EA8, 0x415EFA);
MakeUnkn(0x415EFC, 1);
MakeNameEx(0x415EFC, "ActivateClassGroup", 0x20);
MakeComm(0x415EFC, "'function ActivateClassGroup(AClass:TPersistentClass):TPersistentClass;'");
MakeCode(0x415EFC);
MakeCode(0x415F32);
MakeCode(0x415F3F);
MakeCode(0x415F4A);
MakeCode(0x415F4F);
MakeFunction(0x415EFC, 0x415F58);
MakeUnkn(0x415F58, 1);
MakeNameEx(0x415F58, "VMT_415F58_TIntConst", 0);
MakeDword(0x415F58);
MakeDword(0x415F5C);
MakeDword(0x415F60);
MakeDword(0x415F64);
MakeDword(0x415F68);
MakeDword(0x415F6C);
MakeDword(0x415F70);
MakeDword(0x415F74);
MakeDword(0x415F78);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x415FA4, 0x415FAE);
MakeDword(0x415F7C);
MakeDword(0x415F80);
MakeDword(0x415F84);
MakeDword(0x415F88);
MakeDword(0x415F8C);
MakeDword(0x415F90);
MakeDword(0x415F94);
MakeDword(0x415F98);
MakeDword(0x415F9C);
MakeDword(0x415FA0);
MakeUnkn(0x415FB0, 1);
MakeNameEx(0x415FB0, "TIntConst.Create", 0x20);
MakeComm(0x415FB0, "'constructor TIntConst.Create(AIntegerType:PTypeInfo; AIdentToInt:TIdentToInt; AIntToIdent:TIntToIdent);'");
MakeCode(0x415FB0);
MakeCode(0x415FBF);
MakeCode(0x415FE1);
MakeFunction(0x415FB0, 0x415FE5);
MakeUnkn(0x415FE8, 1);
MakeNameEx(0x415FE8, "RegisterIntegerConsts", 0x20);
MakeComm(0x415FE8, "'procedure RegisterIntegerConsts(AIntegerType:Pointer; AIdentToInt:TIdentToInt; AIntToIdent:TIntToIdent);'");
MakeCode(0x415FE8);
MakeFunction(0x415FE8, 0x416011);
MakeUnkn(0x416014, 1);
MakeNameEx(0x416014, "FindIdentToInt", 0x20);
MakeComm(0x416014, "'function FindIdentToInt(AIntegerType:Pointer):TIdentToInt;'");
MakeCode(0x416014);
MakeCode(0x416045);
MakeCode(0x416060);
MakeCode(0x416066);
MakeCode(0x416073);
MakeCode(0x41607E);
MakeCode(0x416083);
MakeCode(0x416085);
MakeFunction(0x416014, 0x41608E);
MakeUnkn(0x416090, 1);
MakeNameEx(0x416090, "IdentToInt", 0x20);
MakeComm(0x416090, "'function IdentToInt(const Ident:AnsiString; var Int:Longint; const Map:array[$0..-$1] of TIdentMapEntry; const _Dv_:$0..-$1):Boolean;'");
MakeCode(0x416090);
MakeCode(0x4160A7);
MakeCode(0x4160C0);
MakeCode(0x4160C6);
MakeCode(0x4160C8);
MakeFunction(0x416090, 0x4160D0);
MakeUnkn(0x4160D0, 1);
MakeNameEx(0x4160D0, "IntToIdent", 0x20);
MakeComm(0x4160D0, "'function IntToIdent(Int:Longint; var Ident:AnsiString; const Map:array[$0..-$1] of TIdentMapEntry; const _Dv_:$0..-$1):Boolean;'");
MakeCode(0x4160D0);
MakeCode(0x4160E9);
MakeCode(0x4160FD);
MakeCode(0x416103);
MakeCode(0x416107);
MakeFunction(0x4160D0, 0x416114);
MakeUnkn(0x416114, 1);
MakeNameEx(0x416114, "RegisterFindGlobalComponentProc", 0x20);
MakeComm(0x416114, "'procedure RegisterFindGlobalComponentProc(AFindGlobalComponent:TFindGlobalComponent);'");
MakeCode(0x416114);
MakeCode(0x416132);
MakeCode(0x416150);
MakeFunction(0x416114, 0x416153);
MakeUnkn(0x416154, 1);
MakeNameEx(0x416154, "UnregisterFindGlobalComponentProc", 0x20);
MakeComm(0x416154, "'procedure UnregisterFindGlobalComponentProc(AFindGlobalComponent:TFindGlobalComponent);'");
MakeCode(0x416154);
MakeFunction(0x416154, 0x41616A);
MakeUnkn(0x41616C, 1);
MakeNameEx(0x41616C, "FindGlobalComponent", 0x20);
MakeComm(0x41616C, "'function FindGlobalComponent(const Name:AnsiString):TComponent;'");
MakeCode(0x41616C);
MakeCode(0x41618B);
MakeCode(0x4161A7);
MakeFunction(0x41616C, 0x4161AB);
MakeUnkn(0x4161AC, 1);
MakeNameEx(0x4161AC, "IsUniqueGlobalComponentName", 0x20);
MakeComm(0x4161AC, "'function IsUniqueGlobalComponentName(const Name:AnsiString):Boolean;'");
MakeCode(0x4161AC);
MakeCode(0x4161C2);
MakeFunction(0x4161AC, 0x4161D0);
MakeUnkn(0x4161D0, 1);
MakeNameEx(0x4161D0, "InternalReadComponentRes", 0x20);
MakeComm(0x4161D0, "'function InternalReadComponentRes(const ResName:AnsiString; HInst:THandle; var Instance:TComponent):Boolean;'");
MakeCode(0x4161D0);
MakeCode(0x4161E7);
MakeCode(0x41622E);
MakeCode(0x41623B);
MakeCode(0x416244);
MakeCode(0x416249);
MakeCode(0x41624D);
MakeFunction(0x4161D0, 0x416253);
MakeUnkn(0x416254, 1);
MakeNameEx(0x416254, "BeginGlobalLoading", 0x20);
MakeComm(0x416254, "'procedure BeginGlobalLoading;'");
MakeCode(0x416254);
MakeCode(0x41627D);
MakeFunction(0x416254, 0x4162AA);
MakeUnkn(0x4162AC, 1);
MakeNameEx(0x4162AC, "NotifyGlobalLoading", 0x20);
MakeComm(0x4162AC, "'procedure NotifyGlobalLoading;'");
MakeCode(0x4162AC);
MakeCode(0x4162C5);
MakeCode(0x4162D7);
MakeFunction(0x4162AC, 0x4162DB);
MakeUnkn(0x4162DC, 1);
MakeNameEx(0x4162DC, "EndGlobalLoading", 0x20);
MakeComm(0x4162DC, "'procedure EndGlobalLoading;'");
MakeCode(0x4162DC);
MakeCode(0x416332);
MakeFunction(0x4162DC, 0x416335);
MakeUnkn(0x416338, 1);
MakeNameEx(0x416338, "InitComponent", 0x20);
MakeComm(0x416338, "'function InitComponent(ClassType:TClass):Boolean;'");
MakeCode(0x416338);
MakeCode(0x4163B8);
MakeFunction(0x416338, 0x4163DD);
MakeUnkn(0x4163E0, 1);
MakeNameEx(0x4163E0, "InitInheritedComponent", 0x20);
MakeComm(0x4163E0, "'function InitInheritedComponent(Instance:TComponent; RootAncestor:TClass):Boolean;'");
MakeCode(0x4163E0);
MakeCode(0x41642B);
MakeCode(0x416456);
MakeCode(0x416463);
MakeCode(0x41646E);
MakeCode(0x41646F);
MakeCode(0x416474);
MakeCode(0x416476);
MakeCode(0x416483);
MakeCode(0x41648E);
MakeCode(0x416493);
MakeFunction(0x4163E0, 0x41649D);
MakeUnkn(0x4164A8, 1);
MakeNameEx(0x4164A8, "TList.Destroy", 0x20);
MakeComm(0x4164A8, "'destructor TList.Destroy;'");
MakeCode(0x4164A8);
MakeCode(0x4164C5);
MakeFunction(0x4164A8, 0x4164C8);
MakeUnkn(0x4164C8, 1);
MakeNameEx(0x4164C8, "TList.Add", 0x20);
MakeComm(0x4164C8, "'function TList.Add(Item:Pointer):Integer;'");
MakeCode(0x4164C8);
MakeCode(0x4164DD);
MakeCode(0x4164F5);
MakeFunction(0x4164C8, 0x4164FB);
MakeUnkn(0x4164FC, 1);
MakeNameEx(0x4164FC, "TList.Clear", 0x20);
MakeComm(0x4164FC, "'procedure TList.Clear;'");
MakeCode(0x4164FC);
MakeFunction(0x4164FC, 0x416513);
MakeUnkn(0x416514, 1);
MakeNameEx(0x416514, "TList.Delete", 0x20);
MakeComm(0x416514, "'procedure TList.Delete(Index:Integer);'");
MakeCode(0x416514);
MakeCode(0x416524);
MakeCode(0x416533);
MakeCode(0x416562);
MakeCode(0x416571);
MakeFunction(0x416514, 0x416575);
MakeUnkn(0x416578, 1);
MakeNameEx(0x416578, "ReturnAddr_0", 0x20);
MakeComm(0x416578, "'function ReturnAddr:Pointer;'");
MakeCode(0x416578);
MakeFunction(0x416578, 0x41657C);
MakeUnkn(0x41657C, 1);
MakeNameEx(0x41657C, "TList.Error", 0x20);
MakeComm(0x41657C, "'procedure TList.Error(const Msg:AnsiString; Data:Integer);'");
MakeCode(0x41657C);
MakeFunction(0x41657C, 0x4165B3);
MakeUnkn(0x4165B4, 1);
MakeNameEx(0x4165B4, "TList.Error_0", 0x20);
MakeComm(0x4165B4, "'procedure TList.Error(Msg:PResStringRec; Data:Integer);'");
MakeCode(0x4165B4);
MakeCode(0x4165E6);
MakeCode(0x4165F3);
MakeCode(0x4165FC);
MakeCode(0x416601);
MakeFunction(0x4165B4, 0x416608);
MakeUnkn(0x416608, 1);
MakeNameEx(0x416608, "TList.Expand", 0x20);
MakeComm(0x416608, "'function TList.Expand:TList;'");
MakeCode(0x416608);
MakeCode(0x416619);
MakeFunction(0x416608, 0x41661D);
MakeUnkn(0x416620, 1);
MakeNameEx(0x416620, "TList.First", 0x20);
MakeComm(0x416620, "'function TList.First:Pointer;'");
MakeCode(0x416620);
MakeFunction(0x416620, 0x416628);
MakeUnkn(0x416628, 1);
MakeNameEx(0x416628, "TList.Get", 0x20);
MakeComm(0x416628, "'function TList.Get(Index:Integer):Pointer;'");
MakeCode(0x416628);
MakeCode(0x416637);
MakeCode(0x416646);
MakeFunction(0x416628, 0x41664F);
MakeUnkn(0x416650, 1);
MakeNameEx(0x416650, "TList.Grow", 0x20);
MakeComm(0x416650, "'procedure TList.Grow;'");
MakeCode(0x416650);
MakeCode(0x416661);
MakeCode(0x416666);
MakeCode(0x416672);
MakeCode(0x416677);
MakeFunction(0x416650, 0x416681);
MakeUnkn(0x416684, 1);
MakeNameEx(0x416684, "TList.IndexOf", 0x20);
MakeComm(0x416684, "'function TList.IndexOf(Item:Pointer):Integer;'");
MakeCode(0x416684);
MakeCode(0x416689);
MakeCode(0x41668A);
MakeCode(0x416697);
MakeCode(0x41669F);
MakeFunction(0x416684, 0x4166A3);
MakeUnkn(0x4166A4, 1);
MakeNameEx(0x4166A4, "TList.Insert", 0x20);
MakeComm(0x4166A4, "'procedure TList.Insert(Index:Integer; Item:Pointer);'");
MakeCode(0x4166A4);
MakeCode(0x4166B6);
MakeCode(0x4166C5);
MakeCode(0x4166D3);
MakeCode(0x4166F4);
MakeCode(0x41670C);
MakeFunction(0x4166A4, 0x416710);
MakeUnkn(0x416710, 1);
MakeNameEx(0x416710, "TList.Last", 0x20);
MakeComm(0x416710, "'function TList.Last:Pointer;'");
MakeCode(0x416710);
MakeFunction(0x416710, 0x41671A);
MakeUnkn(0x41671C, 1);
MakeNameEx(0x41671C, "TList.Move", 0x20);
MakeComm(0x41671C, "'procedure TList.Move(CurIndex:Integer; NewIndex:Integer);'");
MakeCode(0x41671C);
MakeCode(0x416733);
MakeCode(0x416742);
MakeCode(0x41676F);
MakeFunction(0x41671C, 0x416774);
MakeUnkn(0x416774, 1);
MakeNameEx(0x416774, "TList.Put", 0x20);
MakeComm(0x416774, "'procedure TList.Put(Index:Integer; Item:Pointer);'");
MakeCode(0x416774);
MakeCode(0x416786);
MakeCode(0x416795);
MakeCode(0x4167B1);
MakeCode(0x4167C0);
MakeFunction(0x416774, 0x4167C4);
MakeUnkn(0x4167C4, 1);
MakeNameEx(0x4167C4, "TList.Remove", 0x20);
MakeComm(0x4167C4, "'function TList.Remove(Item:Pointer):Integer;'");
MakeCode(0x4167C4);
MakeCode(0x4167DE);
MakeFunction(0x4167C4, 0x4167E3);
MakeUnkn(0x4167E4, 1);
MakeNameEx(0x4167E4, "TList.SetCapacity", 0x20);
MakeComm(0x4167E4, "'procedure TList.SetCapacity(NewCapacity:Integer);'");
MakeCode(0x4167E4);
MakeCode(0x4167F7);
MakeCode(0x416806);
MakeCode(0x41681C);
MakeFunction(0x4167E4, 0x41681F);
MakeUnkn(0x416820, 1);
MakeNameEx(0x416820, "TList.SetCount", 0x20);
MakeComm(0x416820, "'procedure TList.SetCount(NewCount:Integer);'");
MakeCode(0x416820);
MakeCode(0x416834);
MakeCode(0x416843);
MakeCode(0x416851);
MakeCode(0x416872);
MakeCode(0x41687C);
MakeCode(0x416889);
MakeFunction(0x416820, 0x416891);
MakeUnkn(0x416894, 1);
MakeNameEx(0x416894, "QuickSort", 0x20);
MakeComm(0x416894, "'procedure QuickSort(SortList:PPointerList; L:Integer; R:Integer; SCompare:TListSortCompare);'");
MakeCode(0x416894);
MakeCode(0x4168A5);
MakeCode(0x4168BB);
MakeCode(0x4168BC);
MakeCode(0x4168CB);
MakeCode(0x4168CC);
MakeCode(0x4168EB);
MakeCode(0x416904);
MakeFunction(0x416894, 0x416915);
MakeUnkn(0x416918, 1);
MakeNameEx(0x416918, "TList.Sort", 0x20);
MakeComm(0x416918, "'procedure TList.Sort(Compare:TListSortCompare);'");
MakeCode(0x416918);
MakeFunction(0x416918, 0x416936);
MakeUnkn(0x416938, 1);
MakeNameEx(0x416938, "TList.Notify", 0x20);
MakeComm(0x416938, "'procedure TList.Notify(Ptr:Pointer; Action:TListNotification);'");
MakeCode(0x416938);
MakeFunction(0x416938, 0x416939);
MakeUnkn(0x41693C, 1);
MakeNameEx(0x41693C, "TThreadList.Create", 0x20);
MakeComm(0x41693C, "'constructor TThreadList.Create;'");
MakeCode(0x41693C);
MakeCode(0x41694A);
MakeCode(0x416988);
MakeFunction(0x41693C, 0x41698D);
MakeUnkn(0x416990, 1);
MakeNameEx(0x416990, "TThreadList.Destroy", 0x20);
MakeComm(0x416990, "'destructor TThreadList.Destroy;'");
MakeCode(0x416990);
MakeCode(0x4169D1);
MakeCode(0x4169DE);
MakeCode(0x4169F3);
MakeCode(0x4169F8);
MakeCode(0x416A08);
MakeFunction(0x416990, 0x416A0C);
MakeUnkn(0x416A0C, 1);
MakeNameEx(0x416A0C, "TThreadList.Add", 0x20);
MakeComm(0x416A0C, "'procedure TThreadList.Add(Item:Pointer);'");
MakeCode(0x416A0C);
MakeCode(0x416A45);
MakeCode(0x416A54);
MakeCode(0x416A72);
MakeCode(0x416A7F);
MakeCode(0x416A88);
MakeCode(0x416A8D);
MakeFunction(0x416A0C, 0x416A93);
MakeUnkn(0x416A94, 1);
MakeNameEx(0x416A94, "TThreadList.LockList", 0x20);
MakeComm(0x416A94, "'function TThreadList.LockList:TList;'");
MakeCode(0x416A94);
MakeFunction(0x416A94, 0x416AA5);
MakeUnkn(0x416AA8, 1);
MakeNameEx(0x416AA8, "TThreadList.Remove", 0x20);
MakeComm(0x416AA8, "'procedure TThreadList.Remove(Item:Pointer);'");
MakeCode(0x416AA8);
MakeCode(0x416AD5);
MakeCode(0x416AE2);
MakeCode(0x416AEB);
MakeCode(0x416AF0);
MakeFunction(0x416AA8, 0x416AF6);
MakeUnkn(0x416AF8, 1);
MakeNameEx(0x416AF8, "TThreadList.UnlockList", 0x20);
MakeComm(0x416AF8, "'procedure TThreadList.UnlockList;'");
MakeCode(0x416AF8);
MakeFunction(0x416AF8, 0x416B02);
MakeUnkn(0x416B04, 1);
MakeNameEx(0x416B04, "TBits.Destroy", 0x20);
MakeComm(0x416B04, "'destructor TBits.Destroy;'");
MakeCode(0x416B04);
MakeCode(0x416B2F);
MakeFunction(0x416B04, 0x416B32);
MakeUnkn(0x416B34, 1);
MakeNameEx(0x416B34, "TBits.Error", 0x20);
MakeComm(0x416B34, "'procedure TBits.Error;'");
MakeCode(0x416B34);
MakeFunction(0x416B34, 0x416B4C);
MakeUnkn(0x416B4C, 1);
MakeNameEx(0x416B4C, "Min", 0x20);
MakeComm(0x416B4C, "'function Min(X:Integer; Y:Integer):Integer;'");
MakeCode(0x416B4C);
MakeCode(0x416B54);
MakeFunction(0x416B4C, 0x416B57);
MakeUnkn(0x416B58, 1);
MakeNameEx(0x416B58, "TBits.SetSize", 0x20);
MakeComm(0x416B58, "'procedure TBits.SetSize(Value:Integer);'");
MakeCode(0x416B58);
MakeCode(0x416B75);
MakeCode(0x416B80);
MakeCode(0x416B97);
MakeCode(0x416BC3);
MakeCode(0x416BE3);
MakeCode(0x416BED);
MakeCode(0x416BF3);
MakeCode(0x416BF6);
MakeFunction(0x416B58, 0x416BFC);
MakeUnkn(0x416BFC, 1);
MakeNameEx(0x416BFC, "TBits.SetBit", 0x20);
MakeComm(0x416BFC, "'procedure TBits.SetBit(Index:Integer; Value:Boolean);'");
MakeCode(0x416BFC);
MakeCode(0x416C01);
MakeCode(0x416C0C);
MakeCode(0x416C10);
MakeFunction(0x416BFC, 0x416C28);
MakeUnkn(0x416C28, 1);
MakeNameEx(0x416C28, "TBits.OpenBit", 0x20);
MakeComm(0x416C28, "'function TBits.OpenBit:Integer;'");
MakeCode(0x416C28);
MakeCode(0x416C3C);
MakeCode(0x416C4A);
MakeCode(0x416C60);
MakeCode(0x416C6D);
MakeCode(0x416C86);
MakeCode(0x416C8B);
MakeCode(0x416C91);
MakeCode(0x416C94);
MakeFunction(0x416C28, 0x416C99);
MakeUnkn(0x416CA0, 1);
MakeNameEx(0x416CA0, "TMemoryStream.Destroy", 0x20);
MakeComm(0x416CA0, "'destructor TMemoryStream.Destroy;'");
MakeCode(0x416CA0);
MakeCode(0x416CC9);
MakeFunction(0x416CA0, 0x416CCC);
MakeUnkn(0x416CCC, 1);
MakeNameEx(0x416CCC, "TPersistent.Assign", 0x20);
MakeComm(0x416CCC, "'procedure TPersistent.Assign(Source:TPersistent);'");
MakeCode(0x416CCC);
MakeCode(0x416CD6);
MakeFunction(0x416CCC, 0x416CDE);
MakeUnkn(0x416CE0, 1);
MakeNameEx(0x416CE0, "TPersistent.AssignError", 0x20);
MakeComm(0x416CE0, "'procedure TPersistent.AssignError(Source:TPersistent);'");
MakeCode(0x416CE0);
MakeCode(0x416D23);
MakeCode(0x416D30);
MakeCode(0x416D80);
MakeCode(0x416D8D);
MakeCode(0x416D96);
MakeCode(0x416D9B);
MakeFunction(0x416CE0, 0x416DA3);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x416DAC, -1);
MakeDword(0x416DA8);
MakeDword(0x416DA4);
MakeUnkn(0x416DB0, 1);
MakeNameEx(0x416DB0, "TPersistent.AssignTo", 0x20);
MakeComm(0x416DB0, "'procedure TPersistent.AssignTo(Dest:TPersistent);'");
MakeCode(0x416DB0);
MakeFunction(0x416DB0, 0x416DB7);
MakeCode(0x416DB8);
MakeFunction(0x416DB8, 0x416DB9);
MakeUnkn(0x416DBC, 1);
MakeNameEx(0x416DBC, "TPersistent.GetNamePath", 0x20);
MakeComm(0x416DBC, "'procedure TPersistent.GetNamePath;'");
MakeCode(0x416DBC);
MakeCode(0x416E3B);
MakeCode(0x416E48);
MakeCode(0x416E51);
MakeCode(0x416E56);
MakeFunction(0x416DBC, 0x416E5F);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x416E68, -1);
MakeDword(0x416E64);
MakeDword(0x416E60);
MakeUnkn(0x416E6C, 1);
MakeNameEx(0x416E6C, "TPersistent.sub_00416E6C", 0x20);
MakeComm(0x416E6C, "'procedure TPersistent.sub_00416E6C;'");
MakeCode(0x416E6C);
MakeFunction(0x416E6C, 0x416E6F);
MakeUnkn(0x416E70, 1);
MakeNameEx(0x416E70, "TInterfacedPersistent.AfterConstruction", 0x20);
MakeComm(0x416E70, "'procedure TInterfacedPersistent.AfterConstruction;'");
MakeCode(0x416E70);
MakeCode(0x416EAB);
MakeFunction(0x416E70, 0x416EAE);
MakeUnkn(0x416EC0, 1);
MakeNameEx(0x416EC0, "TInterfacedPersistent._AddRef", 0x20);
MakeComm(0x416EC0, "'function TInterfacedPersistent._AddRef:Integer; stdcall;'");
MakeCode(0x416EC0);
MakeCode(0x416ED7);
MakeCode(0x416EDA);
MakeFunction(0x416EC0, 0x416EDE);
MakeUnkn(0x416EE0, 1);
MakeNameEx(0x416EE0, "TInterfacedPersistent._Release", 0x20);
MakeComm(0x416EE0, "'function TInterfacedPersistent._Release:Integer; stdcall;'");
MakeCode(0x416EE0);
MakeCode(0x416EF7);
MakeCode(0x416EFA);
MakeFunction(0x416EE0, 0x416EFE);
MakeUnkn(0x416F00, 1);
MakeNameEx(0x416F00, "TInterfacedPersistent.QueryInterface", 0x20);
MakeComm(0x416F00, "'function TInterfacedPersistent.QueryInterface(const IID:TGUID; var Obj:Pointer):HRESULT; stdcall;'");
MakeCode(0x416F00);
MakeCode(0x416F1C);
MakeCode(0x416F21);
MakeFunction(0x416F00, 0x416F26);
MakeUnkn(0x416F28, 1);
MakeNameEx(0x416F28, "GetDesigner", 0x20);
MakeComm(0x416F28, "'procedure GetDesigner(Obj:TPersistent; var Result:IDesignerNotify);'");
MakeCode(0x416F28);
MakeCode(0x416F3F);
MakeCode(0x416F89);
MakeCode(0x416FA0);
MakeCode(0x416FB1);
MakeFunction(0x416F28, 0x416FC8);
MakeUnkn(0x416FC8, 1);
MakeNameEx(0x416FC8, "NotifyDesigner", 0x20);
MakeComm(0x416FC8, "'procedure NotifyDesigner(Self:TPersistent; Item:TPersistent; Operation:TOperation);'");
MakeCode(0x416FC8);
MakeCode(0x417007);
MakeCode(0x417014);
MakeCode(0x41701D);
MakeCode(0x417022);
MakeFunction(0x416FC8, 0x41702A);
MakeUnkn(0x41702C, 1);
MakeNameEx(0x41702C, "TCollectionItem.Create", 0x20);
MakeComm(0x41702C, "'constructor TCollectionItem.Create(Collection:TCollection);'");
MakeCode(0x41702C);
MakeCode(0x41703A);
MakeCode(0x41705C);
MakeFunction(0x41702C, 0x417061);
MakeUnkn(0x417064, 1);
MakeNameEx(0x417064, "TCollectionItem.Destroy", 0x20);
MakeComm(0x417064, "'destructor TCollectionItem.Destroy;'");
MakeCode(0x417064);
MakeComm(0x417075, "'TCollectionItem.SetCollection'");
MakeCode(0x41708F);
MakeFunction(0x417064, 0x417092);
MakeUnkn(0x417094, 1);
MakeNameEx(0x417094, "TCollectionItem.Changed", 0x20);
MakeComm(0x417094, "'procedure TCollectionItem.Changed(AllItems:Boolean);'");
MakeCode(0x417094);
MakeCode(0x4170AA);
MakeCode(0x4170AC);
MakeCode(0x4170B3);
MakeFunction(0x417094, 0x4170B5);
MakeUnkn(0x4170B8, 1);
MakeNameEx(0x4170B8, "TCollectionItem.GetIndex", 0x20);
MakeComm(0x4170B8, "'function TCollectionItem.GetIndex:Integer;'");
MakeCode(0x4170B8);
MakeCode(0x4170C9);
MakeFunction(0x4170B8, 0x4170CD);
MakeUnkn(0x4170D0, 1);
MakeNameEx(0x4170D0, "TCollectionItem.GetDisplayName", 0x20);
MakeComm(0x4170D0, "'function TCollectionItem.GetDisplayName:AnsiString;'");
MakeCode(0x4170D0);
MakeFunction(0x4170D0, 0x4170F7);
MakeUnkn(0x4170F8, 1);
MakeNameEx(0x4170F8, "TCollectionItem.GetNamePath", 0x20);
MakeComm(0x4170F8, "'procedure TCollectionItem.GetNamePath;'");
MakeCode(0x4170F8);
MakeCode(0x41715D);
MakeCode(0x417177);
MakeCode(0x417184);
MakeCode(0x41718D);
MakeCode(0x417192);
MakeFunction(0x4170F8, 0x41719B);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4171A4, -1);
MakeDword(0x4171A0);
MakeDword(0x41719C);
MakeUnkn(0x4171AC, 1);
MakeNameEx(0x4171AC, "TCollectionItem.sub_00416E6C", 0x20);
MakeComm(0x4171AC, "'procedure TCollectionItem.sub_00416E6C;'");
MakeCode(0x4171AC);
MakeComm(0x4171AC, "'TCollectionItem.FCollection:TCollection'");
MakeFunction(0x4171AC, 0x4171B0);
MakeUnkn(0x4171B0, 1);
MakeNameEx(0x4171B0, "TCollectionItem.SetCollection", 0x20);
MakeComm(0x4171B0, "'procedure TCollectionItem.SetCollection(Value:TCollection);'");
MakeCode(0x4171B0);
MakeCode(0x4171C8);
MakeCode(0x4171D5);
MakeFunction(0x4171B0, 0x4171D8);
MakeUnkn(0x4171D8, 1);
MakeNameEx(0x4171D8, "TCollectionItem.SetDisplayName", 0x20);
MakeComm(0x4171D8, "'procedure TCollectionItem.SetDisplayName(const Value:AnsiString);'");
MakeCode(0x4171D8);
MakeFunction(0x4171D8, 0x4171E0);
MakeUnkn(0x4171E0, 1);
MakeNameEx(0x4171E0, "TCollectionItem.SetIndex", 0x20);
MakeComm(0x4171E0, "'procedure TCollectionItem.SetIndex(Value:Integer);'");
MakeCode(0x4171E0);
MakeCode(0x41720C);
MakeFunction(0x4171E0, 0x41720F);
MakeUnkn(0x417210, 1);
MakeNameEx(0x417210, "TCollection.Create", 0x20);
MakeComm(0x417210, "'constructor TCollection.Create(ItemClass:TCollectionItemClass);'");
MakeCode(0x417210);
MakeCode(0x41721E);
MakeCode(0x417254);
MakeFunction(0x417210, 0x417259);
MakeUnkn(0x41725C, 1);
MakeNameEx(0x41725C, "TCollection.Destroy", 0x20);
MakeComm(0x41725C, "'destructor TCollection.Destroy;'");
MakeCode(0x41725C);
MakeComm(0x417267, "'TCollection.FUpdateCount:Integer'");
MakeComm(0x41726E, "'TCollection.FItems:TList'");
MakeCode(0x41727B);
MakeComm(0x417286, "'TCollection.FItems:TList'");
MakeCode(0x4172A5);
MakeFunction(0x41725C, 0x4172A8);
MakeUnkn(0x4172A8, 1);
MakeNameEx(0x4172A8, "TCollection.Add", 0x20);
MakeComm(0x4172A8, "'function TCollection.Add:TCollectionItem;'");
MakeCode(0x4172A8);
MakeFunction(0x4172A8, 0x4172C8);
MakeUnkn(0x4172C8, 1);
MakeNameEx(0x4172C8, "TCollection.Assign", 0x20);
MakeComm(0x4172C8, "'procedure TCollection.Assign(Source:TPersistent);'");
MakeCode(0x4172C8);
MakeCode(0x417314);
MakeCode(0x417330);
MakeCode(0x41733D);
MakeCode(0x417346);
MakeCode(0x41734B);
MakeCode(0x41734D);
MakeFunction(0x4172C8, 0x41735D);
MakeCode(0x417360);
MakeComm(0x417360, "'TCollection.FUpdateCount:Integer'");
MakeFunction(0x417360, 0x417364);
MakeUnkn(0x417364, 1);
MakeNameEx(0x417364, "TCollection.Changed", 0x20);
MakeComm(0x417364, "'procedure TCollection.Changed;'");
MakeCode(0x417364);
MakeFunction(0x417364, 0x417372);
MakeUnkn(0x417374, 1);
MakeNameEx(0x417374, "TCollection.Clear", 0x20);
MakeComm(0x417374, "'procedure TCollection.Clear;'");
MakeCode(0x417374);
MakeCode(0x4173A0);
MakeCode(0x4173AC);
MakeCode(0x4173B8);
MakeCode(0x4173C5);
MakeCode(0x4173CE);
MakeCode(0x4173D3);
MakeCode(0x4173D5);
MakeFunction(0x417374, 0x4173D9);
MakeUnkn(0x4173DC, 1);
MakeNameEx(0x4173DC, "TCollection.EndUpdate", 0x20);
MakeComm(0x4173DC, "'procedure TCollection.EndUpdate;'");
MakeCode(0x4173DC);
MakeFunction(0x4173DC, 0x4173E5);
MakeUnkn(0x4173E8, 1);
MakeNameEx(0x4173E8, "TCollection.sub_004173E8", 0x20);
MakeComm(0x4173E8, "'procedure TCollection.sub_004173E8;'");
MakeCode(0x4173E8);
MakeFunction(0x4173E8, 0x4173EB);
MakeUnkn(0x4173EC, 1);
MakeNameEx(0x4173EC, "TCollection.GetAttr", 0x20);
MakeComm(0x4173EC, "'procedure TCollection.GetAttr(Index:Integer);'");
MakeCode(0x4173EC);
MakeFunction(0x4173EC, 0x4173F8);
MakeUnkn(0x4173F8, 1);
MakeNameEx(0x4173F8, "TCollection.GetItemAttr", 0x20);
MakeComm(0x4173F8, "'procedure TCollection.GetItemAttr(Index:Integer; ItemIndex:Integer);'");
MakeCode(0x4173F8);
MakeFunction(0x4173F8, 0x417418);
MakeUnkn(0x417418, 1);
MakeNameEx(0x417418, "TCollection.GetCount", 0x20);
MakeComm(0x417418, "'function TCollection.GetCount:Integer;'");
MakeCode(0x417418);
MakeFunction(0x417418, 0x41741F);
MakeUnkn(0x417420, 1);
MakeNameEx(0x417420, "TCollection.GetItem", 0x20);
MakeComm(0x417420, "'function TCollection.GetItem(Index:Integer):TCollectionItem;'");
MakeCode(0x417420);
MakeFunction(0x417420, 0x417433);
MakeUnkn(0x417434, 1);
MakeNameEx(0x417434, "TCollection.GetNamePath", 0x20);
MakeComm(0x417434, "'procedure TCollection.GetNamePath;'");
MakeCode(0x417434);
MakeCode(0x4174C7);
MakeCode(0x4174D4);
MakeCode(0x4174E2);
MakeCode(0x4174E7);
MakeFunction(0x417434, 0x4174F0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4174F8, -1);
MakeDword(0x4174F4);
MakeDword(0x4174F0);
MakeUnkn(0x4174FC, 1);
MakeNameEx(0x4174FC, "TCollection.GetPropName", 0x20);
MakeComm(0x4174FC, "'function TCollection.GetPropName:AnsiString;'");
MakeCode(0x4174FC);
MakeCode(0x4175B0);
MakeCode(0x4175E0);
MakeCode(0x4175E4);
MakeCode(0x4175F1);
MakeCode(0x4175FA);
MakeCode(0x4175FF);
MakeCode(0x41760F);
MakeFunction(0x4174FC, 0x417616);
MakeUnkn(0x417618, 1);
MakeNameEx(0x417618, "TCollection.InsertItem", 0x20);
MakeComm(0x417618, "'procedure TCollection.InsertItem(Item:TCollectionItem);'");
MakeCode(0x417618);
MakeCode(0x41763F);
MakeFunction(0x417618, 0x41767F);
MakeUnkn(0x417680, 1);
MakeNameEx(0x417680, "TCollection.RemoveItem", 0x20);
MakeComm(0x417680, "'procedure TCollection.RemoveItem(Item:TCollectionItem);'");
MakeCode(0x417680);
MakeCode(0x4176AC);
MakeCode(0x4176B6);
MakeFunction(0x417680, 0x4176D1);
MakeCode(0x4176D4);
MakeFunction(0x4176D4, 0x4176D5);
MakeCode(0x4176D8);
MakeFunction(0x4176D8, 0x4176D9);
MakeCode(0x4176DC);
MakeFunction(0x4176DC, 0x4176DD);
MakeCode(0x4176E0);
MakeFunction(0x4176E0, 0x4176E1);
MakeUnkn(0x4176E4, 1);
MakeNameEx(0x4176E4, "TCollection.Notify", 0x20);
MakeComm(0x4176E4, "'procedure TCollection.Notify(Item:TCollectionItem; Action:TCollectionNotification);'");
MakeCode(0x4176E4);
MakeCode(0x4176F3);
MakeCode(0x4176FC);
MakeCode(0x417704);
MakeFunction(0x4176E4, 0x417706);
MakeUnkn(0x417708, 1);
MakeNameEx(0x417708, "TStrings.Destroy", 0x20);
MakeComm(0x417708, "'destructor TStrings.Destroy;'");
MakeCode(0x417708);
MakeCode(0x417733);
MakeFunction(0x417708, 0x417736);
MakeUnkn(0x417738, 1);
MakeNameEx(0x417738, "TStrings.Add", 0x20);
MakeComm(0x417738, "'function TStrings.Add(const S:AnsiString):Integer;'");
MakeCode(0x417738);
MakeFunction(0x417738, 0x417759);
MakeUnkn(0x41775C, 1);
MakeNameEx(0x41775C, "TStrings.AddObject", 0x20);
MakeComm(0x41775C, "'function TStrings.AddObject(const S:AnsiString; AObject:TObject):Integer;'");
MakeCode(0x41775C);
MakeFunction(0x41775C, 0x41777D);
MakeUnkn(0x417780, 1);
MakeNameEx(0x417780, "TStrings.AddStrings", 0x20);
MakeComm(0x417780, "'procedure TStrings.AddStrings(Strings:TStrings);'");
MakeCode(0x417780);
MakeCode(0x4177CA);
MakeCode(0x4177F4);
MakeCode(0x417801);
MakeCode(0x41780A);
MakeCode(0x41780F);
MakeCode(0x417811);
MakeCode(0x41781E);
MakeCode(0x417827);
MakeCode(0x41782C);
MakeFunction(0x417780, 0x417835);
MakeUnkn(0x417838, 1);
MakeNameEx(0x417838, "TStrings.Assign", 0x20);
MakeComm(0x417838, "'procedure TStrings.Assign(Source:TPersistent);'");
MakeCode(0x417838);
MakeCode(0x4178C2);
MakeCode(0x4178CF);
MakeCode(0x4178D8);
MakeCode(0x4178DD);
MakeCode(0x4178DF);
MakeFunction(0x417838, 0x4178EE);
MakeUnkn(0x4178F0, 1);
MakeNameEx(0x4178F0, "TStrings.BeginUpdate", 0x20);
MakeComm(0x4178F0, "'procedure TStrings.BeginUpdate;'");
MakeCode(0x4178F0);
MakeCode(0x417902);
MakeFunction(0x4178F0, 0x417907);
MakeUnkn(0x417908, 1);
MakeNameEx(0x417908, "DoWrite", 0x20);
MakeComm(0x417908, "'function DoWrite:Boolean;'");
MakeCode(0x417908);
MakeCode(0x417947);
MakeCode(0x417957);
MakeFunction(0x417908, 0x41795D);
MakeUnkn(0x417960, 1);
MakeNameEx(0x417960, "TStrings.DefineProperties", 0x20);
MakeComm(0x417960, "'procedure TStrings.DefineProperties(Filer:TFiler);'");
MakeCode(0x417960);
MakeFunction(0x417960, 0x41799A);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4179A4, -1);
MakeDword(0x4179A0);
MakeDword(0x41799C);
MakeUnkn(0x4179AC, 1);
MakeNameEx(0x4179AC, "TStrings.EndUpdate", 0x20);
MakeComm(0x4179AC, "'procedure TStrings.EndUpdate;'");
MakeCode(0x4179AC);
MakeFunction(0x4179AC, 0x4179BD);
MakeUnkn(0x4179C0, 1);
MakeNameEx(0x4179C0, "TStrings.Equals", 0x20);
MakeComm(0x4179C0, "'function TStrings.Equals(Strings:TStrings):Boolean;'");
MakeCode(0x4179C0);
MakeCode(0x417A09);
MakeCode(0x417A36);
MakeCode(0x417A3A);
MakeCode(0x417A47);
MakeCode(0x417A55);
MakeCode(0x417A5A);
MakeFunction(0x4179C0, 0x417A67);
MakeCode(0x417A68);
MakeFunction(0x417A68, 0x417A6C);
MakeUnkn(0x417A6C, 1);
MakeNameEx(0x417A6C, "TStrings.Error", 0x20);
MakeComm(0x417A6C, "'procedure TStrings.Error(const Msg:AnsiString; Data:Integer);'");
MakeCode(0x417A6C);
MakeFunction(0x417A6C, 0x417AA3);
MakeUnkn(0x417AA4, 1);
MakeNameEx(0x417AA4, "TStrings.Error_0", 0x20);
MakeComm(0x417AA4, "'procedure TStrings.Error(Msg:PResStringRec; Data:Integer);'");
MakeCode(0x417AA4);
MakeCode(0x417AD6);
MakeCode(0x417AE3);
MakeCode(0x417AEC);
MakeCode(0x417AF1);
MakeFunction(0x417AA4, 0x417AF9);
MakeUnkn(0x417AFC, 1);
MakeNameEx(0x417AFC, "TStrings.Exchange", 0x20);
MakeComm(0x417AFC, "'procedure TStrings.Exchange(Index1:Integer; Index2:Integer);'");
MakeCode(0x417AFC);
MakeCode(0x417B9C);
MakeCode(0x417BA9);
MakeCode(0x417BB2);
MakeCode(0x417BB7);
MakeCode(0x417BB9);
MakeCode(0x417BC6);
MakeCode(0x417BD7);
MakeCode(0x417BDC);
MakeFunction(0x417AFC, 0x417BE5);
MakeCode(0x417BE8);
MakeComm(0x417BEA, "'TStrings.GetCount'");
MakeFunction(0x417BE8, 0x417BEE);
MakeCode(0x417BF0);
MakeFunction(0x417BF0, 0x417BF3);
MakeUnkn(0x417BF4, 1);
MakeNameEx(0x417BF4, "TStrings.GetText", 0x20);
MakeComm(0x417BF4, "'function TStrings.GetText:PChar;'");
MakeCode(0x417BF4);
MakeCode(0x417C23);
MakeCode(0x417C30);
MakeCode(0x417C39);
MakeCode(0x417C3E);
MakeFunction(0x417BF4, 0x417C46);
MakeUnkn(0x417C48, 1);
MakeNameEx(0x417C48, "TStrings.GetTextStr", 0x20);
MakeComm(0x417C48, "'function TStrings.GetTextStr:AnsiString;'");
MakeCode(0x417C48);
MakeCode(0x417C9A);
MakeCode(0x417CBA);
MakeCode(0x417CC6);
MakeCode(0x417CD1);
MakeCode(0x417CF6);
MakeCode(0x417D10);
MakeCode(0x417D26);
MakeCode(0x417D32);
MakeCode(0x417D48);
MakeCode(0x417D4E);
MakeCode(0x417D5B);
MakeCode(0x417D71);
MakeCode(0x417D76);
MakeFunction(0x417C48, 0x417D7E);
MakeUnkn(0x417D80, 1);
MakeNameEx(0x417D80, "TStrings.GetValue", 0x20);
MakeComm(0x417D80, "'function TStrings.GetValue(const Name:AnsiString):AnsiString;'");
MakeCode(0x417D80);
MakeCode(0x417DC6);
MakeCode(0x417DEB);
MakeCode(0x417DF3);
MakeCode(0x417E00);
MakeCode(0x417E09);
MakeCode(0x417E0E);
MakeFunction(0x417D80, 0x417E17);
MakeUnkn(0x417E18, 1);
MakeNameEx(0x417E18, "TStrings.IndexOf", 0x20);
MakeComm(0x417E18, "'function TStrings.IndexOf(const S:AnsiString):Integer;'");
MakeCode(0x417E18);
MakeCode(0x417E4F);
MakeCode(0x417E73);
MakeCode(0x417E7A);
MakeCode(0x417E87);
MakeCode(0x417E90);
MakeCode(0x417E95);
MakeFunction(0x417E18, 0x417EA1);
MakeUnkn(0x417EA4, 1);
MakeNameEx(0x417EA4, "TStrings.IndexOfName", 0x20);
MakeComm(0x417EA4, "'function TStrings.IndexOfName(const Name:AnsiString):Integer;'");
MakeCode(0x417EA4);
MakeCode(0x417EE1);
MakeCode(0x417F35);
MakeCode(0x417F3D);
MakeCode(0x417F44);
MakeCode(0x417F51);
MakeCode(0x417F67);
MakeCode(0x417F6C);
MakeFunction(0x417EA4, 0x417F77);
MakeUnkn(0x417F78, 1);
MakeNameEx(0x417F78, "TStrings.IndexOfObject", 0x20);
MakeComm(0x417F78, "'function TStrings.IndexOfObject(AObject:TObject):Integer;'");
MakeCode(0x417F78);
MakeCode(0x417F91);
MakeCode(0x417FA2);
MakeCode(0x417FA5);
MakeFunction(0x417F78, 0x417FAC);
MakeUnkn(0x417FAC, 1);
MakeNameEx(0x417FAC, "TStrings.InsertObject", 0x20);
MakeComm(0x417FAC, "'procedure TStrings.InsertObject(Index:Integer; const S:AnsiString; AObject:TObject);'");
MakeCode(0x417FAC);
MakeFunction(0x417FAC, 0x417FDA);
MakeUnkn(0x417FDC, 1);
MakeNameEx(0x417FDC, "TStrings.LoadFromFile", 0x20);
MakeComm(0x417FDC, "'procedure TStrings.LoadFromFile(const FileName:AnsiString);'");
MakeCode(0x417FDC);
MakeCode(0x41800E);
MakeCode(0x41801B);
MakeCode(0x418024);
MakeCode(0x418029);
MakeFunction(0x417FDC, 0x41802F);
MakeUnkn(0x418030, 1);
MakeNameEx(0x418030, "TStrings.LoadFromStream", 0x20);
MakeComm(0x418030, "'procedure TStrings.LoadFromStream(Stream:TStream);'");
MakeCode(0x418030);
MakeCode(0x41809A);
MakeCode(0x4180A7);
MakeCode(0x4180B0);
MakeCode(0x4180B5);
MakeCode(0x4180B7);
MakeCode(0x4180C4);
MakeCode(0x4180CD);
MakeCode(0x4180D2);
MakeFunction(0x418030, 0x4180DA);
MakeUnkn(0x4180DC, 1);
MakeNameEx(0x4180DC, "TStrings.Move", 0x20);
MakeComm(0x4180DC, "'procedure TStrings.Move(CurIndex:Integer; NewIndex:Integer);'");
MakeCode(0x4180DC);
MakeCode(0x41814A);
MakeCode(0x418157);
MakeCode(0x418160);
MakeCode(0x418165);
MakeCode(0x418167);
MakeCode(0x418174);
MakeCode(0x41817D);
MakeCode(0x418182);
MakeFunction(0x4180DC, 0x41818B);
MakeUnkn(0x41818C, 1);
MakeNameEx(0x41818C, "TStrings.Put", 0x20);
MakeComm(0x41818C, "'procedure TStrings.Put(Index:Integer; const S:AnsiString);'");
MakeCode(0x41818C);
MakeFunction(0x41818C, 0x4181BB);
MakeCode(0x4181BC);
MakeFunction(0x4181BC, 0x4181BD);
MakeUnkn(0x4181C0, 1);
MakeNameEx(0x4181C0, "TStrings.ReadData", 0x20);
MakeComm(0x4181C0, "'procedure TStrings.ReadData(Reader:TReader);'");
MakeCode(0x4181C0);
MakeCode(0x418207);
MakeCode(0x41821D);
MakeCode(0x418229);
MakeCode(0x418236);
MakeCode(0x41823F);
MakeCode(0x418244);
MakeCode(0x41824E);
MakeCode(0x41825B);
MakeCode(0x418264);
MakeCode(0x418269);
MakeFunction(0x4181C0, 0x41826F);
MakeUnkn(0x418270, 1);
MakeNameEx(0x418270, "TStrings.SaveToFile", 0x20);
MakeComm(0x418270, "'procedure TStrings.SaveToFile(const FileName:AnsiString);'");
MakeCode(0x418270);
MakeCode(0x4182A5);
MakeCode(0x4182B2);
MakeCode(0x4182BB);
MakeCode(0x4182C0);
MakeFunction(0x418270, 0x4182C6);
MakeUnkn(0x4182C8, 1);
MakeNameEx(0x4182C8, "TStrings.SaveToStream", 0x20);
MakeComm(0x4182C8, "'procedure TStrings.SaveToStream(Stream:TStream);'");
MakeCode(0x4182C8);
MakeCode(0x4182F7);
MakeCode(0x418303);
MakeCode(0x418310);
MakeCode(0x418319);
MakeCode(0x41831E);
MakeFunction(0x4182C8, 0x418325);
MakeCode(0x418328);
MakeFunction(0x418328, 0x418329);
MakeUnkn(0x41832C, 1);
MakeNameEx(0x41832C, "TStrings.SetStringsAdapter", 0x20);
MakeComm(0x41832C, "'procedure TStrings.SetStringsAdapter(const Value:IStringsAdapter);'");
MakeCode(0x41832C);
MakeCode(0x418340);
MakeCode(0x41835A);
MakeFunction(0x41832C, 0x41835D);
MakeUnkn(0x418360, 1);
MakeNameEx(0x418360, "TStrings.SetText", 0x20);
MakeComm(0x418360, "'procedure TStrings.SetText(Text:PChar);'");
MakeCode(0x418360);
MakeCode(0x41838D);
MakeCode(0x41839A);
MakeCode(0x4183A3);
MakeCode(0x4183A8);
MakeFunction(0x418360, 0x4183AF);
MakeUnkn(0x4183B0, 1);
MakeNameEx(0x4183B0, "TStrings.SetTextStr", 0x20);
MakeComm(0x4183B0, "'procedure TStrings.SetTextStr(const Value:AnsiString);'");
MakeCode(0x4183B0);
MakeCode(0x41841E);
MakeCode(0x418422);
MakeCode(0x418423);
MakeCode(0x418432);
MakeCode(0x418451);
MakeCode(0x418457);
MakeCode(0x418461);
MakeCode(0x418476);
MakeCode(0x41847E);
MakeCode(0x41849B);
MakeCode(0x4184A0);
MakeCode(0x4184C0);
MakeCode(0x4184C1);
MakeCode(0x4184CA);
MakeCode(0x4184EC);
MakeCode(0x4184F1);
MakeCode(0x4184FE);
MakeCode(0x418507);
MakeCode(0x41850C);
MakeCode(0x41850E);
MakeCode(0x41851B);
MakeCode(0x418539);
MakeCode(0x41853E);
MakeFunction(0x4183B0, 0x418547);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x418550, -1);
MakeDword(0x41854C);
MakeDword(0x418548);
MakeCode(0x418554);
MakeFunction(0x418554, 0x418555);
MakeUnkn(0x418558, 1);
MakeNameEx(0x418558, "TStrings.SetValue", 0x20);
MakeComm(0x418558, "'procedure TStrings.SetValue(const Name:AnsiString; const Value:AnsiString);'");
MakeCode(0x418558);
MakeCode(0x4185A0);
MakeCode(0x4185D5);
MakeCode(0x4185E2);
MakeCode(0x4185EF);
MakeCode(0x4185FD);
MakeCode(0x418602);
MakeFunction(0x418558, 0x41860B);
MakeUnkn(0x41860C, 1);
MakeNameEx(0x41860C, "TStrings.WriteData", 0x20);
MakeComm(0x41860C, "'procedure TStrings.WriteData(Writer:TWriter);'");
MakeCode(0x41860C);
MakeCode(0x418648);
MakeCode(0x418664);
MakeCode(0x41866C);
MakeCode(0x418679);
MakeCode(0x418682);
MakeCode(0x418687);
MakeFunction(0x41860C, 0x418690);
MakeUnkn(0x418690, 1);
MakeNameEx(0x418690, "TStrings.GetDelimiter", 0x20);
MakeComm(0x418690, "'function TStrings.GetDelimiter:Char;'");
MakeCode(0x418690);
MakeCode(0x4186A2);
MakeFunction(0x418690, 0x4186A8);
MakeUnkn(0x4186A8, 1);
MakeNameEx(0x4186A8, "TStrings.GetLineBreak", 0x20);
MakeComm(0x4186A8, "'function TStrings.GetLineBreak:AnsiString;'");
MakeCode(0x4186A8);
MakeCode(0x4186C0);
MakeFunction(0x4186A8, 0x4186CD);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4186D8, -1);
MakeDword(0x4186D4);
MakeDword(0x4186D0);
MakeUnkn(0x4186DC, 1);
MakeNameEx(0x4186DC, "TStrings.GetQuoteChar", 0x20);
MakeComm(0x4186DC, "'function TStrings.GetQuoteChar:Char;'");
MakeCode(0x4186DC);
MakeCode(0x4186EE);
MakeFunction(0x4186DC, 0x4186F4);
MakeUnkn(0x4186F4, 1);
MakeNameEx(0x4186F4, "TStrings.SetDelimiter", 0x20);
MakeComm(0x4186F4, "'procedure TStrings.SetDelimiter(const Value:Char);'");
MakeCode(0x4186F4);
MakeCode(0x418705);
MakeCode(0x41870C);
MakeFunction(0x4186F4, 0x41870F);
MakeUnkn(0x418710, 1);
MakeNameEx(0x418710, "TStrings.SetLineBreak", 0x20);
MakeComm(0x418710, "'procedure TStrings.SetLineBreak(const Value:AnsiString);'");
MakeCode(0x418710);
MakeCode(0x418728);
MakeCode(0x418736);
MakeFunction(0x418710, 0x418739);
MakeUnkn(0x41873C, 1);
MakeNameEx(0x41873C, "TStrings.SetQuoteChar", 0x20);
MakeComm(0x41873C, "'procedure TStrings.SetQuoteChar(const Value:Char);'");
MakeCode(0x41873C);
MakeCode(0x41874D);
MakeCode(0x418754);
MakeFunction(0x41873C, 0x418757);
MakeUnkn(0x418758, 1);
MakeNameEx(0x418758, "TStrings.CompareStrings", 0x20);
MakeComm(0x418758, "'function TStrings.CompareStrings(const S1:AnsiString; const S2:AnsiString):Integer;'");
MakeCode(0x418758);
MakeCode(0x41876B);
MakeCode(0x418776);
MakeFunction(0x418758, 0x41879C);
MakeUnkn(0x41879C, 1);
MakeNameEx(0x41879C, "TStrings.GetNameValueSeparator", 0x20);
MakeComm(0x41879C, "'function TStrings.GetNameValueSeparator:Char;'");
MakeCode(0x41879C);
MakeCode(0x4187AE);
MakeFunction(0x41879C, 0x4187B4);
MakeUnkn(0x4187B4, 1);
MakeNameEx(0x4187B4, "TStrings.SetNameValueSeparator", 0x20);
MakeComm(0x4187B4, "'procedure TStrings.SetNameValueSeparator(const Value:Char);'");
MakeCode(0x4187B4);
MakeCode(0x4187C5);
MakeCode(0x4187CC);
MakeFunction(0x4187B4, 0x4187CF);
MakeUnkn(0x4187D0, 1);
MakeNameEx(0x4187D0, "TStringList.Destroy", 0x20);
MakeComm(0x4187D0, "'destructor TStringList.Destroy;'");
MakeCode(0x4187D0);
MakeCode(0x41880E);
MakeCode(0x418827);
MakeFunction(0x4187D0, 0x41882A);
MakeUnkn(0x41882C, 1);
MakeNameEx(0x41882C, "TStringList.Add", 0x20);
MakeComm(0x41882C, "'function TStringList.Add(const S:AnsiString):Integer;'");
MakeCode(0x41882C);
MakeFunction(0x41882C, 0x41883C);
MakeUnkn(0x41883C, 1);
MakeNameEx(0x41883C, "TStringList.AddObject", 0x20);
MakeComm(0x41883C, "'function TStringList.AddObject(const S:AnsiString; AObject:TObject):Integer;'");
MakeCode(0x41883C);
MakeCode(0x418855);
MakeCode(0x418875);
MakeCode(0x418884);
MakeCode(0x418895);
MakeFunction(0x41883C, 0x41889E);
MakeUnkn(0x4188A0, 1);
MakeNameEx(0x4188A0, "TStringList.Changed", 0x20);
MakeComm(0x4188A0, "'procedure TStringList.Changed;'");
MakeCode(0x4188A0);
MakeCode(0x4188B8);
MakeFunction(0x4188A0, 0x4188BA);
MakeUnkn(0x4188BC, 1);
MakeNameEx(0x4188BC, "TStringList.Changing", 0x20);
MakeComm(0x4188BC, "'procedure TStringList.Changing;'");
MakeCode(0x4188BC);
MakeCode(0x4188D4);
MakeFunction(0x4188BC, 0x4188D6);
MakeUnkn(0x4188D8, 1);
MakeNameEx(0x4188D8, "TStringList.Clear", 0x20);
MakeComm(0x4188D8, "'procedure TStringList.Clear;'");
MakeCode(0x4188D8);
MakeCode(0x418914);
MakeFunction(0x4188D8, 0x418916);
MakeUnkn(0x418918, 1);
MakeNameEx(0x418918, "TStringList.Delete", 0x20);
MakeComm(0x418918, "'procedure TStringList.Delete(Index:Integer);'");
MakeCode(0x418918);
MakeCode(0x418927);
MakeCode(0x418936);
MakeCode(0x418977);
MakeFunction(0x418918, 0x418984);
MakeUnkn(0x418984, 1);
MakeNameEx(0x418984, "TStringList.Exchange", 0x20);
MakeComm(0x418984, "'procedure TStringList.Exchange(Index1:Integer; Index2:Integer);'");
MakeCode(0x418984);
MakeCode(0x418996);
MakeCode(0x4189A5);
MakeCode(0x4189AE);
MakeCode(0x4189BD);
MakeFunction(0x418984, 0x4189E0);
MakeUnkn(0x4189E0, 1);
MakeNameEx(0x4189E0, "TStringList.ExchangeItems", 0x20);
MakeComm(0x4189E0, "'procedure TStringList.ExchangeItems(Index1:Integer; Index2:Integer);'");
MakeCode(0x4189E0);
MakeFunction(0x4189E0, 0x418A03);
MakeUnkn(0x418A04, 1);
MakeNameEx(0x418A04, "TStringList.Find", 0x20);
MakeComm(0x418A04, "'function TStringList.Find(const S:AnsiString; var Index:Integer):Boolean;'");
MakeCode(0x418A04);
MakeCode(0x418A29);
MakeCode(0x418A51);
MakeCode(0x418A6C);
MakeCode(0x418A72);
MakeFunction(0x418A04, 0x418A85);
MakeUnkn(0x418A88, 1);
MakeNameEx(0x418A88, "TStringList.Get", 0x20);
MakeComm(0x418A88, "'function TStringList.Get(Index:Integer):AnsiString;'");
MakeCode(0x418A88);
MakeCode(0x418A9A);
MakeCode(0x418AA9);
MakeFunction(0x418A88, 0x418ABA);
MakeCode(0x418ABC);
MakeComm(0x418ABC, "'TStringList.FCapacity:Integer'");
MakeFunction(0x418ABC, 0x418AC0);
MakeUnkn(0x418AC0, 1);
MakeNameEx(0x418AC0, "TStringList.GetCount", 0x20);
MakeComm(0x418AC0, "'function TStringList.GetCount:?;'");
MakeCode(0x418AC0);
MakeComm(0x418AC0, "'TStringList.FCount:Integer'");
MakeFunction(0x418AC0, 0x418AC4);
MakeUnkn(0x418AC4, 1);
MakeNameEx(0x418AC4, "TStringList.GetObject", 0x20);
MakeComm(0x418AC4, "'function TStringList.GetObject(Index:Integer):TObject;'");
MakeCode(0x418AC4);
MakeCode(0x418AD3);
MakeCode(0x418AE2);
MakeFunction(0x418AC4, 0x418AEC);
MakeUnkn(0x418AEC, 1);
MakeNameEx(0x418AEC, "TStringList.Grow", 0x20);
MakeComm(0x418AEC, "'procedure TStringList.Grow;'");
MakeCode(0x418AEC);
MakeCode(0x418AFE);
MakeCode(0x418B03);
MakeCode(0x418B0F);
MakeCode(0x418B14);
MakeFunction(0x418AEC, 0x418B1F);
MakeUnkn(0x418B20, 1);
MakeNameEx(0x418B20, "TStringList.IndexOf", 0x20);
MakeComm(0x418B20, "'function TStringList.IndexOf(const S:AnsiString):Integer;'");
MakeCode(0x418B20);
MakeCode(0x418B3B);
MakeCode(0x418B54);
MakeFunction(0x418B20, 0x418B5B);
MakeUnkn(0x418B5C, 1);
MakeNameEx(0x418B5C, "TStringList.Insert", 0x20);
MakeComm(0x418B5C, "'procedure TStringList.Insert(Index:Integer; const S:AnsiString);'");
MakeCode(0x418B5C);
MakeFunction(0x418B5C, 0x418B6C);
MakeUnkn(0x418B6C, 1);
MakeNameEx(0x418B6C, "TStringList.InsertObject", 0x20);
MakeComm(0x418B6C, "'procedure TStringList.InsertObject(Index:Integer; const S:AnsiString; AObject:TObject);'");
MakeCode(0x418B6C);
MakeCode(0x418B8D);
MakeCode(0x418B96);
MakeCode(0x418BA5);
MakeFunction(0x418B6C, 0x418BBE);
MakeUnkn(0x418BC0, 1);
MakeNameEx(0x418BC0, "TStringList.InsertItem", 0x20);
MakeComm(0x418BC0, "'procedure TStringList.InsertItem(Index:Integer; const S:AnsiString; AObject:TObject);'");
MakeCode(0x418BC0);
MakeCode(0x418BE5);
MakeCode(0x418C0C);
MakeFunction(0x418BC0, 0x418C3B);
MakeUnkn(0x418C3C, 1);
MakeNameEx(0x418C3C, "TStringList.Put", 0x20);
MakeComm(0x418C3C, "'procedure TStringList.Put(Index:Integer; const S:AnsiString);'");
MakeCode(0x418C3C);
MakeCode(0x418C5A);
MakeCode(0x418C63);
MakeCode(0x418C72);
MakeFunction(0x418C3C, 0x418C97);
MakeUnkn(0x418C98, 1);
MakeNameEx(0x418C98, "TStringList.PutObject", 0x20);
MakeComm(0x418C98, "'procedure TStringList.PutObject(Index:Integer; AObject:TObject);'");
MakeCode(0x418C98);
MakeCode(0x418CAA);
MakeCode(0x418CB9);
MakeFunction(0x418C98, 0x418CD8);
MakeUnkn(0x418CD8, 1);
MakeNameEx(0x418CD8, "TStringList.QuickSort", 0x20);
MakeComm(0x418CD8, "'procedure TStringList.QuickSort(L:Integer; R:Integer; SCompare:TStringListSortCompare);'");
MakeCode(0x418CD8);
MakeCode(0x418CE9);
MakeCode(0x418CFC);
MakeCode(0x418CFD);
MakeCode(0x418D0E);
MakeCode(0x418D0F);
MakeCode(0x418D38);
MakeCode(0x418D40);
MakeCode(0x418D42);
MakeCode(0x418D5C);
MakeFunction(0x418CD8, 0x418D6C);
MakeUnkn(0x418D6C, 1);
MakeNameEx(0x418D6C, "TStringList.SetCapacity", 0x20);
MakeComm(0x418D6C, "'procedure TStringList.SetCapacity(NewCapacity:Integer);'");
MakeCode(0x418D6C);
MakeFunction(0x418D6C, 0x418D88);
MakeUnkn(0x418D88, 1);
MakeNameEx(0x418D88, "TStringList.SetSorted", 0x20);
MakeComm(0x418D88, "'procedure TStringList.SetSorted(Value:Boolean);'");
MakeCode(0x418D88);
MakeCode(0x418DA1);
MakeCode(0x418DA4);
MakeFunction(0x418D88, 0x418DA7);
MakeUnkn(0x418DA8, 1);
MakeNameEx(0x418DA8, "TStringList.SetUpdateState", 0x20);
MakeComm(0x418DA8, "'procedure TStringList.SetUpdateState(Updating:Boolean);'");
MakeCode(0x418DA8);
MakeCode(0x418DB5);
MakeFunction(0x418DA8, 0x418DBE);
MakeUnkn(0x418DC0, 1);
MakeNameEx(0x418DC0, "StringListCompareStrings", 0x20);
MakeComm(0x418DC0, "'function StringListCompareStrings(List:TStringList; Index1:Integer; Index2:Integer):Integer;'");
MakeCode(0x418DC0);
MakeFunction(0x418DC0, 0x418DDE);
MakeUnkn(0x418DE0, 1);
MakeNameEx(0x418DE0, "TStringList.Sort", 0x20);
MakeComm(0x418DE0, "'procedure TStringList.Sort;'");
MakeCode(0x418DE0);
MakeFunction(0x418DE0, 0x418DEE);
MakeUnkn(0x418DF0, 1);
MakeNameEx(0x418DF0, "TStringList.CustomSort", 0x20);
MakeComm(0x418DF0, "'procedure TStringList.CustomSort(Compare:TStringListSortCompare);'");
MakeCode(0x418DF0);
MakeCode(0x418E24);
MakeFunction(0x418DF0, 0x418E27);
MakeUnkn(0x418E28, 1);
MakeNameEx(0x418E28, "TStringList.CompareStrings", 0x20);
MakeComm(0x418E28, "'function TStringList.CompareStrings(const S1:AnsiString; const S2:AnsiString):Integer;'");
MakeCode(0x418E28);
MakeCode(0x418E41);
MakeCode(0x418E4C);
MakeCode(0x418E6F);
MakeCode(0x418E7A);
MakeCode(0x418E85);
MakeCode(0x418EA6);
MakeFunction(0x418E28, 0x418EAB);
MakeUnkn(0x418EAC, 1);
MakeNameEx(0x418EAC, "TStream.GetPosition", 0x20);
MakeComm(0x418EAC, "'function TStream.GetPosition:Int64;'");
MakeCode(0x418EAC);
MakeFunction(0x418EAC, 0x418ECB);
MakeUnkn(0x418ECC, 1);
MakeNameEx(0x418ECC, "TStream.SetPosition", 0x20);
MakeComm(0x418ECC, "'procedure TStream.SetPosition(const Pos:Int64);'");
MakeCode(0x418ECC);
MakeFunction(0x418ECC, 0x418EE0);
MakeUnkn(0x418EE0, 1);
MakeNameEx(0x418EE0, "TStream.GetSize", 0x20);
MakeComm(0x418EE0, "'function TStream.GetSize:Int64;'");
MakeCode(0x418EE0);
MakeFunction(0x418EE0, 0x418F2C);
MakeCode(0x418F2C);
MakeFunction(0x418F2C, 0x418F2D);
MakeUnkn(0x418F30, 1);
MakeNameEx(0x418F30, "TStream.SetSize64", 0x20);
MakeComm(0x418F30, "'procedure TStream.SetSize64(const NewSize:Int64);'");
MakeCode(0x418F30);
MakeFunction(0x418F30, 0x418F42);
MakeUnkn(0x418F44, 1);
MakeNameEx(0x418F44, "TStream.SetSize", 0x20);
MakeComm(0x418F44, "'procedure TStream.SetSize(const NewSize:Int64);'");
MakeCode(0x418F44);
MakeCode(0x418F5A);
MakeCode(0x418F5C);
MakeCode(0x418F6D);
MakeCode(0x418F6F);
MakeCode(0x418F86);
MakeFunction(0x418F44, 0x418F96);
MakeUnkn(0x418F98, 1);
MakeNameEx(0x418F98, "RaiseException", 0x20);
MakeComm(0x418F98, "'procedure RaiseException;'");
MakeCode(0x418F98);
MakeFunction(0x418F98, 0x418FE2);
MakeUnkn(0x418FE4, 1);
MakeNameEx(0x418FE4, "TStream.Seek", 0x20);
MakeComm(0x418FE4, "'function TStream.Seek(Offset:Longint; Origin:Word):Longint;'");
MakeCode(0x418FE4);
MakeCode(0x419012);
MakeCode(0x41901B);
MakeCode(0x41902A);
MakeCode(0x419036);
MakeCode(0x419050);
MakeFunction(0x418FE4, 0x419067);
MakeUnkn(0x419068, 1);
MakeNameEx(0x419068, "TStream.Seek_0", 0x20);
MakeComm(0x419068, "'function TStream.Seek(Origin:TSeekOrigin; const Offset:Int64):Int64;'");
MakeCode(0x419068);
MakeCode(0x419085);
MakeCode(0x419087);
MakeCode(0x419098);
MakeCode(0x41909A);
MakeCode(0x4190B1);
MakeFunction(0x419068, 0x4190D5);
MakeUnkn(0x4190D8, 1);
MakeNameEx(0x4190D8, "TStream.ReadBuffer", 0x20);
MakeComm(0x4190D8, "'procedure TStream.ReadBuffer(var Buffer:void ; Count:Longint);'");
MakeCode(0x4190D8);
MakeCode(0x41910B);
MakeFunction(0x4190D8, 0x41910F);
MakeUnkn(0x419110, 1);
MakeNameEx(0x419110, "TStream.WriteBuffer", 0x20);
MakeComm(0x419110, "'procedure TStream.WriteBuffer(const Buffer:void ; Count:Longint);'");
MakeCode(0x419110);
MakeCode(0x419143);
MakeFunction(0x419110, 0x419147);
MakeUnkn(0x419148, 1);
MakeNameEx(0x419148, "TStream.CopyFrom", 0x20);
MakeComm(0x419148, "'function TStream.CopyFrom(Source:TStream; Count:Int64):Int64;'");
MakeCode(0x419148);
MakeCode(0x419179);
MakeCode(0x419196);
MakeCode(0x419198);
MakeCode(0x4191A1);
MakeCode(0x4191A7);
MakeCode(0x4191C2);
MakeCode(0x4191D2);
MakeCode(0x4191D4);
MakeCode(0x4191D9);
MakeCode(0x4191DC);
MakeCode(0x4191FF);
MakeCode(0x41920B);
MakeCode(0x419218);
MakeCode(0x419224);
MakeCode(0x419229);
MakeFunction(0x419148, 0x41923A);
MakeUnkn(0x41923C, 1);
MakeNameEx(0x41923C, "TStream.ReadComponent", 0x20);
MakeComm(0x41923C, "'function TStream.ReadComponent(Instance:TComponent):TComponent;'");
MakeCode(0x41923C);
MakeCode(0x419276);
MakeCode(0x419283);
MakeCode(0x41928C);
MakeCode(0x419291);
MakeFunction(0x41923C, 0x41929B);
MakeUnkn(0x41929C, 1);
MakeNameEx(0x41929C, "THandleStream.Create", 0x20);
MakeComm(0x41929C, "'constructor THandleStream.Create(AHandle:Integer);'");
MakeCode(0x41929C);
MakeCode(0x4192AB);
MakeCode(0x4192D2);
MakeFunction(0x41929C, 0x4192D8);
MakeUnkn(0x4192D8, 1);
MakeNameEx(0x4192D8, "THandleStream.Read", 0x20);
MakeComm(0x4192D8, "'function THandleStream.Read(var Buffer:void ; Count:Longint):Longint;'");
MakeCode(0x4192D8);
MakeFunction(0x4192D8, 0x4192E8);
MakeUnkn(0x4192E8, 1);
MakeNameEx(0x4192E8, "THandleStream.Write", 0x20);
MakeComm(0x4192E8, "'function THandleStream.Write(const Buffer:void ; Count:Longint):Longint;'");
MakeCode(0x4192E8);
MakeFunction(0x4192E8, 0x4192F8);
MakeUnkn(0x4192F8, 1);
MakeNameEx(0x4192F8, "THandleStream.Seek", 0x20);
MakeComm(0x4192F8, "'function THandleStream.Seek(Origin:TSeekOrigin; const Offset:Int64):Int64;'");
MakeCode(0x4192F8);
MakeFunction(0x4192F8, 0x419321);
MakeUnkn(0x419324, 1);
MakeNameEx(0x419324, "THandleStream.SetSize", 0x20);
MakeComm(0x419324, "'procedure THandleStream.SetSize(NewSize:Longint);'");
MakeCode(0x419324);
MakeFunction(0x419324, 0x419337);
MakeUnkn(0x419338, 1);
MakeNameEx(0x419338, "THandleStream.SetSize_0", 0x20);
MakeComm(0x419338, "'procedure THandleStream.SetSize(const NewSize:Int64);'");
MakeCode(0x419338);
MakeFunction(0x419338, 0x419360);
MakeUnkn(0x419360, 1);
MakeNameEx(0x419360, "TFileStream.Create", 0x20);
MakeComm(0x419360, "'constructor TFileStream.Create(const AFileName:AnsiString; Mode:Word);'");
MakeCode(0x419360);
MakeCode(0x419371);
MakeCode(0x41939A);
MakeFunction(0x419360, 0x4193A2);
MakeUnkn(0x4193A4, 1);
MakeNameEx(0x4193A4, "TFileStream.Create_0", 0x20);
MakeComm(0x4193A4, "'constructor TFileStream.Create(const AFileName:AnsiString; Mode:Word; Rights:Cardinal);'");
MakeCode(0x4193A4);
MakeCode(0x4193C7);
MakeCode(0x419464);
MakeCode(0x4194C7);
MakeCode(0x4194D1);
MakeCode(0x4194DE);
MakeCode(0x4194EC);
MakeCode(0x4194F1);
MakeCode(0x41950A);
MakeFunction(0x4193A4, 0x419515);
MakeUnkn(0x419518, 1);
MakeNameEx(0x419518, "TFileStream.Destroy", 0x20);
MakeComm(0x419518, "'destructor TFileStream.Destroy;'");
MakeCode(0x419518);
MakeCode(0x419530);
MakeCode(0x419547);
MakeFunction(0x419518, 0x41954A);
MakeUnkn(0x41954C, 1);
MakeNameEx(0x41954C, "TCustomMemoryStream.SetPointer", 0x20);
MakeComm(0x41954C, "'procedure TCustomMemoryStream.SetPointer(Ptr:Pointer; Size:Longint);'");
MakeCode(0x41954C);
MakeFunction(0x41954C, 0x419553);
MakeUnkn(0x419554, 1);
MakeNameEx(0x419554, "TCustomMemoryStream.Read", 0x20);
MakeComm(0x419554, "'function TCustomMemoryStream.Read(var Buffer:void ; Count:Longint):Longint;'");
MakeCode(0x419554);
MakeCode(0x419573);
MakeCode(0x419584);
MakeCode(0x419586);
MakeFunction(0x419554, 0x41958C);
MakeUnkn(0x41958C, 1);
MakeNameEx(0x41958C, "TCustomMemoryStream.Seek", 0x20);
MakeComm(0x41958C, "'function TCustomMemoryStream.Seek(Offset:Longint; Origin:Word):Longint;'");
MakeCode(0x41958C);
MakeCode(0x41959B);
MakeCode(0x4195A0);
MakeCode(0x4195A5);
MakeCode(0x4195AB);
MakeFunction(0x41958C, 0x4195AF);
MakeUnkn(0x4195B0, 1);
MakeNameEx(0x4195B0, "TCustomMemoryStream.SaveToStream", 0x20);
MakeComm(0x4195B0, "'procedure TCustomMemoryStream.SaveToStream(Stream:TStream);'");
MakeCode(0x4195B0);
MakeCode(0x4195C4);
MakeFunction(0x4195B0, 0x4195C6);
MakeUnkn(0x4195C8, 1);
MakeNameEx(0x4195C8, "TCustomMemoryStream.SaveToFile", 0x20);
MakeComm(0x4195C8, "'procedure TCustomMemoryStream.SaveToFile(const FileName:AnsiString);'");
MakeCode(0x4195C8);
MakeCode(0x4195FD);
MakeCode(0x41960A);
MakeCode(0x419613);
MakeCode(0x419618);
MakeFunction(0x4195C8, 0x41961E);
MakeUnkn(0x419620, 1);
MakeNameEx(0x419620, "TPersistent.Destroy", 0x20);
MakeComm(0x419620, "'destructor TPersistent.Destroy;'");
MakeCode(0x419620);
MakeCode(0x419649);
MakeFunction(0x419620, 0x41964C);
MakeUnkn(0x41964C, 1);
MakeNameEx(0x41964C, "RemoveFixups", 0x20);
MakeComm(0x41964C, "'procedure RemoveFixups(Instance:TPersistent);'");
MakeCode(0x41964C);
MakeFunction(0x41964C, 0x419664);
MakeUnkn(0x419664, 1);
MakeNameEx(0x419664, "TMemoryStream.LoadFromStream", 0x20);
MakeComm(0x419664, "'procedure TMemoryStream.LoadFromStream(Stream:TStream);'");
MakeCode(0x419664);
MakeCode(0x419697);
MakeFunction(0x419664, 0x41969B);
MakeUnkn(0x41969C, 1);
MakeNameEx(0x41969C, "TMemoryStream.SetCapacity", 0x20);
MakeComm(0x41969C, "'procedure TMemoryStream.SetCapacity(NewCapacity:Longint);'");
MakeCode(0x41969C);
MakeFunction(0x41969C, 0x4196C1);
MakeUnkn(0x4196C4, 1);
MakeNameEx(0x4196C4, "TMemoryStream.SetSize", 0x20);
MakeComm(0x4196C4, "'procedure TMemoryStream.SetSize(NewSize:Longint);'");
MakeCode(0x4196C4);
MakeCode(0x4196EB);
MakeFunction(0x4196C4, 0x4196EF);
MakeUnkn(0x4196F0, 1);
MakeNameEx(0x4196F0, "TMemoryStream.Realloc", 0x20);
MakeComm(0x4196F0, "'function TMemoryStream.Realloc(var NewCapacity:Longint):Pointer;'");
MakeCode(0x4196F0);
MakeCode(0x419710);
MakeCode(0x419733);
MakeCode(0x419743);
MakeCode(0x41974C);
MakeCode(0x419769);
MakeFunction(0x4196F0, 0x41976F);
MakeUnkn(0x419770, 1);
MakeNameEx(0x419770, "TMemoryStream.Write", 0x20);
MakeComm(0x419770, "'function TMemoryStream.Write(const Buffer:void ; Count:Longint):Longint;'");
MakeCode(0x419770);
MakeCode(0x4197A0);
MakeCode(0x4197A3);
MakeCode(0x4197B9);
MakeCode(0x4197BB);
MakeFunction(0x419770, 0x4197C0);
MakeUnkn(0x4197C0, 1);
MakeNameEx(0x4197C0, "TResourceStream.Create", 0x20);
MakeComm(0x4197C0, "'constructor TResourceStream.Create(Instance:THandle; const ResName:AnsiString; ResType:PChar);'");
MakeCode(0x4197C0);
MakeCode(0x4197D2);
MakeCode(0x41980F);
MakeFunction(0x4197C0, 0x419818);
MakeUnkn(0x419818, 1);
MakeNameEx(0x419818, "Error_1", 0x20);
MakeComm(0x419818, "'procedure Error;'");
MakeCode(0x419818);
MakeCode(0x41984D);
MakeCode(0x41985B);
MakeCode(0x41988C);
MakeCode(0x419899);
MakeCode(0x4198AA);
MakeCode(0x4198AF);
MakeFunction(0x419818, 0x4198B5);
MakeUnkn(0x4198B8, 1);
MakeNameEx(0x4198B8, "TResourceStream.Initialize", 0x20);
MakeComm(0x4198B8, "'procedure TResourceStream.Initialize(Instance:THandle; Name:PChar; ResType:PChar; FromID:Boolean);'");
MakeCode(0x4198B8);
MakeCode(0x4198E4);
MakeCode(0x4198FE);
MakeFunction(0x4198B8, 0x419924);
MakeUnkn(0x419924, 1);
MakeNameEx(0x419924, "TResourceStream.Destroy", 0x20);
MakeComm(0x419924, "'destructor TResourceStream.Destroy;'");
MakeCode(0x419924);
MakeCode(0x41994F);
MakeFunction(0x419924, 0x419952);
MakeUnkn(0x419954, 1);
MakeNameEx(0x419954, "TResourceStream.Write", 0x20);
MakeComm(0x419954, "'function TResourceStream.Write(const Buffer:void ; Count:Longint):Longint;'");
MakeCode(0x419954);
MakeFunction(0x419954, 0x41996C);
MakeUnkn(0x41996C, 1);
MakeNameEx(0x41996C, "TFiler.Create", 0x20);
MakeComm(0x41996C, "'constructor TFiler.Create(Stream:TStream; BufSize:Integer);'");
MakeCode(0x41996C);
MakeCode(0x41997E);
MakeCode(0x4199AA);
MakeFunction(0x41996C, 0x4199B3);
MakeUnkn(0x4199B4, 1);
MakeNameEx(0x4199B4, "TFiler.Destroy", 0x20);
MakeComm(0x4199B4, "'destructor TFiler.Destroy;'");
MakeCode(0x4199B4);
MakeCode(0x4199CE);
MakeCode(0x4199D9);
MakeFunction(0x4199B4, 0x4199DC);
MakeCode(0x4199DC);
MakeComm(0x4199DC, "'TFiler.FRoot:TComponent'");
MakeFunction(0x4199DC, 0x4199E0);
MakeUnkn(0x4199E0, 1);
MakeNameEx(0x4199E0, "VMT_4199E0_TPropFixup", 0);
MakeDword(0x4199E0);
MakeDword(0x4199E4);
MakeDword(0x4199E8);
MakeDword(0x4199EC);
MakeUnkn(0x419A30, 1);
MakeNameEx(0x419A30, "TPropFixup_InitTable", 0);
MakeByte(0x419A30);
MakeByte(0x419A31);
MakeDword(0x419A32);
MakeDword(0x419A36);
MakeDword(0x419A3A);
MakeDword(0x419A3E);
MakeDword(0x419A42);
MakeDword(0x419A46);
MakeDword(0x4199F0);
MakeDword(0x4199F4);
MakeDword(0x4199F8);
MakeDword(0x4199FC);
MakeDword(0x419A00);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x419A4A, 0x419A55);
MakeDword(0x419A04);
MakeDword(0x419A08);
MakeDword(0x419A0C);
MakeDword(0x419A10);
MakeDword(0x419A14);
MakeDword(0x419A18);
MakeDword(0x419A1C);
MakeDword(0x419A20);
MakeDword(0x419A24);
MakeDword(0x419A28);
MakeComm(0x419A2C, "'+0'");
MakeDword(0x419A2C);
MakeUnkn(0x419A58, 1);
MakeNameEx(0x419A58, "VMT_419A58_TPropIntfFixup", 0);
MakeDword(0x419A58);
MakeDword(0x419A5C);
MakeDword(0x419A60);
MakeDword(0x419A64);
MakeDword(0x419A68);
MakeDword(0x419A6C);
MakeDword(0x419A70);
MakeDword(0x419A74);
MakeDword(0x419A78);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x419AA8, 0x419AB7);
MakeDword(0x419A7C);
MakeDword(0x419A80);
MakeDword(0x419A84);
MakeDword(0x419A88);
MakeDword(0x419A8C);
MakeDword(0x419A90);
MakeDword(0x419A94);
MakeDword(0x419A98);
MakeDword(0x419A9C);
MakeDword(0x419AA0);
MakeComm(0x419AA4, "'+0'");
MakeDword(0x419AA4);
MakeUnkn(0x419AB8, 1);
MakeNameEx(0x419AB8, "TPropFixup.Create", 0x20);
MakeComm(0x419AB8, "'constructor TPropFixup.Create(Instance:TPersistent; InstanceRoot:TComponent; PropInfo:PPropInfo; const RootName:AnsiString; const Name:AnsiString);'");
MakeCode(0x419AB8);
MakeCode(0x419AC9);
MakeCode(0x419B07);
MakeFunction(0x419AB8, 0x419B0F);
MakeUnkn(0x419B10, 1);
MakeNameEx(0x419B10, "TPropFixup.MakeGlobalReference", 0x20);
MakeComm(0x419B10, "'function TPropFixup.MakeGlobalReference:Boolean;'");
MakeCode(0x419B10);
MakeCode(0x419B1F);
MakeCode(0x419B20);
MakeCode(0x419B2C);
MakeCode(0x419B53);
MakeFunction(0x419B10, 0x419B58);
MakeUnkn(0x419B58, 1);
MakeNameEx(0x419B58, "TPropFixup.ResolveReference", 0x20);
MakeComm(0x419B58, "'procedure TPropFixup.ResolveReference(Reference:Pointer);'");
MakeCode(0x419B58);
MakeFunction(0x419B58, 0x419B67);
MakeUnkn(0x419B68, 1);
MakeNameEx(0x419B68, "TPropIntfFixup.ResolveReference", 0x20);
MakeComm(0x419B68, "'procedure TPropIntfFixup.ResolveReference(Reference:Pointer);'");
MakeCode(0x419B68);
MakeCode(0x419BBB);
MakeCode(0x419BC9);
MakeCode(0x419BD6);
MakeCode(0x419BDF);
MakeCode(0x419BE4);
MakeFunction(0x419B68, 0x419BEB);
MakeUnkn(0x419BEC, 1);
MakeNameEx(0x419BEC, "FindNestedComponent", 0x20);
MakeComm(0x419BEC, "'function FindNestedComponent(Root:TComponent; const NamePath:AnsiString):TComponent;'");
MakeCode(0x419BEC);
MakeCode(0x419C19);
MakeCode(0x419C1E);
MakeCode(0x419C1F);
MakeCode(0x419C2C);
MakeCode(0x419C5F);
MakeCode(0x419C69);
MakeCode(0x419C6F);
MakeCode(0x419C75);
MakeCode(0x419C77);
MakeCode(0x419C7F);
MakeCode(0x419C8C);
MakeCode(0x419C95);
MakeCode(0x419C9A);
MakeFunction(0x419BEC, 0x419CA6);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x419CB0, -1);
MakeDword(0x419CAC);
MakeDword(0x419CA8);
MakeUnkn(0x419CB8, 1);
MakeNameEx(0x419CB8, "AddFinished", 0x20);
MakeComm(0x419CB8, "'procedure AddFinished(Instance:TPersistent);'");
MakeCode(0x419CB8);
MakeCode(0x419CED);
MakeFunction(0x419CB8, 0x419CF0);
MakeUnkn(0x419CF0, 1);
MakeNameEx(0x419CF0, "AddNotFinished", 0x20);
MakeComm(0x419CF0, "'procedure AddNotFinished(Instance:TPersistent);'");
MakeCode(0x419CF0);
MakeCode(0x419D14);
MakeCode(0x419D32);
MakeFunction(0x419CF0, 0x419D35);
MakeUnkn(0x419D38, 1);
MakeNameEx(0x419D38, "GlobalFixupReferences", 0x20);
MakeComm(0x419D38, "'procedure GlobalFixupReferences;'");
MakeCode(0x419D38);
MakeCode(0x419DBE);
MakeCode(0x419DE9);
MakeCode(0x419E11);
MakeCode(0x419E1E);
MakeCode(0x419E3A);
MakeCode(0x419E45);
MakeCode(0x419E4E);
MakeCode(0x419E5B);
MakeCode(0x419E64);
MakeCode(0x419E69);
MakeCode(0x419E79);
MakeCode(0x419E9C);
MakeCode(0x419EA0);
MakeCode(0x419EAD);
MakeCode(0x419EB6);
MakeCode(0x419EBB);
MakeCode(0x419EBD);
MakeCode(0x419ECA);
MakeCode(0x419ED5);
MakeCode(0x419EDA);
MakeCode(0x419EDC);
MakeCode(0x419EE9);
MakeCode(0x419EF4);
MakeCode(0x419EF9);
MakeFunction(0x419D38, 0x419F02);
MakeUnkn(0x419F04, 1);
MakeNameEx(0x419F04, "RemoveFixupReferences", 0x20);
MakeComm(0x419F04, "'procedure RemoveFixupReferences(Root:TComponent; const RootName:AnsiString);'");
MakeCode(0x419F04);
MakeCode(0x419F43);
MakeCode(0x419F5C);
MakeCode(0x419F71);
MakeCode(0x419F81);
MakeCode(0x419F87);
MakeCode(0x419F94);
MakeCode(0x419F9F);
MakeCode(0x419FA4);
MakeCode(0x419FA6);
MakeFunction(0x419F04, 0x419FAD);
MakeUnkn(0x419FB0, 1);
MakeNameEx(0x419FB0, "TMemoryStream.Clear", 0x20);
MakeComm(0x419FB0, "'procedure TMemoryStream.Clear;'");
MakeCode(0x419FB0);
MakeCode(0x419FE6);
MakeCode(0x41A009);
MakeCode(0x41A00F);
MakeCode(0x41A01C);
MakeCode(0x41A027);
MakeCode(0x41A02C);
MakeCode(0x41A02E);
MakeFunction(0x419FB0, 0x41A034);
MakeUnkn(0x41A034, 1);
MakeNameEx(0x41A034, "ReadError", 0x20);
MakeComm(0x41A034, "'procedure ReadError(Ident:PResStringRec);'");
MakeCode(0x41A034);
MakeFunction(0x41A034, 0x41A04C);
MakeUnkn(0x41A04C, 1);
MakeNameEx(0x41A04C, "PropValueError", 0x20);
MakeComm(0x41A04C, "'procedure PropValueError;'");
MakeCode(0x41A04C);
MakeFunction(0x41A04C, 0x41A057);
MakeUnkn(0x41A058, 1);
MakeNameEx(0x41A058, "PropertyNotFound", 0x20);
MakeComm(0x41A058, "'procedure PropertyNotFound(const Name:AnsiString);'");
MakeCode(0x41A058);
MakeFunction(0x41A058, 0x41A084);
MakeUnkn(0x41A084, 1);
MakeNameEx(0x41A084, "EnumValue", 0x20);
MakeComm(0x41A084, "'function EnumValue(EnumType:PTypeInfo; const EnumName:AnsiString):Integer;'");
MakeCode(0x41A084);
MakeCode(0x41A096);
MakeFunction(0x41A084, 0x41A09A);
MakeUnkn(0x41A09C, 1);
MakeNameEx(0x41A09C, "TReader.Destroy", 0x20);
MakeComm(0x41A09C, "'destructor TReader.Destroy;'");
MakeCode(0x41A09C);
MakeCode(0x41A0D1);
MakeFunction(0x41A09C, 0x41A0D5);
MakeUnkn(0x41A0D8, 1);
MakeNameEx(0x41A0D8, "TReader.CheckValue", 0x20);
MakeComm(0x41A0D8, "'procedure TReader.CheckValue(Value:TValueType);'");
MakeCode(0x41A0D8);
MakeCode(0x41A0F8);
MakeFunction(0x41A0D8, 0x41A0FB);
MakeUnkn(0x41A0FC, 1);
MakeNameEx(0x41A0FC, "TReader.DefineProperty", 0x20);
MakeComm(0x41A0FC, "'procedure TReader.DefineProperty(const Name:AnsiString; ReadData:TReaderProc; WriteData:TWriterProc; HasData:Boolean);'");
MakeCode(0x41A0FC);
MakeCode(0x41A130);
MakeFunction(0x41A0FC, 0x41A136);
MakeUnkn(0x41A138, 1);
MakeNameEx(0x41A138, "TReader.DefineBinaryProperty", 0x20);
MakeComm(0x41A138, "'procedure TReader.DefineBinaryProperty(const Name:AnsiString; ReadData:TStreamProc; WriteData:TStreamProc; HasData:Boolean);'");
MakeCode(0x41A138);
MakeCode(0x41A190);
MakeCode(0x41A1EC);
MakeCode(0x41A1F9);
MakeCode(0x41A202);
MakeCode(0x41A207);
MakeCode(0x41A216);
MakeFunction(0x41A138, 0x41A21D);
MakeUnkn(0x41A220, 1);
MakeNameEx(0x41A220, "TReader.EndOfList", 0x20);
MakeComm(0x41A220, "'function TReader.EndOfList:Boolean;'");
MakeCode(0x41A220);
MakeFunction(0x41A220, 0x41A234);
MakeUnkn(0x41A234, 1);
MakeNameEx(0x41A234, "TReader.Error", 0x20);
MakeComm(0x41A234, "'function TReader.Error(const Message:AnsiString):Boolean;'");
MakeCode(0x41A234);
MakeCode(0x41A24E);
MakeFunction(0x41A234, 0x41A255);
MakeUnkn(0x41A258, 1);
MakeNameEx(0x41A258, "TReader.FindMethodInstance", 0x20);
MakeComm(0x41A258, "'function TReader.FindMethodInstance(Root:TComponent; const MethodName:AnsiString):TMethod;'");
MakeCode(0x41A258);
MakeCode(0x41A2B9);
MakeCode(0x41A2BD);
MakeCode(0x41A2D8);
MakeFunction(0x41A258, 0x41A2E0);
MakeUnkn(0x41A2E0, 1);
MakeNameEx(0x41A2E0, "TReader.FindMethod", 0x20);
MakeComm(0x41A2E0, "'function TReader.FindMethod(Root:TComponent; const MethodName:AnsiString):Pointer;'");
MakeCode(0x41A2E0);
MakeCode(0x41A32D);
MakeCode(0x41A339);
MakeFunction(0x41A2E0, 0x41A346);
MakeUnkn(0x41A348, 1);
MakeNameEx(0x41A348, "RemoveGlobalFixup", 0x20);
MakeComm(0x41A348, "'procedure RemoveGlobalFixup(Fixup:TPropFixup);'");
MakeCode(0x41A348);
MakeCode(0x41A373);
MakeCode(0x41A39A);
MakeCode(0x41A3A0);
MakeCode(0x41A3AD);
MakeCode(0x41A3B8);
MakeCode(0x41A3BD);
MakeFunction(0x41A348, 0x41A3C4);
MakeUnkn(0x41A3C4, 1);
MakeNameEx(0x41A3C4, "TReader.DoFixupReferences", 0x20);
MakeComm(0x41A3C4, "'procedure TReader.DoFixupReferences;'");
MakeCode(0x41A3C4);
MakeCode(0x41A411);
MakeCode(0x41A467);
MakeCode(0x41A4B4);
MakeCode(0x41A4BD);
MakeCode(0x41A4C7);
MakeCode(0x41A4D4);
MakeCode(0x41A4DD);
MakeCode(0x41A4E2);
MakeCode(0x41A4E4);
MakeCode(0x41A4F1);
MakeCode(0x41A4FA);
MakeCode(0x41A4FF);
MakeFunction(0x41A3C4, 0x41A508);
MakeUnkn(0x41A508, 1);
MakeNameEx(0x41A508, "TReader.FlushBuffer", 0x20);
MakeComm(0x41A508, "'procedure TReader.FlushBuffer;'");
MakeCode(0x41A508);
MakeFunction(0x41A508, 0x41A529);
MakeUnkn(0x41A52C, 1);
MakeNameEx(0x41A52C, "TReader.FreeFixups", 0x20);
MakeComm(0x41A52C, "'procedure TReader.FreeFixups;'");
MakeCode(0x41A52C);
MakeCode(0x41A543);
MakeCode(0x41A556);
MakeCode(0x41A563);
MakeFunction(0x41A52C, 0x41A567);
MakeUnkn(0x41A568, 1);
MakeNameEx(0x41A568, "TReader.GetFieldClass", 0x20);
MakeComm(0x41A568, "'function TReader.GetFieldClass(Instance:TObject; const ClassName:AnsiString):TPersistentClass;'");
MakeCode(0x41A568);
MakeCode(0x41A581);
MakeCode(0x41A59F);
MakeCode(0x41A5BF);
MakeCode(0x41A5C8);
MakeCode(0x41A5EA);
MakeCode(0x41A5F5);
MakeFunction(0x41A568, 0x41A5FF);
MakeUnkn(0x41A600, 1);
MakeNameEx(0x41A600, "TReader.GetPosition", 0x20);
MakeComm(0x41A600, "'function TReader.GetPosition:Longint;'");
MakeCode(0x41A600);
MakeFunction(0x41A600, 0x41A615);
MakeUnkn(0x41A618, 1);
MakeNameEx(0x41A618, "TReader.NextValue", 0x20);
MakeComm(0x41A618, "'function TReader.NextValue:TValueType;'");
MakeCode(0x41A618);
MakeFunction(0x41A618, 0x41A627);
MakeUnkn(0x41A628, 1);
MakeNameEx(0x41A628, "TReader.PropertyError", 0x20);
MakeComm(0x41A628, "'procedure TReader.PropertyError(const Name:AnsiString);'");
MakeCode(0x41A628);
MakeFunction(0x41A628, 0x41A639);
MakeUnkn(0x41A63C, 1);
MakeNameEx(0x41A63C, "TReader.Read", 0x20);
MakeComm(0x41A63C, "'procedure TReader.Read(var Buf:void ; Count:Longint);'");
MakeCode(0x41A63C);
MakeCode(0x41A647);
MakeCode(0x41A659);
MakeCode(0x41A65F);
MakeCode(0x41A67D);
MakeFunction(0x41A63C, 0x41A685);
MakeUnkn(0x41A688, 1);
MakeNameEx(0x41A688, "TReader.ReadBuffer", 0x20);
MakeComm(0x41A688, "'procedure TReader.ReadBuffer;'");
MakeCode(0x41A688);
MakeCode(0x41A6BA);
MakeFunction(0x41A688, 0x41A6C2);
MakeUnkn(0x41A6C4, 1);
MakeNameEx(0x41A6C4, "TReader.ReadBoolean", 0x20);
MakeComm(0x41A6C4, "'function TReader.ReadBoolean:Boolean;'");
MakeCode(0x41A6C4);
MakeFunction(0x41A6C4, 0x41A6D5);
MakeUnkn(0x41A6D8, 1);
MakeNameEx(0x41A6D8, "TReader.ReadChar", 0x20);
MakeComm(0x41A6D8, "'function TReader.ReadChar:Char;'");
MakeCode(0x41A6D8);
MakeCode(0x41A704);
MakeCode(0x41A70C);
MakeCode(0x41A712);
MakeCode(0x41A71F);
MakeCode(0x41A728);
MakeCode(0x41A72D);
MakeFunction(0x41A6D8, 0x41A735);
MakeUnkn(0x41A738, 1);
MakeNameEx(0x41A738, "TReader.ReadWideChar", 0x20);
MakeComm(0x41A738, "'function TReader.ReadWideChar:WideChar;'");
MakeCode(0x41A738);
MakeCode(0x41A768);
MakeCode(0x41A76E);
MakeCode(0x41A77B);
MakeCode(0x41A784);
MakeCode(0x41A789);
MakeFunction(0x41A738, 0x41A791);
MakeUnkn(0x41A794, 1);
MakeNameEx(0x41A794, "TReader.ReadCollection", 0x20);
MakeComm(0x41A794, "'procedure TReader.ReadCollection(Collection:TCollection);'");
MakeCode(0x41A794);
MakeCode(0x41A7CA);
MakeCode(0x41A7DE);
MakeCode(0x41A7F1);
MakeCode(0x41A7FA);
MakeCode(0x41A80C);
MakeCode(0x41A81E);
MakeCode(0x41A82B);
MakeCode(0x41A834);
MakeCode(0x41A839);
MakeFunction(0x41A794, 0x41A840);
MakeUnkn(0x41A840, 1);
MakeNameEx(0x41A840, "RTTI_41A840_DynArray_.56", 0);
MakeDword(0x41A840);
MakeUnkn(0x41A844, 1);
MakeNameEx(0x41A844, "", 0);
MakeByte(0x41A844);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A845, 0x41A849);
MakeDword(0x41A849);
MakeDword(0x41A84D);
MakeDword(0x41A851);
MakeDword(0x41A855);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41A859, 0x41A861);
MakeUnkn(0x41A864, 1);
MakeNameEx(0x41A864, "AddSubComponentsToLoaded", 0x20);
MakeComm(0x41A864, "'procedure AddSubComponentsToLoaded(Component:TComponent);'");
MakeCode(0x41A864);
MakeCode(0x41A87E);
MakeCode(0x41A899);
MakeFunction(0x41A864, 0x41A89D);
MakeUnkn(0x41A8A0, 1);
MakeNameEx(0x41A8A0, "CheckSubComponents", 0x20);
MakeComm(0x41A8A0, "'procedure CheckSubComponents(Component:TComponent);'");
MakeCode(0x41A8A0);
MakeCode(0x41A8B9);
MakeCode(0x41A90E);
MakeCode(0x41A912);
MakeFunction(0x41A8A0, 0x41A917);
MakeUnkn(0x41A918, 1);
MakeNameEx(0x41A918, "SetSubComponentState", 0x20);
MakeComm(0x41A918, "'procedure SetSubComponentState(State:TComponentState; Add:Boolean);'");
MakeCode(0x41A918);
MakeCode(0x41A93B);
MakeCode(0x41A95B);
MakeCode(0x41A975);
MakeCode(0x41A979);
MakeFunction(0x41A918, 0x41A97F);
MakeUnkn(0x41A980, 1);
MakeNameEx(0x41A980, "ComponentCreated", 0x20);
MakeComm(0x41A980, "'function ComponentCreated:Boolean;'");
MakeCode(0x41A980);
MakeCode(0x41A995);
MakeCode(0x41A999);
MakeFunction(0x41A980, 0x41A99D);
MakeUnkn(0x41A9A0, 1);
MakeNameEx(0x41A9A0, "Recover", 0x20);
MakeComm(0x41A9A0, "'function Recover(var Component:TComponent):Boolean;'");
MakeCode(0x41A9A0);
MakeCode(0x41A9D2);
MakeCode(0x41A9F8);
MakeFunction(0x41A9A0, 0x41A9FE);
MakeUnkn(0x41AA00, 1);
MakeNameEx(0x41AA00, "CreateComponent", 0x20);
MakeComm(0x41AA00, "'procedure CreateComponent;'");
MakeCode(0x41AA00);
MakeCode(0x41AA57);
MakeCode(0x41AA8B);
MakeCode(0x41AAB0);
MakeCode(0x41AABA);
MakeCode(0x41AAD1);
MakeCode(0x41AADC);
MakeCode(0x41AAE6);
MakeCode(0x41AB04);
MakeCode(0x41AB09);
MakeFunction(0x41AA00, 0x41AB0E);
MakeUnkn(0x41AB10, 1);
MakeNameEx(0x41AB10, "SetCompName", 0x20);
MakeComm(0x41AB10, "'procedure SetCompName;'");
MakeCode(0x41AB10);
MakeCode(0x41AB7E);
MakeCode(0x41AB88);
MakeCode(0x41ABA6);
MakeCode(0x41ABAB);
MakeFunction(0x41AB10, 0x41ABB0);
MakeUnkn(0x41ABB0, 1);
MakeNameEx(0x41ABB0, "FindExistingComponent", 0x20);
MakeComm(0x41ABB0, "'procedure FindExistingComponent;'");
MakeCode(0x41ABB0);
MakeCode(0x41AC21);
MakeCode(0x41AC2B);
MakeCode(0x41AC49);
MakeCode(0x41AC4E);
MakeFunction(0x41ABB0, 0x41AC53);
MakeUnkn(0x41AC54, 1);
MakeNameEx(0x41AC54, "TReader.ReadComponent", 0x20);
MakeComm(0x41AC54, "'function TReader.ReadComponent(Component:TComponent):TComponent;'");
MakeCode(0x41AC54);
MakeCode(0x41ACDB);
MakeCode(0x41ACE2);
MakeCode(0x41AD29);
MakeCode(0x41AD41);
MakeCode(0x41AD53);
MakeCode(0x41ADA9);
MakeCode(0x41ADB8);
MakeCode(0x41ADE4);
MakeCode(0x41ADFC);
MakeCode(0x41AE06);
MakeCode(0x41AE1E);
MakeCode(0x41AE28);
MakeCode(0x41AE35);
MakeCode(0x41AE48);
MakeCode(0x41AE4D);
MakeCode(0x41AE4F);
MakeCode(0x41AE5C);
MakeCode(0x41AE78);
MakeCode(0x41AE7D);
MakeFunction(0x41AC54, 0x41AE89);
MakeUnkn(0x41AE94, 1);
MakeNameEx(0x41AE94, "TReader.ReadData", 0x20);
MakeComm(0x41AE94, "'procedure TReader.ReadData(Instance:TComponent);'");
MakeCode(0x41AE94);
MakeCode(0x41AED9);
MakeCode(0x41AEE6);
MakeCode(0x41AEEF);
MakeCode(0x41AEF4);
MakeCode(0x41AEF6);
MakeFunction(0x41AE94, 0x41AF04);
MakeUnkn(0x41AF04, 1);
MakeNameEx(0x41AF04, "TReader.ReadDataInner", 0x20);
MakeComm(0x41AF04, "'procedure TReader.ReadDataInner(Instance:TComponent);'");
MakeCode(0x41AF04);
MakeCode(0x41AF14);
MakeCode(0x41AF1E);
MakeCode(0x41AF88);
MakeCode(0x41AF92);
MakeCode(0x41AFA6);
MakeCode(0x41AFB3);
MakeCode(0x41AFC6);
MakeCode(0x41AFCB);
MakeFunction(0x41AF04, 0x41AFD4);
MakeUnkn(0x41AFD4, 1);
MakeNameEx(0x41AFD4, "TReader.ReadFloat", 0x20);
MakeComm(0x41AFD4, "'function TReader.ReadFloat:Extended;'");
MakeCode(0x41AFD4);
MakeCode(0x41AFF5);
MakeCode(0x41B003);
MakeFunction(0x41AFD4, 0x41B00B);
MakeUnkn(0x41B00C, 1);
MakeNameEx(0x41B00C, "TReader.ReadDouble", 0x20);
MakeComm(0x41B00C, "'function TReader.ReadDouble:Double;'");
MakeCode(0x41B00C);
MakeCode(0x41B02D);
MakeCode(0x41B047);
MakeFunction(0x41B00C, 0x41B04F);
MakeUnkn(0x41B050, 1);
MakeNameEx(0x41B050, "TReader.ReadSingle", 0x20);
MakeComm(0x41B050, "'function TReader.ReadSingle:Single;'");
MakeCode(0x41B050);
MakeCode(0x41B071);
MakeCode(0x41B08B);
MakeFunction(0x41B050, 0x41B093);
MakeUnkn(0x41B094, 1);
MakeNameEx(0x41B094, "TReader.ReadCurrency", 0x20);
MakeComm(0x41B094, "'function TReader.ReadCurrency:Currency;'");
MakeCode(0x41B094);
MakeCode(0x41B0B5);
MakeCode(0x41B0D5);
MakeFunction(0x41B094, 0x41B0DD);
MakeUnkn(0x41B0E4, 1);
MakeNameEx(0x41B0E4, "TReader.ReadDate", 0x20);
MakeComm(0x41B0E4, "'function TReader.ReadDate:TDateTime;'");
MakeCode(0x41B0E4);
MakeCode(0x41B105);
MakeCode(0x41B11F);
MakeFunction(0x41B0E4, 0x41B127);
MakeUnkn(0x41B128, 1);
MakeNameEx(0x41B128, "TReader.ReadIdent", 0x20);
MakeComm(0x41B128, "'function TReader.ReadIdent:AnsiString;'");
MakeCode(0x41B128);
MakeCode(0x41B176);
MakeCode(0x41B1A7);
MakeCode(0x41B1B5);
MakeCode(0x41B1C3);
MakeCode(0x41B1D1);
MakeCode(0x41B1DF);
MakeCode(0x41B1E4);
MakeFunction(0x41B128, 0x41B1E8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x41B1F0, -1);
MakeDword(0x41B1EC);
MakeDword(0x41B1E8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x41B200, -1);
MakeDword(0x41B1FC);
MakeDword(0x41B1F8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x41B210, -1);
MakeDword(0x41B20C);
MakeDword(0x41B208);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x41B21C, -1);
MakeDword(0x41B218);
MakeDword(0x41B214);
MakeUnkn(0x41B224, 1);
MakeNameEx(0x41B224, "TReader.ReadInteger", 0x20);
MakeComm(0x41B224, "'function TReader.ReadInteger:Longint;'");
MakeCode(0x41B224);
MakeCode(0x41B23F);
MakeCode(0x41B259);
MakeCode(0x41B273);
MakeCode(0x41B283);
MakeCode(0x41B288);
MakeFunction(0x41B224, 0x41B28F);
MakeUnkn(0x41B290, 1);
MakeNameEx(0x41B290, "TReader.ReadInt64", 0x20);
MakeComm(0x41B290, "'function TReader.ReadInt64:Int64;'");
MakeCode(0x41B290);
MakeCode(0x41B2B8);
MakeCode(0x41B2C7);
MakeFunction(0x41B290, 0x41B2D2);
MakeUnkn(0x41B2D4, 1);
MakeNameEx(0x41B2D4, "TReader.ReadListBegin", 0x20);
MakeComm(0x41B2D4, "'procedure TReader.ReadListBegin;'");
MakeCode(0x41B2D4);
MakeFunction(0x41B2D4, 0x41B2DC);
MakeUnkn(0x41B2DC, 1);
MakeNameEx(0x41B2DC, "TReader.ReadListEnd", 0x20);
MakeComm(0x41B2DC, "'procedure TReader.ReadListEnd;'");
MakeCode(0x41B2DC);
MakeFunction(0x41B2DC, 0x41B2E4);
MakeUnkn(0x41B2E4, 1);
MakeNameEx(0x41B2E4, "TReader.ReadPrefix", 0x20);
MakeComm(0x41B2E4, "'procedure TReader.ReadPrefix(var Flags:TFilerFlags; var AChildPos:Integer);'");
MakeCode(0x41B2E4);
MakeCode(0x41B31C);
MakeFunction(0x41B2E4, 0x41B320);
MakeUnkn(0x41B324, 1);
MakeNameEx(0x41B324, "HandleException", 0x20);
MakeComm(0x41B324, "'procedure HandleException(E:Exception);'");
MakeCode(0x41B324);
MakeCode(0x41B371);
MakeCode(0x41B398);
MakeCode(0x41B3FF);
MakeCode(0x41B40C);
MakeCode(0x41B415);
MakeCode(0x41B41A);
MakeFunction(0x41B324, 0x41B421);
MakeUnkn(0x41B424, 1);
MakeNameEx(0x41B424, "PropPathError", 0x20);
MakeComm(0x41B424, "'procedure PropPathError;'");
MakeCode(0x41B424);
MakeFunction(0x41B424, 0x41B43E);
MakeUnkn(0x41B440, 1);
MakeNameEx(0x41B440, "TReader.ReadProperty", 0x20);
MakeComm(0x41B440, "'procedure TReader.ReadProperty(AInstance:TPersistent);'");
MakeCode(0x41B440);
MakeCode(0x41B49A);
MakeCode(0x41B4AC);
MakeCode(0x41B4B1);
MakeCode(0x41B4B2);
MakeCode(0x41B4C0);
MakeCode(0x41B50C);
MakeCode(0x41B527);
MakeCode(0x41B540);
MakeCode(0x41B54C);
MakeCode(0x41B579);
MakeCode(0x41B5B5);
MakeCode(0x41B5BF);
MakeDword(0x41B5C4);
MakeDword(0x41B5C8);
MakeDword(0x41B5CC);
MakeCode(0x41B5D0);
MakeCode(0x41B5DC);
MakeCode(0x41B5E6);
MakeDword(0x41B5EB);
MakeDword(0x41B5EF);
MakeDword(0x41B5F3);
MakeCode(0x41B5F7);
MakeCode(0x41B614);
MakeCode(0x41B619);
MakeCode(0x41B61E);
MakeCode(0x41B62B);
MakeCode(0x41B634);
MakeCode(0x41B639);
MakeFunction(0x41B440, 0x41B642);
MakeUnkn(0x41B644, 1);
MakeNameEx(0x41B644, "SetIntIdent", 0x20);
MakeComm(0x41B644, "'procedure SetIntIdent(Instance:TPersistent; PropInfo:Pointer; const Ident:AnsiString);'");
MakeCode(0x41B644);
MakeCode(0x41B67D);
MakeCode(0x41B682);
MakeFunction(0x41B644, 0x41B689);
MakeUnkn(0x41B68C, 1);
MakeNameEx(0x41B68C, "SetObjectIdent", 0x20);
MakeComm(0x41B68C, "'procedure SetObjectIdent(Instance:TPersistent; PropInfo:Pointer; const Ident:AnsiString);'");
MakeCode(0x41B68C);
MakeFunction(0x41B68C, 0x41B6C9);
MakeUnkn(0x41B6CC, 1);
MakeNameEx(0x41B6CC, "SetVariantReference", 0x20);
MakeComm(0x41B6CC, "'procedure SetVariantReference;'");
MakeCode(0x41B6CC);
MakeCode(0x41B705);
MakeCode(0x41B712);
MakeCode(0x41B71B);
MakeCode(0x41B720);
MakeFunction(0x41B6CC, 0x41B726);
MakeUnkn(0x41B728, 1);
MakeNameEx(0x41B728, "SetInterfaceReference", 0x20);
MakeComm(0x41B728, "'procedure SetInterfaceReference;'");
MakeCode(0x41B728);
MakeCode(0x41B775);
MakeCode(0x41B7BC);
MakeCode(0x41B7C9);
MakeCode(0x41B7DA);
MakeCode(0x41B7DF);
MakeFunction(0x41B728, 0x41B7E5);
MakeUnkn(0x41B7E8, 1);
MakeNameEx(0x41B7E8, "TReader.ReadPropValue", 0x20);
MakeComm(0x41B7E8, "'procedure TReader.ReadPropValue(Instance:TPersistent; PropInfo:Pointer);'");
MakeCode(0x41B7E8);
MakeCode(0x41B7F1);
MakeCode(0x41B853);
MakeCode(0x41B85D);
MakeCode(0x41B8BB);
MakeCode(0x41B8E5);
MakeCode(0x41B8FF);
MakeCode(0x41B91A);
MakeCode(0x41B935);
MakeCode(0x41B95C);
MakeCode(0x41B97B);
MakeCode(0x41B999);
MakeCode(0x41B9B7);
MakeCode(0x41B9D3);
MakeCode(0x41B9E5);
MakeCode(0x41B9FF);
MakeCode(0x41BA21);
MakeCode(0x41BA41);
MakeCode(0x41BA67);
MakeCode(0x41BA9D);
MakeCode(0x41BAA6);
MakeCode(0x41BABD);
MakeCode(0x41BAC4);
MakeCode(0x41BAD1);
MakeCode(0x41BAF4);
MakeCode(0x41BAF9);
MakeFunction(0x41B7E8, 0x41BB00);
MakeUnkn(0x41BB00, 1);
MakeNameEx(0x41BB00, "FindUniqueName", 0x20);
MakeComm(0x41BB00, "'function FindUniqueName(const Name:AnsiString):AnsiString;'");
MakeCode(0x41BB00);
MakeCode(0x41BB1A);
MakeCode(0x41BB3C);
MakeFunction(0x41BB00, 0x41BB4E);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x41BB58, -1);
MakeDword(0x41BB54);
MakeDword(0x41BB50);
MakeUnkn(0x41BB60, 1);
MakeNameEx(0x41BB60, "TReader.ReadRootComponent", 0x20);
MakeComm(0x41BB60, "'function TReader.ReadRootComponent(Root:TComponent):TComponent;'");
MakeCode(0x41BB60);
MakeCode(0x41BC0D);
MakeCode(0x41BC34);
MakeCode(0x41BC65);
MakeCode(0x41BCC5);
MakeCode(0x41BCD7);
MakeCode(0x41BD0B);
MakeCode(0x41BD62);
MakeCode(0x41BD7B);
MakeCode(0x41BD88);
MakeCode(0x41BD99);
MakeCode(0x41BDA2);
MakeCode(0x41BDA7);
MakeCode(0x41BDA9);
MakeCode(0x41BDB6);
MakeCode(0x41BDC5);
MakeCode(0x41BDCA);
MakeCode(0x41BDCC);
MakeCode(0x41BDDF);
MakeCode(0x41BDE9);
MakeCode(0x41BDF1);
MakeCode(0x41BE0F);
MakeCode(0x41BE16);
MakeCode(0x41BE20);
MakeCode(0x41BE3D);
MakeCode(0x41BE47);
MakeCode(0x41BE54);
MakeCode(0x41BE5F);
MakeCode(0x41BE64);
MakeCode(0x41BE66);
MakeCode(0x41BE73);
MakeCode(0x41BE81);
MakeCode(0x41BE86);
MakeFunction(0x41BB60, 0x41BE92);
MakeUnkn(0x41BE94, 1);
MakeNameEx(0x41BE94, "TReader.ReadSet", 0x20);
MakeComm(0x41BE94, "'function TReader.ReadSet(SetType:Pointer):Integer;'");
MakeCode(0x41BE94);
MakeCode(0x41BED4);
MakeCode(0x41BEE2);
MakeCode(0x41BF07);
MakeCode(0x41BF11);
MakeCode(0x41BF28);
MakeCode(0x41BF35);
MakeCode(0x41BF3E);
MakeCode(0x41BF43);
MakeFunction(0x41BE94, 0x41BF4E);
MakeUnkn(0x41BF50, 1);
MakeNameEx(0x41BF50, "TReader.ReadSignature", 0x20);
MakeComm(0x41BF50, "'procedure TReader.ReadSignature;'");
MakeCode(0x41BF50);
MakeCode(0x41BF72);
MakeFunction(0x41BF50, 0x41BF74);
MakeUnkn(0x41BF74, 1);
MakeNameEx(0x41BF74, "TReader.ReadStr", 0x20);
MakeComm(0x41BF74, "'function TReader.ReadStr:AnsiString;'");
MakeCode(0x41BF74);
MakeFunction(0x41BF74, 0x41BFAE);
MakeUnkn(0x41BFB0, 1);
MakeNameEx(0x41BFB0, "TReader.ReadString", 0x20);
MakeComm(0x41BFB0, "'function TReader.ReadString:AnsiString;'");
MakeCode(0x41BFB0);
MakeCode(0x41BFDE);
MakeCode(0x41BFF4);
MakeCode(0x41C00A);
MakeCode(0x41C01B);
MakeCode(0x41C02C);
MakeCode(0x41C031);
MakeCode(0x41C047);
MakeCode(0x41C054);
MakeCode(0x41C05D);
MakeCode(0x41C062);
MakeFunction(0x41BFB0, 0x41C06A);
MakeUnkn(0x41C06C, 1);
MakeNameEx(0x41C06C, "TReader.ReadWideString", 0x20);
MakeComm(0x41C06C, "'function TReader.ReadWideString:WideString;'");
MakeCode(0x41C06C);
MakeCode(0x41C098);
MakeCode(0x41C0AE);
MakeCode(0x41C0C4);
MakeCode(0x41C0ED);
MakeCode(0x41C120);
MakeCode(0x41C125);
MakeCode(0x41C132);
MakeCode(0x41C143);
MakeCode(0x41C148);
MakeFunction(0x41C06C, 0x41C150);
MakeUnkn(0x41C150, 1);
MakeNameEx(0x41C150, "TReader.ReadValue", 0x20);
MakeComm(0x41C150, "'function TReader.ReadValue:TValueType;'");
MakeCode(0x41C150);
MakeFunction(0x41C150, 0x41C163);
MakeUnkn(0x41C164, 1);
MakeNameEx(0x41C164, "TReader.SkipSetBody", 0x20);
MakeComm(0x41C164, "'procedure TReader.SkipSetBody;'");
MakeCode(0x41C164);
MakeCode(0x41C17A);
MakeCode(0x41C18A);
MakeCode(0x41C197);
MakeCode(0x41C1A0);
MakeCode(0x41C1A5);
MakeFunction(0x41C164, 0x41C1AB);
MakeUnkn(0x41C1AC, 1);
MakeNameEx(0x41C1AC, "SkipList", 0x20);
MakeComm(0x41C1AC, "'procedure SkipList;'");
MakeCode(0x41C1AC);
MakeCode(0x41C1B8);
MakeCode(0x41C1BF);
MakeFunction(0x41C1AC, 0x41C1D4);
MakeUnkn(0x41C1D4, 1);
MakeNameEx(0x41C1D4, "SkipBinary", 0x20);
MakeComm(0x41C1D4, "'procedure SkipBinary(BytesPerUnit:Integer);'");
MakeCode(0x41C1D4);
MakeFunction(0x41C1D4, 0x41C203);
MakeUnkn(0x41C204, 1);
MakeNameEx(0x41C204, "SkipCollection", 0x20);
MakeComm(0x41C204, "'procedure SkipCollection;'");
MakeCode(0x41C204);
MakeCode(0x41C210);
MakeCode(0x41C224);
MakeCode(0x41C232);
MakeCode(0x41C239);
MakeCode(0x41C24B);
MakeFunction(0x41C204, 0x41C260);
MakeUnkn(0x41C260, 1);
MakeNameEx(0x41C260, "TReader.SkipValue", 0x20);
MakeComm(0x41C260, "'procedure TReader.SkipValue;'");
MakeCode(0x41C260);
MakeCode(0x41C2F4);
MakeCode(0x41C300);
MakeCode(0x41C312);
MakeCode(0x41C324);
MakeCode(0x41C336);
MakeCode(0x41C348);
MakeCode(0x41C358);
MakeCode(0x41C369);
MakeCode(0x41C373);
MakeCode(0x41C381);
MakeCode(0x41C38A);
MakeCode(0x41C399);
MakeCode(0x41C3A8);
MakeCode(0x41C3B7);
MakeCode(0x41C3C5);
MakeCode(0x41C3D4);
MakeCode(0x41C3E2);
MakeCode(0x41C3EF);
MakeCode(0x41C3FC);
MakeCode(0x41C405);
MakeCode(0x41C40A);
MakeFunction(0x41C260, 0x41C410);
MakeUnkn(0x41C410, 1);
MakeNameEx(0x41C410, "TReader.SkipProperty", 0x20);
MakeComm(0x41C410, "'procedure TReader.SkipProperty;'");
MakeCode(0x41C410);
MakeCode(0x41C437);
MakeCode(0x41C444);
MakeCode(0x41C44D);
MakeCode(0x41C452);
MakeFunction(0x41C410, 0x41C458);
MakeUnkn(0x41C458, 1);
MakeNameEx(0x41C458, "TReader.SkipComponent", 0x20);
MakeComm(0x41C458, "'procedure TReader.SkipComponent(SkipHeader:Boolean);'");
MakeCode(0x41C458);
MakeCode(0x41C49F);
MakeCode(0x41C4A6);
MakeCode(0x41C4BA);
MakeCode(0x41C4C3);
MakeFunction(0x41C458, 0x41C4FD);
MakeUnkn(0x41C500, 1);
MakeNameEx(0x41C500, "TReader.FindAncestorComponent", 0x20);
MakeComm(0x41C500, "'function TReader.FindAncestorComponent(const Name:AnsiString; ComponentClass:TPersistentClass):TComponent;'");
MakeCode(0x41C500);
MakeCode(0x41C545);
MakeCode(0x41C562);
MakeCode(0x41C58F);
MakeCode(0x41C59C);
MakeCode(0x41C5A5);
MakeCode(0x41C5AA);
MakeFunction(0x41C500, 0x41C5B6);
MakeUnkn(0x41C5B8, 1);
MakeNameEx(0x41C5B8, "TReader.ReferenceName", 0x20);
MakeComm(0x41C5B8, "'procedure TReader.ReferenceName(var Name:AnsiString);'");
MakeCode(0x41C5B8);
MakeCode(0x41C5CC);
MakeFunction(0x41C5B8, 0x41C5CE);
MakeUnkn(0x41C5D0, 1);
MakeNameEx(0x41C5D0, "TReader.SetName", 0x20);
MakeComm(0x41C5D0, "'procedure TReader.SetName(Component:TComponent; var Name:AnsiString);'");
MakeCode(0x41C5D0);
MakeCode(0x41C5EB);
MakeFunction(0x41C5D0, 0x41C5F8);
MakeUnkn(0x41C5F8, 1);
MakeNameEx(0x41C5F8, "TReader.FindComponentClass", 0x20);
MakeComm(0x41C5F8, "'function TReader.FindComponentClass(const ClassName:AnsiString):TComponentClass;'");
MakeCode(0x41C5F8);
MakeCode(0x41C631);
MakeCode(0x41C643);
MakeCode(0x41C65B);
MakeCode(0x41C662);
MakeFunction(0x41C5F8, 0x41C669);
MakeUnkn(0x41C66C, 1);
MakeNameEx(0x41C66C, "TReader.SkipBytes", 0x20);
MakeComm(0x41C66C, "'procedure TReader.SkipBytes(Count:Integer);'");
MakeCode(0x41C66C);
MakeCode(0x41C67C);
MakeCode(0x41C69A);
MakeCode(0x41C6A7);
MakeCode(0x41C6AB);
MakeFunction(0x41C66C, 0x41C6B4);
MakeUnkn(0x41C6B4, 1);
MakeNameEx(0x41C6B4, "ReadCustomVariant", 0x20);
MakeComm(0x41C6B4, "'function ReadCustomVariant:Variant;'");
MakeCode(0x41C6B4);
MakeCode(0x41C7CF);
MakeCode(0x41C7E6);
MakeCode(0x41C7FD);
MakeCode(0x41C80A);
MakeCode(0x41C813);
MakeCode(0x41C818);
MakeCode(0x41C81A);
MakeCode(0x41C827);
MakeCode(0x41C838);
MakeCode(0x41C83D);
MakeCode(0x41C83F);
MakeCode(0x41C84C);
MakeCode(0x41C85D);
MakeCode(0x41C862);
MakeFunction(0x41C6B4, 0x41C869);
MakeUnkn(0x41C87C, 1);
MakeNameEx(0x41C87C, "TReader.ReadVariant", 0x20);
MakeComm(0x41C87C, "'function TReader.ReadVariant:Variant;'");
MakeCode(0x41C87C);
MakeCode(0x41C916);
MakeCode(0x41C932);
MakeCode(0x41C94D);
MakeCode(0x41C968);
MakeCode(0x41C980);
MakeCode(0x41C994);
MakeCode(0x41C9A8);
MakeCode(0x41C9BC);
MakeCode(0x41C9D0);
MakeCode(0x41C9E4);
MakeCode(0x41C9FB);
MakeCode(0x41CA12);
MakeCode(0x41CA28);
MakeCode(0x41CA3E);
MakeCode(0x41CA51);
MakeCode(0x41CA68);
MakeCode(0x41CA75);
MakeCode(0x41CA8E);
MakeCode(0x41CA93);
MakeFunction(0x41C87C, 0x41CA9A);
MakeUnkn(0x41CA9C, 1);
MakeNameEx(0x41CA9C, "TWriter.Write", 0x20);
MakeComm(0x41CA9C, "'procedure TWriter.Write(const Buf:void ; Count:Longint);'");
MakeCode(0x41CA9C);
MakeCode(0x41CAA7);
MakeCode(0x41CAB9);
MakeCode(0x41CABF);
MakeCode(0x41CADD);
MakeFunction(0x41CA9C, 0x41CAE5);
MakeUnkn(0x41CAE8, 1);
MakeNameEx(0x41CAE8, "TWriter.WriteBuffer", 0x20);
MakeComm(0x41CAE8, "'procedure TWriter.WriteBuffer;'");
MakeCode(0x41CAE8);
MakeFunction(0x41CAE8, 0x41CB00);
MakeUnkn(0x41CB00, 1);
MakeNameEx(0x41CB00, "TWriter.WriteBoolean", 0x20);
MakeComm(0x41CB00, "'procedure TWriter.WriteBoolean(Value:Boolean);'");
MakeCode(0x41CB00);
MakeCode(0x41CB0C);
MakeFunction(0x41CB00, 0x41CB14);
MakeUnkn(0x41CB14, 1);
MakeNameEx(0x41CB14, "TWriter.WriteInteger", 0x20);
MakeComm(0x41CB14, "'procedure TWriter.WriteInteger(Value:Longint);'");
MakeCode(0x41CB14);
MakeCode(0x41CB41);
MakeCode(0x41CB6C);
MakeCode(0x41CB83);
MakeFunction(0x41CB14, 0x41CB86);
MakeUnkn(0x41CB88, 1);
MakeNameEx(0x41CB88, "TWriter.WriteListBegin", 0x20);
MakeComm(0x41CB88, "'procedure TWriter.WriteListBegin;'");
MakeCode(0x41CB88);
MakeFunction(0x41CB88, 0x41CB90);
MakeUnkn(0x41CB90, 1);
MakeNameEx(0x41CB90, "TWriter.WriteListEnd", 0x20);
MakeComm(0x41CB90, "'procedure TWriter.WriteListEnd;'");
MakeCode(0x41CB90);
MakeFunction(0x41CB90, 0x41CB98);
MakeUnkn(0x41CB98, 1);
MakeNameEx(0x41CB98, "TWriter.WriteMinStr", 0x20);
MakeComm(0x41CB98, "'procedure TWriter.WriteMinStr(const LocaleStr:AnsiString; const UTF8Str:UTF8String);'");
MakeCode(0x41CB98);
MakeCode(0x41CBC0);
MakeCode(0x41CBE8);
MakeCode(0x41CBF3);
MakeCode(0x41CC18);
MakeCode(0x41CC2F);
MakeCode(0x41CC3B);
MakeFunction(0x41CB98, 0x41CC41);
MakeUnkn(0x41CC44, 1);
MakeNameEx(0x41CC44, "TWriter.WriteString", 0x20);
MakeComm(0x41CC44, "'procedure TWriter.WriteString(const Value:AnsiString);'");
MakeCode(0x41CC44);
MakeCode(0x41CC73);
MakeCode(0x41CC80);
MakeCode(0x41CC89);
MakeCode(0x41CC8E);
MakeFunction(0x41CC44, 0x41CC95);
MakeUnkn(0x41CC98, 1);
MakeNameEx(0x41CC98, "TWriter.WriteValue", 0x20);
MakeComm(0x41CC98, "'procedure TWriter.WriteValue(Value:TValueType);'");
MakeCode(0x41CC98);
MakeFunction(0x41CC98, 0x41CCAA);
MakeUnkn(0x41CCAC, 1);
MakeNameEx(0x41CCAC, "InitThreadSynchronization", 0x20);
MakeComm(0x41CCAC, "'procedure InitThreadSynchronization;'");
MakeCode(0x41CCAC);
MakeFunction(0x41CCAC, 0x41CCDA);
MakeUnkn(0x41CCE0, 1);
MakeNameEx(0x41CCE0, "DoneThreadSynchronization", 0x20);
MakeComm(0x41CCE0, "'procedure DoneThreadSynchronization;'");
MakeCode(0x41CCE0);
MakeFunction(0x41CCE0, 0x41CCF6);
MakeUnkn(0x41CCF8, 1);
MakeNameEx(0x41CCF8, "ResetSyncEvent", 0x20);
MakeComm(0x41CCF8, "'procedure ResetSyncEvent;'");
MakeCode(0x41CCF8);
MakeFunction(0x41CCF8, 0x41CD04);
MakeUnkn(0x41CD04, 1);
MakeNameEx(0x41CD04, "WaitForSyncEvent", 0x20);
MakeComm(0x41CD04, "'procedure WaitForSyncEvent(Timeout:Integer);'");
MakeCode(0x41CD04);
MakeCode(0x41CD1C);
MakeFunction(0x41CD04, 0x41CD1E);
MakeUnkn(0x41CD20, 1);
MakeNameEx(0x41CD20, "CheckSynchronize", 0x20);
MakeComm(0x41CD20, "'function CheckSynchronize(Timeout:Integer):Boolean;'");
MakeCode(0x41CD20);
MakeCode(0x41CD63);
MakeCode(0x41CD70);
MakeCode(0x41CD75);
MakeCode(0x41CDC0);
MakeCode(0x41CDC4);
MakeCode(0x41CDC6);
MakeCode(0x41CDD8);
MakeCode(0x41CE20);
MakeCode(0x41CE2A);
MakeCode(0x41CE47);
MakeCode(0x41CE4C);
MakeCode(0x41CE51);
MakeCode(0x41CE5E);
MakeCode(0x41CE69);
MakeCode(0x41CE6E);
MakeCode(0x41CE87);
MakeCode(0x41CEA3);
MakeCode(0x41CEB0);
MakeCode(0x41CEBD);
MakeCode(0x41CEC6);
MakeCode(0x41CECB);
MakeCode(0x41CECD);
MakeCode(0x41CEDA);
MakeCode(0x41CEE5);
MakeCode(0x41CEEA);
MakeFunction(0x41CD20, 0x41CEF7);
MakeUnkn(0x41CEF8, 1);
MakeNameEx(0x41CEF8, "TComponent.Create", 0x20);
MakeComm(0x41CEF8, "'constructor TComponent.Create(AOwner:TComponent);'");
MakeCode(0x41CEF8);
MakeCode(0x41CF07);
MakeCode(0x41CF24);
MakeCode(0x41CF39);
MakeFunction(0x41CEF8, 0x41CF3F);
MakeUnkn(0x41CF44, 1);
MakeNameEx(0x41CF44, "TComponent.Destroy", 0x20);
MakeComm(0x41CF44, "'destructor TComponent.Destroy;'");
MakeCode(0x41CF44);
MakeCode(0x41CF60);
MakeCode(0x41CF74);
MakeCode(0x41CF81);
MakeCode(0x41CF89);
MakeCode(0x41CF9E);
MakeCode(0x41CFB9);
MakeFunction(0x41CF44, 0x41CFBD);
MakeUnkn(0x41CFC0, 1);
MakeNameEx(0x41CFC0, "TComponent.BeforeDestruction", 0x20);
MakeComm(0x41CFC0, "'procedure TComponent.BeforeDestruction;'");
MakeCode(0x41CFC0);
MakeFunction(0x41CFC0, 0x41CFCC);
MakeUnkn(0x41CFCC, 1);
MakeNameEx(0x41CFCC, "TComponent.FreeNotification", 0x20);
MakeComm(0x41CFCC, "'procedure TComponent.FreeNotification(AComponent:TComponent);'");
MakeCode(0x41CFCC);
MakeCode(0x41CFDE);
MakeCode(0x41CFF3);
MakeCode(0x41D014);
MakeFunction(0x41CFCC, 0x41D01D);
MakeUnkn(0x41D020, 1);
MakeNameEx(0x41D020, "TComponent.ReadLeft", 0x20);
MakeComm(0x41D020, "'procedure TComponent.ReadLeft(Reader:TReader);'");
MakeCode(0x41D020);
MakeFunction(0x41D020, 0x41D034);
MakeUnkn(0x41D034, 1);
MakeNameEx(0x41D034, "TComponent.ReadTop", 0x20);
MakeComm(0x41D034, "'procedure TComponent.ReadTop(Reader:TReader);'");
MakeCode(0x41D034);
MakeFunction(0x41D034, 0x41D048);
MakeUnkn(0x41D048, 1);
MakeNameEx(0x41D048, "TComponent.WriteLeft", 0x20);
MakeComm(0x41D048, "'procedure TComponent.WriteLeft(Writer:TWriter);'");
MakeCode(0x41D048);
MakeFunction(0x41D048, 0x41D053);
MakeUnkn(0x41D054, 1);
MakeNameEx(0x41D054, "TComponent.WriteTop", 0x20);
MakeComm(0x41D054, "'procedure TComponent.WriteTop(Writer:TWriter);'");
MakeCode(0x41D054);
MakeFunction(0x41D054, 0x41D05F);
MakeUnkn(0x41D060, 1);
MakeNameEx(0x41D060, "TComponent.Insert", 0x20);
MakeComm(0x41D060, "'procedure TComponent.Insert(AComponent:TComponent);'");
MakeCode(0x41D060);
MakeCode(0x41D07B);
MakeFunction(0x41D060, 0x41D08B);
MakeUnkn(0x41D08C, 1);
MakeNameEx(0x41D08C, "TComponent.Remove", 0x20);
MakeComm(0x41D08C, "'procedure TComponent.Remove(AComponent:TComponent);'");
MakeCode(0x41D08C);
MakeCode(0x41D0AF);
MakeFunction(0x41D08C, 0x41D0B1);
MakeUnkn(0x41D0B4, 1);
MakeNameEx(0x41D0B4, "TComponent.InsertComponent", 0x20);
MakeComm(0x41D0B4, "'procedure TComponent.InsertComponent(AComponent:TComponent);'");
MakeCode(0x41D0B4);
MakeCode(0x41D0D6);
MakeCode(0x41D108);
MakeFunction(0x41D0B4, 0x41D117);
MakeUnkn(0x41D118, 1);
MakeNameEx(0x41D118, "TComponent.RemoveComponent", 0x20);
MakeComm(0x41D118, "'procedure TComponent.RemoveComponent(AComponent:TComponent);'");
MakeCode(0x41D118);
MakeFunction(0x41D118, 0x41D14E);
MakeUnkn(0x41D150, 1);
MakeNameEx(0x41D150, "TComponent.DestroyComponents", 0x20);
MakeComm(0x41D150, "'procedure TComponent.DestroyComponents;'");
MakeCode(0x41D150);
MakeCode(0x41D157);
MakeCode(0x41D17D);
MakeCode(0x41D188);
MakeCode(0x41D191);
MakeCode(0x41D19A);
MakeFunction(0x41D150, 0x41D1A5);
MakeUnkn(0x41D1AC, 1);
MakeNameEx(0x41D1AC, "TComponent.Destroying", 0x20);
MakeComm(0x41D1AC, "'procedure TComponent.Destroying;'");
MakeCode(0x41D1AC);
MakeCode(0x41D1CE);
MakeCode(0x41D1E1);
MakeFunction(0x41D1AC, 0x41D1E5);
MakeUnkn(0x41D1E8, 1);
MakeNameEx(0x41D1E8, "TComponent.RemoveNotification", 0x20);
MakeComm(0x41D1E8, "'procedure TComponent.RemoveNotification(AComponent:TComponent);'");
MakeCode(0x41D1E8);
MakeCode(0x41D20A);
MakeFunction(0x41D1E8, 0x41D20C);
MakeUnkn(0x41D20C, 1);
MakeNameEx(0x41D20C, "TComponent.RemoveFreeNotification", 0x20);
MakeComm(0x41D20C, "'procedure TComponent.RemoveFreeNotification(AComponent:TComponent);'");
MakeCode(0x41D20C);
MakeFunction(0x41D20C, 0x41D227);
MakeUnkn(0x41D228, 1);
MakeNameEx(0x41D228, "TComponent.Notification", 0x20);
MakeComm(0x41D228, "'procedure TComponent.Notification(AComponent:TComponent; Operation:TOperation);'");
MakeCode(0x41D228);
MakeCode(0x41D247);
MakeCode(0x41D256);
MakeCode(0x41D27B);
MakeCode(0x41D27F);
MakeFunction(0x41D228, 0x41D285);
MakeUnkn(0x41D288, 1);
MakeNameEx(0x41D288, "TComponent.DefineProperties", 0x20);
MakeComm(0x41D288, "'procedure TComponent.DefineProperties(Filer:TFiler);'");
MakeCode(0x41D288);
MakeCode(0x41D2A5);
MakeFunction(0x41D288, 0x41D2F1);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x41D2FC, -1);
MakeDword(0x41D2F8);
MakeDword(0x41D2F4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x41D30C, -1);
MakeDword(0x41D308);
MakeDword(0x41D304);
MakeUnkn(0x41D310, 1);
MakeNameEx(0x41D310, "TComponent.HasParent", 0x20);
MakeComm(0x41D310, "'procedure TComponent.HasParent;'");
MakeCode(0x41D310);
MakeFunction(0x41D310, 0x41D313);
MakeUnkn(0x41D314, 1);
MakeNameEx(0x41D314, "TComponent.sub_0041D314", 0x20);
MakeComm(0x41D314, "'procedure TComponent.sub_0041D314;'");
MakeCode(0x41D314);
MakeFunction(0x41D314, 0x41D31B);
MakeUnkn(0x41D31C, 1);
MakeNameEx(0x41D31C, "TComponent.sub_0041D31C", 0x20);
MakeComm(0x41D31C, "'procedure TComponent.sub_0041D31C;'");
MakeCode(0x41D31C);
MakeFunction(0x41D31C, 0x41D31F);
MakeUnkn(0x41D320, 1);
MakeNameEx(0x41D320, "TComponent.sub_0041D320", 0x20);
MakeComm(0x41D320, "'procedure TComponent.sub_0041D320;'");
MakeCode(0x41D320);
MakeFunction(0x41D320, 0x41D321);
MakeUnkn(0x41D324, 1);
MakeNameEx(0x41D324, "TComponent.GetNamePath", 0x20);
MakeComm(0x41D324, "'procedure TComponent.GetNamePath;'");
MakeCode(0x41D324);
MakeFunction(0x41D324, 0x41D337);
MakeUnkn(0x41D338, 1);
MakeNameEx(0x41D338, "TComponent.sub_00416E6C", 0x20);
MakeComm(0x41D338, "'procedure TComponent.sub_00416E6C;'");
MakeCode(0x41D338);
MakeComm(0x41D338, "'TComponent.FOwner:TComponent'");
MakeFunction(0x41D338, 0x41D33C);
MakeUnkn(0x41D33C, 1);
MakeNameEx(0x41D33C, "TComponent.sub_0041D33C", 0x20);
MakeComm(0x41D33C, "'procedure TComponent.sub_0041D33C;'");
MakeCode(0x41D33C);
MakeFunction(0x41D33C, 0x41D33D);
MakeUnkn(0x41D340, 1);
MakeNameEx(0x41D340, "TComponent.GetParentComponent", 0x20);
MakeComm(0x41D340, "'procedure TComponent.GetParentComponent;'");
MakeCode(0x41D340);
MakeFunction(0x41D340, 0x41D343);
MakeUnkn(0x41D344, 1);
MakeNameEx(0x41D344, "TComponent.sub_0041D344", 0x20);
MakeComm(0x41D344, "'procedure TComponent.sub_0041D344;'");
MakeCode(0x41D344);
MakeFunction(0x41D344, 0x41D345);
MakeUnkn(0x41D348, 1);
MakeNameEx(0x41D348, "TComponent.Updating", 0x20);
MakeComm(0x41D348, "'procedure TComponent.Updating;'");
MakeCode(0x41D348);
MakeFunction(0x41D348, 0x41D352);
MakeUnkn(0x41D354, 1);
MakeNameEx(0x41D354, "TComponent.Updated", 0x20);
MakeComm(0x41D354, "'procedure TComponent.Updated;'");
MakeCode(0x41D354);
MakeFunction(0x41D354, 0x41D35E);
MakeUnkn(0x41D360, 1);
MakeNameEx(0x41D360, "TComponent.Loaded", 0x20);
MakeComm(0x41D360, "'procedure TComponent.Loaded;'");
MakeCode(0x41D360);
MakeFunction(0x41D360, 0x41D36A);
MakeUnkn(0x41D36C, 1);
MakeNameEx(0x41D36C, "TComponent.sub_0041D36C", 0x20);
MakeComm(0x41D36C, "'procedure TComponent.sub_0041D36C;'");
MakeCode(0x41D36C);
MakeFunction(0x41D36C, 0x41D36D);
MakeUnkn(0x41D370, 1);
MakeNameEx(0x41D370, "TComponent.ReadState", 0x20);
MakeComm(0x41D370, "'procedure TComponent.ReadState(Reader:TReader);'");
MakeCode(0x41D370);
MakeFunction(0x41D370, 0x41D377);
MakeCode(0x41D378);
MakeFunction(0x41D378, 0x41D37F);
MakeUnkn(0x41D380, 1);
MakeNameEx(0x41D380, "TComponent.ValidateRename", 0x20);
MakeComm(0x41D380, "'procedure TComponent.ValidateRename(AComponent:TComponent; const CurName:AnsiString; const NewName:AnsiString);'");
MakeCode(0x41D380);
MakeCode(0x41D3DB);
MakeCode(0x41D3F5);
MakeFunction(0x41D380, 0x41D3FE);
MakeUnkn(0x41D400, 1);
MakeNameEx(0x41D400, "TComponent.ValidateContainer", 0x20);
MakeComm(0x41D400, "'procedure TComponent.ValidateContainer(AComponent:TComponent);'");
MakeCode(0x41D400);
MakeFunction(0x41D400, 0x41D412);
MakeUnkn(0x41D414, 1);
MakeNameEx(0x41D414, "TComponent.sub_0041D414", 0x20);
MakeComm(0x41D414, "'procedure TComponent.sub_0041D414;'");
MakeCode(0x41D414);
MakeFunction(0x41D414, 0x41D415);
MakeUnkn(0x41D418, 1);
MakeNameEx(0x41D418, "TComponent.FindComponent", 0x20);
MakeComm(0x41D418, "'function TComponent.FindComponent(const AName:AnsiString):TComponent;'");
MakeCode(0x41D418);
MakeCode(0x41D43C);
MakeCode(0x41D45B);
MakeCode(0x41D45D);
MakeFunction(0x41D418, 0x41D465);
MakeUnkn(0x41D468, 1);
MakeNameEx(0x41D468, "TComponent.SetName", 0x20);
MakeComm(0x41D468, "'procedure TComponent.SetName(const NewName:TComponentName);'");
MakeCode(0x41D468);
MakeCode(0x41D4B1);
MakeCode(0x41D4C7);
MakeCode(0x41D4D4);
MakeCode(0x41D4EF);
MakeFunction(0x41D468, 0x41D4F5);
MakeUnkn(0x41D4F8, 1);
MakeNameEx(0x41D4F8, "TComponent.ChangeName", 0x20);
MakeComm(0x41D4F8, "'procedure TComponent.ChangeName(const NewName:TComponentName);'");
MakeCode(0x41D4F8);
MakeFunction(0x41D4F8, 0x41D50B);
MakeUnkn(0x41D50C, 1);
MakeNameEx(0x41D50C, "TComponent.GetComponent", 0x20);
MakeComm(0x41D50C, "'function TComponent.GetComponent(AIndex:Integer):TComponent;'");
MakeCode(0x41D50C);
MakeCode(0x41D52A);
MakeFunction(0x41D50C, 0x41D537);
MakeUnkn(0x41D538, 1);
MakeNameEx(0x41D538, "TComponent.GetComponentCount", 0x20);
MakeComm(0x41D538, "'function TComponent.GetComponentCount:Integer;'");
MakeCode(0x41D538);
MakeCode(0x41D543);
MakeFunction(0x41D538, 0x41D546);
MakeUnkn(0x41D548, 1);
MakeNameEx(0x41D548, "TComponent.SetComponentIndex", 0x20);
MakeComm(0x41D548, "'procedure TComponent.SetComponentIndex(Value:Integer);'");
MakeCode(0x41D548);
MakeCode(0x41D573);
MakeCode(0x41D57A);
MakeCode(0x41D595);
MakeFunction(0x41D548, 0x41D599);
MakeUnkn(0x41D59C, 1);
MakeNameEx(0x41D59C, "TComponent.SetDesigning", 0x20);
MakeComm(0x41D59C, "'procedure TComponent.SetDesigning(Value:Boolean; SetChildren:Boolean);'");
MakeCode(0x41D59C);
MakeCode(0x41D5B3);
MakeCode(0x41D5B8);
MakeCode(0x41D5CF);
MakeCode(0x41D5E5);
MakeFunction(0x41D59C, 0x41D5EB);
MakeUnkn(0x41D5EC, 1);
MakeNameEx(0x41D5EC, "TComponent.SetReference", 0x20);
MakeComm(0x41D5EC, "'procedure TComponent.SetReference(Enable:Boolean);'");
MakeCode(0x41D5EC);
MakeCode(0x41D624);
MakeCode(0x41D628);
MakeFunction(0x41D5EC, 0x41D632);
MakeUnkn(0x41D634, 1);
MakeNameEx(0x41D634, "TComponent.ExecuteAction", 0x20);
MakeComm(0x41D634, "'procedure TComponent.ExecuteAction(Action:TBasicAction);'");
MakeCode(0x41D634);
MakeCode(0x41D653);
MakeFunction(0x41D634, 0x41D659);
MakeUnkn(0x41D65C, 1);
MakeNameEx(0x41D65C, "TComponent.UpdateAction", 0x20);
MakeComm(0x41D65C, "'procedure TComponent.UpdateAction(Action:TBasicAction);'");
MakeCode(0x41D65C);
MakeCode(0x41D67B);
MakeFunction(0x41D65C, 0x41D681);
MakeUnkn(0x41D684, 1);
MakeNameEx(0x41D684, "TComponent.SafeCallException", 0x20);
MakeComm(0x41D684, "'function TComponent.SafeCallException(ExceptObject:TObject; ExceptAddr:Pointer):HRESULT;'");
MakeCode(0x41D684);
MakeCode(0x41D695);
MakeFunction(0x41D684, 0x41D69C);
MakeCode(0x41D69C);
MakeFunction(0x41D69C, 0x41D6A3);
MakeUnkn(0x41D6A4, 1);
MakeNameEx(0x41D6A4, "TComponent.QueryInterface", 0x20);
MakeComm(0x41D6A4, "'function TComponent.QueryInterface(const IID:TGUID; var Obj:Pointer):HRESULT; stdcall;'");
MakeCode(0x41D6A4);
MakeCode(0x41D6CC);
MakeCode(0x41D6D3);
MakeCode(0x41D6DD);
MakeFunction(0x41D6A4, 0x41D6E4);
MakeUnkn(0x41D6E4, 1);
MakeNameEx(0x41D6E4, "TComponent._AddRef", 0x20);
MakeComm(0x41D6E4, "'function TComponent._AddRef:Integer; stdcall;'");
MakeCode(0x41D6E4);
MakeCode(0x41D6F5);
MakeCode(0x41D6FE);
MakeFunction(0x41D6E4, 0x41D702);
MakeUnkn(0x41D704, 1);
MakeNameEx(0x41D704, "TComponent._Release", 0x20);
MakeComm(0x41D704, "'function TComponent._Release:Integer; stdcall;'");
MakeCode(0x41D704);
MakeCode(0x41D715);
MakeCode(0x41D71E);
MakeFunction(0x41D704, 0x41D722);
MakeCode(0x41D724);
MakeFunction(0x41D724, 0x41D725);
MakeUnkn(0x41D728, 1);
MakeNameEx(0x41D728, "TBasicActionLink.Create", 0x20);
MakeComm(0x41D728, "'constructor TBasicActionLink.Create(AClient:TObject);'");
MakeCode(0x41D728);
MakeCode(0x41D737);
MakeCode(0x41D763);
MakeFunction(0x41D728, 0x41D769);
MakeCode(0x41D76C);
MakeFunction(0x41D76C, 0x41D76D);
MakeUnkn(0x41D770, 1);
MakeNameEx(0x41D770, "TBasicActionLink.Destroy", 0x20);
MakeComm(0x41D770, "'destructor TBasicActionLink.Destroy;'");
MakeCode(0x41D770);
MakeCode(0x41D789);
MakeCode(0x41D7A0);
MakeFunction(0x41D770, 0x41D7A3);
MakeUnkn(0x41D7A4, 1);
MakeNameEx(0x41D7A4, "TBasicActionLink.Change", 0x20);
MakeComm(0x41D7A4, "'procedure TBasicActionLink.Change;'");
MakeCode(0x41D7A4);
MakeCode(0x41D7B7);
MakeFunction(0x41D7A4, 0x41D7B9);
MakeUnkn(0x41D7BC, 1);
MakeNameEx(0x41D7BC, "TBasicActionLink.Execute", 0x20);
MakeComm(0x41D7BC, "'function TBasicActionLink.Execute(AComponent:TComponent):Boolean;'");
MakeCode(0x41D7BC);
MakeFunction(0x41D7BC, 0x41D7D7);
MakeUnkn(0x41D7D8, 1);
MakeNameEx(0x41D7D8, "TBasicActionLink.SetAction", 0x20);
MakeComm(0x41D7D8, "'procedure TBasicActionLink.SetAction(Value:TBasicAction);'");
MakeCode(0x41D7D8);
MakeCode(0x41D7F0);
MakeCode(0x41D800);
MakeFunction(0x41D7D8, 0x41D803);
MakeUnkn(0x41D804, 1);
MakeNameEx(0x41D804, "TBasicActionLink.IsOnExecuteLinked", 0x20);
MakeComm(0x41D804, "'function TBasicActionLink.IsOnExecuteLinked:Boolean;'");
MakeCode(0x41D804);
MakeFunction(0x41D804, 0x41D807);
MakeCode(0x41D808);
MakeFunction(0x41D808, 0x41D80F);
MakeUnkn(0x41D810, 1);
MakeNameEx(0x41D810, "TBasicActionLink.Update", 0x20);
MakeComm(0x41D810, "'function TBasicActionLink.Update:Boolean;'");
MakeCode(0x41D810);
MakeFunction(0x41D810, 0x41D819);
MakeUnkn(0x41D81C, 1);
MakeNameEx(0x41D81C, "TBasicAction.Create", 0x20);
MakeComm(0x41D81C, "'constructor TBasicAction.Create(AOwner:TComponent);'");
MakeCode(0x41D81C);
MakeCode(0x41D82A);
MakeCode(0x41D85B);
MakeFunction(0x41D81C, 0x41D860);
MakeUnkn(0x41D860, 1);
MakeNameEx(0x41D860, "TBasicAction.Destroy", 0x20);
MakeComm(0x41D860, "'destructor TBasicAction.Destroy;'");
MakeCode(0x41D860);
MakeCode(0x41D886);
MakeCode(0x41D88E);
MakeCode(0x41D89E);
MakeCode(0x41D8A7);
MakeCode(0x41D8BA);
MakeFunction(0x41D860, 0x41D8BE);
MakeCode(0x41D8C0);
MakeFunction(0x41D8C0, 0x41D8C3);
MakeCode(0x41D8C4);
MakeFunction(0x41D8C4, 0x41D8C5);
MakeUnkn(0x41D8C8, 1);
MakeNameEx(0x41D8C8, "TBasicAction.Notification", 0x20);
MakeComm(0x41D8C8, "'procedure TBasicAction.Notification(AComponent:TComponent; Operation:TOperation);'");
MakeCode(0x41D8C8);
MakeCode(0x41D8EB);
MakeFunction(0x41D8C8, 0x41D8EF);
MakeCode(0x41D8F0);
MakeFunction(0x41D8F0, 0x41D8F1);
MakeUnkn(0x41D8F4, 1);
MakeNameEx(0x41D8F4, "TBasicAction.Execute", 0x20);
MakeComm(0x41D8F4, "'procedure TBasicAction.Execute;'");
MakeCode(0x41D8F4);
MakeCode(0x41D90A);
MakeFunction(0x41D8F4, 0x41D90E);
MakeUnkn(0x41D910, 1);
MakeNameEx(0x41D910, "TBasicAction.Update", 0x20);
MakeComm(0x41D910, "'function TBasicAction.Update:Boolean;'");
MakeCode(0x41D910);
MakeCode(0x41D926);
MakeFunction(0x41D910, 0x41D92A);
MakeUnkn(0x41D92C, 1);
MakeNameEx(0x41D92C, "TBasicAction.SetOnExecute", 0x20);
MakeComm(0x41D92C, "'procedure TBasicAction.SetOnExecute(Value:TNotifyEvent);'");
MakeCode(0x41D92C);
MakeCode(0x41D944);
MakeCode(0x41D952);
MakeCode(0x41D96B);
MakeCode(0x41D97E);
MakeFunction(0x41D92C, 0x41D985);
MakeUnkn(0x41D988, 1);
MakeNameEx(0x41D988, "TBasicAction.Change", 0x20);
MakeComm(0x41D988, "'procedure TBasicAction.Change;'");
MakeCode(0x41D988);
MakeCode(0x41D99A);
MakeFunction(0x41D988, 0x41D99C);
MakeUnkn(0x41D99C, 1);
MakeNameEx(0x41D99C, "TBasicAction.RegisterChanges", 0x20);
MakeComm(0x41D99C, "'procedure TBasicAction.RegisterChanges(Value:TBasicActionLink);'");
MakeCode(0x41D99C);
MakeFunction(0x41D99C, 0x41D9A8);
MakeUnkn(0x41D9A8, 1);
MakeNameEx(0x41D9A8, "TBasicAction.UnRegisterChanges", 0x20);
MakeComm(0x41D9A8, "'procedure TBasicAction.UnRegisterChanges(Value:TBasicActionLink);'");
MakeCode(0x41D9A8);
MakeCode(0x41D9BE);
MakeCode(0x41D9DD);
MakeCode(0x41D9E1);
MakeFunction(0x41D9A8, 0x41D9E6);
MakeUnkn(0x41D9E8, 1);
MakeNameEx(0x41D9E8, "TBasicAction.SetActionComponent", 0x20);
MakeComm(0x41D9E8, "'procedure TBasicAction.SetActionComponent(const Value:TComponent);'");
MakeCode(0x41D9E8);
MakeCode(0x41DA00);
MakeCode(0x41DA10);
MakeFunction(0x41D9E8, 0x41DA13);
MakeUnkn(0x41DA14, 1);
MakeNameEx(0x41DA14, "TStreamAdapter.Create", 0x20);
MakeComm(0x41DA14, "'constructor TStreamAdapter.Create(Stream:TStream; Ownership:TStreamOwnership);'");
MakeCode(0x41DA14);
MakeCode(0x41DA26);
MakeCode(0x41DA54);
MakeFunction(0x41DA14, 0x41DA5D);
MakeUnkn(0x41DA60, 1);
MakeNameEx(0x41DA60, "TStreamAdapter.Destroy", 0x20);
MakeComm(0x41DA60, "'destructor TStreamAdapter.Destroy;'");
MakeCode(0x41DA60);
MakeCode(0x41DA7E);
MakeCode(0x41DA95);
MakeFunction(0x41DA60, 0x41DA98);
MakeUnkn(0x41DA98, 1);
MakeNameEx(0x41DA98, "TStreamAdapter.Read", 0x20);
MakeComm(0x41DA98, "'function TStreamAdapter.Read(pv:Pointer; cb:Longint; pcbRead:PLongint):HRESULT; stdcall;'");
MakeCode(0x41DA98);
MakeCode(0x41DABB);
MakeCode(0x41DAC5);
MakeCode(0x41DADB);
MakeCode(0x41DADD);
MakeCode(0x41DAE7);
MakeCode(0x41DAF6);
MakeFunction(0x41DA98, 0x41DAFF);
MakeUnkn(0x41DB00, 1);
MakeNameEx(0x41DB00, "TStreamAdapter.Write", 0x20);
MakeComm(0x41DB00, "'function TStreamAdapter.Write(pv:Pointer; cb:Longint; pcbWritten:PLongint):HRESULT; stdcall;'");
MakeCode(0x41DB00);
MakeCode(0x41DB23);
MakeCode(0x41DB2D);
MakeCode(0x41DB43);
MakeCode(0x41DB45);
MakeCode(0x41DB4F);
MakeCode(0x41DB5E);
MakeFunction(0x41DB00, 0x41DB67);
MakeUnkn(0x41DB68, 1);
MakeNameEx(0x41DB68, "TStreamAdapter.Seek", 0x20);
MakeComm(0x41DB68, "'function TStreamAdapter.Seek(dlibMove:Largeint; dwOrigin:Longint; var libNewPosition:Largeint):HRESULT; stdcall;'");
MakeCode(0x41DB68);
MakeCode(0x41DB8E);
MakeCode(0x41DB93);
MakeCode(0x41DB9D);
MakeCode(0x41DBC6);
MakeCode(0x41DBC8);
MakeCode(0x41DBD2);
MakeCode(0x41DBE1);
MakeFunction(0x41DB68, 0x41DBEC);
MakeUnkn(0x41DBEC, 1);
MakeNameEx(0x41DBEC, "TStreamAdapter.SetSize", 0x20);
MakeComm(0x41DBEC, "'function TStreamAdapter.SetSize(libNewSize:Largeint):HRESULT; stdcall;'");
MakeCode(0x41DBEC);
MakeCode(0x41DC20);
MakeCode(0x41DC29);
MakeCode(0x41DC2B);
MakeCode(0x41DC35);
MakeCode(0x41DC44);
MakeFunction(0x41DBEC, 0x41DC4D);
MakeUnkn(0x41DC50, 1);
MakeNameEx(0x41DC50, "TStreamAdapter.CopyTo", 0x20);
MakeComm(0x41DC50, "'function TStreamAdapter.CopyTo(stm:IStream; cb:Largeint; var cbRead:Largeint; var cbWritten:Largeint):HRESULT; stdcall;'");
MakeCode(0x41DC50);
MakeCode(0x41DCAF);
MakeCode(0x41DCB1);
MakeCode(0x41DCBA);
MakeCode(0x41DCC0);
MakeCode(0x41DCDE);
MakeCode(0x41DCEF);
MakeCode(0x41DCF1);
MakeCode(0x41DCF8);
MakeCode(0x41DCFB);
MakeCode(0x41DD03);
MakeCode(0x41DD10);
MakeCode(0x41DD13);
MakeCode(0x41DD2F);
MakeCode(0x41DD3C);
MakeCode(0x41DD88);
MakeCode(0x41DD93);
MakeCode(0x41DDA0);
MakeCode(0x41DDB3);
MakeCode(0x41DDC5);
MakeCode(0x41DDCB);
MakeCode(0x41DDD8);
MakeCode(0x41DDF5);
MakeCode(0x41DE0A);
MakeCode(0x41DE0B);
MakeCode(0x41DE10);
MakeCode(0x41DE12);
MakeCode(0x41DE1C);
MakeCode(0x41DE2D);
MakeCode(0x41DE3A);
MakeCode(0x41DE43);
MakeCode(0x41DE48);
MakeFunction(0x41DC50, 0x41DE56);
MakeUnkn(0x41DE58, 1);
MakeNameEx(0x41DE58, "TStreamAdapter.Commit", 0x20);
MakeComm(0x41DE58, "'function TStreamAdapter.Commit(grfCommitFlags:Longint):HRESULT; stdcall;'");
MakeCode(0x41DE58);
MakeFunction(0x41DE58, 0x41DE61);
MakeUnkn(0x41DE64, 1);
MakeNameEx(0x41DE64, "TStreamAdapter.Revert", 0x20);
MakeComm(0x41DE64, "'function TStreamAdapter.Revert:HRESULT; stdcall;'");
MakeCode(0x41DE64);
MakeFunction(0x41DE64, 0x41DE70);
MakeUnkn(0x41DE70, 1);
MakeNameEx(0x41DE70, "TStreamAdapter.LockRegion", 0x20);
MakeComm(0x41DE70, "'function TStreamAdapter.LockRegion(libOffset:Largeint; cb:Largeint; dwLockType:Longint):HRESULT; stdcall;'");
MakeCode(0x41DE70);
MakeFunction(0x41DE70, 0x41DE7C);
MakeUnkn(0x41DE7C, 1);
MakeNameEx(0x41DE7C, "TStreamAdapter.UnlockRegion", 0x20);
MakeComm(0x41DE7C, "'function TStreamAdapter.UnlockRegion(libOffset:Largeint; cb:Largeint; dwLockType:Longint):HRESULT; stdcall;'");
MakeCode(0x41DE7C);
MakeFunction(0x41DE7C, 0x41DE88);
MakeUnkn(0x41DE88, 1);
MakeNameEx(0x41DE88, "TStreamAdapter.Stat", 0x20);
MakeComm(0x41DE88, "'function TStreamAdapter.Stat(var statstg:TStatStg; grfStatFlag:Longint):HRESULT; stdcall;'");
MakeCode(0x41DE88);
MakeCode(0x41DEE1);
MakeCode(0x41DEEB);
MakeCode(0x41DEFA);
MakeFunction(0x41DE88, 0x41DF03);
MakeUnkn(0x41DF04, 1);
MakeNameEx(0x41DF04, "TStreamAdapter.Clone", 0x20);
MakeComm(0x41DF04, "'function TStreamAdapter.Clone(var stm:IStream):HRESULT; stdcall;'");
MakeCode(0x41DF04);
MakeCode(0x41DF12);
MakeFunction(0x41DF04, 0x41DF1B);
MakeUnkn(0x41DF1C, 1);
MakeNameEx(0x41DF1C, "FreeIntConstList", 0x20);
MakeComm(0x41DF1C, "'procedure FreeIntConstList;'");
MakeCode(0x41DF1C);
MakeCode(0x41DF47);
MakeCode(0x41DF59);
MakeCode(0x41DF66);
MakeCode(0x41DF71);
MakeCode(0x41DF76);
MakeFunction(0x41DF1C, 0x41DF87);
MakeUnkn(0x41DF88, 1);
MakeNameEx(0x41DF88, "ModuleUnload", 0x20);
MakeComm(0x41DF88, "'procedure ModuleUnload(Instance:Longint);'");
MakeCode(0x41DF88);
MakeFunction(0x41DF88, 0x41DF8E);
MakeUnkn(0x41DF90, 1);
MakeNameEx(0x41DF90, "StdWndProc", 0x20);
MakeComm(0x41DF90, "'function StdWndProc(Window:HWND; Message:Longint; WParam:Longint; LParam:Longint):Longint; stdcall;'");
MakeCode(0x41DF90);
MakeFunction(0x41DF90, 0x41DFAE);
MakeUnkn(0x41DFB0, 1);
MakeNameEx(0x41DFB0, "CalcJmpOffset", 0x20);
MakeComm(0x41DFB0, "'function CalcJmpOffset(Src:Pointer; Dest:Pointer):Longint;'");
MakeCode(0x41DFB0);
MakeFunction(0x41DFB0, 0x41DFB8);
MakeUnkn(0x41DFB8, 1);
MakeNameEx(0x41DFB8, "MakeObjectInstance", 0x20);
MakeComm(0x41DFB8, "'function MakeObjectInstance(Method:TWndMethod):Pointer;'");
MakeCode(0x41DFB8);
MakeCode(0x41E009);
MakeCode(0x41E034);
MakeFunction(0x41DFB8, 0x41E050);
MakeUnkn(0x41E050, 1);
MakeNameEx(0x41E050, "FreeObjectInstance", 0x20);
MakeComm(0x41E050, "'procedure FreeObjectInstance(ObjectInstance:Pointer);'");
MakeCode(0x41E050);
MakeFunction(0x41E050, 0x41E063);
MakeUnkn(0x41E074, 1);
MakeNameEx(0x41E074, "AllocateHWnd", 0x20);
MakeComm(0x41E074, "'function AllocateHWnd(Method:TWndMethod):HWND;'");
MakeCode(0x41E074);
MakeCode(0x41E0AE);
MakeCode(0x41E0C3);
MakeCode(0x41E0CD);
MakeCode(0x41E118);
MakeFunction(0x41E074, 0x41E121);
MakeUnkn(0x41E128, 1);
MakeNameEx(0x41E128, "DeallocateHWnd", 0x20);
MakeComm(0x41E128, "'procedure DeallocateHWnd(Wnd:HWND);'");
MakeCode(0x41E128);
MakeCode(0x41E14B);
MakeFunction(0x41E128, 0x41E14E);
MakeUnkn(0x41E150, 1);
MakeNameEx(0x41E150, "Finalization", 0x20);
MakeComm(0x41E150, "'procedure Finalization;'");
MakeCode(0x41E150);
MakeCode(0x41E1E6);
MakeCode(0x41E1F3);
MakeCode(0x41E1F4);
MakeCode(0x41E1F9);
MakeFunction(0x41E150, 0x41E1FD);
MakeComm(0x41E200, "'SInvalidTabPosition'");
MakeDword(0x41E200);
MakeDword(0x41E204);
MakeComm(0x41E208, "'SInvalidTabStyle'");
MakeDword(0x41E208);
MakeDword(0x41E20C);
MakeComm(0x41E210, "'SInvalidBitmap'");
MakeDword(0x41E210);
MakeDword(0x41E214);
MakeComm(0x41E218, "'SInvalidIcon'");
MakeDword(0x41E218);
MakeDword(0x41E21C);
MakeComm(0x41E220, "'SInvalidMetafile'");
MakeDword(0x41E220);
MakeDword(0x41E224);
MakeComm(0x41E228, "'SChangeIconSize'");
MakeDword(0x41E228);
MakeDword(0x41E22C);
MakeComm(0x41E230, "'SUnknownClipboardFormat'");
MakeDword(0x41E230);
MakeDword(0x41E234);
MakeComm(0x41E238, "'SOutOfResources'");
MakeDword(0x41E238);
MakeDword(0x41E23C);
MakeComm(0x41E240, "'SNoCanvasHandle'");
MakeDword(0x41E240);
MakeDword(0x41E244);
MakeComm(0x41E248, "'SInvalidImageSize'");
MakeDword(0x41E248);
MakeDword(0x41E24C);
MakeComm(0x41E250, "'SInvalidImageList'");
MakeDword(0x41E250);
MakeDword(0x41E254);
MakeComm(0x41E258, "'SImageIndexError'");
MakeDword(0x41E258);
MakeDword(0x41E25C);
MakeComm(0x41E260, "'SImageReadFail'");
MakeDword(0x41E260);
MakeDword(0x41E264);
MakeComm(0x41E268, "'SImageWriteFail'");
MakeDword(0x41E268);
MakeDword(0x41E26C);
MakeComm(0x41E270, "'SWindowDCError'");
MakeDword(0x41E270);
MakeDword(0x41E274);
MakeComm(0x41E278, "'SWindowClass'");
MakeDword(0x41E278);
MakeDword(0x41E27C);
MakeComm(0x41E280, "'SCannotFocus'");
MakeDword(0x41E280);
MakeDword(0x41E284);
MakeComm(0x41E288, "'SParentRequired'");
MakeDword(0x41E288);
MakeDword(0x41E28C);
MakeComm(0x41E290, "'SParentGivenNotAParent'");
MakeDword(0x41E290);
MakeDword(0x41E294);
MakeComm(0x41E298, "'SMDIChildNotVisible'");
MakeDword(0x41E298);
MakeDword(0x41E29C);
MakeComm(0x41E2A0, "'SVisibleChanged'");
MakeDword(0x41E2A0);
MakeDword(0x41E2A4);
MakeComm(0x41E2A8, "'SCannotShowModal'");
MakeDword(0x41E2A8);
MakeDword(0x41E2AC);
MakeComm(0x41E2B0, "'SPropertyOutOfRange'");
MakeDword(0x41E2B0);
MakeDword(0x41E2B4);
MakeComm(0x41E2B8, "'SMenuIndexError'");
MakeDword(0x41E2B8);
MakeDword(0x41E2BC);
MakeComm(0x41E2C0, "'SMenuReinserted'");
MakeDword(0x41E2C0);
MakeDword(0x41E2C4);
MakeComm(0x41E2C8, "'SMenuNotFound'");
MakeDword(0x41E2C8);
MakeDword(0x41E2CC);
MakeComm(0x41E2D0, "'SNoTimers'");
MakeDword(0x41E2D0);
MakeDword(0x41E2D4);
MakeComm(0x41E2D8, "'SNotPrinting'");
MakeDword(0x41E2D8);
MakeDword(0x41E2DC);
MakeComm(0x41E2E0, "'SPrinting'");
MakeDword(0x41E2E0);
MakeDword(0x41E2E4);
MakeComm(0x41E2E8, "'SInvalidPrinter'");
MakeDword(0x41E2E8);
MakeDword(0x41E2EC);
MakeComm(0x41E2F0, "'SDeviceOnPort'");
MakeDword(0x41E2F0);
MakeDword(0x41E2F4);
MakeComm(0x41E2F8, "'SGroupIndexTooLow'");
MakeDword(0x41E2F8);
MakeDword(0x41E2FC);
MakeComm(0x41E300, "'SNoMDIForm'");
MakeDword(0x41E300);
MakeDword(0x41E304);
MakeComm(0x41E308, "'SControlParentSetToSelf'");
MakeDword(0x41E308);
MakeDword(0x41E30C);
MakeComm(0x41E310, "'SMsgDlgOK'");
MakeDword(0x41E310);
MakeDword(0x41E314);
MakeComm(0x41E318, "'SCancelButton'");
MakeDword(0x41E318);
MakeDword(0x41E31C);
MakeComm(0x41E320, "'SMsgDlgYes'");
MakeDword(0x41E320);
MakeDword(0x41E324);
MakeComm(0x41E328, "'SMsgDlgNo'");
MakeDword(0x41E328);
MakeDword(0x41E32C);
MakeComm(0x41E330, "'SHelpButton'");
MakeDword(0x41E330);
MakeDword(0x41E334);
MakeComm(0x41E338, "'SCloseButton'");
MakeDword(0x41E338);
MakeDword(0x41E33C);
MakeComm(0x41E340, "'SIgnoreButton'");
MakeDword(0x41E340);
MakeDword(0x41E344);
MakeComm(0x41E348, "'SMsgDlgRetry'");
MakeDword(0x41E348);
MakeDword(0x41E34C);
MakeComm(0x41E350, "'SAbortButton'");
MakeDword(0x41E350);
MakeDword(0x41E354);
MakeComm(0x41E358, "'SAllButton'");
MakeDword(0x41E358);
MakeDword(0x41E35C);
MakeComm(0x41E360, "'SCannotDragForm'");
MakeDword(0x41E360);
MakeDword(0x41E364);
MakeComm(0x41E368, "'SVMetafiles'");
MakeDword(0x41E368);
MakeDword(0x41E36C);
MakeComm(0x41E370, "'SVEnhMetafiles'");
MakeDword(0x41E370);
MakeDword(0x41E374);
MakeComm(0x41E378, "'SVIcons'");
MakeDword(0x41E378);
MakeDword(0x41E37C);
MakeComm(0x41E380, "'SVBitmaps'");
MakeDword(0x41E380);
MakeDword(0x41E384);
MakeComm(0x41E388, "'SMsgDlgWarning'");
MakeDword(0x41E388);
MakeDword(0x41E38C);
MakeComm(0x41E390, "'SMsgDlgError'");
MakeDword(0x41E390);
MakeDword(0x41E394);
MakeComm(0x41E398, "'SMsgDlgInformation'");
MakeDword(0x41E398);
MakeDword(0x41E39C);
MakeComm(0x41E3A0, "'SMsgDlgConfirm'");
MakeDword(0x41E3A0);
MakeDword(0x41E3A4);
MakeComm(0x41E3A8, "'SMsgDlgYes'");
MakeDword(0x41E3A8);
MakeDword(0x41E3AC);
MakeComm(0x41E3B0, "'SMsgDlgNo'");
MakeDword(0x41E3B0);
MakeDword(0x41E3B4);
MakeComm(0x41E3B8, "'SMsgDlgOK'");
MakeDword(0x41E3B8);
MakeDword(0x41E3BC);
MakeComm(0x41E3C0, "'SCancelButton'");
MakeDword(0x41E3C0);
MakeDword(0x41E3C4);
MakeComm(0x41E3C8, "'SHelpButton'");
MakeDword(0x41E3C8);
MakeDword(0x41E3CC);
MakeComm(0x41E3D0, "'SMsgDlgAbort'");
MakeDword(0x41E3D0);
MakeDword(0x41E3D4);
MakeComm(0x41E3D8, "'SMsgDlgRetry'");
MakeDword(0x41E3D8);
MakeDword(0x41E3DC);
MakeComm(0x41E3E0, "'SIgnoreButton'");
MakeDword(0x41E3E0);
MakeDword(0x41E3E4);
MakeComm(0x41E3E8, "'SAllButton'");
MakeDword(0x41E3E8);
MakeDword(0x41E3EC);
MakeComm(0x41E3F0, "'SMsgDlgNoToAll'");
MakeDword(0x41E3F0);
MakeDword(0x41E3F4);
MakeComm(0x41E3F8, "'SMsgDlgYesToAll'");
MakeDword(0x41E3F8);
MakeDword(0x41E3FC);
MakeComm(0x41E400, "'SmkcBkSp'");
MakeDword(0x41E400);
MakeDword(0x41E404);
MakeComm(0x41E408, "'SmkcTab'");
MakeDword(0x41E408);
MakeDword(0x41E40C);
MakeComm(0x41E410, "'SmkcEsc'");
MakeDword(0x41E410);
MakeDword(0x41E414);
MakeComm(0x41E418, "'SmkcEnter'");
MakeDword(0x41E418);
MakeDword(0x41E41C);
MakeComm(0x41E420, "'SmkcSpace'");
MakeDword(0x41E420);
MakeDword(0x41E424);
MakeComm(0x41E428, "'SmkcPgUp'");
MakeDword(0x41E428);
MakeDword(0x41E42C);
MakeComm(0x41E430, "'SmkcPgDn'");
MakeDword(0x41E430);
MakeDword(0x41E434);
MakeComm(0x41E438, "'SmkcEnd'");
MakeDword(0x41E438);
MakeDword(0x41E43C);
MakeComm(0x41E440, "'SmkcHome'");
MakeDword(0x41E440);
MakeDword(0x41E444);
MakeComm(0x41E448, "'SmkcLeft'");
MakeDword(0x41E448);
MakeDword(0x41E44C);
MakeComm(0x41E450, "'SmkcUp'");
MakeDword(0x41E450);
MakeDword(0x41E454);
MakeComm(0x41E458, "'SmkcRight'");
MakeDword(0x41E458);
MakeDword(0x41E45C);
MakeComm(0x41E460, "'SmkcDown'");
MakeDword(0x41E460);
MakeDword(0x41E464);
MakeComm(0x41E468, "'SmkcIns'");
MakeDword(0x41E468);
MakeDword(0x41E46C);
MakeComm(0x41E470, "'SmkcDel'");
MakeDword(0x41E470);
MakeDword(0x41E474);
MakeComm(0x41E478, "'SmkcShift'");
MakeDword(0x41E478);
MakeDword(0x41E47C);
MakeComm(0x41E480, "'SmkcCtrl'");
MakeDword(0x41E480);
MakeDword(0x41E484);
MakeComm(0x41E488, "'SmkcAlt'");
MakeDword(0x41E488);
MakeDword(0x41E48C);
MakeComm(0x41E490, "'SOutOfRange'");
MakeDword(0x41E490);
MakeDword(0x41E494);
MakeComm(0x41E498, "'SInsertLineError'");
MakeDword(0x41E498);
MakeDword(0x41E49C);
MakeComm(0x41E4A0, "'SInvalidClipFmt'");
MakeDword(0x41E4A0);
MakeDword(0x41E4A4);
MakeComm(0x41E4A8, "'SIconToClipboard'");
MakeDword(0x41E4A8);
MakeDword(0x41E4AC);
MakeComm(0x41E4B0, "'SCannotOpenClipboard'");
MakeDword(0x41E4B0);
MakeDword(0x41E4B4);
MakeComm(0x41E4B8, "'SInvalidMemoSize'");
MakeDword(0x41E4B8);
MakeDword(0x41E4BC);
MakeComm(0x41E4C0, "'SInvalidPrinterOp'");
MakeDword(0x41E4C0);
MakeDword(0x41E4C4);
MakeComm(0x41E4C8, "'SNoDefaultPrinter'");
MakeDword(0x41E4C8);
MakeDword(0x41E4CC);
MakeComm(0x41E4D0, "'SDuplicateMenus'");
MakeDword(0x41E4D0);
MakeDword(0x41E4D4);
MakeComm(0x41E4D8, "'SDockedCtlNeedsName'");
MakeDword(0x41E4D8);
MakeDword(0x41E4DC);
MakeComm(0x41E4E0, "'SDockTreeRemoveError'");
MakeDword(0x41E4E0);
MakeDword(0x41E4E4);
MakeComm(0x41E4E8, "'SDockZoneNotFound'");
MakeDword(0x41E4E8);
MakeDword(0x41E4EC);
MakeComm(0x41E4F0, "'SDockZoneHasNoCtl'");
MakeDword(0x41E4F0);
MakeDword(0x41E4F4);
MakeComm(0x41E4F8, "'SDockZoneVersionConflict'");
MakeDword(0x41E4F8);
MakeDword(0x41E4FC);
MakeComm(0x41E500, "'SErrorSettingCount'");
MakeDword(0x41E500);
MakeDword(0x41E504);
MakeComm(0x41E508, "'SListBoxMustBeVirtual'");
MakeDword(0x41E508);
MakeDword(0x41E50C);
MakeComm(0x41E510, "'SInvalidPath'");
MakeDword(0x41E510);
MakeDword(0x41E514);
MakeComm(0x41E518, "'SANSIEncoding'");
MakeDword(0x41E518);
MakeDword(0x41E51C);
MakeComm(0x41E520, "'SASCIIEncoding'");
MakeDword(0x41E520);
MakeDword(0x41E524);
MakeComm(0x41E528, "'SUnicodeEncoding'");
MakeDword(0x41E528);
MakeDword(0x41E52C);
MakeComm(0x41E530, "'SBigEndianEncoding'");
MakeDword(0x41E530);
MakeDword(0x41E534);
MakeComm(0x41E538, "'SUTF8Encoding'");
MakeDword(0x41E538);
MakeDword(0x41E53C);
MakeComm(0x41E540, "'SUTF7Encoding'");
MakeDword(0x41E540);
MakeDword(0x41E544);
MakeComm(0x41E548, "'SPageControlNotSet'");
MakeDword(0x41E548);
MakeDword(0x41E54C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x41E558, -1);
MakeDword(0x41E554);
MakeDword(0x41E550);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x41E564, -1);
MakeDword(0x41E560);
MakeDword(0x41E55C);
MakeCode(0x41E568);
MakeCode(0x41E596);
MakeCode(0x41E5A3);
MakeCode(0x41E5A4);
MakeCode(0x41E5A9);
MakeFunction(0x41E568, 0x41E5AD);
MakeUnkn(0x41E5B0, 1);
MakeNameEx(0x41E5B0, "VMT_41E5B0_ERegistryException", 0);
MakeDword(0x41E5B0);
MakeDword(0x41E5B4);
MakeDword(0x41E5B8);
MakeDword(0x41E5BC);
MakeDword(0x41E5C0);
MakeDword(0x41E5C4);
MakeDword(0x41E5C8);
MakeDword(0x41E5CC);
MakeDword(0x41E5D0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41E5FC, 0x41E60F);
MakeDword(0x41E5D4);
MakeDword(0x41E5D8);
MakeDword(0x41E5DC);
MakeDword(0x41E5E0);
MakeDword(0x41E5E4);
MakeDword(0x41E5E8);
MakeDword(0x41E5EC);
MakeDword(0x41E5F0);
MakeDword(0x41E5F4);
MakeDword(0x41E5F8);
MakeUnkn(0x41E610, 1);
MakeNameEx(0x41E610, "VMT_41E610_TRegistry", 0);
MakeDword(0x41E610);
MakeDword(0x41E614);
MakeDword(0x41E618);
MakeDword(0x41E61C);
MakeUnkn(0x41E65C, 1);
MakeNameEx(0x41E65C, "TRegistry_InitTable", 0);
MakeByte(0x41E65C);
MakeByte(0x41E65D);
MakeDword(0x41E65E);
MakeDword(0x41E662);
MakeDword(0x41E666);
MakeDword(0x41E66A);
MakeDword(0x41E620);
MakeDword(0x41E624);
MakeDword(0x41E628);
MakeDword(0x41E62C);
MakeDword(0x41E630);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41E66E, 0x41E678);
MakeDword(0x41E634);
MakeDword(0x41E638);
MakeDword(0x41E63C);
MakeDword(0x41E640);
MakeDword(0x41E644);
MakeDword(0x41E648);
MakeDword(0x41E64C);
MakeDword(0x41E650);
MakeDword(0x41E654);
MakeDword(0x41E658);
MakeUnkn(0x41E678, 1);
MakeNameEx(0x41E678, "VMT_41E678_TRegIniFile", 0);
MakeDword(0x41E678);
MakeDword(0x41E67C);
MakeDword(0x41E680);
MakeDword(0x41E684);
MakeUnkn(0x41E6C4, 1);
MakeNameEx(0x41E6C4, "TRegIniFile_InitTable", 0);
MakeByte(0x41E6C4);
MakeByte(0x41E6C5);
MakeDword(0x41E6C6);
MakeDword(0x41E6CA);
MakeDword(0x41E6CE);
MakeDword(0x41E6D2);
MakeDword(0x41E688);
MakeDword(0x41E68C);
MakeDword(0x41E690);
MakeDword(0x41E694);
MakeDword(0x41E698);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41E6D6, 0x41E6E2);
MakeDword(0x41E69C);
MakeDword(0x41E6A0);
MakeDword(0x41E6A4);
MakeDword(0x41E6A8);
MakeDword(0x41E6AC);
MakeDword(0x41E6B0);
MakeDword(0x41E6B4);
MakeDword(0x41E6B8);
MakeDword(0x41E6BC);
MakeDword(0x41E6C0);
MakeUnkn(0x41E6E4, 1);
MakeNameEx(0x41E6E4, "ReadError_0", 0x20);
MakeComm(0x41E6E4, "'procedure ReadError(const Name:AnsiString);'");
MakeCode(0x41E6E4);
MakeFunction(0x41E6E4, 0x41E710);
MakeUnkn(0x41E710, 1);
MakeNameEx(0x41E710, "IsRelative", 0x20);
MakeComm(0x41E710, "'function IsRelative(const Value:AnsiString):Boolean;'");
MakeCode(0x41E710);
MakeCode(0x41E720);
MakeFunction(0x41E710, 0x41E724);
MakeUnkn(0x41E724, 1);
MakeNameEx(0x41E724, "RegDataToDataType", 0x20);
MakeComm(0x41E724, "'function RegDataToDataType(Value:TRegDataType):Integer;'");
MakeCode(0x41E724);
MakeCode(0x41E736);
MakeCode(0x41E73C);
MakeCode(0x41E742);
MakeCode(0x41E748);
MakeCode(0x41E74E);
MakeFunction(0x41E724, 0x41E751);
MakeUnkn(0x41E754, 1);
MakeNameEx(0x41E754, "DataTypeToRegData", 0x20);
MakeComm(0x41E754, "'function DataTypeToRegData(Value:Integer):TRegDataType;'");
MakeCode(0x41E754);
MakeCode(0x41E75C);
MakeCode(0x41E765);
MakeCode(0x41E76E);
MakeCode(0x41E777);
MakeFunction(0x41E754, 0x41E77A);
MakeUnkn(0x41E77C, 1);
MakeNameEx(0x41E77C, "TRegistry.Create", 0x20);
MakeComm(0x41E77C, "'constructor TRegistry.Create;'");
MakeCode(0x41E77C);
MakeCode(0x41E78A);
MakeCode(0x41E7BA);
MakeFunction(0x41E77C, 0x41E7BF);
MakeUnkn(0x41E7C0, 1);
MakeNameEx(0x41E7C0, "TRegistry.Create_0", 0x20);
MakeComm(0x41E7C0, "'constructor TRegistry.Create(AAccess:LongWord);'");
MakeCode(0x41E7C0);
MakeCode(0x41E7CF);
MakeCode(0x41E7F6);
MakeFunction(0x41E7C0, 0x41E7FC);
MakeUnkn(0x41E7FC, 1);
MakeNameEx(0x41E7FC, "TRegistry.Destroy", 0x20);
MakeComm(0x41E7FC, "'destructor TRegistry.Destroy;'");
MakeCode(0x41E7FC);
MakeCode(0x41E825);
MakeFunction(0x41E7FC, 0x41E828);
MakeUnkn(0x41E828, 1);
MakeNameEx(0x41E828, "TRegistry.CloseKey", 0x20);
MakeComm(0x41E828, "'procedure TRegistry.CloseKey;'");
MakeCode(0x41E828);
MakeCode(0x41E83E);
MakeCode(0x41E854);
MakeFunction(0x41E828, 0x41E856);
MakeUnkn(0x41E858, 1);
MakeNameEx(0x41E858, "TRegistry.SetRootKey", 0x20);
MakeComm(0x41E858, "'procedure TRegistry.SetRootKey(Value:HKEY);'");
MakeCode(0x41E858);
MakeCode(0x41E875);
MakeCode(0x41E87F);
MakeFunction(0x41E858, 0x41E882);
MakeUnkn(0x41E884, 1);
MakeNameEx(0x41E884, "TRegistry.ChangeKey", 0x20);
MakeComm(0x41E884, "'procedure TRegistry.ChangeKey(Value:HKEY; const Path:AnsiString);'");
MakeCode(0x41E884);
MakeFunction(0x41E884, 0x41E8A5);
MakeUnkn(0x41E8A8, 1);
MakeNameEx(0x41E8A8, "TRegistry.GetBaseKey", 0x20);
MakeComm(0x41E8A8, "'function TRegistry.GetBaseKey(Relative:Boolean):HKEY;'");
MakeCode(0x41E8A8);
MakeCode(0x41E8B3);
MakeCode(0x41E8B7);
MakeFunction(0x41E8A8, 0x41E8BA);
MakeUnkn(0x41E8BC, 1);
MakeNameEx(0x41E8BC, "TRegistry.SetCurrentKey", 0x20);
MakeComm(0x41E8BC, "'procedure TRegistry.SetCurrentKey(Value:HKEY);'");
MakeCode(0x41E8BC);
MakeFunction(0x41E8BC, 0x41E8C0);
MakeUnkn(0x41E8C0, 1);
MakeNameEx(0x41E8C0, "TRegistry.CreateKey", 0x20);
MakeComm(0x41E8C0, "'function TRegistry.CreateKey(const Key:AnsiString):Boolean;'");
MakeCode(0x41E8C0);
MakeCode(0x41E90F);
MakeCode(0x41E952);
MakeCode(0x41E976);
MakeCode(0x41E983);
MakeCode(0x41E98C);
MakeCode(0x41E991);
MakeFunction(0x41E8C0, 0x41E99C);
MakeUnkn(0x41E99C, 1);
MakeNameEx(0x41E99C, "TRegistry.OpenKey", 0x20);
MakeComm(0x41E99C, "'function TRegistry.OpenKey(const Key:AnsiString; CanCreate:Boolean):Boolean;'");
MakeCode(0x41E99C);
MakeCode(0x41E9E8);
MakeCode(0x41E9F9);
MakeCode(0x41EA23);
MakeCode(0x41EA55);
MakeCode(0x41EA7E);
MakeCode(0x41EA8B);
MakeCode(0x41EA98);
MakeCode(0x41EAA1);
MakeCode(0x41EAA6);
MakeFunction(0x41E99C, 0x41EAB2);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x41EABC, -1);
MakeDword(0x41EAB8);
MakeDword(0x41EAB4);
MakeUnkn(0x41EAC0, 1);
MakeNameEx(0x41EAC0, "TRegistry.OpenKeyReadOnly", 0x20);
MakeComm(0x41EAC0, "'function TRegistry.OpenKeyReadOnly(const Key:AnsiString):Boolean;'");
MakeCode(0x41EAC0);
MakeCode(0x41EB09);
MakeCode(0x41EB67);
MakeCode(0x41EB79);
MakeCode(0x41EBD2);
MakeCode(0x41EBE1);
MakeCode(0x41EC37);
MakeCode(0x41EC44);
MakeCode(0x41EC51);
MakeCode(0x41EC5A);
MakeCode(0x41EC5F);
MakeFunction(0x41EAC0, 0x41EC6B);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x41EC74, -1);
MakeDword(0x41EC70);
MakeDword(0x41EC6C);
MakeUnkn(0x41EC78, 1);
MakeNameEx(0x41EC78, "TRegistry.DeleteKey", 0x20);
MakeComm(0x41EC78, "'function TRegistry.DeleteKey(const Key:AnsiString):Boolean;'");
MakeCode(0x41EC78);
MakeCode(0x41ECCA);
MakeCode(0x41ED29);
MakeCode(0x41ED70);
MakeCode(0x41ED76);
MakeCode(0x41ED9F);
MakeFunction(0x41EC78, 0x41EDF0);
MakeUnkn(0x41EDF0, 1);
MakeNameEx(0x41EDF0, "TRegistry.DeleteValue", 0x20);
MakeComm(0x41EDF0, "'function TRegistry.DeleteValue(const Name:AnsiString):Boolean;'");
MakeCode(0x41EDF0);
MakeFunction(0x41EDF0, 0x41EE0F);
MakeUnkn(0x41EE10, 1);
MakeNameEx(0x41EE10, "TRegistry.GetKeyInfo", 0x20);
MakeComm(0x41EE10, "'function TRegistry.GetKeyInfo(var Value:TRegKeyInfo):Boolean;'");
MakeCode(0x41EE10);
MakeCode(0x41EE74);
MakeFunction(0x41EE10, 0x41EE77);
MakeUnkn(0x41EE78, 1);
MakeNameEx(0x41EE78, "TRegistry.GetKeyNames", 0x20);
MakeComm(0x41EE78, "'procedure TRegistry.GetKeyNames(Strings:TStrings);'");
MakeCode(0x41EE78);
MakeCode(0x41EECB);
MakeCode(0x41EF12);
MakeCode(0x41EF1F);
MakeCode(0x41EF30);
MakeCode(0x41EF35);
MakeFunction(0x41EE78, 0x41EF3E);
MakeUnkn(0x41EF40, 1);
MakeNameEx(0x41EF40, "TRegistry.GetValueNames", 0x20);
MakeComm(0x41EF40, "'procedure TRegistry.GetValueNames(Strings:TStrings);'");
MakeCode(0x41EF40);
MakeCode(0x41EF93);
MakeCode(0x41EFDA);
MakeCode(0x41EFE7);
MakeCode(0x41EFF8);
MakeCode(0x41EFFD);
MakeFunction(0x41EF40, 0x41F006);
MakeUnkn(0x41F008, 1);
MakeNameEx(0x41F008, "TRegistry.GetDataInfo", 0x20);
MakeComm(0x41F008, "'function TRegistry.GetDataInfo(const ValueName:AnsiString; var Value:TRegDataInfo):Boolean;'");
MakeCode(0x41F008);
MakeFunction(0x41F008, 0x41F057);
MakeUnkn(0x41F058, 1);
MakeNameEx(0x41F058, "TRegistry.GetDataSize", 0x20);
MakeComm(0x41F058, "'function TRegistry.GetDataSize(const ValueName:AnsiString):Integer;'");
MakeCode(0x41F058);
MakeCode(0x41F076);
MakeCode(0x41F079);
MakeFunction(0x41F058, 0x41F07E);
MakeUnkn(0x41F080, 1);
MakeNameEx(0x41F080, "TRegistry.GetDataType", 0x20);
MakeComm(0x41F080, "'function TRegistry.GetDataType(const ValueName:AnsiString):TRegDataType;'");
MakeCode(0x41F080);
MakeCode(0x41F09E);
MakeCode(0x41F0A0);
MakeFunction(0x41F080, 0x41F0A5);
MakeUnkn(0x41F0A8, 1);
MakeNameEx(0x41F0A8, "TRegistry.WriteString", 0x20);
MakeComm(0x41F0A8, "'procedure TRegistry.WriteString(const Name:AnsiString; const Value:AnsiString);'");
MakeCode(0x41F0A8);
MakeCode(0x41F0BD);
MakeFunction(0x41F0A8, 0x41F0D8);
MakeUnkn(0x41F0D8, 1);
MakeNameEx(0x41F0D8, "TRegistry.ReadString", 0x20);
MakeComm(0x41F0D8, "'function TRegistry.ReadString(const Name:AnsiString):AnsiString;'");
MakeCode(0x41F0D8);
MakeCode(0x41F121);
MakeCode(0x41F138);
MakeCode(0x41F141);
MakeCode(0x41F148);
MakeFunction(0x41F0D8, 0x41F14E);
MakeUnkn(0x41F150, 1);
MakeNameEx(0x41F150, "TRegistry.WriteInteger", 0x20);
MakeComm(0x41F150, "'procedure TRegistry.WriteInteger(const Name:AnsiString; Value:Integer);'");
MakeCode(0x41F150);
MakeFunction(0x41F150, 0x41F163);
MakeUnkn(0x41F164, 1);
MakeNameEx(0x41F164, "TRegistry.ReadInteger", 0x20);
MakeComm(0x41F164, "'function TRegistry.ReadInteger(const Name:AnsiString):Integer;'");
MakeCode(0x41F164);
MakeCode(0x41F18A);
MakeFunction(0x41F164, 0x41F191);
MakeUnkn(0x41F194, 1);
MakeNameEx(0x41F194, "TRegistry.WriteBinaryData", 0x20);
MakeComm(0x41F194, "'procedure TRegistry.WriteBinaryData(const Name:AnsiString; var Buffer:void ; BufSize:Integer);'");
MakeCode(0x41F194);
MakeFunction(0x41F194, 0x41F1A8);
MakeUnkn(0x41F1A8, 1);
MakeNameEx(0x41F1A8, "TRegistry.ReadBinaryData", 0x20);
MakeComm(0x41F1A8, "'function TRegistry.ReadBinaryData(const Name:AnsiString; var Buffer:void ; BufSize:Integer):Integer;'");
MakeCode(0x41F1A8);
MakeCode(0x41F1DE);
MakeCode(0x41F1F6);
MakeCode(0x41F1FF);
MakeCode(0x41F201);
MakeFunction(0x41F1A8, 0x41F20C);
MakeUnkn(0x41F20C, 1);
MakeNameEx(0x41F20C, "TRegistry.PutData", 0x20);
MakeComm(0x41F20C, "'procedure TRegistry.PutData(const Name:AnsiString; Buffer:Pointer; BufSize:Integer; RegData:TRegDataType);'");
MakeCode(0x41F20C);
MakeCode(0x41F26B);
MakeFunction(0x41F20C, 0x41F274);
MakeUnkn(0x41F274, 1);
MakeNameEx(0x41F274, "TRegistry.GetData", 0x20);
MakeComm(0x41F274, "'function TRegistry.GetData(const Name:AnsiString; Buffer:Pointer; BufSize:Integer; var RegData:TRegDataType):Integer;'");
MakeCode(0x41F274);
MakeCode(0x41F2CC);
MakeFunction(0x41F274, 0x41F2E7);
MakeUnkn(0x41F2E8, 1);
MakeNameEx(0x41F2E8, "TRegistry.ValueExists", 0x20);
MakeComm(0x41F2E8, "'function TRegistry.ValueExists(const Name:AnsiString):Boolean;'");
MakeCode(0x41F2E8);
MakeFunction(0x41F2E8, 0x41F2F5);
MakeUnkn(0x41F2F8, 1);
MakeNameEx(0x41F2F8, "TRegistry.GetKey", 0x20);
MakeComm(0x41F2F8, "'function TRegistry.GetKey(const Key:AnsiString):HKEY;'");
MakeCode(0x41F2F8);
MakeCode(0x41F341);
MakeCode(0x41F368);
MakeCode(0x41F375);
MakeCode(0x41F37E);
MakeCode(0x41F383);
MakeFunction(0x41F2F8, 0x41F38E);
MakeUnkn(0x41F390, 1);
MakeNameEx(0x41F390, "TRegistry.KeyExists", 0x20);
MakeComm(0x41F390, "'function TRegistry.KeyExists(const Key:AnsiString):Boolean;'");
MakeCode(0x41F390);
MakeCode(0x41F3CF);
MakeCode(0x41F3D5);
MakeCode(0x41F3E2);
MakeCode(0x41F3EC);
MakeCode(0x41F3F1);
MakeFunction(0x41F390, 0x41F3FC);
MakeUnkn(0x41F3FC, 1);
MakeNameEx(0x41F3FC, "TRegIniFile.Create", 0x20);
MakeComm(0x41F3FC, "'constructor TRegIniFile.Create(const FileName:AnsiString);'");
MakeCode(0x41F3FC);
MakeCode(0x41F40A);
MakeCode(0x41F431);
MakeFunction(0x41F3FC, 0x41F436);
MakeUnkn(0x41F438, 1);
MakeNameEx(0x41F438, "TRegIniFile.Create_0", 0x20);
MakeComm(0x41F438, "'constructor TRegIniFile.Create(const FileName:AnsiString; AAccess:LongWord);'");
MakeCode(0x41F438);
MakeCode(0x41F44A);
MakeCode(0x41F486);
MakeFunction(0x41F438, 0x41F48F);
MakeUnkn(0x41F490, 1);
MakeNameEx(0x41F490, "TRegIniFile.ReadString", 0x20);
MakeComm(0x41F490, "'function TRegIniFile.ReadString(const Section:AnsiString; const Ident:AnsiString; const Default:AnsiString):AnsiString;'");
MakeCode(0x41F490);
MakeCode(0x41F501);
MakeCode(0x41F50B);
MakeCode(0x41F518);
MakeCode(0x41F524);
MakeCode(0x41F529);
MakeCode(0x41F52B);
MakeCode(0x41F538);
MakeCode(0x41F542);
MakeCode(0x41F547);
MakeCode(0x41F549);
MakeFunction(0x41F490, 0x41F55B);
MakeUnkn(0x41F55C, 1);
MakeNameEx(0x41F55C, "TRegIniFile.WriteString", 0x20);
MakeComm(0x41F55C, "'procedure TRegIniFile.WriteString(const Section:AnsiString; const Ident:AnsiString; const Value:AnsiString);'");
MakeCode(0x41F55C);
MakeCode(0x41F5C5);
MakeCode(0x41F5D2);
MakeCode(0x41F5DE);
MakeCode(0x41F5E3);
MakeCode(0x41F5E5);
MakeCode(0x41F5F2);
MakeCode(0x41F5FC);
MakeCode(0x41F601);
MakeCode(0x41F603);
MakeFunction(0x41F55C, 0x41F60B);
MakeUnkn(0x41F60C, 1);
MakeNameEx(0x41F60C, "TRegIniFile.ReadInteger", 0x20);
MakeComm(0x41F60C, "'function TRegIniFile.ReadInteger(const Section:AnsiString; const Ident:AnsiString; Default:Longint):Longint;'");
MakeCode(0x41F60C);
MakeCode(0x41F69E);
MakeCode(0x41F6A1);
MakeCode(0x41F6AE);
MakeCode(0x41F6BA);
MakeCode(0x41F6BF);
MakeCode(0x41F6C1);
MakeCode(0x41F6CE);
MakeCode(0x41F6D8);
MakeCode(0x41F6DD);
MakeCode(0x41F6DF);
MakeCode(0x41F6E2);
MakeCode(0x41F6EF);
MakeCode(0x41F6F8);
MakeCode(0x41F6FD);
MakeFunction(0x41F60C, 0x41F70A);
MakeUnkn(0x41F70C, 1);
MakeNameEx(0x41F70C, "TRegIniFile.WriteInteger", 0x20);
MakeComm(0x41F70C, "'procedure TRegIniFile.WriteInteger(const Section:AnsiString; const Ident:AnsiString; Value:Longint);'");
MakeCode(0x41F70C);
MakeCode(0x41F797);
MakeCode(0x41F7A4);
MakeCode(0x41F7B0);
MakeCode(0x41F7B5);
MakeCode(0x41F7B7);
MakeCode(0x41F7C4);
MakeCode(0x41F7CE);
MakeCode(0x41F7D3);
MakeCode(0x41F7D5);
MakeCode(0x41F7E2);
MakeCode(0x41F7EB);
MakeCode(0x41F7F0);
MakeFunction(0x41F70C, 0x41F7FA);
MakeUnkn(0x41F7FC, 1);
MakeNameEx(0x41F7FC, "TRegIniFile.ReadBool", 0x20);
MakeComm(0x41F7FC, "'function TRegIniFile.ReadBool(const Section:AnsiString; const Ident:AnsiString; Default:Boolean):Boolean;'");
MakeCode(0x41F7FC);
MakeFunction(0x41F7FC, 0x41F824);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x41F82C, -1);
MakeDword(0x41F828);
MakeDword(0x41F824);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x41F838, -1);
MakeDword(0x41F834);
MakeDword(0x41F830);
MakeUnkn(0x41F83C, 1);
MakeNameEx(0x41F83C, "TRegIniFile.WriteBool", 0x20);
MakeComm(0x41F83C, "'procedure TRegIniFile.WriteBool(const Section:AnsiString; const Ident:AnsiString; Value:Boolean);'");
MakeCode(0x41F83C);
MakeCode(0x41F8B1);
MakeCode(0x41F8BE);
MakeCode(0x41F8CA);
MakeCode(0x41F8CF);
MakeCode(0x41F8D1);
MakeCode(0x41F8DE);
MakeCode(0x41F8E8);
MakeCode(0x41F8ED);
MakeCode(0x41F8EF);
MakeFunction(0x41F83C, 0x41F8F7);
MakeCode(0x41F8F8);
MakeFunction(0x41F8F8, 0x41F8FE);
MakeCode(0x41F900);
MakeFunction(0x41F900, 0x41F906);
MakeCode(0x41F908);
MakeCode(0x41F936);
MakeCode(0x41F943);
MakeCode(0x41F944);
MakeCode(0x41F949);
MakeFunction(0x41F908, 0x41F94D);
MakeUnkn(0x41F950, 1);
MakeNameEx(0x41F950, "RTTI_41F950_Integer_TColor", 0);
MakeDword(0x41F950);
MakeUnkn(0x41F954, 1);
MakeNameEx(0x41F954, "", 0);
MakeByte(0x41F954);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41F955, 0x41F95C);
MakeByte(0x41F95C);
MakeDword(0x41F95D);
MakeDword(0x41F961);
MakeUnkn(0x41F968, 1);
MakeNameEx(0x41F968, "VMT_41F968_EInvalidGraphic", 0);
MakeDword(0x41F968);
MakeDword(0x41F96C);
MakeDword(0x41F970);
MakeDword(0x41F974);
MakeDword(0x41F978);
MakeDword(0x41F97C);
MakeDword(0x41F980);
MakeDword(0x41F984);
MakeDword(0x41F988);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41F9B4, 0x41F9C4);
MakeDword(0x41F98C);
MakeDword(0x41F990);
MakeDword(0x41F994);
MakeDword(0x41F998);
MakeDword(0x41F99C);
MakeDword(0x41F9A0);
MakeDword(0x41F9A4);
MakeDword(0x41F9A8);
MakeDword(0x41F9AC);
MakeDword(0x41F9B0);
MakeUnkn(0x41F9C4, 1);
MakeNameEx(0x41F9C4, "VMT_41F9C4_EInvalidGraphicOperation", 0);
MakeDword(0x41F9C4);
MakeDword(0x41F9C8);
MakeDword(0x41F9CC);
MakeDword(0x41F9D0);
MakeDword(0x41F9D4);
MakeDword(0x41F9D8);
MakeDword(0x41F9DC);
MakeDword(0x41F9E0);
MakeDword(0x41F9E4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FA10, 0x41FA29);
MakeDword(0x41F9E8);
MakeDword(0x41F9EC);
MakeDword(0x41F9F0);
MakeDword(0x41F9F4);
MakeDword(0x41F9F8);
MakeDword(0x41F9FC);
MakeDword(0x41FA00);
MakeDword(0x41FA04);
MakeDword(0x41FA08);
MakeDword(0x41FA0C);
MakeUnkn(0x41FA2C, 1);
MakeNameEx(0x41FA2C, "RTTI_41FA2C_Enumeration_TFontPitch", 0);
MakeDword(0x41FA2C);
MakeUnkn(0x41FA30, 1);
MakeNameEx(0x41FA30, "", 0);
MakeByte(0x41FA30);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FA31, 0x41FA3C);
MakeByte(0x41FA3C);
MakeDword(0x41FA3D);
MakeDword(0x41FA41);
MakeDword(0x41FA45);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FA49, 0x41FA53);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FA53, 0x41FA5E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FA5E, 0x41FA66);
MakeUnkn(0x41FA70, 1);
MakeNameEx(0x41FA70, "RTTI_41FA70_AnsiString_TFontName", 0);
MakeDword(0x41FA70);
MakeUnkn(0x41FA74, 1);
MakeNameEx(0x41FA74, "", 0);
MakeByte(0x41FA74);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FA75, 0x41FA7F);
MakeUnkn(0x41FA80, 1);
MakeNameEx(0x41FA80, "RTTI_41FA80_Integer_TFontCharset", 0);
MakeDword(0x41FA80);
MakeUnkn(0x41FA84, 1);
MakeNameEx(0x41FA84, "", 0);
MakeByte(0x41FA84);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FA85, 0x41FA92);
MakeByte(0x41FA92);
MakeDword(0x41FA93);
MakeDword(0x41FA97);
MakeUnkn(0x41FA9C, 1);
MakeNameEx(0x41FA9C, "RTTI_41FA9C_Enumeration_TFontStyle", 0);
MakeDword(0x41FA9C);
MakeUnkn(0x41FAA0, 1);
MakeNameEx(0x41FAA0, "", 0);
MakeByte(0x41FAA0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FAA1, 0x41FAAC);
MakeByte(0x41FAAC);
MakeDword(0x41FAAD);
MakeDword(0x41FAB1);
MakeDword(0x41FAB5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FAB9, 0x41FAC0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FAC0, 0x41FAC9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FAC9, 0x41FAD5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FAD5, 0x41FAE1);
MakeUnkn(0x41FAEC, 1);
MakeNameEx(0x41FAEC, "RTTI_41FAEC_Set_TFontStyles", 0);
MakeDword(0x41FAEC);
MakeUnkn(0x41FAF0, 1);
MakeNameEx(0x41FAF0, "", 0);
MakeByte(0x41FAF0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FAF1, 0x41FAFD);
MakeByte(0x41FAFD);
MakeDword(0x41FAFE);
MakeUnkn(0x41FB04, 1);
MakeNameEx(0x41FB04, "RTTI_41FB04_Enumeration_TPenStyle", 0);
MakeDword(0x41FB04);
MakeUnkn(0x41FB08, 1);
MakeNameEx(0x41FB08, "", 0);
MakeByte(0x41FB08);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FB09, 0x41FB13);
MakeByte(0x41FB13);
MakeDword(0x41FB14);
MakeDword(0x41FB18);
MakeDword(0x41FB1C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FB20, 0x41FB28);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FB28, 0x41FB2F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FB2F, 0x41FB35);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FB35, 0x41FB3F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FB3F, 0x41FB4C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FB4C, 0x41FB54);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FB54, 0x41FB62);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FB62, 0x41FB6E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FB6E, 0x41FB7A);
MakeUnkn(0x41FB84, 1);
MakeNameEx(0x41FB84, "RTTI_41FB84_Enumeration_TPenMode", 0);
MakeDword(0x41FB84);
MakeUnkn(0x41FB88, 1);
MakeNameEx(0x41FB88, "", 0);
MakeByte(0x41FB88);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FB89, 0x41FB92);
MakeByte(0x41FB92);
MakeDword(0x41FB93);
MakeDword(0x41FB97);
MakeDword(0x41FB9B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FB9F, 0x41FBA7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FBA7, 0x41FBAF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FBAF, 0x41FBB5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FBB5, 0x41FBBB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FBBB, 0x41FBC2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FBC2, 0x41FBCC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FBCC, 0x41FBDA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FBDA, 0x41FBE7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FBE7, 0x41FBF5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FBF5, 0x41FC02);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FC02, 0x41FC0A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FC0A, 0x41FC15);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FC15, 0x41FC1C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FC1C, 0x41FC26);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FC26, 0x41FC2C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FC2C, 0x41FC35);
MakeUnkn(0x41FC40, 1);
MakeNameEx(0x41FC40, "RTTI_41FC40_Enumeration_TBrushStyle", 0);
MakeDword(0x41FC40);
MakeUnkn(0x41FC44, 1);
MakeNameEx(0x41FC44, "", 0);
MakeByte(0x41FC44);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FC45, 0x41FC51);
MakeByte(0x41FC51);
MakeDword(0x41FC52);
MakeDword(0x41FC56);
MakeDword(0x41FC5A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FC5E, 0x41FC66);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FC66, 0x41FC6E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FC6E, 0x41FC7B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FC7B, 0x41FC86);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FC86, 0x41FC92);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FC92, 0x41FC9E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FC9E, 0x41FCA6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FCA6, 0x41FCB2);
MakeUnkn(0x41FCBC, 1);
MakeNameEx(0x41FCBC, "VMT_41FCBC_TGraphicsObject", 0);
MakeDword(0x41FCBC);
MakeDword(0x41FCC0);
MakeDword(0x41FCC4);
MakeDword(0x41FCC8);
MakeDword(0x41FCCC);
MakeDword(0x41FCD0);
MakeDword(0x41FCD4);
MakeDword(0x41FCD8);
MakeUnkn(0x41FD14, 1);
MakeNameEx(0x41FD14, "TGraphicsObject_DynamicTable", 0);
MakeWord(0x41FD14);
MakeWord(0x41FD16);
MakeDword(0x41FD18);
MakeDword(0x41FCDC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FD1C, 0x41FD2C);
MakeDword(0x41FCE0);
MakeDword(0x41FCE4);
MakeDword(0x41FCE8);
MakeDword(0x41FCEC);
MakeDword(0x41FCF0);
MakeDword(0x41FCF4);
MakeDword(0x41FCF8);
MakeDword(0x41FCFC);
MakeDword(0x41FD00);
MakeDword(0x41FD04);
MakeComm(0x41FD08, "'+0'");
MakeDword(0x41FD08);
MakeComm(0x41FD0C, "'+4'");
MakeDword(0x41FD0C);
MakeComm(0x41FD10, "'+8'");
MakeDword(0x41FD10);
MakeUnkn(0x41FD2C, 1);
MakeNameEx(0x41FD2C, "RTTI_41FD2C_Class_TGraphicsObject", 0);
MakeDword(0x41FD2C);
MakeUnkn(0x41FD30, 1);
MakeNameEx(0x41FD30, "", 0);
MakeByte(0x41FD30);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FD31, 0x41FD41);
MakeDword(0x41FD41);
MakeDword(0x41FD45);
MakeWord(0x41FD49);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FD4B, 0x41FD54);
MakeWord(0x41FD54);
MakeUnkn(0x41FD58, 1);
MakeNameEx(0x41FD58, "RTTI_41FD58_Interface_IChangeNotifier", 0);
MakeDword(0x41FD58);
MakeUnkn(0x41FD5C, 1);
MakeNameEx(0x41FD5C, "", 0);
MakeByte(0x41FD5C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FD5D, 0x41FD6D);
MakeDword(0x41FD6D);
MakeByte(0x41FD71);
MakeByte(0x41FD72);
MakeArray(0x41FD72, 16);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FD82, 0x41FD8B);
MakeWord(0x41FD8B);
MakeWord(0x41FD8D);
MakeUnkn(0x41FD90, 1);
MakeNameEx(0x41FD90, "VMT_41FD90_TFont", 0);
MakeDword(0x41FD90);
MakeDword(0x41FD94);
MakeDword(0x41FD98);
MakeDword(0x41FD9C);
MakeUnkn(0x41FDE8, 1);
MakeNameEx(0x41FDE8, "TFont_InitTable", 0);
MakeByte(0x41FDE8);
MakeByte(0x41FDE9);
MakeDword(0x41FDEA);
MakeDword(0x41FDEE);
MakeDword(0x41FDF2);
MakeDword(0x41FDF6);
MakeDword(0x41FDA0);
MakeDword(0x41FDA4);
MakeDword(0x41FDA8);
MakeDword(0x41FDAC);
MakeUnkn(0x41FDFA, 1);
MakeNameEx(0x41FDFA, "TFont_DynamicTable", 0);
MakeWord(0x41FDFA);
MakeWord(0x41FDFC);
MakeDword(0x41FDFE);
MakeDword(0x41FDB0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FE02, 0x41FE08);
MakeDword(0x41FDB4);
MakeDword(0x41FDB8);
MakeDword(0x41FDBC);
MakeDword(0x41FDC0);
MakeDword(0x41FDC4);
MakeDword(0x41FDC8);
MakeDword(0x41FDCC);
MakeDword(0x41FDD0);
MakeDword(0x41FDD4);
MakeDword(0x41FDD8);
MakeComm(0x41FDDC, "'+0'");
MakeDword(0x41FDDC);
MakeComm(0x41FDE0, "'+4'");
MakeDword(0x41FDE0);
MakeComm(0x41FDE4, "'+8'");
MakeDword(0x41FDE4);
MakeUnkn(0x41FE08, 1);
MakeNameEx(0x41FE08, "RTTI_41FE08_Class_TFont", 0);
MakeDword(0x41FE08);
MakeUnkn(0x41FE0C, 1);
MakeNameEx(0x41FE0C, "", 0);
MakeByte(0x41FE0C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FE0D, 0x41FE13);
MakeDword(0x41FE13);
MakeDword(0x41FE17);
MakeWord(0x41FE1B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FE1D, 0x41FE26);
MakeWord(0x41FE26);
MakeDword(0x41FE28);
MakeDword(0x41FE2C);
MakeDword(0x41FE30);
MakeDword(0x41FE34);
MakeDword(0x41FE38);
MakeDword(0x41FE3C);
MakeWord(0x41FE40);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FE42, 0x41FE4A);
MakeDword(0x41FE4A);
MakeDword(0x41FE4E);
MakeDword(0x41FE52);
MakeDword(0x41FE56);
MakeDword(0x41FE5A);
MakeDword(0x41FE5E);
MakeWord(0x41FE62);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FE64, 0x41FE6A);
MakeDword(0x41FE6A);
MakeDword(0x41FE6E);
MakeDword(0x41FE72);
MakeDword(0x41FE76);
MakeDword(0x41FE7A);
MakeDword(0x41FE7E);
MakeWord(0x41FE82);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FE84, 0x41FE8B);
MakeDword(0x41FE8B);
MakeDword(0x41FE8F);
MakeDword(0x41FE93);
MakeDword(0x41FE97);
MakeDword(0x41FE9B);
MakeDword(0x41FE9F);
MakeWord(0x41FEA3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FEA5, 0x41FEAA);
MakeDword(0x41FEAA);
MakeDword(0x41FEAE);
MakeDword(0x41FEB2);
MakeDword(0x41FEB6);
MakeDword(0x41FEBA);
MakeDword(0x41FEBE);
MakeWord(0x41FEC2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FEC4, 0x41FED0);
MakeDword(0x41FED0);
MakeDword(0x41FED4);
MakeDword(0x41FED8);
MakeDword(0x41FEDC);
MakeDword(0x41FEE0);
MakeDword(0x41FEE4);
MakeWord(0x41FEE8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FEEA, 0x41FEF0);
MakeDword(0x41FEF0);
MakeDword(0x41FEF4);
MakeDword(0x41FEF8);
MakeDword(0x41FEFC);
MakeDword(0x41FF00);
MakeDword(0x41FF04);
MakeWord(0x41FF08);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FF0A, 0x41FF0F);
MakeDword(0x41FF0F);
MakeDword(0x41FF13);
MakeDword(0x41FF17);
MakeDword(0x41FF1B);
MakeDword(0x41FF1F);
MakeDword(0x41FF23);
MakeWord(0x41FF27);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FF29, 0x41FF2F);
MakeUnkn(0x41FF30, 1);
MakeNameEx(0x41FF30, "VMT_41FF30_TPen", 0);
MakeDword(0x41FF30);
MakeDword(0x41FF34);
MakeDword(0x41FF38);
MakeDword(0x41FF3C);
MakeDword(0x41FF40);
MakeDword(0x41FF44);
MakeDword(0x41FF48);
MakeDword(0x41FF4C);
MakeDword(0x41FF50);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FF88, 0x41FF8D);
MakeDword(0x41FF54);
MakeDword(0x41FF58);
MakeDword(0x41FF5C);
MakeDword(0x41FF60);
MakeDword(0x41FF64);
MakeDword(0x41FF68);
MakeDword(0x41FF6C);
MakeDword(0x41FF70);
MakeDword(0x41FF74);
MakeDword(0x41FF78);
MakeComm(0x41FF7C, "'+0'");
MakeDword(0x41FF7C);
MakeComm(0x41FF80, "'+4'");
MakeDword(0x41FF80);
MakeComm(0x41FF84, "'+8'");
MakeDword(0x41FF84);
MakeUnkn(0x41FF90, 1);
MakeNameEx(0x41FF90, "RTTI_41FF90_Class_TPen", 0);
MakeDword(0x41FF90);
MakeUnkn(0x41FF94, 1);
MakeNameEx(0x41FF94, "", 0);
MakeByte(0x41FF94);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FF95, 0x41FF9A);
MakeDword(0x41FF9A);
MakeDword(0x41FF9E);
MakeWord(0x41FFA2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FFA4, 0x41FFAD);
MakeWord(0x41FFAD);
MakeDword(0x41FFAF);
MakeDword(0x41FFB3);
MakeDword(0x41FFB7);
MakeDword(0x41FFBB);
MakeDword(0x41FFBF);
MakeDword(0x41FFC3);
MakeWord(0x41FFC7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FFC9, 0x41FFCF);
MakeDword(0x41FFCF);
MakeDword(0x41FFD3);
MakeDword(0x41FFD7);
MakeDword(0x41FFDB);
MakeDword(0x41FFDF);
MakeDword(0x41FFE3);
MakeWord(0x41FFE7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x41FFE9, 0x41FFEE);
MakeDword(0x41FFEE);
MakeDword(0x41FFF2);
MakeDword(0x41FFF6);
MakeDword(0x41FFFA);
MakeDword(0x41FFFE);
MakeDword(0x420002);
MakeWord(0x420006);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x420008, 0x42000E);
MakeDword(0x42000E);
MakeDword(0x420012);
MakeDword(0x420016);
MakeDword(0x42001A);
MakeDword(0x42001E);
MakeDword(0x420022);
MakeWord(0x420026);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x420028, 0x42002E);
MakeUnkn(0x420030, 1);
MakeNameEx(0x420030, "VMT_420030_TBrush", 0);
MakeDword(0x420030);
MakeDword(0x420034);
MakeDword(0x420038);
MakeDword(0x42003C);
MakeDword(0x420040);
MakeDword(0x420044);
MakeDword(0x420048);
MakeDword(0x42004C);
MakeDword(0x420050);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x420088, 0x42008F);
MakeDword(0x420054);
MakeDword(0x420058);
MakeDword(0x42005C);
MakeDword(0x420060);
MakeDword(0x420064);
MakeDword(0x420068);
MakeDword(0x42006C);
MakeDword(0x420070);
MakeDword(0x420074);
MakeDword(0x420078);
MakeComm(0x42007C, "'+0'");
MakeDword(0x42007C);
MakeComm(0x420080, "'+4'");
MakeDword(0x420080);
MakeComm(0x420084, "'+8'");
MakeDword(0x420084);
MakeUnkn(0x420090, 1);
MakeNameEx(0x420090, "RTTI_420090_Class_TBrush", 0);
MakeDword(0x420090);
MakeUnkn(0x420094, 1);
MakeNameEx(0x420094, "", 0);
MakeByte(0x420094);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x420095, 0x42009C);
MakeDword(0x42009C);
MakeDword(0x4200A0);
MakeWord(0x4200A4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4200A6, 0x4200AF);
MakeWord(0x4200AF);
MakeDword(0x4200B1);
MakeDword(0x4200B5);
MakeDword(0x4200B9);
MakeDword(0x4200BD);
MakeDword(0x4200C1);
MakeDword(0x4200C5);
MakeWord(0x4200C9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4200CB, 0x4200D1);
MakeDword(0x4200D1);
MakeDword(0x4200D5);
MakeDword(0x4200D9);
MakeDword(0x4200DD);
MakeDword(0x4200E1);
MakeDword(0x4200E5);
MakeWord(0x4200E9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4200EB, 0x4200F1);
MakeUnkn(0x4200F4, 1);
MakeNameEx(0x4200F4, "VMT_4200F4_TCanvas", 0);
MakeDword(0x4200F4);
MakeDword(0x4200F8);
MakeDword(0x4200FC);
MakeDword(0x420100);
MakeDword(0x420104);
MakeDword(0x420108);
MakeDword(0x42010C);
MakeDword(0x420110);
MakeDword(0x420114);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x420158, 0x420160);
MakeDword(0x420118);
MakeDword(0x42011C);
MakeDword(0x420120);
MakeDword(0x420124);
MakeDword(0x420128);
MakeDword(0x42012C);
MakeDword(0x420130);
MakeDword(0x420134);
MakeDword(0x420138);
MakeDword(0x42013C);
MakeComm(0x420140, "'+0'");
MakeDword(0x420140);
MakeComm(0x420144, "'+4'");
MakeDword(0x420144);
MakeComm(0x420148, "'+8'");
MakeDword(0x420148);
MakeComm(0x42014C, "'+C'");
MakeDword(0x42014C);
MakeComm(0x420150, "'+10'");
MakeDword(0x420150);
MakeComm(0x420154, "'+14'");
MakeDword(0x420154);
MakeUnkn(0x420160, 1);
MakeNameEx(0x420160, "RTTI_420160_Class_TCanvas", 0);
MakeDword(0x420160);
MakeUnkn(0x420164, 1);
MakeNameEx(0x420164, "", 0);
MakeByte(0x420164);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x420165, 0x42016D);
MakeDword(0x42016D);
MakeDword(0x420171);
MakeWord(0x420175);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x420177, 0x420180);
MakeWord(0x420180);
MakeDword(0x420182);
MakeDword(0x420186);
MakeDword(0x42018A);
MakeDword(0x42018E);
MakeDword(0x420192);
MakeDword(0x420196);
MakeWord(0x42019A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42019C, 0x4201A2);
MakeDword(0x4201A2);
MakeDword(0x4201A6);
MakeDword(0x4201AA);
MakeDword(0x4201AE);
MakeDword(0x4201B2);
MakeDword(0x4201B6);
MakeWord(0x4201BA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4201BC, 0x4201C5);
MakeDword(0x4201C5);
MakeDword(0x4201C9);
MakeDword(0x4201CD);
MakeDword(0x4201D1);
MakeDword(0x4201D5);
MakeDword(0x4201D9);
MakeWord(0x4201DD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4201DF, 0x4201E4);
MakeDword(0x4201E4);
MakeDword(0x4201E8);
MakeDword(0x4201EC);
MakeDword(0x4201F0);
MakeDword(0x4201F4);
MakeDword(0x4201F8);
MakeWord(0x4201FC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4201FE, 0x420202);
MakeUnkn(0x420204, 1);
MakeNameEx(0x420204, "RTTI_420204_Enumeration_TProgressStage", 0);
MakeDword(0x420204);
MakeUnkn(0x420208, 1);
MakeNameEx(0x420208, "", 0);
MakeByte(0x420208);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x420209, 0x420218);
MakeByte(0x420218);
MakeDword(0x420219);
MakeDword(0x42021D);
MakeDword(0x420221);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x420225, 0x420230);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x420230, 0x42023A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42023A, 0x420243);
MakeUnkn(0x42024C, 1);
MakeNameEx(0x42024C, "RTTI_42024C_Method_TProgressEvent", 0);
MakeDword(0x42024C);
MakeUnkn(0x420250, 1);
MakeNameEx(0x420250, "", 0);
MakeByte(0x420250);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x420251, 0x420260);
MakeByte(0x420260);
MakeByte(0x420261);
MakeByte(0x420262);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x420263, 0x42026A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42026A, 0x420272);
MakeByte(0x420272);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x420273, 0x420279);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x420279, 0x420288);
MakeByte(0x420288);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x420289, 0x420295);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x420295, 0x42029A);
MakeByte(0x42029A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42029B, 0x4202A5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4202A5, 0x4202AD);
MakeByte(0x4202AD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4202AE, 0x4202B0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4202B0, 0x4202B6);
MakeByte(0x4202B6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4202B7, 0x4202BB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4202BB, 0x4202C2);
MakeByte(0x4202C2);
MakeDword(0x4202C3);
MakeDword(0x4202C7);
MakeDword(0x4202CB);
MakeDword(0x4202CF);
MakeDword(0x4202D3);
MakeDword(0x4202D7);
MakeUnkn(0x420350, 1);
MakeNameEx(0x420350, "VMT_420350_TGraphic", 0);
MakeDword(0x420350);
MakeDword(0x420354);
MakeUnkn(0x420330, 1);
MakeNameEx(0x420330, "TGraphic_IntfTable", 0);
MakeDword(0x420330);
MakeByte(0x420334);
MakeArray(0x420334, 16);
MakeDword(0x420344);
MakeDword(0x42031C);
MakeFunction(0x4202F7, -1);
MakeCode(0x4202F7);
MakeDword(0x420320);
MakeFunction(0x420305, -1);
MakeCode(0x420305);
MakeDword(0x420324);
MakeFunction(0x42030F, -1);
MakeCode(0x42030F);
MakeDword(0x420328);
MakeFunction(0x4202DD, -1);
MakeCode(0x4202DD);
MakeDword(0x42032C);
MakeFunction(0x4202EA, -1);
MakeCode(0x4202EA);
MakeByte(0x4202DC);
MakeDword(0x420348);
MakeDword(0x42034C);
MakeDword(0x420358);
MakeDword(0x42035C);
MakeDword(0x420360);
MakeDword(0x420364);
MakeDword(0x420368);
MakeDword(0x42036C);
MakeUnkn(0x420404, 1);
MakeNameEx(0x420404, "TGraphic_DynamicTable", 0);
MakeWord(0x420404);
MakeWord(0x420406);
MakeDword(0x420408);
MakeDword(0x420370);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42040C, 0x420415);
MakeDword(0x420374);
MakeDword(0x420378);
MakeDword(0x42037C);
MakeDword(0x420380);
MakeDword(0x420384);
MakeDword(0x420388);
MakeDword(0x42038C);
MakeDword(0x420390);
MakeDword(0x420394);
MakeDword(0x420398);
MakeComm(0x42039C, "'+0'");
MakeDword(0x42039C);
MakeComm(0x4203A0, "'+4'");
MakeDword(0x4203A0);
MakeComm(0x4203A4, "'+8'");
MakeDword(0x4203A4);
MakeComm(0x4203A8, "'+C'");
MakeDword(0x4203A8);
MakeComm(0x4203AC, "'+10'");
MakeDword(0x4203AC);
MakeComm(0x4203B0, "'+14'");
MakeDword(0x4203B0);
MakeComm(0x4203B4, "'+18'");
MakeDword(0x4203B4);
MakeComm(0x4203B8, "'+1C'");
MakeDword(0x4203B8);
MakeComm(0x4203BC, "'+20'");
MakeDword(0x4203BC);
MakeComm(0x4203C0, "'+24'");
MakeDword(0x4203C0);
MakeComm(0x4203C4, "'+28'");
MakeDword(0x4203C4);
MakeComm(0x4203C8, "'+2C'");
MakeDword(0x4203C8);
MakeComm(0x4203CC, "'+30'");
MakeDword(0x4203CC);
MakeComm(0x4203D0, "'+34'");
MakeDword(0x4203D0);
MakeComm(0x4203D4, "'+38'");
MakeDword(0x4203D4);
MakeComm(0x4203D8, "'+3C'");
MakeDword(0x4203D8);
MakeComm(0x4203DC, "'+40'");
MakeDword(0x4203DC);
MakeComm(0x4203E0, "'+44'");
MakeDword(0x4203E0);
MakeComm(0x4203E4, "'+48'");
MakeDword(0x4203E4);
MakeComm(0x4203E8, "'+4C'");
MakeDword(0x4203E8);
MakeComm(0x4203EC, "'+50'");
MakeDword(0x4203EC);
MakeComm(0x4203F0, "'+54'");
MakeDword(0x4203F0);
MakeComm(0x4203F4, "'+58'");
MakeDword(0x4203F4);
MakeComm(0x4203F8, "'+5C'");
MakeDword(0x4203F8);
MakeComm(0x4203FC, "'+60'");
MakeDword(0x4203FC);
MakeComm(0x420400, "'+64'");
MakeDword(0x420400);
MakeUnkn(0x420418, 1);
MakeNameEx(0x420418, "RTTI_420418_Class_TGraphic", 0);
MakeDword(0x420418);
MakeUnkn(0x42041C, 1);
MakeNameEx(0x42041C, "", 0);
MakeByte(0x42041C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42041D, 0x420426);
MakeDword(0x420426);
MakeDword(0x42042A);
MakeWord(0x42042E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x420430, 0x420439);
MakeWord(0x420439);
MakeUnkn(0x4204A8, 1);
MakeNameEx(0x4204A8, "VMT_4204A8_TPicture", 0);
MakeDword(0x4204A8);
MakeDword(0x4204AC);
MakeUnkn(0x420486, 1);
MakeNameEx(0x420486, "TPicture_IntfTable", 0);
MakeDword(0x420486);
MakeByte(0x42048A);
MakeArray(0x42048A, 16);
MakeDword(0x42049A);
MakeDword(0x420472);
MakeFunction(0x42044D, -1);
MakeCode(0x42044D);
MakeDword(0x420476);
MakeFunction(0x42045B, -1);
MakeCode(0x42045B);
MakeDword(0x42047A);
MakeFunction(0x420465, -1);
MakeCode(0x420465);
MakeDword(0x42047E);
MakeFunction(0x42043D, -1);
MakeCode(0x42043D);
MakeDword(0x420482);
MakeFunction(0x420445, -1);
MakeCode(0x420445);
MakeByte(0x42043C);
MakeDword(0x42049E);
MakeDword(0x4204A2);
MakeDword(0x4204B0);
MakeDword(0x4204B4);
MakeUnkn(0x420504, 1);
MakeNameEx(0x420504, "TPicture_InitTable", 0);
MakeByte(0x420504);
MakeByte(0x420505);
MakeDword(0x420506);
MakeDword(0x42050A);
MakeDword(0x42050E);
MakeDword(0x420512);
MakeDword(0x4204B8);
MakeDword(0x4204BC);
MakeDword(0x4204C0);
MakeDword(0x4204C4);
MakeUnkn(0x420516, 1);
MakeNameEx(0x420516, "TPicture_DynamicTable", 0);
MakeWord(0x420516);
MakeWord(0x420518);
MakeWord(0x42051A);
MakeDword(0x42051C);
MakeDword(0x420520);
MakeDword(0x4204C8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x420524, 0x42052D);
MakeDword(0x4204CC);
MakeDword(0x4204D0);
MakeDword(0x4204D4);
MakeDword(0x4204D8);
MakeDword(0x4204DC);
MakeDword(0x4204E0);
MakeDword(0x4204E4);
MakeDword(0x4204E8);
MakeDword(0x4204EC);
MakeDword(0x4204F0);
MakeComm(0x4204F4, "'+0'");
MakeDword(0x4204F4);
MakeComm(0x4204F8, "'+4'");
MakeDword(0x4204F8);
MakeComm(0x4204FC, "'+8'");
MakeDword(0x4204FC);
MakeComm(0x420500, "'+C'");
MakeDword(0x420500);
MakeUnkn(0x420530, 1);
MakeNameEx(0x420530, "RTTI_420530_Class_TPicture", 0);
MakeDword(0x420530);
MakeUnkn(0x420534, 1);
MakeNameEx(0x420534, "", 0);
MakeByte(0x420534);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x420535, 0x42053E);
MakeDword(0x42053E);
MakeDword(0x420542);
MakeWord(0x420546);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x420548, 0x420551);
MakeWord(0x420551);
MakeUnkn(0x420554, 1);
MakeNameEx(0x420554, "VMT_420554_TSharedImage", 0);
MakeDword(0x420554);
MakeDword(0x420558);
MakeDword(0x42055C);
MakeDword(0x420560);
MakeDword(0x420564);
MakeDword(0x420568);
MakeDword(0x42056C);
MakeDword(0x420570);
MakeDword(0x420574);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4205A4, 0x4205B1);
MakeDword(0x420578);
MakeDword(0x42057C);
MakeDword(0x420580);
MakeDword(0x420584);
MakeDword(0x420588);
MakeDword(0x42058C);
MakeDword(0x420590);
MakeDword(0x420594);
MakeDword(0x420598);
MakeDword(0x42059C);
MakeComm(0x4205A0, "'+0'");
MakeDword(0x4205A0);
MakeUnkn(0x4205B4, 1);
MakeNameEx(0x4205B4, "VMT_4205B4_TMetafileImage", 0);
MakeDword(0x4205B4);
MakeDword(0x4205B8);
MakeDword(0x4205BC);
MakeDword(0x4205C0);
MakeDword(0x4205C4);
MakeDword(0x4205C8);
MakeDword(0x4205CC);
MakeDword(0x4205D0);
MakeDword(0x4205D4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x420604, 0x420613);
MakeDword(0x4205D8);
MakeDword(0x4205DC);
MakeDword(0x4205E0);
MakeDword(0x4205E4);
MakeDword(0x4205E8);
MakeDword(0x4205EC);
MakeDword(0x4205F0);
MakeDword(0x4205F4);
MakeDword(0x4205F8);
MakeDword(0x4205FC);
MakeComm(0x420600, "'+0'");
MakeDword(0x420600);
MakeUnkn(0x420614, 1);
MakeNameEx(0x420614, "VMT_420614_TMetafile", 0);
MakeDword(0x420614);
MakeDword(0x420618);
MakeDword(0x42061C);
MakeDword(0x420620);
MakeDword(0x420624);
MakeDword(0x420628);
MakeDword(0x42062C);
MakeDword(0x420630);
MakeDword(0x420634);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4206C8, 0x4206D2);
MakeDword(0x420638);
MakeDword(0x42063C);
MakeDword(0x420640);
MakeDword(0x420644);
MakeDword(0x420648);
MakeDword(0x42064C);
MakeDword(0x420650);
MakeDword(0x420654);
MakeDword(0x420658);
MakeDword(0x42065C);
MakeComm(0x420660, "'+0'");
MakeDword(0x420660);
MakeComm(0x420664, "'+4'");
MakeDword(0x420664);
MakeComm(0x420668, "'+8'");
MakeDword(0x420668);
MakeComm(0x42066C, "'+C'");
MakeDword(0x42066C);
MakeComm(0x420670, "'+10'");
MakeDword(0x420670);
MakeComm(0x420674, "'+14'");
MakeDword(0x420674);
MakeComm(0x420678, "'+18'");
MakeDword(0x420678);
MakeComm(0x42067C, "'+1C'");
MakeDword(0x42067C);
MakeComm(0x420680, "'+20'");
MakeDword(0x420680);
MakeComm(0x420684, "'+24'");
MakeDword(0x420684);
MakeComm(0x420688, "'+28'");
MakeDword(0x420688);
MakeComm(0x42068C, "'+2C'");
MakeDword(0x42068C);
MakeComm(0x420690, "'+30'");
MakeDword(0x420690);
MakeComm(0x420694, "'+34'");
MakeDword(0x420694);
MakeComm(0x420698, "'+38'");
MakeDword(0x420698);
MakeComm(0x42069C, "'+3C'");
MakeDword(0x42069C);
MakeComm(0x4206A0, "'+40'");
MakeDword(0x4206A0);
MakeComm(0x4206A4, "'+44'");
MakeDword(0x4206A4);
MakeComm(0x4206A8, "'+48'");
MakeDword(0x4206A8);
MakeComm(0x4206AC, "'+4C'");
MakeDword(0x4206AC);
MakeComm(0x4206B0, "'+50'");
MakeDword(0x4206B0);
MakeComm(0x4206B4, "'+54'");
MakeDword(0x4206B4);
MakeComm(0x4206B8, "'+58'");
MakeDword(0x4206B8);
MakeComm(0x4206BC, "'+5C'");
MakeDword(0x4206BC);
MakeComm(0x4206C0, "'+60'");
MakeDword(0x4206C0);
MakeComm(0x4206C4, "'+64'");
MakeDword(0x4206C4);
MakeUnkn(0x4206D4, 1);
MakeNameEx(0x4206D4, "RTTI_4206D4_Class_TMetafile", 0);
MakeDword(0x4206D4);
MakeUnkn(0x4206D8, 1);
MakeNameEx(0x4206D8, "", 0);
MakeByte(0x4206D8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4206D9, 0x4206E3);
MakeDword(0x4206E3);
MakeDword(0x4206E7);
MakeWord(0x4206EB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4206ED, 0x4206F6);
MakeWord(0x4206F6);
MakeUnkn(0x4206F8, 1);
MakeNameEx(0x4206F8, "VMT_4206F8_TBitmapImage", 0);
MakeDword(0x4206F8);
MakeDword(0x4206FC);
MakeDword(0x420700);
MakeDword(0x420704);
MakeDword(0x420708);
MakeDword(0x42070C);
MakeDword(0x420710);
MakeDword(0x420714);
MakeDword(0x420718);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x420748, 0x420755);
MakeDword(0x42071C);
MakeDword(0x420720);
MakeDword(0x420724);
MakeDword(0x420728);
MakeDword(0x42072C);
MakeDword(0x420730);
MakeDword(0x420734);
MakeDword(0x420738);
MakeDword(0x42073C);
MakeDword(0x420740);
MakeComm(0x420744, "'+0'");
MakeDword(0x420744);
MakeUnkn(0x420758, 1);
MakeNameEx(0x420758, "VMT_420758_TBitmap", 0);
MakeDword(0x420758);
MakeDword(0x42075C);
MakeDword(0x420760);
MakeDword(0x420764);
MakeDword(0x420768);
MakeDword(0x42076C);
MakeDword(0x420770);
MakeDword(0x420774);
MakeDword(0x420778);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x420818, 0x420820);
MakeDword(0x42077C);
MakeDword(0x420780);
MakeDword(0x420784);
MakeDword(0x420788);
MakeDword(0x42078C);
MakeDword(0x420790);
MakeDword(0x420794);
MakeDword(0x420798);
MakeDword(0x42079C);
MakeDword(0x4207A0);
MakeComm(0x4207A4, "'+0'");
MakeDword(0x4207A4);
MakeComm(0x4207A8, "'+4'");
MakeDword(0x4207A8);
MakeComm(0x4207AC, "'+8'");
MakeDword(0x4207AC);
MakeComm(0x4207B0, "'+C'");
MakeDword(0x4207B0);
MakeComm(0x4207B4, "'+10'");
MakeDword(0x4207B4);
MakeComm(0x4207B8, "'+14'");
MakeDword(0x4207B8);
MakeComm(0x4207BC, "'+18'");
MakeDword(0x4207BC);
MakeComm(0x4207C0, "'+1C'");
MakeDword(0x4207C0);
MakeComm(0x4207C4, "'+20'");
MakeDword(0x4207C4);
MakeComm(0x4207C8, "'+24'");
MakeDword(0x4207C8);
MakeComm(0x4207CC, "'+28'");
MakeDword(0x4207CC);
MakeComm(0x4207D0, "'+2C'");
MakeDword(0x4207D0);
MakeComm(0x4207D4, "'+30'");
MakeDword(0x4207D4);
MakeComm(0x4207D8, "'+34'");
MakeDword(0x4207D8);
MakeComm(0x4207DC, "'+38'");
MakeDword(0x4207DC);
MakeComm(0x4207E0, "'+3C'");
MakeDword(0x4207E0);
MakeComm(0x4207E4, "'+40'");
MakeDword(0x4207E4);
MakeComm(0x4207E8, "'+44'");
MakeDword(0x4207E8);
MakeComm(0x4207EC, "'+48'");
MakeDword(0x4207EC);
MakeComm(0x4207F0, "'+4C'");
MakeDword(0x4207F0);
MakeComm(0x4207F4, "'+50'");
MakeDword(0x4207F4);
MakeComm(0x4207F8, "'+54'");
MakeDword(0x4207F8);
MakeComm(0x4207FC, "'+58'");
MakeDword(0x4207FC);
MakeComm(0x420800, "'+5C'");
MakeDword(0x420800);
MakeComm(0x420804, "'+60'");
MakeDword(0x420804);
MakeComm(0x420808, "'+64'");
MakeDword(0x420808);
MakeComm(0x42080C, "'+68'");
MakeDword(0x42080C);
MakeComm(0x420810, "'+6C'");
MakeDword(0x420810);
MakeComm(0x420814, "'+70'");
MakeDword(0x420814);
MakeUnkn(0x420820, 1);
MakeNameEx(0x420820, "RTTI_420820_Class_TBitmap", 0);
MakeDword(0x420820);
MakeUnkn(0x420824, 1);
MakeNameEx(0x420824, "", 0);
MakeByte(0x420824);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x420825, 0x42082D);
MakeDword(0x42082D);
MakeDword(0x420831);
MakeWord(0x420835);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x420837, 0x420840);
MakeWord(0x420840);
MakeUnkn(0x420844, 1);
MakeNameEx(0x420844, "VMT_420844_TIconImage", 0);
MakeDword(0x420844);
MakeDword(0x420848);
MakeDword(0x42084C);
MakeDword(0x420850);
MakeDword(0x420854);
MakeDword(0x420858);
MakeDword(0x42085C);
MakeDword(0x420860);
MakeDword(0x420864);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x420894, 0x42089F);
MakeDword(0x420868);
MakeDword(0x42086C);
MakeDword(0x420870);
MakeDword(0x420874);
MakeDword(0x420878);
MakeDword(0x42087C);
MakeDword(0x420880);
MakeDword(0x420884);
MakeDword(0x420888);
MakeDword(0x42088C);
MakeComm(0x420890, "'+0'");
MakeDword(0x420890);
MakeUnkn(0x4208A0, 1);
MakeNameEx(0x4208A0, "VMT_4208A0_TIcon", 0);
MakeDword(0x4208A0);
MakeDword(0x4208A4);
MakeDword(0x4208A8);
MakeDword(0x4208AC);
MakeDword(0x4208B0);
MakeDword(0x4208B4);
MakeDword(0x4208B8);
MakeDword(0x4208BC);
MakeDword(0x4208C0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x420954, 0x42095A);
MakeDword(0x4208C4);
MakeDword(0x4208C8);
MakeDword(0x4208CC);
MakeDword(0x4208D0);
MakeDword(0x4208D4);
MakeDword(0x4208D8);
MakeDword(0x4208DC);
MakeDword(0x4208E0);
MakeDword(0x4208E4);
MakeDword(0x4208E8);
MakeComm(0x4208EC, "'+0'");
MakeDword(0x4208EC);
MakeComm(0x4208F0, "'+4'");
MakeDword(0x4208F0);
MakeComm(0x4208F4, "'+8'");
MakeDword(0x4208F4);
MakeComm(0x4208F8, "'+C'");
MakeDword(0x4208F8);
MakeComm(0x4208FC, "'+10'");
MakeDword(0x4208FC);
MakeComm(0x420900, "'+14'");
MakeDword(0x420900);
MakeComm(0x420904, "'+18'");
MakeDword(0x420904);
MakeComm(0x420908, "'+1C'");
MakeDword(0x420908);
MakeComm(0x42090C, "'+20'");
MakeDword(0x42090C);
MakeComm(0x420910, "'+24'");
MakeDword(0x420910);
MakeComm(0x420914, "'+28'");
MakeDword(0x420914);
MakeComm(0x420918, "'+2C'");
MakeDword(0x420918);
MakeComm(0x42091C, "'+30'");
MakeDword(0x42091C);
MakeComm(0x420920, "'+34'");
MakeDword(0x420920);
MakeComm(0x420924, "'+38'");
MakeDword(0x420924);
MakeComm(0x420928, "'+3C'");
MakeDword(0x420928);
MakeComm(0x42092C, "'+40'");
MakeDword(0x42092C);
MakeComm(0x420930, "'+44'");
MakeDword(0x420930);
MakeComm(0x420934, "'+48'");
MakeDword(0x420934);
MakeComm(0x420938, "'+4C'");
MakeDword(0x420938);
MakeComm(0x42093C, "'+50'");
MakeDword(0x42093C);
MakeComm(0x420940, "'+54'");
MakeDword(0x420940);
MakeComm(0x420944, "'+58'");
MakeDword(0x420944);
MakeComm(0x420948, "'+5C'");
MakeDword(0x420948);
MakeComm(0x42094C, "'+60'");
MakeDword(0x42094C);
MakeComm(0x420950, "'+64'");
MakeDword(0x420950);
MakeUnkn(0x42095C, 1);
MakeNameEx(0x42095C, "RTTI_42095C_Class_TIcon", 0);
MakeDword(0x42095C);
MakeUnkn(0x420960, 1);
MakeNameEx(0x420960, "", 0);
MakeByte(0x420960);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x420961, 0x420967);
MakeDword(0x420967);
MakeDword(0x42096B);
MakeWord(0x42096F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x420971, 0x42097A);
MakeWord(0x42097A);
MakeUnkn(0x42097C, 1);
MakeNameEx(0x42097C, "InternalDeletePalette", 0x20);
MakeComm(0x42097C, "'procedure InternalDeletePalette(Pal:HPALETTE);'");
MakeCode(0x42097C);
MakeFunction(0x42097C, 0x42098F);
MakeUnkn(0x420990, 1);
MakeNameEx(0x420990, "VMT_420990_TResourceManager", 0);
MakeDword(0x420990);
MakeDword(0x420994);
MakeDword(0x420998);
MakeDword(0x42099C);
MakeDword(0x4209A0);
MakeDword(0x4209A4);
MakeDword(0x4209A8);
MakeDword(0x4209AC);
MakeUnkn(0x4209DC, 1);
MakeNameEx(0x4209DC, "TResourceManager_DynamicTable", 0);
MakeWord(0x4209DC);
MakeWord(0x4209DE);
MakeDword(0x4209E0);
MakeDword(0x4209B0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4209E4, 0x4209F5);
MakeDword(0x4209B4);
MakeDword(0x4209B8);
MakeDword(0x4209BC);
MakeDword(0x4209C0);
MakeDword(0x4209C4);
MakeDword(0x4209C8);
MakeDword(0x4209CC);
MakeDword(0x4209D0);
MakeDword(0x4209D4);
MakeDword(0x4209D8);
MakeUnkn(0x4209F8, 1);
MakeNameEx(0x4209F8, "VMT_4209F8_TBrushResourceManager", 0);
MakeDword(0x4209F8);
MakeDword(0x4209FC);
MakeDword(0x420A00);
MakeDword(0x420A04);
MakeDword(0x420A08);
MakeDword(0x420A0C);
MakeDword(0x420A10);
MakeDword(0x420A14);
MakeUnkn(0x420A44, 1);
MakeNameEx(0x420A44, "TBrushResourceManager_DynamicTable", 0);
MakeWord(0x420A44);
MakeWord(0x420A46);
MakeDword(0x420A48);
MakeDword(0x420A18);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x420A4C, 0x420A62);
MakeDword(0x420A1C);
MakeDword(0x420A20);
MakeDword(0x420A24);
MakeDword(0x420A28);
MakeDword(0x420A2C);
MakeDword(0x420A30);
MakeDword(0x420A34);
MakeDword(0x420A38);
MakeDword(0x420A3C);
MakeDword(0x420A40);
MakeUnkn(0x420A64, 1);
MakeNameEx(0x420A64, "GetHashCode", 0x20);
MakeComm(0x420A64, "'function GetHashCode(const Buffer:void ; Count:Integer):Word;'");
MakeCode(0x420A64);
MakeCode(0x420A6A);
MakeFunction(0x420A64, 0x420A75);
MakeUnkn(0x420A78, 1);
MakeNameEx(0x420A78, "TResourceManager.Create", 0x20);
MakeComm(0x420A78, "'constructor TResourceManager.Create(AResDataSize:Word);'");
MakeCode(0x420A78);
MakeCode(0x420A86);
MakeCode(0x420AAC);
MakeFunction(0x420A78, 0x420AB1);
MakeUnkn(0x420AB4, 1);
MakeNameEx(0x420AB4, "TResourceManager.Destroy", 0x20);
MakeComm(0x420AB4, "'destructor TResourceManager.Destroy;'");
MakeCode(0x420AB4);
MakeCode(0x420AD3);
MakeFunction(0x420AB4, 0x420AD6);
MakeUnkn(0x420AD8, 1);
MakeNameEx(0x420AD8, "TResourceManager.Lock", 0x20);
MakeComm(0x420AD8, "'procedure TResourceManager.Lock;'");
MakeCode(0x420AD8);
MakeFunction(0x420AD8, 0x420AE2);
MakeUnkn(0x420AE4, 1);
MakeNameEx(0x420AE4, "TResourceManager.Unlock", 0x20);
MakeComm(0x420AE4, "'procedure TResourceManager.Unlock;'");
MakeCode(0x420AE4);
MakeFunction(0x420AE4, 0x420AEE);
MakeUnkn(0x420AF0, 1);
MakeNameEx(0x420AF0, "TResourceManager.AllocResource", 0x20);
MakeComm(0x420AF0, "'function TResourceManager.AllocResource(const ResData:void ):PResource;'");
MakeCode(0x420AF0);
MakeCode(0x420B2E);
MakeCode(0x420B36);
MakeCode(0x420B5D);
MakeCode(0x420BA8);
MakeCode(0x420BAE);
MakeCode(0x420BBB);
MakeCode(0x420BC4);
MakeCode(0x420BC9);
MakeFunction(0x420AF0, 0x420BD4);
MakeUnkn(0x420BD4, 1);
MakeNameEx(0x420BD4, "TResourceManager.FreeResource", 0x20);
MakeComm(0x420BD4, "'procedure TResourceManager.FreeResource(Resource:PResource);'");
MakeCode(0x420BD4);
MakeCode(0x420C36);
MakeCode(0x420C38);
MakeCode(0x420C46);
MakeCode(0x420C53);
MakeCode(0x420C5C);
MakeCode(0x420C61);
MakeCode(0x420C79);
MakeCode(0x420C90);
MakeFunction(0x420BD4, 0x420C95);
MakeUnkn(0x420C98, 1);
MakeNameEx(0x420C98, "TResourceManager.ChangeResource", 0x20);
MakeComm(0x420C98, "'procedure TResourceManager.ChangeResource(GraphicsObject:TGraphicsObject; const ResData:void );'");
MakeCode(0x420C98);
MakeCode(0x420CE1);
MakeCode(0x420CEB);
MakeCode(0x420CF8);
MakeCode(0x420D01);
MakeCode(0x420D06);
MakeFunction(0x420C98, 0x420D0F);
MakeUnkn(0x420D10, 1);
MakeNameEx(0x420D10, "TResourceManager.sub_00420D10", 0x20);
MakeComm(0x420D10, "'procedure TResourceManager.sub_00420D10;'");
MakeCode(0x420D10);
MakeFunction(0x420D10, 0x420D11);
MakeUnkn(0x420D14, 1);
MakeNameEx(0x420D14, "TResourceManager.AssignResource", 0x20);
MakeComm(0x420D14, "'procedure TResourceManager.AssignResource(GraphicsObject:TGraphicsObject; AResource:PResource);'");
MakeCode(0x420D14);
MakeCode(0x420D5A);
MakeCode(0x420D67);
MakeCode(0x420D70);
MakeCode(0x420D75);
MakeFunction(0x420D14, 0x420D7D);
MakeUnkn(0x420D80, 1);
MakeNameEx(0x420D80, "TBrushResourceManager.FreeObjects", 0x20);
MakeComm(0x420D80, "'procedure TBrushResourceManager.FreeObjects(Resource:PResource);'");
MakeCode(0x420D80);
MakeFunction(0x420D80, 0x420D8F);
MakeUnkn(0x420D90, 1);
MakeNameEx(0x420D90, "ClearColor", 0x20);
MakeComm(0x420D90, "'procedure ClearColor(ResMan:TResourceManager);'");
MakeCode(0x420D90);
MakeCode(0x420DBA);
MakeCode(0x420DD4);
MakeCode(0x420DDA);
MakeCode(0x420DE7);
MakeCode(0x420DF0);
MakeCode(0x420DF5);
MakeFunction(0x420D90, 0x420DFD);
MakeUnkn(0x420E00, 1);
MakeNameEx(0x420E00, "PaletteChanged", 0x20);
MakeComm(0x420E00, "'procedure PaletteChanged;'");
MakeCode(0x420E00);
MakeCode(0x420E2A);
MakeCode(0x420E48);
MakeCode(0x420E67);
MakeCode(0x420E74);
MakeCode(0x420E7F);
MakeCode(0x420E92);
MakeCode(0x420E9D);
MakeCode(0x420EA2);
MakeFunction(0x420E00, 0x420EAA);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x420EB4, -1);
MakeDword(0x420EB0);
MakeDword(0x420EAC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x420EC4, -1);
MakeDword(0x420EC0);
MakeDword(0x420EBC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x420ED8, -1);
MakeDword(0x420ED4);
MakeDword(0x420ED0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x420EE8, -1);
MakeDword(0x420EE4);
MakeDword(0x420EE0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x420EF8, -1);
MakeDword(0x420EF4);
MakeDword(0x420EF0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x420F08, -1);
MakeDword(0x420F04);
MakeDword(0x420F00);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x420F1C, -1);
MakeDword(0x420F18);
MakeDword(0x420F14);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x420F2C, -1);
MakeDword(0x420F28);
MakeDword(0x420F24);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x420F3C, -1);
MakeDword(0x420F38);
MakeDword(0x420F34);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x420F50, -1);
MakeDword(0x420F4C);
MakeDword(0x420F48);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x420F60, -1);
MakeDword(0x420F5C);
MakeDword(0x420F58);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x420F70, -1);
MakeDword(0x420F6C);
MakeDword(0x420F68);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x420F84, -1);
MakeDword(0x420F80);
MakeDword(0x420F7C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x420F94, -1);
MakeDword(0x420F90);
MakeDword(0x420F8C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x420FA8, -1);
MakeDword(0x420FA4);
MakeDword(0x420FA0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x420FB8, -1);
MakeDword(0x420FB4);
MakeDword(0x420FB0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x420FC8, -1);
MakeDword(0x420FC4);
MakeDword(0x420FC0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x420FE0, -1);
MakeDword(0x420FDC);
MakeDword(0x420FD8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x420FF4, -1);
MakeDword(0x420FF0);
MakeDword(0x420FEC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x421004, -1);
MakeDword(0x421000);
MakeDword(0x420FFC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x421018, -1);
MakeDword(0x421014);
MakeDword(0x421010);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x421030, -1);
MakeDword(0x42102C);
MakeDword(0x421028);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x421048, -1);
MakeDword(0x421044);
MakeDword(0x421040);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x421060, -1);
MakeDword(0x42105C);
MakeDword(0x421058);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x421078, -1);
MakeDword(0x421074);
MakeDword(0x421070);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x42108C, -1);
MakeDword(0x421088);
MakeDword(0x421084);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4210A4, -1);
MakeDword(0x4210A0);
MakeDword(0x42109C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4210B8, -1);
MakeDword(0x4210B4);
MakeDword(0x4210B0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4210CC, -1);
MakeDword(0x4210C8);
MakeDword(0x4210C4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4210E4, -1);
MakeDword(0x4210E0);
MakeDword(0x4210DC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4210F8, -1);
MakeDword(0x4210F4);
MakeDword(0x4210F0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x421118, -1);
MakeDword(0x421114);
MakeDword(0x421110);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x42113C, -1);
MakeDword(0x421138);
MakeDword(0x421134);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x421150, -1);
MakeDword(0x42114C);
MakeDword(0x421148);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x421164, -1);
MakeDword(0x421160);
MakeDword(0x42115C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x42117C, -1);
MakeDword(0x421178);
MakeDword(0x421174);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x421190, -1);
MakeDword(0x42118C);
MakeDword(0x421188);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4211AC, -1);
MakeDword(0x4211A8);
MakeDword(0x4211A4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4211C8, -1);
MakeDword(0x4211C4);
MakeDword(0x4211C0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4211E8, -1);
MakeDword(0x4211E4);
MakeDword(0x4211E0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4211FC, -1);
MakeDword(0x4211F8);
MakeDword(0x4211F4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x421210, -1);
MakeDword(0x42120C);
MakeDword(0x421208);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x421220, -1);
MakeDword(0x42121C);
MakeDword(0x421218);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x421234, -1);
MakeDword(0x421230);
MakeDword(0x42122C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x42124C, -1);
MakeDword(0x421248);
MakeDword(0x421244);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x421260, -1);
MakeDword(0x42125C);
MakeDword(0x421258);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x421270, -1);
MakeDword(0x42126C);
MakeDword(0x421268);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x421284, -1);
MakeDword(0x421280);
MakeDword(0x42127C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x42129C, -1);
MakeDword(0x421298);
MakeDword(0x421294);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4212B0, -1);
MakeDword(0x4212AC);
MakeDword(0x4212A8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4212C4, -1);
MakeDword(0x4212C0);
MakeDword(0x4212BC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4212DC, -1);
MakeDword(0x4212D8);
MakeDword(0x4212D4);
MakeUnkn(0x4212EC, 1);
MakeNameEx(0x4212EC, "ColorToRGB", 0x20);
MakeComm(0x4212EC, "'function ColorToRGB(Color:TColor):Longint;'");
MakeCode(0x4212EC);
MakeFunction(0x4212EC, 0x4212FC);
MakeUnkn(0x4212FC, 1);
MakeNameEx(0x4212FC, "ColorToIdent", 0x20);
MakeComm(0x4212FC, "'function ColorToIdent(Color:Longint; var Ident:AnsiString):Boolean;'");
MakeCode(0x4212FC);
MakeFunction(0x4212FC, 0x421309);
MakeUnkn(0x42130C, 1);
MakeNameEx(0x42130C, "IdentToColor", 0x20);
MakeComm(0x42130C, "'function IdentToColor(const Ident:AnsiString; var Color:Longint):Boolean;'");
MakeCode(0x42130C);
MakeFunction(0x42130C, 0x421319);
MakeUnkn(0x42131C, 1);
MakeNameEx(0x42131C, "TGraphicsObject.Changed", 0x20);
MakeComm(0x42131C, "'procedure TGraphicsObject.Changed;'");
MakeCode(0x42131C);
MakeCode(0x42132E);
MakeFunction(0x42131C, 0x421330);
MakeUnkn(0x421330, 1);
MakeNameEx(0x421330, "TGraphicsObject.Lock", 0x20);
MakeComm(0x421330, "'procedure TGraphicsObject.Lock;'");
MakeCode(0x421330);
MakeFunction(0x421330, 0x42133E);
MakeUnkn(0x421340, 1);
MakeNameEx(0x421340, "TGraphicsObject.Unlock", 0x20);
MakeComm(0x421340, "'procedure TGraphicsObject.Unlock;'");
MakeCode(0x421340);
MakeFunction(0x421340, 0x42134E);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x421358, -1);
MakeDword(0x421354);
MakeDword(0x421350);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x421370, -1);
MakeDword(0x42136C);
MakeDword(0x421368);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x421388, -1);
MakeDword(0x421384);
MakeDword(0x421380);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4213A0, -1);
MakeDword(0x42139C);
MakeDword(0x421398);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4213B4, -1);
MakeDword(0x4213B0);
MakeDword(0x4213AC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4213D0, -1);
MakeDword(0x4213CC);
MakeDword(0x4213C8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4213E8, -1);
MakeDword(0x4213E4);
MakeDword(0x4213E0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x421400, -1);
MakeDword(0x4213FC);
MakeDword(0x4213F8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x421418, -1);
MakeDword(0x421414);
MakeDword(0x421410);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x421434, -1);
MakeDword(0x421430);
MakeDword(0x42142C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x42144C, -1);
MakeDword(0x421448);
MakeDword(0x421444);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x421464, -1);
MakeDword(0x421460);
MakeDword(0x42145C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x42147C, -1);
MakeDword(0x421478);
MakeDword(0x421474);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x421494, -1);
MakeDword(0x421490);
MakeDword(0x42148C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4214AC, -1);
MakeDword(0x4214A8);
MakeDword(0x4214A4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4214C4, -1);
MakeDword(0x4214C0);
MakeDword(0x4214BC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4214DC, -1);
MakeDword(0x4214D8);
MakeDword(0x4214D4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4214F8, -1);
MakeDword(0x4214F4);
MakeDword(0x4214F0);
MakeUnkn(0x421504, 1);
MakeNameEx(0x421504, "CharsetToIdent", 0x20);
MakeComm(0x421504, "'function CharsetToIdent(Charset:Longint; var Ident:AnsiString):Boolean;'");
MakeCode(0x421504);
MakeFunction(0x421504, 0x421511);
MakeUnkn(0x421514, 1);
MakeNameEx(0x421514, "IdentToCharset", 0x20);
MakeComm(0x421514, "'function IdentToCharset(const Ident:AnsiString; var Charset:Longint):Boolean;'");
MakeCode(0x421514);
MakeFunction(0x421514, 0x421521);
MakeUnkn(0x421524, 1);
MakeNameEx(0x421524, "GetFontData", 0x20);
MakeComm(0x421524, "'function GetFontData(Font:HFONT):TFontData;'");
MakeCode(0x421524);
MakeCode(0x42156B);
MakeCode(0x421576);
MakeCode(0x421581);
MakeCode(0x42158C);
MakeCode(0x4215C9);
MakeCode(0x4215CF);
MakeCode(0x4215D3);
MakeCode(0x4215DC);
MakeFunction(0x421524, 0x4215E3);
MakeUnkn(0x4215E4, 1);
MakeNameEx(0x4215E4, "TFont.Create", 0x20);
MakeComm(0x4215E4, "'constructor TFont.Create;'");
MakeCode(0x4215E4);
MakeCode(0x4215F2);
MakeCode(0x421633);
MakeFunction(0x4215E4, 0x421638);
MakeUnkn(0x421638, 1);
MakeNameEx(0x421638, "TBrush.Destroy", 0x20);
MakeComm(0x421638, "'destructor TBrush.Destroy;'");
MakeCode(0x421638);
MakeCode(0x42165B);
MakeFunction(0x421638, 0x42165E);
MakeUnkn(0x421660, 1);
MakeNameEx(0x421660, "TFont.Changed", 0x20);
MakeComm(0x421660, "'procedure TFont.Changed;'");
MakeCode(0x421660);
MakeCode(0x421678);
MakeFunction(0x421660, 0x42167A);
MakeUnkn(0x42167C, 1);
MakeNameEx(0x42167C, "TFont.Assign", 0x20);
MakeComm(0x42167C, "'procedure TFont.Assign(Source:TPersistent);'");
MakeCode(0x42167C);
MakeCode(0x421704);
MakeCode(0x421711);
MakeCode(0x42171A);
MakeCode(0x42171F);
MakeCode(0x421721);
MakeCode(0x42172E);
MakeCode(0x421737);
MakeCode(0x42173C);
MakeCode(0x42173E);
MakeFunction(0x42167C, 0x42174E);
MakeUnkn(0x421750, 1);
MakeNameEx(0x421750, "TFont.GetData", 0x20);
MakeComm(0x421750, "'procedure TFont.GetData(var FontData:TFontData);'");
MakeCode(0x421750);
MakeFunction(0x421750, 0x421768);
MakeUnkn(0x421768, 1);
MakeNameEx(0x421768, "TFont.SetData", 0x20);
MakeComm(0x421768, "'procedure TFont.SetData(const FontData:TFontData);'");
MakeCode(0x421768);
MakeCode(0x421797);
MakeCode(0x4217A4);
MakeCode(0x4217AD);
MakeCode(0x4217B2);
MakeFunction(0x421768, 0x4217B8);
MakeUnkn(0x4217B8, 1);
MakeNameEx(0x4217B8, "TFont.SetColor", 0x20);
MakeComm(0x4217B8, "'procedure TFont.SetColor(const Value:TColor);'");
MakeCode(0x4217B8);
MakeCode(0x4217CA);
MakeFunction(0x4217B8, 0x4217CC);
MakeUnkn(0x4217CC, 1);
MakeNameEx(0x4217CC, "IsDefaultFont", 0x20);
MakeComm(0x4217CC, "'function IsDefaultFont(const FontData:TFontData):Boolean;'");
MakeCode(0x4217CC);
MakeCode(0x4217EE);
MakeCode(0x4217F2);
MakeFunction(0x4217CC, 0x4217F6);
MakeUnkn(0x4217F8, 1);
MakeNameEx(0x4217F8, "TFont.GetHandle", 0x20);
MakeComm(0x4217F8, "'function TFont.GetHandle:HFONT;'");
MakeCode(0x4217F8);
MakeCode(0x421883);
MakeCode(0x42188A);
MakeCode(0x4218D1);
MakeCode(0x4218D4);
MakeCode(0x4218EE);
MakeCode(0x4218FC);
MakeCode(0x42194D);
MakeCode(0x421966);
MakeCode(0x42198C);
MakeCode(0x42199C);
MakeCode(0x4219A0);
MakeCode(0x4219B5);
MakeCode(0x4219BB);
MakeCode(0x4219C1);
MakeCode(0x4219C5);
MakeCode(0x4219D4);
MakeCode(0x4219E1);
MakeCode(0x4219EC);
MakeCode(0x4219F1);
MakeCode(0x4219F3);
MakeCode(0x4219F9);
MakeCode(0x421A06);
MakeCode(0x421A14);
MakeCode(0x421A19);
MakeFunction(0x4217F8, 0x421A24);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x421A2C, -1);
MakeDword(0x421A28);
MakeDword(0x421A24);
MakeUnkn(0x421A34, 1);
MakeNameEx(0x421A34, "TFont.SetHandle", 0x20);
MakeComm(0x421A34, "'procedure TFont.SetHandle(const Value:HFONT);'");
MakeCode(0x421A34);
MakeFunction(0x421A34, 0x421A55);
MakeUnkn(0x421A58, 1);
MakeNameEx(0x421A58, "TFont.GetHeight", 0x20);
MakeComm(0x421A58, "'function TFont.GetHeight:Integer;'");
MakeCode(0x421A58);
MakeFunction(0x421A58, 0x421A5F);
MakeUnkn(0x421A60, 1);
MakeNameEx(0x421A60, "TFont.SetHeight", 0x20);
MakeComm(0x421A60, "'procedure TFont.SetHeight(const Value:Integer);'");
MakeCode(0x421A60);
MakeFunction(0x421A60, 0x421A85);
MakeUnkn(0x421A88, 1);
MakeNameEx(0x421A88, "TFont.GetName", 0x20);
MakeComm(0x421A88, "'function TFont.GetName:TFontName;'");
MakeCode(0x421A88);
MakeFunction(0x421A88, 0x421A9E);
MakeUnkn(0x421AA0, 1);
MakeNameEx(0x421AA0, "TFont.SetName", 0x20);
MakeComm(0x421AA0, "'procedure TFont.SetName(const Value:TFontName);'");
MakeCode(0x421AA0);
MakeCode(0x421AF1);
MakeFunction(0x421AA0, 0x421AFA);
MakeUnkn(0x421AFC, 1);
MakeNameEx(0x421AFC, "TFont.GetSize", 0x20);
MakeComm(0x421AFC, "'function TFont.GetSize:Integer;'");
MakeCode(0x421AFC);
MakeFunction(0x421AFC, 0x421B16);
MakeUnkn(0x421B18, 1);
MakeNameEx(0x421B18, "TFont.SetSize", 0x20);
MakeComm(0x421B18, "'procedure TFont.SetSize(const Value:Integer);'");
MakeCode(0x421B18);
MakeFunction(0x421B18, 0x421B38);
MakeUnkn(0x421B38, 1);
MakeNameEx(0x421B38, "TFont.GetStyle", 0x20);
MakeComm(0x421B38, "'function TFont.GetStyle:TFontStyles;'");
MakeCode(0x421B38);
MakeFunction(0x421B38, 0x421B42);
MakeUnkn(0x421B44, 1);
MakeNameEx(0x421B44, "TFont.SetStyle", 0x20);
MakeComm(0x421B44, "'procedure TFont.SetStyle(const Value:TFontStyles);'");
MakeCode(0x421B44);
MakeFunction(0x421B44, 0x421B70);
MakeUnkn(0x421B70, 1);
MakeNameEx(0x421B70, "TFont.GetPitch", 0x20);
MakeComm(0x421B70, "'function TFont.GetPitch:TFontPitch;'");
MakeCode(0x421B70);
MakeFunction(0x421B70, 0x421B78);
MakeUnkn(0x421B78, 1);
MakeNameEx(0x421B78, "TFont.SetPitch", 0x20);
MakeComm(0x421B78, "'procedure TFont.SetPitch(const Value:TFontPitch);'");
MakeCode(0x421B78);
MakeFunction(0x421B78, 0x421B9D);
MakeUnkn(0x421BA0, 1);
MakeNameEx(0x421BA0, "TFont.GetCharset", 0x20);
MakeComm(0x421BA0, "'function TFont.GetCharset:TFontCharset;'");
MakeCode(0x421BA0);
MakeFunction(0x421BA0, 0x421BA8);
MakeUnkn(0x421BA8, 1);
MakeNameEx(0x421BA8, "TFont.SetCharset", 0x20);
MakeComm(0x421BA8, "'procedure TFont.SetCharset(const Value:TFontCharset);'");
MakeCode(0x421BA8);
MakeFunction(0x421BA8, 0x421BCD);
MakeUnkn(0x421BD0, 1);
MakeNameEx(0x421BD0, "TFont.GetOrientation", 0x20);
MakeComm(0x421BD0, "'function TFont.GetOrientation:?;'");
MakeCode(0x421BD0);
MakeComm(0x421BD0, "'TFont.FResource:PResource'");
MakeFunction(0x421BD0, 0x421BD7);
MakeUnkn(0x421BD8, 1);
MakeNameEx(0x421BD8, "TFont.SetOrientation", 0x20);
MakeComm(0x421BD8, "'procedure TFont.SetOrientation(const Value:Integer);'");
MakeCode(0x421BD8);
MakeFunction(0x421BD8, 0x421BFD);
MakeUnkn(0x421C00, 1);
MakeNameEx(0x421C00, "TPen.Create", 0x20);
MakeComm(0x421C00, "'constructor TPen.Create;'");
MakeCode(0x421C00);
MakeCode(0x421C0E);
MakeCode(0x421C3D);
MakeFunction(0x421C00, 0x421C42);
MakeUnkn(0x421C44, 1);
MakeNameEx(0x421C44, "TFont.Destroy", 0x20);
MakeComm(0x421C44, "'destructor TFont.Destroy;'");
MakeCode(0x421C44);
MakeCode(0x421C67);
MakeFunction(0x421C44, 0x421C6A);
MakeUnkn(0x421C6C, 1);
MakeNameEx(0x421C6C, "TPen.Assign", 0x20);
MakeComm(0x421C6C, "'procedure TPen.Assign(Source:TPersistent);'");
MakeCode(0x421C6C);
MakeCode(0x421CD9);
MakeCode(0x421CE6);
MakeCode(0x421CEF);
MakeCode(0x421CF4);
MakeCode(0x421CF6);
MakeCode(0x421D03);
MakeCode(0x421D0C);
MakeCode(0x421D11);
MakeCode(0x421D13);
MakeFunction(0x421C6C, 0x421D23);
MakeUnkn(0x421D24, 1);
MakeNameEx(0x421D24, "TPen.GetData", 0x20);
MakeComm(0x421D24, "'procedure TPen.GetData(var PenData:TPenData);'");
MakeCode(0x421D24);
MakeFunction(0x421D24, 0x421D39);
MakeUnkn(0x421D3C, 1);
MakeNameEx(0x421D3C, "TBrush.SetData", 0x20);
MakeComm(0x421D3C, "'procedure TBrush.SetData(const BrushData:TBrushData);'");
MakeCode(0x421D3C);
MakeCode(0x421D6B);
MakeCode(0x421D78);
MakeCode(0x421D81);
MakeCode(0x421D86);
MakeFunction(0x421D3C, 0x421D8C);
MakeUnkn(0x421D8C, 1);
MakeNameEx(0x421D8C, "TPen.GetColor", 0x20);
MakeComm(0x421D8C, "'function TPen.GetColor:TColor;'");
MakeCode(0x421D8C);
MakeFunction(0x421D8C, 0x421D93);
MakeUnkn(0x421D94, 1);
MakeNameEx(0x421D94, "TPen.SetColor", 0x20);
MakeComm(0x421D94, "'procedure TPen.SetColor(Value:TColor);'");
MakeCode(0x421D94);
MakeFunction(0x421D94, 0x421DB9);
MakeUnkn(0x421DBC, 1);
MakeNameEx(0x421DBC, "TPen.GetHandle", 0x20);
MakeComm(0x421DBC, "'function TPen.GetHandle:HPEN;'");
MakeCode(0x421DBC);
MakeCode(0x421E2A);
MakeCode(0x421E37);
MakeCode(0x421E42);
MakeCode(0x421E47);
MakeCode(0x421E49);
MakeFunction(0x421DBC, 0x421E53);
MakeUnkn(0x421E54, 1);
MakeNameEx(0x421E54, "TPen.SetMode", 0x20);
MakeComm(0x421E54, "'procedure TPen.SetMode(Value:TPenMode);'");
MakeCode(0x421E54);
MakeCode(0x421E66);
MakeFunction(0x421E54, 0x421E68);
MakeUnkn(0x421E68, 1);
MakeNameEx(0x421E68, "TPen.GetStyle", 0x20);
MakeComm(0x421E68, "'function TPen.GetStyle:TPenStyle;'");
MakeCode(0x421E68);
MakeFunction(0x421E68, 0x421E70);
MakeUnkn(0x421E70, 1);
MakeNameEx(0x421E70, "TPen.SetStyle", 0x20);
MakeComm(0x421E70, "'procedure TPen.SetStyle(Value:TPenStyle);'");
MakeCode(0x421E70);
MakeFunction(0x421E70, 0x421E95);
MakeUnkn(0x421E98, 1);
MakeNameEx(0x421E98, "TPen.GetWidth", 0x20);
MakeComm(0x421E98, "'function TPen.GetWidth:?;'");
MakeCode(0x421E98);
MakeComm(0x421E98, "'TPen.FResource:PResource'");
MakeFunction(0x421E98, 0x421E9F);
MakeUnkn(0x421EA0, 1);
MakeNameEx(0x421EA0, "TPen.SetWidth", 0x20);
MakeComm(0x421EA0, "'procedure TPen.SetWidth(Value:Integer);'");
MakeCode(0x421EA0);
MakeCode(0x421EC3);
MakeFunction(0x421EA0, 0x421EC9);
MakeUnkn(0x421ECC, 1);
MakeNameEx(0x421ECC, "TBrush.Create", 0x20);
MakeComm(0x421ECC, "'constructor TBrush.Create;'");
MakeCode(0x421ECC);
MakeCode(0x421EDA);
MakeCode(0x421F05);
MakeFunction(0x421ECC, 0x421F0A);
MakeUnkn(0x421F0C, 1);
MakeNameEx(0x421F0C, "TPen.Destroy", 0x20);
MakeComm(0x421F0C, "'destructor TPen.Destroy;'");
MakeCode(0x421F0C);
MakeCode(0x421F2F);
MakeFunction(0x421F0C, 0x421F32);
MakeUnkn(0x421F34, 1);
MakeNameEx(0x421F34, "TBrush.Assign", 0x20);
MakeComm(0x421F34, "'procedure TBrush.Assign(Source:TPersistent);'");
MakeCode(0x421F34);
MakeCode(0x421F91);
MakeCode(0x421F9E);
MakeCode(0x421FA7);
MakeCode(0x421FAC);
MakeCode(0x421FAE);
MakeCode(0x421FBB);
MakeCode(0x421FC4);
MakeCode(0x421FC9);
MakeCode(0x421FCB);
MakeFunction(0x421F34, 0x421FDB);
MakeUnkn(0x421FDC, 1);
MakeNameEx(0x421FDC, "TBrush.GetData", 0x20);
MakeComm(0x421FDC, "'procedure TBrush.GetData(var BrushData:TBrushData);'");
MakeCode(0x421FDC);
MakeFunction(0x421FDC, 0x421FF6);
MakeUnkn(0x421FF8, 1);
MakeNameEx(0x421FF8, "TPen.SetData", 0x20);
MakeComm(0x421FF8, "'procedure TPen.SetData(const PenData:TPenData);'");
MakeCode(0x421FF8);
MakeCode(0x422027);
MakeCode(0x422034);
MakeCode(0x42203D);
MakeCode(0x422042);
MakeFunction(0x421FF8, 0x422048);
MakeUnkn(0x422048, 1);
MakeNameEx(0x422048, "TBrush.SetBitmap", 0x20);
MakeComm(0x422048, "'procedure TBrush.SetBitmap(Value:TBitmap);'");
MakeCode(0x422048);
MakeFunction(0x422048, 0x422069);
MakeUnkn(0x42206C, 1);
MakeNameEx(0x42206C, "TBrush.GetColor", 0x20);
MakeComm(0x42206C, "'function TBrush.GetColor:TColor;'");
MakeCode(0x42206C);
MakeFunction(0x42206C, 0x422073);
MakeUnkn(0x422074, 1);
MakeNameEx(0x422074, "TBrush.SetColor", 0x20);
MakeComm(0x422074, "'procedure TBrush.SetColor(Value:TColor);'");
MakeCode(0x422074);
MakeCode(0x422096);
MakeFunction(0x422074, 0x4220A5);
MakeUnkn(0x4220A8, 1);
MakeNameEx(0x4220A8, "TBrush.GetHandle", 0x20);
MakeComm(0x4220A8, "'function TBrush.GetHandle:HBRUSH;'");
MakeCode(0x4220A8);
MakeCode(0x42210A);
MakeCode(0x422121);
MakeCode(0x422128);
MakeCode(0x422131);
MakeCode(0x422141);
MakeCode(0x42215E);
MakeCode(0x42216B);
MakeCode(0x422176);
MakeCode(0x42217B);
MakeCode(0x42217D);
MakeFunction(0x4220A8, 0x422187);
MakeUnkn(0x422188, 1);
MakeNameEx(0x422188, "TBrush.GetStyle", 0x20);
MakeComm(0x422188, "'function TBrush.GetStyle:TBrushStyle;'");
MakeCode(0x422188);
MakeFunction(0x422188, 0x422190);
MakeUnkn(0x422190, 1);
MakeNameEx(0x422190, "TBrush.SetStyle", 0x20);
MakeComm(0x422190, "'procedure TBrush.SetStyle(Value:TBrushStyle);'");
MakeCode(0x422190);
MakeCode(0x4221B4);
MakeFunction(0x422190, 0x4221C3);
MakeUnkn(0x4221C4, 1);
MakeNameEx(0x4221C4, "TCanvas.Create", 0x20);
MakeComm(0x4221C4, "'constructor TCanvas.Create;'");
MakeCode(0x4221C4);
MakeCode(0x4221D3);
MakeCode(0x42227E);
MakeFunction(0x4221C4, 0x422284);
MakeUnkn(0x422288, 1);
MakeNameEx(0x422288, "TCanvas.Destroy", 0x20);
MakeComm(0x422288, "'destructor TCanvas.Destroy;'");
MakeCode(0x422288);
MakeCode(0x4222E0);
MakeFunction(0x422288, 0x4222E3);
MakeUnkn(0x4222E4, 1);
MakeNameEx(0x4222E4, "TCanvas.BrushCopy", 0x20);
MakeComm(0x4222E4, "'procedure TCanvas.BrushCopy(const Dest:TRect; Bitmap:TBitmap; const Source:TRect; Color:TColor);'");
MakeCode(0x4222E4);
MakeCode(0x4223A2);
MakeCode(0x4223EE);
MakeCode(0x42245F);
MakeCode(0x42250C);
MakeCode(0x422519);
MakeCode(0x422529);
MakeCode(0x42253C);
MakeCode(0x422545);
MakeCode(0x422546);
MakeCode(0x42254B);
MakeCode(0x42254D);
MakeCode(0x42255A);
MakeCode(0x422568);
MakeCode(0x42256D);
MakeCode(0x422577);
MakeCode(0x422584);
MakeCode(0x42258D);
MakeCode(0x422592);
MakeCode(0x422594);
MakeFunction(0x4222E4, 0x42259D);
MakeUnkn(0x4225A8, 1);
MakeNameEx(0x4225A8, "TCanvas.CopyRect", 0x20);
MakeComm(0x4225A8, "'procedure TCanvas.CopyRect(const Dest:TRect; Canvas:TCanvas; const Source:TRect);'");
MakeCode(0x4225A8);
MakeFunction(0x4225A8, 0x422628);
MakeUnkn(0x422630, 1);
MakeNameEx(0x422630, "TCanvas.Draw", 0x20);
MakeComm(0x422630, "'procedure TCanvas.Draw(X:Integer; Y:Integer; Graphic:TGraphic);'");
MakeCode(0x422630);
MakeCode(0x4226CE);
MakeFunction(0x422630, 0x4226D7);
MakeUnkn(0x4226DC, 1);
MakeNameEx(0x4226DC, "TCanvas.FillRect", 0x20);
MakeComm(0x4226DC, "'procedure TCanvas.FillRect(const Rect:TRect);'");
MakeCode(0x4226DC);
MakeFunction(0x4226DC, 0x422714);
MakeUnkn(0x422718, 1);
MakeNameEx(0x422718, "TCanvas.FrameRect", 0x20);
MakeComm(0x422718, "'procedure TCanvas.FrameRect(const Rect:TRect);'");
MakeCode(0x422718);
MakeFunction(0x422718, 0x422750);
MakeUnkn(0x422754, 1);
MakeNameEx(0x422754, "TCanvas.LineTo", 0x20);
MakeComm(0x422754, "'procedure TCanvas.LineTo(X:Integer; Y:Integer);'");
MakeCode(0x422754);
MakeFunction(0x422754, 0x422788);
MakeUnkn(0x42278C, 1);
MakeNameEx(0x42278C, "TCanvas.Lock", 0x20);
MakeComm(0x42278C, "'procedure TCanvas.Lock;'");
MakeCode(0x42278C);
MakeFunction(0x42278C, 0x4227B1);
MakeUnkn(0x4227B4, 1);
MakeNameEx(0x4227B4, "TCanvas.MoveTo", 0x20);
MakeComm(0x4227B4, "'procedure TCanvas.MoveTo(X:Integer; Y:Integer);'");
MakeCode(0x4227B4);
MakeFunction(0x4227B4, 0x4227DC);
MakeUnkn(0x4227E0, 1);
MakeNameEx(0x4227E0, "TCanvas.Polygon", 0x20);
MakeComm(0x4227E0, "'procedure TCanvas.Polygon(const Points:array[$0..-$1] of Windows.TPoint; const _Dv_:$0..-$1);'");
MakeCode(0x4227E0);
MakeFunction(0x4227E0, 0x422815);
MakeUnkn(0x42281C, 1);
MakeNameEx(0x42281C, "TCanvas.Polyline", 0x20);
MakeComm(0x42281C, "'procedure TCanvas.Polyline(const Points:array[$0..-$1] of Windows.TPoint; const _Dv_:$0..-$1);'");
MakeCode(0x42281C);
MakeFunction(0x42281C, 0x422851);
MakeUnkn(0x422858, 1);
MakeNameEx(0x422858, "TCanvas.Rectangle", 0x20);
MakeComm(0x422858, "'procedure TCanvas.Rectangle(X1:Integer; Y1:Integer; X2:Integer; Y2:Integer);'");
MakeCode(0x422858);
MakeFunction(0x422858, 0x42289A);
MakeUnkn(0x4228A0, 1);
MakeNameEx(0x4228A0, "TCanvas.Refresh", 0x20);
MakeComm(0x4228A0, "'procedure TCanvas.Refresh;'");
MakeCode(0x4228A0);
MakeFunction(0x4228A0, 0x4228A6);
MakeUnkn(0x4228A8, 1);
MakeNameEx(0x4228A8, "TCanvas.RoundRect", 0x20);
MakeComm(0x4228A8, "'procedure TCanvas.RoundRect(X1:Integer; Y1:Integer; X2:Integer; Y2:Integer; X3:Integer; Y3:Integer);'");
MakeCode(0x4228A8);
MakeFunction(0x4228A8, 0x4228F2);
MakeUnkn(0x4228F8, 1);
MakeNameEx(0x4228F8, "TCanvas.StretchDraw", 0x20);
MakeComm(0x4228F8, "'procedure TCanvas.StretchDraw(const Rect:TRect; Graphic:TGraphic);'");
MakeCode(0x4228F8);
MakeCode(0x42292C);
MakeFunction(0x4228F8, 0x422930);
MakeUnkn(0x422934, 1);
MakeNameEx(0x422934, "TCanvas.GetCanvasOrientation", 0x20);
MakeComm(0x422934, "'function TCanvas.GetCanvasOrientation:TCanvasOrientation;'");
MakeCode(0x422934);
MakeCode(0x422959);
MakeFunction(0x422934, 0x422960);
MakeUnkn(0x422960, 1);
MakeNameEx(0x422960, "TCanvas.TextOut", 0x20);
MakeComm(0x422960, "'procedure TCanvas.TextOut(X:Integer; Y:Integer; const Text:AnsiString);'");
MakeCode(0x422960);
MakeCode(0x4229A1);
MakeCode(0x4229AC);
MakeFunction(0x422960, 0x4229F6);
MakeUnkn(0x4229FC, 1);
MakeNameEx(0x4229FC, "TCanvas.TextExtent", 0x20);
MakeComm(0x4229FC, "'function TCanvas.TextExtent(const Text:AnsiString):TSize;'");
MakeCode(0x4229FC);
MakeCode(0x422A28);
MakeFunction(0x4229FC, 0x422A40);
MakeUnkn(0x422A44, 1);
MakeNameEx(0x422A44, "TCanvas.TextWidth", 0x20);
MakeComm(0x422A44, "'function TCanvas.TextWidth(const Text:AnsiString):Integer;'");
MakeCode(0x422A44);
MakeFunction(0x422A44, 0x422A60);
MakeUnkn(0x422A60, 1);
MakeNameEx(0x422A60, "TCanvas.TextHeight", 0x20);
MakeComm(0x422A60, "'function TCanvas.TextHeight(const Text:AnsiString):Integer;'");
MakeCode(0x422A60);
MakeFunction(0x422A60, 0x422A7D);
MakeUnkn(0x422A80, 1);
MakeNameEx(0x422A80, "TCanvas.TryLock", 0x20);
MakeComm(0x422A80, "'function TCanvas.TryLock:Boolean;'");
MakeCode(0x422A80);
MakeCode(0x422AB4);
MakeCode(0x422AC1);
MakeCode(0x422ACC);
MakeCode(0x422AD1);
MakeFunction(0x422A80, 0x422ADB);
MakeUnkn(0x422ADC, 1);
MakeNameEx(0x422ADC, "TCanvas.Unlock", 0x20);
MakeComm(0x422ADC, "'procedure TCanvas.Unlock;'");
MakeCode(0x422ADC);
MakeFunction(0x422ADC, 0x422B01);
MakeUnkn(0x422B04, 1);
MakeNameEx(0x422B04, "TCanvas.SetFont", 0x20);
MakeComm(0x422B04, "'procedure TCanvas.SetFont(Value:TFont);'");
MakeCode(0x422B04);
MakeFunction(0x422B04, 0x422B11);
MakeUnkn(0x422B14, 1);
MakeNameEx(0x422B14, "TCanvas.SetPen", 0x20);
MakeComm(0x422B14, "'procedure TCanvas.SetPen(Value:TPen);'");
MakeCode(0x422B14);
MakeFunction(0x422B14, 0x422B1D);
MakeUnkn(0x422B20, 1);
MakeNameEx(0x422B20, "TCanvas.SetBrush", 0x20);
MakeComm(0x422B20, "'procedure TCanvas.SetBrush(Value:TBrush);'");
MakeCode(0x422B20);
MakeFunction(0x422B20, 0x422B29);
MakeUnkn(0x422B2C, 1);
MakeNameEx(0x422B2C, "TCanvas.GetPenPos", 0x20);
MakeComm(0x422B2C, "'function TCanvas.GetPenPos:TPoint;'");
MakeCode(0x422B2C);
MakeFunction(0x422B2C, 0x422B4D);
MakeUnkn(0x422B54, 1);
MakeNameEx(0x422B54, "TCanvas.SetPenPos", 0x20);
MakeComm(0x422B54, "'procedure TCanvas.SetPenPos(Value:TPoint);'");
MakeCode(0x422B54);
MakeFunction(0x422B54, 0x422B71);
MakeUnkn(0x422B74, 1);
MakeNameEx(0x422B74, "TCanvas.GetPixel", 0x20);
MakeComm(0x422B74, "'function TCanvas.GetPixel(X:Integer; Y:Integer):TColor;'");
MakeCode(0x422B74);
MakeFunction(0x422B74, 0x422B9A);
MakeUnkn(0x422BA0, 1);
MakeNameEx(0x422BA0, "TCanvas.SetPixel", 0x20);
MakeComm(0x422BA0, "'procedure TCanvas.SetPixel(X:Integer; Y:Integer; Value:TColor);'");
MakeCode(0x422BA0);
MakeFunction(0x422BA0, 0x422BE3);
MakeUnkn(0x422BE8, 1);
MakeNameEx(0x422BE8, "TCanvas.GetClipRect", 0x20);
MakeComm(0x422BE8, "'function TCanvas.GetClipRect:TRect;'");
MakeCode(0x422BE8);
MakeFunction(0x422BE8, 0x422C09);
MakeUnkn(0x422C10, 1);
MakeNameEx(0x422C10, "TCanvas.GetHandle", 0x20);
MakeComm(0x422C10, "'function TCanvas.GetHandle:HDC;'");
MakeCode(0x422C10);
MakeFunction(0x422C10, 0x422C2D);
MakeUnkn(0x422C34, 1);
MakeNameEx(0x422C34, "TCanvas.DeselectHandles", 0x20);
MakeComm(0x422C34, "'procedure TCanvas.DeselectHandles;'");
MakeCode(0x422C34);
MakeCode(0x422C8C);
MakeFunction(0x422C34, 0x422C8F);
MakeUnkn(0x422C94, 1);
MakeNameEx(0x422C94, "TCanvas.CreateHandle", 0x20);
MakeComm(0x422C94, "'procedure TCanvas.CreateHandle;'");
MakeCode(0x422C94);
MakeFunction(0x422C94, 0x422C95);
MakeUnkn(0x422C98, 1);
MakeNameEx(0x422C98, "TCanvas.SetHandle", 0x20);
MakeComm(0x422C98, "'procedure TCanvas.SetHandle(Value:HDC);'");
MakeCode(0x422C98);
MakeCode(0x422CD2);
MakeCode(0x422CE7);
MakeFunction(0x422C98, 0x422CEC);
MakeUnkn(0x422CEC, 1);
MakeNameEx(0x422CEC, "TCanvas.RequiredState", 0x20);
MakeComm(0x422CEC, "'procedure TCanvas.RequiredState(ReqState:TCanvasState);'");
MakeCode(0x422CEC);
MakeCode(0x422D31);
MakeCode(0x422D3D);
MakeCode(0x422D49);
MakeCode(0x422D55);
MakeCode(0x422D5B);
MakeFunction(0x422CEC, 0x422D5F);
MakeUnkn(0x422D64, 1);
MakeNameEx(0x422D64, "TCanvas.Changing", 0x20);
MakeComm(0x422D64, "'procedure TCanvas.Changing;'");
MakeCode(0x422D64);
MakeCode(0x422D76);
MakeFunction(0x422D64, 0x422D78);
MakeUnkn(0x422D78, 1);
MakeNameEx(0x422D78, "TCanvas.Changed", 0x20);
MakeComm(0x422D78, "'procedure TCanvas.Changed;'");
MakeCode(0x422D78);
MakeCode(0x422D8A);
MakeFunction(0x422D78, 0x422D8C);
MakeUnkn(0x422D8C, 1);
MakeNameEx(0x422D8C, "TCanvas.CreateFont", 0x20);
MakeComm(0x422D8C, "'procedure TCanvas.CreateFont;'");
MakeCode(0x422D8C);
MakeFunction(0x422D8C, 0x422DB8);
MakeUnkn(0x422DB8, 1);
MakeNameEx(0x422DB8, "TCanvas.CreatePen", 0x20);
MakeComm(0x422DB8, "'procedure TCanvas.CreatePen;'");
MakeCode(0x422DB8);
MakeFunction(0x422DB8, 0x422DE8);
MakeUnkn(0x422DE8, 1);
MakeNameEx(0x422DE8, "TCanvas.CreateBrush", 0x20);
MakeComm(0x422DE8, "'procedure TCanvas.CreateBrush;'");
MakeCode(0x422DE8);
MakeCode(0x422E3B);
MakeFunction(0x422DE8, 0x422E61);
MakeUnkn(0x422E64, 1);
MakeNameEx(0x422E64, "TCanvas.FontChanged", 0x20);
MakeComm(0x422E64, "'procedure TCanvas.FontChanged(AFont:TObject);'");
MakeCode(0x422E64);
MakeCode(0x422E80);
MakeFunction(0x422E64, 0x422E82);
MakeUnkn(0x422E84, 1);
MakeNameEx(0x422E84, "TCanvas.PenChanged", 0x20);
MakeComm(0x422E84, "'procedure TCanvas.PenChanged(APen:TObject);'");
MakeCode(0x422E84);
MakeCode(0x422EA0);
MakeFunction(0x422E84, 0x422EA2);
MakeUnkn(0x422EA4, 1);
MakeNameEx(0x422EA4, "TCanvas.BrushChanged", 0x20);
MakeComm(0x422EA4, "'procedure TCanvas.BrushChanged(ABrush:TObject);'");
MakeCode(0x422EA4);
MakeCode(0x422EC0);
MakeFunction(0x422EA4, 0x422EC2);
MakeUnkn(0x422EC4, 1);
MakeNameEx(0x422EC4, "InvalidOperation", 0x20);
MakeComm(0x422EC4, "'procedure InvalidOperation(Str:PResStringRec);'");
MakeCode(0x422EC4);
MakeFunction(0x422EC4, 0x422EDC);
MakeUnkn(0x422EDC, 1);
MakeNameEx(0x422EDC, "InvalidGraphic", 0x20);
MakeComm(0x422EDC, "'procedure InvalidGraphic(Str:PResStringRec);'");
MakeCode(0x422EDC);
MakeFunction(0x422EDC, 0x422EF4);
MakeUnkn(0x422EF4, 1);
MakeNameEx(0x422EF4, "InvalidBitmap", 0x20);
MakeComm(0x422EF4, "'procedure InvalidBitmap;'");
MakeCode(0x422EF4);
MakeFunction(0x422EF4, 0x422EFF);
MakeUnkn(0x422F00, 1);
MakeNameEx(0x422F00, "InvalidIcon", 0x20);
MakeComm(0x422F00, "'procedure InvalidIcon;'");
MakeCode(0x422F00);
MakeFunction(0x422F00, 0x422F0B);
MakeUnkn(0x422F0C, 1);
MakeNameEx(0x422F0C, "InvalidMetafile", 0x20);
MakeComm(0x422F0C, "'procedure InvalidMetafile;'");
MakeCode(0x422F0C);
MakeFunction(0x422F0C, 0x422F17);
MakeUnkn(0x422F18, 1);
MakeNameEx(0x422F18, "OutOfResources", 0x20);
MakeComm(0x422F18, "'procedure OutOfResources;'");
MakeCode(0x422F18);
MakeCode(0x422F4C);
MakeCode(0x422F59);
MakeCode(0x422F62);
MakeCode(0x422F67);
MakeFunction(0x422F18, 0x422F6C);
MakeUnkn(0x422F6C, 1);
MakeNameEx(0x422F6C, "GDIError", 0x20);
MakeComm(0x422F6C, "'procedure GDIError;'");
MakeCode(0x422F6C);
MakeCode(0x422FEA);
MakeCode(0x422FEF);
MakeCode(0x422FFC);
MakeCode(0x423008);
MakeCode(0x42300D);
MakeFunction(0x422F6C, 0x423014);
MakeUnkn(0x423014, 1);
MakeNameEx(0x423014, "GDICheck", 0x20);
MakeComm(0x423014, "'function GDICheck(Value:Integer):Integer;'");
MakeCode(0x423014);
MakeCode(0x423020);
MakeFunction(0x423014, 0x423024);
MakeUnkn(0x423024, 1);
MakeNameEx(0x423024, "DupBits", 0x20);
MakeComm(0x423024, "'function DupBits(Src:HBITMAP; Size:TPoint; Mono:Boolean):HBITMAP;'");
MakeCode(0x423024);
MakeCode(0x423086);
MakeCode(0x42309B);
MakeCode(0x4230C8);
MakeCode(0x4230D5);
MakeCode(0x4230E1);
MakeCode(0x4230E6);
MakeCode(0x4230E8);
MakeCode(0x423144);
MakeCode(0x423152);
MakeCode(0x42315F);
MakeCode(0x423172);
MakeCode(0x423177);
MakeFunction(0x423024, 0x423183);
MakeUnkn(0x423184, 1);
MakeNameEx(0x423184, "GetDInColors", 0x20);
MakeComm(0x423184, "'function GetDInColors(BitCount:Word):Integer;'");
MakeCode(0x423184);
MakeCode(0x423197);
MakeCode(0x4231A1);
MakeFunction(0x423184, 0x4231A4);
MakeUnkn(0x4231A4, 1);
MakeNameEx(0x4231A4, "BytesPerScanline", 0x20);
MakeComm(0x4231A4, "'function BytesPerScanline(PixelsPerScanline:Longint; BitsPerPixel:Longint; Alignment:Longint):Longint;'");
MakeCode(0x4231A4);
MakeFunction(0x4231A4, 0x4231C1);
MakeUnkn(0x4231C4, 1);
MakeNameEx(0x4231C4, "TransparentStretchBlt", 0x20);
MakeComm(0x4231C4, "'function TransparentStretchBlt(DstDC:HDC; DstX:Integer; DstY:Integer; DstW:Integer; DstH:Integer; SrcDC:HDC; SrcX:Integer; SrcY:Integer; SrcW:Integer; SrcH:Integer; MaskDC:HDC; MaskX:Integer; MaskY:Integer):Boolean;'");
MakeCode(0x4231C4);
MakeCode(0x423265);
MakeCode(0x423272);
MakeCode(0x42328C);
MakeCode(0x423291);
MakeCode(0x423293);
MakeCode(0x423315);
MakeCode(0x423329);
MakeCode(0x423404);
MakeCode(0x42340D);
MakeCode(0x42341A);
MakeCode(0x42342F);
MakeCode(0x423439);
MakeCode(0x42343E);
MakeFunction(0x4231C4, 0x42344D);
MakeUnkn(0x423450, 1);
MakeNameEx(0x423450, "RGBTripleToQuad", 0x20);
MakeComm(0x423450, "'procedure RGBTripleToQuad(var ColorTable:void );'");
MakeCode(0x423450);
MakeCode(0x42345C);
MakeFunction(0x423450, 0x423489);
MakeUnkn(0x42348C, 1);
MakeNameEx(0x42348C, "RGBQuadToTriple", 0x20);
MakeComm(0x42348C, "'procedure RGBQuadToTriple(var ColorTable:void ; var ColorCount:Integer);'");
MakeCode(0x42348C);
MakeCode(0x4234AA);
MakeCode(0x4234CE);
MakeCode(0x423501);
MakeFunction(0x42348C, 0x423507);
MakeUnkn(0x423508, 1);
MakeNameEx(0x423508, "ByteSwapColors", 0x20);
MakeComm(0x423508, "'procedure ByteSwapColors(var Colors:void ; Count:Integer);'");
MakeCode(0x423508);
MakeCode(0x42352E);
MakeCode(0x42353E);
MakeCode(0x42353F);
MakeCode(0x423557);
MakeFunction(0x423508, 0x42355B);
MakeUnkn(0x42355C, 1);
MakeNameEx(0x42355C, "CreateSystemPalette", 0x20);
MakeComm(0x42355C, "'function CreateSystemPalette(const Entries:array[$0..-$1] of TColor; const _Dv_:$0..-$1):HPALETTE;'");
MakeCode(0x42355C);
MakeCode(0x423622);
MakeCode(0x423640);
MakeCode(0x42364D);
MakeCode(0x423659);
MakeCode(0x42365E);
MakeFunction(0x42355C, 0x423671);
MakeUnkn(0x423674, 1);
MakeNameEx(0x423674, "SystemPaletteOverride", 0x20);
MakeComm(0x423674, "'function SystemPaletteOverride(var Pal:TMaxLogPalette):Boolean;'");
MakeCode(0x423674);
MakeCode(0x4236E1);
MakeCode(0x4236EE);
MakeCode(0x4236FA);
MakeCode(0x4236FF);
MakeCode(0x423701);
MakeFunction(0x423674, 0x42370A);
MakeUnkn(0x42370C, 1);
MakeNameEx(0x42370C, "PaletteFromDIBColorTable", 0x20);
MakeComm(0x42370C, "'function PaletteFromDIBColorTable(DIBHandle:THandle; ColorTable:Pointer; ColorCount:Integer):HPALETTE;'");
MakeCode(0x42370C);
MakeCode(0x42375B);
MakeCode(0x42376F);
MakeCode(0x42378A);
MakeCode(0x423798);
MakeCode(0x4237A2);
MakeFunction(0x42370C, 0x4237AE);
MakeUnkn(0x4237B0, 1);
MakeNameEx(0x4237B0, "PaletteToDIBColorTable", 0x20);
MakeComm(0x4237B0, "'function PaletteToDIBColorTable(Pal:HPALETTE; var ColorTable:array[$0..-$1] of Windows.TRGBQuad; const _Dv_:$0..-$1):Integer;'");
MakeCode(0x4237B0);
MakeCode(0x4237E1);
MakeCode(0x4237F9);
MakeFunction(0x4237B0, 0x423801);
MakeUnkn(0x423804, 1);
MakeNameEx(0x423804, "TwoBitsFromDIB", 0x20);
MakeComm(0x423804, "'procedure TwoBitsFromDIB(var BI:TBitmapInfoHeader; var XorBits:HBITMAP; var AndBits:HBITMAP; const IconSize:TPoint);'");
MakeCode(0x423804);
MakeCode(0x423861);
MakeCode(0x4238C0);
MakeCode(0x4238CD);
MakeCode(0x4238D7);
MakeCode(0x4238DC);
MakeCode(0x42397A);
MakeCode(0x423987);
MakeCode(0x423991);
MakeCode(0x423996);
MakeCode(0x423998);
MakeCode(0x4239A5);
MakeCode(0x4239B1);
MakeCode(0x4239B6);
MakeFunction(0x423804, 0x4239C1);
MakeUnkn(0x4239C4, 1);
MakeNameEx(0x4239C4, "AdjustColor", 0x20);
MakeComm(0x4239C4, "'function AdjustColor(I:Integer):Integer;'");
MakeCode(0x4239C4);
MakeFunction(0x4239C4, 0x4239CE);
MakeUnkn(0x4239D0, 1);
MakeNameEx(0x4239D0, "BetterSize", 0x20);
MakeComm(0x4239D0, "'function BetterSize(const Old:TIconRec; const New:TIconRec):Boolean;'");
MakeCode(0x4239D0);
MakeCode(0x423A33);
MakeCode(0x423A51);
MakeCode(0x423A55);
MakeCode(0x423A57);
MakeFunction(0x4239D0, 0x423A5E);
MakeUnkn(0x423A60, 1);
MakeNameEx(0x423A60, "ReadIcon", 0x20);
MakeComm(0x423A60, "'procedure ReadIcon(Stream:TStream; var Icon:HICON; ImageCount:Integer; StartOffset:Integer; const RequestedSize:TPoint; var IconSize:TPoint);'");
MakeCode(0x423A60);
MakeCode(0x423AC7);
MakeCode(0x423AD4);
MakeCode(0x423AE9);
MakeCode(0x423B24);
MakeCode(0x423B30);
MakeCode(0x423B3D);
MakeCode(0x423B49);
MakeCode(0x423B4E);
MakeCode(0x423B71);
MakeCode(0x423BB4);
MakeCode(0x423BB8);
MakeCode(0x423CFD);
MakeCode(0x423D0A);
MakeCode(0x423D16);
MakeCode(0x423D1B);
MakeCode(0x423D1D);
MakeCode(0x423D2A);
MakeCode(0x423D39);
MakeCode(0x423D3E);
MakeCode(0x423D40);
MakeCode(0x423D4D);
MakeCode(0x423D59);
MakeCode(0x423D5E);
MakeFunction(0x423A60, 0x423D69);
MakeUnkn(0x423D6C, 1);
MakeNameEx(0x423D6C, "ComputeAldusChecksum", 0x20);
MakeComm(0x423D6C, "'function ComputeAldusChecksum(var WMF:TMetafileHeader):Word;'");
MakeCode(0x423D6C);
MakeCode(0x423D75);
MakeCode(0x423D7B);
MakeFunction(0x423D6C, 0x423D82);
MakeUnkn(0x423D84, 1);
MakeNameEx(0x423D84, "InitializeBitmapInfoHeader", 0x20);
MakeComm(0x423D84, "'procedure InitializeBitmapInfoHeader(Bitmap:HBITMAP; var BI:TBitmapInfoHeader; Colors:Integer);'");
MakeCode(0x423D84);
MakeCode(0x423DA8);
MakeCode(0x423DC5);
MakeCode(0x423DE7);
MakeCode(0x423DFD);
MakeCode(0x423E05);
MakeCode(0x423E10);
MakeCode(0x423E1B);
MakeCode(0x423E29);
MakeCode(0x423E3A);
MakeCode(0x423E61);
MakeFunction(0x423D84, 0x423E68);
MakeUnkn(0x423E68, 1);
MakeNameEx(0x423E68, "InternalGetDIBSizes", 0x20);
MakeComm(0x423E68, "'procedure InternalGetDIBSizes(Bitmap:HBITMAP; var InfoHeaderSize:DWORD; var ImageSize:DWORD; Colors:Integer);'");
MakeCode(0x423E68);
MakeCode(0x423E9A);
MakeCode(0x423EB5);
MakeCode(0x423EC0);
MakeFunction(0x423E68, 0x423ECD);
MakeUnkn(0x423ED0, 1);
MakeNameEx(0x423ED0, "GetDIBSizes", 0x20);
MakeComm(0x423ED0, "'procedure GetDIBSizes(Bitmap:HBITMAP; var InfoHeaderSize:DWORD; var ImageSize:DWORD);'");
MakeCode(0x423ED0);
MakeFunction(0x423ED0, 0x423ED8);
MakeUnkn(0x423ED8, 1);
MakeNameEx(0x423ED8, "InternalGetDIB", 0x20);
MakeComm(0x423ED8, "'function InternalGetDIB(Bitmap:HBITMAP; Palette:HPALETTE; var BitmapInfo:void ; var Bits:void ; Colors:Integer):Boolean;'");
MakeCode(0x423ED8);
MakeCode(0x423F2C);
MakeCode(0x423F49);
MakeCode(0x423F56);
MakeCode(0x423F6B);
MakeCode(0x423F75);
MakeCode(0x423F7A);
MakeFunction(0x423ED8, 0x423F89);
MakeUnkn(0x423F8C, 1);
MakeNameEx(0x423F8C, "GetDIB", 0x20);
MakeComm(0x423F8C, "'function GetDIB(Bitmap:HBITMAP; Palette:HPALETTE; var BitmapInfo:void ; var Bits:void ):Boolean;'");
MakeCode(0x423F8C);
MakeFunction(0x423F8C, 0x423FA0);
MakeUnkn(0x423FA0, 1);
MakeNameEx(0x423FA0, "WinError", 0x20);
MakeComm(0x423FA0, "'procedure WinError;'");
MakeCode(0x423FA0);
MakeFunction(0x423FA0, 0x423FA1);
MakeUnkn(0x423FA4, 1);
MakeNameEx(0x423FA4, "CheckBool", 0x20);
MakeComm(0x423FA4, "'procedure CheckBool(Result:BOOL);'");
MakeCode(0x423FA4);
MakeFunction(0x423FA4, 0x423FAE);
MakeUnkn(0x423FB0, 1);
MakeNameEx(0x423FB0, "WriteIcon", 0x20);
MakeComm(0x423FB0, "'procedure WriteIcon(Stream:TStream; Icon:HICON; WriteLength:Boolean);'");
MakeCode(0x423FB0);
MakeCode(0x4240B3);
MakeCode(0x42413F);
MakeCode(0x42414C);
MakeCode(0x424179);
MakeCode(0x42417E);
MakeCode(0x424180);
MakeCode(0x42418D);
MakeCode(0x4241A0);
MakeCode(0x4241A5);
MakeFunction(0x423FB0, 0x4241AE);
MakeUnkn(0x4241B0, 1);
MakeNameEx(0x4241B0, "TGraphic.Create", 0x20);
MakeComm(0x4241B0, "'constructor TGraphic.Create;'");
MakeCode(0x4241B0);
MakeCode(0x4241BE);
MakeCode(0x4241E0);
MakeFunction(0x4241B0, 0x4241E5);
MakeUnkn(0x4241E8, 1);
MakeNameEx(0x4241E8, "TGraphic.Changed", 0x20);
MakeComm(0x4241E8, "'procedure TGraphic.Changed(Sender:TObject);'");
MakeCode(0x4241E8);
MakeCode(0x4241FE);
MakeFunction(0x4241E8, 0x424200);
MakeUnkn(0x424200, 1);
MakeNameEx(0x424200, "DoWrite_0", 0x20);
MakeComm(0x424200, "'function DoWrite:Boolean;'");
MakeCode(0x424200);
MakeCode(0x424242);
MakeCode(0x424247);
MakeCode(0x424254);
MakeFunction(0x424200, 0x424257);
MakeUnkn(0x424258, 1);
MakeNameEx(0x424258, "TGraphic.DefineProperties", 0x20);
MakeComm(0x424258, "'procedure TGraphic.DefineProperties(Filer:TFiler);'");
MakeCode(0x424258);
MakeFunction(0x424258, 0x424294);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x42429C, -1);
MakeDword(0x424298);
MakeDword(0x424294);
MakeUnkn(0x4242A4, 1);
MakeNameEx(0x4242A4, "TGraphic.Equals", 0x20);
MakeComm(0x4242A4, "'function TGraphic.Equals(Graphic:TGraphic):Boolean;'");
MakeCode(0x4242A4);
MakeCode(0x4242C9);
MakeCode(0x4242CD);
MakeCode(0x4242CF);
MakeCode(0x4242E8);
MakeCode(0x4242FE);
MakeCode(0x424302);
MakeCode(0x424304);
MakeCode(0x42430C);
MakeCode(0x42437D);
MakeCode(0x42439F);
MakeCode(0x4243A3);
MakeCode(0x4243A5);
MakeCode(0x4243A8);
MakeCode(0x4243B5);
MakeCode(0x4243BE);
MakeCode(0x4243C3);
MakeCode(0x4243C5);
MakeCode(0x4243D2);
MakeCode(0x4243DB);
MakeCode(0x4243E0);
MakeCode(0x4243E2);
MakeFunction(0x4242A4, 0x4243ED);
MakeCode(0x4243F0);
MakeFunction(0x4243F0, 0x4243F3);
MakeCode(0x4243F4);
MakeComm(0x4243F4, "'TGraphic.FTransparent:Boolean'");
MakeFunction(0x4243F4, 0x4243F9);
MakeUnkn(0x4243FC, 1);
MakeNameEx(0x4243FC, "TGraphic.LoadFromFile", 0x20);
MakeComm(0x4243FC, "'procedure TGraphic.LoadFromFile(const Filename:AnsiString);'");
MakeCode(0x4243FC);
MakeCode(0x42442E);
MakeCode(0x42443B);
MakeCode(0x424444);
MakeCode(0x424449);
MakeFunction(0x4243FC, 0x42444F);
MakeUnkn(0x424450, 1);
MakeNameEx(0x424450, "TGraphic.Progress", 0x20);
MakeComm(0x424450, "'procedure TGraphic.Progress(Sender:TObject; Stage:TProgressStage; PercentDone:Byte; RedrawNow:Boolean; const R:TRect; const Msg:AnsiString);'");
MakeCode(0x424450);
MakeCode(0x424475);
MakeFunction(0x424450, 0x42447A);
MakeUnkn(0x42447C, 1);
MakeNameEx(0x42447C, "TGraphic.ReadData", 0x20);
MakeComm(0x42447C, "'procedure TGraphic.ReadData(Stream:TStream);'");
MakeCode(0x42447C);
MakeFunction(0x42447C, 0x424488);
MakeUnkn(0x424488, 1);
MakeNameEx(0x424488, "TGraphic.SaveToFile", 0x20);
MakeComm(0x424488, "'procedure TGraphic.SaveToFile(const Filename:AnsiString);'");
MakeCode(0x424488);
MakeCode(0x4244BD);
MakeCode(0x4244CA);
MakeCode(0x4244D3);
MakeCode(0x4244D8);
MakeFunction(0x424488, 0x4244DE);
MakeCode(0x4244E0);
MakeFunction(0x4244E0, 0x4244E1);
MakeUnkn(0x4244E4, 1);
MakeNameEx(0x4244E4, "TGraphic.SetSize", 0x20);
MakeComm(0x4244E4, "'procedure TGraphic.SetSize(AWidth:Integer; AHeight:Integer);'");
MakeCode(0x4244E4);
MakeFunction(0x4244E4, 0x4244FD);
MakeUnkn(0x424500, 1);
MakeNameEx(0x424500, "TGraphic.SetTransparent", 0x20);
MakeComm(0x424500, "'procedure TGraphic.SetTransparent(Value:Boolean);'");
MakeCode(0x424500);
MakeFunction(0x424500, 0x424510);
MakeUnkn(0x424510, 1);
MakeNameEx(0x424510, "TGraphic.WriteData", 0x20);
MakeComm(0x424510, "'procedure TGraphic.WriteData(Stream:TStream);'");
MakeCode(0x424510);
MakeFunction(0x424510, 0x42451C);
MakeUnkn(0x42451C, 1);
MakeNameEx(0x42451C, "RTTI_42451C_Record_TFileFormat", 0);
MakeDword(0x42451C);
MakeUnkn(0x424520, 1);
MakeNameEx(0x424520, "", 0);
MakeByte(0x424520);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x424521, 0x42452D);
MakeDword(0x42452D);
MakeDword(0x424531);
MakeDword(0x424535);
MakeDword(0x424539);
MakeDword(0x42453D);
MakeDword(0x424541);
MakeUnkn(0x424548, 1);
MakeNameEx(0x424548, "VMT_424548_TFileFormatsList", 0);
MakeDword(0x424548);
MakeDword(0x42454C);
MakeDword(0x424550);
MakeDword(0x424554);
MakeDword(0x424558);
MakeDword(0x42455C);
MakeDword(0x424560);
MakeDword(0x424564);
MakeDword(0x424568);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4245A4, 0x4245B5);
MakeDword(0x42456C);
MakeDword(0x424570);
MakeDword(0x424574);
MakeDword(0x424578);
MakeDword(0x42457C);
MakeDword(0x424580);
MakeDword(0x424584);
MakeDword(0x424588);
MakeDword(0x42458C);
MakeDword(0x424590);
MakeComm(0x424594, "'+0'");
MakeDword(0x424594);
MakeComm(0x424598, "'+4'");
MakeDword(0x424598);
MakeComm(0x42459C, "'+8'");
MakeDword(0x42459C);
MakeComm(0x4245A0, "'+C'");
MakeDword(0x4245A0);
MakeUnkn(0x4245B8, 1);
MakeNameEx(0x4245B8, "TFileFormatsList.Create", 0x20);
MakeComm(0x4245B8, "'constructor TFileFormatsList.Create;'");
MakeCode(0x4245B8);
MakeCode(0x4245CF);
MakeCode(0x42467A);
MakeCode(0x424687);
MakeCode(0x424695);
MakeCode(0x42469A);
MakeCode(0x4246B1);
MakeFunction(0x4245B8, 0x4246B9);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4246C4, -1);
MakeDword(0x4246C0);
MakeDword(0x4246BC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4246D0, -1);
MakeDword(0x4246CC);
MakeDword(0x4246C8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4246DC, -1);
MakeDword(0x4246D8);
MakeDword(0x4246D4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4246E8, -1);
MakeDword(0x4246E4);
MakeDword(0x4246E0);
MakeUnkn(0x4246EC, 1);
MakeNameEx(0x4246EC, "TFileFormatsList.Destroy", 0x20);
MakeComm(0x4246EC, "'destructor TFileFormatsList.Destroy;'");
MakeCode(0x4246EC);
MakeCode(0x424704);
MakeCode(0x42471C);
MakeCode(0x424733);
MakeFunction(0x4246EC, 0x424738);
MakeUnkn(0x424738, 1);
MakeNameEx(0x424738, "TFileFormatsList.Add", 0x20);
MakeComm(0x424738, "'procedure TFileFormatsList.Add(const Ext:AnsiString; const Desc:AnsiString; DescID:Integer; AClass:TGraphicClass);'");
MakeCode(0x424738);
MakeCode(0x4247A5);
MakeCode(0x4247B2);
MakeCode(0x4247BB);
MakeCode(0x4247C0);
MakeFunction(0x424738, 0x4247CB);
MakeUnkn(0x4247CC, 1);
MakeNameEx(0x4247CC, "TFileFormatsList.FindClassName", 0x20);
MakeComm(0x4247CC, "'function TFileFormatsList.FindClassName(const Classname:AnsiString):TGraphicClass;'");
MakeCode(0x4247CC);
MakeCode(0x4247F9);
MakeCode(0x424832);
MakeCode(0x424834);
MakeCode(0x424841);
MakeCode(0x42484A);
MakeCode(0x42484F);
MakeFunction(0x4247CC, 0x42485A);
MakeUnkn(0x42485C, 1);
MakeNameEx(0x42485C, "VMT_42485C_TClipboardFormats", 0);
MakeDword(0x42485C);
MakeDword(0x424860);
MakeDword(0x424864);
MakeDword(0x424868);
MakeDword(0x42486C);
MakeDword(0x424870);
MakeDword(0x424874);
MakeDword(0x424878);
MakeDword(0x42487C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4248A8, 0x4248BA);
MakeDword(0x424880);
MakeDword(0x424884);
MakeDword(0x424888);
MakeDword(0x42488C);
MakeDword(0x424890);
MakeDword(0x424894);
MakeDword(0x424898);
MakeDword(0x42489C);
MakeDword(0x4248A0);
MakeDword(0x4248A4);
MakeUnkn(0x4248BC, 1);
MakeNameEx(0x4248BC, "TClipboardFormats.Create", 0x20);
MakeComm(0x4248BC, "'constructor TClipboardFormats.Create;'");
MakeCode(0x4248BC);
MakeCode(0x4248CA);
MakeCode(0x424934);
MakeFunction(0x4248BC, 0x424939);
MakeUnkn(0x42493C, 1);
MakeNameEx(0x42493C, "TClipboardFormats.Destroy", 0x20);
MakeComm(0x42493C, "'destructor TClipboardFormats.Destroy;'");
MakeCode(0x42493C);
MakeCode(0x424962);
MakeFunction(0x42493C, 0x424965);
MakeUnkn(0x424968, 1);
MakeNameEx(0x424968, "TClipboardFormats.Add", 0x20);
MakeComm(0x424968, "'procedure TClipboardFormats.Add(Fmt:Word; AClass:TGraphicClass);'");
MakeCode(0x424968);
MakeCode(0x4249A2);
MakeCode(0x4249AC);
MakeCode(0x4249C9);
MakeFunction(0x424968, 0x4249D0);
MakeUnkn(0x4249D0, 1);
MakeNameEx(0x4249D0, "TClipboardFormats.FindFormat", 0x20);
MakeComm(0x4249D0, "'function TClipboardFormats.FindFormat(Fmt:Word):TGraphicClass;'");
MakeCode(0x4249D0);
MakeCode(0x4249E3);
MakeCode(0x4249FE);
MakeCode(0x424A04);
MakeCode(0x424A06);
MakeFunction(0x4249D0, 0x424A0A);
MakeUnkn(0x424A0C, 1);
MakeNameEx(0x424A0C, "GetFileFormats", 0x20);
MakeComm(0x424A0C, "'function GetFileFormats:TFileFormatsList;'");
MakeCode(0x424A0C);
MakeCode(0x424A26);
MakeFunction(0x424A0C, 0x424A2C);
MakeUnkn(0x424A2C, 1);
MakeNameEx(0x424A2C, "GetClipboardFormats", 0x20);
MakeComm(0x424A2C, "'function GetClipboardFormats:TClipboardFormats;'");
MakeCode(0x424A2C);
MakeCode(0x424A46);
MakeFunction(0x424A2C, 0x424A4C);
MakeUnkn(0x424A4C, 1);
MakeNameEx(0x424A4C, "TPicture.Create", 0x20);
MakeComm(0x424A4C, "'constructor TPicture.Create;'");
MakeCode(0x424A4C);
MakeCode(0x424A5A);
MakeCode(0x424A86);
MakeFunction(0x424A4C, 0x424A8B);
MakeUnkn(0x424A8C, 1);
MakeNameEx(0x424A8C, "TPicture.Destroy", 0x20);
MakeComm(0x424A8C, "'destructor TPicture.Destroy;'");
MakeCode(0x424A8C);
MakeComm(0x424A97, "'TPicture.FGraphic:TGraphic'");
MakeCode(0x424AB6);
MakeFunction(0x424A8C, 0x424AB9);
MakeUnkn(0x424ABC, 1);
MakeNameEx(0x424ABC, "TPicture.AssignTo", 0x20);
MakeComm(0x424ABC, "'procedure TPicture.AssignTo(Dest:TPersistent);'");
MakeCode(0x424ABC);
MakeCode(0x424AE4);
MakeFunction(0x424ABC, 0x424AF0);
MakeUnkn(0x424AF0, 1);
MakeNameEx(0x424AF0, "TPicture.ForceType", 0x20);
MakeComm(0x424AF0, "'procedure TPicture.ForceType(GraphicType:TGraphicClass);'");
MakeCode(0x424AF0);
MakeCode(0x424B4E);
MakeFunction(0x424AF0, 0x424B52);
MakeUnkn(0x424B54, 1);
MakeNameEx(0x424B54, "TPicture.GetBitmap", 0x20);
MakeComm(0x424B54, "'function TPicture.GetBitmap:TBitmap;'");
MakeCode(0x424B54);
MakeFunction(0x424B54, 0x424B69);
MakeUnkn(0x424B6C, 1);
MakeNameEx(0x424B6C, "TPicture.GetIcon", 0x20);
MakeComm(0x424B6C, "'function TPicture.GetIcon:TIcon;'");
MakeCode(0x424B6C);
MakeFunction(0x424B6C, 0x424B81);
MakeCode(0x424B84);
MakeFunction(0x424B84, 0x424B8A);
MakeUnkn(0x424B8C, 1);
MakeNameEx(0x424B8C, "TPicture.SetGraphic", 0x20);
MakeComm(0x424B8C, "'procedure TPicture.SetGraphic(Value:TGraphic);'");
MakeCode(0x424B8C);
MakeCode(0x424BE9);
MakeCode(0x424C12);
MakeCode(0x424C1C);
MakeCode(0x424C33);
MakeFunction(0x424B8C, 0x424C39);
MakeUnkn(0x424C3C, 1);
MakeNameEx(0x424C3C, "TPicture.LoadFromClipboardFormat", 0x20);
MakeComm(0x424C3C, "'procedure TPicture.LoadFromClipboardFormat(AFormat:Word; AData:THandle; APalette:HPALETTE);'");
MakeCode(0x424C3C);
MakeCode(0x424C68);
MakeCode(0x424CA9);
MakeCode(0x424CB3);
MakeCode(0x424CCA);
MakeFunction(0x424C3C, 0x424CFF);
MakeUnkn(0x424D00, 1);
MakeNameEx(0x424D00, "TPicture.SaveToClipboardFormat", 0x20);
MakeComm(0x424D00, "'procedure TPicture.SaveToClipboardFormat(var AFormat:Word; var AData:THandle; var APalette:HPALETTE);'");
MakeCode(0x424D00);
MakeCode(0x424D21);
MakeFunction(0x424D00, 0x424D29);
MakeUnkn(0x424D2C, 1);
MakeNameEx(0x424D2C, "TPicture.SupportsClipboardFormat", 0x20);
MakeComm(0x424D2C, "'function TPicture.SupportsClipboardFormat(AFormat:Word):Boolean;'");
MakeCode(0x424D2C);
MakeFunction(0x424D2C, 0x424D42);
MakeUnkn(0x424D44, 1);
MakeNameEx(0x424D44, "TPicture.LoadFromStream", 0x20);
MakeComm(0x424D44, "'procedure TPicture.LoadFromStream(Stream:TStream);'");
MakeCode(0x424D44);
MakeFunction(0x424D44, 0x424D5B);
MakeUnkn(0x424D5C, 1);
MakeNameEx(0x424D5C, "TPicture.SaveToStream", 0x20);
MakeComm(0x424D5C, "'procedure TPicture.SaveToStream(Stream:TStream);'");
MakeCode(0x424D5C);
MakeFunction(0x424D5C, 0x424D73);
MakeUnkn(0x424D74, 1);
MakeNameEx(0x424D74, "TPicture.Assign", 0x20);
MakeComm(0x424D74, "'procedure TPicture.Assign(Source:TPersistent);'");
MakeCode(0x424D74);
MakeCode(0x424D8A);
MakeCode(0x424DA7);
MakeCode(0x424DC3);
MakeCode(0x424DCC);
MakeFunction(0x424D74, 0x424DCF);
MakeUnkn(0x424DD0, 1);
MakeNameEx(0x424DD0, "TPicture.Changed", 0x20);
MakeComm(0x424DD0, "'procedure TPicture.Changed(Sender:TObject);'");
MakeCode(0x424DD0);
MakeCode(0x424DE2);
MakeCode(0x424DF0);
MakeFunction(0x424DD0, 0x424DF2);
MakeUnkn(0x424DF4, 1);
MakeNameEx(0x424DF4, "TPicture.Progress", 0x20);
MakeComm(0x424DF4, "'procedure TPicture.Progress(Sender:TObject; Stage:TProgressStage; PercentDone:Byte; RedrawNow:Boolean; const R:TRect; const Msg:AnsiString);'");
MakeCode(0x424DF4);
MakeCode(0x424E19);
MakeFunction(0x424DF4, 0x424E1E);
MakeUnkn(0x424E20, 1);
MakeNameEx(0x424E20, "TPicture.ReadData", 0x20);
MakeComm(0x424E20, "'procedure TPicture.ReadData(Stream:TStream);'");
MakeCode(0x424E20);
MakeCode(0x424E9E);
MakeCode(0x424EA8);
MakeCode(0x424EBF);
MakeCode(0x424F03);
MakeCode(0x424F10);
MakeCode(0x424F1D);
MakeCode(0x424F26);
MakeCode(0x424F2B);
MakeFunction(0x424E20, 0x424F34);
MakeUnkn(0x424F34, 1);
MakeNameEx(0x424F34, "TPicture.WriteData", 0x20);
MakeComm(0x424F34, "'procedure TPicture.WriteData(Stream:TStream);'");
MakeCode(0x424F34);
MakeCode(0x424F62);
MakeCode(0x424F66);
MakeCode(0x424F82);
MakeFunction(0x424F34, 0x424F8C);
MakeUnkn(0x424F8C, 1);
MakeNameEx(0x424F8C, "DoWrite_1", 0x20);
MakeComm(0x424F8C, "'function DoWrite:Boolean;'");
MakeCode(0x424F8C);
MakeCode(0x424FEB);
MakeCode(0x424FEF);
MakeCode(0x424FF1);
MakeCode(0x424FF5);
MakeCode(0x425002);
MakeFunction(0x424F8C, 0x425008);
MakeUnkn(0x425008, 1);
MakeNameEx(0x425008, "TPicture.DefineProperties", 0x20);
MakeComm(0x425008, "'procedure TPicture.DefineProperties(Filer:TFiler);'");
MakeCode(0x425008);
MakeFunction(0x425008, 0x425042);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x42504C, -1);
MakeDword(0x425048);
MakeDword(0x425044);
MakeUnkn(0x425054, 1);
MakeNameEx(0x425054, "TPicture.GetWidth", 0x20);
MakeComm(0x425054, "'function TPicture.GetWidth:Integer;'");
MakeCode(0x425054);
MakeCode(0x425067);
MakeFunction(0x425054, 0x42506B);
MakeUnkn(0x42506C, 1);
MakeNameEx(0x42506C, "TPicture.GetHeight", 0x20);
MakeComm(0x42506C, "'function TPicture.GetHeight:Integer;'");
MakeCode(0x42506C);
MakeCode(0x42507F);
MakeFunction(0x42506C, 0x425083);
MakeUnkn(0x425084, 1);
MakeNameEx(0x425084, "TMetafileImage.Destroy", 0x20);
MakeComm(0x425084, "'destructor TMetafileImage.Destroy;'");
MakeCode(0x425084);
MakeCode(0x42509C);
MakeCode(0x4250BB);
MakeFunction(0x425084, 0x4250BE);
MakeUnkn(0x4250C0, 1);
MakeNameEx(0x4250C0, "TMetafileImage.FreeHandle", 0x20);
MakeComm(0x4250C0, "'procedure TMetafileImage.FreeHandle;'");
MakeCode(0x4250C0);
MakeFunction(0x4250C0, 0x4250C1);
MakeUnkn(0x4250C4, 1);
MakeNameEx(0x4250C4, "TMetafile.Create", 0x20);
MakeComm(0x4250C4, "'constructor TMetafile.Create;'");
MakeCode(0x4250C4);
MakeCode(0x4250D2);
MakeCode(0x425105);
MakeFunction(0x4250C4, 0x42510A);
MakeUnkn(0x42510C, 1);
MakeNameEx(0x42510C, "TMetafile.Destroy", 0x20);
MakeComm(0x42510C, "'destructor TMetafile.Destroy;'");
MakeCode(0x42510C);
MakeComm(0x425117, "'TMetafile.FImage:TMetafileImage'");
MakeCode(0x425136);
MakeFunction(0x42510C, 0x425139);
MakeUnkn(0x42513C, 1);
MakeNameEx(0x42513C, "TMetafile.Assign", 0x20);
MakeComm(0x42513C, "'procedure TMetafile.Assign(Source:TPersistent);'");
MakeCode(0x42513C);
MakeCode(0x425158);
MakeCode(0x425169);
MakeCode(0x42517E);
MakeCode(0x425191);
MakeCode(0x4251AF);
MakeCode(0x4251B3);
MakeCode(0x4251B5);
MakeCode(0x4251C3);
MakeCode(0x4251CC);
MakeFunction(0x42513C, 0x4251D0);
MakeUnkn(0x4251D0, 1);
MakeNameEx(0x4251D0, "TMetafile.Draw", 0x20);
MakeComm(0x4251D0, "'procedure TMetafile.Draw(ACanvas:TCanvas; const Rect:TRect);'");
MakeCode(0x4251D0);
MakeCode(0x425212);
MakeCode(0x425258);
MakeFunction(0x4251D0, 0x425260);
MakeUnkn(0x425260, 1);
MakeNameEx(0x425260, "TMetafile.GetEmpty", 0x20);
MakeComm(0x425260, "'function TMetafile.GetEmpty:Boolean;'");
MakeCode(0x425260);
MakeFunction(0x425260, 0x425268);
MakeUnkn(0x425268, 1);
MakeNameEx(0x425268, "TMetafile.GetHeight", 0x20);
MakeComm(0x425268, "'function TMetafile.GetHeight:Integer;'");
MakeCode(0x425268);
MakeCode(0x42527B);
MakeCode(0x425291);
MakeCode(0x4252B0);
MakeCode(0x4252C4);
MakeFunction(0x425268, 0x4252C9);
MakeUnkn(0x4252CC, 1);
MakeNameEx(0x4252CC, "TMetafile.GetPalette", 0x20);
MakeComm(0x4252CC, "'function TMetafile.GetPalette:HPALETTE;'");
MakeCode(0x4252CC);
MakeCode(0x42530D);
MakeCode(0x425343);
MakeCode(0x425349);
MakeFunction(0x4252CC, 0x425355);
MakeUnkn(0x425358, 1);
MakeNameEx(0x425358, "TMetafile.GetWidth", 0x20);
MakeComm(0x425358, "'function TMetafile.GetWidth:Integer;'");
MakeCode(0x425358);
MakeCode(0x42536B);
MakeCode(0x425381);
MakeCode(0x4253A0);
MakeCode(0x4253B4);
MakeFunction(0x425358, 0x4253B9);
MakeUnkn(0x4253BC, 1);
MakeNameEx(0x4253BC, "TMetafile.LoadFromStream", 0x20);
MakeComm(0x4253BC, "'procedure TMetafile.LoadFromStream(Stream:TStream);'");
MakeCode(0x4253BC);
MakeCode(0x4253DA);
MakeCode(0x4253F4);
MakeFunction(0x4253BC, 0x42540F);
MakeUnkn(0x425410, 1);
MakeNameEx(0x425410, "TMetafile.NewImage", 0x20);
MakeComm(0x425410, "'procedure TMetafile.NewImage;'");
MakeCode(0x425410);
MakeFunction(0x425410, 0x425437);
MakeUnkn(0x425438, 1);
MakeNameEx(0x425438, "TMetafile.ReadData", 0x20);
MakeComm(0x425438, "'procedure TMetafile.ReadData(Stream:TStream);'");
MakeCode(0x425438);
MakeCode(0x42545F);
MakeCode(0x425477);
MakeCode(0x425486);
MakeFunction(0x425438, 0x4254A3);
MakeUnkn(0x4254A4, 1);
MakeNameEx(0x4254A4, "TMetafile.ReadEMFStream", 0x20);
MakeComm(0x4254A4, "'procedure TMetafile.ReadEMFStream(Stream:TStream);'");
MakeCode(0x4254A4);
MakeCode(0x4254D5);
MakeCode(0x42552F);
MakeCode(0x42554B);
MakeCode(0x425558);
MakeCode(0x425564);
MakeCode(0x425569);
MakeFunction(0x4254A4, 0x425572);
MakeUnkn(0x425574, 1);
MakeNameEx(0x425574, "TMetafile.ReadWMFStream", 0x20);
MakeComm(0x425574, "'procedure TMetafile.ReadWMFStream(Stream:TStream; Length:Longint);'");
MakeCode(0x425574);
MakeCode(0x4255B6);
MakeCode(0x4255BB);
MakeCode(0x425601);
MakeCode(0x425672);
MakeCode(0x4256C6);
MakeCode(0x4256CA);
MakeCode(0x4256D7);
MakeCode(0x4256E3);
MakeCode(0x4256E8);
MakeFunction(0x425574, 0x4256F1);
MakeUnkn(0x4256F4, 1);
MakeNameEx(0x4256F4, "TMetafile.SaveToFile", 0x20);
MakeComm(0x4256F4, "'procedure TMetafile.SaveToFile(const Filename:AnsiString);'");
MakeCode(0x4256F4);
MakeCode(0x425759);
MakeCode(0x425763);
MakeCode(0x425770);
MakeCode(0x42577B);
MakeCode(0x425780);
MakeCode(0x425782);
MakeCode(0x42578F);
MakeCode(0x42579D);
MakeCode(0x4257A2);
MakeFunction(0x4256F4, 0x4257A9);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4257B4, -1);
MakeDword(0x4257B0);
MakeDword(0x4257AC);
MakeUnkn(0x4257BC, 1);
MakeNameEx(0x4257BC, "TMetafile.SaveToStream", 0x20);
MakeComm(0x4257BC, "'procedure TMetafile.SaveToStream(Stream:TStream);'");
MakeCode(0x4257BC);
MakeCode(0x4257CF);
MakeFunction(0x4257BC, 0x4257D5);
MakeUnkn(0x4257D8, 1);
MakeNameEx(0x4257D8, "TMetafile.SetHeight", 0x20);
MakeComm(0x4257D8, "'procedure TMetafile.SetHeight(Value:Integer);'");
MakeCode(0x4257D8);
MakeCode(0x4257EE);
MakeCode(0x425804);
MakeCode(0x425829);
MakeCode(0x425843);
MakeFunction(0x4257D8, 0x425849);
MakeUnkn(0x42584C, 1);
MakeNameEx(0x42584C, "TMetafile.SetMMHeight", 0x20);
MakeComm(0x42584C, "'procedure TMetafile.SetMMHeight(Value:Integer);'");
MakeCode(0x42584C);
MakeCode(0x42585F);
MakeCode(0x425882);
MakeFunction(0x42584C, 0x425885);
MakeUnkn(0x425888, 1);
MakeNameEx(0x425888, "TMetafile.SetMMWidth", 0x20);
MakeComm(0x425888, "'procedure TMetafile.SetMMWidth(Value:Integer);'");
MakeCode(0x425888);
MakeCode(0x42589B);
MakeCode(0x4258BE);
MakeFunction(0x425888, 0x4258C1);
MakeUnkn(0x4258C4, 1);
MakeNameEx(0x4258C4, "TMetafile.SetTransparent", 0x20);
MakeComm(0x4258C4, "'procedure TMetafile.SetTransparent(Value:Boolean);'");
MakeCode(0x4258C4);
MakeFunction(0x4258C4, 0x4258C5);
MakeUnkn(0x4258C8, 1);
MakeNameEx(0x4258C8, "TMetafile.SetWidth", 0x20);
MakeComm(0x4258C8, "'procedure TMetafile.SetWidth(Value:Integer);'");
MakeCode(0x4258C8);
MakeCode(0x4258DE);
MakeCode(0x4258F4);
MakeCode(0x425919);
MakeCode(0x425933);
MakeFunction(0x4258C8, 0x425939);
MakeUnkn(0x42593C, 1);
MakeNameEx(0x42593C, "TMetafile.TestEMF", 0x20);
MakeComm(0x42593C, "'function TMetafile.TestEMF(Stream:TStream):Boolean;'");
MakeCode(0x42593C);
MakeCode(0x425978);
MakeCode(0x42598D);
MakeCode(0x425991);
MakeCode(0x425993);
MakeFunction(0x42593C, 0x42599A);
MakeUnkn(0x42599C, 1);
MakeNameEx(0x42599C, "TMetafile.UniqueImage", 0x20);
MakeComm(0x42599C, "'procedure TMetafile.UniqueImage;'");
MakeCode(0x42599C);
MakeCode(0x4259B1);
MakeCode(0x4259DA);
MakeCode(0x425A1B);
MakeFunction(0x42599C, 0x425A1F);
MakeUnkn(0x425A20, 1);
MakeNameEx(0x425A20, "TMetafile.WriteData", 0x20);
MakeComm(0x425A20, "'procedure TMetafile.WriteData(Stream:TStream);'");
MakeCode(0x425A20);
MakeCode(0x425A5F);
MakeCode(0x425A68);
MakeCode(0x425A9B);
MakeFunction(0x425A20, 0x425AA0);
MakeUnkn(0x425AA0, 1);
MakeNameEx(0x425AA0, "TMetafile.WriteEMFStream", 0x20);
MakeComm(0x425AA0, "'procedure TMetafile.WriteEMFStream(Stream:TStream);'");
MakeCode(0x425AA0);
MakeCode(0x425B03);
MakeCode(0x425B10);
MakeCode(0x425B1C);
MakeCode(0x425B21);
MakeCode(0x425B23);
MakeFunction(0x425AA0, 0x425B29);
MakeUnkn(0x425B2C, 1);
MakeNameEx(0x425B2C, "TMetafile.WriteWMFStream", 0x20);
MakeComm(0x425B2C, "'procedure TMetafile.WriteWMFStream(Stream:TStream);'");
MakeCode(0x425B2C);
MakeCode(0x425B6C);
MakeCode(0x425B70);
MakeCode(0x425C12);
MakeCode(0x425C2E);
MakeCode(0x425C3B);
MakeCode(0x425C47);
MakeCode(0x425C4C);
MakeCode(0x425C4E);
MakeCode(0x425C5B);
MakeCode(0x425C67);
MakeCode(0x425C6C);
MakeCode(0x425C6E);
MakeFunction(0x425B2C, 0x425C74);
MakeUnkn(0x425C74, 1);
MakeNameEx(0x425C74, "TMetafile.LoadFromClipboardFormat", 0x20);
MakeComm(0x425C74, "'procedure TMetafile.LoadFromClipboardFormat(AFormat:Word; AData:THandle; APalette:HPALETTE);'");
MakeCode(0x425C74);
MakeCode(0x425C96);
MakeFunction(0x425C74, 0x425CF7);
MakeUnkn(0x425CF8, 1);
MakeNameEx(0x425CF8, "TMetafile.SaveToClipboardFormat", 0x20);
MakeComm(0x425CF8, "'procedure TMetafile.SaveToClipboardFormat(var AFormat:Word; var AData:THandle; var APalette:HPALETTE);'");
MakeCode(0x425CF8);
MakeCode(0x425D22);
MakeFunction(0x425CF8, 0x425D29);
MakeUnkn(0x425D2C, 1);
MakeNameEx(0x425D2C, "TMetafile.SetSize", 0x20);
MakeComm(0x425D2C, "'procedure TMetafile.SetSize(AWidth:Integer; AHeight:Integer);'");
MakeCode(0x425D2C);
MakeCode(0x425D45);
MakeCode(0x425D5E);
MakeCode(0x425DA4);
MakeCode(0x425DD8);
MakeFunction(0x425D2C, 0x425DDF);
MakeUnkn(0x425DE0, 1);
MakeNameEx(0x425DE0, "VMT_425DE0_TBitmapCanvas", 0);
MakeDword(0x425DE0);
MakeDword(0x425DE4);
MakeDword(0x425DE8);
MakeDword(0x425DEC);
MakeDword(0x425DF0);
MakeDword(0x425DF4);
MakeDword(0x425DF8);
MakeDword(0x425DFC);
MakeDword(0x425E00);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x425E44, 0x425E52);
MakeDword(0x425E04);
MakeDword(0x425E08);
MakeDword(0x425E0C);
MakeDword(0x425E10);
MakeDword(0x425E14);
MakeDword(0x425E18);
MakeDword(0x425E1C);
MakeDword(0x425E20);
MakeDword(0x425E24);
MakeDword(0x425E28);
MakeComm(0x425E2C, "'+0'");
MakeDword(0x425E2C);
MakeComm(0x425E30, "'+4'");
MakeDword(0x425E30);
MakeComm(0x425E34, "'+8'");
MakeDword(0x425E34);
MakeComm(0x425E38, "'+C'");
MakeDword(0x425E38);
MakeComm(0x425E3C, "'+10'");
MakeDword(0x425E3C);
MakeComm(0x425E40, "'+14'");
MakeDword(0x425E40);
MakeUnkn(0x425E54, 1);
MakeNameEx(0x425E54, "RTTI_425E54_Class_TBitmapCanvas", 0);
MakeDword(0x425E54);
MakeUnkn(0x425E58, 1);
MakeNameEx(0x425E58, "", 0);
MakeByte(0x425E58);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x425E59, 0x425E67);
MakeDword(0x425E67);
MakeDword(0x425E6B);
MakeWord(0x425E6F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x425E71, 0x425E7A);
MakeWord(0x425E7A);
MakeUnkn(0x425E7C, 1);
MakeNameEx(0x425E7C, "FreeMemoryContexts", 0x20);
MakeComm(0x425E7C, "'procedure FreeMemoryContexts;'");
MakeCode(0x425E7C);
MakeCode(0x425EAC);
MakeCode(0x425EDC);
MakeCode(0x425EE9);
MakeCode(0x425EF2);
MakeCode(0x425EF7);
MakeCode(0x425EF9);
MakeCode(0x425F02);
MakeCode(0x425F0F);
MakeCode(0x425F1A);
MakeCode(0x425F1F);
MakeFunction(0x425E7C, 0x425F25);
MakeUnkn(0x425F28, 1);
MakeNameEx(0x425F28, "DeselectBitmap", 0x20);
MakeComm(0x425F28, "'procedure DeselectBitmap(AHandle:HBITMAP);'");
MakeCode(0x425F28);
MakeCode(0x425F5A);
MakeCode(0x425F7A);
MakeCode(0x425F80);
MakeCode(0x425F8D);
MakeCode(0x425F98);
MakeCode(0x425F9D);
MakeCode(0x425F9F);
MakeFunction(0x425F28, 0x425FA4);
MakeUnkn(0x425FA4, 1);
MakeNameEx(0x425FA4, "TBitmapCanvas.Create", 0x20);
MakeComm(0x425FA4, "'constructor TBitmapCanvas.Create(ABitmap:TBitmap);'");
MakeCode(0x425FA4);
MakeCode(0x425FB3);
MakeCode(0x425FDA);
MakeFunction(0x425FA4, 0x425FE0);
MakeUnkn(0x425FE0, 1);
MakeNameEx(0x425FE0, "TBitmapCanvas.Destroy", 0x20);
MakeComm(0x425FE0, "'destructor TBitmapCanvas.Destroy;'");
MakeCode(0x425FE0);
MakeCode(0x426009);
MakeFunction(0x425FE0, 0x42600C);
MakeUnkn(0x42600C, 1);
MakeNameEx(0x42600C, "TBitmapCanvas.FreeContext", 0x20);
MakeComm(0x42600C, "'procedure TBitmapCanvas.FreeContext;'");
MakeCode(0x42600C);
MakeCode(0x42604E);
MakeCode(0x426067);
MakeCode(0x42608A);
MakeCode(0x426097);
MakeCode(0x4260A0);
MakeCode(0x4260A5);
MakeCode(0x4260A7);
MakeFunction(0x42600C, 0x4260AB);
MakeUnkn(0x4260AC, 1);
MakeNameEx(0x4260AC, "TBitmapCanvas.CreateHandle", 0x20);
MakeComm(0x4260AC, "'procedure TBitmapCanvas.CreateHandle;'");
MakeCode(0x4260AC);
MakeCode(0x426127);
MakeCode(0x42612F);
MakeCode(0x426156);
MakeCode(0x42615E);
MakeCode(0x426175);
MakeCode(0x426182);
MakeCode(0x42618B);
MakeCode(0x426190);
MakeCode(0x426192);
MakeFunction(0x4260AC, 0x426197);
MakeUnkn(0x426198, 1);
MakeNameEx(0x426198, "TSharedImage.Reference", 0x20);
MakeComm(0x426198, "'procedure TSharedImage.Reference;'");
MakeCode(0x426198);
MakeFunction(0x426198, 0x42619C);
MakeUnkn(0x42619C, 1);
MakeNameEx(0x42619C, "TSharedImage.Release", 0x20);
MakeComm(0x42619C, "'procedure TSharedImage.Release;'");
MakeCode(0x42619C);
MakeCode(0x4261B9);
MakeFunction(0x42619C, 0x4261BB);
MakeUnkn(0x4261BC, 1);
MakeNameEx(0x4261BC, "TBitmapImage.Destroy", 0x20);
MakeComm(0x4261BC, "'destructor TBitmapImage.Destroy;'");
MakeCode(0x4261BC);
MakeCode(0x4261E1);
MakeCode(0x4261F4);
MakeCode(0x426213);
MakeFunction(0x4261BC, 0x426216);
MakeUnkn(0x426218, 1);
MakeNameEx(0x426218, "TBitmapImage.FreeHandle", 0x20);
MakeComm(0x426218, "'procedure TBitmapImage.FreeHandle;'");
MakeCode(0x426218);
MakeCode(0x426235);
MakeCode(0x42624F);
MakeFunction(0x426218, 0x426263);
MakeUnkn(0x426264, 1);
MakeNameEx(0x426264, "UpdateDIBColorTable", 0x20);
MakeComm(0x426264, "'procedure UpdateDIBColorTable(DIBHandle:HBITMAP; Pal:HPALETTE; const DIB:TDIBSection);'");
MakeCode(0x426264);
MakeCode(0x4262E4);
MakeCode(0x4262F1);
MakeCode(0x426313);
MakeCode(0x426318);
MakeCode(0x42631A);
MakeFunction(0x426264, 0x426320);
MakeUnkn(0x426320, 1);
MakeNameEx(0x426320, "FixupBitFields", 0x20);
MakeComm(0x426320, "'procedure FixupBitFields(var DIB:TDIBSection);'");
MakeCode(0x426320);
MakeCode(0x42634D);
MakeFunction(0x426320, 0x426369);
MakeUnkn(0x42636C, 1);
MakeNameEx(0x42636C, "CopyBitmap", 0x20);
MakeComm(0x42636C, "'function CopyBitmap(Handle:HBITMAP; OldPalette:HPALETTE; NewPalette:HPALETTE; var DIB:TDIBSection; Canvas:TCanvas):HBITMAP;'");
MakeCode(0x42636C);
MakeCode(0x4263A9);
MakeCode(0x4263CC);
MakeCode(0x4263FB);
MakeCode(0x42646C);
MakeCode(0x426490);
MakeCode(0x4264EB);
MakeCode(0x426539);
MakeCode(0x426555);
MakeCode(0x426573);
MakeCode(0x4265B8);
MakeCode(0x4265DB);
MakeCode(0x4265EA);
MakeCode(0x426600);
MakeCode(0x426627);
MakeCode(0x426651);
MakeCode(0x4266AE);
MakeCode(0x4266BB);
MakeCode(0x4266C4);
MakeCode(0x4266C9);
MakeCode(0x4266CB);
MakeCode(0x42672C);
MakeCode(0x4267F9);
MakeCode(0x426819);
MakeCode(0x426876);
MakeCode(0x4268AE);
MakeCode(0x4268E8);
MakeCode(0x4268F7);
MakeCode(0x426904);
MakeCode(0x42690E);
MakeCode(0x426913);
MakeCode(0x426915);
MakeCode(0x426922);
MakeCode(0x426937);
MakeCode(0x426938);
MakeCode(0x42693D);
MakeCode(0x42693F);
MakeCode(0x42694C);
MakeCode(0x42695A);
MakeCode(0x42695F);
MakeCode(0x426961);
MakeCode(0x42696B);
MakeCode(0x426983);
MakeCode(0x426990);
MakeCode(0x4269B9);
MakeCode(0x4269BA);
MakeCode(0x4269BF);
MakeCode(0x4269C1);
MakeFunction(0x42636C, 0x4269CD);
MakeUnkn(0x4269D0, 1);
MakeNameEx(0x4269D0, "CopyPalette", 0x20);
MakeComm(0x4269D0, "'function CopyPalette(Palette:HPALETTE):HPALETTE;'");
MakeCode(0x4269D0);
MakeCode(0x426A26);
MakeFunction(0x4269D0, 0x426A31);
MakeUnkn(0x426A34, 1);
MakeNameEx(0x426A34, "CopyBitmapAsMask", 0x20);
MakeComm(0x426A34, "'function CopyBitmapAsMask(Handle:HBITMAP; Palette:HPALETTE; TransparentColor:TColorRef):HBITMAP;'");
MakeCode(0x426A34);
MakeCode(0x426AF7);
MakeCode(0x426B3A);
MakeCode(0x426B3E);
MakeCode(0x426B79);
MakeCode(0x426BC4);
MakeCode(0x426BD0);
MakeCode(0x426BDD);
MakeCode(0x426BE7);
MakeCode(0x426BEC);
MakeCode(0x426BEE);
MakeCode(0x426C01);
MakeCode(0x426C0E);
MakeCode(0x426C1D);
MakeCode(0x426C2E);
MakeCode(0x426C2F);
MakeCode(0x426C34);
MakeCode(0x426C36);
MakeFunction(0x426A34, 0x426C40);
MakeUnkn(0x426C40, 1);
MakeNameEx(0x426C40, "TBitmap.Create", 0x20);
MakeComm(0x426C40, "'constructor TBitmap.Create;'");
MakeCode(0x426C40);
MakeCode(0x426C4F);
MakeCode(0x426C8D);
MakeCode(0x426CA2);
MakeFunction(0x426C40, 0x426CA8);
MakeUnkn(0x426CA8, 1);
MakeNameEx(0x426CA8, "TBitmap.Destroy", 0x20);
MakeComm(0x426CA8, "'destructor TBitmap.Destroy;'");
MakeCode(0x426CA8);
MakeComm(0x426CBA, "'TBitmap.FImage:TBitmapImage'");
MakeComm(0x426CC2, "'TBitmap.FCanvas:TCanvas'");
MakeCode(0x426CE1);
MakeFunction(0x426CA8, 0x426CE4);
MakeUnkn(0x426CE4, 1);
MakeNameEx(0x426CE4, "TBitmap.Assign", 0x20);
MakeComm(0x426CE4, "'procedure TBitmap.Assign(Source:TPersistent);'");
MakeCode(0x426CE4);
MakeCode(0x426D0A);
MakeCode(0x426D6B);
MakeCode(0x426D8E);
MakeCode(0x426D9B);
MakeCode(0x426DA6);
MakeCode(0x426DAB);
MakeCode(0x426DCD);
MakeCode(0x426DD7);
MakeFunction(0x426CE4, 0x426DDD);
MakeUnkn(0x426DE0, 1);
MakeNameEx(0x426DE0, "TBitmap.CopyImage", 0x20);
MakeComm(0x426DE0, "'procedure TBitmap.CopyImage(AHandle:HBITMAP; APalette:HPALETTE; DIB:TDIBSection);'");
MakeCode(0x426DE0);
MakeCode(0x426E2A);
MakeCode(0x426E34);
MakeCode(0x426E66);
MakeCode(0x426E70);
MakeCode(0x426E8C);
MakeCode(0x426E96);
MakeFunction(0x426DE0, 0x426E9F);
MakeUnkn(0x426EA0, 1);
MakeNameEx(0x426EA0, "TBitmap.Changing", 0x20);
MakeComm(0x426EA0, "'procedure TBitmap.Changing(Sender:TObject);'");
MakeCode(0x426EA0);
MakeFunction(0x426EA0, 0x426EC1);
MakeUnkn(0x426EC4, 1);
MakeNameEx(0x426EC4, "TBitmap.Changed", 0x20);
MakeComm(0x426EC4, "'procedure TBitmap.Changed(Sender:TObject);'");
MakeCode(0x426EC4);
MakeFunction(0x426EC4, 0x426ECE);
MakeUnkn(0x426ED0, 1);
MakeNameEx(0x426ED0, "TBitmap.Dormant", 0x20);
MakeComm(0x426ED0, "'procedure TBitmap.Dormant;'");
MakeCode(0x426ED0);
MakeFunction(0x426ED0, 0x426F42);
MakeUnkn(0x426F44, 1);
MakeNameEx(0x426F44, "TBitmap.Draw", 0x20);
MakeComm(0x426F44, "'procedure TBitmap.Draw(ACanvas:TCanvas; const Rect:TRect);'");
MakeCode(0x426F44);
MakeCode(0x426F9F);
MakeCode(0x426FD5);
MakeCode(0x426FD9);
MakeCode(0x426FDB);
MakeCode(0x427017);
MakeCode(0x427032);
MakeCode(0x427052);
MakeCode(0x4270E7);
MakeCode(0x4270F4);
MakeCode(0x427107);
MakeCode(0x427116);
MakeCode(0x427117);
MakeCode(0x42711C);
MakeCode(0x42711E);
MakeCode(0x42715C);
MakeCode(0x427169);
MakeCode(0x427181);
MakeCode(0x427182);
MakeCode(0x427187);
MakeFunction(0x426F44, 0x427190);
MakeUnkn(0x427194, 1);
MakeNameEx(0x427194, "TBitmap.FreeImage", 0x20);
MakeComm(0x427194, "'procedure TBitmap.FreeImage;'");
MakeCode(0x427194);
MakeCode(0x4271B2);
MakeCode(0x4271B5);
MakeCode(0x4271C8);
MakeCode(0x4271EA);
MakeCode(0x4271F4);
MakeFunction(0x427194, 0x4271F7);
MakeUnkn(0x4271F8, 1);
MakeNameEx(0x4271F8, "TBitmap.GetEmpty", 0x20);
MakeComm(0x4271F8, "'function TBitmap.GetEmpty:Boolean;'");
MakeCode(0x4271F8);
MakeCode(0x42720D);
MakeCode(0x427210);
MakeFunction(0x4271F8, 0x427213);
MakeUnkn(0x427214, 1);
MakeNameEx(0x427214, "TBitmap.GetCanvas", 0x20);
MakeComm(0x427214, "'function TBitmap.GetCanvas:TCanvas;'");
MakeCode(0x427214);
MakeCode(0x427253);
MakeFunction(0x427214, 0x427259);
MakeUnkn(0x42725C, 1);
MakeNameEx(0x42725C, "TBitmap.GetHandle", 0x20);
MakeComm(0x42725C, "'function TBitmap.GetHandle:HBITMAP;'");
MakeCode(0x42725C);
MakeFunction(0x42725C, 0x42727E);
MakeUnkn(0x427280, 1);
MakeNameEx(0x427280, "TBitmap.GetHandleType", 0x20);
MakeComm(0x427280, "'function TBitmap.GetHandleType:TBitmapHandleType;'");
MakeCode(0x427280);
MakeCode(0x42728F);
MakeCode(0x42729F);
MakeCode(0x4272A3);
MakeCode(0x4272A6);
MakeFunction(0x427280, 0x4272A9);
MakeUnkn(0x4272AC, 1);
MakeNameEx(0x4272AC, "TBitmap.GetHeight", 0x20);
MakeComm(0x4272AC, "'function TBitmap.GetHeight:Integer;'");
MakeCode(0x4272AC);
MakeFunction(0x4272AC, 0x4272BA);
MakeUnkn(0x4272BC, 1);
MakeNameEx(0x4272BC, "TBitmap.GetMaskHandle", 0x20);
MakeComm(0x4272BC, "'function TBitmap.GetMaskHandle:HBITMAP;'");
MakeCode(0x4272BC);
MakeFunction(0x4272BC, 0x4272CE);
MakeUnkn(0x4272D0, 1);
MakeNameEx(0x4272D0, "TBitmap.GetMonochrome", 0x20);
MakeComm(0x4272D0, "'function TBitmap.GetMonochrome:Boolean;'");
MakeCode(0x4272D0);
MakeCode(0x4272E4);
MakeCode(0x4272E7);
MakeFunction(0x4272D0, 0x4272EA);
MakeUnkn(0x4272EC, 1);
MakeNameEx(0x4272EC, "TBitmap.GetPalette", 0x20);
MakeComm(0x4272EC, "'function TBitmap.GetPalette:HPALETTE;'");
MakeCode(0x4272EC);
MakeFunction(0x4272EC, 0x4272FE);
MakeUnkn(0x427300, 1);
MakeNameEx(0x427300, "TBitmap.GetTransparentColor", 0x20);
MakeComm(0x427300, "'function TBitmap.GetTransparentColor:TColor;'");
MakeCode(0x427300);
MakeCode(0x42731F);
MakeCode(0x427339);
MakeCode(0x42733E);
MakeFunction(0x427300, 0x427345);
MakeUnkn(0x427348, 1);
MakeNameEx(0x427348, "TBitmap.GetWidth", 0x20);
MakeComm(0x427348, "'function TBitmap.GetWidth:?;'");
MakeCode(0x427348);
MakeComm(0x427348, "'TBitmap.FImage:TBitmapImage'");
MakeFunction(0x427348, 0x42734F);
MakeUnkn(0x427350, 1);
MakeNameEx(0x427350, "TBitmap.DIBNeeded", 0x20);
MakeComm(0x427350, "'procedure TBitmap.DIBNeeded;'");
MakeCode(0x427350);
MakeCode(0x4273A8);
MakeCode(0x4273C0);
MakeFunction(0x427350, 0x4273C3);
MakeUnkn(0x4273C4, 1);
MakeNameEx(0x4273C4, "TBitmap.FreeContext", 0x20);
MakeComm(0x4273C4, "'procedure TBitmap.FreeContext;'");
MakeCode(0x4273C4);
MakeFunction(0x4273C4, 0x4273D3);
MakeUnkn(0x4273D4, 1);
MakeNameEx(0x4273D4, "TBitmap.HandleNeeded", 0x20);
MakeComm(0x4273D4, "'procedure TBitmap.HandleNeeded;'");
MakeCode(0x4273D4);
MakeCode(0x42743A);
MakeCode(0x427447);
MakeCode(0x427457);
MakeCode(0x42745C);
MakeCode(0x42745E);
MakeCode(0x427470);
MakeFunction(0x4273D4, 0x427474);
MakeUnkn(0x427474, 1);
MakeNameEx(0x427474, "TBitmap.Mask", 0x20);
MakeComm(0x427474, "'procedure TBitmap.Mask(TransparentColor:TColor);'");
MakeCode(0x427474);
MakeCode(0x4274F2);
MakeCode(0x4274FA);
MakeCode(0x427515);
MakeCode(0x42751F);
MakeCode(0x42753B);
MakeCode(0x427545);
MakeFunction(0x427474, 0x427555);
MakeUnkn(0x427558, 1);
MakeNameEx(0x427558, "TBitmap.MaskHandleNeeded", 0x20);
MakeComm(0x427558, "'procedure TBitmap.MaskHandleNeeded;'");
MakeCode(0x427558);
MakeCode(0x427568);
MakeCode(0x427585);
MakeCode(0x4275B5);
MakeFunction(0x427558, 0x4275B8);
MakeUnkn(0x4275B8, 1);
MakeNameEx(0x4275B8, "TBitmap.PaletteNeeded", 0x20);
MakeComm(0x4275B8, "'procedure TBitmap.PaletteNeeded;'");
MakeCode(0x4275B8);
MakeCode(0x4275EC);
MakeCode(0x427647);
MakeCode(0x427649);
MakeCode(0x427659);
MakeCode(0x42766B);
MakeFunction(0x4275B8, 0x427670);
MakeUnkn(0x427670, 1);
MakeNameEx(0x427670, "TBitmap.LoadFromClipboardFormat", 0x20);
MakeComm(0x427670, "'procedure TBitmap.LoadFromClipboardFormat(AFormat:Word; AData:THandle; APalette:HPALETTE);'");
MakeCode(0x427670);
MakeCode(0x427686);
MakeCode(0x427690);
MakeCode(0x4276BD);
MakeFunction(0x427670, 0x4276F4);
MakeUnkn(0x4276F4, 1);
MakeNameEx(0x4276F4, "TBitmap.LoadFromStream", 0x20);
MakeComm(0x4276F4, "'procedure TBitmap.LoadFromStream(Stream:TStream);'");
MakeCode(0x4276F4);
MakeFunction(0x4276F4, 0x427717);
MakeUnkn(0x427718, 1);
MakeNameEx(0x427718, "TBitmap.LoadFromResourceName", 0x20);
MakeComm(0x427718, "'procedure TBitmap.LoadFromResourceName(Instance:THandle; const ResName:AnsiString);'");
MakeCode(0x427718);
MakeCode(0x427756);
MakeCode(0x427763);
MakeCode(0x42776C);
MakeCode(0x427771);
MakeFunction(0x427718, 0x427777);
MakeUnkn(0x427778, 1);
MakeNameEx(0x427778, "TBitmap.NewImage", 0x20);
MakeComm(0x427778, "'procedure TBitmap.NewImage(NewHandle:HBITMAP; NewPalette:HPALETTE; const NewDIB:TDIBSection; OS2Format:Boolean; RLEStream:TStream);'");
MakeCode(0x427778);
MakeCode(0x4277E2);
MakeCode(0x4277F6);
MakeCode(0x427800);
MakeCode(0x427817);
MakeCode(0x427848);
MakeCode(0x427855);
MakeCode(0x427860);
MakeCode(0x427865);
MakeFunction(0x427778, 0x427877);
MakeUnkn(0x427878, 1);
MakeNameEx(0x427878, "TBitmap.ReadData", 0x20);
MakeComm(0x427878, "'procedure TBitmap.ReadData(Stream:TStream);'");
MakeCode(0x427878);
MakeFunction(0x427878, 0x42789F);
MakeUnkn(0x4278A0, 1);
MakeNameEx(0x4278A0, "TBitmap.ReadDIB", 0x20);
MakeComm(0x4278A0, "'procedure TBitmap.ReadDIB(Stream:TStream; ImageSize:LongWord; bmf:PBitmapFileHeader);'");
MakeCode(0x4278A0);
MakeCode(0x4278E8);
MakeCode(0x42796F);
MakeCode(0x4279E1);
MakeCode(0x427A3C);
MakeCode(0x427A59);
MakeCode(0x427A6F);
MakeCode(0x427A8C);
MakeCode(0x427A9E);
MakeCode(0x427AD4);
MakeCode(0x427AF5);
MakeCode(0x427AFE);
MakeCode(0x427B0C);
MakeCode(0x427B38);
MakeCode(0x427B45);
MakeCode(0x427BD3);
MakeCode(0x427C10);
MakeCode(0x427C15);
MakeCode(0x427C22);
MakeCode(0x427C37);
MakeCode(0x427C4B);
MakeCode(0x427C50);
MakeCode(0x427C52);
MakeCode(0x427C5F);
MakeCode(0x427C6E);
MakeCode(0x427C77);
MakeCode(0x427C7C);
MakeCode(0x427C7E);
MakeCode(0x427CA4);
MakeCode(0x427CB4);
MakeCode(0x427CB9);
MakeCode(0x427CD4);
MakeCode(0x427CDE);
MakeCode(0x427CF6);
MakeCode(0x427D03);
MakeCode(0x427D0F);
MakeCode(0x427D14);
MakeCode(0x427D42);
MakeCode(0x427D8A);
MakeCode(0x427D94);
MakeCode(0x427DAB);
MakeCode(0x427DB8);
MakeCode(0x427DC1);
MakeCode(0x427DC6);
MakeFunction(0x4278A0, 0x427E0D);
MakeUnkn(0x427E10, 1);
MakeNameEx(0x427E10, "TBitmap.ReadStream", 0x20);
MakeComm(0x427E10, "'procedure TBitmap.ReadStream(Stream:TStream; Size:Longint);'");
MakeCode(0x427E10);
MakeCode(0x427E4D);
MakeCode(0x427E68);
MakeCode(0x427E77);
MakeFunction(0x427E10, 0x427E7E);
MakeUnkn(0x427E80, 1);
MakeNameEx(0x427E80, "TBitmap.SetHandle", 0x20);
MakeComm(0x427E80, "'procedure TBitmap.SetHandle(Value:HBITMAP);'");
MakeCode(0x427E80);
MakeCode(0x427EBF);
MakeCode(0x427ED2);
MakeCode(0x427EE7);
MakeCode(0x427EEF);
MakeCode(0x427F11);
MakeCode(0x427F1B);
MakeCode(0x427F32);
MakeCode(0x427F3B);
MakeFunction(0x427E80, 0x427F42);
MakeUnkn(0x427F44, 1);
MakeNameEx(0x427F44, "TBitmap.SetHandleType", 0x20);
MakeComm(0x427F44, "'procedure TBitmap.SetHandleType(Value:TBitmapHandleType);'");
MakeCode(0x427F44);
MakeCode(0x427F7C);
MakeCode(0x427F88);
MakeCode(0x427F9C);
MakeCode(0x427FE2);
MakeCode(0x427FF5);
MakeCode(0x428001);
MakeCode(0x428037);
MakeCode(0x428041);
MakeCode(0x42805A);
MakeCode(0x42806D);
MakeCode(0x428076);
MakeFunction(0x427F44, 0x42807E);
MakeUnkn(0x428080, 1);
MakeNameEx(0x428080, "TBitmap.SetHeight", 0x20);
MakeComm(0x428080, "'procedure TBitmap.SetHeight(Value:Integer);'");
MakeCode(0x428080);
MakeFunction(0x428080, 0x42809A);
MakeUnkn(0x42809C, 1);
MakeNameEx(0x42809C, "TBitmap.SetMonochrome", 0x20);
MakeComm(0x42809C, "'procedure TBitmap.SetMonochrome(Value:Boolean);'");
MakeCode(0x42809C);
MakeCode(0x4280BA);
MakeCode(0x4280BE);
MakeCode(0x4280C0);
MakeCode(0x428111);
MakeFunction(0x42809C, 0x428118);
MakeUnkn(0x428118, 1);
MakeNameEx(0x428118, "TBitmap.SetPalette", 0x20);
MakeComm(0x428118, "'procedure TBitmap.SetPalette(Value:HPALETTE);'");
MakeCode(0x428118);
MakeCode(0x42814C);
MakeCode(0x4281A6);
MakeCode(0x4281B0);
MakeCode(0x4281C8);
MakeCode(0x4281E5);
MakeFunction(0x428118, 0x4281EC);
MakeUnkn(0x4281EC, 1);
MakeNameEx(0x4281EC, "TBitmap.SetWidth", 0x20);
MakeComm(0x4281EC, "'procedure TBitmap.SetWidth(Value:Integer);'");
MakeCode(0x4281EC);
MakeFunction(0x4281EC, 0x428206);
MakeUnkn(0x428208, 1);
MakeNameEx(0x428208, "TBitmap.WriteData", 0x20);
MakeComm(0x428208, "'procedure TBitmap.WriteData(Stream:TStream);'");
MakeCode(0x428208);
MakeFunction(0x428208, 0x428210);
MakeUnkn(0x428210, 1);
MakeNameEx(0x428210, "TBitmap.WriteStream", 0x20);
MakeComm(0x428210, "'procedure TBitmap.WriteStream(Stream:TStream; WriteSize:Boolean);'");
MakeCode(0x428210);
MakeCode(0x42825C);
MakeCode(0x428279);
MakeCode(0x4282CC);
MakeCode(0x428357);
MakeCode(0x42839B);
MakeCode(0x4283AD);
MakeCode(0x4283BF);
MakeCode(0x4283E5);
MakeCode(0x4283EC);
MakeCode(0x4283FF);
MakeCode(0x428454);
MakeCode(0x42848F);
MakeCode(0x4284B7);
MakeFunction(0x428210, 0x4284C2);
MakeUnkn(0x4284C8, 1);
MakeNameEx(0x4284C8, "TBitmap.SaveToStream", 0x20);
MakeComm(0x4284C8, "'procedure TBitmap.SaveToStream(Stream:TStream);'");
MakeCode(0x4284C8);
MakeFunction(0x4284C8, 0x4284D0);
MakeUnkn(0x4284D0, 1);
MakeNameEx(0x4284D0, "TBitmap.SaveToClipboardFormat", 0x20);
MakeComm(0x4284D0, "'procedure TBitmap.SaveToClipboardFormat(var Format:Word; var Data:THandle; var APalette:HPALETTE);'");
MakeCode(0x4284D0);
MakeCode(0x428540);
MakeCode(0x42854A);
MakeCode(0x428564);
MakeFunction(0x4284D0, 0x42856D);
MakeUnkn(0x428570, 1);
MakeNameEx(0x428570, "TBitmap.SetSize", 0x20);
MakeComm(0x428570, "'procedure TBitmap.SetSize(AWidth:Integer; AHeight:Integer);'");
MakeCode(0x428570);
MakeCode(0x42858A);
MakeCode(0x4285CA);
MakeFunction(0x428570, 0x4285D2);
MakeUnkn(0x4285D4, 1);
MakeNameEx(0x4285D4, "TIconImage.Destroy", 0x20);
MakeComm(0x4285D4, "'destructor TIconImage.Destroy;'");
MakeCode(0x4285D4);
MakeCode(0x4285FE);
MakeFunction(0x4285D4, 0x428601);
MakeUnkn(0x428604, 1);
MakeNameEx(0x428604, "TIconImage.FreeHandle", 0x20);
MakeComm(0x428604, "'procedure TIconImage.FreeHandle;'");
MakeCode(0x428604);
MakeCode(0x428614);
MakeFunction(0x428604, 0x42861B);
MakeUnkn(0x42861C, 1);
MakeNameEx(0x42861C, "TIcon.Create", 0x20);
MakeComm(0x42861C, "'constructor TIcon.Create;'");
MakeCode(0x42861C);
MakeCode(0x42862B);
MakeCode(0x428669);
MakeFunction(0x42861C, 0x42866F);
MakeUnkn(0x428670, 1);
MakeNameEx(0x428670, "TIcon.Destroy", 0x20);
MakeComm(0x428670, "'destructor TIcon.Destroy;'");
MakeCode(0x428670);
MakeComm(0x42867B, "'TIcon.FImage:TIconImage'");
MakeCode(0x42869A);
MakeFunction(0x428670, 0x42869D);
MakeUnkn(0x4286A0, 1);
MakeNameEx(0x4286A0, "TIcon.Assign", 0x20);
MakeComm(0x4286A0, "'procedure TIcon.Assign(Source:TPersistent);'");
MakeCode(0x4286A0);
MakeCode(0x4286BC);
MakeCode(0x4286DA);
MakeCode(0x4286E5);
MakeCode(0x4286F0);
MakeCode(0x4286F9);
MakeFunction(0x4286A0, 0x4286FD);
MakeUnkn(0x428700, 1);
MakeNameEx(0x428700, "TIcon.Draw", 0x20);
MakeComm(0x428700, "'procedure TIcon.Draw(ACanvas:TCanvas; const Rect:TRect);'");
MakeCode(0x428700);
MakeFunction(0x428700, 0x42873D);
MakeUnkn(0x428744, 1);
MakeNameEx(0x428744, "TIcon.GetEmpty", 0x20);
MakeComm(0x428744, "'function TIcon.GetEmpty:Boolean;'");
MakeCode(0x428744);
MakeCode(0x428753);
MakeCode(0x428756);
MakeFunction(0x428744, 0x428759);
MakeUnkn(0x42875C, 1);
MakeNameEx(0x42875C, "TIcon.GetHandle", 0x20);
MakeComm(0x42875C, "'function TIcon.GetHandle:HICON;'");
MakeCode(0x42875C);
MakeFunction(0x42875C, 0x42876E);
MakeUnkn(0x428770, 1);
MakeNameEx(0x428770, "TIcon.GetHeight", 0x20);
MakeComm(0x428770, "'function TIcon.GetHeight:Integer;'");
MakeCode(0x428770);
MakeFunction(0x428770, 0x428782);
MakeUnkn(0x428784, 1);
MakeNameEx(0x428784, "TIcon.GetWidth", 0x20);
MakeComm(0x428784, "'function TIcon.GetWidth:Integer;'");
MakeCode(0x428784);
MakeFunction(0x428784, 0x428796);
MakeUnkn(0x428798, 1);
MakeNameEx(0x428798, "TIcon.HandleNeeded", 0x20);
MakeComm(0x428798, "'procedure TIcon.HandleNeeded;'");
MakeCode(0x428798);
MakeCode(0x4287D6);
MakeCode(0x4287E1);
MakeCode(0x4287FE);
MakeCode(0x428803);
MakeCode(0x42880A);
MakeFunction(0x428798, 0x428810);
MakeUnkn(0x428810, 1);
MakeNameEx(0x428810, "TIcon.ImageNeeded", 0x20);
MakeComm(0x428810, "'procedure TIcon.ImageNeeded;'");
MakeCode(0x428810);
MakeCode(0x428833);
MakeCode(0x428880);
MakeCode(0x428893);
MakeCode(0x42889D);
MakeCode(0x4288B4);
MakeCode(0x4288BA);
MakeFunction(0x428810, 0x4288C1);
MakeUnkn(0x4288C4, 1);
MakeNameEx(0x4288C4, "TIcon.LoadFromStream", 0x20);
MakeComm(0x4288C4, "'procedure TIcon.LoadFromStream(Stream:TStream);'");
MakeCode(0x4288C4);
MakeCode(0x42893C);
MakeCode(0x428948);
MakeCode(0x428952);
MakeCode(0x428969);
MakeFunction(0x4288C4, 0x428979);
MakeUnkn(0x42897C, 1);
MakeNameEx(0x42897C, "TIcon.NewImage", 0x20);
MakeComm(0x42897C, "'procedure TIcon.NewImage(NewHandle:HICON; NewImage:TMemoryStream);'");
MakeCode(0x42897C);
MakeCode(0x4289B2);
MakeCode(0x4289BC);
MakeCode(0x4289D3);
MakeFunction(0x42897C, 0x4289EF);
MakeUnkn(0x4289F0, 1);
MakeNameEx(0x4289F0, "TIcon.SetHandle", 0x20);
MakeComm(0x4289F0, "'procedure TIcon.SetHandle(Value:HICON);'");
MakeCode(0x4289F0);
MakeFunction(0x4289F0, 0x428A07);
MakeUnkn(0x428A08, 1);
MakeNameEx(0x428A08, "TIcon.SetHeight", 0x20);
MakeComm(0x428A08, "'procedure TIcon.SetHeight(Value:Integer);'");
MakeCode(0x428A08);
MakeCode(0x428A15);
MakeFunction(0x428A08, 0x428A20);
MakeUnkn(0x428A20, 1);
MakeNameEx(0x428A20, "TIcon.SetSize", 0x20);
MakeComm(0x428A20, "'procedure TIcon.SetSize(AWidth:Integer; AHeight:Integer);'");
MakeCode(0x428A20);
MakeCode(0x428A32);
MakeFunction(0x428A20, 0x428A3E);
MakeUnkn(0x428A40, 1);
MakeNameEx(0x428A40, "TIcon.SetTransparent", 0x20);
MakeComm(0x428A40, "'procedure TIcon.SetTransparent(Value:Boolean);'");
MakeCode(0x428A40);
MakeFunction(0x428A40, 0x428A41);
MakeUnkn(0x428A44, 1);
MakeNameEx(0x428A44, "TIcon.SetWidth", 0x20);
MakeComm(0x428A44, "'procedure TIcon.SetWidth(Value:Integer);'");
MakeCode(0x428A44);
MakeCode(0x428A51);
MakeFunction(0x428A44, 0x428A5C);
MakeUnkn(0x428A5C, 1);
MakeNameEx(0x428A5C, "TIcon.SaveToStream", 0x20);
MakeComm(0x428A5C, "'procedure TIcon.SaveToStream(Stream:TStream);'");
MakeCode(0x428A5C);
MakeFunction(0x428A5C, 0x428A84);
MakeUnkn(0x428A84, 1);
MakeNameEx(0x428A84, "TIcon.LoadFromClipboardFormat", 0x20);
MakeComm(0x428A84, "'procedure TIcon.LoadFromClipboardFormat(AFormat:Word; AData:THandle; APalette:HPALETTE);'");
MakeCode(0x428A84);
MakeFunction(0x428A84, 0x428A95);
MakeUnkn(0x428A98, 1);
MakeNameEx(0x428A98, "TIcon.SaveToClipboardFormat", 0x20);
MakeComm(0x428A98, "'procedure TIcon.SaveToClipboardFormat(var Format:Word; var Data:THandle; var APalette:HPALETTE);'");
MakeCode(0x428A98);
MakeFunction(0x428A98, 0x428AA9);
MakeUnkn(0x428AAC, 1);
MakeNameEx(0x428AAC, "InitScreenLogPixels", 0x20);
MakeComm(0x428AAC, "'procedure InitScreenLogPixels;'");
MakeCode(0x428AAC);
MakeFunction(0x428AAC, 0x428AE1);
MakeUnkn(0x428AE4, 1);
MakeNameEx(0x428AE4, "GetDefFontCharSet", 0x20);
MakeComm(0x428AE4, "'function GetDefFontCharSet:TFontCharset;'");
MakeCode(0x428AE4);
MakeCode(0x428B18);
MakeCode(0x428B20);
MakeFunction(0x428AE4, 0x428B28);
MakeUnkn(0x428B28, 1);
MakeNameEx(0x428B28, "InitDefFontData", 0x20);
MakeComm(0x428B28, "'procedure InitDefFontData;'");
MakeCode(0x428B28);
MakeCode(0x428B7A);
MakeCode(0x428BCD);
MakeCode(0x428BDA);
MakeCode(0x428BE3);
MakeCode(0x428BE8);
MakeCode(0x428C15);
MakeCode(0x428C22);
MakeCode(0x428C2B);
MakeCode(0x428C30);
MakeFunction(0x428B28, 0x428C36);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x428C40, -1);
MakeDword(0x428C3C);
MakeDword(0x428C38);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x428C50, -1);
MakeDword(0x428C4C);
MakeDword(0x428C48);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x428C98, -1);
MakeDword(0x428C94);
MakeDword(0x428C90);
MakeUnkn(0x428CA8, 1);
MakeNameEx(0x428CA8, "VMT_428CA8_TPatternManager", 0);
MakeDword(0x428CA8);
MakeDword(0x428CAC);
MakeDword(0x428CB0);
MakeDword(0x428CB4);
MakeDword(0x428CB8);
MakeDword(0x428CBC);
MakeDword(0x428CC0);
MakeDword(0x428CC4);
MakeDword(0x428CC8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x428CF4, 0x428D04);
MakeDword(0x428CCC);
MakeDword(0x428CD0);
MakeDword(0x428CD4);
MakeDword(0x428CD8);
MakeDword(0x428CDC);
MakeDword(0x428CE0);
MakeDword(0x428CE4);
MakeDword(0x428CE8);
MakeDword(0x428CEC);
MakeDword(0x428CF0);
MakeUnkn(0x428D04, 1);
MakeNameEx(0x428D04, "TPatternManager.Create", 0x20);
MakeComm(0x428D04, "'constructor TPatternManager.Create;'");
MakeCode(0x428D04);
MakeCode(0x428D12);
MakeCode(0x428D34);
MakeFunction(0x428D04, 0x428D39);
MakeUnkn(0x428D3C, 1);
MakeNameEx(0x428D3C, "TPatternManager.Destroy", 0x20);
MakeComm(0x428D3C, "'destructor TPatternManager.Destroy;'");
MakeCode(0x428D3C);
MakeCode(0x428D62);
MakeFunction(0x428D3C, 0x428D65);
MakeUnkn(0x428D68, 1);
MakeNameEx(0x428D68, "TPatternManager.Lock", 0x20);
MakeComm(0x428D68, "'procedure TPatternManager.Lock;'");
MakeCode(0x428D68);
MakeFunction(0x428D68, 0x428D72);
MakeUnkn(0x428D74, 1);
MakeNameEx(0x428D74, "TPatternManager.Unlock", 0x20);
MakeComm(0x428D74, "'procedure TPatternManager.Unlock;'");
MakeCode(0x428D74);
MakeFunction(0x428D74, 0x428D7E);
MakeUnkn(0x428D80, 1);
MakeNameEx(0x428D80, "TPatternManager.AllocPattern", 0x20);
MakeComm(0x428D80, "'function TPatternManager.AllocPattern(BkColor:TColorRef; FgColor:TColorRef):PPattern;'");
MakeCode(0x428D80);
MakeCode(0x428DB1);
MakeCode(0x428DB9);
MakeCode(0x428DCF);
MakeCode(0x428E0B);
MakeCode(0x428E18);
MakeCode(0x428E21);
MakeCode(0x428E26);
MakeFunction(0x428D80, 0x428E32);
MakeUnkn(0x428E34, 1);
MakeNameEx(0x428E34, "TPatternManager.CreateBitmap", 0x20);
MakeComm(0x428E34, "'function TPatternManager.CreateBitmap(BkColor:TColor; FgColor:TColor):TBitmap;'");
MakeCode(0x428E34);
MakeCode(0x428EC3);
MakeCode(0x428EC5);
MakeCode(0x428ED3);
MakeCode(0x428EE2);
MakeCode(0x428EF5);
MakeCode(0x428F09);
MakeCode(0x428F13);
MakeCode(0x428F2A);
MakeFunction(0x428E34, 0x428F34);
MakeUnkn(0x428F34, 1);
MakeNameEx(0x428F34, "TPatternManager.FreePatterns", 0x20);
MakeComm(0x428F34, "'procedure TPatternManager.FreePatterns;'");
MakeCode(0x428F34);
MakeCode(0x428F41);
MakeCode(0x428F6B);
MakeCode(0x428F78);
MakeCode(0x428F81);
MakeCode(0x428F86);
MakeCode(0x428F99);
MakeCode(0x428FA1);
MakeFunction(0x428F34, 0x428FB1);
MakeUnkn(0x428FB4, 1);
MakeNameEx(0x428FB4, "AllocPatternBitmap", 0x20);
MakeComm(0x428FB4, "'function AllocPatternBitmap(BkColor:TColor; FgColor:TColor):TBitmap;'");
MakeCode(0x428FB4);
MakeCode(0x428FE5);
MakeFunction(0x428FB4, 0x428FEA);
MakeUnkn(0x428FEC, 1);
MakeNameEx(0x428FEC, "Finalization_0", 0x20);
MakeComm(0x428FEC, "'procedure Finalization;'");
MakeCode(0x428FEC);
MakeCode(0x4290A7);
MakeCode(0x4290B4);
MakeCode(0x4290B5);
MakeCode(0x4290BA);
MakeFunction(0x428FEC, 0x4290BE);
MakeUnkn(0x4290C0, 1);
MakeNameEx(0x4290C0, "VMT_4290C0_TObjectList", 0);
MakeDword(0x4290C0);
MakeDword(0x4290C4);
MakeDword(0x4290C8);
MakeDword(0x4290CC);
MakeDword(0x4290D0);
MakeDword(0x4290D4);
MakeDword(0x4290D8);
MakeDword(0x4290DC);
MakeDword(0x4290E0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42911C, 0x429128);
MakeDword(0x4290E4);
MakeDword(0x4290E8);
MakeDword(0x4290EC);
MakeDword(0x4290F0);
MakeDword(0x4290F4);
MakeDword(0x4290F8);
MakeDword(0x4290FC);
MakeDword(0x429100);
MakeDword(0x429104);
MakeDword(0x429108);
MakeComm(0x42910C, "'+0'");
MakeDword(0x42910C);
MakeComm(0x429110, "'+4'");
MakeDword(0x429110);
MakeComm(0x429114, "'+8'");
MakeDword(0x429114);
MakeComm(0x429118, "'+C'");
MakeDword(0x429118);
MakeUnkn(0x429128, 1);
MakeNameEx(0x429128, "VMT_429128_TOrderedList", 0);
MakeDword(0x429128);
MakeDword(0x42912C);
MakeDword(0x429130);
MakeDword(0x429134);
MakeDword(0x429138);
MakeDword(0x42913C);
MakeDword(0x429140);
MakeDword(0x429144);
MakeDword(0x429148);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x429180, 0x42918D);
MakeDword(0x42914C);
MakeDword(0x429150);
MakeDword(0x429154);
MakeDword(0x429158);
MakeDword(0x42915C);
MakeDword(0x429160);
MakeDword(0x429164);
MakeDword(0x429168);
MakeDword(0x42916C);
MakeDword(0x429170);
MakeComm(0x429174, "'+0'");
MakeDword(0x429174);
MakeComm(0x429178, "'+4'");
MakeDword(0x429178);
MakeComm(0x42917C, "'+8'");
MakeDword(0x42917C);
MakeUnkn(0x429190, 1);
MakeNameEx(0x429190, "VMT_429190_TStack", 0);
MakeDword(0x429190);
MakeDword(0x429194);
MakeDword(0x429198);
MakeDword(0x42919C);
MakeDword(0x4291A0);
MakeDword(0x4291A4);
MakeDword(0x4291A8);
MakeDword(0x4291AC);
MakeDword(0x4291B0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4291E8, 0x4291EF);
MakeDword(0x4291B4);
MakeDword(0x4291B8);
MakeDword(0x4291BC);
MakeDword(0x4291C0);
MakeDword(0x4291C4);
MakeDword(0x4291C8);
MakeDword(0x4291CC);
MakeDword(0x4291D0);
MakeDword(0x4291D4);
MakeDword(0x4291D8);
MakeComm(0x4291DC, "'+0'");
MakeDword(0x4291DC);
MakeComm(0x4291E0, "'+4'");
MakeDword(0x4291E0);
MakeComm(0x4291E4, "'+8'");
MakeDword(0x4291E4);
MakeUnkn(0x4291F0, 1);
MakeNameEx(0x4291F0, "TObjectList.Create", 0x20);
MakeComm(0x4291F0, "'constructor TObjectList.Create;'");
MakeCode(0x4291F0);
MakeCode(0x4291FE);
MakeCode(0x429224);
MakeFunction(0x4291F0, 0x429229);
MakeUnkn(0x42922C, 1);
MakeNameEx(0x42922C, "TClassList.GetItems", 0x20);
MakeComm(0x42922C, "'function TClassList.GetItems(Index:Integer):TClass;'");
MakeCode(0x42922C);
MakeFunction(0x42922C, 0x42923E);
MakeUnkn(0x429240, 1);
MakeNameEx(0x429240, "TObjectList.Notify", 0x20);
MakeComm(0x429240, "'procedure TObjectList.Notify(Ptr:Pointer; Action:TListNotification);'");
MakeCode(0x429240);
MakeCode(0x42925B);
MakeFunction(0x429240, 0x42926A);
MakeUnkn(0x42926C, 1);
MakeNameEx(0x42926C, "TOrderedList.Pop", 0x20);
MakeComm(0x42926C, "'function TOrderedList.Pop:Pointer;'");
MakeCode(0x42926C);
MakeFunction(0x42926C, 0x429272);
MakeUnkn(0x429274, 1);
MakeNameEx(0x429274, "TOrderedList.Push", 0x20);
MakeComm(0x429274, "'function TOrderedList.Push(AItem:Pointer):Pointer;'");
MakeCode(0x429274);
MakeFunction(0x429274, 0x429281);
MakeUnkn(0x429284, 1);
MakeNameEx(0x429284, "TOrderedList.Create", 0x20);
MakeComm(0x429284, "'constructor TOrderedList.Create;'");
MakeCode(0x429284);
MakeCode(0x429292);
MakeCode(0x4292C3);
MakeFunction(0x429284, 0x4292C8);
MakeUnkn(0x4292C8, 1);
MakeNameEx(0x4292C8, "TOrderedList.Destroy", 0x20);
MakeComm(0x4292C8, "'destructor TOrderedList.Destroy;'");
MakeCode(0x4292C8);
MakeCode(0x4292F2);
MakeFunction(0x4292C8, 0x4292F5);
MakeUnkn(0x4292F8, 1);
MakeNameEx(0x4292F8, "TOrderedList.PeekItem", 0x20);
MakeComm(0x4292F8, "'function TOrderedList.PeekItem:Pointer;'");
MakeCode(0x4292F8);
MakeFunction(0x4292F8, 0x429309);
MakeUnkn(0x42930C, 1);
MakeNameEx(0x42930C, "TOrderedList.PopItem", 0x20);
MakeComm(0x42930C, "'function TOrderedList.PopItem:Pointer;'");
MakeCode(0x42930C);
MakeFunction(0x42930C, 0x42932A);
MakeUnkn(0x42932C, 1);
MakeNameEx(0x42932C, "TStack.PushItem", 0x20);
MakeComm(0x42932C, "'procedure TStack.PushItem(AItem:Pointer);'");
MakeCode(0x42932C);
MakeFunction(0x42932C, 0x429335);
MakeUnkn(0x429338, 1);
MakeNameEx(0x429338, "RTTI_429338_Interface_IHelpSelector", 0);
MakeDword(0x429338);
MakeUnkn(0x42933C, 1);
MakeNameEx(0x42933C, "", 0);
MakeByte(0x42933C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42933D, 0x42934B);
MakeDword(0x42934B);
MakeByte(0x42934F);
MakeByte(0x429350);
MakeArray(0x429350, 16);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x429360, 0x42936A);
MakeWord(0x42936A);
MakeWord(0x42936C);
MakeUnkn(0x429370, 1);
MakeNameEx(0x429370, "RTTI_429370_Interface_IHelpSystem", 0);
MakeDword(0x429370);
MakeUnkn(0x429374, 1);
MakeNameEx(0x429374, "", 0);
MakeByte(0x429374);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x429375, 0x429381);
MakeDword(0x429381);
MakeByte(0x429385);
MakeByte(0x429386);
MakeArray(0x429386, 16);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x429396, 0x4293A0);
MakeWord(0x4293A0);
MakeWord(0x4293A2);
MakeUnkn(0x4293A4, 1);
MakeNameEx(0x4293A4, "RTTI_4293A4_Interface_ICustomHelpViewer", 0);
MakeDword(0x4293A4);
MakeUnkn(0x4293A8, 1);
MakeNameEx(0x4293A8, "", 0);
MakeByte(0x4293A8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4293A9, 0x4293BB);
MakeDword(0x4293BB);
MakeByte(0x4293BF);
MakeByte(0x4293C0);
MakeArray(0x4293C0, 16);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4293D0, 0x4293DA);
MakeWord(0x4293DA);
MakeWord(0x4293DC);
MakeUnkn(0x4293E0, 1);
MakeNameEx(0x4293E0, "RTTI_4293E0_Interface_IExtendedHelpViewer", 0);
MakeDword(0x4293E0);
MakeUnkn(0x4293E4, 1);
MakeNameEx(0x4293E4, "", 0);
MakeByte(0x4293E4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4293E5, 0x4293F9);
MakeDword(0x4293F9);
MakeByte(0x4293FD);
MakeByte(0x4293FE);
MakeArray(0x4293FE, 16);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42940E, 0x429418);
MakeWord(0x429418);
MakeWord(0x42941A);
MakeUnkn(0x42941C, 1);
MakeNameEx(0x42941C, "RTTI_42941C_Interface_ISpecialWinHelpViewer", 0);
MakeDword(0x42941C);
MakeUnkn(0x429420, 1);
MakeNameEx(0x429420, "", 0);
MakeByte(0x429420);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x429421, 0x429437);
MakeDword(0x429437);
MakeByte(0x42943B);
MakeByte(0x42943C);
MakeArray(0x42943C, 16);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42944C, 0x429456);
MakeWord(0x429456);
MakeWord(0x429458);
MakeUnkn(0x42945C, 1);
MakeNameEx(0x42945C, "VMT_42945C_EHelpSystemException", 0);
MakeDword(0x42945C);
MakeDword(0x429460);
MakeDword(0x429464);
MakeDword(0x429468);
MakeDword(0x42946C);
MakeDword(0x429470);
MakeDword(0x429474);
MakeDword(0x429478);
MakeDword(0x42947C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4294A8, 0x4294BD);
MakeDword(0x429480);
MakeDword(0x429484);
MakeDword(0x429488);
MakeDword(0x42948C);
MakeDword(0x429490);
MakeDword(0x429494);
MakeDword(0x429498);
MakeDword(0x42949C);
MakeDword(0x4294A0);
MakeDword(0x4294A4);
MakeUnkn(0x4295E8, 1);
MakeNameEx(0x4295E8, "VMT_4295E8_THelpManager", 0);
MakeDword(0x4295E8);
MakeDword(0x4295EC);
MakeUnkn(0x42958E, 1);
MakeNameEx(0x42958E, "THelpManager_IntfTable", 0);
MakeDword(0x42958E);
MakeByte(0x429592);
MakeArray(0x429592, 16);
MakeDword(0x4295A2);
MakeDword(0x42954E);
MakeFunction(0x4294D9, -1);
MakeCode(0x4294D9);
MakeDword(0x429552);
MakeFunction(0x4294E3, -1);
MakeCode(0x4294E3);
MakeDword(0x429556);
MakeFunction(0x4294ED, -1);
MakeCode(0x4294ED);
MakeDword(0x42955A);
MakeFunction(0x4294C1, -1);
MakeCode(0x4294C1);
MakeDword(0x42955E);
MakeFunction(0x4294C9, -1);
MakeCode(0x4294C9);
MakeDword(0x429562);
MakeFunction(0x4294D1, -1);
MakeCode(0x4294D1);
MakeDword(0x429566);
MakeFunction(0x42952F, -1);
MakeCode(0x42952F);
MakeDword(0x42956A);
MakeFunction(0x429539, -1);
MakeCode(0x429539);
MakeDword(0x42956E);
MakeFunction(0x429543, -1);
MakeCode(0x429543);
MakeDword(0x429572);
MakeFunction(0x4294FF, -1);
MakeCode(0x4294FF);
MakeDword(0x429576);
MakeFunction(0x429507, -1);
MakeCode(0x429507);
MakeDword(0x42957A);
MakeFunction(0x42950F, -1);
MakeCode(0x42950F);
MakeDword(0x42957E);
MakeFunction(0x429517, -1);
MakeCode(0x429517);
MakeDword(0x429582);
MakeFunction(0x42951F, -1);
MakeCode(0x42951F);
MakeDword(0x429586);
MakeFunction(0x429527, -1);
MakeCode(0x429527);
MakeDword(0x42958A);
MakeFunction(0x4294F7, -1);
MakeCode(0x4294F7);
MakeByte(0x4294C0);
MakeDword(0x4295A6);
MakeDword(0x4295AA);
MakeByte(0x4295AE);
MakeArray(0x4295AE, 16);
MakeDword(0x4295BE);
MakeDword(0x429566);
MakeFunction(0x42952F, -1);
MakeCode(0x42952F);
MakeDword(0x42956A);
MakeFunction(0x429539, -1);
MakeCode(0x429539);
MakeDword(0x42956E);
MakeFunction(0x429543, -1);
MakeCode(0x429543);
MakeDword(0x429572);
MakeFunction(0x4294FF, -1);
MakeCode(0x4294FF);
MakeDword(0x429576);
MakeFunction(0x429507, -1);
MakeCode(0x429507);
MakeDword(0x42957A);
MakeFunction(0x42950F, -1);
MakeCode(0x42950F);
MakeDword(0x42957E);
MakeFunction(0x429517, -1);
MakeCode(0x429517);
MakeDword(0x429582);
MakeFunction(0x42951F, -1);
MakeCode(0x42951F);
MakeDword(0x429586);
MakeFunction(0x429527, -1);
MakeCode(0x429527);
MakeDword(0x42958A);
MakeFunction(0x4294F7, -1);
MakeCode(0x4294F7);
MakeByte(0x4294F6);
MakeDword(0x4295C2);
MakeDword(0x4295C6);
MakeByte(0x4295CA);
MakeArray(0x4295CA, 16);
MakeDword(0x4295DA);
MakeDword(0x429566);
MakeFunction(0x42952F, -1);
MakeCode(0x42952F);
MakeDword(0x42956A);
MakeFunction(0x429539, -1);
MakeCode(0x429539);
MakeDword(0x42956E);
MakeFunction(0x429543, -1);
MakeCode(0x429543);
MakeDword(0x429572);
MakeFunction(0x4294FF, -1);
MakeCode(0x4294FF);
MakeDword(0x429576);
MakeFunction(0x429507, -1);
MakeCode(0x429507);
MakeDword(0x42957A);
MakeFunction(0x42950F, -1);
MakeCode(0x42950F);
MakeDword(0x42957E);
MakeFunction(0x429517, -1);
MakeCode(0x429517);
MakeDword(0x429582);
MakeFunction(0x42951F, -1);
MakeCode(0x42951F);
MakeDword(0x429586);
MakeFunction(0x429527, -1);
MakeCode(0x429527);
MakeDword(0x42958A);
MakeFunction(0x4294F7, -1);
MakeCode(0x4294F7);
MakeByte(0x4294F6);
MakeDword(0x4295DE);
MakeDword(0x4295E2);
MakeDword(0x4295F0);
MakeDword(0x4295F4);
MakeUnkn(0x429634, 1);
MakeNameEx(0x429634, "THelpManager_InitTable", 0);
MakeByte(0x429634);
MakeByte(0x429635);
MakeDword(0x429636);
MakeDword(0x42963A);
MakeDword(0x42963E);
MakeDword(0x429642);
MakeDword(0x429646);
MakeDword(0x42964A);
MakeDword(0x4295F8);
MakeDword(0x4295FC);
MakeDword(0x429600);
MakeDword(0x429604);
MakeDword(0x429608);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42964E, 0x42965B);
MakeDword(0x42960C);
MakeDword(0x429610);
MakeDword(0x429614);
MakeDword(0x429618);
MakeDword(0x42961C);
MakeDword(0x429620);
MakeDword(0x429624);
MakeDword(0x429628);
MakeDword(0x42962C);
MakeDword(0x429630);
MakeComm(0x42965C, "'SResString126'");
MakeDword(0x42965C);
MakeDword(0x429660);
MakeComm(0x429664, "'SResString127'");
MakeDword(0x429664);
MakeDword(0x429668);
MakeComm(0x42966C, "'SResString128'");
MakeDword(0x42966C);
MakeDword(0x429670);
MakeComm(0x429674, "'SResString129'");
MakeDword(0x429674);
MakeDword(0x429678);
MakeComm(0x42967C, "'SResString130'");
MakeDword(0x42967C);
MakeDword(0x429680);
MakeUnkn(0x429684, 1);
MakeNameEx(0x429684, "EnsureHelpManager", 0x20);
MakeComm(0x429684, "'procedure EnsureHelpManager;'");
MakeCode(0x429684);
MakeFunction(0x429684, 0x42969F);
MakeUnkn(0x4296A0, 1);
MakeNameEx(0x4296A0, "GetHelpSystem", 0x20);
MakeComm(0x4296A0, "'function GetHelpSystem(var System:IHelpSystem):Boolean;'");
MakeCode(0x4296A0);
MakeCode(0x4296AE);
MakeCode(0x4296C2);
MakeFunction(0x4296A0, 0x4296D5);
MakeUnkn(0x4296E8, 1);
MakeNameEx(0x4296E8, "THelpManager.Create", 0x20);
MakeComm(0x4296E8, "'constructor THelpManager.Create;'");
MakeCode(0x4296E8);
MakeCode(0x4296F6);
MakeCode(0x429754);
MakeFunction(0x4296E8, 0x429759);
MakeUnkn(0x42975C, 1);
MakeNameEx(0x42975C, "THelpManager.UnloadAllViewers", 0x20);
MakeComm(0x42975C, "'procedure THelpManager.UnloadAllViewers;'");
MakeCode(0x42975C);
MakeCode(0x429763);
MakeCode(0x429775);
MakeFunction(0x42975C, 0x42979B);
MakeUnkn(0x42979C, 1);
MakeNameEx(0x42979C, "THelpManager.DoSoftShutDown", 0x20);
MakeComm(0x42979C, "'procedure THelpManager.DoSoftShutDown;'");
MakeCode(0x42979C);
MakeCode(0x4297AF);
MakeCode(0x4297C5);
MakeFunction(0x42979C, 0x4297C9);
MakeUnkn(0x4297CC, 1);
MakeNameEx(0x4297CC, "THelpManager.DoTableOfContents", 0x20);
MakeComm(0x4297CC, "'procedure THelpManager.DoTableOfContents;'");
MakeCode(0x4297CC);
MakeCode(0x429822);
MakeCode(0x42985F);
MakeCode(0x429890);
MakeCode(0x429898);
MakeCode(0x4298D1);
MakeCode(0x4298E3);
MakeCode(0x4298F0);
MakeCode(0x4298F9);
MakeCode(0x4298FE);
MakeCode(0x429900);
MakeCode(0x429932);
MakeCode(0x429948);
MakeCode(0x429955);
MakeCode(0x42995E);
MakeCode(0x429963);
MakeFunction(0x4297CC, 0x42996B);
MakeUnkn(0x42996C, 1);
MakeNameEx(0x42996C, "THelpManager.CallSpecialWinHelp", 0x20);
MakeComm(0x42996C, "'function THelpManager.CallSpecialWinHelp(Handle:Longint; const HelpFile:AnsiString; Command:Word; Data:Longint):Boolean;'");
MakeCode(0x42996C);
MakeCode(0x42999F);
MakeCode(0x4299EB);
MakeCode(0x429A28);
MakeCode(0x429A35);
MakeCode(0x429A51);
MakeCode(0x429A56);
MakeFunction(0x42996C, 0x429A63);
MakeCode(0x429A74);
MakeCode(0x429AB3);
MakeCode(0x429ACE);
MakeCode(0x429AEE);
MakeCode(0x429AF2);
MakeComm(0x429B17, "'EHelpSystemException.Create'");
MakeCode(0x429B21);
MakeCode(0x429B42);
MakeComm(0x429B49, "'TStringList.Create'");
MakeCode(0x429B70);
MakeCode(0x429BBB);
MakeComm(0x429BD4, "'TStringList.AddObject'");
MakeCode(0x429BDF);
MakeCode(0x429BE7);
MakeCode(0x429BEB);
MakeComm(0x429BF9, "'TStringList.Sort'");
MakeComm(0x429C1A, "'TStringList.GetObject'");
MakeComm(0x429C29, "'TStringList.Get'");
MakeCode(0x429C39);
MakeComm(0x429C40, "'TStringList.GetObject'");
MakeComm(0x429C4F, "'TStringList.Get'");
MakeCode(0x429C5D);
MakeCode(0x429C6A);
MakeCode(0x429C73);
MakeCode(0x429C78);
MakeCode(0x429C7A);
MakeCode(0x429C87);
MakeCode(0x429C98);
MakeCode(0x429C9D);
MakeFunction(0x429A74, 0x429CA6);
MakeUnkn(0x429CA8, 1);
MakeNameEx(0x429CA8, "DefaultContextHelp", 0x20);
MakeComm(0x429CA8, "'procedure DefaultContextHelp(const ContextId:Longint; const HelpFileName:AnsiString);'");
MakeCode(0x429CA8);
MakeCode(0x429CFE);
MakeCode(0x429D0B);
MakeCode(0x429D1C);
MakeCode(0x429D21);
MakeFunction(0x429CA8, 0x429D29);
MakeUnkn(0x429D3C, 1);
MakeNameEx(0x429D3C, "THelpManager.ShowContextHelp", 0x20);
MakeComm(0x429D3C, "'procedure THelpManager.ShowContextHelp(const ContextID:Longint; const HelpFileName:AnsiString);'");
MakeCode(0x429D3C);
MakeCode(0x429D89);
MakeCode(0x429DAE);
MakeCode(0x429DB8);
MakeCode(0x429DF8);
MakeCode(0x429DFC);
MakeCode(0x429E18);
MakeCode(0x429E30);
MakeCode(0x429E88);
MakeCode(0x429EE4);
MakeCode(0x429EE8);
MakeCode(0x429F2E);
MakeCode(0x429F3B);
MakeCode(0x429F48);
MakeCode(0x429F51);
MakeCode(0x429F56);
MakeCode(0x429F58);
MakeCode(0x429F67);
MakeCode(0x429F74);
MakeCode(0x429F81);
MakeCode(0x429FB5);
MakeCode(0x429FBA);
MakeFunction(0x429D3C, 0x429FC3);
MakeCode(0x429FE4);
MakeFunction(0x429FE4, 0x429FEA);
MakeCode(0x429FEC);
MakeCode(0x42A01B);
MakeComm(0x42A030, "'EHelpSystemException.Create'");
MakeCode(0x42A03A);
MakeCode(0x42A048);
MakeCode(0x42A089);
MakeCode(0x42A08D);
MakeCode(0x42A09A);
MakeCode(0x42A0AB);
MakeCode(0x42A0B0);
MakeFunction(0x429FEC, 0x42A0B9);
MakeByte(0x42A0BC);
MakeArray(0x42A0BC, 16);
MakeUnkn(0x42A0CC, 1);
MakeNameEx(0x42A0CC, "THelpManager.AssignHelpSelector", 0x20);
MakeComm(0x42A0CC, "'procedure THelpManager.AssignHelpSelector(Selector:IHelpSelector);'");
MakeCode(0x42A0CC);
MakeCode(0x42A0FA);
MakeCode(0x42A105);
MakeCode(0x42A112);
MakeCode(0x42A11B);
MakeCode(0x42A120);
MakeFunction(0x42A0CC, 0x42A126);
MakeUnkn(0x42A128, 1);
MakeNameEx(0x42A128, "THelpManager.Hook", 0x20);
MakeComm(0x42A128, "'function THelpManager.Hook(Handle:Longint; HelpFile:AnsiString; Command:Word; Data:Longint):Boolean;'");
MakeCode(0x42A128);
MakeCode(0x42A160);
MakeCode(0x42A179);
MakeCode(0x42A188);
MakeCode(0x42A197);
MakeCode(0x42A1A0);
MakeCode(0x42A1A9);
MakeCode(0x42A1BA);
MakeCode(0x42A1BC);
MakeCode(0x42A1C9);
MakeCode(0x42A1D2);
MakeCode(0x42A1D7);
MakeFunction(0x42A128, 0x42A1E3);
MakeCode(0x42A1E4);
MakeCode(0x42A224);
MakeCode(0x42A235);
MakeCode(0x42A27F);
MakeCode(0x42A2A0);
MakeCode(0x42A2AC);
MakeCode(0x42A2B0);
MakeCode(0x42A2BD);
MakeCode(0x42A2CE);
MakeCode(0x42A2D3);
MakeFunction(0x42A1E4, 0x42A2E0);
MakeByte(0x42A2E0);
MakeArray(0x42A2E0, 16);
MakeCode(0x42A2F0);
MakeFunction(0x42A2F0, 0x42A2F4);
MakeUnkn(0x42A2F4, 1);
MakeNameEx(0x42A2F4, "THelpManager.GetHelpFile", 0x20);
MakeComm(0x42A2F4, "'function THelpManager.GetHelpFile:AnsiString;'");
MakeCode(0x42A2F4);
MakeFunction(0x42A2F4, 0x42A307);
MakeCode(0x42A308);
MakeCode(0x42A31B);
MakeCode(0x42A334);
MakeCode(0x42A33A);
MakeCode(0x42A346);
MakeCode(0x42A35F);
MakeCode(0x42A365);
MakeCode(0x42A371);
MakeCode(0x42A38A);
MakeCode(0x42A390);
MakeFunction(0x42A308, 0x42A394);
MakeUnkn(0x42A394, 1);
MakeNameEx(0x42A394, "THelpManager.Destroy", 0x20);
MakeComm(0x42A394, "'destructor THelpManager.Destroy;'");
MakeCode(0x42A394);
MakeCode(0x42A3B4);
MakeCode(0x42A3C3);
MakeCode(0x42A3F2);
MakeFunction(0x42A394, 0x42A3F5);
MakeCode(0x42A3F8);
MakeCode(0x42A421);
MakeCode(0x42A42E);
MakeCode(0x42A42F);
MakeCode(0x42A434);
MakeFunction(0x42A3F8, 0x42A438);
MakeUnkn(0x42A438, 1);
MakeNameEx(0x42A438, "InitAnApi", 0x20);
MakeComm(0x42A438, "'function InitAnApi(mmAPI:TMultiMonApi; ApiStub:Pointer; ApiName:AnsiString):Pointer;'");
MakeCode(0x42A438);
MakeCode(0x42A4A8);
MakeCode(0x42A4C0);
MakeCode(0x42A4C2);
MakeCode(0x42A4CA);
MakeCode(0x42A4D5);
MakeCode(0x42A4DF);
MakeCode(0x42A4EC);
MakeCode(0x42A4F5);
MakeCode(0x42A4FA);
MakeFunction(0x42A438, 0x42A51C);
MakeUnkn(0x42A51C, 1);
MakeNameEx(0x42A51C, "_GetSystemMetrics", 0x20);
MakeComm(0x42A51C, "'function _GetSystemMetrics(nIndex:Integer):Integer; stdcall;'");
MakeCode(0x42A51C);
MakeCode(0x42A54C);
MakeCode(0x42A56B);
MakeCode(0x42A56F);
MakeCode(0x42A573);
MakeCode(0x42A578);
MakeCode(0x42A583);
MakeFunction(0x42A51C, 0x42A5A4);
MakeUnkn(0x42A5A4, 1);
MakeNameEx(0x42A5A4, "xMonitorFromRect", 0x20);
MakeComm(0x42A5A4, "'function xMonitorFromRect(lprcScreenCoords:PRect; dwFlags:DWORD):HMONITOR; stdcall;'");
MakeCode(0x42A5A4);
MakeCode(0x42A5DC);
MakeCode(0x42A60C);
MakeCode(0x42A611);
MakeFunction(0x42A5A4, 0x42A634);
MakeUnkn(0x42A634, 1);
MakeNameEx(0x42A634, "xMonitorFromWindow", 0x20);
MakeComm(0x42A634, "'function xMonitorFromWindow(hWnd:HWND; dwFlags:DWORD):HMONITOR; stdcall;'");
MakeCode(0x42A634);
MakeCode(0x42A66C);
MakeCode(0x42A67C);
MakeCode(0x42A692);
MakeCode(0x42A69C);
MakeCode(0x42A6A6);
MakeFunction(0x42A634, 0x42A6CC);
MakeUnkn(0x42A6CC, 1);
MakeNameEx(0x42A6CC, "xMonitorFromPoint", 0x20);
MakeComm(0x42A6CC, "'function xMonitorFromPoint(ptScreenCoords:TPoint; dwFlags:DWORD):HMONITOR; stdcall;'");
MakeCode(0x42A6CC);
MakeCode(0x42A706);
MakeCode(0x42A737);
MakeCode(0x42A73C);
MakeFunction(0x42A6CC, 0x42A764);
MakeUnkn(0x42A764, 1);
MakeNameEx(0x42A764, "xGetMonitorInfo", 0x20);
MakeComm(0x42A764, "'function xGetMonitorInfo(hMonitor:HMONITOR; lpMonitorInfo:PMonitorInfoA):Boolean; stdcall;'");
MakeCode(0x42A764);
MakeCode(0x42A79F);
MakeCode(0x42A80B);
MakeCode(0x42A80D);
MakeFunction(0x42A764, 0x42A838);
MakeUnkn(0x42A838, 1);
MakeNameEx(0x42A838, "xGetMonitorInfoA", 0x20);
MakeComm(0x42A838, "'function xGetMonitorInfoA(hMonitor:HMONITOR; lpMonitorInfo:PMonitorInfoA):Boolean; stdcall;'");
MakeCode(0x42A838);
MakeCode(0x42A873);
MakeCode(0x42A8DF);
MakeCode(0x42A8E1);
MakeFunction(0x42A838, 0x42A90C);
MakeUnkn(0x42A90C, 1);
MakeNameEx(0x42A90C, "xGetMonitorInfoW", 0x20);
MakeComm(0x42A90C, "'function xGetMonitorInfoW(hMonitor:HMONITOR; lpMonitorInfo:PMonitorInfoW):Boolean; stdcall;'");
MakeCode(0x42A90C);
MakeCode(0x42A947);
MakeCode(0x42A9B3);
MakeCode(0x42A9B5);
MakeFunction(0x42A90C, 0x42A9E0);
MakeUnkn(0x42A9E0, 1);
MakeNameEx(0x42A9E0, "xEnumDisplayMonitors", 0x20);
MakeComm(0x42A9E0, "'function xEnumDisplayMonitors(hdcOptionalForPainting:HDC; lprcEnumMonitorsThatIntersect:PRect; lpfnEnumProc:TMonitorEnumProc; dwData:LPARAM):Boolean; stdcall;'");
MakeCode(0x42A9E0);
MakeCode(0x42AA26);
MakeCode(0x42AA9F);
MakeCode(0x42AABB);
MakeCode(0x42AAD5);
MakeCode(0x42AAE8);
MakeFunction(0x42A9E0, 0x42AB10);
MakeUnkn(0x42AB10, 1);
MakeNameEx(0x42AB10, "InitMultiMonStubs", 0x20);
MakeComm(0x42AB10, "'procedure InitMultiMonStubs;'");
MakeCode(0x42AB10);
MakeFunction(0x42AB10, 0x42AB7C);
MakeCode(0x42AB7C);
MakeCode(0x42AB93);
MakeCode(0x42ABA0);
MakeCode(0x42ABA1);
MakeCode(0x42ABA6);
MakeFunction(0x42AB7C, 0x42ABAA);
MakeUnkn(0x42ABAC, 1);
MakeNameEx(0x42ABAC, "imm32.ImmGetVirtualKey", 0x20);
MakeComm(0x42ABAC, "'function imm32.ImmGetVirtualKey:UINT; stdcall;'");
MakeCode(0x42ABAC);
MakeFunction(0x42ABAC, 0x42ABB2);
MakeUnkn(0x42ABB4, 1);
MakeNameEx(0x42ABB4, "VMT_42ABB4_TSynchroObject", 0);
MakeDword(0x42ABB4);
MakeDword(0x42ABB8);
MakeDword(0x42ABBC);
MakeDword(0x42ABC0);
MakeDword(0x42ABC4);
MakeDword(0x42ABC8);
MakeDword(0x42ABCC);
MakeDword(0x42ABD0);
MakeDword(0x42ABD4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AC08, 0x42AC17);
MakeDword(0x42ABD8);
MakeDword(0x42ABDC);
MakeDword(0x42ABE0);
MakeDword(0x42ABE4);
MakeDword(0x42ABE8);
MakeDword(0x42ABEC);
MakeDword(0x42ABF0);
MakeDword(0x42ABF4);
MakeDword(0x42ABF8);
MakeDword(0x42ABFC);
MakeComm(0x42AC00, "'+0'");
MakeDword(0x42AC00);
MakeComm(0x42AC04, "'+4'");
MakeDword(0x42AC04);
MakeUnkn(0x42AC18, 1);
MakeNameEx(0x42AC18, "VMT_42AC18_TCriticalSection", 0);
MakeDword(0x42AC18);
MakeDword(0x42AC1C);
MakeDword(0x42AC20);
MakeDword(0x42AC24);
MakeDword(0x42AC28);
MakeDword(0x42AC2C);
MakeDword(0x42AC30);
MakeDword(0x42AC34);
MakeDword(0x42AC38);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42AC6C, 0x42AC7D);
MakeDword(0x42AC3C);
MakeDword(0x42AC40);
MakeDword(0x42AC44);
MakeDword(0x42AC48);
MakeDword(0x42AC4C);
MakeDword(0x42AC50);
MakeDword(0x42AC54);
MakeDword(0x42AC58);
MakeDword(0x42AC5C);
MakeDword(0x42AC60);
MakeComm(0x42AC64, "'+0'");
MakeDword(0x42AC64);
MakeComm(0x42AC68, "'+4'");
MakeDword(0x42AC68);
MakeCode(0x42AC80);
MakeFunction(0x42AC80, 0x42AC81);
MakeCode(0x42AC84);
MakeFunction(0x42AC84, 0x42AC85);
MakeUnkn(0x42AC88, 1);
MakeNameEx(0x42AC88, "TCriticalSection.Create", 0x20);
MakeComm(0x42AC88, "'constructor TCriticalSection.Create;'");
MakeCode(0x42AC88);
MakeCode(0x42AC96);
MakeCode(0x42ACC1);
MakeFunction(0x42AC88, 0x42ACC6);
MakeUnkn(0x42ACC8, 1);
MakeNameEx(0x42ACC8, "TCriticalSection.Destroy", 0x20);
MakeComm(0x42ACC8, "'destructor TCriticalSection.Destroy;'");
MakeCode(0x42ACC8);
MakeCode(0x42ACF3);
MakeFunction(0x42ACC8, 0x42ACF6);
MakeUnkn(0x42ACF8, 1);
MakeNameEx(0x42ACF8, "TCriticalSection.Acquire", 0x20);
MakeComm(0x42ACF8, "'procedure TCriticalSection.Acquire;'");
MakeCode(0x42ACF8);
MakeFunction(0x42ACF8, 0x42AD02);
MakeUnkn(0x42AD04, 1);
MakeNameEx(0x42AD04, "TCriticalSection.Release", 0x20);
MakeComm(0x42AD04, "'procedure TCriticalSection.Release;'");
MakeCode(0x42AD04);
MakeFunction(0x42AD04, 0x42AD0E);
MakeUnkn(0x42AD10, 1);
MakeNameEx(0x42AD10, "TCriticalSection.Enter", 0x20);
MakeComm(0x42AD10, "'procedure TCriticalSection.Enter;'");
MakeCode(0x42AD10);
MakeFunction(0x42AD10, 0x42AD15);
MakeUnkn(0x42AD18, 1);
MakeNameEx(0x42AD18, "TCriticalSection.Leave", 0x20);
MakeComm(0x42AD18, "'procedure TCriticalSection.Leave;'");
MakeCode(0x42AD18);
MakeFunction(0x42AD18, 0x42AD1E);
MakeUnkn(0x42AD20, 1);
MakeNameEx(0x42AD20, "FreeThemeLibrary", 0x20);
MakeComm(0x42AD20, "'procedure FreeThemeLibrary;'");
MakeCode(0x42AD20);
MakeCode(0x42AD4A);
MakeCode(0x42AEBF);
MakeCode(0x42AECC);
MakeCode(0x42AED7);
MakeCode(0x42AEDC);
MakeFunction(0x42AD20, 0x42AEE0);
MakeUnkn(0x42AEE0, 1);
MakeNameEx(0x42AEE0, "InitThemeLibrary", 0x20);
MakeComm(0x42AEE0, "'function InitThemeLibrary:Boolean;'");
MakeCode(0x42AEE0);
MakeCode(0x42B274);
MakeCode(0x42B27B);
MakeCode(0x42B288);
MakeCode(0x42B293);
MakeCode(0x42B298);
MakeFunction(0x42AEE0, 0x42B2A2);
MakeUnkn(0x42B644, 1);
MakeNameEx(0x42B644, "UseThemes", 0x20);
MakeComm(0x42B644, "'function UseThemes:Boolean;'");
MakeCode(0x42B644);
MakeCode(0x42B661);
MakeCode(0x42B665);
MakeCode(0x42B668);
MakeFunction(0x42B644, 0x42B66B);
MakeCode(0x42B66C);
MakeCode(0x42B68E);
MakeCode(0x42B69C);
MakeCode(0x42B6A6);
MakeCode(0x42B6B3);
MakeCode(0x42B6B4);
MakeCode(0x42B6B9);
MakeFunction(0x42B66C, 0x42B6BD);
MakeUnkn(0x42B6C0, 1);
MakeNameEx(0x42B6C0, "shell32.SHFileOperationA", 0x20);
MakeComm(0x42B6C0, "'function shell32.SHFileOperationA:Integer; stdcall;'");
MakeCode(0x42B6C0);
MakeFunction(0x42B6C0, 0x42B6C6);
MakeUnkn(0x42B6C8, 1);
MakeNameEx(0x42B6C8, "shell32.ShellExecuteA", 0x20);
MakeComm(0x42B6C8, "'function shell32.ShellExecuteA(Operation:PAnsiChar; FileName:PAnsiChar; Parameters:PAnsiChar; Directory:PAnsiChar; ShowCmd:Integer):HINST; stdcall;'");
MakeCode(0x42B6C8);
MakeFunction(0x42B6C8, 0x42B6CE);
MakeUnkn(0x42B6D0, 1);
MakeNameEx(0x42B6D0, "RTTI_42B6D0_Interface_IShellFolder", 0);
MakeDword(0x42B6D0);
MakeUnkn(0x42B6D4, 1);
MakeNameEx(0x42B6D4, "", 0);
MakeByte(0x42B6D4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B6D5, 0x42B6E2);
MakeDword(0x42B6E2);
MakeByte(0x42B6E6);
MakeByte(0x42B6E7);
MakeArray(0x42B6E7, 16);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B6F7, 0x42B6FE);
MakeWord(0x42B6FE);
MakeWord(0x42B700);
MakeUnkn(0x42B704, 1);
MakeNameEx(0x42B704, "shell32.SHBrowseForFolderA", 0x20);
MakeComm(0x42B704, "'function shell32.SHBrowseForFolderA:PItemIDList; stdcall;'");
MakeCode(0x42B704);
MakeFunction(0x42B704, 0x42B70A);
MakeUnkn(0x42B70C, 1);
MakeNameEx(0x42B70C, "shell32.SHChangeNotify", 0x20);
MakeComm(0x42B70C, "'procedure shell32.SHChangeNotify(uFlags:UINT; dwItem1:Pointer; dwItem2:Pointer); stdcall;'");
MakeCode(0x42B70C);
MakeFunction(0x42B70C, 0x42B712);
MakeUnkn(0x42B714, 1);
MakeNameEx(0x42B714, "shell32.SHGetDesktopFolder", 0x20);
MakeComm(0x42B714, "'function shell32.SHGetDesktopFolder:HRESULT; stdcall;'");
MakeCode(0x42B714);
MakeFunction(0x42B714, 0x42B71A);
MakeUnkn(0x42B71C, 1);
MakeNameEx(0x42B71C, "shell32.SHGetMalloc", 0x20);
MakeComm(0x42B71C, "'function shell32.SHGetMalloc:HRESULT; stdcall;'");
MakeCode(0x42B71C);
MakeFunction(0x42B71C, 0x42B722);
MakeUnkn(0x42B724, 1);
MakeNameEx(0x42B724, "shell32.SHGetPathFromIDListA", 0x20);
MakeComm(0x42B724, "'function shell32.SHGetPathFromIDListA(pszPath:PAnsiChar):BOOL; stdcall;'");
MakeCode(0x42B724);
MakeFunction(0x42B724, 0x42B72A);
MakeUnkn(0x42B72C, 1);
MakeNameEx(0x42B72C, "shell32.SHGetSpecialFolderLocation", 0x20);
MakeComm(0x42B72C, "'function shell32.SHGetSpecialFolderLocation(nFolder:Integer; var ppidl:PItemIDList):HRESULT; stdcall;'");
MakeCode(0x42B72C);
MakeFunction(0x42B72C, 0x42B732);
MakeUnkn(0x42B734, 1);
MakeNameEx(0x42B734, "RTTI_42B734_Enumeration_TTextLayout", 0);
MakeDword(0x42B734);
MakeUnkn(0x42B738, 1);
MakeNameEx(0x42B738, "", 0);
MakeByte(0x42B738);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B739, 0x42B745);
MakeByte(0x42B745);
MakeDword(0x42B746);
MakeDword(0x42B74A);
MakeDword(0x42B74E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B752, 0x42B758);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B758, 0x42B761);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B761, 0x42B76A);
MakeUnkn(0x42B774, 1);
MakeNameEx(0x42B774, "RTTI_42B774_Enumeration_TEllipsisPosition", 0);
MakeDword(0x42B774);
MakeUnkn(0x42B778, 1);
MakeNameEx(0x42B778, "", 0);
MakeByte(0x42B778);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B779, 0x42B78B);
MakeByte(0x42B78B);
MakeDword(0x42B78C);
MakeDword(0x42B790);
MakeDword(0x42B794);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B798, 0x42B79F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B79F, 0x42B7AE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B7AE, 0x42B7BC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B7BC, 0x42B7CB);
MakeUnkn(0x42B7D4, 1);
MakeNameEx(0x42B7D4, "VMT_42B7D4_TCustomLabel", 0);
MakeDword(0x42B7D4);
MakeDword(0x42B7D8);
MakeDword(0x42B7DC);
MakeDword(0x42B7E0);
MakeDword(0x42B7E4);
MakeDword(0x42B7E8);
MakeDword(0x42B7EC);
MakeDword(0x42B7F0);
MakeUnkn(0x42B8B8, 1);
MakeNameEx(0x42B8B8, "TCustomLabel_DynamicTable", 0);
MakeWord(0x42B8B8);
MakeWord(0x42B8BA);
MakeWord(0x42B8BC);
MakeWord(0x42B8BE);
MakeWord(0x42B8C0);
MakeWord(0x42B8C2);
MakeDword(0x42B8C4);
MakeDword(0x42B8C8);
MakeDword(0x42B8CC);
MakeDword(0x42B8D0);
MakeDword(0x42B8D4);
MakeDword(0x42B7F4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B8D8, 0x42B8E5);
MakeDword(0x42B7F8);
MakeDword(0x42B7FC);
MakeDword(0x42B800);
MakeDword(0x42B804);
MakeDword(0x42B808);
MakeDword(0x42B80C);
MakeDword(0x42B810);
MakeDword(0x42B814);
MakeDword(0x42B818);
MakeDword(0x42B81C);
MakeComm(0x42B820, "'+0'");
MakeDword(0x42B820);
MakeComm(0x42B824, "'+4'");
MakeDword(0x42B824);
MakeComm(0x42B828, "'+8'");
MakeDword(0x42B828);
MakeComm(0x42B82C, "'+C'");
MakeDword(0x42B82C);
MakeComm(0x42B830, "'+10'");
MakeDword(0x42B830);
MakeComm(0x42B834, "'+14'");
MakeDword(0x42B834);
MakeComm(0x42B838, "'+18'");
MakeDword(0x42B838);
MakeComm(0x42B83C, "'+1C'");
MakeDword(0x42B83C);
MakeComm(0x42B840, "'+20'");
MakeDword(0x42B840);
MakeComm(0x42B844, "'+24'");
MakeDword(0x42B844);
MakeComm(0x42B848, "'+28'");
MakeDword(0x42B848);
MakeComm(0x42B84C, "'+2C'");
MakeDword(0x42B84C);
MakeComm(0x42B850, "'+30'");
MakeDword(0x42B850);
MakeComm(0x42B854, "'+34'");
MakeDword(0x42B854);
MakeComm(0x42B858, "'+38'");
MakeDword(0x42B858);
MakeComm(0x42B85C, "'+3C'");
MakeDword(0x42B85C);
MakeComm(0x42B860, "'+40'");
MakeDword(0x42B860);
MakeComm(0x42B864, "'+44'");
MakeDword(0x42B864);
MakeComm(0x42B868, "'+48'");
MakeDword(0x42B868);
MakeComm(0x42B86C, "'+4C'");
MakeDword(0x42B86C);
MakeComm(0x42B870, "'+50'");
MakeDword(0x42B870);
MakeComm(0x42B874, "'+54'");
MakeDword(0x42B874);
MakeComm(0x42B878, "'+58'");
MakeDword(0x42B878);
MakeComm(0x42B87C, "'+5C'");
MakeDword(0x42B87C);
MakeComm(0x42B880, "'+60'");
MakeDword(0x42B880);
MakeComm(0x42B884, "'+64'");
MakeDword(0x42B884);
MakeComm(0x42B888, "'+68'");
MakeDword(0x42B888);
MakeComm(0x42B88C, "'+6C'");
MakeDword(0x42B88C);
MakeComm(0x42B890, "'+70'");
MakeDword(0x42B890);
MakeComm(0x42B894, "'+74'");
MakeDword(0x42B894);
MakeComm(0x42B898, "'+78'");
MakeDword(0x42B898);
MakeComm(0x42B89C, "'+7C'");
MakeDword(0x42B89C);
MakeComm(0x42B8A0, "'+80'");
MakeDword(0x42B8A0);
MakeComm(0x42B8A4, "'+84'");
MakeDword(0x42B8A4);
MakeComm(0x42B8A8, "'+88'");
MakeDword(0x42B8A8);
MakeComm(0x42B8AC, "'+8C'");
MakeDword(0x42B8AC);
MakeComm(0x42B8B0, "'+90'");
MakeDword(0x42B8B0);
MakeComm(0x42B8B4, "'+94'");
MakeDword(0x42B8B4);
MakeUnkn(0x42B8E8, 1);
MakeNameEx(0x42B8E8, "RTTI_42B8E8_Class_TCustomLabel", 0);
MakeDword(0x42B8E8);
MakeUnkn(0x42B8EC, 1);
MakeNameEx(0x42B8EC, "", 0);
MakeByte(0x42B8EC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B8ED, 0x42B8FA);
MakeDword(0x42B8FA);
MakeDword(0x42B8FE);
MakeWord(0x42B902);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B904, 0x42B90D);
MakeWord(0x42B90D);
MakeUnkn(0x42B910, 1);
MakeNameEx(0x42B910, "VMT_42B910_TLabel", 0);
MakeDword(0x42B910);
MakeDword(0x42B914);
MakeDword(0x42B918);
MakeDword(0x42B91C);
MakeDword(0x42B920);
MakeDword(0x42B924);
MakeDword(0x42B928);
MakeDword(0x42B92C);
MakeDword(0x42B930);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42B9F4, 0x42B9FB);
MakeDword(0x42B934);
MakeDword(0x42B938);
MakeDword(0x42B93C);
MakeDword(0x42B940);
MakeDword(0x42B944);
MakeDword(0x42B948);
MakeDword(0x42B94C);
MakeDword(0x42B950);
MakeDword(0x42B954);
MakeDword(0x42B958);
MakeComm(0x42B95C, "'+0'");
MakeDword(0x42B95C);
MakeComm(0x42B960, "'+4'");
MakeDword(0x42B960);
MakeComm(0x42B964, "'+8'");
MakeDword(0x42B964);
MakeComm(0x42B968, "'+C'");
MakeDword(0x42B968);
MakeComm(0x42B96C, "'+10'");
MakeDword(0x42B96C);
MakeComm(0x42B970, "'+14'");
MakeDword(0x42B970);
MakeComm(0x42B974, "'+18'");
MakeDword(0x42B974);
MakeComm(0x42B978, "'+1C'");
MakeDword(0x42B978);
MakeComm(0x42B97C, "'+20'");
MakeDword(0x42B97C);
MakeComm(0x42B980, "'+24'");
MakeDword(0x42B980);
MakeComm(0x42B984, "'+28'");
MakeDword(0x42B984);
MakeComm(0x42B988, "'+2C'");
MakeDword(0x42B988);
MakeComm(0x42B98C, "'+30'");
MakeDword(0x42B98C);
MakeComm(0x42B990, "'+34'");
MakeDword(0x42B990);
MakeComm(0x42B994, "'+38'");
MakeDword(0x42B994);
MakeComm(0x42B998, "'+3C'");
MakeDword(0x42B998);
MakeComm(0x42B99C, "'+40'");
MakeDword(0x42B99C);
MakeComm(0x42B9A0, "'+44'");
MakeDword(0x42B9A0);
MakeComm(0x42B9A4, "'+48'");
MakeDword(0x42B9A4);
MakeComm(0x42B9A8, "'+4C'");
MakeDword(0x42B9A8);
MakeComm(0x42B9AC, "'+50'");
MakeDword(0x42B9AC);
MakeComm(0x42B9B0, "'+54'");
MakeDword(0x42B9B0);
MakeComm(0x42B9B4, "'+58'");
MakeDword(0x42B9B4);
MakeComm(0x42B9B8, "'+5C'");
MakeDword(0x42B9B8);
MakeComm(0x42B9BC, "'+60'");
MakeDword(0x42B9BC);
MakeComm(0x42B9C0, "'+64'");
MakeDword(0x42B9C0);
MakeComm(0x42B9C4, "'+68'");
MakeDword(0x42B9C4);
MakeComm(0x42B9C8, "'+6C'");
MakeDword(0x42B9C8);
MakeComm(0x42B9CC, "'+70'");
MakeDword(0x42B9CC);
MakeComm(0x42B9D0, "'+74'");
MakeDword(0x42B9D0);
MakeComm(0x42B9D4, "'+78'");
MakeDword(0x42B9D4);
MakeComm(0x42B9D8, "'+7C'");
MakeDword(0x42B9D8);
MakeComm(0x42B9DC, "'+80'");
MakeDword(0x42B9DC);
MakeComm(0x42B9E0, "'+84'");
MakeDword(0x42B9E0);
MakeComm(0x42B9E4, "'+88'");
MakeDword(0x42B9E4);
MakeComm(0x42B9E8, "'+8C'");
MakeDword(0x42B9E8);
MakeComm(0x42B9EC, "'+90'");
MakeDword(0x42B9EC);
MakeComm(0x42B9F0, "'+94'");
MakeDword(0x42B9F0);
MakeUnkn(0x42B9FC, 1);
MakeNameEx(0x42B9FC, "RTTI_42B9FC_Class_TLabel", 0);
MakeDword(0x42B9FC);
MakeUnkn(0x42BA00, 1);
MakeNameEx(0x42BA00, "", 0);
MakeByte(0x42BA00);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BA01, 0x42BA08);
MakeDword(0x42BA08);
MakeDword(0x42BA0C);
MakeWord(0x42BA10);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BA12, 0x42BA1B);
MakeWord(0x42BA1B);
MakeDword(0x42BA1D);
MakeDword(0x42BA21);
MakeDword(0x42BA25);
MakeDword(0x42BA29);
MakeDword(0x42BA2D);
MakeDword(0x42BA31);
MakeWord(0x42BA35);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BA37, 0x42BA3D);
MakeDword(0x42BA3D);
MakeDword(0x42BA41);
MakeDword(0x42BA45);
MakeDword(0x42BA49);
MakeDword(0x42BA4D);
MakeDword(0x42BA51);
MakeWord(0x42BA55);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BA57, 0x42BA61);
MakeDword(0x42BA61);
MakeDword(0x42BA65);
MakeDword(0x42BA69);
MakeDword(0x42BA6D);
MakeDword(0x42BA71);
MakeDword(0x42BA75);
MakeWord(0x42BA79);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BA7B, 0x42BA83);
MakeDword(0x42BA83);
MakeDword(0x42BA87);
MakeDword(0x42BA8B);
MakeDword(0x42BA8F);
MakeDword(0x42BA93);
MakeDword(0x42BA97);
MakeWord(0x42BA9B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BA9D, 0x42BAA6);
MakeDword(0x42BAA6);
MakeDword(0x42BAAA);
MakeDword(0x42BAAE);
MakeDword(0x42BAB2);
MakeDword(0x42BAB6);
MakeDword(0x42BABA);
MakeWord(0x42BABE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BAC0, 0x42BAC9);
MakeDword(0x42BAC9);
MakeDword(0x42BACD);
MakeDword(0x42BAD1);
MakeDword(0x42BAD5);
MakeDword(0x42BAD9);
MakeDword(0x42BADD);
MakeWord(0x42BAE1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BAE3, 0x42BAEB);
MakeDword(0x42BAEB);
MakeDword(0x42BAEF);
MakeDword(0x42BAF3);
MakeDword(0x42BAF7);
MakeDword(0x42BAFB);
MakeDword(0x42BAFF);
MakeWord(0x42BB03);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BB05, 0x42BB0B);
MakeDword(0x42BB0B);
MakeDword(0x42BB0F);
MakeDword(0x42BB13);
MakeDword(0x42BB17);
MakeDword(0x42BB1B);
MakeDword(0x42BB1F);
MakeWord(0x42BB23);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BB25, 0x42BB31);
MakeDword(0x42BB31);
MakeDword(0x42BB35);
MakeDword(0x42BB39);
MakeDword(0x42BB3D);
MakeDword(0x42BB41);
MakeDword(0x42BB45);
MakeWord(0x42BB49);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BB4B, 0x42BB56);
MakeDword(0x42BB56);
MakeDword(0x42BB5A);
MakeDword(0x42BB5E);
MakeDword(0x42BB62);
MakeDword(0x42BB66);
MakeDword(0x42BB6A);
MakeWord(0x42BB6E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BB70, 0x42BB79);
MakeDword(0x42BB79);
MakeDword(0x42BB7D);
MakeDword(0x42BB81);
MakeDword(0x42BB85);
MakeDword(0x42BB89);
MakeDword(0x42BB8D);
MakeWord(0x42BB91);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BB93, 0x42BB9C);
MakeDword(0x42BB9C);
MakeDword(0x42BBA0);
MakeDword(0x42BBA4);
MakeDword(0x42BBA8);
MakeDword(0x42BBAC);
MakeDword(0x42BBB0);
MakeWord(0x42BBB4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BBB6, 0x42BBC7);
MakeDword(0x42BBC7);
MakeDword(0x42BBCB);
MakeDword(0x42BBCF);
MakeDword(0x42BBD3);
MakeDword(0x42BBD7);
MakeDword(0x42BBDB);
MakeWord(0x42BBDF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BBE1, 0x42BBE9);
MakeDword(0x42BBE9);
MakeDword(0x42BBED);
MakeDword(0x42BBF1);
MakeDword(0x42BBF5);
MakeDword(0x42BBF9);
MakeDword(0x42BBFD);
MakeWord(0x42BC01);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BC03, 0x42BC10);
MakeDword(0x42BC10);
MakeDword(0x42BC14);
MakeDword(0x42BC18);
MakeDword(0x42BC1C);
MakeDword(0x42BC20);
MakeDword(0x42BC24);
MakeWord(0x42BC28);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BC2A, 0x42BC2F);
MakeDword(0x42BC2F);
MakeDword(0x42BC33);
MakeDword(0x42BC37);
MakeDword(0x42BC3B);
MakeDword(0x42BC3F);
MakeDword(0x42BC43);
MakeWord(0x42BC47);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BC49, 0x42BC58);
MakeDword(0x42BC58);
MakeDword(0x42BC5C);
MakeDword(0x42BC60);
MakeDword(0x42BC64);
MakeDword(0x42BC68);
MakeDword(0x42BC6C);
MakeWord(0x42BC70);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BC72, 0x42BC7E);
MakeDword(0x42BC7E);
MakeDword(0x42BC82);
MakeDword(0x42BC86);
MakeDword(0x42BC8A);
MakeDword(0x42BC8E);
MakeDword(0x42BC92);
MakeWord(0x42BC96);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BC98, 0x42BCA3);
MakeDword(0x42BCA3);
MakeDword(0x42BCA7);
MakeDword(0x42BCAB);
MakeDword(0x42BCAF);
MakeDword(0x42BCB3);
MakeDword(0x42BCB7);
MakeWord(0x42BCBB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BCBD, 0x42BCCC);
MakeDword(0x42BCCC);
MakeDword(0x42BCD0);
MakeDword(0x42BCD4);
MakeDword(0x42BCD8);
MakeDword(0x42BCDC);
MakeDword(0x42BCE0);
MakeWord(0x42BCE4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BCE6, 0x42BCF0);
MakeDword(0x42BCF0);
MakeDword(0x42BCF4);
MakeDword(0x42BCF8);
MakeDword(0x42BCFC);
MakeDword(0x42BD00);
MakeDword(0x42BD04);
MakeWord(0x42BD08);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BD0A, 0x42BD18);
MakeDword(0x42BD18);
MakeDword(0x42BD1C);
MakeDword(0x42BD20);
MakeDword(0x42BD24);
MakeDword(0x42BD28);
MakeDword(0x42BD2C);
MakeWord(0x42BD30);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BD32, 0x42BD3B);
MakeDword(0x42BD3B);
MakeDword(0x42BD3F);
MakeDword(0x42BD43);
MakeDword(0x42BD47);
MakeDword(0x42BD4B);
MakeDword(0x42BD4F);
MakeWord(0x42BD53);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BD55, 0x42BD61);
MakeDword(0x42BD61);
MakeDword(0x42BD65);
MakeDword(0x42BD69);
MakeDword(0x42BD6D);
MakeDword(0x42BD71);
MakeDword(0x42BD75);
MakeWord(0x42BD79);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BD7B, 0x42BD82);
MakeDword(0x42BD82);
MakeDword(0x42BD86);
MakeDword(0x42BD8A);
MakeDword(0x42BD8E);
MakeDword(0x42BD92);
MakeDword(0x42BD96);
MakeWord(0x42BD9A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BD9C, 0x42BDA4);
MakeDword(0x42BDA4);
MakeDword(0x42BDA8);
MakeDword(0x42BDAC);
MakeDword(0x42BDB0);
MakeDword(0x42BDB4);
MakeDword(0x42BDB8);
MakeWord(0x42BDBC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BDBE, 0x42BDC7);
MakeDword(0x42BDC7);
MakeDword(0x42BDCB);
MakeDword(0x42BDCF);
MakeDword(0x42BDD3);
MakeDword(0x42BDD7);
MakeDword(0x42BDDB);
MakeWord(0x42BDDF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BDE1, 0x42BDE9);
MakeDword(0x42BDE9);
MakeDword(0x42BDED);
MakeDword(0x42BDF1);
MakeDword(0x42BDF5);
MakeDword(0x42BDF9);
MakeDword(0x42BDFD);
MakeWord(0x42BE01);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BE03, 0x42BE12);
MakeDword(0x42BE12);
MakeDword(0x42BE16);
MakeDword(0x42BE1A);
MakeDword(0x42BE1E);
MakeDword(0x42BE22);
MakeDword(0x42BE26);
MakeWord(0x42BE2A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BE2C, 0x42BE37);
MakeDword(0x42BE37);
MakeDword(0x42BE3B);
MakeDword(0x42BE3F);
MakeDword(0x42BE43);
MakeDword(0x42BE47);
MakeDword(0x42BE4B);
MakeWord(0x42BE4F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BE51, 0x42BE5C);
MakeDword(0x42BE5C);
MakeDword(0x42BE60);
MakeDword(0x42BE64);
MakeDword(0x42BE68);
MakeDword(0x42BE6C);
MakeDword(0x42BE70);
MakeWord(0x42BE74);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BE76, 0x42BE81);
MakeDword(0x42BE81);
MakeDword(0x42BE85);
MakeDword(0x42BE89);
MakeDword(0x42BE8D);
MakeDword(0x42BE91);
MakeDword(0x42BE95);
MakeWord(0x42BE99);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BE9B, 0x42BEA5);
MakeDword(0x42BEA5);
MakeDword(0x42BEA9);
MakeDword(0x42BEAD);
MakeDword(0x42BEB1);
MakeDword(0x42BEB5);
MakeDword(0x42BEB9);
MakeWord(0x42BEBD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BEBF, 0x42BEC9);
MakeDword(0x42BEC9);
MakeDword(0x42BECD);
MakeDword(0x42BED1);
MakeDword(0x42BED5);
MakeDword(0x42BED9);
MakeDword(0x42BEDD);
MakeWord(0x42BEE1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BEE3, 0x42BEF3);
MakeDword(0x42BEF3);
MakeDword(0x42BEF7);
MakeDword(0x42BEFB);
MakeDword(0x42BEFF);
MakeDword(0x42BF03);
MakeDword(0x42BF07);
MakeWord(0x42BF0B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BF0D, 0x42BF19);
MakeDword(0x42BF19);
MakeDword(0x42BF1D);
MakeDword(0x42BF21);
MakeDword(0x42BF25);
MakeDword(0x42BF29);
MakeDword(0x42BF2D);
MakeWord(0x42BF31);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BF33, 0x42BF3F);
MakeDword(0x42BF3F);
MakeDword(0x42BF43);
MakeDword(0x42BF47);
MakeDword(0x42BF4B);
MakeDword(0x42BF4F);
MakeDword(0x42BF53);
MakeWord(0x42BF57);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BF59, 0x42BF63);
MakeDword(0x42BF63);
MakeDword(0x42BF67);
MakeDword(0x42BF6B);
MakeDword(0x42BF6F);
MakeDword(0x42BF73);
MakeDword(0x42BF77);
MakeWord(0x42BF7B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BF7D, 0x42BF8A);
MakeDword(0x42BF8A);
MakeDword(0x42BF8E);
MakeDword(0x42BF92);
MakeDword(0x42BF96);
MakeDword(0x42BF9A);
MakeDword(0x42BF9E);
MakeWord(0x42BFA2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BFA4, 0x42BFB1);
MakeDword(0x42BFB1);
MakeDword(0x42BFB5);
MakeDword(0x42BFB9);
MakeDword(0x42BFBD);
MakeDword(0x42BFC1);
MakeDword(0x42BFC5);
MakeWord(0x42BFC9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BFCB, 0x42BFD7);
MakeDword(0x42BFD7);
MakeDword(0x42BFDB);
MakeDword(0x42BFDF);
MakeDword(0x42BFE3);
MakeDword(0x42BFE7);
MakeDword(0x42BFEB);
MakeWord(0x42BFEF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42BFF1, 0x42BFFD);
MakeUnkn(0x42C000, 1);
MakeNameEx(0x42C000, "RTTI_42C000_Enumeration_TEditCharCase", 0);
MakeDword(0x42C000);
MakeUnkn(0x42C004, 1);
MakeNameEx(0x42C004, "", 0);
MakeByte(0x42C004);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C005, 0x42C013);
MakeByte(0x42C013);
MakeDword(0x42C014);
MakeDword(0x42C018);
MakeDword(0x42C01C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C020, 0x42C029);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C029, 0x42C035);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C035, 0x42C041);
MakeUnkn(0x42C04C, 1);
MakeNameEx(0x42C04C, "VMT_42C04C_TCustomEdit", 0);
MakeDword(0x42C04C);
MakeDword(0x42C050);
MakeDword(0x42C054);
MakeDword(0x42C058);
MakeDword(0x42C05C);
MakeDword(0x42C060);
MakeDword(0x42C064);
MakeDword(0x42C068);
MakeUnkn(0x42C190, 1);
MakeNameEx(0x42C190, "TCustomEdit_DynamicTable", 0);
MakeWord(0x42C190);
MakeWord(0x42C192);
MakeWord(0x42C194);
MakeWord(0x42C196);
MakeWord(0x42C198);
MakeWord(0x42C19A);
MakeWord(0x42C19C);
MakeWord(0x42C19E);
MakeWord(0x42C1A0);
MakeDword(0x42C1A2);
MakeDword(0x42C1A6);
MakeDword(0x42C1AA);
MakeDword(0x42C1AE);
MakeDword(0x42C1B2);
MakeDword(0x42C1B6);
MakeDword(0x42C1BA);
MakeDword(0x42C1BE);
MakeDword(0x42C06C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C1C2, 0x42C1CE);
MakeDword(0x42C070);
MakeDword(0x42C074);
MakeDword(0x42C078);
MakeDword(0x42C07C);
MakeDword(0x42C080);
MakeDword(0x42C084);
MakeDword(0x42C088);
MakeDword(0x42C08C);
MakeDword(0x42C090);
MakeDword(0x42C094);
MakeComm(0x42C098, "'+0'");
MakeDword(0x42C098);
MakeComm(0x42C09C, "'+4'");
MakeDword(0x42C09C);
MakeComm(0x42C0A0, "'+8'");
MakeDword(0x42C0A0);
MakeComm(0x42C0A4, "'+C'");
MakeDword(0x42C0A4);
MakeComm(0x42C0A8, "'+10'");
MakeDword(0x42C0A8);
MakeComm(0x42C0AC, "'+14'");
MakeDword(0x42C0AC);
MakeComm(0x42C0B0, "'+18'");
MakeDword(0x42C0B0);
MakeComm(0x42C0B4, "'+1C'");
MakeDword(0x42C0B4);
MakeComm(0x42C0B8, "'+20'");
MakeDword(0x42C0B8);
MakeComm(0x42C0BC, "'+24'");
MakeDword(0x42C0BC);
MakeComm(0x42C0C0, "'+28'");
MakeDword(0x42C0C0);
MakeComm(0x42C0C4, "'+2C'");
MakeDword(0x42C0C4);
MakeComm(0x42C0C8, "'+30'");
MakeDword(0x42C0C8);
MakeComm(0x42C0CC, "'+34'");
MakeDword(0x42C0CC);
MakeComm(0x42C0D0, "'+38'");
MakeDword(0x42C0D0);
MakeComm(0x42C0D4, "'+3C'");
MakeDword(0x42C0D4);
MakeComm(0x42C0D8, "'+40'");
MakeDword(0x42C0D8);
MakeComm(0x42C0DC, "'+44'");
MakeDword(0x42C0DC);
MakeComm(0x42C0E0, "'+48'");
MakeDword(0x42C0E0);
MakeComm(0x42C0E4, "'+4C'");
MakeDword(0x42C0E4);
MakeComm(0x42C0E8, "'+50'");
MakeDword(0x42C0E8);
MakeComm(0x42C0EC, "'+54'");
MakeDword(0x42C0EC);
MakeComm(0x42C0F0, "'+58'");
MakeDword(0x42C0F0);
MakeComm(0x42C0F4, "'+5C'");
MakeDword(0x42C0F4);
MakeComm(0x42C0F8, "'+60'");
MakeDword(0x42C0F8);
MakeComm(0x42C0FC, "'+64'");
MakeDword(0x42C0FC);
MakeComm(0x42C100, "'+68'");
MakeDword(0x42C100);
MakeComm(0x42C104, "'+6C'");
MakeDword(0x42C104);
MakeComm(0x42C108, "'+70'");
MakeDword(0x42C108);
MakeComm(0x42C10C, "'+74'");
MakeDword(0x42C10C);
MakeComm(0x42C110, "'+78'");
MakeDword(0x42C110);
MakeComm(0x42C114, "'+7C'");
MakeDword(0x42C114);
MakeComm(0x42C118, "'+80'");
MakeDword(0x42C118);
MakeComm(0x42C11C, "'+84'");
MakeDword(0x42C11C);
MakeComm(0x42C120, "'+88'");
MakeDword(0x42C120);
MakeComm(0x42C124, "'+8C'");
MakeDword(0x42C124);
MakeComm(0x42C128, "'+90'");
MakeDword(0x42C128);
MakeComm(0x42C12C, "'+94'");
MakeDword(0x42C12C);
MakeComm(0x42C130, "'+98'");
MakeDword(0x42C130);
MakeComm(0x42C134, "'+9C'");
MakeDword(0x42C134);
MakeComm(0x42C138, "'+A0'");
MakeDword(0x42C138);
MakeComm(0x42C13C, "'+A4'");
MakeDword(0x42C13C);
MakeComm(0x42C140, "'+A8'");
MakeDword(0x42C140);
MakeComm(0x42C144, "'+AC'");
MakeDword(0x42C144);
MakeComm(0x42C148, "'+B0'");
MakeDword(0x42C148);
MakeComm(0x42C14C, "'+B4'");
MakeDword(0x42C14C);
MakeComm(0x42C150, "'+B8'");
MakeDword(0x42C150);
MakeComm(0x42C154, "'+BC'");
MakeDword(0x42C154);
MakeComm(0x42C158, "'+C0'");
MakeDword(0x42C158);
MakeComm(0x42C15C, "'+C4'");
MakeDword(0x42C15C);
MakeComm(0x42C160, "'+C8'");
MakeDword(0x42C160);
MakeComm(0x42C164, "'+CC'");
MakeDword(0x42C164);
MakeComm(0x42C168, "'+D0'");
MakeDword(0x42C168);
MakeComm(0x42C16C, "'+D4'");
MakeDword(0x42C16C);
MakeComm(0x42C170, "'+D8'");
MakeDword(0x42C170);
MakeComm(0x42C174, "'+DC'");
MakeDword(0x42C174);
MakeComm(0x42C178, "'+E0'");
MakeDword(0x42C178);
MakeComm(0x42C17C, "'+E4'");
MakeDword(0x42C17C);
MakeComm(0x42C180, "'+E8'");
MakeDword(0x42C180);
MakeComm(0x42C184, "'+EC'");
MakeDword(0x42C184);
MakeComm(0x42C188, "'+F0'");
MakeDword(0x42C188);
MakeComm(0x42C18C, "'+F4'");
MakeDword(0x42C18C);
MakeUnkn(0x42C1D0, 1);
MakeNameEx(0x42C1D0, "RTTI_42C1D0_Class_TCustomEdit", 0);
MakeDword(0x42C1D0);
MakeUnkn(0x42C1D4, 1);
MakeNameEx(0x42C1D4, "", 0);
MakeByte(0x42C1D4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C1D5, 0x42C1E1);
MakeDword(0x42C1E1);
MakeDword(0x42C1E5);
MakeWord(0x42C1E9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C1EB, 0x42C1F4);
MakeWord(0x42C1F4);
MakeDword(0x42C1F6);
MakeDword(0x42C1FA);
MakeDword(0x42C1FE);
MakeDword(0x42C202);
MakeDword(0x42C206);
MakeDword(0x42C20A);
MakeWord(0x42C20E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C210, 0x42C218);
MakeUnkn(0x42C218, 1);
MakeNameEx(0x42C218, "VMT_42C218_TEdit", 0);
MakeDword(0x42C218);
MakeDword(0x42C21C);
MakeDword(0x42C220);
MakeDword(0x42C224);
MakeDword(0x42C228);
MakeDword(0x42C22C);
MakeDword(0x42C230);
MakeDword(0x42C234);
MakeDword(0x42C238);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C35C, 0x42C362);
MakeDword(0x42C23C);
MakeDword(0x42C240);
MakeDword(0x42C244);
MakeDword(0x42C248);
MakeDword(0x42C24C);
MakeDword(0x42C250);
MakeDword(0x42C254);
MakeDword(0x42C258);
MakeDword(0x42C25C);
MakeDword(0x42C260);
MakeComm(0x42C264, "'+0'");
MakeDword(0x42C264);
MakeComm(0x42C268, "'+4'");
MakeDword(0x42C268);
MakeComm(0x42C26C, "'+8'");
MakeDword(0x42C26C);
MakeComm(0x42C270, "'+C'");
MakeDword(0x42C270);
MakeComm(0x42C274, "'+10'");
MakeDword(0x42C274);
MakeComm(0x42C278, "'+14'");
MakeDword(0x42C278);
MakeComm(0x42C27C, "'+18'");
MakeDword(0x42C27C);
MakeComm(0x42C280, "'+1C'");
MakeDword(0x42C280);
MakeComm(0x42C284, "'+20'");
MakeDword(0x42C284);
MakeComm(0x42C288, "'+24'");
MakeDword(0x42C288);
MakeComm(0x42C28C, "'+28'");
MakeDword(0x42C28C);
MakeComm(0x42C290, "'+2C'");
MakeDword(0x42C290);
MakeComm(0x42C294, "'+30'");
MakeDword(0x42C294);
MakeComm(0x42C298, "'+34'");
MakeDword(0x42C298);
MakeComm(0x42C29C, "'+38'");
MakeDword(0x42C29C);
MakeComm(0x42C2A0, "'+3C'");
MakeDword(0x42C2A0);
MakeComm(0x42C2A4, "'+40'");
MakeDword(0x42C2A4);
MakeComm(0x42C2A8, "'+44'");
MakeDword(0x42C2A8);
MakeComm(0x42C2AC, "'+48'");
MakeDword(0x42C2AC);
MakeComm(0x42C2B0, "'+4C'");
MakeDword(0x42C2B0);
MakeComm(0x42C2B4, "'+50'");
MakeDword(0x42C2B4);
MakeComm(0x42C2B8, "'+54'");
MakeDword(0x42C2B8);
MakeComm(0x42C2BC, "'+58'");
MakeDword(0x42C2BC);
MakeComm(0x42C2C0, "'+5C'");
MakeDword(0x42C2C0);
MakeComm(0x42C2C4, "'+60'");
MakeDword(0x42C2C4);
MakeComm(0x42C2C8, "'+64'");
MakeDword(0x42C2C8);
MakeComm(0x42C2CC, "'+68'");
MakeDword(0x42C2CC);
MakeComm(0x42C2D0, "'+6C'");
MakeDword(0x42C2D0);
MakeComm(0x42C2D4, "'+70'");
MakeDword(0x42C2D4);
MakeComm(0x42C2D8, "'+74'");
MakeDword(0x42C2D8);
MakeComm(0x42C2DC, "'+78'");
MakeDword(0x42C2DC);
MakeComm(0x42C2E0, "'+7C'");
MakeDword(0x42C2E0);
MakeComm(0x42C2E4, "'+80'");
MakeDword(0x42C2E4);
MakeComm(0x42C2E8, "'+84'");
MakeDword(0x42C2E8);
MakeComm(0x42C2EC, "'+88'");
MakeDword(0x42C2EC);
MakeComm(0x42C2F0, "'+8C'");
MakeDword(0x42C2F0);
MakeComm(0x42C2F4, "'+90'");
MakeDword(0x42C2F4);
MakeComm(0x42C2F8, "'+94'");
MakeDword(0x42C2F8);
MakeComm(0x42C2FC, "'+98'");
MakeDword(0x42C2FC);
MakeComm(0x42C300, "'+9C'");
MakeDword(0x42C300);
MakeComm(0x42C304, "'+A0'");
MakeDword(0x42C304);
MakeComm(0x42C308, "'+A4'");
MakeDword(0x42C308);
MakeComm(0x42C30C, "'+A8'");
MakeDword(0x42C30C);
MakeComm(0x42C310, "'+AC'");
MakeDword(0x42C310);
MakeComm(0x42C314, "'+B0'");
MakeDword(0x42C314);
MakeComm(0x42C318, "'+B4'");
MakeDword(0x42C318);
MakeComm(0x42C31C, "'+B8'");
MakeDword(0x42C31C);
MakeComm(0x42C320, "'+BC'");
MakeDword(0x42C320);
MakeComm(0x42C324, "'+C0'");
MakeDword(0x42C324);
MakeComm(0x42C328, "'+C4'");
MakeDword(0x42C328);
MakeComm(0x42C32C, "'+C8'");
MakeDword(0x42C32C);
MakeComm(0x42C330, "'+CC'");
MakeDword(0x42C330);
MakeComm(0x42C334, "'+D0'");
MakeDword(0x42C334);
MakeComm(0x42C338, "'+D4'");
MakeDword(0x42C338);
MakeComm(0x42C33C, "'+D8'");
MakeDword(0x42C33C);
MakeComm(0x42C340, "'+DC'");
MakeDword(0x42C340);
MakeComm(0x42C344, "'+E0'");
MakeDword(0x42C344);
MakeComm(0x42C348, "'+E4'");
MakeDword(0x42C348);
MakeComm(0x42C34C, "'+E8'");
MakeDword(0x42C34C);
MakeComm(0x42C350, "'+EC'");
MakeDword(0x42C350);
MakeComm(0x42C354, "'+F0'");
MakeDword(0x42C354);
MakeComm(0x42C358, "'+F4'");
MakeDword(0x42C358);
MakeUnkn(0x42C364, 1);
MakeNameEx(0x42C364, "RTTI_42C364_Class_TEdit", 0);
MakeDword(0x42C364);
MakeUnkn(0x42C368, 1);
MakeNameEx(0x42C368, "", 0);
MakeByte(0x42C368);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C369, 0x42C36F);
MakeDword(0x42C36F);
MakeDword(0x42C373);
MakeWord(0x42C377);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C379, 0x42C382);
MakeWord(0x42C382);
MakeDword(0x42C384);
MakeDword(0x42C388);
MakeDword(0x42C38C);
MakeDword(0x42C390);
MakeDword(0x42C394);
MakeDword(0x42C398);
MakeWord(0x42C39C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C39E, 0x42C3A4);
MakeDword(0x42C3A4);
MakeDword(0x42C3A8);
MakeDword(0x42C3AC);
MakeDword(0x42C3B0);
MakeDword(0x42C3B4);
MakeDword(0x42C3B8);
MakeWord(0x42C3BC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C3BE, 0x42C3C6);
MakeDword(0x42C3C6);
MakeDword(0x42C3CA);
MakeDword(0x42C3CE);
MakeDword(0x42C3D2);
MakeDword(0x42C3D6);
MakeDword(0x42C3DA);
MakeWord(0x42C3DE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C3E0, 0x42C3EB);
MakeDword(0x42C3EB);
MakeDword(0x42C3EF);
MakeDword(0x42C3F3);
MakeDword(0x42C3F7);
MakeDword(0x42C3FB);
MakeDword(0x42C3FF);
MakeWord(0x42C403);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C405, 0x42C40E);
MakeDword(0x42C40E);
MakeDword(0x42C412);
MakeDword(0x42C416);
MakeDword(0x42C41A);
MakeDword(0x42C41E);
MakeDword(0x42C422);
MakeWord(0x42C426);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C428, 0x42C433);
MakeDword(0x42C433);
MakeDword(0x42C437);
MakeDword(0x42C43B);
MakeDword(0x42C43F);
MakeDword(0x42C443);
MakeDword(0x42C447);
MakeWord(0x42C44B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C44D, 0x42C458);
MakeDword(0x42C458);
MakeDword(0x42C45C);
MakeDword(0x42C460);
MakeDword(0x42C464);
MakeDword(0x42C468);
MakeDword(0x42C46C);
MakeWord(0x42C470);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C472, 0x42C47C);
MakeDword(0x42C47C);
MakeDword(0x42C480);
MakeDword(0x42C484);
MakeDword(0x42C488);
MakeDword(0x42C48C);
MakeDword(0x42C490);
MakeWord(0x42C494);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C496, 0x42C4A1);
MakeDword(0x42C4A1);
MakeDword(0x42C4A5);
MakeDword(0x42C4A9);
MakeDword(0x42C4AD);
MakeDword(0x42C4B1);
MakeDword(0x42C4B5);
MakeWord(0x42C4B9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C4BB, 0x42C4C6);
MakeDword(0x42C4C6);
MakeDword(0x42C4CA);
MakeDword(0x42C4CE);
MakeDword(0x42C4D2);
MakeDword(0x42C4D6);
MakeDword(0x42C4DA);
MakeWord(0x42C4DE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C4E0, 0x42C4E9);
MakeDword(0x42C4E9);
MakeDword(0x42C4ED);
MakeDword(0x42C4F1);
MakeDword(0x42C4F5);
MakeDword(0x42C4F9);
MakeDword(0x42C4FD);
MakeWord(0x42C501);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C503, 0x42C50F);
MakeDword(0x42C50F);
MakeDword(0x42C513);
MakeDword(0x42C517);
MakeDword(0x42C51B);
MakeDword(0x42C51F);
MakeDword(0x42C523);
MakeWord(0x42C527);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C529, 0x42C532);
MakeDword(0x42C532);
MakeDword(0x42C536);
MakeDword(0x42C53A);
MakeDword(0x42C53E);
MakeDword(0x42C542);
MakeDword(0x42C546);
MakeWord(0x42C54A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C54C, 0x42C552);
MakeDword(0x42C552);
MakeDword(0x42C556);
MakeDword(0x42C55A);
MakeDword(0x42C55E);
MakeDword(0x42C562);
MakeDword(0x42C566);
MakeWord(0x42C56A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C56C, 0x42C578);
MakeDword(0x42C578);
MakeDword(0x42C57C);
MakeDword(0x42C580);
MakeDword(0x42C584);
MakeDword(0x42C588);
MakeDword(0x42C58C);
MakeWord(0x42C590);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C592, 0x42C598);
MakeDword(0x42C598);
MakeDword(0x42C59C);
MakeDword(0x42C5A0);
MakeDword(0x42C5A4);
MakeDword(0x42C5A8);
MakeDword(0x42C5AC);
MakeWord(0x42C5B0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C5B2, 0x42C5BD);
MakeDword(0x42C5BD);
MakeDword(0x42C5C1);
MakeDword(0x42C5C5);
MakeDword(0x42C5C9);
MakeDword(0x42C5CD);
MakeDword(0x42C5D1);
MakeWord(0x42C5D5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C5D7, 0x42C5E0);
MakeDword(0x42C5E0);
MakeDword(0x42C5E4);
MakeDword(0x42C5E8);
MakeDword(0x42C5EC);
MakeDword(0x42C5F0);
MakeDword(0x42C5F4);
MakeWord(0x42C5F8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C5FA, 0x42C603);
MakeDword(0x42C603);
MakeDword(0x42C607);
MakeDword(0x42C60B);
MakeDword(0x42C60F);
MakeDword(0x42C613);
MakeDword(0x42C617);
MakeWord(0x42C61B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C61D, 0x42C625);
MakeDword(0x42C625);
MakeDword(0x42C629);
MakeDword(0x42C62D);
MakeDword(0x42C631);
MakeDword(0x42C635);
MakeDword(0x42C639);
MakeWord(0x42C63D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C63F, 0x42C644);
MakeDword(0x42C644);
MakeDword(0x42C648);
MakeDword(0x42C64C);
MakeDword(0x42C650);
MakeDword(0x42C654);
MakeDword(0x42C658);
MakeWord(0x42C65C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C65E, 0x42C66C);
MakeDword(0x42C66C);
MakeDword(0x42C670);
MakeDword(0x42C674);
MakeDword(0x42C678);
MakeDword(0x42C67C);
MakeDword(0x42C680);
MakeWord(0x42C684);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C686, 0x42C68E);
MakeDword(0x42C68E);
MakeDword(0x42C692);
MakeDword(0x42C696);
MakeDword(0x42C69A);
MakeDword(0x42C69E);
MakeDword(0x42C6A2);
MakeWord(0x42C6A6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C6A8, 0x42C6B0);
MakeDword(0x42C6B0);
MakeDword(0x42C6B4);
MakeDword(0x42C6B8);
MakeDword(0x42C6BC);
MakeDword(0x42C6C0);
MakeDword(0x42C6C4);
MakeWord(0x42C6C8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C6CA, 0x42C6D4);
MakeDword(0x42C6D4);
MakeDword(0x42C6D8);
MakeDword(0x42C6DC);
MakeDword(0x42C6E0);
MakeDword(0x42C6E4);
MakeDword(0x42C6E8);
MakeWord(0x42C6EC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C6EE, 0x42C6F9);
MakeDword(0x42C6F9);
MakeDword(0x42C6FD);
MakeDword(0x42C701);
MakeDword(0x42C705);
MakeDword(0x42C709);
MakeDword(0x42C70D);
MakeWord(0x42C711);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C713, 0x42C722);
MakeDword(0x42C722);
MakeDword(0x42C726);
MakeDword(0x42C72A);
MakeDword(0x42C72E);
MakeDword(0x42C732);
MakeDword(0x42C736);
MakeWord(0x42C73A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C73C, 0x42C748);
MakeDword(0x42C748);
MakeDword(0x42C74C);
MakeDword(0x42C750);
MakeDword(0x42C754);
MakeDword(0x42C758);
MakeDword(0x42C75C);
MakeWord(0x42C760);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C762, 0x42C76E);
MakeDword(0x42C76E);
MakeDword(0x42C772);
MakeDword(0x42C776);
MakeDword(0x42C77A);
MakeDword(0x42C77E);
MakeDword(0x42C782);
MakeWord(0x42C786);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C788, 0x42C793);
MakeDword(0x42C793);
MakeDword(0x42C797);
MakeDword(0x42C79B);
MakeDword(0x42C79F);
MakeDword(0x42C7A3);
MakeDword(0x42C7A7);
MakeWord(0x42C7AB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C7AD, 0x42C7BC);
MakeDword(0x42C7BC);
MakeDword(0x42C7C0);
MakeDword(0x42C7C4);
MakeDword(0x42C7C8);
MakeDword(0x42C7CC);
MakeDword(0x42C7D0);
MakeWord(0x42C7D4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C7D6, 0x42C7E3);
MakeDword(0x42C7E3);
MakeDword(0x42C7E7);
MakeDword(0x42C7EB);
MakeDword(0x42C7EF);
MakeDword(0x42C7F3);
MakeDword(0x42C7F7);
MakeWord(0x42C7FB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C7FD, 0x42C807);
MakeDword(0x42C807);
MakeDword(0x42C80B);
MakeDword(0x42C80F);
MakeDword(0x42C813);
MakeDword(0x42C817);
MakeDword(0x42C81B);
MakeWord(0x42C81F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C821, 0x42C82A);
MakeDword(0x42C82A);
MakeDword(0x42C82E);
MakeDword(0x42C832);
MakeDword(0x42C836);
MakeDword(0x42C83A);
MakeDword(0x42C83E);
MakeWord(0x42C842);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C844, 0x42C84D);
MakeDword(0x42C84D);
MakeDword(0x42C851);
MakeDword(0x42C855);
MakeDword(0x42C859);
MakeDword(0x42C85D);
MakeDword(0x42C861);
MakeWord(0x42C865);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C867, 0x42C870);
MakeDword(0x42C870);
MakeDword(0x42C874);
MakeDword(0x42C878);
MakeDword(0x42C87C);
MakeDword(0x42C880);
MakeDword(0x42C884);
MakeWord(0x42C888);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C88A, 0x42C892);
MakeDword(0x42C892);
MakeDword(0x42C896);
MakeDword(0x42C89A);
MakeDword(0x42C89E);
MakeDword(0x42C8A2);
MakeDword(0x42C8A6);
MakeWord(0x42C8AA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C8AC, 0x42C8B1);
MakeDword(0x42C8B1);
MakeDword(0x42C8B5);
MakeDword(0x42C8B9);
MakeDword(0x42C8BD);
MakeDword(0x42C8C1);
MakeDword(0x42C8C5);
MakeWord(0x42C8C9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C8CB, 0x42C8D3);
MakeDword(0x42C8D3);
MakeDword(0x42C8D7);
MakeDword(0x42C8DB);
MakeDword(0x42C8DF);
MakeDword(0x42C8E3);
MakeDword(0x42C8E7);
MakeWord(0x42C8EB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C8ED, 0x42C8F6);
MakeDword(0x42C8F6);
MakeDword(0x42C8FA);
MakeDword(0x42C8FE);
MakeDword(0x42C902);
MakeDword(0x42C906);
MakeDword(0x42C90A);
MakeWord(0x42C90E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C910, 0x42C918);
MakeDword(0x42C918);
MakeDword(0x42C91C);
MakeDword(0x42C920);
MakeDword(0x42C924);
MakeDword(0x42C928);
MakeDword(0x42C92C);
MakeWord(0x42C930);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C932, 0x42C941);
MakeDword(0x42C941);
MakeDword(0x42C945);
MakeDword(0x42C949);
MakeDword(0x42C94D);
MakeDword(0x42C951);
MakeDword(0x42C955);
MakeWord(0x42C959);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C95B, 0x42C966);
MakeDword(0x42C966);
MakeDword(0x42C96A);
MakeDword(0x42C96E);
MakeDword(0x42C972);
MakeDword(0x42C976);
MakeDword(0x42C97A);
MakeWord(0x42C97E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C980, 0x42C98B);
MakeDword(0x42C98B);
MakeDword(0x42C98F);
MakeDword(0x42C993);
MakeDword(0x42C997);
MakeDword(0x42C99B);
MakeDword(0x42C99F);
MakeWord(0x42C9A3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C9A5, 0x42C9B0);
MakeDword(0x42C9B0);
MakeDword(0x42C9B4);
MakeDword(0x42C9B8);
MakeDword(0x42C9BC);
MakeDword(0x42C9C0);
MakeDword(0x42C9C4);
MakeWord(0x42C9C8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C9CA, 0x42C9D4);
MakeDword(0x42C9D4);
MakeDword(0x42C9D8);
MakeDword(0x42C9DC);
MakeDword(0x42C9E0);
MakeDword(0x42C9E4);
MakeDword(0x42C9E8);
MakeWord(0x42C9EC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42C9EE, 0x42C9F8);
MakeDword(0x42C9F8);
MakeDword(0x42C9FC);
MakeDword(0x42CA00);
MakeDword(0x42CA04);
MakeDword(0x42CA08);
MakeDword(0x42CA0C);
MakeWord(0x42CA10);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42CA12, 0x42CA1A);
MakeDword(0x42CA1A);
MakeDword(0x42CA1E);
MakeDword(0x42CA22);
MakeDword(0x42CA26);
MakeDword(0x42CA2A);
MakeDword(0x42CA2E);
MakeWord(0x42CA32);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42CA34, 0x42CA3B);
MakeDword(0x42CA3B);
MakeDword(0x42CA3F);
MakeDword(0x42CA43);
MakeDword(0x42CA47);
MakeDword(0x42CA4B);
MakeDword(0x42CA4F);
MakeWord(0x42CA53);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42CA55, 0x42CA5F);
MakeDword(0x42CA5F);
MakeDword(0x42CA63);
MakeDword(0x42CA67);
MakeDword(0x42CA6B);
MakeDword(0x42CA6F);
MakeDword(0x42CA73);
MakeWord(0x42CA77);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42CA79, 0x42CA84);
MakeDword(0x42CA84);
MakeDword(0x42CA88);
MakeDword(0x42CA8C);
MakeDword(0x42CA90);
MakeDword(0x42CA94);
MakeDword(0x42CA98);
MakeWord(0x42CA9C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42CA9E, 0x42CAA6);
MakeDword(0x42CAA6);
MakeDword(0x42CAAA);
MakeDword(0x42CAAE);
MakeDword(0x42CAB2);
MakeDword(0x42CAB6);
MakeDword(0x42CABA);
MakeWord(0x42CABE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42CAC0, 0x42CAD0);
MakeDword(0x42CAD0);
MakeDword(0x42CAD4);
MakeDword(0x42CAD8);
MakeDword(0x42CADC);
MakeDword(0x42CAE0);
MakeDword(0x42CAE4);
MakeWord(0x42CAE8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42CAEA, 0x42CAF6);
MakeDword(0x42CAF6);
MakeDword(0x42CAFA);
MakeDword(0x42CAFE);
MakeDword(0x42CB02);
MakeDword(0x42CB06);
MakeDword(0x42CB0A);
MakeWord(0x42CB0E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42CB10, 0x42CB1D);
MakeDword(0x42CB1D);
MakeDword(0x42CB21);
MakeDword(0x42CB25);
MakeDword(0x42CB29);
MakeDword(0x42CB2D);
MakeDword(0x42CB31);
MakeWord(0x42CB35);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42CB37, 0x42CB44);
MakeDword(0x42CB44);
MakeDword(0x42CB48);
MakeDword(0x42CB4C);
MakeDword(0x42CB50);
MakeDword(0x42CB54);
MakeDword(0x42CB58);
MakeWord(0x42CB5C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42CB5E, 0x42CB6A);
MakeDword(0x42CB6A);
MakeDword(0x42CB6E);
MakeDword(0x42CB72);
MakeDword(0x42CB76);
MakeDword(0x42CB7A);
MakeDword(0x42CB7E);
MakeWord(0x42CB82);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42CB84, 0x42CB8E);
MakeDword(0x42CB8E);
MakeDword(0x42CB92);
MakeDword(0x42CB96);
MakeDword(0x42CB9A);
MakeDword(0x42CB9E);
MakeDword(0x42CBA2);
MakeWord(0x42CBA6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42CBA8, 0x42CBB4);
MakeDword(0x42CBB4);
MakeDword(0x42CBB8);
MakeDword(0x42CBBC);
MakeDword(0x42CBC0);
MakeDword(0x42CBC4);
MakeDword(0x42CBC8);
MakeWord(0x42CBCC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42CBCE, 0x42CBDA);
MakeUnkn(0x42CBDC, 1);
MakeNameEx(0x42CBDC, "RTTI_42CBDC_Enumeration_TScrollStyle", 0);
MakeDword(0x42CBDC);
MakeUnkn(0x42CBE0, 1);
MakeNameEx(0x42CBE0, "", 0);
MakeByte(0x42CBE0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42CBE1, 0x42CBEE);
MakeByte(0x42CBEE);
MakeDword(0x42CBEF);
MakeDword(0x42CBF3);
MakeDword(0x42CBF7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42CBFB, 0x42CC02);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42CC02, 0x42CC0F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42CC0F, 0x42CC1A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42CC1A, 0x42CC21);
MakeUnkn(0x42CC2C, 1);
MakeNameEx(0x42CC2C, "VMT_42CC2C_TCustomMemo", 0);
MakeDword(0x42CC2C);
MakeDword(0x42CC30);
MakeDword(0x42CC34);
MakeDword(0x42CC38);
MakeDword(0x42CC3C);
MakeDword(0x42CC40);
MakeDword(0x42CC44);
MakeDword(0x42CC48);
MakeUnkn(0x42CD78, 1);
MakeNameEx(0x42CD78, "TCustomMemo_DynamicTable", 0);
MakeWord(0x42CD78);
MakeWord(0x42CD7A);
MakeWord(0x42CD7C);
MakeWord(0x42CD7E);
MakeWord(0x42CD80);
MakeDword(0x42CD82);
MakeDword(0x42CD86);
MakeDword(0x42CD8A);
MakeDword(0x42CD8E);
MakeDword(0x42CC4C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42CD92, 0x42CD9E);
MakeDword(0x42CC50);
MakeDword(0x42CC54);
MakeDword(0x42CC58);
MakeDword(0x42CC5C);
MakeDword(0x42CC60);
MakeDword(0x42CC64);
MakeDword(0x42CC68);
MakeDword(0x42CC6C);
MakeDword(0x42CC70);
MakeDword(0x42CC74);
MakeComm(0x42CC78, "'+0'");
MakeDword(0x42CC78);
MakeComm(0x42CC7C, "'+4'");
MakeDword(0x42CC7C);
MakeComm(0x42CC80, "'+8'");
MakeDword(0x42CC80);
MakeComm(0x42CC84, "'+C'");
MakeDword(0x42CC84);
MakeComm(0x42CC88, "'+10'");
MakeDword(0x42CC88);
MakeComm(0x42CC8C, "'+14'");
MakeDword(0x42CC8C);
MakeComm(0x42CC90, "'+18'");
MakeDword(0x42CC90);
MakeComm(0x42CC94, "'+1C'");
MakeDword(0x42CC94);
MakeComm(0x42CC98, "'+20'");
MakeDword(0x42CC98);
MakeComm(0x42CC9C, "'+24'");
MakeDword(0x42CC9C);
MakeComm(0x42CCA0, "'+28'");
MakeDword(0x42CCA0);
MakeComm(0x42CCA4, "'+2C'");
MakeDword(0x42CCA4);
MakeComm(0x42CCA8, "'+30'");
MakeDword(0x42CCA8);
MakeComm(0x42CCAC, "'+34'");
MakeDword(0x42CCAC);
MakeComm(0x42CCB0, "'+38'");
MakeDword(0x42CCB0);
MakeComm(0x42CCB4, "'+3C'");
MakeDword(0x42CCB4);
MakeComm(0x42CCB8, "'+40'");
MakeDword(0x42CCB8);
MakeComm(0x42CCBC, "'+44'");
MakeDword(0x42CCBC);
MakeComm(0x42CCC0, "'+48'");
MakeDword(0x42CCC0);
MakeComm(0x42CCC4, "'+4C'");
MakeDword(0x42CCC4);
MakeComm(0x42CCC8, "'+50'");
MakeDword(0x42CCC8);
MakeComm(0x42CCCC, "'+54'");
MakeDword(0x42CCCC);
MakeComm(0x42CCD0, "'+58'");
MakeDword(0x42CCD0);
MakeComm(0x42CCD4, "'+5C'");
MakeDword(0x42CCD4);
MakeComm(0x42CCD8, "'+60'");
MakeDword(0x42CCD8);
MakeComm(0x42CCDC, "'+64'");
MakeDword(0x42CCDC);
MakeComm(0x42CCE0, "'+68'");
MakeDword(0x42CCE0);
MakeComm(0x42CCE4, "'+6C'");
MakeDword(0x42CCE4);
MakeComm(0x42CCE8, "'+70'");
MakeDword(0x42CCE8);
MakeComm(0x42CCEC, "'+74'");
MakeDword(0x42CCEC);
MakeComm(0x42CCF0, "'+78'");
MakeDword(0x42CCF0);
MakeComm(0x42CCF4, "'+7C'");
MakeDword(0x42CCF4);
MakeComm(0x42CCF8, "'+80'");
MakeDword(0x42CCF8);
MakeComm(0x42CCFC, "'+84'");
MakeDword(0x42CCFC);
MakeComm(0x42CD00, "'+88'");
MakeDword(0x42CD00);
MakeComm(0x42CD04, "'+8C'");
MakeDword(0x42CD04);
MakeComm(0x42CD08, "'+90'");
MakeDword(0x42CD08);
MakeComm(0x42CD0C, "'+94'");
MakeDword(0x42CD0C);
MakeComm(0x42CD10, "'+98'");
MakeDword(0x42CD10);
MakeComm(0x42CD14, "'+9C'");
MakeDword(0x42CD14);
MakeComm(0x42CD18, "'+A0'");
MakeDword(0x42CD18);
MakeComm(0x42CD1C, "'+A4'");
MakeDword(0x42CD1C);
MakeComm(0x42CD20, "'+A8'");
MakeDword(0x42CD20);
MakeComm(0x42CD24, "'+AC'");
MakeDword(0x42CD24);
MakeComm(0x42CD28, "'+B0'");
MakeDword(0x42CD28);
MakeComm(0x42CD2C, "'+B4'");
MakeDword(0x42CD2C);
MakeComm(0x42CD30, "'+B8'");
MakeDword(0x42CD30);
MakeComm(0x42CD34, "'+BC'");
MakeDword(0x42CD34);
MakeComm(0x42CD38, "'+C0'");
MakeDword(0x42CD38);
MakeComm(0x42CD3C, "'+C4'");
MakeDword(0x42CD3C);
MakeComm(0x42CD40, "'+C8'");
MakeDword(0x42CD40);
MakeComm(0x42CD44, "'+CC'");
MakeDword(0x42CD44);
MakeComm(0x42CD48, "'+D0'");
MakeDword(0x42CD48);
MakeComm(0x42CD4C, "'+D4'");
MakeDword(0x42CD4C);
MakeComm(0x42CD50, "'+D8'");
MakeDword(0x42CD50);
MakeComm(0x42CD54, "'+DC'");
MakeDword(0x42CD54);
MakeComm(0x42CD58, "'+E0'");
MakeDword(0x42CD58);
MakeComm(0x42CD5C, "'+E4'");
MakeDword(0x42CD5C);
MakeComm(0x42CD60, "'+E8'");
MakeDword(0x42CD60);
MakeComm(0x42CD64, "'+EC'");
MakeDword(0x42CD64);
MakeComm(0x42CD68, "'+F0'");
MakeDword(0x42CD68);
MakeComm(0x42CD6C, "'+F4'");
MakeDword(0x42CD6C);
MakeComm(0x42CD70, "'+F8'");
MakeDword(0x42CD70);
MakeComm(0x42CD74, "'+FC'");
MakeDword(0x42CD74);
MakeUnkn(0x42CDA0, 1);
MakeNameEx(0x42CDA0, "RTTI_42CDA0_Class_TCustomMemo", 0);
MakeDword(0x42CDA0);
MakeUnkn(0x42CDA4, 1);
MakeNameEx(0x42CDA4, "", 0);
MakeByte(0x42CDA4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42CDA5, 0x42CDB1);
MakeDword(0x42CDB1);
MakeDword(0x42CDB5);
MakeWord(0x42CDB9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42CDBB, 0x42CDC4);
MakeWord(0x42CDC4);
MakeUnkn(0x42CDC8, 1);
MakeNameEx(0x42CDC8, "VMT_42CDC8_TMemo", 0);
MakeDword(0x42CDC8);
MakeDword(0x42CDCC);
MakeDword(0x42CDD0);
MakeDword(0x42CDD4);
MakeDword(0x42CDD8);
MakeDword(0x42CDDC);
MakeDword(0x42CDE0);
MakeDword(0x42CDE4);
MakeDword(0x42CDE8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42CF14, 0x42CF1A);
MakeDword(0x42CDEC);
MakeDword(0x42CDF0);
MakeDword(0x42CDF4);
MakeDword(0x42CDF8);
MakeDword(0x42CDFC);
MakeDword(0x42CE00);
MakeDword(0x42CE04);
MakeDword(0x42CE08);
MakeDword(0x42CE0C);
MakeDword(0x42CE10);
MakeComm(0x42CE14, "'+0'");
MakeDword(0x42CE14);
MakeComm(0x42CE18, "'+4'");
MakeDword(0x42CE18);
MakeComm(0x42CE1C, "'+8'");
MakeDword(0x42CE1C);
MakeComm(0x42CE20, "'+C'");
MakeDword(0x42CE20);
MakeComm(0x42CE24, "'+10'");
MakeDword(0x42CE24);
MakeComm(0x42CE28, "'+14'");
MakeDword(0x42CE28);
MakeComm(0x42CE2C, "'+18'");
MakeDword(0x42CE2C);
MakeComm(0x42CE30, "'+1C'");
MakeDword(0x42CE30);
MakeComm(0x42CE34, "'+20'");
MakeDword(0x42CE34);
MakeComm(0x42CE38, "'+24'");
MakeDword(0x42CE38);
MakeComm(0x42CE3C, "'+28'");
MakeDword(0x42CE3C);
MakeComm(0x42CE40, "'+2C'");
MakeDword(0x42CE40);
MakeComm(0x42CE44, "'+30'");
MakeDword(0x42CE44);
MakeComm(0x42CE48, "'+34'");
MakeDword(0x42CE48);
MakeComm(0x42CE4C, "'+38'");
MakeDword(0x42CE4C);
MakeComm(0x42CE50, "'+3C'");
MakeDword(0x42CE50);
MakeComm(0x42CE54, "'+40'");
MakeDword(0x42CE54);
MakeComm(0x42CE58, "'+44'");
MakeDword(0x42CE58);
MakeComm(0x42CE5C, "'+48'");
MakeDword(0x42CE5C);
MakeComm(0x42CE60, "'+4C'");
MakeDword(0x42CE60);
MakeComm(0x42CE64, "'+50'");
MakeDword(0x42CE64);
MakeComm(0x42CE68, "'+54'");
MakeDword(0x42CE68);
MakeComm(0x42CE6C, "'+58'");
MakeDword(0x42CE6C);
MakeComm(0x42CE70, "'+5C'");
MakeDword(0x42CE70);
MakeComm(0x42CE74, "'+60'");
MakeDword(0x42CE74);
MakeComm(0x42CE78, "'+64'");
MakeDword(0x42CE78);
MakeComm(0x42CE7C, "'+68'");
MakeDword(0x42CE7C);
MakeComm(0x42CE80, "'+6C'");
MakeDword(0x42CE80);
MakeComm(0x42CE84, "'+70'");
MakeDword(0x42CE84);
MakeComm(0x42CE88, "'+74'");
MakeDword(0x42CE88);
MakeComm(0x42CE8C, "'+78'");
MakeDword(0x42CE8C);
MakeComm(0x42CE90, "'+7C'");
MakeDword(0x42CE90);
MakeComm(0x42CE94, "'+80'");
MakeDword(0x42CE94);
MakeComm(0x42CE98, "'+84'");
MakeDword(0x42CE98);
MakeComm(0x42CE9C, "'+88'");
MakeDword(0x42CE9C);
MakeComm(0x42CEA0, "'+8C'");
MakeDword(0x42CEA0);
MakeComm(0x42CEA4, "'+90'");
MakeDword(0x42CEA4);
MakeComm(0x42CEA8, "'+94'");
MakeDword(0x42CEA8);
MakeComm(0x42CEAC, "'+98'");
MakeDword(0x42CEAC);
MakeComm(0x42CEB0, "'+9C'");
MakeDword(0x42CEB0);
MakeComm(0x42CEB4, "'+A0'");
MakeDword(0x42CEB4);
MakeComm(0x42CEB8, "'+A4'");
MakeDword(0x42CEB8);
MakeComm(0x42CEBC, "'+A8'");
MakeDword(0x42CEBC);
MakeComm(0x42CEC0, "'+AC'");
MakeDword(0x42CEC0);
MakeComm(0x42CEC4, "'+B0'");
MakeDword(0x42CEC4);
MakeComm(0x42CEC8, "'+B4'");
MakeDword(0x42CEC8);
MakeComm(0x42CECC, "'+B8'");
MakeDword(0x42CECC);
MakeComm(0x42CED0, "'+BC'");
MakeDword(0x42CED0);
MakeComm(0x42CED4, "'+C0'");
MakeDword(0x42CED4);
MakeComm(0x42CED8, "'+C4'");
MakeDword(0x42CED8);
MakeComm(0x42CEDC, "'+C8'");
MakeDword(0x42CEDC);
MakeComm(0x42CEE0, "'+CC'");
MakeDword(0x42CEE0);
MakeComm(0x42CEE4, "'+D0'");
MakeDword(0x42CEE4);
MakeComm(0x42CEE8, "'+D4'");
MakeDword(0x42CEE8);
MakeComm(0x42CEEC, "'+D8'");
MakeDword(0x42CEEC);
MakeComm(0x42CEF0, "'+DC'");
MakeDword(0x42CEF0);
MakeComm(0x42CEF4, "'+E0'");
MakeDword(0x42CEF4);
MakeComm(0x42CEF8, "'+E4'");
MakeDword(0x42CEF8);
MakeComm(0x42CEFC, "'+E8'");
MakeDword(0x42CEFC);
MakeComm(0x42CF00, "'+EC'");
MakeDword(0x42CF00);
MakeComm(0x42CF04, "'+F0'");
MakeDword(0x42CF04);
MakeComm(0x42CF08, "'+F4'");
MakeDword(0x42CF08);
MakeComm(0x42CF0C, "'+F8'");
MakeDword(0x42CF0C);
MakeComm(0x42CF10, "'+FC'");
MakeDword(0x42CF10);
MakeUnkn(0x42CF1C, 1);
MakeNameEx(0x42CF1C, "RTTI_42CF1C_Class_TMemo", 0);
MakeDword(0x42CF1C);
MakeUnkn(0x42CF20, 1);
MakeNameEx(0x42CF20, "", 0);
MakeByte(0x42CF20);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42CF21, 0x42CF27);
MakeDword(0x42CF27);
MakeDword(0x42CF2B);
MakeWord(0x42CF2F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42CF31, 0x42CF3A);
MakeWord(0x42CF3A);
MakeDword(0x42CF3C);
MakeDword(0x42CF40);
MakeDword(0x42CF44);
MakeDword(0x42CF48);
MakeDword(0x42CF4C);
MakeDword(0x42CF50);
MakeWord(0x42CF54);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42CF56, 0x42CF5C);
MakeDword(0x42CF5C);
MakeDword(0x42CF60);
MakeDword(0x42CF64);
MakeDword(0x42CF68);
MakeDword(0x42CF6C);
MakeDword(0x42CF70);
MakeWord(0x42CF74);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42CF76, 0x42CF80);
MakeDword(0x42CF80);
MakeDword(0x42CF84);
MakeDword(0x42CF88);
MakeDword(0x42CF8C);
MakeDword(0x42CF90);
MakeDword(0x42CF94);
MakeWord(0x42CF98);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42CF9A, 0x42CFA2);
MakeDword(0x42CFA2);
MakeDword(0x42CFA6);
MakeDword(0x42CFAA);
MakeDword(0x42CFAE);
MakeDword(0x42CFB2);
MakeDword(0x42CFB6);
MakeWord(0x42CFBA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42CFBC, 0x42CFC7);
MakeDword(0x42CFC7);
MakeDword(0x42CFCB);
MakeDword(0x42CFCF);
MakeDword(0x42CFD3);
MakeDword(0x42CFD7);
MakeDword(0x42CFDB);
MakeWord(0x42CFDF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42CFE1, 0x42CFEC);
MakeDword(0x42CFEC);
MakeDword(0x42CFF0);
MakeDword(0x42CFF4);
MakeDword(0x42CFF8);
MakeDword(0x42CFFC);
MakeDword(0x42D000);
MakeWord(0x42D004);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D006, 0x42D010);
MakeDword(0x42D010);
MakeDword(0x42D014);
MakeDword(0x42D018);
MakeDword(0x42D01C);
MakeDword(0x42D020);
MakeDword(0x42D024);
MakeWord(0x42D028);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D02A, 0x42D035);
MakeDword(0x42D035);
MakeDword(0x42D039);
MakeDword(0x42D03D);
MakeDword(0x42D041);
MakeDword(0x42D045);
MakeDword(0x42D049);
MakeWord(0x42D04D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D04F, 0x42D058);
MakeDword(0x42D058);
MakeDword(0x42D05C);
MakeDword(0x42D060);
MakeDword(0x42D064);
MakeDword(0x42D068);
MakeDword(0x42D06C);
MakeWord(0x42D070);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D072, 0x42D07E);
MakeDword(0x42D07E);
MakeDword(0x42D082);
MakeDword(0x42D086);
MakeDword(0x42D08A);
MakeDword(0x42D08E);
MakeDword(0x42D092);
MakeWord(0x42D096);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D098, 0x42D09E);
MakeDword(0x42D09E);
MakeDword(0x42D0A2);
MakeDword(0x42D0A6);
MakeDword(0x42D0AA);
MakeDword(0x42D0AE);
MakeDword(0x42D0B2);
MakeWord(0x42D0B6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D0B8, 0x42D0C4);
MakeDword(0x42D0C4);
MakeDword(0x42D0C8);
MakeDword(0x42D0CC);
MakeDword(0x42D0D0);
MakeDword(0x42D0D4);
MakeDword(0x42D0D8);
MakeWord(0x42D0DC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D0DE, 0x42D0E4);
MakeDword(0x42D0E4);
MakeDword(0x42D0E8);
MakeDword(0x42D0EC);
MakeDword(0x42D0F0);
MakeDword(0x42D0F4);
MakeDword(0x42D0F8);
MakeWord(0x42D0FC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D0FE, 0x42D109);
MakeDword(0x42D109);
MakeDword(0x42D10D);
MakeDword(0x42D111);
MakeDword(0x42D115);
MakeDword(0x42D119);
MakeDword(0x42D11D);
MakeWord(0x42D121);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D123, 0x42D12C);
MakeDword(0x42D12C);
MakeDword(0x42D130);
MakeDword(0x42D134);
MakeDword(0x42D138);
MakeDword(0x42D13C);
MakeDword(0x42D140);
MakeWord(0x42D144);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D146, 0x42D14F);
MakeDword(0x42D14F);
MakeDword(0x42D153);
MakeDword(0x42D157);
MakeDword(0x42D15B);
MakeDword(0x42D15F);
MakeDword(0x42D163);
MakeWord(0x42D167);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D169, 0x42D171);
MakeDword(0x42D171);
MakeDword(0x42D175);
MakeDword(0x42D179);
MakeDword(0x42D17D);
MakeDword(0x42D181);
MakeDword(0x42D185);
MakeWord(0x42D189);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D18B, 0x42D190);
MakeDword(0x42D190);
MakeDword(0x42D194);
MakeDword(0x42D198);
MakeDword(0x42D19C);
MakeDword(0x42D1A0);
MakeDword(0x42D1A4);
MakeWord(0x42D1A8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D1AA, 0x42D1B8);
MakeDword(0x42D1B8);
MakeDword(0x42D1BC);
MakeDword(0x42D1C0);
MakeDword(0x42D1C4);
MakeDword(0x42D1C8);
MakeDword(0x42D1CC);
MakeWord(0x42D1D0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D1D2, 0x42D1DA);
MakeDword(0x42D1DA);
MakeDword(0x42D1DE);
MakeDword(0x42D1E2);
MakeDword(0x42D1E6);
MakeDword(0x42D1EA);
MakeDword(0x42D1EE);
MakeWord(0x42D1F2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D1F4, 0x42D1FC);
MakeDword(0x42D1FC);
MakeDword(0x42D200);
MakeDword(0x42D204);
MakeDword(0x42D208);
MakeDword(0x42D20C);
MakeDword(0x42D210);
MakeWord(0x42D214);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D216, 0x42D21C);
MakeDword(0x42D21C);
MakeDword(0x42D220);
MakeDword(0x42D224);
MakeDword(0x42D228);
MakeDword(0x42D22C);
MakeDword(0x42D230);
MakeWord(0x42D234);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D236, 0x42D240);
MakeDword(0x42D240);
MakeDword(0x42D244);
MakeDword(0x42D248);
MakeDword(0x42D24C);
MakeDword(0x42D250);
MakeDword(0x42D254);
MakeWord(0x42D258);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D25A, 0x42D265);
MakeDword(0x42D265);
MakeDword(0x42D269);
MakeDword(0x42D26D);
MakeDword(0x42D271);
MakeDword(0x42D275);
MakeDword(0x42D279);
MakeWord(0x42D27D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D27F, 0x42D28E);
MakeDword(0x42D28E);
MakeDword(0x42D292);
MakeDword(0x42D296);
MakeDword(0x42D29A);
MakeDword(0x42D29E);
MakeDword(0x42D2A2);
MakeWord(0x42D2A6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D2A8, 0x42D2B4);
MakeDword(0x42D2B4);
MakeDword(0x42D2B8);
MakeDword(0x42D2BC);
MakeDword(0x42D2C0);
MakeDword(0x42D2C4);
MakeDword(0x42D2C8);
MakeWord(0x42D2CC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D2CE, 0x42D2DA);
MakeDword(0x42D2DA);
MakeDword(0x42D2DE);
MakeDword(0x42D2E2);
MakeDword(0x42D2E6);
MakeDword(0x42D2EA);
MakeDword(0x42D2EE);
MakeWord(0x42D2F2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D2F4, 0x42D2FF);
MakeDword(0x42D2FF);
MakeDword(0x42D303);
MakeDword(0x42D307);
MakeDword(0x42D30B);
MakeDword(0x42D30F);
MakeDword(0x42D313);
MakeWord(0x42D317);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D319, 0x42D328);
MakeDword(0x42D328);
MakeDword(0x42D32C);
MakeDword(0x42D330);
MakeDword(0x42D334);
MakeDword(0x42D338);
MakeDword(0x42D33C);
MakeWord(0x42D340);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D342, 0x42D34C);
MakeDword(0x42D34C);
MakeDword(0x42D350);
MakeDword(0x42D354);
MakeDword(0x42D358);
MakeDword(0x42D35C);
MakeDword(0x42D360);
MakeWord(0x42D364);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D366, 0x42D36F);
MakeDword(0x42D36F);
MakeDword(0x42D373);
MakeDword(0x42D377);
MakeDword(0x42D37B);
MakeDword(0x42D37F);
MakeDword(0x42D383);
MakeWord(0x42D387);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D389, 0x42D394);
MakeDword(0x42D394);
MakeDword(0x42D398);
MakeDword(0x42D39C);
MakeDword(0x42D3A0);
MakeDword(0x42D3A4);
MakeDword(0x42D3A8);
MakeWord(0x42D3AC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D3AE, 0x42D3B7);
MakeDword(0x42D3B7);
MakeDword(0x42D3BB);
MakeDword(0x42D3BF);
MakeDword(0x42D3C3);
MakeDword(0x42D3C7);
MakeDword(0x42D3CB);
MakeWord(0x42D3CF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D3D1, 0x42D3DA);
MakeDword(0x42D3DA);
MakeDword(0x42D3DE);
MakeDword(0x42D3E2);
MakeDword(0x42D3E6);
MakeDword(0x42D3EA);
MakeDword(0x42D3EE);
MakeWord(0x42D3F2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D3F4, 0x42D3FC);
MakeDword(0x42D3FC);
MakeDword(0x42D400);
MakeDword(0x42D404);
MakeDword(0x42D408);
MakeDword(0x42D40C);
MakeDword(0x42D410);
MakeWord(0x42D414);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D416, 0x42D41E);
MakeDword(0x42D41E);
MakeDword(0x42D422);
MakeDword(0x42D426);
MakeDword(0x42D42A);
MakeDword(0x42D42E);
MakeDword(0x42D432);
MakeWord(0x42D436);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D438, 0x42D444);
MakeDword(0x42D444);
MakeDword(0x42D448);
MakeDword(0x42D44C);
MakeDword(0x42D450);
MakeDword(0x42D454);
MakeDword(0x42D458);
MakeWord(0x42D45C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D45E, 0x42D467);
MakeDword(0x42D467);
MakeDword(0x42D46B);
MakeDword(0x42D46F);
MakeDword(0x42D473);
MakeDword(0x42D477);
MakeDword(0x42D47B);
MakeWord(0x42D47F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D481, 0x42D48A);
MakeDword(0x42D48A);
MakeDword(0x42D48E);
MakeDword(0x42D492);
MakeDword(0x42D496);
MakeDword(0x42D49A);
MakeDword(0x42D49E);
MakeWord(0x42D4A2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D4A4, 0x42D4AD);
MakeDword(0x42D4AD);
MakeDword(0x42D4B1);
MakeDword(0x42D4B5);
MakeDword(0x42D4B9);
MakeDword(0x42D4BD);
MakeDword(0x42D4C1);
MakeWord(0x42D4C5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D4C7, 0x42D4CF);
MakeDword(0x42D4CF);
MakeDword(0x42D4D3);
MakeDword(0x42D4D7);
MakeDword(0x42D4DB);
MakeDword(0x42D4DF);
MakeDword(0x42D4E3);
MakeWord(0x42D4E7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D4E9, 0x42D4F8);
MakeDword(0x42D4F8);
MakeDword(0x42D4FC);
MakeDword(0x42D500);
MakeDword(0x42D504);
MakeDword(0x42D508);
MakeDword(0x42D50C);
MakeWord(0x42D510);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D512, 0x42D51D);
MakeDword(0x42D51D);
MakeDword(0x42D521);
MakeDword(0x42D525);
MakeDword(0x42D529);
MakeDword(0x42D52D);
MakeDword(0x42D531);
MakeWord(0x42D535);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D537, 0x42D542);
MakeDword(0x42D542);
MakeDword(0x42D546);
MakeDword(0x42D54A);
MakeDword(0x42D54E);
MakeDword(0x42D552);
MakeDword(0x42D556);
MakeWord(0x42D55A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D55C, 0x42D567);
MakeDword(0x42D567);
MakeDword(0x42D56B);
MakeDword(0x42D56F);
MakeDword(0x42D573);
MakeDword(0x42D577);
MakeDword(0x42D57B);
MakeWord(0x42D57F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D581, 0x42D58B);
MakeDword(0x42D58B);
MakeDword(0x42D58F);
MakeDword(0x42D593);
MakeDword(0x42D597);
MakeDword(0x42D59B);
MakeDword(0x42D59F);
MakeWord(0x42D5A3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D5A5, 0x42D5AF);
MakeDword(0x42D5AF);
MakeDword(0x42D5B3);
MakeDword(0x42D5B7);
MakeDword(0x42D5BB);
MakeDword(0x42D5BF);
MakeDword(0x42D5C3);
MakeWord(0x42D5C7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D5C9, 0x42D5D1);
MakeDword(0x42D5D1);
MakeDword(0x42D5D5);
MakeDword(0x42D5D9);
MakeDword(0x42D5DD);
MakeDword(0x42D5E1);
MakeDword(0x42D5E5);
MakeWord(0x42D5E9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D5EB, 0x42D5F2);
MakeDword(0x42D5F2);
MakeDword(0x42D5F6);
MakeDword(0x42D5FA);
MakeDword(0x42D5FE);
MakeDword(0x42D602);
MakeDword(0x42D606);
MakeWord(0x42D60A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D60C, 0x42D616);
MakeDword(0x42D616);
MakeDword(0x42D61A);
MakeDword(0x42D61E);
MakeDword(0x42D622);
MakeDword(0x42D626);
MakeDword(0x42D62A);
MakeWord(0x42D62E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D630, 0x42D63B);
MakeDword(0x42D63B);
MakeDword(0x42D63F);
MakeDword(0x42D643);
MakeDword(0x42D647);
MakeDword(0x42D64B);
MakeDword(0x42D64F);
MakeWord(0x42D653);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D655, 0x42D65D);
MakeDword(0x42D65D);
MakeDword(0x42D661);
MakeDword(0x42D665);
MakeDword(0x42D669);
MakeDword(0x42D66D);
MakeDword(0x42D671);
MakeWord(0x42D675);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D677, 0x42D687);
MakeDword(0x42D687);
MakeDword(0x42D68B);
MakeDword(0x42D68F);
MakeDword(0x42D693);
MakeDword(0x42D697);
MakeDword(0x42D69B);
MakeWord(0x42D69F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D6A1, 0x42D6AD);
MakeDword(0x42D6AD);
MakeDword(0x42D6B1);
MakeDword(0x42D6B5);
MakeDword(0x42D6B9);
MakeDword(0x42D6BD);
MakeDword(0x42D6C1);
MakeWord(0x42D6C5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D6C7, 0x42D6D4);
MakeDword(0x42D6D4);
MakeDword(0x42D6D8);
MakeDword(0x42D6DC);
MakeDword(0x42D6E0);
MakeDword(0x42D6E4);
MakeDword(0x42D6E8);
MakeWord(0x42D6EC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D6EE, 0x42D6FB);
MakeDword(0x42D6FB);
MakeDword(0x42D6FF);
MakeDword(0x42D703);
MakeDword(0x42D707);
MakeDword(0x42D70B);
MakeDword(0x42D70F);
MakeWord(0x42D713);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D715, 0x42D721);
MakeDword(0x42D721);
MakeDword(0x42D725);
MakeDword(0x42D729);
MakeDword(0x42D72D);
MakeDword(0x42D731);
MakeDword(0x42D735);
MakeWord(0x42D739);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D73B, 0x42D745);
MakeDword(0x42D745);
MakeDword(0x42D749);
MakeDword(0x42D74D);
MakeDword(0x42D751);
MakeDword(0x42D755);
MakeDword(0x42D759);
MakeWord(0x42D75D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D75F, 0x42D76B);
MakeDword(0x42D76B);
MakeDword(0x42D76F);
MakeDword(0x42D773);
MakeDword(0x42D777);
MakeDword(0x42D77B);
MakeDword(0x42D77F);
MakeWord(0x42D783);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D785, 0x42D791);
MakeUnkn(0x42D794, 1);
MakeNameEx(0x42D794, "RTTI_42D794_Method_TDrawItemEvent", 0);
MakeDword(0x42D794);
MakeUnkn(0x42D798, 1);
MakeNameEx(0x42D798, "", 0);
MakeByte(0x42D798);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D799, 0x42D7A8);
MakeByte(0x42D7A8);
MakeByte(0x42D7A9);
MakeByte(0x42D7AA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D7AB, 0x42D7B3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D7B3, 0x42D7BF);
MakeByte(0x42D7BF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D7C0, 0x42D7C6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D7C6, 0x42D7CE);
MakeByte(0x42D7CE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D7CF, 0x42D7D4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D7D4, 0x42D7DA);
MakeByte(0x42D7DA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D7DB, 0x42D7E1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D7E1, 0x42D7F1);
MakeByte(0x42D7F1);
MakeDword(0x42D7F2);
MakeDword(0x42D7F6);
MakeDword(0x42D7FA);
MakeDword(0x42D7FE);
MakeUnkn(0x42D804, 1);
MakeNameEx(0x42D804, "RTTI_42D804_Method_TMeasureItemEvent", 0);
MakeDword(0x42D804);
MakeUnkn(0x42D808, 1);
MakeNameEx(0x42D808, "", 0);
MakeByte(0x42D808);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D809, 0x42D81B);
MakeByte(0x42D81B);
MakeByte(0x42D81C);
MakeByte(0x42D81D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D81E, 0x42D826);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D826, 0x42D832);
MakeByte(0x42D832);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D833, 0x42D839);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D839, 0x42D841);
MakeByte(0x42D841);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D842, 0x42D849);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D849, 0x42D851);
MakeByte(0x42D851);
MakeDword(0x42D852);
MakeDword(0x42D856);
MakeDword(0x42D85A);
MakeUnkn(0x42D860, 1);
MakeNameEx(0x42D860, "VMT_42D860_TCustomComboBoxStrings", 0);
MakeDword(0x42D860);
MakeDword(0x42D864);
MakeDword(0x42D868);
MakeDword(0x42D86C);
MakeDword(0x42D870);
MakeDword(0x42D874);
MakeDword(0x42D878);
MakeDword(0x42D87C);
MakeDword(0x42D880);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D92C, 0x42D943);
MakeDword(0x42D884);
MakeDword(0x42D888);
MakeDword(0x42D88C);
MakeDword(0x42D890);
MakeDword(0x42D894);
MakeDword(0x42D898);
MakeDword(0x42D89C);
MakeDword(0x42D8A0);
MakeDword(0x42D8A4);
MakeDword(0x42D8A8);
MakeComm(0x42D8AC, "'+0'");
MakeDword(0x42D8AC);
MakeComm(0x42D8B0, "'+4'");
MakeDword(0x42D8B0);
MakeComm(0x42D8B4, "'+8'");
MakeDword(0x42D8B4);
MakeComm(0x42D8B8, "'+C'");
MakeDword(0x42D8B8);
MakeComm(0x42D8BC, "'+10'");
MakeDword(0x42D8BC);
MakeComm(0x42D8C0, "'+14'");
MakeDword(0x42D8C0);
MakeComm(0x42D8C4, "'+18'");
MakeDword(0x42D8C4);
MakeComm(0x42D8C8, "'+1C'");
MakeDword(0x42D8C8);
MakeComm(0x42D8CC, "'+20'");
MakeDword(0x42D8CC);
MakeComm(0x42D8D0, "'+24'");
MakeDword(0x42D8D0);
MakeComm(0x42D8D4, "'+28'");
MakeDword(0x42D8D4);
MakeComm(0x42D8D8, "'+2C'");
MakeDword(0x42D8D8);
MakeComm(0x42D8DC, "'+30'");
MakeDword(0x42D8DC);
MakeComm(0x42D8E0, "'+34'");
MakeDword(0x42D8E0);
MakeComm(0x42D8E4, "'+38'");
MakeDword(0x42D8E4);
MakeComm(0x42D8E8, "'+3C'");
MakeDword(0x42D8E8);
MakeComm(0x42D8EC, "'+40'");
MakeDword(0x42D8EC);
MakeComm(0x42D8F0, "'+44'");
MakeDword(0x42D8F0);
MakeComm(0x42D8F4, "'+48'");
MakeDword(0x42D8F4);
MakeComm(0x42D8F8, "'+4C'");
MakeDword(0x42D8F8);
MakeComm(0x42D8FC, "'+50'");
MakeDword(0x42D8FC);
MakeComm(0x42D900, "'+54'");
MakeDword(0x42D900);
MakeComm(0x42D904, "'+58'");
MakeDword(0x42D904);
MakeComm(0x42D908, "'+5C'");
MakeDword(0x42D908);
MakeComm(0x42D90C, "'+60'");
MakeDword(0x42D90C);
MakeComm(0x42D910, "'+64'");
MakeDword(0x42D910);
MakeComm(0x42D914, "'+68'");
MakeDword(0x42D914);
MakeComm(0x42D918, "'+6C'");
MakeDword(0x42D918);
MakeComm(0x42D91C, "'+70'");
MakeDword(0x42D91C);
MakeComm(0x42D920, "'+74'");
MakeDword(0x42D920);
MakeComm(0x42D924, "'+78'");
MakeDword(0x42D924);
MakeComm(0x42D928, "'+7C'");
MakeDword(0x42D928);
MakeUnkn(0x42D944, 1);
MakeNameEx(0x42D944, "RTTI_42D944_Class_TCustomComboBoxStrings", 0);
MakeDword(0x42D944);
MakeUnkn(0x42D948, 1);
MakeNameEx(0x42D948, "", 0);
MakeByte(0x42D948);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D949, 0x42D960);
MakeDword(0x42D960);
MakeDword(0x42D964);
MakeWord(0x42D968);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42D96A, 0x42D973);
MakeWord(0x42D973);
MakeUnkn(0x42D978, 1);
MakeNameEx(0x42D978, "VMT_42D978_TCustomCombo", 0);
MakeDword(0x42D978);
MakeDword(0x42D97C);
MakeDword(0x42D980);
MakeDword(0x42D984);
MakeDword(0x42D988);
MakeDword(0x42D98C);
MakeDword(0x42D990);
MakeDword(0x42D994);
MakeUnkn(0x42DAE8, 1);
MakeNameEx(0x42DAE8, "TCustomCombo_DynamicTable", 0);
MakeWord(0x42DAE8);
MakeWord(0x42DAEA);
MakeWord(0x42DAEC);
MakeWord(0x42DAEE);
MakeWord(0x42DAF0);
MakeWord(0x42DAF2);
MakeWord(0x42DAF4);
MakeWord(0x42DAF6);
MakeWord(0x42DAF8);
MakeWord(0x42DAFA);
MakeWord(0x42DAFC);
MakeWord(0x42DAFE);
MakeWord(0x42DB00);
MakeWord(0x42DB02);
MakeDword(0x42DB04);
MakeDword(0x42DB08);
MakeDword(0x42DB0C);
MakeDword(0x42DB10);
MakeDword(0x42DB14);
MakeDword(0x42DB18);
MakeDword(0x42DB1C);
MakeDword(0x42DB20);
MakeDword(0x42DB24);
MakeDword(0x42DB28);
MakeDword(0x42DB2C);
MakeDword(0x42DB30);
MakeDword(0x42DB34);
MakeDword(0x42D998);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42DB38, 0x42DB45);
MakeDword(0x42D99C);
MakeDword(0x42D9A0);
MakeDword(0x42D9A4);
MakeDword(0x42D9A8);
MakeDword(0x42D9AC);
MakeDword(0x42D9B0);
MakeDword(0x42D9B4);
MakeDword(0x42D9B8);
MakeDword(0x42D9BC);
MakeDword(0x42D9C0);
MakeComm(0x42D9C4, "'+0'");
MakeDword(0x42D9C4);
MakeComm(0x42D9C8, "'+4'");
MakeDword(0x42D9C8);
MakeComm(0x42D9CC, "'+8'");
MakeDword(0x42D9CC);
MakeComm(0x42D9D0, "'+C'");
MakeDword(0x42D9D0);
MakeComm(0x42D9D4, "'+10'");
MakeDword(0x42D9D4);
MakeComm(0x42D9D8, "'+14'");
MakeDword(0x42D9D8);
MakeComm(0x42D9DC, "'+18'");
MakeDword(0x42D9DC);
MakeComm(0x42D9E0, "'+1C'");
MakeDword(0x42D9E0);
MakeComm(0x42D9E4, "'+20'");
MakeDword(0x42D9E4);
MakeComm(0x42D9E8, "'+24'");
MakeDword(0x42D9E8);
MakeComm(0x42D9EC, "'+28'");
MakeDword(0x42D9EC);
MakeComm(0x42D9F0, "'+2C'");
MakeDword(0x42D9F0);
MakeComm(0x42D9F4, "'+30'");
MakeDword(0x42D9F4);
MakeComm(0x42D9F8, "'+34'");
MakeDword(0x42D9F8);
MakeComm(0x42D9FC, "'+38'");
MakeDword(0x42D9FC);
MakeComm(0x42DA00, "'+3C'");
MakeDword(0x42DA00);
MakeComm(0x42DA04, "'+40'");
MakeDword(0x42DA04);
MakeComm(0x42DA08, "'+44'");
MakeDword(0x42DA08);
MakeComm(0x42DA0C, "'+48'");
MakeDword(0x42DA0C);
MakeComm(0x42DA10, "'+4C'");
MakeDword(0x42DA10);
MakeComm(0x42DA14, "'+50'");
MakeDword(0x42DA14);
MakeComm(0x42DA18, "'+54'");
MakeDword(0x42DA18);
MakeComm(0x42DA1C, "'+58'");
MakeDword(0x42DA1C);
MakeComm(0x42DA20, "'+5C'");
MakeDword(0x42DA20);
MakeComm(0x42DA24, "'+60'");
MakeDword(0x42DA24);
MakeComm(0x42DA28, "'+64'");
MakeDword(0x42DA28);
MakeComm(0x42DA2C, "'+68'");
MakeDword(0x42DA2C);
MakeComm(0x42DA30, "'+6C'");
MakeDword(0x42DA30);
MakeComm(0x42DA34, "'+70'");
MakeDword(0x42DA34);
MakeComm(0x42DA38, "'+74'");
MakeDword(0x42DA38);
MakeComm(0x42DA3C, "'+78'");
MakeDword(0x42DA3C);
MakeComm(0x42DA40, "'+7C'");
MakeDword(0x42DA40);
MakeComm(0x42DA44, "'+80'");
MakeDword(0x42DA44);
MakeComm(0x42DA48, "'+84'");
MakeDword(0x42DA48);
MakeComm(0x42DA4C, "'+88'");
MakeDword(0x42DA4C);
MakeComm(0x42DA50, "'+8C'");
MakeDword(0x42DA50);
MakeComm(0x42DA54, "'+90'");
MakeDword(0x42DA54);
MakeComm(0x42DA58, "'+94'");
MakeDword(0x42DA58);
MakeComm(0x42DA5C, "'+98'");
MakeDword(0x42DA5C);
MakeComm(0x42DA60, "'+9C'");
MakeDword(0x42DA60);
MakeComm(0x42DA64, "'+A0'");
MakeDword(0x42DA64);
MakeComm(0x42DA68, "'+A4'");
MakeDword(0x42DA68);
MakeComm(0x42DA6C, "'+A8'");
MakeDword(0x42DA6C);
MakeComm(0x42DA70, "'+AC'");
MakeDword(0x42DA70);
MakeComm(0x42DA74, "'+B0'");
MakeDword(0x42DA74);
MakeComm(0x42DA78, "'+B4'");
MakeDword(0x42DA78);
MakeComm(0x42DA7C, "'+B8'");
MakeDword(0x42DA7C);
MakeComm(0x42DA80, "'+BC'");
MakeDword(0x42DA80);
MakeComm(0x42DA84, "'+C0'");
MakeDword(0x42DA84);
MakeComm(0x42DA88, "'+C4'");
MakeDword(0x42DA88);
MakeComm(0x42DA8C, "'+C8'");
MakeDword(0x42DA8C);
MakeComm(0x42DA90, "'+CC'");
MakeDword(0x42DA90);
MakeComm(0x42DA94, "'+D0'");
MakeDword(0x42DA94);
MakeComm(0x42DA98, "'+D4'");
MakeDword(0x42DA98);
MakeComm(0x42DA9C, "'+D8'");
MakeDword(0x42DA9C);
MakeComm(0x42DAA0, "'+DC'");
MakeDword(0x42DAA0);
MakeComm(0x42DAA4, "'+E0'");
MakeDword(0x42DAA4);
MakeComm(0x42DAA8, "'+E4'");
MakeDword(0x42DAA8);
MakeComm(0x42DAAC, "'+E8'");
MakeDword(0x42DAAC);
MakeComm(0x42DAB0, "'+EC'");
MakeDword(0x42DAB0);
MakeComm(0x42DAB4, "'+F0'");
MakeDword(0x42DAB4);
MakeComm(0x42DAB8, "'+F4'");
MakeDword(0x42DAB8);
MakeComm(0x42DABC, "'+F8'");
MakeDword(0x42DABC);
MakeComm(0x42DAC0, "'+FC'");
MakeDword(0x42DAC0);
MakeComm(0x42DAC4, "'+100'");
MakeDword(0x42DAC4);
MakeComm(0x42DAC8, "'+104'");
MakeDword(0x42DAC8);
MakeComm(0x42DACC, "'+108'");
MakeDword(0x42DACC);
MakeComm(0x42DAD0, "'+10C'");
MakeDword(0x42DAD0);
MakeComm(0x42DAD4, "'+110'");
MakeDword(0x42DAD4);
MakeComm(0x42DAD8, "'+114'");
MakeDword(0x42DAD8);
MakeComm(0x42DADC, "'+118'");
MakeDword(0x42DADC);
MakeComm(0x42DAE0, "'+11C'");
MakeDword(0x42DAE0);
MakeComm(0x42DAE4, "'+120'");
MakeDword(0x42DAE4);
MakeUnkn(0x42DB48, 1);
MakeNameEx(0x42DB48, "RTTI_42DB48_Class_TCustomCombo", 0);
MakeDword(0x42DB48);
MakeUnkn(0x42DB4C, 1);
MakeNameEx(0x42DB4C, "", 0);
MakeByte(0x42DB4C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42DB4D, 0x42DB5A);
MakeDword(0x42DB5A);
MakeDword(0x42DB5E);
MakeWord(0x42DB62);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42DB64, 0x42DB6D);
MakeWord(0x42DB6D);
MakeUnkn(0x42DB70, 1);
MakeNameEx(0x42DB70, "RTTI_42DB70_Enumeration_TComboBoxStyle", 0);
MakeDword(0x42DB70);
MakeUnkn(0x42DB74, 1);
MakeNameEx(0x42DB74, "", 0);
MakeByte(0x42DB74);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42DB75, 0x42DB84);
MakeByte(0x42DB84);
MakeDword(0x42DB85);
MakeDword(0x42DB89);
MakeDword(0x42DB8D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42DB91, 0x42DB9C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42DB9C, 0x42DBA5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42DBA5, 0x42DBB4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42DBB4, 0x42DBC5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42DBC5, 0x42DBD9);
MakeUnkn(0x42DBE4, 1);
MakeNameEx(0x42DBE4, "VMT_42DBE4_TCustomComboBox", 0);
MakeDword(0x42DBE4);
MakeDword(0x42DBE8);
MakeDword(0x42DBEC);
MakeDword(0x42DBF0);
MakeUnkn(0x42DD60, 1);
MakeNameEx(0x42DD60, "TCustomComboBox_InitTable", 0);
MakeByte(0x42DD60);
MakeByte(0x42DD61);
MakeDword(0x42DD62);
MakeDword(0x42DD66);
MakeDword(0x42DD6A);
MakeDword(0x42DD6E);
MakeDword(0x42DBF4);
MakeDword(0x42DBF8);
MakeDword(0x42DBFC);
MakeDword(0x42DC00);
MakeUnkn(0x42DD72, 1);
MakeNameEx(0x42DD72, "TCustomComboBox_DynamicTable", 0);
MakeWord(0x42DD72);
MakeWord(0x42DD74);
MakeWord(0x42DD76);
MakeWord(0x42DD78);
MakeWord(0x42DD7A);
MakeWord(0x42DD7C);
MakeWord(0x42DD7E);
MakeWord(0x42DD80);
MakeDword(0x42DD82);
MakeDword(0x42DD86);
MakeDword(0x42DD8A);
MakeDword(0x42DD8E);
MakeDword(0x42DD92);
MakeDword(0x42DD96);
MakeDword(0x42DD9A);
MakeDword(0x42DC04);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42DD9E, 0x42DDAE);
MakeDword(0x42DC08);
MakeDword(0x42DC0C);
MakeDword(0x42DC10);
MakeDword(0x42DC14);
MakeDword(0x42DC18);
MakeDword(0x42DC1C);
MakeDword(0x42DC20);
MakeDword(0x42DC24);
MakeDword(0x42DC28);
MakeDword(0x42DC2C);
MakeComm(0x42DC30, "'+0'");
MakeDword(0x42DC30);
MakeComm(0x42DC34, "'+4'");
MakeDword(0x42DC34);
MakeComm(0x42DC38, "'+8'");
MakeDword(0x42DC38);
MakeComm(0x42DC3C, "'+C'");
MakeDword(0x42DC3C);
MakeComm(0x42DC40, "'+10'");
MakeDword(0x42DC40);
MakeComm(0x42DC44, "'+14'");
MakeDword(0x42DC44);
MakeComm(0x42DC48, "'+18'");
MakeDword(0x42DC48);
MakeComm(0x42DC4C, "'+1C'");
MakeDword(0x42DC4C);
MakeComm(0x42DC50, "'+20'");
MakeDword(0x42DC50);
MakeComm(0x42DC54, "'+24'");
MakeDword(0x42DC54);
MakeComm(0x42DC58, "'+28'");
MakeDword(0x42DC58);
MakeComm(0x42DC5C, "'+2C'");
MakeDword(0x42DC5C);
MakeComm(0x42DC60, "'+30'");
MakeDword(0x42DC60);
MakeComm(0x42DC64, "'+34'");
MakeDword(0x42DC64);
MakeComm(0x42DC68, "'+38'");
MakeDword(0x42DC68);
MakeComm(0x42DC6C, "'+3C'");
MakeDword(0x42DC6C);
MakeComm(0x42DC70, "'+40'");
MakeDword(0x42DC70);
MakeComm(0x42DC74, "'+44'");
MakeDword(0x42DC74);
MakeComm(0x42DC78, "'+48'");
MakeDword(0x42DC78);
MakeComm(0x42DC7C, "'+4C'");
MakeDword(0x42DC7C);
MakeComm(0x42DC80, "'+50'");
MakeDword(0x42DC80);
MakeComm(0x42DC84, "'+54'");
MakeDword(0x42DC84);
MakeComm(0x42DC88, "'+58'");
MakeDword(0x42DC88);
MakeComm(0x42DC8C, "'+5C'");
MakeDword(0x42DC8C);
MakeComm(0x42DC90, "'+60'");
MakeDword(0x42DC90);
MakeComm(0x42DC94, "'+64'");
MakeDword(0x42DC94);
MakeComm(0x42DC98, "'+68'");
MakeDword(0x42DC98);
MakeComm(0x42DC9C, "'+6C'");
MakeDword(0x42DC9C);
MakeComm(0x42DCA0, "'+70'");
MakeDword(0x42DCA0);
MakeComm(0x42DCA4, "'+74'");
MakeDword(0x42DCA4);
MakeComm(0x42DCA8, "'+78'");
MakeDword(0x42DCA8);
MakeComm(0x42DCAC, "'+7C'");
MakeDword(0x42DCAC);
MakeComm(0x42DCB0, "'+80'");
MakeDword(0x42DCB0);
MakeComm(0x42DCB4, "'+84'");
MakeDword(0x42DCB4);
MakeComm(0x42DCB8, "'+88'");
MakeDword(0x42DCB8);
MakeComm(0x42DCBC, "'+8C'");
MakeDword(0x42DCBC);
MakeComm(0x42DCC0, "'+90'");
MakeDword(0x42DCC0);
MakeComm(0x42DCC4, "'+94'");
MakeDword(0x42DCC4);
MakeComm(0x42DCC8, "'+98'");
MakeDword(0x42DCC8);
MakeComm(0x42DCCC, "'+9C'");
MakeDword(0x42DCCC);
MakeComm(0x42DCD0, "'+A0'");
MakeDword(0x42DCD0);
MakeComm(0x42DCD4, "'+A4'");
MakeDword(0x42DCD4);
MakeComm(0x42DCD8, "'+A8'");
MakeDword(0x42DCD8);
MakeComm(0x42DCDC, "'+AC'");
MakeDword(0x42DCDC);
MakeComm(0x42DCE0, "'+B0'");
MakeDword(0x42DCE0);
MakeComm(0x42DCE4, "'+B4'");
MakeDword(0x42DCE4);
MakeComm(0x42DCE8, "'+B8'");
MakeDword(0x42DCE8);
MakeComm(0x42DCEC, "'+BC'");
MakeDword(0x42DCEC);
MakeComm(0x42DCF0, "'+C0'");
MakeDword(0x42DCF0);
MakeComm(0x42DCF4, "'+C4'");
MakeDword(0x42DCF4);
MakeComm(0x42DCF8, "'+C8'");
MakeDword(0x42DCF8);
MakeComm(0x42DCFC, "'+CC'");
MakeDword(0x42DCFC);
MakeComm(0x42DD00, "'+D0'");
MakeDword(0x42DD00);
MakeComm(0x42DD04, "'+D4'");
MakeDword(0x42DD04);
MakeComm(0x42DD08, "'+D8'");
MakeDword(0x42DD08);
MakeComm(0x42DD0C, "'+DC'");
MakeDword(0x42DD0C);
MakeComm(0x42DD10, "'+E0'");
MakeDword(0x42DD10);
MakeComm(0x42DD14, "'+E4'");
MakeDword(0x42DD14);
MakeComm(0x42DD18, "'+E8'");
MakeDword(0x42DD18);
MakeComm(0x42DD1C, "'+EC'");
MakeDword(0x42DD1C);
MakeComm(0x42DD20, "'+F0'");
MakeDword(0x42DD20);
MakeComm(0x42DD24, "'+F4'");
MakeDword(0x42DD24);
MakeComm(0x42DD28, "'+F8'");
MakeDword(0x42DD28);
MakeComm(0x42DD2C, "'+FC'");
MakeDword(0x42DD2C);
MakeComm(0x42DD30, "'+100'");
MakeDword(0x42DD30);
MakeComm(0x42DD34, "'+104'");
MakeDword(0x42DD34);
MakeComm(0x42DD38, "'+108'");
MakeDword(0x42DD38);
MakeComm(0x42DD3C, "'+10C'");
MakeDword(0x42DD3C);
MakeComm(0x42DD40, "'+110'");
MakeDword(0x42DD40);
MakeComm(0x42DD44, "'+114'");
MakeDword(0x42DD44);
MakeComm(0x42DD48, "'+118'");
MakeDword(0x42DD48);
MakeComm(0x42DD4C, "'+11C'");
MakeDword(0x42DD4C);
MakeComm(0x42DD50, "'+120'");
MakeDword(0x42DD50);
MakeComm(0x42DD54, "'+124'");
MakeDword(0x42DD54);
MakeComm(0x42DD58, "'+128'");
MakeDword(0x42DD58);
MakeComm(0x42DD5C, "'+12C'");
MakeDword(0x42DD5C);
MakeUnkn(0x42DDB0, 1);
MakeNameEx(0x42DDB0, "RTTI_42DDB0_Class_TCustomComboBox", 0);
MakeDword(0x42DDB0);
MakeUnkn(0x42DDB4, 1);
MakeNameEx(0x42DDB4, "", 0);
MakeByte(0x42DDB4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42DDB5, 0x42DDC5);
MakeDword(0x42DDC5);
MakeDword(0x42DDC9);
MakeWord(0x42DDCD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42DDCF, 0x42DDD8);
MakeWord(0x42DDD8);
MakeUnkn(0x42DDDC, 1);
MakeNameEx(0x42DDDC, "VMT_42DDDC_TComboBox", 0);
MakeDword(0x42DDDC);
MakeDword(0x42DDE0);
MakeDword(0x42DDE4);
MakeDword(0x42DDE8);
MakeDword(0x42DDEC);
MakeDword(0x42DDF0);
MakeDword(0x42DDF4);
MakeDword(0x42DDF8);
MakeDword(0x42DDFC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42DF58, 0x42DF62);
MakeDword(0x42DE00);
MakeDword(0x42DE04);
MakeDword(0x42DE08);
MakeDword(0x42DE0C);
MakeDword(0x42DE10);
MakeDword(0x42DE14);
MakeDword(0x42DE18);
MakeDword(0x42DE1C);
MakeDword(0x42DE20);
MakeDword(0x42DE24);
MakeComm(0x42DE28, "'+0'");
MakeDword(0x42DE28);
MakeComm(0x42DE2C, "'+4'");
MakeDword(0x42DE2C);
MakeComm(0x42DE30, "'+8'");
MakeDword(0x42DE30);
MakeComm(0x42DE34, "'+C'");
MakeDword(0x42DE34);
MakeComm(0x42DE38, "'+10'");
MakeDword(0x42DE38);
MakeComm(0x42DE3C, "'+14'");
MakeDword(0x42DE3C);
MakeComm(0x42DE40, "'+18'");
MakeDword(0x42DE40);
MakeComm(0x42DE44, "'+1C'");
MakeDword(0x42DE44);
MakeComm(0x42DE48, "'+20'");
MakeDword(0x42DE48);
MakeComm(0x42DE4C, "'+24'");
MakeDword(0x42DE4C);
MakeComm(0x42DE50, "'+28'");
MakeDword(0x42DE50);
MakeComm(0x42DE54, "'+2C'");
MakeDword(0x42DE54);
MakeComm(0x42DE58, "'+30'");
MakeDword(0x42DE58);
MakeComm(0x42DE5C, "'+34'");
MakeDword(0x42DE5C);
MakeComm(0x42DE60, "'+38'");
MakeDword(0x42DE60);
MakeComm(0x42DE64, "'+3C'");
MakeDword(0x42DE64);
MakeComm(0x42DE68, "'+40'");
MakeDword(0x42DE68);
MakeComm(0x42DE6C, "'+44'");
MakeDword(0x42DE6C);
MakeComm(0x42DE70, "'+48'");
MakeDword(0x42DE70);
MakeComm(0x42DE74, "'+4C'");
MakeDword(0x42DE74);
MakeComm(0x42DE78, "'+50'");
MakeDword(0x42DE78);
MakeComm(0x42DE7C, "'+54'");
MakeDword(0x42DE7C);
MakeComm(0x42DE80, "'+58'");
MakeDword(0x42DE80);
MakeComm(0x42DE84, "'+5C'");
MakeDword(0x42DE84);
MakeComm(0x42DE88, "'+60'");
MakeDword(0x42DE88);
MakeComm(0x42DE8C, "'+64'");
MakeDword(0x42DE8C);
MakeComm(0x42DE90, "'+68'");
MakeDword(0x42DE90);
MakeComm(0x42DE94, "'+6C'");
MakeDword(0x42DE94);
MakeComm(0x42DE98, "'+70'");
MakeDword(0x42DE98);
MakeComm(0x42DE9C, "'+74'");
MakeDword(0x42DE9C);
MakeComm(0x42DEA0, "'+78'");
MakeDword(0x42DEA0);
MakeComm(0x42DEA4, "'+7C'");
MakeDword(0x42DEA4);
MakeComm(0x42DEA8, "'+80'");
MakeDword(0x42DEA8);
MakeComm(0x42DEAC, "'+84'");
MakeDword(0x42DEAC);
MakeComm(0x42DEB0, "'+88'");
MakeDword(0x42DEB0);
MakeComm(0x42DEB4, "'+8C'");
MakeDword(0x42DEB4);
MakeComm(0x42DEB8, "'+90'");
MakeDword(0x42DEB8);
MakeComm(0x42DEBC, "'+94'");
MakeDword(0x42DEBC);
MakeComm(0x42DEC0, "'+98'");
MakeDword(0x42DEC0);
MakeComm(0x42DEC4, "'+9C'");
MakeDword(0x42DEC4);
MakeComm(0x42DEC8, "'+A0'");
MakeDword(0x42DEC8);
MakeComm(0x42DECC, "'+A4'");
MakeDword(0x42DECC);
MakeComm(0x42DED0, "'+A8'");
MakeDword(0x42DED0);
MakeComm(0x42DED4, "'+AC'");
MakeDword(0x42DED4);
MakeComm(0x42DED8, "'+B0'");
MakeDword(0x42DED8);
MakeComm(0x42DEDC, "'+B4'");
MakeDword(0x42DEDC);
MakeComm(0x42DEE0, "'+B8'");
MakeDword(0x42DEE0);
MakeComm(0x42DEE4, "'+BC'");
MakeDword(0x42DEE4);
MakeComm(0x42DEE8, "'+C0'");
MakeDword(0x42DEE8);
MakeComm(0x42DEEC, "'+C4'");
MakeDword(0x42DEEC);
MakeComm(0x42DEF0, "'+C8'");
MakeDword(0x42DEF0);
MakeComm(0x42DEF4, "'+CC'");
MakeDword(0x42DEF4);
MakeComm(0x42DEF8, "'+D0'");
MakeDword(0x42DEF8);
MakeComm(0x42DEFC, "'+D4'");
MakeDword(0x42DEFC);
MakeComm(0x42DF00, "'+D8'");
MakeDword(0x42DF00);
MakeComm(0x42DF04, "'+DC'");
MakeDword(0x42DF04);
MakeComm(0x42DF08, "'+E0'");
MakeDword(0x42DF08);
MakeComm(0x42DF0C, "'+E4'");
MakeDword(0x42DF0C);
MakeComm(0x42DF10, "'+E8'");
MakeDword(0x42DF10);
MakeComm(0x42DF14, "'+EC'");
MakeDword(0x42DF14);
MakeComm(0x42DF18, "'+F0'");
MakeDword(0x42DF18);
MakeComm(0x42DF1C, "'+F4'");
MakeDword(0x42DF1C);
MakeComm(0x42DF20, "'+F8'");
MakeDword(0x42DF20);
MakeComm(0x42DF24, "'+FC'");
MakeDword(0x42DF24);
MakeComm(0x42DF28, "'+100'");
MakeDword(0x42DF28);
MakeComm(0x42DF2C, "'+104'");
MakeDword(0x42DF2C);
MakeComm(0x42DF30, "'+108'");
MakeDword(0x42DF30);
MakeComm(0x42DF34, "'+10C'");
MakeDword(0x42DF34);
MakeComm(0x42DF38, "'+110'");
MakeDword(0x42DF38);
MakeComm(0x42DF3C, "'+114'");
MakeDword(0x42DF3C);
MakeComm(0x42DF40, "'+118'");
MakeDword(0x42DF40);
MakeComm(0x42DF44, "'+11C'");
MakeDword(0x42DF44);
MakeComm(0x42DF48, "'+120'");
MakeDword(0x42DF48);
MakeComm(0x42DF4C, "'+124'");
MakeDword(0x42DF4C);
MakeComm(0x42DF50, "'+128'");
MakeDword(0x42DF50);
MakeComm(0x42DF54, "'+12C'");
MakeDword(0x42DF54);
MakeUnkn(0x42DF64, 1);
MakeNameEx(0x42DF64, "RTTI_42DF64_Class_TComboBox", 0);
MakeDword(0x42DF64);
MakeUnkn(0x42DF68, 1);
MakeNameEx(0x42DF68, "", 0);
MakeByte(0x42DF68);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42DF69, 0x42DF73);
MakeDword(0x42DF73);
MakeDword(0x42DF77);
MakeWord(0x42DF7B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42DF7D, 0x42DF86);
MakeWord(0x42DF86);
MakeDword(0x42DF88);
MakeDword(0x42DF8C);
MakeDword(0x42DF90);
MakeDword(0x42DF94);
MakeDword(0x42DF98);
MakeDword(0x42DF9C);
MakeWord(0x42DFA0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42DFA2, 0x42DFA8);
MakeDword(0x42DFA8);
MakeDword(0x42DFAC);
MakeDword(0x42DFB0);
MakeDword(0x42DFB4);
MakeDword(0x42DFB8);
MakeDword(0x42DFBC);
MakeWord(0x42DFC0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42DFC2, 0x42DFCF);
MakeDword(0x42DFCF);
MakeDword(0x42DFD3);
MakeDword(0x42DFD7);
MakeDword(0x42DFDB);
MakeDword(0x42DFDF);
MakeDword(0x42DFE3);
MakeWord(0x42DFE7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42DFE9, 0x42DFFB);
MakeDword(0x42DFFB);
MakeDword(0x42DFFF);
MakeDword(0x42E003);
MakeDword(0x42E007);
MakeDword(0x42E00B);
MakeDword(0x42E00F);
MakeWord(0x42E013);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E015, 0x42E022);
MakeDword(0x42E022);
MakeDword(0x42E026);
MakeDword(0x42E02A);
MakeDword(0x42E02E);
MakeDword(0x42E032);
MakeDword(0x42E036);
MakeWord(0x42E03A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E03C, 0x42E048);
MakeDword(0x42E048);
MakeDword(0x42E04C);
MakeDword(0x42E050);
MakeDword(0x42E054);
MakeDword(0x42E058);
MakeDword(0x42E05C);
MakeWord(0x42E060);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E062, 0x42E06D);
MakeDword(0x42E06D);
MakeDword(0x42E071);
MakeDword(0x42E075);
MakeDword(0x42E079);
MakeDword(0x42E07D);
MakeDword(0x42E081);
MakeWord(0x42E085);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E087, 0x42E092);
MakeDword(0x42E092);
MakeDword(0x42E096);
MakeDword(0x42E09A);
MakeDword(0x42E09E);
MakeDword(0x42E0A2);
MakeDword(0x42E0A6);
MakeWord(0x42E0AA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E0AC, 0x42E0B6);
MakeDword(0x42E0B6);
MakeDword(0x42E0BA);
MakeDword(0x42E0BE);
MakeDword(0x42E0C2);
MakeDword(0x42E0C6);
MakeDword(0x42E0CA);
MakeWord(0x42E0CE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E0D0, 0x42E0DB);
MakeDword(0x42E0DB);
MakeDword(0x42E0DF);
MakeDword(0x42E0E3);
MakeDword(0x42E0E7);
MakeDword(0x42E0EB);
MakeDword(0x42E0EF);
MakeWord(0x42E0F3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E0F5, 0x42E0FB);
MakeDword(0x42E0FB);
MakeDword(0x42E0FF);
MakeDword(0x42E103);
MakeDword(0x42E107);
MakeDword(0x42E10B);
MakeDword(0x42E10F);
MakeWord(0x42E113);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E115, 0x42E11D);
MakeDword(0x42E11D);
MakeDword(0x42E121);
MakeDword(0x42E125);
MakeDword(0x42E129);
MakeDword(0x42E12D);
MakeDword(0x42E131);
MakeWord(0x42E135);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E137, 0x42E140);
MakeDword(0x42E140);
MakeDword(0x42E144);
MakeDword(0x42E148);
MakeDword(0x42E14C);
MakeDword(0x42E150);
MakeDword(0x42E154);
MakeWord(0x42E158);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E15A, 0x42E163);
MakeDword(0x42E163);
MakeDword(0x42E167);
MakeDword(0x42E16B);
MakeDword(0x42E16F);
MakeDword(0x42E173);
MakeDword(0x42E177);
MakeWord(0x42E17B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E17D, 0x42E183);
MakeDword(0x42E183);
MakeDword(0x42E187);
MakeDword(0x42E18B);
MakeDword(0x42E18F);
MakeDword(0x42E193);
MakeDword(0x42E197);
MakeWord(0x42E19B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E19D, 0x42E1A9);
MakeDword(0x42E1A9);
MakeDword(0x42E1AD);
MakeDword(0x42E1B1);
MakeDword(0x42E1B5);
MakeDword(0x42E1B9);
MakeDword(0x42E1BD);
MakeWord(0x42E1C1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E1C3, 0x42E1C9);
MakeDword(0x42E1C9);
MakeDword(0x42E1CD);
MakeDword(0x42E1D1);
MakeDword(0x42E1D5);
MakeDword(0x42E1D9);
MakeDword(0x42E1DD);
MakeWord(0x42E1E1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E1E3, 0x42E1EE);
MakeDword(0x42E1EE);
MakeDword(0x42E1F2);
MakeDword(0x42E1F6);
MakeDword(0x42E1FA);
MakeDword(0x42E1FE);
MakeDword(0x42E202);
MakeWord(0x42E206);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E208, 0x42E211);
MakeDword(0x42E211);
MakeDword(0x42E215);
MakeDword(0x42E219);
MakeDword(0x42E21D);
MakeDword(0x42E221);
MakeDword(0x42E225);
MakeWord(0x42E229);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E22B, 0x42E234);
MakeDword(0x42E234);
MakeDword(0x42E238);
MakeDword(0x42E23C);
MakeDword(0x42E240);
MakeDword(0x42E244);
MakeDword(0x42E248);
MakeWord(0x42E24C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E24E, 0x42E25C);
MakeDword(0x42E25C);
MakeDword(0x42E260);
MakeDword(0x42E264);
MakeDword(0x42E268);
MakeDword(0x42E26C);
MakeDword(0x42E270);
MakeWord(0x42E274);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E276, 0x42E27E);
MakeDword(0x42E27E);
MakeDword(0x42E282);
MakeDword(0x42E286);
MakeDword(0x42E28A);
MakeDword(0x42E28E);
MakeDword(0x42E292);
MakeWord(0x42E296);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E298, 0x42E29D);
MakeDword(0x42E29D);
MakeDword(0x42E2A1);
MakeDword(0x42E2A5);
MakeDword(0x42E2A9);
MakeDword(0x42E2AD);
MakeDword(0x42E2B1);
MakeWord(0x42E2B5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E2B7, 0x42E2BF);
MakeDword(0x42E2BF);
MakeDword(0x42E2C3);
MakeDword(0x42E2C7);
MakeDword(0x42E2CB);
MakeDword(0x42E2CF);
MakeDword(0x42E2D3);
MakeWord(0x42E2D7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E2D9, 0x42E2E1);
MakeDword(0x42E2E1);
MakeDword(0x42E2E5);
MakeDword(0x42E2E9);
MakeDword(0x42E2ED);
MakeDword(0x42E2F1);
MakeDword(0x42E2F5);
MakeWord(0x42E2F9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E2FB, 0x42E306);
MakeDword(0x42E306);
MakeDword(0x42E30A);
MakeDword(0x42E30E);
MakeDword(0x42E312);
MakeDword(0x42E316);
MakeDword(0x42E31A);
MakeWord(0x42E31E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E320, 0x42E32A);
MakeDword(0x42E32A);
MakeDword(0x42E32E);
MakeDword(0x42E332);
MakeDword(0x42E336);
MakeDword(0x42E33A);
MakeDword(0x42E33E);
MakeWord(0x42E342);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E344, 0x42E34E);
MakeDword(0x42E34E);
MakeDword(0x42E352);
MakeDword(0x42E356);
MakeDword(0x42E35A);
MakeDword(0x42E35E);
MakeDword(0x42E362);
MakeWord(0x42E366);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E368, 0x42E377);
MakeDword(0x42E377);
MakeDword(0x42E37B);
MakeDword(0x42E37F);
MakeDword(0x42E383);
MakeDword(0x42E387);
MakeDword(0x42E38B);
MakeWord(0x42E38F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E391, 0x42E39D);
MakeDword(0x42E39D);
MakeDword(0x42E3A1);
MakeDword(0x42E3A5);
MakeDword(0x42E3A9);
MakeDword(0x42E3AD);
MakeDword(0x42E3B1);
MakeWord(0x42E3B5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E3B7, 0x42E3C3);
MakeDword(0x42E3C3);
MakeDword(0x42E3C7);
MakeDword(0x42E3CB);
MakeDword(0x42E3CF);
MakeDword(0x42E3D3);
MakeDword(0x42E3D7);
MakeWord(0x42E3DB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E3DD, 0x42E3E8);
MakeDword(0x42E3E8);
MakeDword(0x42E3EC);
MakeDword(0x42E3F0);
MakeDword(0x42E3F4);
MakeDword(0x42E3F8);
MakeDword(0x42E3FC);
MakeWord(0x42E400);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E402, 0x42E411);
MakeDword(0x42E411);
MakeDword(0x42E415);
MakeDword(0x42E419);
MakeDword(0x42E41D);
MakeDword(0x42E421);
MakeDword(0x42E425);
MakeWord(0x42E429);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E42B, 0x42E435);
MakeDword(0x42E435);
MakeDword(0x42E439);
MakeDword(0x42E43D);
MakeDword(0x42E441);
MakeDword(0x42E445);
MakeDword(0x42E449);
MakeWord(0x42E44D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E44F, 0x42E458);
MakeDword(0x42E458);
MakeDword(0x42E45C);
MakeDword(0x42E460);
MakeDword(0x42E464);
MakeDword(0x42E468);
MakeDword(0x42E46C);
MakeWord(0x42E470);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E472, 0x42E479);
MakeDword(0x42E479);
MakeDword(0x42E47D);
MakeDword(0x42E481);
MakeDword(0x42E485);
MakeDword(0x42E489);
MakeDword(0x42E48D);
MakeWord(0x42E491);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E493, 0x42E49C);
MakeDword(0x42E49C);
MakeDword(0x42E4A0);
MakeDword(0x42E4A4);
MakeDword(0x42E4A8);
MakeDword(0x42E4AC);
MakeDword(0x42E4B0);
MakeWord(0x42E4B4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E4B6, 0x42E4BE);
MakeDword(0x42E4BE);
MakeDword(0x42E4C2);
MakeDword(0x42E4C6);
MakeDword(0x42E4CA);
MakeDword(0x42E4CE);
MakeDword(0x42E4D2);
MakeWord(0x42E4D6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E4D8, 0x42E4DD);
MakeDword(0x42E4DD);
MakeDword(0x42E4E1);
MakeDword(0x42E4E5);
MakeDword(0x42E4E9);
MakeDword(0x42E4ED);
MakeDword(0x42E4F1);
MakeWord(0x42E4F5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E4F7, 0x42E4FF);
MakeDword(0x42E4FF);
MakeDword(0x42E503);
MakeDword(0x42E507);
MakeDword(0x42E50B);
MakeDword(0x42E50F);
MakeDword(0x42E513);
MakeWord(0x42E517);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E519, 0x42E522);
MakeDword(0x42E522);
MakeDword(0x42E526);
MakeDword(0x42E52A);
MakeDword(0x42E52E);
MakeDword(0x42E532);
MakeDword(0x42E536);
MakeWord(0x42E53A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E53C, 0x42E544);
MakeDword(0x42E544);
MakeDword(0x42E548);
MakeDword(0x42E54C);
MakeDword(0x42E550);
MakeDword(0x42E554);
MakeDword(0x42E558);
MakeWord(0x42E55C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E55E, 0x42E568);
MakeDword(0x42E568);
MakeDword(0x42E56C);
MakeDword(0x42E570);
MakeDword(0x42E574);
MakeDword(0x42E578);
MakeDword(0x42E57C);
MakeWord(0x42E580);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E582, 0x42E591);
MakeDword(0x42E591);
MakeDword(0x42E595);
MakeDword(0x42E599);
MakeDword(0x42E59D);
MakeDword(0x42E5A1);
MakeDword(0x42E5A5);
MakeWord(0x42E5A9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E5AB, 0x42E5B6);
MakeDword(0x42E5B6);
MakeDword(0x42E5BA);
MakeDword(0x42E5BE);
MakeDword(0x42E5C2);
MakeDword(0x42E5C6);
MakeDword(0x42E5CA);
MakeWord(0x42E5CE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E5D0, 0x42E5DB);
MakeDword(0x42E5DB);
MakeDword(0x42E5DF);
MakeDword(0x42E5E3);
MakeDword(0x42E5E7);
MakeDword(0x42E5EB);
MakeDword(0x42E5EF);
MakeWord(0x42E5F3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E5F5, 0x42E600);
MakeDword(0x42E600);
MakeDword(0x42E604);
MakeDword(0x42E608);
MakeDword(0x42E60C);
MakeDword(0x42E610);
MakeDword(0x42E614);
MakeWord(0x42E618);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E61A, 0x42E625);
MakeDword(0x42E625);
MakeDword(0x42E629);
MakeDword(0x42E62D);
MakeDword(0x42E631);
MakeDword(0x42E635);
MakeDword(0x42E639);
MakeWord(0x42E63D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E63F, 0x42E64A);
MakeDword(0x42E64A);
MakeDword(0x42E64E);
MakeDword(0x42E652);
MakeDword(0x42E656);
MakeDword(0x42E65A);
MakeDword(0x42E65E);
MakeWord(0x42E662);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E664, 0x42E66E);
MakeDword(0x42E66E);
MakeDword(0x42E672);
MakeDword(0x42E676);
MakeDword(0x42E67A);
MakeDword(0x42E67E);
MakeDword(0x42E682);
MakeWord(0x42E686);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E688, 0x42E692);
MakeDword(0x42E692);
MakeDword(0x42E696);
MakeDword(0x42E69A);
MakeDword(0x42E69E);
MakeDword(0x42E6A2);
MakeDword(0x42E6A6);
MakeWord(0x42E6AA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E6AC, 0x42E6B4);
MakeDword(0x42E6B4);
MakeDword(0x42E6B8);
MakeDword(0x42E6BC);
MakeDword(0x42E6C0);
MakeDword(0x42E6C4);
MakeDword(0x42E6C8);
MakeWord(0x42E6CC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E6CE, 0x42E6D5);
MakeDword(0x42E6D5);
MakeDword(0x42E6D9);
MakeDword(0x42E6DD);
MakeDword(0x42E6E1);
MakeDword(0x42E6E5);
MakeDword(0x42E6E9);
MakeWord(0x42E6ED);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E6EF, 0x42E6F9);
MakeDword(0x42E6F9);
MakeDword(0x42E6FD);
MakeDword(0x42E701);
MakeDword(0x42E705);
MakeDword(0x42E709);
MakeDword(0x42E70D);
MakeWord(0x42E711);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E713, 0x42E71E);
MakeDword(0x42E71E);
MakeDword(0x42E722);
MakeDword(0x42E726);
MakeDword(0x42E72A);
MakeDword(0x42E72E);
MakeDword(0x42E732);
MakeWord(0x42E736);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E738, 0x42E740);
MakeDword(0x42E740);
MakeDword(0x42E744);
MakeDword(0x42E748);
MakeDword(0x42E74C);
MakeDword(0x42E750);
MakeDword(0x42E754);
MakeWord(0x42E758);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E75A, 0x42E768);
MakeDword(0x42E768);
MakeDword(0x42E76C);
MakeDword(0x42E770);
MakeDword(0x42E774);
MakeDword(0x42E778);
MakeDword(0x42E77C);
MakeWord(0x42E780);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E782, 0x42E78F);
MakeDword(0x42E78F);
MakeDword(0x42E793);
MakeDword(0x42E797);
MakeDword(0x42E79B);
MakeDword(0x42E79F);
MakeDword(0x42E7A3);
MakeWord(0x42E7A7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E7A9, 0x42E7B6);
MakeDword(0x42E7B6);
MakeDword(0x42E7BA);
MakeDword(0x42E7BE);
MakeDword(0x42E7C2);
MakeDword(0x42E7C6);
MakeDword(0x42E7CA);
MakeWord(0x42E7CE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E7D0, 0x42E7D9);
MakeDword(0x42E7D9);
MakeDword(0x42E7DD);
MakeDword(0x42E7E1);
MakeDword(0x42E7E5);
MakeDword(0x42E7E9);
MakeDword(0x42E7ED);
MakeWord(0x42E7F1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E7F3, 0x42E7FF);
MakeDword(0x42E7FF);
MakeDword(0x42E803);
MakeDword(0x42E807);
MakeDword(0x42E80B);
MakeDword(0x42E80F);
MakeDword(0x42E813);
MakeWord(0x42E817);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E819, 0x42E825);
MakeDword(0x42E825);
MakeDword(0x42E829);
MakeDword(0x42E82D);
MakeDword(0x42E831);
MakeDword(0x42E835);
MakeDword(0x42E839);
MakeWord(0x42E83D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E83F, 0x42E845);
MakeUnkn(0x42E848, 1);
MakeNameEx(0x42E848, "VMT_42E848_TButtonActionLink", 0);
MakeDword(0x42E848);
MakeDword(0x42E84C);
MakeDword(0x42E850);
MakeDword(0x42E854);
MakeDword(0x42E858);
MakeDword(0x42E85C);
MakeDword(0x42E860);
MakeDword(0x42E864);
MakeDword(0x42E868);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42E928, 0x42E93A);
MakeDword(0x42E86C);
MakeDword(0x42E870);
MakeDword(0x42E874);
MakeDword(0x42E878);
MakeDword(0x42E87C);
MakeDword(0x42E880);
MakeDword(0x42E884);
MakeDword(0x42E888);
MakeDword(0x42E88C);
MakeDword(0x42E890);
MakeComm(0x42E894, "'+0'");
MakeDword(0x42E894);
MakeComm(0x42E898, "'+4'");
MakeDword(0x42E898);
MakeComm(0x42E89C, "'+8'");
MakeDword(0x42E89C);
MakeComm(0x42E8A0, "'+C'");
MakeDword(0x42E8A0);
MakeComm(0x42E8A4, "'+10'");
MakeDword(0x42E8A4);
MakeComm(0x42E8A8, "'+14'");
MakeDword(0x42E8A8);
MakeComm(0x42E8AC, "'+18'");
MakeDword(0x42E8AC);
MakeComm(0x42E8B0, "'+1C'");
MakeDword(0x42E8B0);
MakeComm(0x42E8B4, "'+20'");
MakeDword(0x42E8B4);
MakeComm(0x42E8B8, "'+24'");
MakeDword(0x42E8B8);
MakeComm(0x42E8BC, "'+28'");
MakeDword(0x42E8BC);
MakeComm(0x42E8C0, "'+2C'");
MakeDword(0x42E8C0);
MakeComm(0x42E8C4, "'+30'");
MakeDword(0x42E8C4);
MakeComm(0x42E8C8, "'+34'");
MakeDword(0x42E8C8);
MakeComm(0x42E8CC, "'+38'");
MakeDword(0x42E8CC);
MakeComm(0x42E8D0, "'+3C'");
MakeDword(0x42E8D0);
MakeComm(0x42E8D4, "'+40'");
MakeDword(0x42E8D4);
MakeComm(0x42E8D8, "'+44'");
MakeDword(0x42E8D8);
MakeComm(0x42E8DC, "'+48'");
MakeDword(0x42E8DC);
MakeComm(0x42E8E0, "'+4C'");
MakeDword(0x42E8E0);
MakeComm(0x42E8E4, "'+50'");
MakeDword(0x42E8E4);
MakeComm(0x42E8E8, "'+54'");
MakeDword(0x42E8E8);
MakeComm(0x42E8EC, "'+58'");
MakeDword(0x42E8EC);
MakeComm(0x42E8F0, "'+5C'");
MakeDword(0x42E8F0);
MakeComm(0x42E8F4, "'+60'");
MakeDword(0x42E8F4);
MakeComm(0x42E8F8, "'+64'");
MakeDword(0x42E8F8);
MakeComm(0x42E8FC, "'+68'");
MakeDword(0x42E8FC);
MakeComm(0x42E900, "'+6C'");
MakeDword(0x42E900);
MakeComm(0x42E904, "'+70'");
MakeDword(0x42E904);
MakeComm(0x42E908, "'+74'");
MakeDword(0x42E908);
MakeComm(0x42E90C, "'+78'");
MakeDword(0x42E90C);
MakeComm(0x42E910, "'+7C'");
MakeDword(0x42E910);
MakeComm(0x42E914, "'+80'");
MakeDword(0x42E914);
MakeComm(0x42E918, "'+84'");
MakeDword(0x42E918);
MakeComm(0x42E91C, "'+88'");
MakeDword(0x42E91C);
MakeComm(0x42E920, "'+8C'");
MakeDword(0x42E920);
MakeComm(0x42E924, "'+90'");
MakeDword(0x42E924);
MakeUnkn(0x42E93C, 1);
MakeNameEx(0x42E93C, "VMT_42E93C_TButtonControl", 0);
MakeDword(0x42E93C);
MakeDword(0x42E940);
MakeDword(0x42E944);
MakeDword(0x42E948);
MakeDword(0x42E94C);
MakeDword(0x42E950);
MakeDword(0x42E954);
MakeDword(0x42E958);
MakeUnkn(0x42EA68, 1);
MakeNameEx(0x42EA68, "TButtonControl_DynamicTable", 0);
MakeWord(0x42EA68);
MakeWord(0x42EA6A);
MakeWord(0x42EA6C);
MakeWord(0x42EA6E);
MakeWord(0x42EA70);
MakeDword(0x42EA72);
MakeDword(0x42EA76);
MakeDword(0x42EA7A);
MakeDword(0x42EA7E);
MakeDword(0x42E95C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42EA82, 0x42EA91);
MakeDword(0x42E960);
MakeDword(0x42E964);
MakeDword(0x42E968);
MakeDword(0x42E96C);
MakeDword(0x42E970);
MakeDword(0x42E974);
MakeDword(0x42E978);
MakeDword(0x42E97C);
MakeDword(0x42E980);
MakeDword(0x42E984);
MakeComm(0x42E988, "'+0'");
MakeDword(0x42E988);
MakeComm(0x42E98C, "'+4'");
MakeDword(0x42E98C);
MakeComm(0x42E990, "'+8'");
MakeDword(0x42E990);
MakeComm(0x42E994, "'+C'");
MakeDword(0x42E994);
MakeComm(0x42E998, "'+10'");
MakeDword(0x42E998);
MakeComm(0x42E99C, "'+14'");
MakeDword(0x42E99C);
MakeComm(0x42E9A0, "'+18'");
MakeDword(0x42E9A0);
MakeComm(0x42E9A4, "'+1C'");
MakeDword(0x42E9A4);
MakeComm(0x42E9A8, "'+20'");
MakeDword(0x42E9A8);
MakeComm(0x42E9AC, "'+24'");
MakeDword(0x42E9AC);
MakeComm(0x42E9B0, "'+28'");
MakeDword(0x42E9B0);
MakeComm(0x42E9B4, "'+2C'");
MakeDword(0x42E9B4);
MakeComm(0x42E9B8, "'+30'");
MakeDword(0x42E9B8);
MakeComm(0x42E9BC, "'+34'");
MakeDword(0x42E9BC);
MakeComm(0x42E9C0, "'+38'");
MakeDword(0x42E9C0);
MakeComm(0x42E9C4, "'+3C'");
MakeDword(0x42E9C4);
MakeComm(0x42E9C8, "'+40'");
MakeDword(0x42E9C8);
MakeComm(0x42E9CC, "'+44'");
MakeDword(0x42E9CC);
MakeComm(0x42E9D0, "'+48'");
MakeDword(0x42E9D0);
MakeComm(0x42E9D4, "'+4C'");
MakeDword(0x42E9D4);
MakeComm(0x42E9D8, "'+50'");
MakeDword(0x42E9D8);
MakeComm(0x42E9DC, "'+54'");
MakeDword(0x42E9DC);
MakeComm(0x42E9E0, "'+58'");
MakeDword(0x42E9E0);
MakeComm(0x42E9E4, "'+5C'");
MakeDword(0x42E9E4);
MakeComm(0x42E9E8, "'+60'");
MakeDword(0x42E9E8);
MakeComm(0x42E9EC, "'+64'");
MakeDword(0x42E9EC);
MakeComm(0x42E9F0, "'+68'");
MakeDword(0x42E9F0);
MakeComm(0x42E9F4, "'+6C'");
MakeDword(0x42E9F4);
MakeComm(0x42E9F8, "'+70'");
MakeDword(0x42E9F8);
MakeComm(0x42E9FC, "'+74'");
MakeDword(0x42E9FC);
MakeComm(0x42EA00, "'+78'");
MakeDword(0x42EA00);
MakeComm(0x42EA04, "'+7C'");
MakeDword(0x42EA04);
MakeComm(0x42EA08, "'+80'");
MakeDword(0x42EA08);
MakeComm(0x42EA0C, "'+84'");
MakeDword(0x42EA0C);
MakeComm(0x42EA10, "'+88'");
MakeDword(0x42EA10);
MakeComm(0x42EA14, "'+8C'");
MakeDword(0x42EA14);
MakeComm(0x42EA18, "'+90'");
MakeDword(0x42EA18);
MakeComm(0x42EA1C, "'+94'");
MakeDword(0x42EA1C);
MakeComm(0x42EA20, "'+98'");
MakeDword(0x42EA20);
MakeComm(0x42EA24, "'+9C'");
MakeDword(0x42EA24);
MakeComm(0x42EA28, "'+A0'");
MakeDword(0x42EA28);
MakeComm(0x42EA2C, "'+A4'");
MakeDword(0x42EA2C);
MakeComm(0x42EA30, "'+A8'");
MakeDword(0x42EA30);
MakeComm(0x42EA34, "'+AC'");
MakeDword(0x42EA34);
MakeComm(0x42EA38, "'+B0'");
MakeDword(0x42EA38);
MakeComm(0x42EA3C, "'+B4'");
MakeDword(0x42EA3C);
MakeComm(0x42EA40, "'+B8'");
MakeDword(0x42EA40);
MakeComm(0x42EA44, "'+BC'");
MakeDword(0x42EA44);
MakeComm(0x42EA48, "'+C0'");
MakeDword(0x42EA48);
MakeComm(0x42EA4C, "'+C4'");
MakeDword(0x42EA4C);
MakeComm(0x42EA50, "'+C8'");
MakeDword(0x42EA50);
MakeComm(0x42EA54, "'+CC'");
MakeDword(0x42EA54);
MakeComm(0x42EA58, "'+D0'");
MakeDword(0x42EA58);
MakeComm(0x42EA5C, "'+D4'");
MakeDword(0x42EA5C);
MakeComm(0x42EA60, "'+D8'");
MakeDword(0x42EA60);
MakeComm(0x42EA64, "'+DC'");
MakeDword(0x42EA64);
MakeUnkn(0x42EA94, 1);
MakeNameEx(0x42EA94, "RTTI_42EA94_Class_TButtonControl", 0);
MakeDword(0x42EA94);
MakeUnkn(0x42EA98, 1);
MakeNameEx(0x42EA98, "", 0);
MakeByte(0x42EA98);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42EA99, 0x42EAA8);
MakeDword(0x42EAA8);
MakeDword(0x42EAAC);
MakeWord(0x42EAB0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42EAB2, 0x42EABB);
MakeWord(0x42EABB);
MakeUnkn(0x42EAC0, 1);
MakeNameEx(0x42EAC0, "VMT_42EAC0_TButton", 0);
MakeDword(0x42EAC0);
MakeDword(0x42EAC4);
MakeDword(0x42EAC8);
MakeDword(0x42EACC);
MakeDword(0x42EAD0);
MakeDword(0x42EAD4);
MakeDword(0x42EAD8);
MakeDword(0x42EADC);
MakeUnkn(0x42EBF0, 1);
MakeNameEx(0x42EBF0, "TButton_DynamicTable", 0);
MakeWord(0x42EBF0);
MakeWord(0x42EBF2);
MakeWord(0x42EBF4);
MakeWord(0x42EBF6);
MakeWord(0x42EBF8);
MakeWord(0x42EBFA);
MakeWord(0x42EBFC);
MakeWord(0x42EBFE);
MakeWord(0x42EC00);
MakeDword(0x42EC02);
MakeDword(0x42EC06);
MakeDword(0x42EC0A);
MakeDword(0x42EC0E);
MakeDword(0x42EC12);
MakeDword(0x42EC16);
MakeDword(0x42EC1A);
MakeDword(0x42EC1E);
MakeDword(0x42EAE0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42EC22, 0x42EC2A);
MakeDword(0x42EAE4);
MakeDword(0x42EAE8);
MakeDword(0x42EAEC);
MakeDword(0x42EAF0);
MakeDword(0x42EAF4);
MakeDword(0x42EAF8);
MakeDword(0x42EAFC);
MakeDword(0x42EB00);
MakeDword(0x42EB04);
MakeDword(0x42EB08);
MakeComm(0x42EB0C, "'+0'");
MakeDword(0x42EB0C);
MakeComm(0x42EB10, "'+4'");
MakeDword(0x42EB10);
MakeComm(0x42EB14, "'+8'");
MakeDword(0x42EB14);
MakeComm(0x42EB18, "'+C'");
MakeDword(0x42EB18);
MakeComm(0x42EB1C, "'+10'");
MakeDword(0x42EB1C);
MakeComm(0x42EB20, "'+14'");
MakeDword(0x42EB20);
MakeComm(0x42EB24, "'+18'");
MakeDword(0x42EB24);
MakeComm(0x42EB28, "'+1C'");
MakeDword(0x42EB28);
MakeComm(0x42EB2C, "'+20'");
MakeDword(0x42EB2C);
MakeComm(0x42EB30, "'+24'");
MakeDword(0x42EB30);
MakeComm(0x42EB34, "'+28'");
MakeDword(0x42EB34);
MakeComm(0x42EB38, "'+2C'");
MakeDword(0x42EB38);
MakeComm(0x42EB3C, "'+30'");
MakeDword(0x42EB3C);
MakeComm(0x42EB40, "'+34'");
MakeDword(0x42EB40);
MakeComm(0x42EB44, "'+38'");
MakeDword(0x42EB44);
MakeComm(0x42EB48, "'+3C'");
MakeDword(0x42EB48);
MakeComm(0x42EB4C, "'+40'");
MakeDword(0x42EB4C);
MakeComm(0x42EB50, "'+44'");
MakeDword(0x42EB50);
MakeComm(0x42EB54, "'+48'");
MakeDword(0x42EB54);
MakeComm(0x42EB58, "'+4C'");
MakeDword(0x42EB58);
MakeComm(0x42EB5C, "'+50'");
MakeDword(0x42EB5C);
MakeComm(0x42EB60, "'+54'");
MakeDword(0x42EB60);
MakeComm(0x42EB64, "'+58'");
MakeDword(0x42EB64);
MakeComm(0x42EB68, "'+5C'");
MakeDword(0x42EB68);
MakeComm(0x42EB6C, "'+60'");
MakeDword(0x42EB6C);
MakeComm(0x42EB70, "'+64'");
MakeDword(0x42EB70);
MakeComm(0x42EB74, "'+68'");
MakeDword(0x42EB74);
MakeComm(0x42EB78, "'+6C'");
MakeDword(0x42EB78);
MakeComm(0x42EB7C, "'+70'");
MakeDword(0x42EB7C);
MakeComm(0x42EB80, "'+74'");
MakeDword(0x42EB80);
MakeComm(0x42EB84, "'+78'");
MakeDword(0x42EB84);
MakeComm(0x42EB88, "'+7C'");
MakeDword(0x42EB88);
MakeComm(0x42EB8C, "'+80'");
MakeDword(0x42EB8C);
MakeComm(0x42EB90, "'+84'");
MakeDword(0x42EB90);
MakeComm(0x42EB94, "'+88'");
MakeDword(0x42EB94);
MakeComm(0x42EB98, "'+8C'");
MakeDword(0x42EB98);
MakeComm(0x42EB9C, "'+90'");
MakeDword(0x42EB9C);
MakeComm(0x42EBA0, "'+94'");
MakeDword(0x42EBA0);
MakeComm(0x42EBA4, "'+98'");
MakeDword(0x42EBA4);
MakeComm(0x42EBA8, "'+9C'");
MakeDword(0x42EBA8);
MakeComm(0x42EBAC, "'+A0'");
MakeDword(0x42EBAC);
MakeComm(0x42EBB0, "'+A4'");
MakeDword(0x42EBB0);
MakeComm(0x42EBB4, "'+A8'");
MakeDword(0x42EBB4);
MakeComm(0x42EBB8, "'+AC'");
MakeDword(0x42EBB8);
MakeComm(0x42EBBC, "'+B0'");
MakeDword(0x42EBBC);
MakeComm(0x42EBC0, "'+B4'");
MakeDword(0x42EBC0);
MakeComm(0x42EBC4, "'+B8'");
MakeDword(0x42EBC4);
MakeComm(0x42EBC8, "'+BC'");
MakeDword(0x42EBC8);
MakeComm(0x42EBCC, "'+C0'");
MakeDword(0x42EBCC);
MakeComm(0x42EBD0, "'+C4'");
MakeDword(0x42EBD0);
MakeComm(0x42EBD4, "'+C8'");
MakeDword(0x42EBD4);
MakeComm(0x42EBD8, "'+CC'");
MakeDword(0x42EBD8);
MakeComm(0x42EBDC, "'+D0'");
MakeDword(0x42EBDC);
MakeComm(0x42EBE0, "'+D4'");
MakeDword(0x42EBE0);
MakeComm(0x42EBE4, "'+D8'");
MakeDword(0x42EBE4);
MakeComm(0x42EBE8, "'+DC'");
MakeDword(0x42EBE8);
MakeComm(0x42EBEC, "'+E0'");
MakeDword(0x42EBEC);
MakeUnkn(0x42EC2C, 1);
MakeNameEx(0x42EC2C, "RTTI_42EC2C_Class_TButton", 0);
MakeDword(0x42EC2C);
MakeUnkn(0x42EC30, 1);
MakeNameEx(0x42EC30, "", 0);
MakeByte(0x42EC30);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42EC31, 0x42EC39);
MakeDword(0x42EC39);
MakeDword(0x42EC3D);
MakeWord(0x42EC41);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42EC43, 0x42EC4C);
MakeWord(0x42EC4C);
MakeDword(0x42EC4E);
MakeDword(0x42EC52);
MakeDword(0x42EC56);
MakeDword(0x42EC5A);
MakeDword(0x42EC5E);
MakeDword(0x42EC62);
MakeWord(0x42EC66);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42EC68, 0x42EC6F);
MakeDword(0x42EC6F);
MakeDword(0x42EC73);
MakeDword(0x42EC77);
MakeDword(0x42EC7B);
MakeDword(0x42EC7F);
MakeDword(0x42EC83);
MakeWord(0x42EC87);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42EC89, 0x42EC8F);
MakeDword(0x42EC8F);
MakeDword(0x42EC93);
MakeDword(0x42EC97);
MakeDword(0x42EC9B);
MakeDword(0x42EC9F);
MakeDword(0x42ECA3);
MakeWord(0x42ECA7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42ECA9, 0x42ECB1);
MakeDword(0x42ECB1);
MakeDword(0x42ECB5);
MakeDword(0x42ECB9);
MakeDword(0x42ECBD);
MakeDword(0x42ECC1);
MakeDword(0x42ECC5);
MakeWord(0x42ECC9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42ECCB, 0x42ECD4);
MakeDword(0x42ECD4);
MakeDword(0x42ECD8);
MakeDword(0x42ECDC);
MakeDword(0x42ECE0);
MakeDword(0x42ECE4);
MakeDword(0x42ECE8);
MakeWord(0x42ECEC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42ECEE, 0x42ECF5);
MakeDword(0x42ECF5);
MakeDword(0x42ECF9);
MakeDword(0x42ECFD);
MakeDword(0x42ED01);
MakeDword(0x42ED05);
MakeDword(0x42ED09);
MakeWord(0x42ED0D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42ED0F, 0x42ED17);
MakeDword(0x42ED17);
MakeDword(0x42ED1B);
MakeDword(0x42ED1F);
MakeDword(0x42ED23);
MakeDword(0x42ED27);
MakeDword(0x42ED2B);
MakeWord(0x42ED2F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42ED31, 0x42ED3D);
MakeDword(0x42ED3D);
MakeDword(0x42ED41);
MakeDword(0x42ED45);
MakeDword(0x42ED49);
MakeDword(0x42ED4D);
MakeDword(0x42ED51);
MakeWord(0x42ED55);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42ED57, 0x42ED5F);
MakeDword(0x42ED5F);
MakeDword(0x42ED63);
MakeDword(0x42ED67);
MakeDword(0x42ED6B);
MakeDword(0x42ED6F);
MakeDword(0x42ED73);
MakeWord(0x42ED77);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42ED79, 0x42ED84);
MakeDword(0x42ED84);
MakeDword(0x42ED88);
MakeDword(0x42ED8C);
MakeDword(0x42ED90);
MakeDword(0x42ED94);
MakeDword(0x42ED98);
MakeWord(0x42ED9C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42ED9E, 0x42EDA7);
MakeDword(0x42EDA7);
MakeDword(0x42EDAB);
MakeDword(0x42EDAF);
MakeDword(0x42EDB3);
MakeDword(0x42EDB7);
MakeDword(0x42EDBB);
MakeWord(0x42EDBF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42EDC1, 0x42EDCA);
MakeDword(0x42EDCA);
MakeDword(0x42EDCE);
MakeDword(0x42EDD2);
MakeDword(0x42EDD6);
MakeDword(0x42EDDA);
MakeDword(0x42EDDE);
MakeWord(0x42EDE2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42EDE4, 0x42EDEC);
MakeDword(0x42EDEC);
MakeDword(0x42EDF0);
MakeDword(0x42EDF4);
MakeDword(0x42EDF8);
MakeDword(0x42EDFC);
MakeDword(0x42EE00);
MakeWord(0x42EE04);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42EE06, 0x42EE0B);
MakeDword(0x42EE0B);
MakeDword(0x42EE0F);
MakeDword(0x42EE13);
MakeDword(0x42EE17);
MakeDword(0x42EE1B);
MakeDword(0x42EE1F);
MakeWord(0x42EE23);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42EE25, 0x42EE31);
MakeDword(0x42EE31);
MakeDword(0x42EE35);
MakeDword(0x42EE39);
MakeDword(0x42EE3D);
MakeDword(0x42EE41);
MakeDword(0x42EE45);
MakeWord(0x42EE49);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42EE4B, 0x42EE5A);
MakeDword(0x42EE5A);
MakeDword(0x42EE5E);
MakeDword(0x42EE62);
MakeDword(0x42EE66);
MakeDword(0x42EE6A);
MakeDword(0x42EE6E);
MakeWord(0x42EE72);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42EE74, 0x42EE7F);
MakeDword(0x42EE7F);
MakeDword(0x42EE83);
MakeDword(0x42EE87);
MakeDword(0x42EE8B);
MakeDword(0x42EE8F);
MakeDword(0x42EE93);
MakeWord(0x42EE97);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42EE99, 0x42EEA8);
MakeDword(0x42EEA8);
MakeDword(0x42EEAC);
MakeDword(0x42EEB0);
MakeDword(0x42EEB4);
MakeDword(0x42EEB8);
MakeDword(0x42EEBC);
MakeWord(0x42EEC0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42EEC2, 0x42EECC);
MakeDword(0x42EECC);
MakeDword(0x42EED0);
MakeDword(0x42EED4);
MakeDword(0x42EED8);
MakeDword(0x42EEDC);
MakeDword(0x42EEE0);
MakeWord(0x42EEE4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42EEE6, 0x42EEEF);
MakeDword(0x42EEEF);
MakeDword(0x42EEF3);
MakeDword(0x42EEF7);
MakeDword(0x42EEFB);
MakeDword(0x42EEFF);
MakeDword(0x42EF03);
MakeWord(0x42EF07);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42EF09, 0x42EF12);
MakeDword(0x42EF12);
MakeDword(0x42EF16);
MakeDword(0x42EF1A);
MakeDword(0x42EF1E);
MakeDword(0x42EF22);
MakeDword(0x42EF26);
MakeWord(0x42EF2A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42EF2C, 0x42EF34);
MakeDword(0x42EF34);
MakeDword(0x42EF38);
MakeDword(0x42EF3C);
MakeDword(0x42EF40);
MakeDword(0x42EF44);
MakeDword(0x42EF48);
MakeWord(0x42EF4C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42EF4E, 0x42EF56);
MakeDword(0x42EF56);
MakeDword(0x42EF5A);
MakeDword(0x42EF5E);
MakeDword(0x42EF62);
MakeDword(0x42EF66);
MakeDword(0x42EF6A);
MakeWord(0x42EF6E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42EF70, 0x42EF79);
MakeDword(0x42EF79);
MakeDword(0x42EF7D);
MakeDword(0x42EF81);
MakeDword(0x42EF85);
MakeDword(0x42EF89);
MakeDword(0x42EF8D);
MakeWord(0x42EF91);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42EF93, 0x42EF9B);
MakeDword(0x42EF9B);
MakeDword(0x42EF9F);
MakeDword(0x42EFA3);
MakeDword(0x42EFA7);
MakeDword(0x42EFAB);
MakeDword(0x42EFAF);
MakeWord(0x42EFB3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42EFB5, 0x42EFC4);
MakeDword(0x42EFC4);
MakeDword(0x42EFC8);
MakeDword(0x42EFCC);
MakeDword(0x42EFD0);
MakeDword(0x42EFD4);
MakeDword(0x42EFD8);
MakeWord(0x42EFDC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42EFDE, 0x42EFE9);
MakeDword(0x42EFE9);
MakeDword(0x42EFED);
MakeDword(0x42EFF1);
MakeDword(0x42EFF5);
MakeDword(0x42EFF9);
MakeDword(0x42EFFD);
MakeWord(0x42F001);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F003, 0x42F00E);
MakeDword(0x42F00E);
MakeDword(0x42F012);
MakeDword(0x42F016);
MakeDword(0x42F01A);
MakeDword(0x42F01E);
MakeDword(0x42F022);
MakeWord(0x42F026);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F028, 0x42F032);
MakeDword(0x42F032);
MakeDword(0x42F036);
MakeDword(0x42F03A);
MakeDword(0x42F03E);
MakeDword(0x42F042);
MakeDword(0x42F046);
MakeWord(0x42F04A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F04C, 0x42F056);
MakeDword(0x42F056);
MakeDword(0x42F05A);
MakeDword(0x42F05E);
MakeDword(0x42F062);
MakeDword(0x42F066);
MakeDword(0x42F06A);
MakeWord(0x42F06E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F070, 0x42F078);
MakeDword(0x42F078);
MakeDword(0x42F07C);
MakeDword(0x42F080);
MakeDword(0x42F084);
MakeDword(0x42F088);
MakeDword(0x42F08C);
MakeWord(0x42F090);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F092, 0x42F099);
MakeDword(0x42F099);
MakeDword(0x42F09D);
MakeDword(0x42F0A1);
MakeDword(0x42F0A5);
MakeDword(0x42F0A9);
MakeDword(0x42F0AD);
MakeWord(0x42F0B1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F0B3, 0x42F0BD);
MakeDword(0x42F0BD);
MakeDword(0x42F0C1);
MakeDword(0x42F0C5);
MakeDword(0x42F0C9);
MakeDword(0x42F0CD);
MakeDword(0x42F0D1);
MakeWord(0x42F0D5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F0D7, 0x42F0E2);
MakeDword(0x42F0E2);
MakeDword(0x42F0E6);
MakeDword(0x42F0EA);
MakeDword(0x42F0EE);
MakeDword(0x42F0F2);
MakeDword(0x42F0F6);
MakeWord(0x42F0FA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F0FC, 0x42F104);
MakeDword(0x42F104);
MakeDword(0x42F108);
MakeDword(0x42F10C);
MakeDword(0x42F110);
MakeDword(0x42F114);
MakeDword(0x42F118);
MakeWord(0x42F11C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F11E, 0x42F12E);
MakeDword(0x42F12E);
MakeDword(0x42F132);
MakeDword(0x42F136);
MakeDword(0x42F13A);
MakeDword(0x42F13E);
MakeDword(0x42F142);
MakeWord(0x42F146);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F148, 0x42F154);
MakeDword(0x42F154);
MakeDword(0x42F158);
MakeDword(0x42F15C);
MakeDword(0x42F160);
MakeDword(0x42F164);
MakeDword(0x42F168);
MakeWord(0x42F16C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F16E, 0x42F17B);
MakeDword(0x42F17B);
MakeDword(0x42F17F);
MakeDword(0x42F183);
MakeDword(0x42F187);
MakeDword(0x42F18B);
MakeDword(0x42F18F);
MakeWord(0x42F193);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F195, 0x42F1A2);
MakeDword(0x42F1A2);
MakeDword(0x42F1A6);
MakeDword(0x42F1AA);
MakeDword(0x42F1AE);
MakeDword(0x42F1B2);
MakeDword(0x42F1B6);
MakeWord(0x42F1BA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F1BC, 0x42F1C8);
MakeDword(0x42F1C8);
MakeDword(0x42F1CC);
MakeDword(0x42F1D0);
MakeDword(0x42F1D4);
MakeDword(0x42F1D8);
MakeDword(0x42F1DC);
MakeWord(0x42F1E0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F1E2, 0x42F1EC);
MakeDword(0x42F1EC);
MakeDword(0x42F1F0);
MakeDword(0x42F1F4);
MakeDword(0x42F1F8);
MakeDword(0x42F1FC);
MakeDword(0x42F200);
MakeWord(0x42F204);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F206, 0x42F212);
MakeDword(0x42F212);
MakeDword(0x42F216);
MakeDword(0x42F21A);
MakeDword(0x42F21E);
MakeDword(0x42F222);
MakeDword(0x42F226);
MakeWord(0x42F22A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F22C, 0x42F238);
MakeUnkn(0x42F238, 1);
MakeNameEx(0x42F238, "RTTI_42F238_Enumeration_TCheckBoxState", 0);
MakeDword(0x42F238);
MakeUnkn(0x42F23C, 1);
MakeNameEx(0x42F23C, "", 0);
MakeByte(0x42F23C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F23D, 0x42F24C);
MakeByte(0x42F24C);
MakeDword(0x42F24D);
MakeDword(0x42F251);
MakeDword(0x42F255);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F259, 0x42F265);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F265, 0x42F26F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F26F, 0x42F278);
MakeUnkn(0x42F284, 1);
MakeNameEx(0x42F284, "VMT_42F284_TCustomCheckBox", 0);
MakeDword(0x42F284);
MakeDword(0x42F288);
MakeDword(0x42F28C);
MakeDword(0x42F290);
MakeDword(0x42F294);
MakeDword(0x42F298);
MakeDword(0x42F29C);
MakeDword(0x42F2A0);
MakeUnkn(0x42F3B4, 1);
MakeNameEx(0x42F3B4, "TCustomCheckBox_DynamicTable", 0);
MakeWord(0x42F3B4);
MakeWord(0x42F3B6);
MakeWord(0x42F3B8);
MakeWord(0x42F3BA);
MakeWord(0x42F3BC);
MakeWord(0x42F3BE);
MakeWord(0x42F3C0);
MakeDword(0x42F3C2);
MakeDword(0x42F3C6);
MakeDword(0x42F3CA);
MakeDword(0x42F3CE);
MakeDword(0x42F3D2);
MakeDword(0x42F3D6);
MakeDword(0x42F2A4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F3DA, 0x42F3EA);
MakeDword(0x42F2A8);
MakeDword(0x42F2AC);
MakeDword(0x42F2B0);
MakeDword(0x42F2B4);
MakeDword(0x42F2B8);
MakeDword(0x42F2BC);
MakeDword(0x42F2C0);
MakeDword(0x42F2C4);
MakeDword(0x42F2C8);
MakeDword(0x42F2CC);
MakeComm(0x42F2D0, "'+0'");
MakeDword(0x42F2D0);
MakeComm(0x42F2D4, "'+4'");
MakeDword(0x42F2D4);
MakeComm(0x42F2D8, "'+8'");
MakeDword(0x42F2D8);
MakeComm(0x42F2DC, "'+C'");
MakeDword(0x42F2DC);
MakeComm(0x42F2E0, "'+10'");
MakeDword(0x42F2E0);
MakeComm(0x42F2E4, "'+14'");
MakeDword(0x42F2E4);
MakeComm(0x42F2E8, "'+18'");
MakeDword(0x42F2E8);
MakeComm(0x42F2EC, "'+1C'");
MakeDword(0x42F2EC);
MakeComm(0x42F2F0, "'+20'");
MakeDword(0x42F2F0);
MakeComm(0x42F2F4, "'+24'");
MakeDword(0x42F2F4);
MakeComm(0x42F2F8, "'+28'");
MakeDword(0x42F2F8);
MakeComm(0x42F2FC, "'+2C'");
MakeDword(0x42F2FC);
MakeComm(0x42F300, "'+30'");
MakeDword(0x42F300);
MakeComm(0x42F304, "'+34'");
MakeDword(0x42F304);
MakeComm(0x42F308, "'+38'");
MakeDword(0x42F308);
MakeComm(0x42F30C, "'+3C'");
MakeDword(0x42F30C);
MakeComm(0x42F310, "'+40'");
MakeDword(0x42F310);
MakeComm(0x42F314, "'+44'");
MakeDword(0x42F314);
MakeComm(0x42F318, "'+48'");
MakeDword(0x42F318);
MakeComm(0x42F31C, "'+4C'");
MakeDword(0x42F31C);
MakeComm(0x42F320, "'+50'");
MakeDword(0x42F320);
MakeComm(0x42F324, "'+54'");
MakeDword(0x42F324);
MakeComm(0x42F328, "'+58'");
MakeDword(0x42F328);
MakeComm(0x42F32C, "'+5C'");
MakeDword(0x42F32C);
MakeComm(0x42F330, "'+60'");
MakeDword(0x42F330);
MakeComm(0x42F334, "'+64'");
MakeDword(0x42F334);
MakeComm(0x42F338, "'+68'");
MakeDword(0x42F338);
MakeComm(0x42F33C, "'+6C'");
MakeDword(0x42F33C);
MakeComm(0x42F340, "'+70'");
MakeDword(0x42F340);
MakeComm(0x42F344, "'+74'");
MakeDword(0x42F344);
MakeComm(0x42F348, "'+78'");
MakeDword(0x42F348);
MakeComm(0x42F34C, "'+7C'");
MakeDword(0x42F34C);
MakeComm(0x42F350, "'+80'");
MakeDword(0x42F350);
MakeComm(0x42F354, "'+84'");
MakeDword(0x42F354);
MakeComm(0x42F358, "'+88'");
MakeDword(0x42F358);
MakeComm(0x42F35C, "'+8C'");
MakeDword(0x42F35C);
MakeComm(0x42F360, "'+90'");
MakeDword(0x42F360);
MakeComm(0x42F364, "'+94'");
MakeDword(0x42F364);
MakeComm(0x42F368, "'+98'");
MakeDword(0x42F368);
MakeComm(0x42F36C, "'+9C'");
MakeDword(0x42F36C);
MakeComm(0x42F370, "'+A0'");
MakeDword(0x42F370);
MakeComm(0x42F374, "'+A4'");
MakeDword(0x42F374);
MakeComm(0x42F378, "'+A8'");
MakeDword(0x42F378);
MakeComm(0x42F37C, "'+AC'");
MakeDword(0x42F37C);
MakeComm(0x42F380, "'+B0'");
MakeDword(0x42F380);
MakeComm(0x42F384, "'+B4'");
MakeDword(0x42F384);
MakeComm(0x42F388, "'+B8'");
MakeDword(0x42F388);
MakeComm(0x42F38C, "'+BC'");
MakeDword(0x42F38C);
MakeComm(0x42F390, "'+C0'");
MakeDword(0x42F390);
MakeComm(0x42F394, "'+C4'");
MakeDword(0x42F394);
MakeComm(0x42F398, "'+C8'");
MakeDword(0x42F398);
MakeComm(0x42F39C, "'+CC'");
MakeDword(0x42F39C);
MakeComm(0x42F3A0, "'+D0'");
MakeDword(0x42F3A0);
MakeComm(0x42F3A4, "'+D4'");
MakeDword(0x42F3A4);
MakeComm(0x42F3A8, "'+D8'");
MakeDword(0x42F3A8);
MakeComm(0x42F3AC, "'+DC'");
MakeDword(0x42F3AC);
MakeComm(0x42F3B0, "'+E0'");
MakeDword(0x42F3B0);
MakeUnkn(0x42F3EC, 1);
MakeNameEx(0x42F3EC, "RTTI_42F3EC_Class_TCustomCheckBox", 0);
MakeDword(0x42F3EC);
MakeUnkn(0x42F3F0, 1);
MakeNameEx(0x42F3F0, "", 0);
MakeByte(0x42F3F0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F3F1, 0x42F401);
MakeDword(0x42F401);
MakeDword(0x42F405);
MakeWord(0x42F409);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F40B, 0x42F414);
MakeWord(0x42F414);
MakeDword(0x42F416);
MakeDword(0x42F41A);
MakeDword(0x42F41E);
MakeDword(0x42F422);
MakeDword(0x42F426);
MakeDword(0x42F42A);
MakeWord(0x42F42E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F430, 0x42F438);
MakeUnkn(0x42F438, 1);
MakeNameEx(0x42F438, "VMT_42F438_TCheckBox", 0);
MakeDword(0x42F438);
MakeDword(0x42F43C);
MakeDword(0x42F440);
MakeDword(0x42F444);
MakeDword(0x42F448);
MakeDword(0x42F44C);
MakeDword(0x42F450);
MakeDword(0x42F454);
MakeDword(0x42F458);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F568, 0x42F572);
MakeDword(0x42F45C);
MakeDword(0x42F460);
MakeDword(0x42F464);
MakeDword(0x42F468);
MakeDword(0x42F46C);
MakeDword(0x42F470);
MakeDword(0x42F474);
MakeDword(0x42F478);
MakeDword(0x42F47C);
MakeDword(0x42F480);
MakeComm(0x42F484, "'+0'");
MakeDword(0x42F484);
MakeComm(0x42F488, "'+4'");
MakeDword(0x42F488);
MakeComm(0x42F48C, "'+8'");
MakeDword(0x42F48C);
MakeComm(0x42F490, "'+C'");
MakeDword(0x42F490);
MakeComm(0x42F494, "'+10'");
MakeDword(0x42F494);
MakeComm(0x42F498, "'+14'");
MakeDword(0x42F498);
MakeComm(0x42F49C, "'+18'");
MakeDword(0x42F49C);
MakeComm(0x42F4A0, "'+1C'");
MakeDword(0x42F4A0);
MakeComm(0x42F4A4, "'+20'");
MakeDword(0x42F4A4);
MakeComm(0x42F4A8, "'+24'");
MakeDword(0x42F4A8);
MakeComm(0x42F4AC, "'+28'");
MakeDword(0x42F4AC);
MakeComm(0x42F4B0, "'+2C'");
MakeDword(0x42F4B0);
MakeComm(0x42F4B4, "'+30'");
MakeDword(0x42F4B4);
MakeComm(0x42F4B8, "'+34'");
MakeDword(0x42F4B8);
MakeComm(0x42F4BC, "'+38'");
MakeDword(0x42F4BC);
MakeComm(0x42F4C0, "'+3C'");
MakeDword(0x42F4C0);
MakeComm(0x42F4C4, "'+40'");
MakeDword(0x42F4C4);
MakeComm(0x42F4C8, "'+44'");
MakeDword(0x42F4C8);
MakeComm(0x42F4CC, "'+48'");
MakeDword(0x42F4CC);
MakeComm(0x42F4D0, "'+4C'");
MakeDword(0x42F4D0);
MakeComm(0x42F4D4, "'+50'");
MakeDword(0x42F4D4);
MakeComm(0x42F4D8, "'+54'");
MakeDword(0x42F4D8);
MakeComm(0x42F4DC, "'+58'");
MakeDword(0x42F4DC);
MakeComm(0x42F4E0, "'+5C'");
MakeDword(0x42F4E0);
MakeComm(0x42F4E4, "'+60'");
MakeDword(0x42F4E4);
MakeComm(0x42F4E8, "'+64'");
MakeDword(0x42F4E8);
MakeComm(0x42F4EC, "'+68'");
MakeDword(0x42F4EC);
MakeComm(0x42F4F0, "'+6C'");
MakeDword(0x42F4F0);
MakeComm(0x42F4F4, "'+70'");
MakeDword(0x42F4F4);
MakeComm(0x42F4F8, "'+74'");
MakeDword(0x42F4F8);
MakeComm(0x42F4FC, "'+78'");
MakeDword(0x42F4FC);
MakeComm(0x42F500, "'+7C'");
MakeDword(0x42F500);
MakeComm(0x42F504, "'+80'");
MakeDword(0x42F504);
MakeComm(0x42F508, "'+84'");
MakeDword(0x42F508);
MakeComm(0x42F50C, "'+88'");
MakeDword(0x42F50C);
MakeComm(0x42F510, "'+8C'");
MakeDword(0x42F510);
MakeComm(0x42F514, "'+90'");
MakeDword(0x42F514);
MakeComm(0x42F518, "'+94'");
MakeDword(0x42F518);
MakeComm(0x42F51C, "'+98'");
MakeDword(0x42F51C);
MakeComm(0x42F520, "'+9C'");
MakeDword(0x42F520);
MakeComm(0x42F524, "'+A0'");
MakeDword(0x42F524);
MakeComm(0x42F528, "'+A4'");
MakeDword(0x42F528);
MakeComm(0x42F52C, "'+A8'");
MakeDword(0x42F52C);
MakeComm(0x42F530, "'+AC'");
MakeDword(0x42F530);
MakeComm(0x42F534, "'+B0'");
MakeDword(0x42F534);
MakeComm(0x42F538, "'+B4'");
MakeDword(0x42F538);
MakeComm(0x42F53C, "'+B8'");
MakeDword(0x42F53C);
MakeComm(0x42F540, "'+BC'");
MakeDword(0x42F540);
MakeComm(0x42F544, "'+C0'");
MakeDword(0x42F544);
MakeComm(0x42F548, "'+C4'");
MakeDword(0x42F548);
MakeComm(0x42F54C, "'+C8'");
MakeDword(0x42F54C);
MakeComm(0x42F550, "'+CC'");
MakeDword(0x42F550);
MakeComm(0x42F554, "'+D0'");
MakeDword(0x42F554);
MakeComm(0x42F558, "'+D4'");
MakeDword(0x42F558);
MakeComm(0x42F55C, "'+D8'");
MakeDword(0x42F55C);
MakeComm(0x42F560, "'+DC'");
MakeDword(0x42F560);
MakeComm(0x42F564, "'+E0'");
MakeDword(0x42F564);
MakeUnkn(0x42F574, 1);
MakeNameEx(0x42F574, "RTTI_42F574_Class_TCheckBox", 0);
MakeDword(0x42F574);
MakeUnkn(0x42F578, 1);
MakeNameEx(0x42F578, "", 0);
MakeByte(0x42F578);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F579, 0x42F583);
MakeDword(0x42F583);
MakeDword(0x42F587);
MakeWord(0x42F58B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F58D, 0x42F596);
MakeWord(0x42F596);
MakeDword(0x42F598);
MakeDword(0x42F59C);
MakeDword(0x42F5A0);
MakeDword(0x42F5A4);
MakeDword(0x42F5A8);
MakeDword(0x42F5AC);
MakeWord(0x42F5B0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F5B2, 0x42F5B9);
MakeDword(0x42F5B9);
MakeDword(0x42F5BD);
MakeDword(0x42F5C1);
MakeDword(0x42F5C5);
MakeDword(0x42F5C9);
MakeDword(0x42F5CD);
MakeWord(0x42F5D1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F5D3, 0x42F5D9);
MakeDword(0x42F5D9);
MakeDword(0x42F5DD);
MakeDword(0x42F5E1);
MakeDword(0x42F5E5);
MakeDword(0x42F5E9);
MakeDword(0x42F5ED);
MakeWord(0x42F5F1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F5F3, 0x42F5FD);
MakeDword(0x42F5FD);
MakeDword(0x42F601);
MakeDword(0x42F605);
MakeDword(0x42F609);
MakeDword(0x42F60D);
MakeDword(0x42F611);
MakeWord(0x42F615);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F617, 0x42F623);
MakeDword(0x42F623);
MakeDword(0x42F627);
MakeDword(0x42F62B);
MakeDword(0x42F62F);
MakeDword(0x42F633);
MakeDword(0x42F637);
MakeWord(0x42F63B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F63D, 0x42F645);
MakeDword(0x42F645);
MakeDword(0x42F649);
MakeDword(0x42F64D);
MakeDword(0x42F651);
MakeDword(0x42F655);
MakeDword(0x42F659);
MakeWord(0x42F65D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F65F, 0x42F668);
MakeDword(0x42F668);
MakeDword(0x42F66C);
MakeDword(0x42F670);
MakeDword(0x42F674);
MakeDword(0x42F678);
MakeDword(0x42F67C);
MakeWord(0x42F680);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F682, 0x42F68A);
MakeDword(0x42F68A);
MakeDword(0x42F68E);
MakeDword(0x42F692);
MakeDword(0x42F696);
MakeDword(0x42F69A);
MakeDword(0x42F69E);
MakeWord(0x42F6A2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F6A4, 0x42F6AC);
MakeDword(0x42F6AC);
MakeDword(0x42F6B0);
MakeDword(0x42F6B4);
MakeDword(0x42F6B8);
MakeDword(0x42F6BC);
MakeDword(0x42F6C0);
MakeWord(0x42F6C4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F6C6, 0x42F6CC);
MakeDword(0x42F6CC);
MakeDword(0x42F6D0);
MakeDword(0x42F6D4);
MakeDword(0x42F6D8);
MakeDword(0x42F6DC);
MakeDword(0x42F6E0);
MakeWord(0x42F6E4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F6E6, 0x42F6F2);
MakeDword(0x42F6F2);
MakeDword(0x42F6F6);
MakeDword(0x42F6FA);
MakeDword(0x42F6FE);
MakeDword(0x42F702);
MakeDword(0x42F706);
MakeWord(0x42F70A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F70C, 0x42F712);
MakeDword(0x42F712);
MakeDword(0x42F716);
MakeDword(0x42F71A);
MakeDword(0x42F71E);
MakeDword(0x42F722);
MakeDword(0x42F726);
MakeWord(0x42F72A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F72C, 0x42F737);
MakeDword(0x42F737);
MakeDword(0x42F73B);
MakeDword(0x42F73F);
MakeDword(0x42F743);
MakeDword(0x42F747);
MakeDword(0x42F74B);
MakeWord(0x42F74F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F751, 0x42F75A);
MakeDword(0x42F75A);
MakeDword(0x42F75E);
MakeDword(0x42F762);
MakeDword(0x42F766);
MakeDword(0x42F76A);
MakeDword(0x42F76E);
MakeWord(0x42F772);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F774, 0x42F77D);
MakeDword(0x42F77D);
MakeDword(0x42F781);
MakeDword(0x42F785);
MakeDword(0x42F789);
MakeDword(0x42F78D);
MakeDword(0x42F791);
MakeWord(0x42F795);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F797, 0x42F79F);
MakeDword(0x42F79F);
MakeDword(0x42F7A3);
MakeDword(0x42F7A7);
MakeDword(0x42F7AB);
MakeDword(0x42F7AF);
MakeDword(0x42F7B3);
MakeWord(0x42F7B7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F7B9, 0x42F7BE);
MakeDword(0x42F7BE);
MakeDword(0x42F7C2);
MakeDword(0x42F7C6);
MakeDword(0x42F7CA);
MakeDword(0x42F7CE);
MakeDword(0x42F7D2);
MakeWord(0x42F7D6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F7D8, 0x42F7E7);
MakeDword(0x42F7E7);
MakeDword(0x42F7EB);
MakeDword(0x42F7EF);
MakeDword(0x42F7F3);
MakeDword(0x42F7F7);
MakeDword(0x42F7FB);
MakeWord(0x42F7FF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F801, 0x42F80D);
MakeDword(0x42F80D);
MakeDword(0x42F811);
MakeDword(0x42F815);
MakeDword(0x42F819);
MakeDword(0x42F81D);
MakeDword(0x42F821);
MakeWord(0x42F825);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F827, 0x42F833);
MakeDword(0x42F833);
MakeDword(0x42F837);
MakeDword(0x42F83B);
MakeDword(0x42F83F);
MakeDword(0x42F843);
MakeDword(0x42F847);
MakeWord(0x42F84B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F84D, 0x42F858);
MakeDword(0x42F858);
MakeDword(0x42F85C);
MakeDword(0x42F860);
MakeDword(0x42F864);
MakeDword(0x42F868);
MakeDword(0x42F86C);
MakeWord(0x42F870);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F872, 0x42F881);
MakeDword(0x42F881);
MakeDword(0x42F885);
MakeDword(0x42F889);
MakeDword(0x42F88D);
MakeDword(0x42F891);
MakeDword(0x42F895);
MakeWord(0x42F899);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F89B, 0x42F8A5);
MakeDword(0x42F8A5);
MakeDword(0x42F8A9);
MakeDword(0x42F8AD);
MakeDword(0x42F8B1);
MakeDword(0x42F8B5);
MakeDword(0x42F8B9);
MakeWord(0x42F8BD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F8BF, 0x42F8C8);
MakeDword(0x42F8C8);
MakeDword(0x42F8CC);
MakeDword(0x42F8D0);
MakeDword(0x42F8D4);
MakeDword(0x42F8D8);
MakeDword(0x42F8DC);
MakeWord(0x42F8E0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F8E2, 0x42F8E8);
MakeDword(0x42F8E8);
MakeDword(0x42F8EC);
MakeDword(0x42F8F0);
MakeDword(0x42F8F4);
MakeDword(0x42F8F8);
MakeDword(0x42F8FC);
MakeWord(0x42F900);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F902, 0x42F90B);
MakeDword(0x42F90B);
MakeDword(0x42F90F);
MakeDword(0x42F913);
MakeDword(0x42F917);
MakeDword(0x42F91B);
MakeDword(0x42F91F);
MakeWord(0x42F923);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F925, 0x42F92D);
MakeDword(0x42F92D);
MakeDword(0x42F931);
MakeDword(0x42F935);
MakeDword(0x42F939);
MakeDword(0x42F93D);
MakeDword(0x42F941);
MakeWord(0x42F945);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F947, 0x42F94F);
MakeDword(0x42F94F);
MakeDword(0x42F953);
MakeDword(0x42F957);
MakeDword(0x42F95B);
MakeDword(0x42F95F);
MakeDword(0x42F963);
MakeWord(0x42F967);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F969, 0x42F972);
MakeDword(0x42F972);
MakeDword(0x42F976);
MakeDword(0x42F97A);
MakeDword(0x42F97E);
MakeDword(0x42F982);
MakeDword(0x42F986);
MakeWord(0x42F98A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F98C, 0x42F994);
MakeDword(0x42F994);
MakeDword(0x42F998);
MakeDword(0x42F99C);
MakeDword(0x42F9A0);
MakeDword(0x42F9A4);
MakeDword(0x42F9A8);
MakeWord(0x42F9AC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F9AE, 0x42F9BD);
MakeDword(0x42F9BD);
MakeDword(0x42F9C1);
MakeDword(0x42F9C5);
MakeDword(0x42F9C9);
MakeDword(0x42F9CD);
MakeDword(0x42F9D1);
MakeWord(0x42F9D5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F9D7, 0x42F9E2);
MakeDword(0x42F9E2);
MakeDword(0x42F9E6);
MakeDword(0x42F9EA);
MakeDword(0x42F9EE);
MakeDword(0x42F9F2);
MakeDword(0x42F9F6);
MakeWord(0x42F9FA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42F9FC, 0x42FA07);
MakeDword(0x42FA07);
MakeDword(0x42FA0B);
MakeDword(0x42FA0F);
MakeDword(0x42FA13);
MakeDword(0x42FA17);
MakeDword(0x42FA1B);
MakeWord(0x42FA1F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42FA21, 0x42FA2B);
MakeDword(0x42FA2B);
MakeDword(0x42FA2F);
MakeDword(0x42FA33);
MakeDword(0x42FA37);
MakeDword(0x42FA3B);
MakeDword(0x42FA3F);
MakeWord(0x42FA43);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42FA45, 0x42FA4F);
MakeDword(0x42FA4F);
MakeDword(0x42FA53);
MakeDword(0x42FA57);
MakeDword(0x42FA5B);
MakeDword(0x42FA5F);
MakeDword(0x42FA63);
MakeWord(0x42FA67);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42FA69, 0x42FA71);
MakeDword(0x42FA71);
MakeDword(0x42FA75);
MakeDword(0x42FA79);
MakeDword(0x42FA7D);
MakeDword(0x42FA81);
MakeDword(0x42FA85);
MakeWord(0x42FA89);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42FA8B, 0x42FA92);
MakeDword(0x42FA92);
MakeDword(0x42FA96);
MakeDword(0x42FA9A);
MakeDword(0x42FA9E);
MakeDword(0x42FAA2);
MakeDword(0x42FAA6);
MakeWord(0x42FAAA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42FAAC, 0x42FAB6);
MakeDword(0x42FAB6);
MakeDword(0x42FABA);
MakeDword(0x42FABE);
MakeDword(0x42FAC2);
MakeDword(0x42FAC6);
MakeDword(0x42FACA);
MakeWord(0x42FACE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42FAD0, 0x42FADB);
MakeDword(0x42FADB);
MakeDword(0x42FADF);
MakeDword(0x42FAE3);
MakeDword(0x42FAE7);
MakeDword(0x42FAEB);
MakeDword(0x42FAEF);
MakeWord(0x42FAF3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42FAF5, 0x42FAFD);
MakeDword(0x42FAFD);
MakeDword(0x42FB01);
MakeDword(0x42FB05);
MakeDword(0x42FB09);
MakeDword(0x42FB0D);
MakeDword(0x42FB11);
MakeWord(0x42FB15);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42FB17, 0x42FB27);
MakeDword(0x42FB27);
MakeDword(0x42FB2B);
MakeDword(0x42FB2F);
MakeDword(0x42FB33);
MakeDword(0x42FB37);
MakeDword(0x42FB3B);
MakeWord(0x42FB3F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42FB41, 0x42FB4D);
MakeDword(0x42FB4D);
MakeDword(0x42FB51);
MakeDword(0x42FB55);
MakeDword(0x42FB59);
MakeDword(0x42FB5D);
MakeDword(0x42FB61);
MakeWord(0x42FB65);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42FB67, 0x42FB74);
MakeDword(0x42FB74);
MakeDword(0x42FB78);
MakeDword(0x42FB7C);
MakeDword(0x42FB80);
MakeDword(0x42FB84);
MakeDword(0x42FB88);
MakeWord(0x42FB8C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42FB8E, 0x42FB9B);
MakeDword(0x42FB9B);
MakeDword(0x42FB9F);
MakeDword(0x42FBA3);
MakeDword(0x42FBA7);
MakeDword(0x42FBAB);
MakeDword(0x42FBAF);
MakeWord(0x42FBB3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42FBB5, 0x42FBC1);
MakeDword(0x42FBC1);
MakeDword(0x42FBC5);
MakeDword(0x42FBC9);
MakeDword(0x42FBCD);
MakeDword(0x42FBD1);
MakeDword(0x42FBD5);
MakeWord(0x42FBD9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42FBDB, 0x42FBE5);
MakeDword(0x42FBE5);
MakeDword(0x42FBE9);
MakeDword(0x42FBED);
MakeDword(0x42FBF1);
MakeDword(0x42FBF5);
MakeDword(0x42FBF9);
MakeWord(0x42FBFD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42FBFF, 0x42FC0B);
MakeDword(0x42FC0B);
MakeDword(0x42FC0F);
MakeDword(0x42FC13);
MakeDword(0x42FC17);
MakeDword(0x42FC1B);
MakeDword(0x42FC1F);
MakeWord(0x42FC23);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42FC25, 0x42FC31);
MakeUnkn(0x42FC34, 1);
MakeNameEx(0x42FC34, "VMT_42FC34_TRadioButton", 0);
MakeDword(0x42FC34);
MakeDword(0x42FC38);
MakeDword(0x42FC3C);
MakeDword(0x42FC40);
MakeDword(0x42FC44);
MakeDword(0x42FC48);
MakeDword(0x42FC4C);
MakeDword(0x42FC50);
MakeUnkn(0x42FD60, 1);
MakeNameEx(0x42FD60, "TRadioButton_DynamicTable", 0);
MakeWord(0x42FD60);
MakeWord(0x42FD62);
MakeWord(0x42FD64);
MakeWord(0x42FD66);
MakeWord(0x42FD68);
MakeDword(0x42FD6A);
MakeDword(0x42FD6E);
MakeDword(0x42FD72);
MakeDword(0x42FD76);
MakeDword(0x42FC54);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42FD7A, 0x42FD87);
MakeDword(0x42FC58);
MakeDword(0x42FC5C);
MakeDword(0x42FC60);
MakeDword(0x42FC64);
MakeDword(0x42FC68);
MakeDword(0x42FC6C);
MakeDword(0x42FC70);
MakeDword(0x42FC74);
MakeDword(0x42FC78);
MakeDword(0x42FC7C);
MakeComm(0x42FC80, "'+0'");
MakeDword(0x42FC80);
MakeComm(0x42FC84, "'+4'");
MakeDword(0x42FC84);
MakeComm(0x42FC88, "'+8'");
MakeDword(0x42FC88);
MakeComm(0x42FC8C, "'+C'");
MakeDword(0x42FC8C);
MakeComm(0x42FC90, "'+10'");
MakeDword(0x42FC90);
MakeComm(0x42FC94, "'+14'");
MakeDword(0x42FC94);
MakeComm(0x42FC98, "'+18'");
MakeDword(0x42FC98);
MakeComm(0x42FC9C, "'+1C'");
MakeDword(0x42FC9C);
MakeComm(0x42FCA0, "'+20'");
MakeDword(0x42FCA0);
MakeComm(0x42FCA4, "'+24'");
MakeDword(0x42FCA4);
MakeComm(0x42FCA8, "'+28'");
MakeDword(0x42FCA8);
MakeComm(0x42FCAC, "'+2C'");
MakeDword(0x42FCAC);
MakeComm(0x42FCB0, "'+30'");
MakeDword(0x42FCB0);
MakeComm(0x42FCB4, "'+34'");
MakeDword(0x42FCB4);
MakeComm(0x42FCB8, "'+38'");
MakeDword(0x42FCB8);
MakeComm(0x42FCBC, "'+3C'");
MakeDword(0x42FCBC);
MakeComm(0x42FCC0, "'+40'");
MakeDword(0x42FCC0);
MakeComm(0x42FCC4, "'+44'");
MakeDword(0x42FCC4);
MakeComm(0x42FCC8, "'+48'");
MakeDword(0x42FCC8);
MakeComm(0x42FCCC, "'+4C'");
MakeDword(0x42FCCC);
MakeComm(0x42FCD0, "'+50'");
MakeDword(0x42FCD0);
MakeComm(0x42FCD4, "'+54'");
MakeDword(0x42FCD4);
MakeComm(0x42FCD8, "'+58'");
MakeDword(0x42FCD8);
MakeComm(0x42FCDC, "'+5C'");
MakeDword(0x42FCDC);
MakeComm(0x42FCE0, "'+60'");
MakeDword(0x42FCE0);
MakeComm(0x42FCE4, "'+64'");
MakeDword(0x42FCE4);
MakeComm(0x42FCE8, "'+68'");
MakeDword(0x42FCE8);
MakeComm(0x42FCEC, "'+6C'");
MakeDword(0x42FCEC);
MakeComm(0x42FCF0, "'+70'");
MakeDword(0x42FCF0);
MakeComm(0x42FCF4, "'+74'");
MakeDword(0x42FCF4);
MakeComm(0x42FCF8, "'+78'");
MakeDword(0x42FCF8);
MakeComm(0x42FCFC, "'+7C'");
MakeDword(0x42FCFC);
MakeComm(0x42FD00, "'+80'");
MakeDword(0x42FD00);
MakeComm(0x42FD04, "'+84'");
MakeDword(0x42FD04);
MakeComm(0x42FD08, "'+88'");
MakeDword(0x42FD08);
MakeComm(0x42FD0C, "'+8C'");
MakeDword(0x42FD0C);
MakeComm(0x42FD10, "'+90'");
MakeDword(0x42FD10);
MakeComm(0x42FD14, "'+94'");
MakeDword(0x42FD14);
MakeComm(0x42FD18, "'+98'");
MakeDword(0x42FD18);
MakeComm(0x42FD1C, "'+9C'");
MakeDword(0x42FD1C);
MakeComm(0x42FD20, "'+A0'");
MakeDword(0x42FD20);
MakeComm(0x42FD24, "'+A4'");
MakeDword(0x42FD24);
MakeComm(0x42FD28, "'+A8'");
MakeDword(0x42FD28);
MakeComm(0x42FD2C, "'+AC'");
MakeDword(0x42FD2C);
MakeComm(0x42FD30, "'+B0'");
MakeDword(0x42FD30);
MakeComm(0x42FD34, "'+B4'");
MakeDword(0x42FD34);
MakeComm(0x42FD38, "'+B8'");
MakeDword(0x42FD38);
MakeComm(0x42FD3C, "'+BC'");
MakeDword(0x42FD3C);
MakeComm(0x42FD40, "'+C0'");
MakeDword(0x42FD40);
MakeComm(0x42FD44, "'+C4'");
MakeDword(0x42FD44);
MakeComm(0x42FD48, "'+C8'");
MakeDword(0x42FD48);
MakeComm(0x42FD4C, "'+CC'");
MakeDword(0x42FD4C);
MakeComm(0x42FD50, "'+D0'");
MakeDword(0x42FD50);
MakeComm(0x42FD54, "'+D4'");
MakeDword(0x42FD54);
MakeComm(0x42FD58, "'+D8'");
MakeDword(0x42FD58);
MakeComm(0x42FD5C, "'+DC'");
MakeDword(0x42FD5C);
MakeUnkn(0x42FD88, 1);
MakeNameEx(0x42FD88, "RTTI_42FD88_Class_TRadioButton", 0);
MakeDword(0x42FD88);
MakeUnkn(0x42FD8C, 1);
MakeNameEx(0x42FD8C, "", 0);
MakeByte(0x42FD8C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42FD8D, 0x42FD9A);
MakeDword(0x42FD9A);
MakeDword(0x42FD9E);
MakeWord(0x42FDA2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42FDA4, 0x42FDAD);
MakeWord(0x42FDAD);
MakeDword(0x42FDAF);
MakeDword(0x42FDB3);
MakeDword(0x42FDB7);
MakeDword(0x42FDBB);
MakeDword(0x42FDBF);
MakeDword(0x42FDC3);
MakeWord(0x42FDC7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42FDC9, 0x42FDD0);
MakeDword(0x42FDD0);
MakeDword(0x42FDD4);
MakeDword(0x42FDD8);
MakeDword(0x42FDDC);
MakeDword(0x42FDE0);
MakeDword(0x42FDE4);
MakeWord(0x42FDE8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42FDEA, 0x42FDF0);
MakeDword(0x42FDF0);
MakeDword(0x42FDF4);
MakeDword(0x42FDF8);
MakeDword(0x42FDFC);
MakeDword(0x42FE00);
MakeDword(0x42FE04);
MakeWord(0x42FE08);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42FE0A, 0x42FE14);
MakeDword(0x42FE14);
MakeDword(0x42FE18);
MakeDword(0x42FE1C);
MakeDword(0x42FE20);
MakeDword(0x42FE24);
MakeDword(0x42FE28);
MakeWord(0x42FE2C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42FE2E, 0x42FE36);
MakeDword(0x42FE36);
MakeDword(0x42FE3A);
MakeDword(0x42FE3E);
MakeDword(0x42FE42);
MakeDword(0x42FE46);
MakeDword(0x42FE4A);
MakeWord(0x42FE4E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42FE50, 0x42FE59);
MakeDword(0x42FE59);
MakeDword(0x42FE5D);
MakeDword(0x42FE61);
MakeDword(0x42FE65);
MakeDword(0x42FE69);
MakeDword(0x42FE6D);
MakeWord(0x42FE71);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42FE73, 0x42FE7B);
MakeDword(0x42FE7B);
MakeDword(0x42FE7F);
MakeDword(0x42FE83);
MakeDword(0x42FE87);
MakeDword(0x42FE8B);
MakeDword(0x42FE8F);
MakeWord(0x42FE93);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42FE95, 0x42FE9D);
MakeDword(0x42FE9D);
MakeDword(0x42FEA1);
MakeDword(0x42FEA5);
MakeDword(0x42FEA9);
MakeDword(0x42FEAD);
MakeDword(0x42FEB1);
MakeWord(0x42FEB5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42FEB7, 0x42FEBD);
MakeDword(0x42FEBD);
MakeDword(0x42FEC1);
MakeDword(0x42FEC5);
MakeDword(0x42FEC9);
MakeDword(0x42FECD);
MakeDword(0x42FED1);
MakeWord(0x42FED5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42FED7, 0x42FEE3);
MakeDword(0x42FEE3);
MakeDword(0x42FEE7);
MakeDword(0x42FEEB);
MakeDword(0x42FEEF);
MakeDword(0x42FEF3);
MakeDword(0x42FEF7);
MakeWord(0x42FEFB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42FEFD, 0x42FF03);
MakeDword(0x42FF03);
MakeDword(0x42FF07);
MakeDword(0x42FF0B);
MakeDword(0x42FF0F);
MakeDword(0x42FF13);
MakeDword(0x42FF17);
MakeWord(0x42FF1B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42FF1D, 0x42FF28);
MakeDword(0x42FF28);
MakeDword(0x42FF2C);
MakeDword(0x42FF30);
MakeDword(0x42FF34);
MakeDword(0x42FF38);
MakeDword(0x42FF3C);
MakeWord(0x42FF40);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42FF42, 0x42FF4B);
MakeDword(0x42FF4B);
MakeDword(0x42FF4F);
MakeDword(0x42FF53);
MakeDword(0x42FF57);
MakeDword(0x42FF5B);
MakeDword(0x42FF5F);
MakeWord(0x42FF63);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42FF65, 0x42FF6E);
MakeDword(0x42FF6E);
MakeDword(0x42FF72);
MakeDword(0x42FF76);
MakeDword(0x42FF7A);
MakeDword(0x42FF7E);
MakeDword(0x42FF82);
MakeWord(0x42FF86);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42FF88, 0x42FF90);
MakeDword(0x42FF90);
MakeDword(0x42FF94);
MakeDword(0x42FF98);
MakeDword(0x42FF9C);
MakeDword(0x42FFA0);
MakeDword(0x42FFA4);
MakeWord(0x42FFA8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42FFAA, 0x42FFAF);
MakeDword(0x42FFAF);
MakeDword(0x42FFB3);
MakeDword(0x42FFB7);
MakeDword(0x42FFBB);
MakeDword(0x42FFBF);
MakeDword(0x42FFC3);
MakeWord(0x42FFC7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42FFC9, 0x42FFD8);
MakeDword(0x42FFD8);
MakeDword(0x42FFDC);
MakeDword(0x42FFE0);
MakeDword(0x42FFE4);
MakeDword(0x42FFE8);
MakeDword(0x42FFEC);
MakeWord(0x42FFF0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x42FFF2, 0x42FFFE);
MakeDword(0x42FFFE);
MakeDword(0x430002);
MakeDword(0x430006);
MakeDword(0x43000A);
MakeDword(0x43000E);
MakeDword(0x430012);
MakeWord(0x430016);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430018, 0x430024);
MakeDword(0x430024);
MakeDword(0x430028);
MakeDword(0x43002C);
MakeDword(0x430030);
MakeDword(0x430034);
MakeDword(0x430038);
MakeWord(0x43003C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43003E, 0x430049);
MakeDword(0x430049);
MakeDword(0x43004D);
MakeDword(0x430051);
MakeDword(0x430055);
MakeDword(0x430059);
MakeDword(0x43005D);
MakeWord(0x430061);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430063, 0x430072);
MakeDword(0x430072);
MakeDword(0x430076);
MakeDword(0x43007A);
MakeDword(0x43007E);
MakeDword(0x430082);
MakeDword(0x430086);
MakeWord(0x43008A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43008C, 0x430096);
MakeDword(0x430096);
MakeDword(0x43009A);
MakeDword(0x43009E);
MakeDword(0x4300A2);
MakeDword(0x4300A6);
MakeDword(0x4300AA);
MakeWord(0x4300AE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4300B0, 0x4300B9);
MakeDword(0x4300B9);
MakeDword(0x4300BD);
MakeDword(0x4300C1);
MakeDword(0x4300C5);
MakeDword(0x4300C9);
MakeDword(0x4300CD);
MakeWord(0x4300D1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4300D3, 0x4300DC);
MakeDword(0x4300DC);
MakeDword(0x4300E0);
MakeDword(0x4300E4);
MakeDword(0x4300E8);
MakeDword(0x4300EC);
MakeDword(0x4300F0);
MakeWord(0x4300F4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4300F6, 0x4300FE);
MakeDword(0x4300FE);
MakeDword(0x430102);
MakeDword(0x430106);
MakeDword(0x43010A);
MakeDword(0x43010E);
MakeDword(0x430112);
MakeWord(0x430116);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430118, 0x430120);
MakeDword(0x430120);
MakeDword(0x430124);
MakeDword(0x430128);
MakeDword(0x43012C);
MakeDword(0x430130);
MakeDword(0x430134);
MakeWord(0x430138);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43013A, 0x430143);
MakeDword(0x430143);
MakeDword(0x430147);
MakeDword(0x43014B);
MakeDword(0x43014F);
MakeDword(0x430153);
MakeDword(0x430157);
MakeWord(0x43015B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43015D, 0x430165);
MakeDword(0x430165);
MakeDword(0x430169);
MakeDword(0x43016D);
MakeDword(0x430171);
MakeDword(0x430175);
MakeDword(0x430179);
MakeWord(0x43017D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43017F, 0x43018E);
MakeDword(0x43018E);
MakeDword(0x430192);
MakeDword(0x430196);
MakeDword(0x43019A);
MakeDword(0x43019E);
MakeDword(0x4301A2);
MakeWord(0x4301A6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4301A8, 0x4301B3);
MakeDword(0x4301B3);
MakeDword(0x4301B7);
MakeDword(0x4301BB);
MakeDword(0x4301BF);
MakeDword(0x4301C3);
MakeDword(0x4301C7);
MakeWord(0x4301CB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4301CD, 0x4301D8);
MakeDword(0x4301D8);
MakeDword(0x4301DC);
MakeDword(0x4301E0);
MakeDword(0x4301E4);
MakeDword(0x4301E8);
MakeDword(0x4301EC);
MakeWord(0x4301F0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4301F2, 0x4301FD);
MakeDword(0x4301FD);
MakeDword(0x430201);
MakeDword(0x430205);
MakeDword(0x430209);
MakeDword(0x43020D);
MakeDword(0x430211);
MakeWord(0x430215);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430217, 0x430221);
MakeDword(0x430221);
MakeDword(0x430225);
MakeDword(0x430229);
MakeDword(0x43022D);
MakeDword(0x430231);
MakeDword(0x430235);
MakeWord(0x430239);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43023B, 0x430245);
MakeDword(0x430245);
MakeDword(0x430249);
MakeDword(0x43024D);
MakeDword(0x430251);
MakeDword(0x430255);
MakeDword(0x430259);
MakeWord(0x43025D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43025F, 0x430267);
MakeDword(0x430267);
MakeDword(0x43026B);
MakeDword(0x43026F);
MakeDword(0x430273);
MakeDword(0x430277);
MakeDword(0x43027B);
MakeWord(0x43027F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430281, 0x430288);
MakeDword(0x430288);
MakeDword(0x43028C);
MakeDword(0x430290);
MakeDword(0x430294);
MakeDword(0x430298);
MakeDword(0x43029C);
MakeWord(0x4302A0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4302A2, 0x4302AC);
MakeDword(0x4302AC);
MakeDword(0x4302B0);
MakeDword(0x4302B4);
MakeDword(0x4302B8);
MakeDword(0x4302BC);
MakeDword(0x4302C0);
MakeWord(0x4302C4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4302C6, 0x4302D1);
MakeDword(0x4302D1);
MakeDword(0x4302D5);
MakeDword(0x4302D9);
MakeDword(0x4302DD);
MakeDword(0x4302E1);
MakeDword(0x4302E5);
MakeWord(0x4302E9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4302EB, 0x4302F3);
MakeDword(0x4302F3);
MakeDword(0x4302F7);
MakeDword(0x4302FB);
MakeDword(0x4302FF);
MakeDword(0x430303);
MakeDword(0x430307);
MakeWord(0x43030B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43030D, 0x43031D);
MakeDword(0x43031D);
MakeDword(0x430321);
MakeDword(0x430325);
MakeDword(0x430329);
MakeDword(0x43032D);
MakeDword(0x430331);
MakeWord(0x430335);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430337, 0x430343);
MakeDword(0x430343);
MakeDword(0x430347);
MakeDword(0x43034B);
MakeDword(0x43034F);
MakeDword(0x430353);
MakeDword(0x430357);
MakeWord(0x43035B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43035D, 0x43036A);
MakeDword(0x43036A);
MakeDword(0x43036E);
MakeDword(0x430372);
MakeDword(0x430376);
MakeDword(0x43037A);
MakeDword(0x43037E);
MakeWord(0x430382);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430384, 0x430391);
MakeDword(0x430391);
MakeDword(0x430395);
MakeDword(0x430399);
MakeDword(0x43039D);
MakeDword(0x4303A1);
MakeDword(0x4303A5);
MakeWord(0x4303A9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4303AB, 0x4303B7);
MakeDword(0x4303B7);
MakeDword(0x4303BB);
MakeDword(0x4303BF);
MakeDword(0x4303C3);
MakeDword(0x4303C7);
MakeDword(0x4303CB);
MakeWord(0x4303CF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4303D1, 0x4303DB);
MakeDword(0x4303DB);
MakeDword(0x4303DF);
MakeDword(0x4303E3);
MakeDword(0x4303E7);
MakeDword(0x4303EB);
MakeDword(0x4303EF);
MakeWord(0x4303F3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4303F5, 0x430401);
MakeDword(0x430401);
MakeDword(0x430405);
MakeDword(0x430409);
MakeDword(0x43040D);
MakeDword(0x430411);
MakeDword(0x430415);
MakeWord(0x430419);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43041B, 0x430427);
MakeUnkn(0x430428, 1);
MakeNameEx(0x430428, "RTTI_430428_Enumeration_TListBoxStyle", 0);
MakeDword(0x430428);
MakeUnkn(0x43042C, 1);
MakeNameEx(0x43042C, "", 0);
MakeByte(0x43042C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43042D, 0x43043B);
MakeByte(0x43043B);
MakeDword(0x43043C);
MakeDword(0x430440);
MakeDword(0x430444);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430448, 0x430453);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430453, 0x430464);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430464, 0x430478);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430478, 0x430482);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430482, 0x430495);
MakeUnkn(0x4304A0, 1);
MakeNameEx(0x4304A0, "RTTI_4304A0_Method_TLBGetDataEvent", 0);
MakeDword(0x4304A0);
MakeUnkn(0x4304A4, 1);
MakeNameEx(0x4304A4, "", 0);
MakeByte(0x4304A4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4304A5, 0x4304B5);
MakeByte(0x4304B5);
MakeByte(0x4304B6);
MakeByte(0x4304B7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4304B8, 0x4304C0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4304C0, 0x4304CC);
MakeByte(0x4304CC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4304CD, 0x4304D3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4304D3, 0x4304DB);
MakeByte(0x4304DB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4304DC, 0x4304E1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4304E1, 0x4304E8);
MakeByte(0x4304E8);
MakeDword(0x4304E9);
MakeDword(0x4304ED);
MakeDword(0x4304F1);
MakeUnkn(0x4304F8, 1);
MakeNameEx(0x4304F8, "RTTI_4304F8_Method_TLBGetDataObjectEvent", 0);
MakeDword(0x4304F8);
MakeUnkn(0x4304FC, 1);
MakeNameEx(0x4304FC, "", 0);
MakeByte(0x4304FC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4304FD, 0x430513);
MakeByte(0x430513);
MakeByte(0x430514);
MakeByte(0x430515);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430516, 0x43051E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43051E, 0x43052A);
MakeByte(0x43052A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43052B, 0x430531);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430531, 0x430539);
MakeByte(0x430539);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43053A, 0x430545);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430545, 0x43054D);
MakeByte(0x43054D);
MakeDword(0x43054E);
MakeDword(0x430552);
MakeDword(0x430556);
MakeUnkn(0x43055C, 1);
MakeNameEx(0x43055C, "RTTI_43055C_Method_TLBFindDataEvent", 0);
MakeDword(0x43055C);
MakeUnkn(0x430560, 1);
MakeNameEx(0x430560, "", 0);
MakeByte(0x430560);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430561, 0x430572);
MakeByte(0x430572);
MakeByte(0x430573);
MakeByte(0x430574);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430575, 0x43057D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43057D, 0x430589);
MakeByte(0x430589);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43058A, 0x430595);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430595, 0x43059C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43059C, 0x4305A4);
MakeDword(0x4305A4);
MakeByte(0x4305A8);
MakeDword(0x4305A9);
MakeDword(0x4305AD);
MakeUnkn(0x4305B4, 1);
MakeNameEx(0x4305B4, "VMT_4305B4_TCustomListBox", 0);
MakeDword(0x4305B4);
MakeDword(0x4305B8);
MakeDword(0x4305BC);
MakeDword(0x4305C0);
MakeUnkn(0x430718, 1);
MakeNameEx(0x430718, "TCustomListBox_InitTable", 0);
MakeByte(0x430718);
MakeByte(0x430719);
MakeDword(0x43071A);
MakeDword(0x43071E);
MakeDword(0x430722);
MakeDword(0x430726);
MakeDword(0x4305C4);
MakeDword(0x4305C8);
MakeDword(0x4305CC);
MakeDword(0x4305D0);
MakeUnkn(0x43072A, 1);
MakeNameEx(0x43072A, "TCustomListBox_DynamicTable", 0);
MakeWord(0x43072A);
MakeWord(0x43072C);
MakeWord(0x43072E);
MakeWord(0x430730);
MakeWord(0x430732);
MakeWord(0x430734);
MakeWord(0x430736);
MakeWord(0x430738);
MakeWord(0x43073A);
MakeWord(0x43073C);
MakeWord(0x43073E);
MakeWord(0x430740);
MakeWord(0x430742);
MakeWord(0x430744);
MakeWord(0x430746);
MakeWord(0x430748);
MakeWord(0x43074A);
MakeWord(0x43074C);
MakeDword(0x43074E);
MakeDword(0x430752);
MakeDword(0x430756);
MakeDword(0x43075A);
MakeDword(0x43075E);
MakeDword(0x430762);
MakeDword(0x430766);
MakeDword(0x43076A);
MakeDword(0x43076E);
MakeDword(0x430772);
MakeDword(0x430776);
MakeDword(0x43077A);
MakeDword(0x43077E);
MakeDword(0x430782);
MakeDword(0x430786);
MakeDword(0x43078A);
MakeDword(0x43078E);
MakeDword(0x4305D4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430792, 0x4307A1);
MakeDword(0x4305D8);
MakeDword(0x4305DC);
MakeDword(0x4305E0);
MakeDword(0x4305E4);
MakeDword(0x4305E8);
MakeDword(0x4305EC);
MakeDword(0x4305F0);
MakeDword(0x4305F4);
MakeDword(0x4305F8);
MakeDword(0x4305FC);
MakeComm(0x430600, "'+0'");
MakeDword(0x430600);
MakeComm(0x430604, "'+4'");
MakeDword(0x430604);
MakeComm(0x430608, "'+8'");
MakeDword(0x430608);
MakeComm(0x43060C, "'+C'");
MakeDword(0x43060C);
MakeComm(0x430610, "'+10'");
MakeDword(0x430610);
MakeComm(0x430614, "'+14'");
MakeDword(0x430614);
MakeComm(0x430618, "'+18'");
MakeDword(0x430618);
MakeComm(0x43061C, "'+1C'");
MakeDword(0x43061C);
MakeComm(0x430620, "'+20'");
MakeDword(0x430620);
MakeComm(0x430624, "'+24'");
MakeDword(0x430624);
MakeComm(0x430628, "'+28'");
MakeDword(0x430628);
MakeComm(0x43062C, "'+2C'");
MakeDword(0x43062C);
MakeComm(0x430630, "'+30'");
MakeDword(0x430630);
MakeComm(0x430634, "'+34'");
MakeDword(0x430634);
MakeComm(0x430638, "'+38'");
MakeDword(0x430638);
MakeComm(0x43063C, "'+3C'");
MakeDword(0x43063C);
MakeComm(0x430640, "'+40'");
MakeDword(0x430640);
MakeComm(0x430644, "'+44'");
MakeDword(0x430644);
MakeComm(0x430648, "'+48'");
MakeDword(0x430648);
MakeComm(0x43064C, "'+4C'");
MakeDword(0x43064C);
MakeComm(0x430650, "'+50'");
MakeDword(0x430650);
MakeComm(0x430654, "'+54'");
MakeDword(0x430654);
MakeComm(0x430658, "'+58'");
MakeDword(0x430658);
MakeComm(0x43065C, "'+5C'");
MakeDword(0x43065C);
MakeComm(0x430660, "'+60'");
MakeDword(0x430660);
MakeComm(0x430664, "'+64'");
MakeDword(0x430664);
MakeComm(0x430668, "'+68'");
MakeDword(0x430668);
MakeComm(0x43066C, "'+6C'");
MakeDword(0x43066C);
MakeComm(0x430670, "'+70'");
MakeDword(0x430670);
MakeComm(0x430674, "'+74'");
MakeDword(0x430674);
MakeComm(0x430678, "'+78'");
MakeDword(0x430678);
MakeComm(0x43067C, "'+7C'");
MakeDword(0x43067C);
MakeComm(0x430680, "'+80'");
MakeDword(0x430680);
MakeComm(0x430684, "'+84'");
MakeDword(0x430684);
MakeComm(0x430688, "'+88'");
MakeDword(0x430688);
MakeComm(0x43068C, "'+8C'");
MakeDword(0x43068C);
MakeComm(0x430690, "'+90'");
MakeDword(0x430690);
MakeComm(0x430694, "'+94'");
MakeDword(0x430694);
MakeComm(0x430698, "'+98'");
MakeDword(0x430698);
MakeComm(0x43069C, "'+9C'");
MakeDword(0x43069C);
MakeComm(0x4306A0, "'+A0'");
MakeDword(0x4306A0);
MakeComm(0x4306A4, "'+A4'");
MakeDword(0x4306A4);
MakeComm(0x4306A8, "'+A8'");
MakeDword(0x4306A8);
MakeComm(0x4306AC, "'+AC'");
MakeDword(0x4306AC);
MakeComm(0x4306B0, "'+B0'");
MakeDword(0x4306B0);
MakeComm(0x4306B4, "'+B4'");
MakeDword(0x4306B4);
MakeComm(0x4306B8, "'+B8'");
MakeDword(0x4306B8);
MakeComm(0x4306BC, "'+BC'");
MakeDword(0x4306BC);
MakeComm(0x4306C0, "'+C0'");
MakeDword(0x4306C0);
MakeComm(0x4306C4, "'+C4'");
MakeDword(0x4306C4);
MakeComm(0x4306C8, "'+C8'");
MakeDword(0x4306C8);
MakeComm(0x4306CC, "'+CC'");
MakeDword(0x4306CC);
MakeComm(0x4306D0, "'+D0'");
MakeDword(0x4306D0);
MakeComm(0x4306D4, "'+D4'");
MakeDword(0x4306D4);
MakeComm(0x4306D8, "'+D8'");
MakeDword(0x4306D8);
MakeComm(0x4306DC, "'+DC'");
MakeDword(0x4306DC);
MakeComm(0x4306E0, "'+E0'");
MakeDword(0x4306E0);
MakeComm(0x4306E4, "'+E4'");
MakeDword(0x4306E4);
MakeComm(0x4306E8, "'+E8'");
MakeDword(0x4306E8);
MakeComm(0x4306EC, "'+EC'");
MakeDword(0x4306EC);
MakeComm(0x4306F0, "'+F0'");
MakeDword(0x4306F0);
MakeComm(0x4306F4, "'+F4'");
MakeDword(0x4306F4);
MakeComm(0x4306F8, "'+F8'");
MakeDword(0x4306F8);
MakeComm(0x4306FC, "'+FC'");
MakeDword(0x4306FC);
MakeComm(0x430700, "'+100'");
MakeDword(0x430700);
MakeComm(0x430704, "'+104'");
MakeDword(0x430704);
MakeComm(0x430708, "'+108'");
MakeDword(0x430708);
MakeComm(0x43070C, "'+10C'");
MakeDword(0x43070C);
MakeComm(0x430710, "'+110'");
MakeDword(0x430710);
MakeComm(0x430714, "'+114'");
MakeDword(0x430714);
MakeUnkn(0x4307A4, 1);
MakeNameEx(0x4307A4, "RTTI_4307A4_Class_TCustomListBox", 0);
MakeDword(0x4307A4);
MakeUnkn(0x4307A8, 1);
MakeNameEx(0x4307A8, "", 0);
MakeByte(0x4307A8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4307A9, 0x4307B8);
MakeDword(0x4307B8);
MakeDword(0x4307BC);
MakeWord(0x4307C0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4307C2, 0x4307CB);
MakeWord(0x4307CB);
MakeDword(0x4307CD);
MakeDword(0x4307D1);
MakeDword(0x4307D5);
MakeDword(0x4307D9);
MakeDword(0x4307DD);
MakeDword(0x4307E1);
MakeWord(0x4307E5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4307E7, 0x4307EF);
MakeUnkn(0x4307F0, 1);
MakeNameEx(0x4307F0, "VMT_4307F0_TListBox", 0);
MakeDword(0x4307F0);
MakeDword(0x4307F4);
MakeDword(0x4307F8);
MakeDword(0x4307FC);
MakeDword(0x430800);
MakeDword(0x430804);
MakeDword(0x430808);
MakeDword(0x43080C);
MakeDword(0x430810);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430954, 0x43095D);
MakeDword(0x430814);
MakeDword(0x430818);
MakeDword(0x43081C);
MakeDword(0x430820);
MakeDword(0x430824);
MakeDword(0x430828);
MakeDword(0x43082C);
MakeDword(0x430830);
MakeDword(0x430834);
MakeDword(0x430838);
MakeComm(0x43083C, "'+0'");
MakeDword(0x43083C);
MakeComm(0x430840, "'+4'");
MakeDword(0x430840);
MakeComm(0x430844, "'+8'");
MakeDword(0x430844);
MakeComm(0x430848, "'+C'");
MakeDword(0x430848);
MakeComm(0x43084C, "'+10'");
MakeDword(0x43084C);
MakeComm(0x430850, "'+14'");
MakeDword(0x430850);
MakeComm(0x430854, "'+18'");
MakeDword(0x430854);
MakeComm(0x430858, "'+1C'");
MakeDword(0x430858);
MakeComm(0x43085C, "'+20'");
MakeDword(0x43085C);
MakeComm(0x430860, "'+24'");
MakeDword(0x430860);
MakeComm(0x430864, "'+28'");
MakeDword(0x430864);
MakeComm(0x430868, "'+2C'");
MakeDword(0x430868);
MakeComm(0x43086C, "'+30'");
MakeDword(0x43086C);
MakeComm(0x430870, "'+34'");
MakeDword(0x430870);
MakeComm(0x430874, "'+38'");
MakeDword(0x430874);
MakeComm(0x430878, "'+3C'");
MakeDword(0x430878);
MakeComm(0x43087C, "'+40'");
MakeDword(0x43087C);
MakeComm(0x430880, "'+44'");
MakeDword(0x430880);
MakeComm(0x430884, "'+48'");
MakeDword(0x430884);
MakeComm(0x430888, "'+4C'");
MakeDword(0x430888);
MakeComm(0x43088C, "'+50'");
MakeDword(0x43088C);
MakeComm(0x430890, "'+54'");
MakeDword(0x430890);
MakeComm(0x430894, "'+58'");
MakeDword(0x430894);
MakeComm(0x430898, "'+5C'");
MakeDword(0x430898);
MakeComm(0x43089C, "'+60'");
MakeDword(0x43089C);
MakeComm(0x4308A0, "'+64'");
MakeDword(0x4308A0);
MakeComm(0x4308A4, "'+68'");
MakeDword(0x4308A4);
MakeComm(0x4308A8, "'+6C'");
MakeDword(0x4308A8);
MakeComm(0x4308AC, "'+70'");
MakeDword(0x4308AC);
MakeComm(0x4308B0, "'+74'");
MakeDword(0x4308B0);
MakeComm(0x4308B4, "'+78'");
MakeDword(0x4308B4);
MakeComm(0x4308B8, "'+7C'");
MakeDword(0x4308B8);
MakeComm(0x4308BC, "'+80'");
MakeDword(0x4308BC);
MakeComm(0x4308C0, "'+84'");
MakeDword(0x4308C0);
MakeComm(0x4308C4, "'+88'");
MakeDword(0x4308C4);
MakeComm(0x4308C8, "'+8C'");
MakeDword(0x4308C8);
MakeComm(0x4308CC, "'+90'");
MakeDword(0x4308CC);
MakeComm(0x4308D0, "'+94'");
MakeDword(0x4308D0);
MakeComm(0x4308D4, "'+98'");
MakeDword(0x4308D4);
MakeComm(0x4308D8, "'+9C'");
MakeDword(0x4308D8);
MakeComm(0x4308DC, "'+A0'");
MakeDword(0x4308DC);
MakeComm(0x4308E0, "'+A4'");
MakeDword(0x4308E0);
MakeComm(0x4308E4, "'+A8'");
MakeDword(0x4308E4);
MakeComm(0x4308E8, "'+AC'");
MakeDword(0x4308E8);
MakeComm(0x4308EC, "'+B0'");
MakeDword(0x4308EC);
MakeComm(0x4308F0, "'+B4'");
MakeDword(0x4308F0);
MakeComm(0x4308F4, "'+B8'");
MakeDword(0x4308F4);
MakeComm(0x4308F8, "'+BC'");
MakeDword(0x4308F8);
MakeComm(0x4308FC, "'+C0'");
MakeDword(0x4308FC);
MakeComm(0x430900, "'+C4'");
MakeDword(0x430900);
MakeComm(0x430904, "'+C8'");
MakeDword(0x430904);
MakeComm(0x430908, "'+CC'");
MakeDword(0x430908);
MakeComm(0x43090C, "'+D0'");
MakeDword(0x43090C);
MakeComm(0x430910, "'+D4'");
MakeDword(0x430910);
MakeComm(0x430914, "'+D8'");
MakeDword(0x430914);
MakeComm(0x430918, "'+DC'");
MakeDword(0x430918);
MakeComm(0x43091C, "'+E0'");
MakeDword(0x43091C);
MakeComm(0x430920, "'+E4'");
MakeDword(0x430920);
MakeComm(0x430924, "'+E8'");
MakeDword(0x430924);
MakeComm(0x430928, "'+EC'");
MakeDword(0x430928);
MakeComm(0x43092C, "'+F0'");
MakeDword(0x43092C);
MakeComm(0x430930, "'+F4'");
MakeDword(0x430930);
MakeComm(0x430934, "'+F8'");
MakeDword(0x430934);
MakeComm(0x430938, "'+FC'");
MakeDword(0x430938);
MakeComm(0x43093C, "'+100'");
MakeDword(0x43093C);
MakeComm(0x430940, "'+104'");
MakeDword(0x430940);
MakeComm(0x430944, "'+108'");
MakeDword(0x430944);
MakeComm(0x430948, "'+10C'");
MakeDword(0x430948);
MakeComm(0x43094C, "'+110'");
MakeDword(0x43094C);
MakeComm(0x430950, "'+114'");
MakeDword(0x430950);
MakeUnkn(0x430960, 1);
MakeNameEx(0x430960, "RTTI_430960_Class_TListBox", 0);
MakeDword(0x430960);
MakeUnkn(0x430964, 1);
MakeNameEx(0x430964, "", 0);
MakeByte(0x430964);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430965, 0x43096E);
MakeDword(0x43096E);
MakeDword(0x430972);
MakeWord(0x430976);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430978, 0x430981);
MakeWord(0x430981);
MakeDword(0x430983);
MakeDword(0x430987);
MakeDword(0x43098B);
MakeDword(0x43098F);
MakeDword(0x430993);
MakeDword(0x430997);
MakeWord(0x43099B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43099D, 0x4309A3);
MakeDword(0x4309A3);
MakeDword(0x4309A7);
MakeDword(0x4309AB);
MakeDword(0x4309AF);
MakeDword(0x4309B3);
MakeDword(0x4309B7);
MakeWord(0x4309BB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4309BD, 0x4309CA);
MakeDword(0x4309CA);
MakeDword(0x4309CE);
MakeDword(0x4309D2);
MakeDword(0x4309D6);
MakeDword(0x4309DA);
MakeDword(0x4309DE);
MakeWord(0x4309E2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4309E4, 0x4309F6);
MakeDword(0x4309F6);
MakeDword(0x4309FA);
MakeDword(0x4309FE);
MakeDword(0x430A02);
MakeDword(0x430A06);
MakeDword(0x430A0A);
MakeWord(0x430A0E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430A10, 0x430A16);
MakeDword(0x430A16);
MakeDword(0x430A1A);
MakeDword(0x430A1E);
MakeDword(0x430A22);
MakeDword(0x430A26);
MakeDword(0x430A2A);
MakeWord(0x430A2E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430A30, 0x430A38);
MakeDword(0x430A38);
MakeDword(0x430A3C);
MakeDword(0x430A40);
MakeDword(0x430A44);
MakeDword(0x430A48);
MakeDword(0x430A4C);
MakeWord(0x430A50);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430A52, 0x430A5D);
MakeDword(0x430A5D);
MakeDword(0x430A61);
MakeDword(0x430A65);
MakeDword(0x430A69);
MakeDword(0x430A6D);
MakeDword(0x430A71);
MakeWord(0x430A75);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430A77, 0x430A82);
MakeDword(0x430A82);
MakeDword(0x430A86);
MakeDword(0x430A8A);
MakeDword(0x430A8E);
MakeDword(0x430A92);
MakeDword(0x430A96);
MakeWord(0x430A9A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430A9C, 0x430AA6);
MakeDword(0x430AA6);
MakeDword(0x430AAA);
MakeDword(0x430AAE);
MakeDword(0x430AB2);
MakeDword(0x430AB6);
MakeDword(0x430ABA);
MakeWord(0x430ABE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430AC0, 0x430ACB);
MakeDword(0x430ACB);
MakeDword(0x430ACF);
MakeDword(0x430AD3);
MakeDword(0x430AD7);
MakeDword(0x430ADB);
MakeDword(0x430ADF);
MakeWord(0x430AE3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430AE5, 0x430AF0);
MakeDword(0x430AF0);
MakeDword(0x430AF4);
MakeDword(0x430AF8);
MakeDword(0x430AFC);
MakeDword(0x430B00);
MakeDword(0x430B04);
MakeWord(0x430B08);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430B0A, 0x430B13);
MakeDword(0x430B13);
MakeDword(0x430B17);
MakeDword(0x430B1B);
MakeDword(0x430B1F);
MakeDword(0x430B23);
MakeDword(0x430B27);
MakeWord(0x430B2B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430B2D, 0x430B39);
MakeDword(0x430B39);
MakeDword(0x430B3D);
MakeDword(0x430B41);
MakeDword(0x430B45);
MakeDword(0x430B49);
MakeDword(0x430B4D);
MakeWord(0x430B51);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430B53, 0x430B59);
MakeDword(0x430B59);
MakeDword(0x430B5D);
MakeDword(0x430B61);
MakeDword(0x430B65);
MakeDword(0x430B69);
MakeDword(0x430B6D);
MakeWord(0x430B71);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430B73, 0x430B7B);
MakeDword(0x430B7B);
MakeDword(0x430B7F);
MakeDword(0x430B83);
MakeDword(0x430B87);
MakeDword(0x430B8B);
MakeDword(0x430B8F);
MakeWord(0x430B93);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430B95, 0x430BA1);
MakeDword(0x430BA1);
MakeDword(0x430BA5);
MakeDword(0x430BA9);
MakeDword(0x430BAD);
MakeDword(0x430BB1);
MakeDword(0x430BB5);
MakeWord(0x430BB9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430BBB, 0x430BC1);
MakeDword(0x430BC1);
MakeDword(0x430BC5);
MakeDword(0x430BC9);
MakeDword(0x430BCD);
MakeDword(0x430BD1);
MakeDword(0x430BD5);
MakeWord(0x430BD9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430BDB, 0x430BE6);
MakeDword(0x430BE6);
MakeDword(0x430BEA);
MakeDword(0x430BEE);
MakeDword(0x430BF2);
MakeDword(0x430BF6);
MakeDword(0x430BFA);
MakeWord(0x430BFE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430C00, 0x430C09);
MakeDword(0x430C09);
MakeDword(0x430C0D);
MakeDword(0x430C11);
MakeDword(0x430C15);
MakeDword(0x430C19);
MakeDword(0x430C1D);
MakeWord(0x430C21);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430C23, 0x430C2C);
MakeDword(0x430C2C);
MakeDword(0x430C30);
MakeDword(0x430C34);
MakeDword(0x430C38);
MakeDword(0x430C3C);
MakeDword(0x430C40);
MakeWord(0x430C44);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430C46, 0x430C4E);
MakeDword(0x430C4E);
MakeDword(0x430C52);
MakeDword(0x430C56);
MakeDword(0x430C5A);
MakeDword(0x430C5E);
MakeDword(0x430C62);
MakeWord(0x430C66);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430C68, 0x430C77);
MakeDword(0x430C77);
MakeDword(0x430C7B);
MakeDword(0x430C7F);
MakeDword(0x430C83);
MakeDword(0x430C87);
MakeDword(0x430C8B);
MakeWord(0x430C8F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430C91, 0x430C96);
MakeDword(0x430C96);
MakeDword(0x430C9A);
MakeDword(0x430C9E);
MakeDword(0x430CA2);
MakeDword(0x430CA6);
MakeDword(0x430CAA);
MakeWord(0x430CAE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430CB0, 0x430CB8);
MakeDword(0x430CB8);
MakeDword(0x430CBC);
MakeDword(0x430CC0);
MakeDword(0x430CC4);
MakeDword(0x430CC8);
MakeDword(0x430CCC);
MakeWord(0x430CD0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430CD2, 0x430CDA);
MakeDword(0x430CDA);
MakeDword(0x430CDE);
MakeDword(0x430CE2);
MakeDword(0x430CE6);
MakeDword(0x430CEA);
MakeDword(0x430CEE);
MakeWord(0x430CF2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430CF4, 0x430D03);
MakeDword(0x430D03);
MakeDword(0x430D07);
MakeDword(0x430D0B);
MakeDword(0x430D0F);
MakeDword(0x430D13);
MakeDword(0x430D17);
MakeWord(0x430D1B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430D1D, 0x430D28);
MakeDword(0x430D28);
MakeDword(0x430D2C);
MakeDword(0x430D30);
MakeDword(0x430D34);
MakeDword(0x430D38);
MakeDword(0x430D3C);
MakeWord(0x430D40);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430D42, 0x430D48);
MakeDword(0x430D48);
MakeDword(0x430D4C);
MakeDword(0x430D50);
MakeDword(0x430D54);
MakeDword(0x430D58);
MakeDword(0x430D5C);
MakeWord(0x430D60);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430D62, 0x430D6E);
MakeDword(0x430D6E);
MakeDword(0x430D72);
MakeDword(0x430D76);
MakeDword(0x430D7A);
MakeDword(0x430D7E);
MakeDword(0x430D82);
MakeWord(0x430D86);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430D88, 0x430D97);
MakeDword(0x430D97);
MakeDword(0x430D9B);
MakeDword(0x430D9F);
MakeDword(0x430DA3);
MakeDword(0x430DA7);
MakeDword(0x430DAB);
MakeWord(0x430DAF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430DB1, 0x430DBD);
MakeDword(0x430DBD);
MakeDword(0x430DC1);
MakeDword(0x430DC5);
MakeDword(0x430DC9);
MakeDword(0x430DCD);
MakeDword(0x430DD1);
MakeWord(0x430DD5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430DD7, 0x430DE3);
MakeDword(0x430DE3);
MakeDword(0x430DE7);
MakeDword(0x430DEB);
MakeDword(0x430DEF);
MakeDword(0x430DF3);
MakeDword(0x430DF7);
MakeWord(0x430DFB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430DFD, 0x430E08);
MakeDword(0x430E08);
MakeDword(0x430E0C);
MakeDword(0x430E10);
MakeDword(0x430E14);
MakeDword(0x430E18);
MakeDword(0x430E1C);
MakeWord(0x430E20);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430E22, 0x430E31);
MakeDword(0x430E31);
MakeDword(0x430E35);
MakeDword(0x430E39);
MakeDword(0x430E3D);
MakeDword(0x430E41);
MakeDword(0x430E45);
MakeWord(0x430E49);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430E4B, 0x430E55);
MakeDword(0x430E55);
MakeDword(0x430E59);
MakeDword(0x430E5D);
MakeDword(0x430E61);
MakeDword(0x430E65);
MakeDword(0x430E69);
MakeWord(0x430E6D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430E6F, 0x430E7B);
MakeDword(0x430E7B);
MakeDword(0x430E7F);
MakeDword(0x430E83);
MakeDword(0x430E87);
MakeDword(0x430E8B);
MakeDword(0x430E8F);
MakeWord(0x430E93);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430E95, 0x430E9E);
MakeDword(0x430E9E);
MakeDword(0x430EA2);
MakeDword(0x430EA6);
MakeDword(0x430EAA);
MakeDword(0x430EAE);
MakeDword(0x430EB2);
MakeWord(0x430EB6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430EB8, 0x430EBF);
MakeDword(0x430EBF);
MakeDword(0x430EC3);
MakeDword(0x430EC7);
MakeDword(0x430ECB);
MakeDword(0x430ECF);
MakeDword(0x430ED3);
MakeWord(0x430ED7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430ED9, 0x430EE2);
MakeDword(0x430EE2);
MakeDword(0x430EE6);
MakeDword(0x430EEA);
MakeDword(0x430EEE);
MakeDword(0x430EF2);
MakeDword(0x430EF6);
MakeWord(0x430EFA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430EFC, 0x430F04);
MakeDword(0x430F04);
MakeDword(0x430F08);
MakeDword(0x430F0C);
MakeDword(0x430F10);
MakeDword(0x430F14);
MakeDword(0x430F18);
MakeWord(0x430F1C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430F1E, 0x430F27);
MakeDword(0x430F27);
MakeDword(0x430F2B);
MakeDword(0x430F2F);
MakeDword(0x430F33);
MakeDword(0x430F37);
MakeDword(0x430F3B);
MakeWord(0x430F3F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430F41, 0x430F49);
MakeDword(0x430F49);
MakeDword(0x430F4D);
MakeDword(0x430F51);
MakeDword(0x430F55);
MakeDword(0x430F59);
MakeDword(0x430F5D);
MakeWord(0x430F61);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430F63, 0x430F6B);
MakeDword(0x430F6B);
MakeDword(0x430F6F);
MakeDword(0x430F73);
MakeDword(0x430F77);
MakeDword(0x430F7B);
MakeDword(0x430F7F);
MakeWord(0x430F83);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430F85, 0x430F94);
MakeDword(0x430F94);
MakeDword(0x430F98);
MakeDword(0x430F9C);
MakeDword(0x430FA0);
MakeDword(0x430FA4);
MakeDword(0x430FA8);
MakeWord(0x430FAC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430FAE, 0x430FB5);
MakeDword(0x430FB5);
MakeDword(0x430FB9);
MakeDword(0x430FBD);
MakeDword(0x430FC1);
MakeDword(0x430FC5);
MakeDword(0x430FC9);
MakeWord(0x430FCD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430FCF, 0x430FDA);
MakeDword(0x430FDA);
MakeDword(0x430FDE);
MakeDword(0x430FE2);
MakeDword(0x430FE6);
MakeDword(0x430FEA);
MakeDword(0x430FEE);
MakeWord(0x430FF2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x430FF4, 0x431001);
MakeDword(0x431001);
MakeDword(0x431005);
MakeDword(0x431009);
MakeDword(0x43100D);
MakeDword(0x431011);
MakeDword(0x431015);
MakeWord(0x431019);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43101B, 0x431026);
MakeDword(0x431026);
MakeDword(0x43102A);
MakeDword(0x43102E);
MakeDword(0x431032);
MakeDword(0x431036);
MakeDword(0x43103A);
MakeWord(0x43103E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431040, 0x43104B);
MakeDword(0x43104B);
MakeDword(0x43104F);
MakeDword(0x431053);
MakeDword(0x431057);
MakeDword(0x43105B);
MakeDword(0x43105F);
MakeWord(0x431063);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431065, 0x431070);
MakeDword(0x431070);
MakeDword(0x431074);
MakeDword(0x431078);
MakeDword(0x43107C);
MakeDword(0x431080);
MakeDword(0x431084);
MakeWord(0x431088);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43108A, 0x431095);
MakeDword(0x431095);
MakeDword(0x431099);
MakeDword(0x43109D);
MakeDword(0x4310A1);
MakeDword(0x4310A5);
MakeDword(0x4310A9);
MakeWord(0x4310AD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4310AF, 0x4310B9);
MakeDword(0x4310B9);
MakeDword(0x4310BD);
MakeDword(0x4310C1);
MakeDword(0x4310C5);
MakeDword(0x4310C9);
MakeDword(0x4310CD);
MakeWord(0x4310D1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4310D3, 0x4310DD);
MakeDword(0x4310DD);
MakeDword(0x4310E1);
MakeDword(0x4310E5);
MakeDword(0x4310E9);
MakeDword(0x4310ED);
MakeDword(0x4310F1);
MakeWord(0x4310F5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4310F7, 0x4310FF);
MakeDword(0x4310FF);
MakeDword(0x431103);
MakeDword(0x431107);
MakeDword(0x43110B);
MakeDword(0x43110F);
MakeDword(0x431113);
MakeWord(0x431117);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431119, 0x431120);
MakeDword(0x431120);
MakeDword(0x431124);
MakeDword(0x431128);
MakeDword(0x43112C);
MakeDword(0x431130);
MakeDword(0x431134);
MakeWord(0x431138);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43113A, 0x431144);
MakeDword(0x431144);
MakeDword(0x431148);
MakeDword(0x43114C);
MakeDword(0x431150);
MakeDword(0x431154);
MakeDword(0x431158);
MakeWord(0x43115C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43115E, 0x431169);
MakeDword(0x431169);
MakeDword(0x43116D);
MakeDword(0x431171);
MakeDword(0x431175);
MakeDword(0x431179);
MakeDword(0x43117D);
MakeWord(0x431181);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431183, 0x43118B);
MakeDword(0x43118B);
MakeDword(0x43118F);
MakeDword(0x431193);
MakeDword(0x431197);
MakeDword(0x43119B);
MakeDword(0x43119F);
MakeWord(0x4311A3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4311A5, 0x4311B3);
MakeDword(0x4311B3);
MakeDword(0x4311B7);
MakeDword(0x4311BB);
MakeDword(0x4311BF);
MakeDword(0x4311C3);
MakeDword(0x4311C7);
MakeWord(0x4311CB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4311CD, 0x4311DD);
MakeDword(0x4311DD);
MakeDword(0x4311E1);
MakeDword(0x4311E5);
MakeDword(0x4311E9);
MakeDword(0x4311ED);
MakeDword(0x4311F1);
MakeWord(0x4311F5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4311F7, 0x431203);
MakeDword(0x431203);
MakeDword(0x431207);
MakeDword(0x43120B);
MakeDword(0x43120F);
MakeDword(0x431213);
MakeDword(0x431217);
MakeWord(0x43121B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43121D, 0x43122A);
MakeDword(0x43122A);
MakeDword(0x43122E);
MakeDword(0x431232);
MakeDword(0x431236);
MakeDword(0x43123A);
MakeDword(0x43123E);
MakeWord(0x431242);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431244, 0x431251);
MakeDword(0x431251);
MakeDword(0x431255);
MakeDword(0x431259);
MakeDword(0x43125D);
MakeDword(0x431261);
MakeDword(0x431265);
MakeWord(0x431269);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43126B, 0x431277);
MakeDword(0x431277);
MakeDword(0x43127B);
MakeDword(0x43127F);
MakeDword(0x431283);
MakeDword(0x431287);
MakeDword(0x43128B);
MakeWord(0x43128F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431291, 0x43129B);
MakeDword(0x43129B);
MakeDword(0x43129F);
MakeDword(0x4312A3);
MakeDword(0x4312A7);
MakeDword(0x4312AB);
MakeDword(0x4312AF);
MakeWord(0x4312B3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4312B5, 0x4312C1);
MakeDword(0x4312C1);
MakeDword(0x4312C5);
MakeDword(0x4312C9);
MakeDword(0x4312CD);
MakeDword(0x4312D1);
MakeDword(0x4312D5);
MakeWord(0x4312D9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4312DB, 0x4312E7);
MakeUnkn(0x4312E8, 1);
MakeNameEx(0x4312E8, "RTTI_4312E8_Enumeration_TStaticBorderStyle", 0);
MakeDword(0x4312E8);
MakeUnkn(0x4312EC, 1);
MakeNameEx(0x4312EC, "", 0);
MakeByte(0x4312EC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4312ED, 0x431300);
MakeByte(0x431300);
MakeDword(0x431301);
MakeDword(0x431305);
MakeDword(0x431309);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43130D, 0x431315);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431315, 0x43131F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43131F, 0x431329);
MakeUnkn(0x431334, 1);
MakeNameEx(0x431334, "VMT_431334_TCustomStaticText", 0);
MakeDword(0x431334);
MakeDword(0x431338);
MakeDword(0x43133C);
MakeDword(0x431340);
MakeDword(0x431344);
MakeDword(0x431348);
MakeDword(0x43134C);
MakeDword(0x431350);
MakeUnkn(0x431458, 1);
MakeNameEx(0x431458, "TCustomStaticText_DynamicTable", 0);
MakeWord(0x431458);
MakeWord(0x43145A);
MakeWord(0x43145C);
MakeWord(0x43145E);
MakeWord(0x431460);
MakeDword(0x431462);
MakeDword(0x431466);
MakeDword(0x43146A);
MakeDword(0x43146E);
MakeDword(0x431354);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431472, 0x431484);
MakeDword(0x431358);
MakeDword(0x43135C);
MakeDword(0x431360);
MakeDword(0x431364);
MakeDword(0x431368);
MakeDword(0x43136C);
MakeDword(0x431370);
MakeDword(0x431374);
MakeDword(0x431378);
MakeDword(0x43137C);
MakeComm(0x431380, "'+0'");
MakeDword(0x431380);
MakeComm(0x431384, "'+4'");
MakeDword(0x431384);
MakeComm(0x431388, "'+8'");
MakeDword(0x431388);
MakeComm(0x43138C, "'+C'");
MakeDword(0x43138C);
MakeComm(0x431390, "'+10'");
MakeDword(0x431390);
MakeComm(0x431394, "'+14'");
MakeDword(0x431394);
MakeComm(0x431398, "'+18'");
MakeDword(0x431398);
MakeComm(0x43139C, "'+1C'");
MakeDword(0x43139C);
MakeComm(0x4313A0, "'+20'");
MakeDword(0x4313A0);
MakeComm(0x4313A4, "'+24'");
MakeDword(0x4313A4);
MakeComm(0x4313A8, "'+28'");
MakeDword(0x4313A8);
MakeComm(0x4313AC, "'+2C'");
MakeDword(0x4313AC);
MakeComm(0x4313B0, "'+30'");
MakeDword(0x4313B0);
MakeComm(0x4313B4, "'+34'");
MakeDword(0x4313B4);
MakeComm(0x4313B8, "'+38'");
MakeDword(0x4313B8);
MakeComm(0x4313BC, "'+3C'");
MakeDword(0x4313BC);
MakeComm(0x4313C0, "'+40'");
MakeDword(0x4313C0);
MakeComm(0x4313C4, "'+44'");
MakeDword(0x4313C4);
MakeComm(0x4313C8, "'+48'");
MakeDword(0x4313C8);
MakeComm(0x4313CC, "'+4C'");
MakeDword(0x4313CC);
MakeComm(0x4313D0, "'+50'");
MakeDword(0x4313D0);
MakeComm(0x4313D4, "'+54'");
MakeDword(0x4313D4);
MakeComm(0x4313D8, "'+58'");
MakeDword(0x4313D8);
MakeComm(0x4313DC, "'+5C'");
MakeDword(0x4313DC);
MakeComm(0x4313E0, "'+60'");
MakeDword(0x4313E0);
MakeComm(0x4313E4, "'+64'");
MakeDword(0x4313E4);
MakeComm(0x4313E8, "'+68'");
MakeDword(0x4313E8);
MakeComm(0x4313EC, "'+6C'");
MakeDword(0x4313EC);
MakeComm(0x4313F0, "'+70'");
MakeDword(0x4313F0);
MakeComm(0x4313F4, "'+74'");
MakeDword(0x4313F4);
MakeComm(0x4313F8, "'+78'");
MakeDword(0x4313F8);
MakeComm(0x4313FC, "'+7C'");
MakeDword(0x4313FC);
MakeComm(0x431400, "'+80'");
MakeDword(0x431400);
MakeComm(0x431404, "'+84'");
MakeDword(0x431404);
MakeComm(0x431408, "'+88'");
MakeDword(0x431408);
MakeComm(0x43140C, "'+8C'");
MakeDword(0x43140C);
MakeComm(0x431410, "'+90'");
MakeDword(0x431410);
MakeComm(0x431414, "'+94'");
MakeDword(0x431414);
MakeComm(0x431418, "'+98'");
MakeDword(0x431418);
MakeComm(0x43141C, "'+9C'");
MakeDword(0x43141C);
MakeComm(0x431420, "'+A0'");
MakeDword(0x431420);
MakeComm(0x431424, "'+A4'");
MakeDword(0x431424);
MakeComm(0x431428, "'+A8'");
MakeDword(0x431428);
MakeComm(0x43142C, "'+AC'");
MakeDword(0x43142C);
MakeComm(0x431430, "'+B0'");
MakeDword(0x431430);
MakeComm(0x431434, "'+B4'");
MakeDword(0x431434);
MakeComm(0x431438, "'+B8'");
MakeDword(0x431438);
MakeComm(0x43143C, "'+BC'");
MakeDword(0x43143C);
MakeComm(0x431440, "'+C0'");
MakeDword(0x431440);
MakeComm(0x431444, "'+C4'");
MakeDword(0x431444);
MakeComm(0x431448, "'+C8'");
MakeDword(0x431448);
MakeComm(0x43144C, "'+CC'");
MakeDword(0x43144C);
MakeComm(0x431450, "'+D0'");
MakeDword(0x431450);
MakeComm(0x431454, "'+D4'");
MakeDword(0x431454);
MakeUnkn(0x431484, 1);
MakeNameEx(0x431484, "RTTI_431484_Class_TCustomStaticText", 0);
MakeDword(0x431484);
MakeUnkn(0x431488, 1);
MakeNameEx(0x431488, "", 0);
MakeByte(0x431488);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431489, 0x43149B);
MakeDword(0x43149B);
MakeDword(0x43149F);
MakeWord(0x4314A3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4314A5, 0x4314AE);
MakeWord(0x4314AE);
MakeUnkn(0x4314B0, 1);
MakeNameEx(0x4314B0, "VMT_4314B0_TStaticText", 0);
MakeDword(0x4314B0);
MakeDword(0x4314B4);
MakeDword(0x4314B8);
MakeDword(0x4314BC);
MakeDword(0x4314C0);
MakeDword(0x4314C4);
MakeDword(0x4314C8);
MakeDword(0x4314CC);
MakeDword(0x4314D0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4315D4, 0x4315E0);
MakeDword(0x4314D4);
MakeDword(0x4314D8);
MakeDword(0x4314DC);
MakeDword(0x4314E0);
MakeDword(0x4314E4);
MakeDword(0x4314E8);
MakeDword(0x4314EC);
MakeDword(0x4314F0);
MakeDword(0x4314F4);
MakeDword(0x4314F8);
MakeComm(0x4314FC, "'+0'");
MakeDword(0x4314FC);
MakeComm(0x431500, "'+4'");
MakeDword(0x431500);
MakeComm(0x431504, "'+8'");
MakeDword(0x431504);
MakeComm(0x431508, "'+C'");
MakeDword(0x431508);
MakeComm(0x43150C, "'+10'");
MakeDword(0x43150C);
MakeComm(0x431510, "'+14'");
MakeDword(0x431510);
MakeComm(0x431514, "'+18'");
MakeDword(0x431514);
MakeComm(0x431518, "'+1C'");
MakeDword(0x431518);
MakeComm(0x43151C, "'+20'");
MakeDword(0x43151C);
MakeComm(0x431520, "'+24'");
MakeDword(0x431520);
MakeComm(0x431524, "'+28'");
MakeDword(0x431524);
MakeComm(0x431528, "'+2C'");
MakeDword(0x431528);
MakeComm(0x43152C, "'+30'");
MakeDword(0x43152C);
MakeComm(0x431530, "'+34'");
MakeDword(0x431530);
MakeComm(0x431534, "'+38'");
MakeDword(0x431534);
MakeComm(0x431538, "'+3C'");
MakeDword(0x431538);
MakeComm(0x43153C, "'+40'");
MakeDword(0x43153C);
MakeComm(0x431540, "'+44'");
MakeDword(0x431540);
MakeComm(0x431544, "'+48'");
MakeDword(0x431544);
MakeComm(0x431548, "'+4C'");
MakeDword(0x431548);
MakeComm(0x43154C, "'+50'");
MakeDword(0x43154C);
MakeComm(0x431550, "'+54'");
MakeDword(0x431550);
MakeComm(0x431554, "'+58'");
MakeDword(0x431554);
MakeComm(0x431558, "'+5C'");
MakeDword(0x431558);
MakeComm(0x43155C, "'+60'");
MakeDword(0x43155C);
MakeComm(0x431560, "'+64'");
MakeDword(0x431560);
MakeComm(0x431564, "'+68'");
MakeDword(0x431564);
MakeComm(0x431568, "'+6C'");
MakeDword(0x431568);
MakeComm(0x43156C, "'+70'");
MakeDword(0x43156C);
MakeComm(0x431570, "'+74'");
MakeDword(0x431570);
MakeComm(0x431574, "'+78'");
MakeDword(0x431574);
MakeComm(0x431578, "'+7C'");
MakeDword(0x431578);
MakeComm(0x43157C, "'+80'");
MakeDword(0x43157C);
MakeComm(0x431580, "'+84'");
MakeDword(0x431580);
MakeComm(0x431584, "'+88'");
MakeDword(0x431584);
MakeComm(0x431588, "'+8C'");
MakeDword(0x431588);
MakeComm(0x43158C, "'+90'");
MakeDword(0x43158C);
MakeComm(0x431590, "'+94'");
MakeDword(0x431590);
MakeComm(0x431594, "'+98'");
MakeDword(0x431594);
MakeComm(0x431598, "'+9C'");
MakeDword(0x431598);
MakeComm(0x43159C, "'+A0'");
MakeDword(0x43159C);
MakeComm(0x4315A0, "'+A4'");
MakeDword(0x4315A0);
MakeComm(0x4315A4, "'+A8'");
MakeDword(0x4315A4);
MakeComm(0x4315A8, "'+AC'");
MakeDword(0x4315A8);
MakeComm(0x4315AC, "'+B0'");
MakeDword(0x4315AC);
MakeComm(0x4315B0, "'+B4'");
MakeDword(0x4315B0);
MakeComm(0x4315B4, "'+B8'");
MakeDword(0x4315B4);
MakeComm(0x4315B8, "'+BC'");
MakeDword(0x4315B8);
MakeComm(0x4315BC, "'+C0'");
MakeDword(0x4315BC);
MakeComm(0x4315C0, "'+C4'");
MakeDword(0x4315C0);
MakeComm(0x4315C4, "'+C8'");
MakeDword(0x4315C4);
MakeComm(0x4315C8, "'+CC'");
MakeDword(0x4315C8);
MakeComm(0x4315CC, "'+D0'");
MakeDword(0x4315CC);
MakeComm(0x4315D0, "'+D4'");
MakeDword(0x4315D0);
MakeUnkn(0x4315E0, 1);
MakeNameEx(0x4315E0, "RTTI_4315E0_Class_TStaticText", 0);
MakeDword(0x4315E0);
MakeUnkn(0x4315E4, 1);
MakeNameEx(0x4315E4, "", 0);
MakeByte(0x4315E4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4315E5, 0x4315F1);
MakeDword(0x4315F1);
MakeDword(0x4315F5);
MakeWord(0x4315F9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4315FB, 0x431604);
MakeWord(0x431604);
MakeDword(0x431606);
MakeDword(0x43160A);
MakeDword(0x43160E);
MakeDword(0x431612);
MakeDword(0x431616);
MakeDword(0x43161A);
MakeWord(0x43161E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431620, 0x431626);
MakeDword(0x431626);
MakeDword(0x43162A);
MakeDword(0x43162E);
MakeDword(0x431632);
MakeDword(0x431636);
MakeDword(0x43163A);
MakeWord(0x43163E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431640, 0x43164A);
MakeDword(0x43164A);
MakeDword(0x43164E);
MakeDword(0x431652);
MakeDword(0x431656);
MakeDword(0x43165A);
MakeDword(0x43165E);
MakeWord(0x431662);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431664, 0x43166C);
MakeDword(0x43166C);
MakeDword(0x431670);
MakeDword(0x431674);
MakeDword(0x431678);
MakeDword(0x43167C);
MakeDword(0x431680);
MakeWord(0x431684);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431686, 0x43168F);
MakeDword(0x43168F);
MakeDword(0x431693);
MakeDword(0x431697);
MakeDword(0x43169B);
MakeDword(0x43169F);
MakeDword(0x4316A3);
MakeWord(0x4316A7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4316A9, 0x4316B4);
MakeDword(0x4316B4);
MakeDword(0x4316B8);
MakeDword(0x4316BC);
MakeDword(0x4316C0);
MakeDword(0x4316C4);
MakeDword(0x4316C8);
MakeWord(0x4316CC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4316CE, 0x4316D9);
MakeDword(0x4316D9);
MakeDword(0x4316DD);
MakeDword(0x4316E1);
MakeDword(0x4316E5);
MakeDword(0x4316E9);
MakeDword(0x4316ED);
MakeWord(0x4316F1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4316F3, 0x4316FD);
MakeDword(0x4316FD);
MakeDword(0x431701);
MakeDword(0x431705);
MakeDword(0x431709);
MakeDword(0x43170D);
MakeDword(0x431711);
MakeWord(0x431715);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431717, 0x431722);
MakeDword(0x431722);
MakeDword(0x431726);
MakeDword(0x43172A);
MakeDword(0x43172E);
MakeDword(0x431732);
MakeDword(0x431736);
MakeWord(0x43173A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43173C, 0x431745);
MakeDword(0x431745);
MakeDword(0x431749);
MakeDword(0x43174D);
MakeDword(0x431751);
MakeDword(0x431755);
MakeDword(0x431759);
MakeWord(0x43175D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43175F, 0x43176B);
MakeDword(0x43176B);
MakeDword(0x43176F);
MakeDword(0x431773);
MakeDword(0x431777);
MakeDword(0x43177B);
MakeDword(0x43177F);
MakeWord(0x431783);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431785, 0x43178D);
MakeDword(0x43178D);
MakeDword(0x431791);
MakeDword(0x431795);
MakeDword(0x431799);
MakeDword(0x43179D);
MakeDword(0x4317A1);
MakeWord(0x4317A5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4317A7, 0x4317AD);
MakeDword(0x4317AD);
MakeDword(0x4317B1);
MakeDword(0x4317B5);
MakeDword(0x4317B9);
MakeDword(0x4317BD);
MakeDword(0x4317C1);
MakeWord(0x4317C5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4317C7, 0x4317D3);
MakeDword(0x4317D3);
MakeDword(0x4317D7);
MakeDword(0x4317DB);
MakeDword(0x4317DF);
MakeDword(0x4317E3);
MakeDword(0x4317E7);
MakeWord(0x4317EB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4317ED, 0x4317F8);
MakeDword(0x4317F8);
MakeDword(0x4317FC);
MakeDword(0x431800);
MakeDword(0x431804);
MakeDword(0x431808);
MakeDword(0x43180C);
MakeWord(0x431810);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431812, 0x43181B);
MakeDword(0x43181B);
MakeDword(0x43181F);
MakeDword(0x431823);
MakeDword(0x431827);
MakeDword(0x43182B);
MakeDword(0x43182F);
MakeWord(0x431833);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431835, 0x43183E);
MakeDword(0x43183E);
MakeDword(0x431842);
MakeDword(0x431846);
MakeDword(0x43184A);
MakeDword(0x43184E);
MakeDword(0x431852);
MakeWord(0x431856);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431858, 0x431860);
MakeDword(0x431860);
MakeDword(0x431864);
MakeDword(0x431868);
MakeDword(0x43186C);
MakeDword(0x431870);
MakeDword(0x431874);
MakeWord(0x431878);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43187A, 0x431887);
MakeDword(0x431887);
MakeDword(0x43188B);
MakeDword(0x43188F);
MakeDword(0x431893);
MakeDword(0x431897);
MakeDword(0x43189B);
MakeWord(0x43189F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4318A1, 0x4318A6);
MakeDword(0x4318A6);
MakeDword(0x4318AA);
MakeDword(0x4318AE);
MakeDword(0x4318B2);
MakeDword(0x4318B6);
MakeDword(0x4318BA);
MakeWord(0x4318BE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4318C0, 0x4318CF);
MakeDword(0x4318CF);
MakeDword(0x4318D3);
MakeDword(0x4318D7);
MakeDword(0x4318DB);
MakeDword(0x4318DF);
MakeDword(0x4318E3);
MakeWord(0x4318E7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4318E9, 0x4318F5);
MakeDword(0x4318F5);
MakeDword(0x4318F9);
MakeDword(0x4318FD);
MakeDword(0x431901);
MakeDword(0x431905);
MakeDword(0x431909);
MakeWord(0x43190D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43190F, 0x43191A);
MakeDword(0x43191A);
MakeDword(0x43191E);
MakeDword(0x431922);
MakeDword(0x431926);
MakeDword(0x43192A);
MakeDword(0x43192E);
MakeWord(0x431932);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431934, 0x431943);
MakeDword(0x431943);
MakeDword(0x431947);
MakeDword(0x43194B);
MakeDword(0x43194F);
MakeDword(0x431953);
MakeDword(0x431957);
MakeWord(0x43195B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43195D, 0x431967);
MakeDword(0x431967);
MakeDword(0x43196B);
MakeDword(0x43196F);
MakeDword(0x431973);
MakeDword(0x431977);
MakeDword(0x43197B);
MakeWord(0x43197F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431981, 0x43198F);
MakeDword(0x43198F);
MakeDword(0x431993);
MakeDword(0x431997);
MakeDword(0x43199B);
MakeDword(0x43199F);
MakeDword(0x4319A3);
MakeWord(0x4319A7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4319A9, 0x4319B2);
MakeDword(0x4319B2);
MakeDword(0x4319B6);
MakeDword(0x4319BA);
MakeDword(0x4319BE);
MakeDword(0x4319C2);
MakeDword(0x4319C6);
MakeWord(0x4319CA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4319CC, 0x4319D5);
MakeDword(0x4319D5);
MakeDword(0x4319D9);
MakeDword(0x4319DD);
MakeDword(0x4319E1);
MakeDword(0x4319E5);
MakeDword(0x4319E9);
MakeWord(0x4319ED);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4319EF, 0x4319F7);
MakeDword(0x4319F7);
MakeDword(0x4319FB);
MakeDword(0x4319FF);
MakeDword(0x431A03);
MakeDword(0x431A07);
MakeDword(0x431A0B);
MakeWord(0x431A0F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431A11, 0x431A1D);
MakeDword(0x431A1D);
MakeDword(0x431A21);
MakeDword(0x431A25);
MakeDword(0x431A29);
MakeDword(0x431A2D);
MakeDword(0x431A31);
MakeWord(0x431A35);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431A37, 0x431A3F);
MakeDword(0x431A3F);
MakeDword(0x431A43);
MakeDword(0x431A47);
MakeDword(0x431A4B);
MakeDword(0x431A4F);
MakeDword(0x431A53);
MakeWord(0x431A57);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431A59, 0x431A61);
MakeDword(0x431A61);
MakeDword(0x431A65);
MakeDword(0x431A69);
MakeDword(0x431A6D);
MakeDword(0x431A71);
MakeDword(0x431A75);
MakeWord(0x431A79);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431A7B, 0x431A8A);
MakeDword(0x431A8A);
MakeDword(0x431A8E);
MakeDword(0x431A92);
MakeDword(0x431A96);
MakeDword(0x431A9A);
MakeDword(0x431A9E);
MakeWord(0x431AA2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431AA4, 0x431AAF);
MakeDword(0x431AAF);
MakeDword(0x431AB3);
MakeDword(0x431AB7);
MakeDword(0x431ABB);
MakeDword(0x431ABF);
MakeDword(0x431AC3);
MakeWord(0x431AC7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431AC9, 0x431AD4);
MakeDword(0x431AD4);
MakeDword(0x431AD8);
MakeDword(0x431ADC);
MakeDword(0x431AE0);
MakeDword(0x431AE4);
MakeDword(0x431AE8);
MakeWord(0x431AEC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431AEE, 0x431AF9);
MakeDword(0x431AF9);
MakeDword(0x431AFD);
MakeDword(0x431B01);
MakeDword(0x431B05);
MakeDword(0x431B09);
MakeDword(0x431B0D);
MakeWord(0x431B11);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431B13, 0x431B1D);
MakeDword(0x431B1D);
MakeDword(0x431B21);
MakeDword(0x431B25);
MakeDword(0x431B29);
MakeDword(0x431B2D);
MakeDword(0x431B31);
MakeWord(0x431B35);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431B37, 0x431B41);
MakeDword(0x431B41);
MakeDword(0x431B45);
MakeDword(0x431B49);
MakeDword(0x431B4D);
MakeDword(0x431B51);
MakeDword(0x431B55);
MakeWord(0x431B59);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431B5B, 0x431B6B);
MakeDword(0x431B6B);
MakeDword(0x431B6F);
MakeDword(0x431B73);
MakeDword(0x431B77);
MakeDword(0x431B7B);
MakeDword(0x431B7F);
MakeWord(0x431B83);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431B85, 0x431B91);
MakeDword(0x431B91);
MakeDword(0x431B95);
MakeDword(0x431B99);
MakeDword(0x431B9D);
MakeDword(0x431BA1);
MakeDword(0x431BA5);
MakeWord(0x431BA9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431BAB, 0x431BB8);
MakeDword(0x431BB8);
MakeDword(0x431BBC);
MakeDword(0x431BC0);
MakeDword(0x431BC4);
MakeDword(0x431BC8);
MakeDword(0x431BCC);
MakeWord(0x431BD0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431BD2, 0x431BDF);
MakeDword(0x431BDF);
MakeDword(0x431BE3);
MakeDword(0x431BE7);
MakeDword(0x431BEB);
MakeDword(0x431BEF);
MakeDword(0x431BF3);
MakeWord(0x431BF7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431BF9, 0x431C05);
MakeDword(0x431C05);
MakeDword(0x431C09);
MakeDword(0x431C0D);
MakeDword(0x431C11);
MakeDword(0x431C15);
MakeDword(0x431C19);
MakeWord(0x431C1D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431C1F, 0x431C29);
MakeDword(0x431C29);
MakeDword(0x431C2D);
MakeDword(0x431C31);
MakeDword(0x431C35);
MakeDword(0x431C39);
MakeDword(0x431C3D);
MakeWord(0x431C41);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431C43, 0x431C4F);
MakeDword(0x431C4F);
MakeDword(0x431C53);
MakeDword(0x431C57);
MakeDword(0x431C5B);
MakeDword(0x431C5F);
MakeDword(0x431C63);
MakeWord(0x431C67);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431C69, 0x431C75);
MakeUnkn(0x431C78, 1);
MakeNameEx(0x431C78, "HasPopup", 0x20);
MakeComm(0x431C78, "'function HasPopup(Control:TControl):Boolean;'");
MakeCode(0x431C78);
MakeCode(0x431C7E);
MakeCode(0x431C8E);
MakeCode(0x431C90);
MakeFunction(0x431C78, 0x431C93);
MakeUnkn(0x431C94, 1);
MakeNameEx(0x431C94, "VMT_431C94_TMemoStrings", 0);
MakeDword(0x431C94);
MakeDword(0x431C98);
MakeDword(0x431C9C);
MakeDword(0x431CA0);
MakeDword(0x431CA4);
MakeDword(0x431CA8);
MakeDword(0x431CAC);
MakeDword(0x431CB0);
MakeDword(0x431CB4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431D60, 0x431D6D);
MakeDword(0x431CB8);
MakeDword(0x431CBC);
MakeDword(0x431CC0);
MakeDword(0x431CC4);
MakeDword(0x431CC8);
MakeDword(0x431CCC);
MakeDword(0x431CD0);
MakeDword(0x431CD4);
MakeDword(0x431CD8);
MakeDword(0x431CDC);
MakeComm(0x431CE0, "'+0'");
MakeDword(0x431CE0);
MakeComm(0x431CE4, "'+4'");
MakeDword(0x431CE4);
MakeComm(0x431CE8, "'+8'");
MakeDword(0x431CE8);
MakeComm(0x431CEC, "'+C'");
MakeDword(0x431CEC);
MakeComm(0x431CF0, "'+10'");
MakeDword(0x431CF0);
MakeComm(0x431CF4, "'+14'");
MakeDword(0x431CF4);
MakeComm(0x431CF8, "'+18'");
MakeDword(0x431CF8);
MakeComm(0x431CFC, "'+1C'");
MakeDword(0x431CFC);
MakeComm(0x431D00, "'+20'");
MakeDword(0x431D00);
MakeComm(0x431D04, "'+24'");
MakeDword(0x431D04);
MakeComm(0x431D08, "'+28'");
MakeDword(0x431D08);
MakeComm(0x431D0C, "'+2C'");
MakeDword(0x431D0C);
MakeComm(0x431D10, "'+30'");
MakeDword(0x431D10);
MakeComm(0x431D14, "'+34'");
MakeDword(0x431D14);
MakeComm(0x431D18, "'+38'");
MakeDword(0x431D18);
MakeComm(0x431D1C, "'+3C'");
MakeDword(0x431D1C);
MakeComm(0x431D20, "'+40'");
MakeDword(0x431D20);
MakeComm(0x431D24, "'+44'");
MakeDword(0x431D24);
MakeComm(0x431D28, "'+48'");
MakeDword(0x431D28);
MakeComm(0x431D2C, "'+4C'");
MakeDword(0x431D2C);
MakeComm(0x431D30, "'+50'");
MakeDword(0x431D30);
MakeComm(0x431D34, "'+54'");
MakeDword(0x431D34);
MakeComm(0x431D38, "'+58'");
MakeDword(0x431D38);
MakeComm(0x431D3C, "'+5C'");
MakeDword(0x431D3C);
MakeComm(0x431D40, "'+60'");
MakeDword(0x431D40);
MakeComm(0x431D44, "'+64'");
MakeDword(0x431D44);
MakeComm(0x431D48, "'+68'");
MakeDword(0x431D48);
MakeComm(0x431D4C, "'+6C'");
MakeDword(0x431D4C);
MakeComm(0x431D50, "'+70'");
MakeDword(0x431D50);
MakeComm(0x431D54, "'+74'");
MakeDword(0x431D54);
MakeComm(0x431D58, "'+78'");
MakeDword(0x431D58);
MakeComm(0x431D5C, "'+7C'");
MakeDword(0x431D5C);
MakeUnkn(0x431D70, 1);
MakeNameEx(0x431D70, "RTTI_431D70_Class_TMemoStrings", 0);
MakeDword(0x431D70);
MakeUnkn(0x431D74, 1);
MakeNameEx(0x431D74, "", 0);
MakeByte(0x431D74);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431D75, 0x431D82);
MakeDword(0x431D82);
MakeDword(0x431D86);
MakeWord(0x431D8A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431D8C, 0x431D95);
MakeWord(0x431D95);
MakeUnkn(0x431D98, 1);
MakeNameEx(0x431D98, "VMT_431D98_TComboBoxStrings", 0);
MakeDword(0x431D98);
MakeDword(0x431D9C);
MakeDword(0x431DA0);
MakeDword(0x431DA4);
MakeDword(0x431DA8);
MakeDword(0x431DAC);
MakeDword(0x431DB0);
MakeDword(0x431DB4);
MakeDword(0x431DB8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431E64, 0x431E75);
MakeDword(0x431DBC);
MakeDword(0x431DC0);
MakeDword(0x431DC4);
MakeDword(0x431DC8);
MakeDword(0x431DCC);
MakeDword(0x431DD0);
MakeDword(0x431DD4);
MakeDword(0x431DD8);
MakeDword(0x431DDC);
MakeDword(0x431DE0);
MakeComm(0x431DE4, "'+0'");
MakeDword(0x431DE4);
MakeComm(0x431DE8, "'+4'");
MakeDword(0x431DE8);
MakeComm(0x431DEC, "'+8'");
MakeDword(0x431DEC);
MakeComm(0x431DF0, "'+C'");
MakeDword(0x431DF0);
MakeComm(0x431DF4, "'+10'");
MakeDword(0x431DF4);
MakeComm(0x431DF8, "'+14'");
MakeDword(0x431DF8);
MakeComm(0x431DFC, "'+18'");
MakeDword(0x431DFC);
MakeComm(0x431E00, "'+1C'");
MakeDword(0x431E00);
MakeComm(0x431E04, "'+20'");
MakeDword(0x431E04);
MakeComm(0x431E08, "'+24'");
MakeDword(0x431E08);
MakeComm(0x431E0C, "'+28'");
MakeDword(0x431E0C);
MakeComm(0x431E10, "'+2C'");
MakeDword(0x431E10);
MakeComm(0x431E14, "'+30'");
MakeDword(0x431E14);
MakeComm(0x431E18, "'+34'");
MakeDword(0x431E18);
MakeComm(0x431E1C, "'+38'");
MakeDword(0x431E1C);
MakeComm(0x431E20, "'+3C'");
MakeDword(0x431E20);
MakeComm(0x431E24, "'+40'");
MakeDword(0x431E24);
MakeComm(0x431E28, "'+44'");
MakeDword(0x431E28);
MakeComm(0x431E2C, "'+48'");
MakeDword(0x431E2C);
MakeComm(0x431E30, "'+4C'");
MakeDword(0x431E30);
MakeComm(0x431E34, "'+50'");
MakeDword(0x431E34);
MakeComm(0x431E38, "'+54'");
MakeDword(0x431E38);
MakeComm(0x431E3C, "'+58'");
MakeDword(0x431E3C);
MakeComm(0x431E40, "'+5C'");
MakeDword(0x431E40);
MakeComm(0x431E44, "'+60'");
MakeDword(0x431E44);
MakeComm(0x431E48, "'+64'");
MakeDword(0x431E48);
MakeComm(0x431E4C, "'+68'");
MakeDword(0x431E4C);
MakeComm(0x431E50, "'+6C'");
MakeDword(0x431E50);
MakeComm(0x431E54, "'+70'");
MakeDword(0x431E54);
MakeComm(0x431E58, "'+74'");
MakeDword(0x431E58);
MakeComm(0x431E5C, "'+78'");
MakeDword(0x431E5C);
MakeComm(0x431E60, "'+7C'");
MakeDword(0x431E60);
MakeUnkn(0x431E78, 1);
MakeNameEx(0x431E78, "RTTI_431E78_Class_TComboBoxStrings", 0);
MakeDword(0x431E78);
MakeUnkn(0x431E7C, 1);
MakeNameEx(0x431E7C, "", 0);
MakeByte(0x431E7C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431E7D, 0x431E8E);
MakeDword(0x431E8E);
MakeDword(0x431E92);
MakeWord(0x431E96);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431E98, 0x431EA1);
MakeWord(0x431EA1);
MakeUnkn(0x431EA4, 1);
MakeNameEx(0x431EA4, "VMT_431EA4_TListBoxStrings", 0);
MakeDword(0x431EA4);
MakeDword(0x431EA8);
MakeDword(0x431EAC);
MakeDword(0x431EB0);
MakeDword(0x431EB4);
MakeDword(0x431EB8);
MakeDword(0x431EBC);
MakeDword(0x431EC0);
MakeDword(0x431EC4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431F70, 0x431F80);
MakeDword(0x431EC8);
MakeDword(0x431ECC);
MakeDword(0x431ED0);
MakeDword(0x431ED4);
MakeDword(0x431ED8);
MakeDword(0x431EDC);
MakeDword(0x431EE0);
MakeDword(0x431EE4);
MakeDword(0x431EE8);
MakeDword(0x431EEC);
MakeComm(0x431EF0, "'+0'");
MakeDword(0x431EF0);
MakeComm(0x431EF4, "'+4'");
MakeDword(0x431EF4);
MakeComm(0x431EF8, "'+8'");
MakeDword(0x431EF8);
MakeComm(0x431EFC, "'+C'");
MakeDword(0x431EFC);
MakeComm(0x431F00, "'+10'");
MakeDword(0x431F00);
MakeComm(0x431F04, "'+14'");
MakeDword(0x431F04);
MakeComm(0x431F08, "'+18'");
MakeDword(0x431F08);
MakeComm(0x431F0C, "'+1C'");
MakeDword(0x431F0C);
MakeComm(0x431F10, "'+20'");
MakeDword(0x431F10);
MakeComm(0x431F14, "'+24'");
MakeDword(0x431F14);
MakeComm(0x431F18, "'+28'");
MakeDword(0x431F18);
MakeComm(0x431F1C, "'+2C'");
MakeDword(0x431F1C);
MakeComm(0x431F20, "'+30'");
MakeDword(0x431F20);
MakeComm(0x431F24, "'+34'");
MakeDword(0x431F24);
MakeComm(0x431F28, "'+38'");
MakeDword(0x431F28);
MakeComm(0x431F2C, "'+3C'");
MakeDword(0x431F2C);
MakeComm(0x431F30, "'+40'");
MakeDword(0x431F30);
MakeComm(0x431F34, "'+44'");
MakeDword(0x431F34);
MakeComm(0x431F38, "'+48'");
MakeDword(0x431F38);
MakeComm(0x431F3C, "'+4C'");
MakeDword(0x431F3C);
MakeComm(0x431F40, "'+50'");
MakeDword(0x431F40);
MakeComm(0x431F44, "'+54'");
MakeDword(0x431F44);
MakeComm(0x431F48, "'+58'");
MakeDword(0x431F48);
MakeComm(0x431F4C, "'+5C'");
MakeDword(0x431F4C);
MakeComm(0x431F50, "'+60'");
MakeDword(0x431F50);
MakeComm(0x431F54, "'+64'");
MakeDword(0x431F54);
MakeComm(0x431F58, "'+68'");
MakeDword(0x431F58);
MakeComm(0x431F5C, "'+6C'");
MakeDword(0x431F5C);
MakeComm(0x431F60, "'+70'");
MakeDword(0x431F60);
MakeComm(0x431F64, "'+74'");
MakeDword(0x431F64);
MakeComm(0x431F68, "'+78'");
MakeDword(0x431F68);
MakeComm(0x431F6C, "'+7C'");
MakeDword(0x431F6C);
MakeUnkn(0x431F80, 1);
MakeNameEx(0x431F80, "RTTI_431F80_Class_TListBoxStrings", 0);
MakeDword(0x431F80);
MakeUnkn(0x431F84, 1);
MakeNameEx(0x431F84, "", 0);
MakeByte(0x431F84);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431F85, 0x431F95);
MakeDword(0x431F95);
MakeDword(0x431F99);
MakeWord(0x431F9D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x431F9F, 0x431FA8);
MakeWord(0x431FA8);
MakeUnkn(0x431FAC, 1);
MakeNameEx(0x431FAC, "TCustomLabel.Create", 0x20);
MakeComm(0x431FAC, "'constructor TCustomLabel.Create(AOwner:TComponent);'");
MakeCode(0x431FAC);
MakeCode(0x431FBA);
MakeCode(0x432016);
MakeCode(0x432022);
MakeCode(0x432037);
MakeFunction(0x431FAC, 0x43203C);
MakeUnkn(0x432044, 1);
MakeNameEx(0x432044, "TCustomLabel.GetLabelText", 0x20);
MakeComm(0x432044, "'function TCustomLabel.GetLabelText:AnsiString;'");
MakeCode(0x432044);
MakeFunction(0x432044, 0x432056);
MakeUnkn(0x432058, 1);
MakeNameEx(0x432058, "TCustomLabel.DoDrawText", 0x20);
MakeComm(0x432058, "'procedure TCustomLabel.DoDrawText(var Rect:TRect; Flags:Longint);'");
MakeCode(0x432058);
MakeCode(0x4320B3);
MakeCode(0x4320C0);
MakeCode(0x4320CF);
MakeCode(0x43213C);
MakeCode(0x432169);
MakeCode(0x4321D2);
MakeCode(0x4321D4);
MakeCode(0x4321E4);
MakeCode(0x432212);
MakeCode(0x432223);
MakeCode(0x43225E);
MakeCode(0x4322AA);
MakeCode(0x4322CC);
MakeCode(0x4322D8);
MakeCode(0x4322F8);
MakeCode(0x432305);
MakeCode(0x432313);
MakeCode(0x432318);
MakeFunction(0x432058, 0x432321);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43232C, -1);
MakeDword(0x432328);
MakeDword(0x432324);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x432338, -1);
MakeDword(0x432334);
MakeDword(0x432330);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x432344, -1);
MakeDword(0x432340);
MakeDword(0x43233C);
MakeUnkn(0x432348, 1);
MakeNameEx(0x432348, "TCustomLabel.Paint", 0x20);
MakeComm(0x432348, "'procedure TCustomLabel.Paint;'");
MakeCode(0x432348);
MakeCode(0x43238C);
MakeCode(0x432411);
MakeCode(0x43241F);
MakeCode(0x43242C);
MakeFunction(0x432348, 0x432442);
MakeUnkn(0x432444, 1);
MakeNameEx(0x432444, "TCustomLabel.Loaded", 0x20);
MakeComm(0x432444, "'procedure TCustomLabel.Loaded;'");
MakeCode(0x432444);
MakeFunction(0x432444, 0x43245D);
MakeUnkn(0x432460, 1);
MakeNameEx(0x432460, "TCustomLabel.AdjustBounds", 0x20);
MakeComm(0x432460, "'procedure TCustomLabel.AdjustBounds;'");
MakeCode(0x432460);
MakeCode(0x4324FE);
MakeCode(0x43250D);
MakeCode(0x432526);
MakeFunction(0x432460, 0x43252D);
MakeUnkn(0x432530, 1);
MakeNameEx(0x432530, "TCustomLabel.SetAlignment", 0x20);
MakeComm(0x432530, "'procedure TCustomLabel.SetAlignment(Value:TAlignment);'");
MakeCode(0x432530);
MakeCode(0x43254B);
MakeFunction(0x432530, 0x43254D);
MakeUnkn(0x432550, 1);
MakeNameEx(0x432550, "TCustomLabel.SetEllipsisPosition", 0x20);
MakeComm(0x432550, "'procedure TCustomLabel.SetEllipsisPosition(Value:TEllipsisPosition);'");
MakeCode(0x432550);
MakeCode(0x432572);
MakeFunction(0x432550, 0x432574);
MakeUnkn(0x432574, 1);
MakeNameEx(0x432574, "TCustomLabel.SetAutoSize", 0x20);
MakeComm(0x432574, "'procedure TCustomLabel.SetAutoSize(Value:Boolean);'");
MakeCode(0x432574);
MakeCode(0x432593);
MakeFunction(0x432574, 0x432595);
MakeUnkn(0x432598, 1);
MakeNameEx(0x432598, "TCustomLabel.GetTransparent", 0x20);
MakeComm(0x432598, "'function TCustomLabel.GetTransparent:Boolean;'");
MakeCode(0x432598);
MakeFunction(0x432598, 0x4325A2);
MakeUnkn(0x4325A4, 1);
MakeNameEx(0x4325A4, "TCustomLabel.SetFocusControl", 0x20);
MakeComm(0x4325A4, "'procedure TCustomLabel.SetFocusControl(Value:TWinControl);'");
MakeCode(0x4325A4);
MakeFunction(0x4325A4, 0x4325B5);
MakeUnkn(0x4325B8, 1);
MakeNameEx(0x4325B8, "TCustomLabel.SetShowAccelChar", 0x20);
MakeComm(0x4325B8, "'procedure TCustomLabel.SetShowAccelChar(Value:Boolean);'");
MakeCode(0x4325B8);
MakeCode(0x4325D3);
MakeFunction(0x4325B8, 0x4325D5);
MakeUnkn(0x4325D8, 1);
MakeNameEx(0x4325D8, "TCustomLabel.SetTransparent", 0x20);
MakeComm(0x4325D8, "'procedure TCustomLabel.SetTransparent(Value:Boolean);'");
MakeCode(0x4325D8);
MakeCode(0x4325FC);
MakeCode(0x432607);
MakeCode(0x432611);
MakeFunction(0x4325D8, 0x43261B);
MakeUnkn(0x432620, 1);
MakeNameEx(0x432620, "TCustomLabel.SetLayout", 0x20);
MakeComm(0x432620, "'procedure TCustomLabel.SetLayout(Value:TTextLayout);'");
MakeCode(0x432620);
MakeCode(0x43263B);
MakeFunction(0x432620, 0x43263D);
MakeUnkn(0x432640, 1);
MakeNameEx(0x432640, "TCustomLabel.SetWordWrap", 0x20);
MakeComm(0x432640, "'procedure TCustomLabel.SetWordWrap(Value:Boolean);'");
MakeCode(0x432640);
MakeCode(0x432667);
MakeFunction(0x432640, 0x43266A);
MakeUnkn(0x43266C, 1);
MakeNameEx(0x43266C, "TCustomLabel.Notification", 0x20);
MakeComm(0x43266C, "'procedure TCustomLabel.Notification(AComponent:TComponent; Operation:TOperation);'");
MakeCode(0x43266C);
MakeCode(0x432695);
MakeFunction(0x43266C, 0x432699);
MakeUnkn(0x43269C, 1);
MakeNameEx(0x43269C, "TCustomLabel.CMTextChanged", 0x20);
MakeComm(0x43269C, "'procedure TCustomLabel.CMTextChanged(var Message:TMessage);'");
MakeCode(0x43269C);
MakeFunction(0x43269C, 0x4326B8);
MakeUnkn(0x4326B8, 1);
MakeNameEx(0x4326B8, "TCustomLabel.CMFontChanged", 0x20);
MakeComm(0x4326B8, "'procedure TCustomLabel.CMFontChanged(var Message:TMessage);'");
MakeCode(0x4326B8);
MakeFunction(0x4326B8, 0x4326CF);
MakeUnkn(0x4326D0, 1);
MakeNameEx(0x4326D0, "TCustomLabel.CMDialogChar", 0x20);
MakeComm(0x4326D0, "'procedure TCustomLabel.CMDialogChar(var Message:TCMDialogChar);'");
MakeCode(0x4326D0);
MakeCode(0x432747);
MakeCode(0x432754);
MakeCode(0x43275D);
MakeCode(0x432762);
MakeFunction(0x4326D0, 0x43276A);
MakeUnkn(0x43276C, 1);
MakeNameEx(0x43276C, "TCustomEdit.Create", 0x20);
MakeComm(0x43276C, "'constructor TCustomEdit.Create(AOwner:TComponent);'");
MakeCode(0x43276C);
MakeCode(0x43277A);
MakeCode(0x43279B);
MakeCode(0x4327A3);
MakeCode(0x432819);
MakeFunction(0x43276C, 0x43281E);
MakeUnkn(0x432828, 1);
MakeNameEx(0x432828, "TCustomEdit.DoSetMaxLength", 0x20);
MakeComm(0x432828, "'procedure TCustomEdit.DoSetMaxLength(Value:Integer);'");
MakeCode(0x432828);
MakeFunction(0x432828, 0x432846);
MakeUnkn(0x432848, 1);
MakeNameEx(0x432848, "TCustomEdit.SetAutoSize", 0x20);
MakeComm(0x432848, "'procedure TCustomEdit.SetAutoSize(Value:Boolean);'");
MakeCode(0x432848);
MakeFunction(0x432848, 0x43285C);
MakeUnkn(0x43285C, 1);
MakeNameEx(0x43285C, "TCustomEdit.SetBorderStyle", 0x20);
MakeComm(0x43285C, "'procedure TCustomEdit.SetBorderStyle(Value:TBorderStyle);'");
MakeCode(0x43285C);
MakeCode(0x43287B);
MakeFunction(0x43285C, 0x43287D);
MakeUnkn(0x432880, 1);
MakeNameEx(0x432880, "TCustomEdit.SetCharCase", 0x20);
MakeComm(0x432880, "'procedure TCustomEdit.SetCharCase(Value:TEditCharCase);'");
MakeCode(0x432880);
MakeFunction(0x432880, 0x432894);
MakeUnkn(0x432894, 1);
MakeNameEx(0x432894, "TCustomEdit.SetHideSelection", 0x20);
MakeComm(0x432894, "'procedure TCustomEdit.SetHideSelection(Value:Boolean);'");
MakeCode(0x432894);
MakeFunction(0x432894, 0x4328A8);
MakeUnkn(0x4328A8, 1);
MakeNameEx(0x4328A8, "TCustomEdit.SetMaxLength", 0x20);
MakeComm(0x4328A8, "'procedure TCustomEdit.SetMaxLength(Value:Integer);'");
MakeCode(0x4328A8);
MakeCode(0x4328D3);
MakeFunction(0x4328A8, 0x4328D6);
MakeUnkn(0x4328D8, 1);
MakeNameEx(0x4328D8, "TCustomEdit.SetOEMConvert", 0x20);
MakeComm(0x4328D8, "'procedure TCustomEdit.SetOEMConvert(Value:Boolean);'");
MakeCode(0x4328D8);
MakeFunction(0x4328D8, 0x4328EC);
MakeUnkn(0x4328EC, 1);
MakeNameEx(0x4328EC, "TCustomEdit.GetModified", 0x20);
MakeComm(0x4328EC, "'function TCustomEdit.GetModified:Boolean;'");
MakeCode(0x4328EC);
MakeCode(0x43291D);
MakeFunction(0x4328EC, 0x432922);
MakeUnkn(0x432924, 1);
MakeNameEx(0x432924, "TCustomEdit.SetModified", 0x20);
MakeComm(0x432924, "'procedure TCustomEdit.SetModified(Value:Boolean);'");
MakeCode(0x432924);
MakeCode(0x432950);
MakeFunction(0x432924, 0x432959);
MakeUnkn(0x43295C, 1);
MakeNameEx(0x43295C, "TCustomEdit.SetPasswordChar", 0x20);
MakeComm(0x43295C, "'procedure TCustomEdit.SetPasswordChar(Value:Char);'");
MakeCode(0x43295C);
MakeCode(0x4329C2);
MakeCode(0x4329CF);
MakeCode(0x4329D8);
MakeCode(0x4329DD);
MakeFunction(0x43295C, 0x4329E3);
MakeUnkn(0x4329E4, 1);
MakeNameEx(0x4329E4, "TCustomEdit.SetReadOnly", 0x20);
MakeComm(0x4329E4, "'procedure TCustomEdit.SetReadOnly(Value:Boolean);'");
MakeCode(0x4329E4);
MakeCode(0x432A1B);
MakeFunction(0x4329E4, 0x432A1E);
MakeUnkn(0x432A20, 1);
MakeNameEx(0x432A20, "TCustomEdit.GetSelStart", 0x20);
MakeComm(0x432A20, "'function TCustomEdit.GetSelStart:Integer;'");
MakeCode(0x432A20);
MakeFunction(0x432A20, 0x432A43);
MakeUnkn(0x432A44, 1);
MakeNameEx(0x432A44, "TCustomEdit.SetSelStart", 0x20);
MakeComm(0x432A44, "'procedure TCustomEdit.SetSelStart(Value:Integer);'");
MakeCode(0x432A44);
MakeFunction(0x432A44, 0x432A61);
MakeUnkn(0x432A64, 1);
MakeNameEx(0x432A64, "TCustomEdit.GetSelLength", 0x20);
MakeComm(0x432A64, "'function TCustomEdit.GetSelLength:Integer;'");
MakeCode(0x432A64);
MakeFunction(0x432A64, 0x432A91);
MakeUnkn(0x432A94, 1);
MakeNameEx(0x432A94, "TCustomEdit.SetSelLength", 0x20);
MakeComm(0x432A94, "'procedure TCustomEdit.SetSelLength(Value:Integer);'");
MakeCode(0x432A94);
MakeFunction(0x432A94, 0x432AF7);
MakeUnkn(0x432AF8, 1);
MakeNameEx(0x432AF8, "TCustomEdit.Clear", 0x20);
MakeComm(0x432AF8, "'procedure TCustomEdit.Clear;'");
MakeCode(0x432AF8);
MakeFunction(0x432AF8, 0x432B0F);
MakeUnkn(0x432B14, 1);
MakeNameEx(0x432B14, "TCustomEdit.SelectAll", 0x20);
MakeComm(0x432B14, "'procedure TCustomEdit.SelectAll;'");
MakeCode(0x432B14);
MakeFunction(0x432B14, 0x432B2F);
MakeUnkn(0x432B30, 1);
MakeNameEx(0x432B30, "TCustomEdit.GetSelTextBuf", 0x20);
MakeComm(0x432B30, "'function TCustomEdit.GetSelTextBuf(Buffer:PChar; BufSize:Integer):Integer;'");
MakeCode(0x432B30);
MakeCode(0x432B94);
MakeCode(0x432BA4);
MakeCode(0x432BB1);
MakeCode(0x432BBA);
MakeCode(0x432BBF);
MakeFunction(0x432B30, 0x432BCB);
MakeUnkn(0x432BCC, 1);
MakeNameEx(0x432BCC, "TCustomEdit.GetSelText", 0x20);
MakeComm(0x432BCC, "'function TCustomEdit.GetSelText:AnsiString;'");
MakeCode(0x432BCC);
MakeCode(0x432C44);
MakeCode(0x432C51);
MakeCode(0x432C5A);
MakeCode(0x432C5F);
MakeCode(0x432C61);
MakeFunction(0x432BCC, 0x432C68);
MakeUnkn(0x432C68, 1);
MakeNameEx(0x432C68, "TCustomEdit.CreateParams", 0x20);
MakeComm(0x432C68, "'procedure TCustomEdit.CreateParams(var Params:TCreateParams);'");
MakeCode(0x432C68);
MakeCode(0x432D14);
MakeFunction(0x432C68, 0x432D17);
MakeUnkn(0x432D20, 1);
MakeNameEx(0x432D20, "TCustomEdit.CreateWindowHandle", 0x20);
MakeComm(0x432D20, "'procedure TCustomEdit.CreateWindowHandle(const Params:TCreateParams);'");
MakeCode(0x432D20);
MakeCode(0x432D7D);
MakeCode(0x432D84);
MakeFunction(0x432D20, 0x432D8E);
MakeUnkn(0x432D90, 1);
MakeNameEx(0x432D90, "TCustomEdit.CreateWnd", 0x20);
MakeComm(0x432D90, "'procedure TCustomEdit.CreateWnd;'");
MakeCode(0x432D90);
MakeCode(0x432DB7);
MakeCode(0x432DC4);
MakeCode(0x432DCF);
MakeCode(0x432DD4);
MakeCode(0x432E28);
MakeCode(0x432E43);
MakeCode(0x432E5E);
MakeFunction(0x432D90, 0x432E69);
MakeUnkn(0x432E6C, 1);
MakeNameEx(0x432E6C, "TCustomEdit.DestroyWnd", 0x20);
MakeComm(0x432E6C, "'procedure TCustomEdit.DestroyWnd;'");
MakeCode(0x432E6C);
MakeFunction(0x432E6C, 0x432EA5);
MakeUnkn(0x432EA8, 1);
MakeNameEx(0x432EA8, "TCustomEdit.UpdateHeight", 0x20);
MakeComm(0x432EA8, "'procedure TCustomEdit.UpdateHeight;'");
MakeCode(0x432EA8);
MakeCode(0x432ED1);
MakeFunction(0x432EA8, 0x432EE0);
MakeUnkn(0x432EE4, 1);
MakeNameEx(0x432EE4, "TCustomEdit.AdjustHeight", 0x20);
MakeComm(0x432EE4, "'procedure TCustomEdit.AdjustHeight;'");
MakeCode(0x432EE4);
MakeCode(0x432F41);
MakeCode(0x432F46);
MakeCode(0x432F52);
MakeCode(0x432F5F);
MakeCode(0x432F71);
MakeCode(0x432F78);
MakeFunction(0x432EE4, 0x432F8C);
MakeUnkn(0x432F8C, 1);
MakeNameEx(0x432F8C, "TCustomCombo.Change", 0x20);
MakeComm(0x432F8C, "'procedure TCustomCombo.Change;'");
MakeCode(0x432F8C);
MakeCode(0x432FAE);
MakeFunction(0x432F8C, 0x432FB0);
MakeUnkn(0x432FB0, 1);
MakeNameEx(0x432FB0, "TCustomEdit.DefaultHandler", 0x20);
MakeComm(0x432FB0, "'procedure TCustomEdit.DefaultHandler(var Message:void );'");
MakeCode(0x432FB0);
MakeCode(0x432FD9);
MakeFunction(0x432FB0, 0x432FE5);
MakeUnkn(0x432FE8, 1);
MakeNameEx(0x432FE8, "TCustomEdit.WMSetFont", 0x20);
MakeComm(0x432FE8, "'procedure TCustomEdit.WMSetFont(var Message:TWMSetFont);'");
MakeCode(0x432FE8);
MakeCode(0x433025);
MakeFunction(0x432FE8, 0x433027);
MakeUnkn(0x433028, 1);
MakeNameEx(0x433028, "TCustomEdit.CMCtl3DChanged", 0x20);
MakeComm(0x433028, "'procedure TCustomEdit.CMCtl3DChanged(var Message:TMessage);'");
MakeCode(0x433028);
MakeCode(0x43304F);
MakeFunction(0x433028, 0x43305B);
MakeUnkn(0x43305C, 1);
MakeNameEx(0x43305C, "TCustomEdit.CMFontChanged", 0x20);
MakeComm(0x43305C, "'procedure TCustomEdit.CMFontChanged(var Message:TMessage);'");
MakeCode(0x43305C);
MakeCode(0x433078);
MakeCode(0x43307F);
MakeFunction(0x43305C, 0x433081);
MakeUnkn(0x433084, 1);
MakeNameEx(0x433084, "TCustomEdit.CNCommand", 0x20);
MakeComm(0x433084, "'procedure TCustomEdit.CNCommand(var Message:TWMCommand);'");
MakeCode(0x433084);
MakeCode(0x43309F);
MakeFunction(0x433084, 0x4330A1);
MakeUnkn(0x4330A4, 1);
MakeNameEx(0x4330A4, "TCustomEdit.CMEnter", 0x20);
MakeComm(0x4330A4, "'procedure TCustomEdit.CMEnter(var Message:TCMGotFocus);'");
MakeCode(0x4330A4);
MakeCode(0x4330D3);
MakeFunction(0x4330A4, 0x4330DF);
MakeUnkn(0x4330E0, 1);
MakeNameEx(0x4330E0, "TCustomEdit.CMTextChanged", 0x20);
MakeComm(0x4330E0, "'procedure TCustomEdit.CMTextChanged(var Message:TMessage);'");
MakeCode(0x4330E0);
MakeCode(0x433108);
MakeCode(0x433113);
MakeFunction(0x4330E0, 0x433115);
MakeUnkn(0x433118, 1);
MakeNameEx(0x433118, "TCustomEdit.WMContextMenu", 0x20);
MakeComm(0x433118, "'procedure TCustomEdit.WMContextMenu(var Message:TWMContextMenu);'");
MakeCode(0x433118);
MakeFunction(0x433118, 0x433134);
MakeUnkn(0x433134, 1);
MakeNameEx(0x433134, "TMemoStrings.GetCount", 0x20);
MakeComm(0x433134, "'function TMemoStrings.GetCount:Integer;'");
MakeCode(0x433134);
MakeCode(0x43314F);
MakeCode(0x43319C);
MakeFunction(0x433134, 0x4331A1);
MakeUnkn(0x4331A4, 1);
MakeNameEx(0x4331A4, "TMemoStrings.Get", 0x20);
MakeComm(0x4331A4, "'function TMemoStrings.Get(Index:Integer):AnsiString;'");
MakeCode(0x4331A4);
MakeFunction(0x4331A4, 0x4331E7);
MakeUnkn(0x4331E8, 1);
MakeNameEx(0x4331E8, "TMemoStrings.Put", 0x20);
MakeComm(0x4331E8, "'procedure TMemoStrings.Put(Index:Integer; const S:AnsiString);'");
MakeCode(0x4331E8);
MakeCode(0x433257);
MakeFunction(0x4331E8, 0x43325B);
MakeUnkn(0x43325C, 1);
MakeNameEx(0x43325C, "TMemoStrings.Insert", 0x20);
MakeComm(0x43325C, "'procedure TMemoStrings.Insert(Index:Integer; const S:AnsiString);'");
MakeCode(0x43325C);
MakeCode(0x4332B5);
MakeCode(0x4332FE);
MakeCode(0x433331);
MakeCode(0x43333E);
MakeCode(0x433347);
MakeCode(0x43334C);
MakeFunction(0x43325C, 0x433355);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x433360, -1);
MakeDword(0x43335C);
MakeDword(0x433358);
MakeUnkn(0x433368, 1);
MakeNameEx(0x433368, "TMemoStrings.Delete", 0x20);
MakeComm(0x433368, "'procedure TMemoStrings.Delete(Index:Integer);'");
MakeCode(0x433368);
MakeCode(0x4333C2);
MakeCode(0x4333F2);
MakeFunction(0x433368, 0x4333F6);
MakeUnkn(0x4333F8, 1);
MakeNameEx(0x4333F8, "TMemoStrings.Clear", 0x20);
MakeComm(0x4333F8, "'procedure TMemoStrings.Clear;'");
MakeCode(0x4333F8);
MakeFunction(0x4333F8, 0x433408);
MakeUnkn(0x433408, 1);
MakeNameEx(0x433408, "TMemoStrings.SetUpdateState", 0x20);
MakeComm(0x433408, "'procedure TMemoStrings.SetUpdateState(Updating:Boolean);'");
MakeCode(0x433408);
MakeCode(0x433454);
MakeFunction(0x433408, 0x433457);
MakeUnkn(0x433458, 1);
MakeNameEx(0x433458, "TMemoStrings.GetTextStr", 0x20);
MakeComm(0x433458, "'function TMemoStrings.GetTextStr:AnsiString;'");
MakeCode(0x433458);
MakeFunction(0x433458, 0x43346B);
MakeUnkn(0x43346C, 1);
MakeNameEx(0x43346C, "TMemoStrings.SetTextStr", 0x20);
MakeComm(0x43346C, "'procedure TMemoStrings.SetTextStr(const Value:AnsiString);'");
MakeCode(0x43346C);
MakeCode(0x4334A4);
MakeCode(0x4334B4);
MakeCode(0x4334CD);
MakeCode(0x433509);
MakeCode(0x43351A);
MakeCode(0x433527);
MakeCode(0x433540);
MakeCode(0x433545);
MakeFunction(0x43346C, 0x43354E);
MakeUnkn(0x433550, 1);
MakeNameEx(0x433550, "TCustomMemo.Create", 0x20);
MakeComm(0x433550, "'constructor TCustomMemo.Create(AOwner:TComponent);'");
MakeCode(0x433550);
MakeCode(0x433562);
MakeCode(0x4335D9);
MakeFunction(0x433550, 0x4335E0);
MakeUnkn(0x4335E0, 1);
MakeNameEx(0x4335E0, "TCustomMemo.Destroy", 0x20);
MakeComm(0x4335E0, "'destructor TCustomMemo.Destroy;'");
MakeCode(0x4335E0);
MakeCode(0x43360D);
MakeFunction(0x4335E0, 0x433610);
MakeUnkn(0x433610, 1);
MakeNameEx(0x433610, "TCustomMemo.CreateParams", 0x20);
MakeComm(0x433610, "'procedure TCustomMemo.CreateParams(var Params:TCreateParams);'");
MakeCode(0x433610);
MakeFunction(0x433610, 0x433671);
MakeUnkn(0x433674, 1);
MakeNameEx(0x433674, "TCustomMemo.CreateWindowHandle", 0x20);
MakeComm(0x433674, "'procedure TCustomMemo.CreateWindowHandle(const Params:TCreateParams);'");
MakeCode(0x433674);
MakeCode(0x4336EC);
MakeCode(0x433726);
MakeFunction(0x433674, 0x43373D);
MakeUnkn(0x433744, 1);
MakeNameEx(0x433744, "TCustomMemo.GetCaretPos", 0x20);
MakeComm(0x433744, "'function TCustomMemo.GetCaretPos:TPoint;'");
MakeCode(0x433744);
MakeFunction(0x433744, 0x43379D);
MakeUnkn(0x4337A0, 1);
MakeNameEx(0x4337A0, "TCustomMemo.SetCaretPos", 0x20);
MakeComm(0x4337A0, "'procedure TCustomMemo.SetCaretPos(const Value:TPoint);'");
MakeCode(0x4337A0);
MakeFunction(0x4337A0, 0x4337D9);
MakeUnkn(0x4337DC, 1);
MakeNameEx(0x4337DC, "TCustomMemo.GetControlsAlignment", 0x20);
MakeComm(0x4337DC, "'procedure TCustomMemo.GetControlsAlignment;'");
MakeCode(0x4337DC);
MakeFunction(0x4337DC, 0x4337E4);
MakeUnkn(0x4337E4, 1);
MakeNameEx(0x4337E4, "TCustomMemo.Loaded", 0x20);
MakeComm(0x4337E4, "'procedure TCustomMemo.Loaded;'");
MakeCode(0x4337E4);
MakeFunction(0x4337E4, 0x4337F9);
MakeUnkn(0x4337FC, 1);
MakeNameEx(0x4337FC, "TCustomMemo.SetAlignment", 0x20);
MakeComm(0x4337FC, "'procedure TCustomMemo.SetAlignment(Value:TAlignment);'");
MakeCode(0x4337FC);
MakeFunction(0x4337FC, 0x433810);
MakeUnkn(0x433810, 1);
MakeNameEx(0x433810, "TCustomMemo.SetLines", 0x20);
MakeComm(0x433810, "'procedure TCustomMemo.SetLines(Value:TStrings);'");
MakeCode(0x433810);
MakeFunction(0x433810, 0x433820);
MakeUnkn(0x433820, 1);
MakeNameEx(0x433820, "TCustomMemo.SetScrollBars", 0x20);
MakeComm(0x433820, "'procedure TCustomMemo.SetScrollBars(Value:TScrollStyle);'");
MakeCode(0x433820);
MakeFunction(0x433820, 0x433834);
MakeUnkn(0x433834, 1);
MakeNameEx(0x433834, "TCustomMemo.SetWordWrap", 0x20);
MakeComm(0x433834, "'procedure TCustomMemo.SetWordWrap(Value:Boolean);'");
MakeCode(0x433834);
MakeFunction(0x433834, 0x433848);
MakeUnkn(0x433848, 1);
MakeNameEx(0x433848, "TCustomMemo.WMGetDlgCode", 0x20);
MakeComm(0x433848, "'procedure TCustomMemo.WMGetDlgCode(var Message:TWMGetDlgCode);'");
MakeCode(0x433848);
MakeCode(0x433866);
MakeCode(0x43386A);
MakeCode(0x433877);
MakeFunction(0x433848, 0x43387A);
MakeUnkn(0x43387C, 1);
MakeNameEx(0x43387C, "TCustomMemo.WMNCDestroy", 0x20);
MakeComm(0x43387C, "'procedure TCustomMemo.WMNCDestroy(var Message:TWMNCDestroy);'");
MakeCode(0x43387C);
MakeFunction(0x43387C, 0x433882);
MakeUnkn(0x433884, 1);
MakeNameEx(0x433884, "TCustomMemo.KeyPress", 0x20);
MakeComm(0x433884, "'procedure TCustomMemo.KeyPress(var Key:Char);'");
MakeCode(0x433884);
MakeCode(0x4338A4);
MakeFunction(0x433884, 0x4338A7);
MakeUnkn(0x4338A8, 1);
MakeNameEx(0x4338A8, "TCustomComboBoxStrings.GetCount", 0x20);
MakeComm(0x4338A8, "'function TCustomComboBoxStrings.GetCount:Integer;'");
MakeCode(0x4338A8);
MakeFunction(0x4338A8, 0x4338C4);
MakeUnkn(0x4338C4, 1);
MakeNameEx(0x4338C4, "TCustomComboBoxStrings.GetObject", 0x20);
MakeComm(0x4338C4, "'function TCustomComboBoxStrings.GetObject(Index:Integer):TObject;'");
MakeCode(0x4338C4);
MakeCode(0x433915);
MakeCode(0x43392E);
MakeCode(0x43393B);
MakeCode(0x433944);
MakeCode(0x433949);
MakeFunction(0x4338C4, 0x433953);
MakeUnkn(0x433954, 1);
MakeNameEx(0x433954, "TCustomComboBoxStrings.PutObject", 0x20);
MakeComm(0x433954, "'procedure TCustomComboBoxStrings.PutObject(Index:Integer; AObject:TObject);'");
MakeCode(0x433954);
MakeFunction(0x433954, 0x433976);
MakeUnkn(0x433978, 1);
MakeNameEx(0x433978, "TCustomComboBoxStrings.Get", 0x20);
MakeComm(0x433978, "'function TCustomComboBoxStrings.Get(Index:Integer):AnsiString;'");
MakeCode(0x433978);
MakeCode(0x4339C6);
MakeCode(0x4339CF);
MakeFunction(0x433978, 0x4339D3);
MakeUnkn(0x4339D4, 1);
MakeNameEx(0x4339D4, "TCustomComboBoxStrings.Clear", 0x20);
MakeComm(0x4339D4, "'procedure TCustomComboBoxStrings.Clear;'");
MakeCode(0x4339D4);
MakeCode(0x433A22);
MakeCode(0x433A2F);
MakeCode(0x433A38);
MakeCode(0x433A3D);
MakeFunction(0x4339D4, 0x433A43);
MakeUnkn(0x433A44, 1);
MakeNameEx(0x433A44, "TCustomComboBoxStrings.Delete", 0x20);
MakeComm(0x433A44, "'procedure TCustomComboBoxStrings.Delete(Index:Integer);'");
MakeCode(0x433A44);
MakeFunction(0x433A44, 0x433A63);
MakeUnkn(0x433A64, 1);
MakeNameEx(0x433A64, "TCustomComboBoxStrings.IndexOf", 0x20);
MakeComm(0x433A64, "'function TCustomComboBoxStrings.IndexOf(const S:AnsiString):Integer;'");
MakeCode(0x433A64);
MakeFunction(0x433A64, 0x433A8A);
MakeUnkn(0x433A8C, 1);
MakeNameEx(0x433A8C, "TCustomComboBoxStrings.SetUpdateState", 0x20);
MakeComm(0x433A8C, "'procedure TCustomComboBoxStrings.SetUpdateState(Updating:Boolean);'");
MakeCode(0x433A8C);
MakeCode(0x433ABB);
MakeFunction(0x433A8C, 0x433ABE);
MakeUnkn(0x433AC0, 1);
MakeNameEx(0x433AC0, "TComboBoxStrings.Add", 0x20);
MakeComm(0x433AC0, "'function TComboBoxStrings.Add(const S:AnsiString):Integer;'");
MakeCode(0x433AC0);
MakeCode(0x433B1D);
MakeCode(0x433B2A);
MakeCode(0x433B33);
MakeCode(0x433B38);
MakeFunction(0x433AC0, 0x433B41);
MakeUnkn(0x433B44, 1);
MakeNameEx(0x433B44, "TComboBoxStrings.Insert", 0x20);
MakeComm(0x433B44, "'procedure TComboBoxStrings.Insert(Index:Integer; const S:AnsiString);'");
MakeCode(0x433B44);
MakeCode(0x433BA1);
MakeCode(0x433BAE);
MakeCode(0x433BB7);
MakeCode(0x433BBC);
MakeFunction(0x433B44, 0x433BC4);
MakeUnkn(0x433BC4, 1);
MakeNameEx(0x433BC4, "TCustomCombo.Create", 0x20);
MakeComm(0x433BC4, "'constructor TCustomCombo.Create(AOwner:TComponent);'");
MakeCode(0x433BC4);
MakeCode(0x433BD6);
MakeCode(0x433BF8);
MakeCode(0x433C00);
MakeCode(0x433CAC);
MakeFunction(0x433BC4, 0x433CB3);
MakeUnkn(0x433CBC, 1);
MakeNameEx(0x433CBC, "TCustomCombo.Destroy", 0x20);
MakeComm(0x433CBC, "'destructor TCustomCombo.Destroy;'");
MakeCode(0x433CBC);
MakeCode(0x433CDC);
MakeCode(0x433D14);
MakeFunction(0x433CBC, 0x433D17);
MakeUnkn(0x433D18, 1);
MakeNameEx(0x433D18, "TCustomCombo.Clear", 0x20);
MakeComm(0x433D18, "'procedure TCustomCombo.Clear;'");
MakeCode(0x433D18);
MakeFunction(0x433D18, 0x433D3E);
MakeUnkn(0x433D44, 1);
MakeNameEx(0x433D44, "TCustomCombo.DestroyWindowHandle", 0x20);
MakeComm(0x433D44, "'procedure TCustomCombo.DestroyWindowHandle;'");
MakeCode(0x433D44);
MakeFunction(0x433D44, 0x433D68);
MakeUnkn(0x433D68, 1);
MakeNameEx(0x433D68, "TCustomCombo.SelectAll", 0x20);
MakeComm(0x433D68, "'procedure TCustomCombo.SelectAll;'");
MakeCode(0x433D68);
MakeFunction(0x433D68, 0x433D86);
MakeUnkn(0x433D88, 1);
MakeNameEx(0x433D88, "TCustomCombo.GetDroppedDown", 0x20);
MakeComm(0x433D88, "'function TCustomCombo.GetDroppedDown:Boolean;'");
MakeCode(0x433D88);
MakeFunction(0x433D88, 0x433DA9);
MakeUnkn(0x433DAC, 1);
MakeNameEx(0x433DAC, "TCustomCombo.SetDroppedDown", 0x20);
MakeComm(0x433DAC, "'procedure TCustomCombo.SetDroppedDown(Value:Boolean);'");
MakeCode(0x433DAC);
MakeFunction(0x433DAC, 0x433DF0);
MakeUnkn(0x433DF0, 1);
MakeNameEx(0x433DF0, "TCustomCombo.GetItemIndex", 0x20);
MakeComm(0x433DF0, "'function TCustomCombo.GetItemIndex:Integer;'");
MakeCode(0x433DF0);
MakeCode(0x433E01);
MakeFunction(0x433DF0, 0x433E19);
MakeUnkn(0x433E1C, 1);
MakeNameEx(0x433E1C, "TCustomCombo.SetItemIndex", 0x20);
MakeComm(0x433E1C, "'procedure TCustomCombo.SetItemIndex(const Value:Integer);'");
MakeCode(0x433E1C);
MakeCode(0x433E31);
MakeCode(0x433E54);
MakeFunction(0x433E1C, 0x433E57);
MakeUnkn(0x433E58, 1);
MakeNameEx(0x433E58, "TCustomCombo.SetMaxLength", 0x20);
MakeComm(0x433E58, "'procedure TCustomCombo.SetMaxLength(Value:Integer);'");
MakeCode(0x433E58);
MakeCode(0x433E64);
MakeCode(0x433E92);
MakeFunction(0x433E58, 0x433E95);
MakeUnkn(0x433E98, 1);
MakeNameEx(0x433E98, "TCustomCombo.SetItemHeight", 0x20);
MakeComm(0x433E98, "'procedure TCustomCombo.SetItemHeight(Value:Integer);'");
MakeCode(0x433E98);
MakeFunction(0x433E98, 0x433EA8);
MakeUnkn(0x433EA8, 1);
MakeNameEx(0x433EA8, "TCustomCombo.WMCreate", 0x20);
MakeComm(0x433EA8, "'procedure TCustomCombo.WMCreate(var Message:TWMCreate);'");
MakeCode(0x433EA8);
MakeCode(0x433EC9);
MakeFunction(0x433EA8, 0x433ECB);
MakeUnkn(0x433ECC, 1);
MakeNameEx(0x433ECC, "TCustomCombo.WMDrawItem", 0x20);
MakeComm(0x433ECC, "'procedure TCustomCombo.WMDrawItem(var Message:TWMDrawItem);'");
MakeCode(0x433ECC);
MakeComm(0x433ECE, "'TWinControl.DefaultHandler'");
MakeFunction(0x433ECC, 0x433ED2);
MakeUnkn(0x433ED4, 1);
MakeNameEx(0x433ED4, "TCustomCombo.WMMeasureItem", 0x20);
MakeComm(0x433ED4, "'procedure TCustomCombo.WMMeasureItem(var Message:TWMMeasureItem);'");
MakeCode(0x433ED4);
MakeComm(0x433ED6, "'TWinControl.DefaultHandler'");
MakeFunction(0x433ED4, 0x433EDA);
MakeUnkn(0x433EDC, 1);
MakeNameEx(0x433EDC, "TCustomCombo.WMDeleteItem", 0x20);
MakeComm(0x433EDC, "'procedure TCustomCombo.WMDeleteItem(var Message:TWMDeleteItem);'");
MakeCode(0x433EDC);
MakeComm(0x433EDE, "'TWinControl.DefaultHandler'");
MakeFunction(0x433EDC, 0x433EE2);
MakeUnkn(0x433EE4, 1);
MakeNameEx(0x433EE4, "TCustomCombo.WMGetDlgCode", 0x20);
MakeComm(0x433EE4, "'procedure TCustomCombo.WMGetDlgCode(var Message:TWMGetDlgCode);'");
MakeCode(0x433EE4);
MakeCode(0x433F02);
MakeFunction(0x433EE4, 0x433F05);
MakeUnkn(0x433F08, 1);
MakeNameEx(0x433F08, "TCustomCombo.CMCancelMode", 0x20);
MakeComm(0x433F08, "'procedure TCustomCombo.CMCancelMode(var Message:TCMCancelMode);'");
MakeCode(0x433F08);
MakeFunction(0x433F08, 0x433F1C);
MakeUnkn(0x433F1C, 1);
MakeNameEx(0x433F1C, "TCustomCombo.CMCtl3DChanged", 0x20);
MakeComm(0x433F1C, "'procedure TCustomCombo.CMCtl3DChanged(var Message:TMessage);'");
MakeCode(0x433F1C);
MakeCode(0x433F33);
MakeFunction(0x433F1C, 0x433F3F);
MakeUnkn(0x433F40, 1);
MakeNameEx(0x433F40, "TCustomComboBox.CMParentColorChanged", 0x20);
MakeComm(0x433F40, "'procedure TCustomComboBox.CMParentColorChanged(var Message:TMessage);'");
MakeCode(0x433F40);
MakeCode(0x433F67);
MakeFunction(0x433F40, 0x433F69);
MakeUnkn(0x433F6C, 1);
MakeNameEx(0x433F6C, "TCustomCombo.EditWndProc", 0x20);
MakeComm(0x433F6C, "'procedure TCustomCombo.EditWndProc(var Message:TMessage);'");
MakeCode(0x433F6C);
MakeCode(0x433F8C);
MakeCode(0x433FC1);
MakeCode(0x433FFB);
MakeCode(0x434060);
MakeCode(0x434072);
MakeCode(0x434091);
MakeFunction(0x433F6C, 0x434098);
MakeUnkn(0x434098, 1);
MakeNameEx(0x434098, "TCustomCombo.ListWndProc", 0x20);
MakeComm(0x434098, "'procedure TCustomCombo.ListWndProc(var Message:TMessage);'");
MakeCode(0x434098);
MakeFunction(0x434098, 0x4340B6);
MakeUnkn(0x4340B8, 1);
MakeNameEx(0x4340B8, "TCustomComboBox.SetCharCase", 0x20);
MakeComm(0x4340B8, "'procedure TCustomComboBox.SetCharCase(Value:TEditCharCase);'");
MakeCode(0x4340B8);
MakeFunction(0x4340B8, 0x4340CC);
MakeUnkn(0x4340CC, 1);
MakeNameEx(0x4340CC, "TCustomCombo.ComboWndProc", 0x20);
MakeComm(0x4340CC, "'procedure TCustomCombo.ComboWndProc(var Message:TMessage; ComboWnd:HWND; ComboProc:Pointer);'");
MakeCode(0x4340CC);
MakeCode(0x434124);
MakeCode(0x434142);
MakeCode(0x434173);
MakeCode(0x434195);
MakeCode(0x4341BE);
MakeCode(0x4341CB);
MakeCode(0x4341D8);
MakeCode(0x4341E5);
MakeCode(0x434206);
MakeCode(0x434213);
MakeCode(0x434221);
MakeCode(0x43422E);
MakeCode(0x434242);
MakeCode(0x43425C);
MakeCode(0x434269);
MakeCode(0x43427B);
MakeCode(0x434288);
MakeCode(0x43429E);
MakeCode(0x4342EB);
MakeCode(0x4342F8);
MakeCode(0x43430B);
MakeCode(0x434318);
MakeCode(0x434328);
MakeCode(0x434332);
MakeCode(0x43433C);
MakeCode(0x434346);
MakeCode(0x43437B);
MakeCode(0x434385);
MakeCode(0x43439E);
MakeFunction(0x4340CC, 0x4343A7);
MakeUnkn(0x4343A8, 1);
MakeNameEx(0x4343A8, "TCustomCombo.WndProc", 0x20);
MakeComm(0x4343A8, "'procedure TCustomCombo.WndProc(var Message:TMessage);'");
MakeCode(0x4343A8);
MakeCode(0x4343C7);
MakeCode(0x434406);
MakeCode(0x434421);
MakeCode(0x434435);
MakeCode(0x434474);
MakeCode(0x434491);
MakeCode(0x4344A7);
MakeCode(0x4344B0);
MakeFunction(0x4343A8, 0x4344B4);
MakeUnkn(0x4344B8, 1);
MakeNameEx(0x4344B8, "TCustomCombo.CNCommand", 0x20);
MakeComm(0x4344B8, "'procedure TCustomCombo.CNCommand(var Message:TWMCommand);'");
MakeCode(0x4344B8);
MakeCode(0x434508);
MakeCode(0x434518);
MakeCode(0x434528);
MakeCode(0x43458C);
MakeCode(0x4345D5);
MakeCode(0x4345E2);
MakeCode(0x4345F9);
MakeCode(0x43460E);
MakeCode(0x43461B);
MakeCode(0x434624);
MakeCode(0x434629);
MakeFunction(0x4344B8, 0x434631);
MakeUnkn(0x434634, 1);
MakeNameEx(0x434634, "TCustomEdit.Change", 0x20);
MakeComm(0x434634, "'procedure TCustomEdit.Change;'");
MakeCode(0x434634);
MakeCode(0x434656);
MakeFunction(0x434634, 0x434658);
MakeUnkn(0x434658, 1);
MakeNameEx(0x434658, "TCustomComboBox.DrawItem", 0x20);
MakeComm(0x434658, "'procedure TCustomComboBox.DrawItem(Index:Integer; Rect:TRect; State:TOwnerDrawState);'");
MakeCode(0x434658);
MakeCode(0x4346B1);
MakeCode(0x4346EB);
MakeCode(0x4346F8);
MakeCode(0x434701);
MakeCode(0x434706);
MakeFunction(0x434658, 0x434711);
MakeUnkn(0x434714, 1);
MakeNameEx(0x434714, "TCustomCombo.DropDown", 0x20);
MakeComm(0x434714, "'procedure TCustomCombo.DropDown;'");
MakeCode(0x434714);
MakeCode(0x43472F);
MakeFunction(0x434714, 0x434731);
MakeUnkn(0x434734, 1);
MakeNameEx(0x434734, "TCustomCombo.Loaded", 0x20);
MakeComm(0x434734, "'procedure TCustomCombo.Loaded;'");
MakeCode(0x434734);
MakeCode(0x434756);
MakeFunction(0x434734, 0x434759);
MakeUnkn(0x43475C, 1);
MakeNameEx(0x43475C, "TCustomCombo.Focused", 0x20);
MakeComm(0x43475C, "'procedure TCustomCombo.Focused;'");
MakeCode(0x43475C);
MakeCode(0x434794);
MakeCode(0x434796);
MakeFunction(0x43475C, 0x43479C);
MakeUnkn(0x43479C, 1);
MakeNameEx(0x43479C, "TCustomCombo.CloseUp", 0x20);
MakeComm(0x43479C, "'procedure TCustomCombo.CloseUp;'");
MakeCode(0x43479C);
MakeCode(0x4347B7);
MakeFunction(0x43479C, 0x4347B9);
MakeUnkn(0x4347BC, 1);
MakeNameEx(0x4347BC, "TCustomCombo.Select", 0x20);
MakeComm(0x4347BC, "'procedure TCustomCombo.Select;'");
MakeCode(0x4347BC);
MakeCode(0x4347DB);
MakeFunction(0x4347BC, 0x4347E7);
MakeUnkn(0x4347E8, 1);
MakeNameEx(0x4347E8, "TCustomCombo.CreateWnd", 0x20);
MakeComm(0x4347E8, "'procedure TCustomCombo.CreateWnd;'");
MakeCode(0x4347E8);
MakeFunction(0x4347E8, 0x43481F);
MakeUnkn(0x434820, 1);
MakeNameEx(0x434820, "TCustomCombo.AdjustDropDown", 0x20);
MakeComm(0x434820, "'procedure TCustomCombo.AdjustDropDown;'");
MakeCode(0x434820);
MakeCode(0x434844);
MakeCode(0x43484E);
MakeCode(0x43489E);
MakeCode(0x4348AB);
MakeCode(0x4348B6);
MakeCode(0x4348BB);
MakeFunction(0x434820, 0x4348DC);
MakeUnkn(0x4348DC, 1);
MakeNameEx(0x4348DC, "TCustomCombo.SetItems", 0x20);
MakeComm(0x4348DC, "'procedure TCustomCombo.SetItems(const Value:TStrings);'");
MakeCode(0x4348DC);
MakeCode(0x4348F4);
MakeFunction(0x4348DC, 0x4348FD);
MakeUnkn(0x434900, 1);
MakeNameEx(0x434900, "TCustomCombo.ClearSelection", 0x20);
MakeComm(0x434900, "'procedure TCustomCombo.ClearSelection;'");
MakeCode(0x434900);
MakeFunction(0x434900, 0x43490C);
MakeUnkn(0x43490C, 1);
MakeNameEx(0x43490C, "TCustomCombo.CopySelection", 0x20);
MakeComm(0x43490C, "'procedure TCustomCombo.CopySelection(Destination:TCustomListControl);'");
MakeCode(0x43490C);
MakeCode(0x434975);
MakeCode(0x434982);
MakeCode(0x43498B);
MakeCode(0x434990);
MakeFunction(0x43490C, 0x434998);
MakeUnkn(0x434998, 1);
MakeNameEx(0x434998, "TCustomCombo.DeleteSelected", 0x20);
MakeComm(0x434998, "'procedure TCustomCombo.DeleteSelected;'");
MakeCode(0x434998);
MakeCode(0x4349BF);
MakeFunction(0x434998, 0x4349C1);
MakeUnkn(0x4349C4, 1);
MakeNameEx(0x4349C4, "TCustomCombo.GetCount", 0x20);
MakeComm(0x4349C4, "'function TCustomCombo.GetCount:Integer;'");
MakeCode(0x4349C4);
MakeFunction(0x4349C4, 0x4349CD);
MakeUnkn(0x4349D0, 1);
MakeNameEx(0x4349D0, "TComboBox.SetDropDownCount", 0x20);
MakeComm(0x4349D0, "'procedure TComboBox.SetDropDownCount(Value:Integer);'");
MakeCode(0x4349D0);
MakeComm(0x4349D0, "'TComboBox.FDropDownCount:Integer'");
MakeFunction(0x4349D0, 0x4349D7);
MakeUnkn(0x4349D8, 1);
MakeNameEx(0x4349D8, "TCustomCombo.AddItem", 0x20);
MakeComm(0x4349D8, "'procedure TCustomCombo.AddItem(Item:AnsiString; AObject:TObject);'");
MakeCode(0x4349D8);
MakeCode(0x434A0B);
MakeCode(0x434A18);
MakeCode(0x434A21);
MakeCode(0x434A26);
MakeFunction(0x4349D8, 0x434A2D);
MakeUnkn(0x434A30, 1);
MakeNameEx(0x434A30, "TCustomComboBox.Create", 0x20);
MakeComm(0x434A30, "'constructor TCustomComboBox.Create(AOwner:TComponent);'");
MakeCode(0x434A30);
MakeCode(0x434A42);
MakeCode(0x434AB4);
MakeFunction(0x434A30, 0x434ABB);
MakeUnkn(0x434ABC, 1);
MakeNameEx(0x434ABC, "TCustomComboBox.Destroy", 0x20);
MakeComm(0x434ABC, "'destructor TCustomComboBox.Destroy;'");
MakeCode(0x434ABC);
MakeCode(0x434AF4);
MakeFunction(0x434ABC, 0x434AF7);
MakeUnkn(0x434AF8, 1);
MakeNameEx(0x434AF8, "TCustomComboBox.SetSorted", 0x20);
MakeComm(0x434AF8, "'procedure TCustomComboBox.SetSorted(Value:Boolean);'");
MakeCode(0x434AF8);
MakeFunction(0x434AF8, 0x434B0C);
MakeUnkn(0x434B0C, 1);
MakeNameEx(0x434B0C, "TCustomComboBox.SetStyle", 0x20);
MakeComm(0x434B0C, "'procedure TCustomComboBox.SetStyle(Value:TComboBoxStyle);'");
MakeCode(0x434B0C);
MakeCode(0x434B31);
MakeCode(0x434B3C);
MakeCode(0x434B43);
MakeFunction(0x434B0C, 0x434B45);
MakeUnkn(0x434B4C, 1);
MakeNameEx(0x434B4C, "TCustomComboBox.GetItemHt", 0x20);
MakeComm(0x434B4C, "'function TCustomComboBox.GetItemHt:Integer;'");
MakeCode(0x434B4C);
MakeCode(0x434B62);
MakeFunction(0x434B4C, 0x434B71);
MakeUnkn(0x434B74, 1);
MakeNameEx(0x434B74, "TCustomComboBox.CreateParams", 0x20);
MakeComm(0x434B74, "'procedure TCustomComboBox.CreateParams(var Params:TCreateParams);'");
MakeCode(0x434B74);
MakeFunction(0x434B74, 0x434BC9);
MakeUnkn(0x434BD8, 1);
MakeNameEx(0x434BD8, "TCustomComboBox.CreateWnd", 0x20);
MakeComm(0x434BD8, "'procedure TCustomComboBox.CreateWnd;'");
MakeCode(0x434BD8);
MakeCode(0x434C48);
MakeCode(0x434C63);
MakeCode(0x434CC1);
MakeCode(0x434CEC);
MakeCode(0x434D14);
MakeFunction(0x434BD8, 0x434D18);
MakeUnkn(0x434D18, 1);
MakeNameEx(0x434D18, "TCustomComboBox.DestroyWnd", 0x20);
MakeComm(0x434D18, "'procedure TCustomComboBox.DestroyWnd;'");
MakeCode(0x434D18);
MakeCode(0x434D62);
MakeFunction(0x434D18, 0x434D6C);
MakeUnkn(0x434D6C, 1);
MakeNameEx(0x434D6C, "TCustomComboBox.WMEraseBkgnd", 0x20);
MakeComm(0x434D6C, "'procedure TCustomComboBox.WMEraseBkgnd(var Message:TWMEraseBkgnd);'");
MakeCode(0x434D6C);
MakeCode(0x434DAF);
MakeCode(0x434DB8);
MakeFunction(0x434D6C, 0x434DBE);
MakeUnkn(0x434DC0, 1);
MakeNameEx(0x434DC0, "HasSelectedText", 0x20);
MakeComm(0x434DC0, "'function HasSelectedText(var StartPos:DWORD; var EndPos:DWORD):Boolean;'");
MakeCode(0x434DC0);
MakeCode(0x434DFB);
MakeCode(0x434DFD);
MakeFunction(0x434DC0, 0x434E01);
MakeUnkn(0x434E04, 1);
MakeNameEx(0x434E04, "DeleteSelectedText", 0x20);
MakeComm(0x434E04, "'procedure DeleteSelectedText;'");
MakeCode(0x434E04);
MakeCode(0x434EA8);
MakeCode(0x434EB5);
MakeCode(0x434EBE);
MakeCode(0x434EC3);
MakeFunction(0x434E04, 0x434ECA);
MakeUnkn(0x434ECC, 1);
MakeNameEx(0x434ECC, "TCustomComboBox.KeyPress", 0x20);
MakeComm(0x434ECC, "'procedure TCustomComboBox.KeyPress(var Key:Char);'");
MakeCode(0x434ECC);
MakeCode(0x434ED4);
MakeCode(0x434F37);
MakeCode(0x434F5D);
MakeCode(0x434F6B);
MakeCode(0x434F83);
MakeCode(0x434FB2);
MakeCode(0x434FCF);
MakeCode(0x434FFA);
MakeCode(0x435001);
MakeCode(0x435003);
MakeCode(0x43501B);
MakeCode(0x43501C);
MakeCode(0x4350C3);
MakeCode(0x4350D5);
MakeCode(0x4350E9);
MakeCode(0x43511D);
MakeCode(0x435131);
MakeCode(0x435145);
MakeCode(0x435167);
MakeCode(0x4351AF);
MakeCode(0x4351CE);
MakeCode(0x43524A);
MakeCode(0x43525C);
MakeCode(0x435269);
MakeCode(0x4352A6);
MakeCode(0x4352AB);
MakeFunction(0x434ECC, 0x4352B4);
MakeUnkn(0x4352B4, 1);
MakeNameEx(0x4352B4, "TCustomComboBox.SelectItem", 0x20);
MakeComm(0x4352B4, "'function TCustomComboBox.SelectItem(const AnItem:AnsiString):Boolean;'");
MakeCode(0x4352B4);
MakeCode(0x4352E8);
MakeCode(0x43530D);
MakeCode(0x43537E);
MakeCode(0x4353B9);
MakeCode(0x4353FF);
MakeCode(0x43541B);
MakeCode(0x43543D);
MakeCode(0x435457);
MakeCode(0x435473);
MakeCode(0x435480);
MakeCode(0x435496);
MakeCode(0x43549B);
MakeFunction(0x4352B4, 0x4354A8);
MakeUnkn(0x4354A8, 1);
MakeNameEx(0x4354A8, "TCustomComboBox.MeasureItem", 0x20);
MakeComm(0x4354A8, "'procedure TCustomComboBox.MeasureItem(Index:Integer; var Height:Integer);'");
MakeCode(0x4354A8);
MakeCode(0x4354C6);
MakeFunction(0x4354A8, 0x4354C8);
MakeUnkn(0x4354C8, 1);
MakeNameEx(0x4354C8, "TCustomComboBox.CNDrawItem", 0x20);
MakeComm(0x4354C8, "'procedure TCustomComboBox.CNDrawItem(var Message:TWMDrawItem);'");
MakeCode(0x4354C8);
MakeCode(0x4354E5);
MakeCode(0x4354F1);
MakeCode(0x435551);
MakeCode(0x43556A);
MakeCode(0x435578);
MakeCode(0x43558C);
MakeFunction(0x4354C8, 0x43559E);
MakeUnkn(0x4355A0, 1);
MakeNameEx(0x4355A0, "TCustomComboBox.CNMeasureItem", 0x20);
MakeComm(0x4355A0, "'procedure TCustomComboBox.CNMeasureItem(var Message:TWMMeasureItem);'");
MakeCode(0x4355A0);
MakeCode(0x4355C9);
MakeFunction(0x4355A0, 0x4355CC);
MakeUnkn(0x4355CC, 1);
MakeNameEx(0x4355CC, "TCustomComboBox.WMLButtonDown", 0x20);
MakeComm(0x4355CC, "'procedure TCustomComboBox.WMLButtonDown(var Message:TWMLButtonDown);'");
MakeCode(0x4355CC);
MakeCode(0x43560E);
MakeCode(0x435640);
MakeFunction(0x4355CC, 0x435643);
MakeUnkn(0x435644, 1);
MakeNameEx(0x435644, "TCustomComboBox.WndProc", 0x20);
MakeComm(0x435644, "'procedure TCustomComboBox.WndProc(var Message:TMessage);'");
MakeCode(0x435644);
MakeCode(0x43567D);
MakeFunction(0x435644, 0x435689);
MakeUnkn(0x43568C, 1);
MakeNameEx(0x43568C, "TCustomComboBox.GetItemCount", 0x20);
MakeComm(0x43568C, "'function TCustomComboBox.GetItemCount:Integer;'");
MakeCode(0x43568C);
MakeFunction(0x43568C, 0x435698);
MakeUnkn(0x435698, 1);
MakeNameEx(0x435698, "TComboBoxStrings.Create", 0x20);
MakeComm(0x435698, "'constructor TComboBoxStrings.Create;'");
MakeCode(0x435698);
MakeFunction(0x435698, 0x43569E);
MakeUnkn(0x4356A0, 1);
MakeNameEx(0x4356A0, "TCustomComboBox.WMPaint", 0x20);
MakeComm(0x4356A0, "'procedure TCustomComboBox.WMPaint(var Message:TWMPaint);'");
MakeCode(0x4356A0);
MakeCode(0x43573F);
MakeCode(0x43574E);
MakeCode(0x43578D);
MakeCode(0x4357BF);
MakeCode(0x4357CB);
MakeCode(0x4357D7);
MakeCode(0x4357E9);
MakeCode(0x4357F5);
MakeCode(0x435807);
MakeCode(0x43589D);
MakeCode(0x4358B6);
MakeCode(0x4358C3);
MakeCode(0x4358CC);
MakeCode(0x4358D1);
MakeCode(0x4358D3);
MakeFunction(0x4356A0, 0x4358DA);
MakeUnkn(0x4358DC, 1);
MakeNameEx(0x4358DC, "TButtonActionLink.AssignClient", 0x20);
MakeComm(0x4358DC, "'procedure TButtonActionLink.AssignClient(AClient:TObject);'");
MakeCode(0x4358DC);
MakeFunction(0x4358DC, 0x4358FE);
MakeUnkn(0x435900, 1);
MakeNameEx(0x435900, "TButtonActionLink.IsCheckedLinked", 0x20);
MakeComm(0x435900, "'function TButtonActionLink.IsCheckedLinked:Boolean;'");
MakeCode(0x435900);
MakeCode(0x43592E);
MakeCode(0x435932);
MakeFunction(0x435900, 0x435936);
MakeUnkn(0x435938, 1);
MakeNameEx(0x435938, "TButtonActionLink.SetChecked", 0x20);
MakeComm(0x435938, "'procedure TButtonActionLink.SetChecked(Value:Boolean);'");
MakeCode(0x435938);
MakeCode(0x435973);
MakeCode(0x435980);
MakeCode(0x43598E);
MakeCode(0x435993);
MakeCode(0x435995);
MakeFunction(0x435938, 0x435999);
MakeUnkn(0x43599C, 1);
MakeNameEx(0x43599C, "TButtonControl.Create", 0x20);
MakeComm(0x43599C, "'constructor TButtonControl.Create(AOwner:TComponent);'");
MakeCode(0x43599C);
MakeCode(0x4359AA);
MakeCode(0x4359D3);
MakeCode(0x4359E8);
MakeFunction(0x43599C, 0x4359ED);
MakeUnkn(0x4359F0, 1);
MakeNameEx(0x4359F0, "TButtonControl.ActionChange", 0x20);
MakeComm(0x4359F0, "'procedure TButtonControl.ActionChange(Sender:TObject; CheckDefaults:Boolean);'");
MakeCode(0x4359F0);
MakeCode(0x435A27);
MakeCode(0x435A35);
MakeFunction(0x4359F0, 0x435A39);
MakeUnkn(0x435A3C, 1);
MakeNameEx(0x435A3C, "TButtonControl.sub_00435A3C", 0x20);
MakeComm(0x435A3C, "'procedure TButtonControl.sub_00435A3C;'");
MakeCode(0x435A3C);
MakeFunction(0x435A3C, 0x435A42);
MakeCode(0x435A44);
MakeFunction(0x435A44, 0x435A47);
MakeUnkn(0x435A48, 1);
MakeNameEx(0x435A48, "TButtonControl.IsCheckedStored", 0x20);
MakeComm(0x435A48, "'function TButtonControl.IsCheckedStored(Value:Boolean):Boolean;'");
MakeCode(0x435A48);
MakeCode(0x435A63);
MakeFunction(0x435A48, 0x435A68);
MakeCode(0x435A68);
MakeFunction(0x435A68, 0x435A69);
MakeUnkn(0x435A6C, 1);
MakeNameEx(0x435A6C, "TButtonControl.WndProc", 0x20);
MakeComm(0x435A6C, "'procedure TButtonControl.WndProc(var Message:TMessage);'");
MakeCode(0x435A6C);
MakeCode(0x435A8A);
MakeCode(0x435ACB);
MakeCode(0x435AD4);
MakeCode(0x435ADD);
MakeFunction(0x435A6C, 0x435AE1);
MakeUnkn(0x435AE4, 1);
MakeNameEx(0x435AE4, "TButton.CNCtlColorBtn", 0x20);
MakeComm(0x435AE4, "'procedure TButton.CNCtlColorBtn(var Message:TWMCtlColorBtn);'");
MakeCode(0x435AE4);
MakeCode(0x435B15);
MakeCode(0x435B2E);
MakeCode(0x435B3A);
MakeCode(0x435B43);
MakeFunction(0x435AE4, 0x435B47);
MakeUnkn(0x435B48, 1);
MakeNameEx(0x435B48, "TButtonControl.WMEraseBkGnd", 0x20);
MakeComm(0x435B48, "'procedure TButtonControl.WMEraseBkGnd(var Message:TWMEraseBkgnd);'");
MakeCode(0x435B48);
MakeCode(0x435B66);
MakeFunction(0x435B48, 0x435B72);
MakeUnkn(0x435B74, 1);
MakeNameEx(0x435B74, "TButtonControl.CreateParams", 0x20);
MakeComm(0x435B74, "'procedure TButtonControl.CreateParams(var Params:TCreateParams);'");
MakeCode(0x435B74);
MakeCode(0x435B93);
MakeFunction(0x435B74, 0x435B96);
MakeUnkn(0x435B98, 1);
MakeNameEx(0x435B98, "TButtonControl.SetWordWrap", 0x20);
MakeComm(0x435B98, "'procedure TButtonControl.SetWordWrap(const Value:Boolean);'");
MakeCode(0x435B98);
MakeFunction(0x435B98, 0x435BAC);
MakeUnkn(0x435BAC, 1);
MakeNameEx(0x435BAC, "TButton.Create", 0x20);
MakeComm(0x435BAC, "'constructor TButton.Create(AOwner:TComponent);'");
MakeCode(0x435BAC);
MakeCode(0x435BBA);
MakeCode(0x435C05);
MakeFunction(0x435BAC, 0x435C0A);
MakeUnkn(0x435C10, 1);
MakeNameEx(0x435C10, "TButton.Click", 0x20);
MakeComm(0x435C10, "'procedure TButton.Click;'");
MakeCode(0x435C10);
MakeCode(0x435C2C);
MakeFunction(0x435C10, 0x435C35);
MakeUnkn(0x435C38, 1);
MakeNameEx(0x435C38, "TButton.UseRightToLeftAlignment", 0x20);
MakeComm(0x435C38, "'procedure TButton.UseRightToLeftAlignment;'");
MakeCode(0x435C38);
MakeFunction(0x435C38, 0x435C3B);
MakeUnkn(0x435C3C, 1);
MakeNameEx(0x435C3C, "TButton.SetButtonStyle", 0x20);
MakeComm(0x435C3C, "'procedure TButton.SetButtonStyle(ADefault:Boolean);'");
MakeCode(0x435C3C);
MakeCode(0x435C59);
MakeCode(0x435C5B);
MakeCode(0x435C89);
MakeFunction(0x435C3C, 0x435C8E);
MakeUnkn(0x435C90, 1);
MakeNameEx(0x435C90, "TButton.SetDefault", 0x20);
MakeComm(0x435C90, "'procedure TButton.SetDefault(Value:Boolean);'");
MakeCode(0x435C90);
MakeCode(0x435CC4);
MakeFunction(0x435C90, 0x435CC6);
MakeUnkn(0x435CC8, 1);
MakeNameEx(0x435CC8, "TButton.CreateParams", 0x20);
MakeComm(0x435CC8, "'procedure TButton.CreateParams(var Params:TCreateParams);'");
MakeCode(0x435CC8);
MakeFunction(0x435CC8, 0x435CF9);
MakeUnkn(0x435D04, 1);
MakeNameEx(0x435D04, "TButton.CreateWnd", 0x20);
MakeComm(0x435D04, "'procedure TButton.CreateWnd;'");
MakeCode(0x435D04);
MakeFunction(0x435D04, 0x435D1D);
MakeUnkn(0x435D20, 1);
MakeNameEx(0x435D20, "TButton.CNCommand", 0x20);
MakeComm(0x435D20, "'procedure TButton.CNCommand(var Message:TWMCommand);'");
MakeCode(0x435D20);
MakeCode(0x435D31);
MakeFunction(0x435D20, 0x435D33);
MakeUnkn(0x435D34, 1);
MakeNameEx(0x435D34, "TButton.CMDialogKey", 0x20);
MakeComm(0x435D34, "'procedure TButton.CMDialogKey(var Message:TCMDialogKey);'");
MakeCode(0x435D34);
MakeCode(0x435D4B);
MakeCode(0x435D5B);
MakeCode(0x435D91);
MakeCode(0x435D9A);
MakeFunction(0x435D34, 0x435D9E);
MakeUnkn(0x435DA4, 1);
MakeNameEx(0x435DA4, "TButton.CMDialogChar", 0x20);
MakeComm(0x435DA4, "'procedure TButton.CMDialogChar(var Message:TCMDialogChar);'");
MakeCode(0x435DA4);
MakeCode(0x435DFB);
MakeCode(0x435E04);
MakeCode(0x435E11);
MakeCode(0x435E1A);
MakeCode(0x435E1F);
MakeFunction(0x435DA4, 0x435E27);
MakeUnkn(0x435E28, 1);
MakeNameEx(0x435E28, "TButton.CMFocusChanged", 0x20);
MakeComm(0x435E28, "'procedure TButton.CMFocusChanged(var Message:TCMFocusChanged);'");
MakeCode(0x435E28);
MakeCode(0x435E50);
MakeCode(0x435E5D);
MakeFunction(0x435E28, 0x435E7B);
MakeUnkn(0x435E7C, 1);
MakeNameEx(0x435E7C, "TButton.WMEraseBkgnd", 0x20);
MakeComm(0x435E7C, "'procedure TButton.WMEraseBkgnd(var Message:TWMEraseBkgnd);'");
MakeCode(0x435E7C);
MakeCode(0x435E9A);
MakeFunction(0x435E7C, 0x435EA6);
MakeUnkn(0x435EA8, 1);
MakeNameEx(0x435EA8, "TButtonControl.CNCtlColorStatic", 0x20);
MakeComm(0x435EA8, "'procedure TButtonControl.CNCtlColorStatic(var Message:TWMCtlColorStatic);'");
MakeCode(0x435EA8);
MakeCode(0x435ED9);
MakeCode(0x435EF2);
MakeCode(0x435EFE);
MakeCode(0x435F07);
MakeFunction(0x435EA8, 0x435F0B);
MakeUnkn(0x435F0C, 1);
MakeNameEx(0x435F0C, "TCustomCheckBox.Create", 0x20);
MakeComm(0x435F0C, "'constructor TCustomCheckBox.Create(AOwner:TComponent);'");
MakeCode(0x435F0C);
MakeCode(0x435F1A);
MakeCode(0x435F6C);
MakeFunction(0x435F0C, 0x435F71);
MakeUnkn(0x435F78, 1);
MakeNameEx(0x435F78, "TCustomCheckBox.GetControlsAlignment", 0x20);
MakeComm(0x435F78, "'procedure TCustomCheckBox.GetControlsAlignment;'");
MakeCode(0x435F78);
MakeCode(0x435F90);
MakeCode(0x435F9D);
MakeCode(0x435F9F);
MakeFunction(0x435F78, 0x435FA2);
MakeUnkn(0x435FA4, 1);
MakeNameEx(0x435FA4, "TCustomCheckBox.Toggle", 0x20);
MakeComm(0x435FA4, "'procedure TCustomCheckBox.Toggle;'");
MakeCode(0x435FA4);
MakeCode(0x435FB8);
MakeCode(0x435FCA);
MakeCode(0x435FD2);
MakeCode(0x435FDA);
MakeFunction(0x435FA4, 0x435FE2);
MakeUnkn(0x435FE4, 1);
MakeNameEx(0x435FE4, "TCustomCheckBox.Click", 0x20);
MakeComm(0x435FE4, "'procedure TCustomCheckBox.Click;'");
MakeCode(0x435FE4);
MakeFunction(0x435FE4, 0x435FF7);
MakeUnkn(0x435FF8, 1);
MakeNameEx(0x435FF8, "TCustomCheckBox.GetChecked", 0x20);
MakeComm(0x435FF8, "'function TCustomCheckBox.GetChecked:Boolean;'");
MakeCode(0x435FF8);
MakeFunction(0x435FF8, 0x436003);
MakeUnkn(0x436004, 1);
MakeNameEx(0x436004, "TCustomCheckBox.SetAlignment", 0x20);
MakeComm(0x436004, "'procedure TCustomCheckBox.SetAlignment(Value:TLeftRight);'");
MakeCode(0x436004);
MakeFunction(0x436004, 0x436018);
MakeUnkn(0x436018, 1);
MakeNameEx(0x436018, "TCustomCheckBox.SetChecked", 0x20);
MakeComm(0x436018, "'procedure TCustomCheckBox.SetChecked(Value:Boolean);'");
MakeCode(0x436018);
MakeCode(0x436024);
MakeFunction(0x436018, 0x43602C);
MakeUnkn(0x43602C, 1);
MakeNameEx(0x43602C, "TCustomCheckBox.SetState", 0x20);
MakeComm(0x43602C, "'procedure TCustomCheckBox.SetState(Value:TCheckBoxState);'");
MakeCode(0x43602C);
MakeCode(0x436065);
MakeCode(0x436079);
MakeFunction(0x43602C, 0x43607C);
MakeUnkn(0x43607C, 1);
MakeNameEx(0x43607C, "TCustomCheckBox.CreateParams", 0x20);
MakeComm(0x43607C, "'procedure TCustomCheckBox.CreateParams(var Params:TCreateParams);'");
MakeCode(0x43607C);
MakeFunction(0x43607C, 0x4360CC);
MakeUnkn(0x4360D4, 1);
MakeNameEx(0x4360D4, "TCustomCheckBox.CreateWnd", 0x20);
MakeComm(0x4360D4, "'procedure TCustomCheckBox.CreateWnd;'");
MakeCode(0x4360D4);
MakeFunction(0x4360D4, 0x4360FC);
MakeUnkn(0x4360FC, 1);
MakeNameEx(0x4360FC, "TCustomCheckBox.WMSize", 0x20);
MakeComm(0x4360FC, "'procedure TCustomCheckBox.WMSize(var Message:TMessage);'");
MakeCode(0x4360FC);
MakeFunction(0x4360FC, 0x436112);
MakeUnkn(0x436114, 1);
MakeNameEx(0x436114, "TCustomCheckBox.CMCtl3DChanged", 0x20);
MakeComm(0x436114, "'procedure TCustomCheckBox.CMCtl3DChanged(var Message:TMessage);'");
MakeCode(0x436114);
MakeFunction(0x436114, 0x43611A);
MakeUnkn(0x43611C, 1);
MakeNameEx(0x43611C, "TCustomCheckBox.CMDialogChar", 0x20);
MakeComm(0x43611C, "'procedure TCustomCheckBox.CMDialogChar(var Message:TCMDialogChar);'");
MakeCode(0x43611C);
MakeCode(0x436182);
MakeCode(0x43618B);
MakeCode(0x436194);
MakeCode(0x4361A1);
MakeCode(0x4361AA);
MakeCode(0x4361AF);
MakeFunction(0x43611C, 0x4361B7);
MakeUnkn(0x4361B8, 1);
MakeNameEx(0x4361B8, "TCustomCheckBox.CNCommand", 0x20);
MakeComm(0x4361B8, "'procedure TCustomCheckBox.CNCommand(var Message:TWMCommand);'");
MakeCode(0x4361B8);
MakeFunction(0x4361B8, 0x4361C8);
MakeUnkn(0x4361C8, 1);
MakeNameEx(0x4361C8, "TRadioButton.Create", 0x20);
MakeComm(0x4361C8, "'constructor TRadioButton.Create(AOwner:TComponent);'");
MakeCode(0x4361C8);
MakeCode(0x4361D6);
MakeCode(0x43621F);
MakeFunction(0x4361C8, 0x436224);
MakeUnkn(0x436228, 1);
MakeNameEx(0x436228, "TRadioButton.GetChecked", 0x20);
MakeComm(0x436228, "'function TRadioButton.GetChecked:Boolean;'");
MakeCode(0x436228);
MakeFunction(0x436228, 0x436230);
MakeUnkn(0x436230, 1);
MakeNameEx(0x436230, "TRadioButton.GetControlsAlignment", 0x20);
MakeComm(0x436230, "'procedure TRadioButton.GetControlsAlignment;'");
MakeCode(0x436230);
MakeCode(0x436248);
MakeCode(0x436255);
MakeCode(0x436257);
MakeFunction(0x436230, 0x43625A);
MakeUnkn(0x43625C, 1);
MakeNameEx(0x43625C, "TCustomStaticText.SetShowAccelChar", 0x20);
MakeComm(0x43625C, "'procedure TCustomStaticText.SetShowAccelChar(Value:Boolean);'");
MakeCode(0x43625C);
MakeFunction(0x43625C, 0x436270);
MakeUnkn(0x436270, 1);
MakeNameEx(0x436270, "TurnSiblingsOff", 0x20);
MakeComm(0x436270, "'procedure TurnSiblingsOff;'");
MakeCode(0x436270);
MakeCode(0x4362AB);
MakeCode(0x436312);
MakeCode(0x43631E);
MakeCode(0x436324);
MakeFunction(0x436270, 0x43632B);
MakeUnkn(0x43632C, 1);
MakeNameEx(0x43632C, "TRadioButton.SetChecked", 0x20);
MakeComm(0x43632C, "'procedure TRadioButton.SetChecked(Value:Boolean);'");
MakeCode(0x43632C);
MakeCode(0x436385);
MakeCode(0x4363B0);
MakeFunction(0x43632C, 0x4363B5);
MakeUnkn(0x4363B8, 1);
MakeNameEx(0x4363B8, "TRadioButton.CreateParams", 0x20);
MakeComm(0x4363B8, "'procedure TRadioButton.CreateParams(var Params:TCreateParams);'");
MakeCode(0x4363B8);
MakeFunction(0x4363B8, 0x436404);
MakeUnkn(0x43640C, 1);
MakeNameEx(0x43640C, "TRadioButton.CreateWnd", 0x20);
MakeComm(0x43640C, "'procedure TRadioButton.CreateWnd;'");
MakeCode(0x43640C);
MakeFunction(0x43640C, 0x436434);
MakeUnkn(0x436434, 1);
MakeNameEx(0x436434, "TRadioButton.CMCtl3DChanged", 0x20);
MakeComm(0x436434, "'procedure TRadioButton.CMCtl3DChanged(var Message:TMessage);'");
MakeCode(0x436434);
MakeFunction(0x436434, 0x43643A);
MakeUnkn(0x43643C, 1);
MakeNameEx(0x43643C, "TRadioButton.CMDialogChar", 0x20);
MakeComm(0x43643C, "'procedure TRadioButton.CMDialogChar(var Message:TCMDialogChar);'");
MakeCode(0x43643C);
MakeCode(0x436492);
MakeCode(0x43649B);
MakeCode(0x4364A8);
MakeCode(0x4364B1);
MakeCode(0x4364B6);
MakeFunction(0x43643C, 0x4364BE);
MakeUnkn(0x4364C0, 1);
MakeNameEx(0x4364C0, "TRadioButton.CNCommand", 0x20);
MakeComm(0x4364C0, "'procedure TRadioButton.CNCommand(var Message:TWMCommand);'");
MakeCode(0x4364C0);
MakeCode(0x4364D3);
MakeCode(0x4364DF);
MakeCode(0x4364E8);
MakeFunction(0x4364C0, 0x4364EA);
MakeUnkn(0x4364EC, 1);
MakeNameEx(0x4364EC, "TListBoxStrings.GetCount", 0x20);
MakeComm(0x4364EC, "'function TListBoxStrings.GetCount:Integer;'");
MakeCode(0x4364EC);
MakeFunction(0x4364EC, 0x436508);
MakeUnkn(0x436508, 1);
MakeNameEx(0x436508, "TListBoxStrings.Get", 0x20);
MakeComm(0x436508, "'function TListBoxStrings.Get(Index:Integer):AnsiString;'");
MakeCode(0x436508);
MakeCode(0x436549);
MakeCode(0x43657E);
MakeCode(0x4365B7);
MakeCode(0x4365C4);
MakeCode(0x4365CD);
MakeCode(0x4365D2);
MakeFunction(0x436508, 0x4365DB);
MakeUnkn(0x4365DC, 1);
MakeNameEx(0x4365DC, "TListBoxStrings.GetObject", 0x20);
MakeComm(0x4365DC, "'function TListBoxStrings.GetObject(Index:Integer):TObject;'");
MakeCode(0x4365DC);
MakeCode(0x43661B);
MakeCode(0x43664A);
MakeCode(0x436657);
MakeCode(0x436660);
MakeCode(0x436665);
MakeFunction(0x4365DC, 0x436670);
MakeUnkn(0x436670, 1);
MakeNameEx(0x436670, "TListBoxStrings.Put", 0x20);
MakeComm(0x436670, "'procedure TListBoxStrings.Put(Index:Integer; const S:AnsiString);'");
MakeCode(0x436670);
MakeFunction(0x436670, 0x4366EB);
MakeUnkn(0x4366EC, 1);
MakeNameEx(0x4366EC, "TListBoxStrings.PutObject", 0x20);
MakeComm(0x4366EC, "'procedure TListBoxStrings.PutObject(Index:Integer; AObject:TObject);'");
MakeCode(0x4366EC);
MakeCode(0x436710);
MakeFunction(0x4366EC, 0x436712);
MakeUnkn(0x436714, 1);
MakeNameEx(0x436714, "TListBoxStrings.Add", 0x20);
MakeComm(0x436714, "'function TListBoxStrings.Add(const S:AnsiString):Integer;'");
MakeCode(0x436714);
MakeCode(0x43678C);
MakeCode(0x436799);
MakeCode(0x4367A2);
MakeCode(0x4367A7);
MakeFunction(0x436714, 0x4367B2);
MakeUnkn(0x4367B4, 1);
MakeNameEx(0x4367B4, "TListBoxStrings.Insert", 0x20);
MakeComm(0x4367B4, "'procedure TListBoxStrings.Insert(Index:Integer; const S:AnsiString);'");
MakeCode(0x4367B4);
MakeCode(0x436828);
MakeCode(0x436835);
MakeCode(0x43683E);
MakeCode(0x436843);
MakeFunction(0x4367B4, 0x43684C);
MakeUnkn(0x43684C, 1);
MakeNameEx(0x43684C, "TListBoxStrings.Delete", 0x20);
MakeComm(0x43684C, "'procedure TListBoxStrings.Delete(Index:Integer);'");
MakeCode(0x43684C);
MakeFunction(0x43684C, 0x43685B);
MakeUnkn(0x43685C, 1);
MakeNameEx(0x43685C, "TListBoxStrings.Exchange", 0x20);
MakeComm(0x43685C, "'procedure TListBoxStrings.Exchange(Index1:Integer; Index2:Integer);'");
MakeCode(0x43685C);
MakeCode(0x436953);
MakeCode(0x436975);
MakeCode(0x436982);
MakeCode(0x43698B);
MakeCode(0x436990);
MakeCode(0x436992);
MakeCode(0x43699F);
MakeCode(0x4369B0);
MakeCode(0x4369B5);
MakeFunction(0x43685C, 0x4369BE);
MakeUnkn(0x4369C0, 1);
MakeNameEx(0x4369C0, "TListBoxStrings.Clear", 0x20);
MakeComm(0x4369C0, "'procedure TListBoxStrings.Clear;'");
MakeCode(0x4369C0);
MakeFunction(0x4369C0, 0x4369CF);
MakeUnkn(0x4369D0, 1);
MakeNameEx(0x4369D0, "TListBoxStrings.SetUpdateState", 0x20);
MakeComm(0x4369D0, "'procedure TListBoxStrings.SetUpdateState(Updating:Boolean);'");
MakeCode(0x4369D0);
MakeCode(0x4369FF);
MakeFunction(0x4369D0, 0x436A02);
MakeUnkn(0x436A04, 1);
MakeNameEx(0x436A04, "TListBoxStrings.IndexOf", 0x20);
MakeComm(0x436A04, "'function TListBoxStrings.IndexOf(const S:AnsiString):Integer;'");
MakeCode(0x436A04);
MakeCode(0x436A26);
MakeCode(0x436A42);
MakeFunction(0x436A04, 0x436A46);
MakeUnkn(0x436A48, 1);
MakeNameEx(0x436A48, "TListBoxStrings.Move", 0x20);
MakeComm(0x436A48, "'procedure TListBoxStrings.Move(CurIndex:Integer; NewIndex:Integer);'");
MakeCode(0x436A48);
MakeCode(0x436B08);
MakeCode(0x436B15);
MakeCode(0x436B2B);
MakeCode(0x436B30);
MakeCode(0x436B32);
MakeCode(0x436B3F);
MakeCode(0x436B48);
MakeCode(0x436B4D);
MakeFunction(0x436A48, 0x436B56);
MakeUnkn(0x436B58, 1);
MakeNameEx(0x436B58, "TCustomListBox.Create", 0x20);
MakeComm(0x436B58, "'constructor TCustomListBox.Create(AOwner:TComponent);'");
MakeCode(0x436B58);
MakeCode(0x436B6A);
MakeCode(0x436B8C);
MakeCode(0x436B94);
MakeCode(0x436C3C);
MakeFunction(0x436B58, 0x436C43);
MakeUnkn(0x436C4C, 1);
MakeNameEx(0x436C4C, "TCustomListBox.Destroy", 0x20);
MakeComm(0x436C4C, "'destructor TCustomListBox.Destroy;'");
MakeCode(0x436C4C);
MakeCode(0x436C8F);
MakeFunction(0x436C4C, 0x436C92);
MakeUnkn(0x436C94, 1);
MakeNameEx(0x436C94, "TCustomListBox.AddItem", 0x20);
MakeComm(0x436C94, "'procedure TCustomListBox.AddItem(Item:AnsiString; AObject:TObject);'");
MakeCode(0x436C94);
MakeCode(0x436CEC);
MakeCode(0x436CF9);
MakeCode(0x436D07);
MakeCode(0x436D0C);
MakeFunction(0x436C94, 0x436D15);
MakeUnkn(0x436D18, 1);
MakeNameEx(0x436D18, "TCustomListBox.GetItemData", 0x20);
MakeComm(0x436D18, "'procedure TCustomListBox.GetItemData(Index:Integer);'");
MakeCode(0x436D18);
MakeFunction(0x436D18, 0x436D36);
MakeUnkn(0x436D38, 1);
MakeNameEx(0x436D38, "TCustomListBox.SetItemData", 0x20);
MakeComm(0x436D38, "'procedure TCustomListBox.SetItemData(Index:Integer; AData:Longint);'");
MakeCode(0x436D38);
MakeFunction(0x436D38, 0x436D59);
MakeUnkn(0x436D5C, 1);
MakeNameEx(0x436D5C, "TCustomListBox.InternalGetItemData", 0x20);
MakeComm(0x436D5C, "'procedure TCustomListBox.InternalGetItemData(Index:Integer);'");
MakeCode(0x436D5C);
MakeFunction(0x436D5C, 0x436D68);
MakeUnkn(0x436D68, 1);
MakeNameEx(0x436D68, "TCustomListBox.InternalSetItemData", 0x20);
MakeComm(0x436D68, "'procedure TCustomListBox.InternalSetItemData(Index:Integer; AData:Longint);'");
MakeCode(0x436D68);
MakeFunction(0x436D68, 0x436D78);
MakeUnkn(0x436D78, 1);
MakeNameEx(0x436D78, "TCustomListBox.DeleteString", 0x20);
MakeComm(0x436D78, "'procedure TCustomListBox.DeleteString(Index:Integer);'");
MakeCode(0x436D78);
MakeFunction(0x436D78, 0x436D96);
MakeUnkn(0x436D98, 1);
MakeNameEx(0x436D98, "TCustomListBox.ResetContent", 0x20);
MakeComm(0x436D98, "'procedure TCustomListBox.ResetContent;'");
MakeCode(0x436D98);
MakeCode(0x436DBE);
MakeFunction(0x436D98, 0x436DC0);
MakeUnkn(0x436DC0, 1);
MakeNameEx(0x436DC0, "TCustomListBox.SaveRecreateItems", 0x20);
MakeComm(0x436DC0, "'procedure TCustomListBox.SaveRecreateItems(RecreateItems:TStrings);'");
MakeCode(0x436DC0);
MakeFunction(0x436DC0, 0x436DD2);
MakeUnkn(0x436DD4, 1);
MakeNameEx(0x436DD4, "TCustomListBox.Clear", 0x20);
MakeComm(0x436DD4, "'procedure TCustomListBox.Clear;'");
MakeCode(0x436DD4);
MakeFunction(0x436DD4, 0x436DE0);
MakeUnkn(0x436DE0, 1);
MakeNameEx(0x436DE0, "TCustomListBox.ClearSelection", 0x20);
MakeComm(0x436DE0, "'procedure TCustomListBox.ClearSelection;'");
MakeCode(0x436DE0);
MakeCode(0x436E03);
MakeCode(0x436E14);
MakeCode(0x436E21);
MakeFunction(0x436DE0, 0x436E25);
MakeUnkn(0x436E28, 1);
MakeNameEx(0x436E28, "TCustomListBox.CopySelection", 0x20);
MakeComm(0x436E28, "'procedure TCustomListBox.CopySelection(Destination:TCustomListControl);'");
MakeCode(0x436E28);
MakeCode(0x436E6C);
MakeCode(0x436EBA);
MakeCode(0x436EC2);
MakeCode(0x436F24);
MakeCode(0x436F31);
MakeCode(0x436F3F);
MakeCode(0x436F44);
MakeFunction(0x436E28, 0x436F4D);
MakeUnkn(0x436F50, 1);
MakeNameEx(0x436F50, "TCustomListBox.DeleteSelected", 0x20);
MakeComm(0x436F50, "'procedure TCustomListBox.DeleteSelected;'");
MakeCode(0x436F50);
MakeCode(0x436F70);
MakeCode(0x436F8A);
MakeCode(0x436F93);
MakeCode(0x436FB7);
MakeFunction(0x436F50, 0x436FBA);
MakeUnkn(0x436FBC, 1);
MakeNameEx(0x436FBC, "TCustomListBox.SetColumnWidth", 0x20);
MakeComm(0x436FBC, "'procedure TCustomListBox.SetColumnWidth;'");
MakeCode(0x436FBC);
MakeCode(0x436FF6);
MakeCode(0x43700B);
MakeFunction(0x436FBC, 0x43700F);
MakeUnkn(0x437010, 1);
MakeNameEx(0x437010, "TCustomListBox.SetColumns", 0x20);
MakeComm(0x437010, "'procedure TCustomListBox.SetColumns(Value:Integer);'");
MakeCode(0x437010);
MakeCode(0x437028);
MakeCode(0x437037);
MakeCode(0x43704F);
MakeFunction(0x437010, 0x437051);
MakeUnkn(0x437054, 1);
MakeNameEx(0x437054, "TCustomListBox.GetItemIndex", 0x20);
MakeComm(0x437054, "'function TCustomListBox.GetItemIndex:Integer;'");
MakeCode(0x437054);
MakeCode(0x43707B);
MakeCode(0x4370A4);
MakeFunction(0x437054, 0x4370A9);
MakeUnkn(0x4370AC, 1);
MakeNameEx(0x4370AC, "TCustomListBox.GetCount", 0x20);
MakeComm(0x4370AC, "'function TCustomListBox.GetCount:Integer;'");
MakeCode(0x4370AC);
MakeCode(0x4370C2);
MakeFunction(0x4370AC, 0x4370CE);
MakeUnkn(0x4370D0, 1);
MakeNameEx(0x4370D0, "TCustomListBox.GetSelCount", 0x20);
MakeComm(0x4370D0, "'function TCustomListBox.GetSelCount:Integer;'");
MakeCode(0x4370D0);
MakeFunction(0x4370D0, 0x4370EB);
MakeUnkn(0x4370EC, 1);
MakeNameEx(0x4370EC, "TCustomListBox.SetItemIndex", 0x20);
MakeComm(0x4370EC, "'procedure TCustomListBox.SetItemIndex(const Value:Integer);'");
MakeCode(0x4370EC);
MakeCode(0x437120);
MakeCode(0x437135);
MakeFunction(0x4370EC, 0x437138);
MakeUnkn(0x437138, 1);
MakeNameEx(0x437138, "TCustomListBox.SetExtendedSelect", 0x20);
MakeComm(0x437138, "'procedure TCustomListBox.SetExtendedSelect(Value:Boolean);'");
MakeCode(0x437138);
MakeFunction(0x437138, 0x43714C);
MakeUnkn(0x43714C, 1);
MakeNameEx(0x43714C, "TCustomListBox.SetIntegralHeight", 0x20);
MakeComm(0x43714C, "'procedure TCustomListBox.SetIntegralHeight(Value:Boolean);'");
MakeCode(0x43714C);
MakeCode(0x43716B);
MakeFunction(0x43714C, 0x43716D);
MakeUnkn(0x437170, 1);
MakeNameEx(0x437170, "TCustomListBox.GetItemHeight", 0x20);
MakeComm(0x437170, "'function TCustomListBox.GetItemHeight:Integer;'");
MakeCode(0x437170);
MakeCode(0x4371AA);
MakeFunction(0x437170, 0x4371B2);
MakeUnkn(0x4371B4, 1);
MakeNameEx(0x4371B4, "TCustomListBox.SetItemHeight", 0x20);
MakeComm(0x4371B4, "'procedure TCustomListBox.SetItemHeight(Value:Integer);'");
MakeCode(0x4371B4);
MakeFunction(0x4371B4, 0x4371CC);
MakeUnkn(0x4371CC, 1);
MakeNameEx(0x4371CC, "TCustomListBox.SetTabWidth", 0x20);
MakeComm(0x4371CC, "'procedure TCustomListBox.SetTabWidth(Value:Integer);'");
MakeCode(0x4371CC);
MakeCode(0x4371D2);
MakeFunction(0x4371CC, 0x4371E6);
MakeUnkn(0x4371E8, 1);
MakeNameEx(0x4371E8, "TCustomListBox.SetMultiSelect", 0x20);
MakeComm(0x4371E8, "'procedure TCustomListBox.SetMultiSelect(Value:Boolean);'");
MakeCode(0x4371E8);
MakeFunction(0x4371E8, 0x4371FC);
MakeUnkn(0x4371FC, 1);
MakeNameEx(0x4371FC, "TCustomListBox.GetSelected", 0x20);
MakeComm(0x4371FC, "'function TCustomListBox.GetSelected(Index:Integer):Boolean;'");
MakeCode(0x4371FC);
MakeCode(0x437241);
MakeFunction(0x4371FC, 0x43724C);
MakeUnkn(0x43724C, 1);
MakeNameEx(0x43724C, "TCustomListBox.SetSelected", 0x20);
MakeComm(0x43724C, "'procedure TCustomListBox.SetSelected(Index:Integer; Value:Boolean);'");
MakeCode(0x43724C);
MakeCode(0x43729F);
MakeCode(0x4372DF);
MakeCode(0x4372F5);
MakeFunction(0x43724C, 0x4372FB);
MakeUnkn(0x4372FC, 1);
MakeNameEx(0x4372FC, "TCustomListBox.SetSorted", 0x20);
MakeComm(0x4372FC, "'procedure TCustomListBox.SetSorted(Value:Boolean);'");
MakeCode(0x4372FC);
MakeFunction(0x4372FC, 0x43731F);
MakeUnkn(0x437320, 1);
MakeNameEx(0x437320, "TCustomListBox.SetStyle", 0x20);
MakeComm(0x437320, "'procedure TCustomListBox.SetStyle(Value:TListBoxStyle);'");
MakeCode(0x437320);
MakeCode(0x43734A);
MakeCode(0x437357);
MakeFunction(0x437320, 0x43735A);
MakeUnkn(0x43735C, 1);
MakeNameEx(0x43735C, "TCustomListBox.GetTopIndex", 0x20);
MakeComm(0x43735C, "'function TCustomListBox.GetTopIndex:Integer;'");
MakeCode(0x43735C);
MakeFunction(0x43735C, 0x437377);
MakeUnkn(0x437378, 1);
MakeNameEx(0x437378, "TCustomListBox.LBGetText", 0x20);
MakeComm(0x437378, "'procedure TCustomListBox.LBGetText(var Message:TMessage);'");
MakeCode(0x437378);
MakeCode(0x4373F8);
MakeCode(0x4373FD);
MakeCode(0x437406);
MakeCode(0x43740F);
MakeCode(0x43741C);
MakeCode(0x437425);
MakeCode(0x43742A);
MakeFunction(0x437378, 0x437431);
MakeUnkn(0x437434, 1);
MakeNameEx(0x437434, "TCustomListBox.LBGetTextLen", 0x20);
MakeComm(0x437434, "'procedure TCustomListBox.LBGetTextLen(var Message:TMessage);'");
MakeCode(0x437434);
MakeCode(0x4374A2);
MakeCode(0x4374A7);
MakeCode(0x4374B0);
MakeCode(0x4374B9);
MakeCode(0x4374C6);
MakeCode(0x4374CF);
MakeCode(0x4374D4);
MakeFunction(0x437434, 0x4374DB);
MakeUnkn(0x4374DC, 1);
MakeNameEx(0x4374DC, "TCustomListBox.SetBorderStyle", 0x20);
MakeComm(0x4374DC, "'procedure TCustomListBox.SetBorderStyle(Value:TBorderStyle);'");
MakeCode(0x4374DC);
MakeFunction(0x4374DC, 0x4374F0);
MakeUnkn(0x4374F0, 1);
MakeNameEx(0x4374F0, "TCustomListBox.SetTopIndex", 0x20);
MakeComm(0x4374F0, "'procedure TCustomListBox.SetTopIndex(Value:Integer);'");
MakeCode(0x4374F0);
MakeCode(0x437516);
MakeFunction(0x4374F0, 0x437519);
MakeUnkn(0x43751C, 1);
MakeNameEx(0x43751C, "TCustomListBox.SetItems", 0x20);
MakeComm(0x43751C, "'procedure TCustomListBox.SetItems(Value:TStrings);'");
MakeCode(0x43751C);
MakeCode(0x43753D);
MakeCode(0x437548);
MakeCode(0x437551);
MakeFunction(0x43751C, 0x437561);
MakeUnkn(0x437564, 1);
MakeNameEx(0x437564, "TCustomListBox.ItemAtPos", 0x20);
MakeComm(0x437564, "'function TCustomListBox.ItemAtPos(Pos:TPoint; Existing:Boolean):Integer;'");
MakeCode(0x437564);
MakeCode(0x4375B1);
MakeCode(0x4375DF);
MakeCode(0x4375E3);
MakeCode(0x4375E6);
MakeFunction(0x437564, 0x4375F0);
MakeUnkn(0x4375F0, 1);
MakeNameEx(0x4375F0, "TCustomListBox.ItemRect", 0x20);
MakeComm(0x4375F0, "'function TCustomListBox.ItemRect(Index:Integer):TRect;'");
MakeCode(0x4375F0);
MakeCode(0x43760C);
MakeCode(0x43761D);
MakeCode(0x437642);
MakeCode(0x437650);
MakeFunction(0x4375F0, 0x437654);
MakeUnkn(0x437654, 1);
MakeNameEx(0x437654, "TCustomListBox.CreateParams", 0x20);
MakeComm(0x437654, "'procedure TCustomListBox.CreateParams(var Params:TCreateParams);'");
MakeCode(0x437654);
MakeCode(0x437685);
MakeCode(0x437740);
MakeFunction(0x437654, 0x437761);
MakeUnkn(0x43776C, 1);
MakeNameEx(0x43776C, "TCustomListBox.CreateWnd", 0x20);
MakeComm(0x43776C, "'procedure TCustomListBox.CreateWnd;'");
MakeCode(0x43776C);
MakeCode(0x4377BD);
MakeCode(0x4377D7);
MakeCode(0x4377EB);
MakeCode(0x437803);
MakeCode(0x437824);
MakeCode(0x43784B);
MakeFunction(0x43776C, 0x43784F);
MakeUnkn(0x437850, 1);
MakeNameEx(0x437850, "TCustomListBox.DestroyWnd", 0x20);
MakeComm(0x437850, "'procedure TCustomListBox.DestroyWnd;'");
MakeCode(0x437850);
MakeCode(0x437896);
MakeCode(0x4378B6);
MakeCode(0x4378D3);
MakeFunction(0x437850, 0x4378DD);
MakeUnkn(0x4378E0, 1);
MakeNameEx(0x4378E0, "TCustomListBox.WndProc", 0x20);
MakeComm(0x4378E0, "'procedure TCustomListBox.WndProc(var Message:TMessage);'");
MakeCode(0x4378E0);
MakeCode(0x4378FF);
MakeCode(0x437937);
MakeCode(0x437940);
MakeFunction(0x4378E0, 0x437944);
MakeUnkn(0x437948, 1);
MakeNameEx(0x437948, "TCustomListBox.WMLButtonDown", 0x20);
MakeComm(0x437948, "'procedure TCustomListBox.WMLButtonDown(var Message:TWMLButtonDown);'");
MakeCode(0x437948);
MakeCode(0x437977);
MakeCode(0x4379BC);
MakeCode(0x4379DE);
MakeCode(0x4379EA);
MakeFunction(0x437948, 0x4379F2);
MakeUnkn(0x4379F4, 1);
MakeNameEx(0x4379F4, "TCustomListBox.CNCommand", 0x20);
MakeComm(0x4379F4, "'procedure TCustomListBox.CNCommand(var Message:TWMCommand);'");
MakeCode(0x4379F4);
MakeCode(0x437A08);
MakeCode(0x437A1D);
MakeCode(0x437A28);
MakeFunction(0x4379F4, 0x437A2B);
MakeUnkn(0x437A2C, 1);
MakeNameEx(0x437A2C, "PaintListBox", 0x20);
MakeComm(0x437A2C, "'procedure PaintListBox;'");
MakeCode(0x437A2C);
MakeCode(0x437AA5);
MakeCode(0x437AB2);
MakeCode(0x437ABB);
MakeCode(0x437AC0);
MakeCode(0x437AC2);
MakeCode(0x437B6E);
MakeCode(0x437B94);
MakeCode(0x437C0A);
MakeFunction(0x437A2C, 0x437C11);
MakeUnkn(0x437C14, 1);
MakeNameEx(0x437C14, "TCustomListBox.WMPaint", 0x20);
MakeComm(0x437C14, "'procedure TCustomListBox.WMPaint(var Message:TWMPaint);'");
MakeCode(0x437C14);
MakeCode(0x437C32);
MakeCode(0x437C3D);
MakeFunction(0x437C14, 0x437C41);
MakeUnkn(0x437C44, 1);
MakeNameEx(0x437C44, "TCustomListBox.WMSize", 0x20);
MakeComm(0x437C44, "'procedure TCustomListBox.WMSize(var Message:TWMSize);'");
MakeCode(0x437C44);
MakeFunction(0x437C44, 0x437C57);
MakeUnkn(0x437C58, 1);
MakeNameEx(0x437C58, "TCustomListBox.DragCanceled", 0x20);
MakeComm(0x437C58, "'procedure TCustomListBox.DragCanceled;'");
MakeCode(0x437C58);
MakeFunction(0x437C58, 0x437CC4);
MakeUnkn(0x437CC4, 1);
MakeNameEx(0x437CC4, "TCustomListBox.DrawItem", 0x20);
MakeComm(0x437CC4, "'procedure TCustomListBox.DrawItem(Index:Integer; Rect:TRect; State:TOwnerDrawState);'");
MakeCode(0x437CC4);
MakeCode(0x437D15);
MakeCode(0x437D59);
MakeCode(0x437D5D);
MakeCode(0x437D80);
MakeCode(0x437D90);
MakeCode(0x437D9C);
MakeCode(0x437DBF);
MakeCode(0x437DCC);
MakeCode(0x437DD5);
MakeCode(0x437DDA);
MakeFunction(0x437CC4, 0x437DE5);
MakeUnkn(0x437DE8, 1);
MakeNameEx(0x437DE8, "TCustomListBox.MeasureItem", 0x20);
MakeComm(0x437DE8, "'procedure TCustomListBox.MeasureItem(Index:Integer; var Height:Integer);'");
MakeCode(0x437DE8);
MakeCode(0x437E06);
MakeFunction(0x437DE8, 0x437E08);
MakeUnkn(0x437E08, 1);
MakeNameEx(0x437E08, "TCustomListBox.CNDrawItem", 0x20);
MakeComm(0x437E08, "'procedure TCustomListBox.CNDrawItem(var Message:TWMDrawItem);'");
MakeCode(0x437E08);
MakeCode(0x437E75);
MakeCode(0x437E8E);
MakeCode(0x437E9C);
MakeCode(0x437EB0);
MakeFunction(0x437E08, 0x437EC2);
MakeUnkn(0x437EC4, 1);
MakeNameEx(0x437EC4, "TCustomListBox.CNMeasureItem", 0x20);
MakeComm(0x437EC4, "'procedure TCustomListBox.CNMeasureItem(var Message:TWMMeasureItem);'");
MakeCode(0x437EC4);
MakeCode(0x437EE8);
MakeFunction(0x437EC4, 0x437EEA);
MakeUnkn(0x437EEC, 1);
MakeNameEx(0x437EEC, "TCustomListBox.CMCtl3DChanged", 0x20);
MakeComm(0x437EEC, "'procedure TCustomListBox.CMCtl3DChanged(var Message:TMessage);'");
MakeCode(0x437EEC);
MakeCode(0x437F0C);
MakeFunction(0x437EEC, 0x437F18);
MakeUnkn(0x437F18, 1);
MakeNameEx(0x437F18, "TCustomListBox.SelectAll", 0x20);
MakeComm(0x437F18, "'procedure TCustomListBox.SelectAll;'");
MakeCode(0x437F18);
MakeCode(0x437F3B);
MakeCode(0x437F4A);
MakeFunction(0x437F18, 0x437F4E);
MakeUnkn(0x437F50, 1);
MakeNameEx(0x437F50, "FindString", 0x20);
MakeComm(0x437F50, "'procedure FindString;'");
MakeCode(0x437F50);
MakeCode(0x437F83);
MakeCode(0x437FAF);
MakeCode(0x437FF4);
MakeCode(0x438013);
MakeCode(0x438031);
MakeFunction(0x437F50, 0x438035);
MakeUnkn(0x438038, 1);
MakeNameEx(0x438038, "TCustomListBox.KeyPress", 0x20);
MakeComm(0x438038, "'procedure TCustomListBox.KeyPress(var Key:Char);'");
MakeCode(0x438038);
MakeCode(0x43809E);
MakeCode(0x438135);
MakeCode(0x438154);
MakeCode(0x438165);
MakeCode(0x438178);
MakeCode(0x4381A9);
MakeCode(0x4381BC);
MakeCode(0x4381CD);
MakeCode(0x4381DA);
MakeCode(0x4381F1);
MakeCode(0x4381FE);
MakeCode(0x43820C);
MakeCode(0x438211);
MakeFunction(0x438038, 0x438219);
MakeUnkn(0x43821C, 1);
MakeNameEx(0x43821C, "TCustomListBox.LoadRecreateItems", 0x20);
MakeComm(0x43821C, "'procedure TCustomListBox.LoadRecreateItems(RecreateItems:TStrings);'");
MakeCode(0x43821C);
MakeFunction(0x43821C, 0x43822C);
MakeUnkn(0x43822C, 1);
MakeNameEx(0x43822C, "TCustomListBox.SetCount", 0x20);
MakeComm(0x43822C, "'procedure TCustomListBox.SetCount(const Value:Integer);'");
MakeCode(0x43822C);
MakeCode(0x438282);
MakeCode(0x4382B5);
MakeCode(0x4382E6);
MakeCode(0x4382F3);
MakeCode(0x438301);
MakeCode(0x438306);
MakeFunction(0x43822C, 0x43830E);
MakeUnkn(0x438310, 1);
MakeNameEx(0x438310, "TCustomListBox.DoGetData", 0x20);
MakeComm(0x438310, "'function TCustomListBox.DoGetData(const Index:Integer):AnsiString;'");
MakeCode(0x438310);
MakeCode(0x43832E);
MakeFunction(0x438310, 0x438330);
MakeUnkn(0x438330, 1);
MakeNameEx(0x438330, "TCustomListBox.DoGetDataObject", 0x20);
MakeComm(0x438330, "'function TCustomListBox.DoGetDataObject(const Index:Integer):TObject;'");
MakeCode(0x438330);
MakeCode(0x43834F);
MakeFunction(0x438330, 0x438355);
MakeUnkn(0x438358, 1);
MakeNameEx(0x438358, "TCustomListBox.DoFindData", 0x20);
MakeComm(0x438358, "'function TCustomListBox.DoFindData(const Data:AnsiString):Integer;'");
MakeCode(0x438358);
MakeCode(0x438377);
MakeFunction(0x438358, 0x43837C);
MakeUnkn(0x43837C, 1);
MakeNameEx(0x43837C, "TCustomListBox.GetScrollWidth", 0x20);
MakeComm(0x43837C, "'function TCustomListBox.GetScrollWidth:Integer;'");
MakeCode(0x43837C);
MakeFunction(0x43837C, 0x438397);
MakeUnkn(0x438398, 1);
MakeNameEx(0x438398, "TCustomListBox.SetScrollWidth", 0x20);
MakeComm(0x438398, "'procedure TCustomListBox.SetScrollWidth(const Value:Integer);'");
MakeCode(0x438398);
MakeCode(0x4383BE);
MakeFunction(0x438398, 0x4383C1);
MakeUnkn(0x4383C4, 1);
MakeNameEx(0x4383C4, "TCustomStaticText.Create", 0x20);
MakeComm(0x4383C4, "'constructor TCustomStaticText.Create(AOwner:TComponent);'");
MakeCode(0x4383C4);
MakeCode(0x4383D2);
MakeCode(0x438429);
MakeFunction(0x4383C4, 0x43842E);
MakeUnkn(0x438434, 1);
MakeNameEx(0x438434, "TCustomStaticText.CreateParams", 0x20);
MakeComm(0x438434, "'procedure TCustomStaticText.CreateParams(var Params:TCreateParams);'");
MakeCode(0x438434);
MakeCode(0x4384A0);
MakeFunction(0x438434, 0x4384A8);
MakeUnkn(0x4384B0, 1);
MakeNameEx(0x4384B0, "TCustomStaticText.CMDialogChar", 0x20);
MakeComm(0x4384B0, "'procedure TCustomStaticText.CMDialogChar(var Message:TCMDialogChar);'");
MakeCode(0x4384B0);
MakeCode(0x438527);
MakeCode(0x438534);
MakeCode(0x43853D);
MakeCode(0x438542);
MakeFunction(0x4384B0, 0x43854A);
MakeUnkn(0x43854C, 1);
MakeNameEx(0x43854C, "TCustomStaticText.CMFontChanged", 0x20);
MakeComm(0x43854C, "'procedure TCustomStaticText.CMFontChanged(var Message:TMessage);'");
MakeCode(0x43854C);
MakeFunction(0x43854C, 0x43855F);
MakeUnkn(0x438560, 1);
MakeNameEx(0x438560, "TCustomStaticText.CMTextChanged", 0x20);
MakeComm(0x438560, "'procedure TCustomStaticText.CMTextChanged(var Message:TMessage);'");
MakeCode(0x438560);
MakeFunction(0x438560, 0x43857D);
MakeUnkn(0x438580, 1);
MakeNameEx(0x438580, "TCustomStaticText.Loaded", 0x20);
MakeComm(0x438580, "'procedure TCustomStaticText.Loaded;'");
MakeCode(0x438580);
MakeFunction(0x438580, 0x438593);
MakeUnkn(0x438594, 1);
MakeNameEx(0x438594, "TCustomStaticText.AdjustBounds", 0x20);
MakeComm(0x438594, "'procedure TCustomStaticText.AdjustBounds;'");
MakeCode(0x438594);
MakeCode(0x438603);
MakeCode(0x438661);
MakeCode(0x43866E);
MakeCode(0x43867F);
MakeCode(0x438684);
MakeFunction(0x438594, 0x43868D);
MakeUnkn(0x438690, 1);
MakeNameEx(0x438690, "TCustomStaticText.Notification", 0x20);
MakeComm(0x438690, "'procedure TCustomStaticText.Notification(AComponent:TComponent; Operation:TOperation);'");
MakeCode(0x438690);
MakeCode(0x4386B9);
MakeFunction(0x438690, 0x4386BD);
MakeUnkn(0x4386C0, 1);
MakeNameEx(0x4386C0, "TCustomStaticText.SetAlignment", 0x20);
MakeComm(0x4386C0, "'procedure TCustomStaticText.SetAlignment(Value:TAlignment);'");
MakeCode(0x4386C0);
MakeFunction(0x4386C0, 0x4386D4);
MakeUnkn(0x4386D4, 1);
MakeNameEx(0x4386D4, "TCustomStaticText.SetAutoSize", 0x20);
MakeComm(0x4386D4, "'procedure TCustomStaticText.SetAutoSize(Value:Boolean);'");
MakeCode(0x4386D4);
MakeFunction(0x4386D4, 0x4386EC);
MakeUnkn(0x4386EC, 1);
MakeNameEx(0x4386EC, "TCustomStaticText.SetBorderStyle", 0x20);
MakeComm(0x4386EC, "'procedure TCustomStaticText.SetBorderStyle(Value:TStaticBorderStyle);'");
MakeCode(0x4386EC);
MakeFunction(0x4386EC, 0x438700);
MakeUnkn(0x438700, 1);
MakeNameEx(0x438700, "TCustomStaticText.SetFocusControl", 0x20);
MakeComm(0x438700, "'procedure TCustomStaticText.SetFocusControl(Value:TWinControl);'");
MakeCode(0x438700);
MakeFunction(0x438700, 0x438711);
MakeUnkn(0x438714, 1);
MakeNameEx(0x438714, "TRadioButton.SetAlignment", 0x20);
MakeComm(0x438714, "'procedure TRadioButton.SetAlignment(Value:TLeftRight);'");
MakeCode(0x438714);
MakeFunction(0x438714, 0x438728);
MakeUnkn(0x438728, 1);
MakeNameEx(0x438728, "TCustomStaticText.CNCtlColorStatic", 0x20);
MakeComm(0x438728, "'procedure TCustomStaticText.CNCtlColorStatic(var Message:TWMCtlColorStatic);'");
MakeCode(0x438728);
MakeCode(0x43877C);
MakeCode(0x438785);
MakeFunction(0x438728, 0x438789);
MakeUnkn(0x43878C, 1);
MakeNameEx(0x43878C, "TCustomStaticText.SetTransparent", 0x20);
MakeComm(0x43878C, "'procedure TCustomStaticText.SetTransparent(const Value:Boolean);'");
MakeCode(0x43878C);
MakeCode(0x4387B0);
MakeCode(0x4387BB);
MakeCode(0x4387C5);
MakeFunction(0x43878C, 0x4387C8);
MakeUnkn(0x4387CC, 1);
MakeNameEx(0x4387CC, "TCustomStaticText.GetTransparent", 0x20);
MakeComm(0x4387CC, "'function TCustomStaticText.GetTransparent:Boolean;'");
MakeCode(0x4387CC);
MakeFunction(0x4387CC, 0x4387D6);
MakeUnkn(0x4387D8, 1);
MakeNameEx(0x4387D8, "winspool.ClosePrinter", 0x20);
MakeComm(0x4387D8, "'function winspool.ClosePrinter:BOOL; stdcall;'");
MakeCode(0x4387D8);
MakeFunction(0x4387D8, 0x4387DE);
MakeUnkn(0x4387E0, 1);
MakeNameEx(0x4387E0, "winspool.DocumentPropertiesA", 0x20);
MakeComm(0x4387E0, "'function winspool.DocumentPropertiesA(hPrinter:THandle; pDeviceName:PAnsiChar; const pDevModeOutput:TDeviceModeA; var pDevModeInput:TDeviceModeA; fMode:DWORD):Longint; stdcall;'");
MakeCode(0x4387E0);
MakeFunction(0x4387E0, 0x4387E6);
MakeUnkn(0x4387E8, 1);
MakeNameEx(0x4387E8, "winspool.EnumPrintersA", 0x20);
MakeComm(0x4387E8, "'function winspool.EnumPrintersA(Name:PAnsiChar; Level:DWORD; pPrinterEnum:Pointer; cbBuf:DWORD; var pcbNeeded:DWORD; var pcReturned:DWORD):BOOL; stdcall;'");
MakeCode(0x4387E8);
MakeFunction(0x4387E8, 0x4387EE);
MakeUnkn(0x4387F0, 1);
MakeNameEx(0x4387F0, "winspool.OpenPrinterA", 0x20);
MakeComm(0x4387F0, "'function winspool.OpenPrinterA(var phPrinter:THandle; pDefault:PPrinterDefaultsA):BOOL; stdcall;'");
MakeCode(0x4387F0);
MakeFunction(0x4387F0, 0x4387F6);
MakeUnkn(0x4387F8, 1);
MakeNameEx(0x4387F8, "VMT_4387F8_EPrinter", 0);
MakeDword(0x4387F8);
MakeDword(0x4387FC);
MakeDword(0x438800);
MakeDword(0x438804);
MakeDword(0x438808);
MakeDword(0x43880C);
MakeDword(0x438810);
MakeDword(0x438814);
MakeDword(0x438818);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x438844, 0x43884D);
MakeDword(0x43881C);
MakeDword(0x438820);
MakeDword(0x438824);
MakeDword(0x438828);
MakeDword(0x43882C);
MakeDword(0x438830);
MakeDword(0x438834);
MakeDword(0x438838);
MakeDword(0x43883C);
MakeDword(0x438840);
MakeUnkn(0x438850, 1);
MakeNameEx(0x438850, "VMT_438850_TPrinter", 0);
MakeDword(0x438850);
MakeDword(0x438854);
MakeDword(0x438858);
MakeDword(0x43885C);
MakeUnkn(0x43889C, 1);
MakeNameEx(0x43889C, "TPrinter_InitTable", 0);
MakeByte(0x43889C);
MakeByte(0x43889D);
MakeDword(0x43889E);
MakeDword(0x4388A2);
MakeDword(0x4388A6);
MakeDword(0x4388AA);
MakeDword(0x438860);
MakeDword(0x438864);
MakeDword(0x438868);
MakeDword(0x43886C);
MakeDword(0x438870);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4388AE, 0x4388B7);
MakeDword(0x438874);
MakeDword(0x438878);
MakeDword(0x43887C);
MakeDword(0x438880);
MakeDword(0x438884);
MakeDword(0x438888);
MakeDword(0x43888C);
MakeDword(0x438890);
MakeDword(0x438894);
MakeDword(0x438898);
MakeUnkn(0x4388B8, 1);
MakeNameEx(0x4388B8, "FetchStr", 0x20);
MakeComm(0x4388B8, "'function FetchStr(var Str:PChar):PChar;'");
MakeCode(0x4388B8);
MakeCode(0x4388C4);
MakeCode(0x4388C5);
MakeCode(0x4388CE);
MakeCode(0x4388CF);
MakeCode(0x4388DB);
MakeCode(0x4388E4);
MakeCode(0x4388E6);
MakeFunction(0x4388B8, 0x4388EA);
MakeUnkn(0x4388EC, 1);
MakeNameEx(0x4388EC, "RaiseError", 0x20);
MakeComm(0x4388EC, "'procedure RaiseError(const Msg:AnsiString);'");
MakeCode(0x4388EC);
MakeFunction(0x4388EC, 0x438904);
MakeUnkn(0x438904, 1);
MakeNameEx(0x438904, "AbortProc", 0x20);
MakeComm(0x438904, "'function AbortProc(Prn:HDC; Error:Integer):BOOL; stdcall;'");
MakeCode(0x438904);
MakeFunction(0x438904, 0x438926);
MakeUnkn(0x438928, 1);
MakeNameEx(0x438928, "VMT_438928_TPrinterDevice", 0);
MakeDword(0x438928);
MakeDword(0x43892C);
MakeDword(0x438930);
MakeDword(0x438934);
MakeUnkn(0x438974, 1);
MakeNameEx(0x438974, "TPrinterDevice_InitTable", 0);
MakeByte(0x438974);
MakeByte(0x438975);
MakeDword(0x438976);
MakeDword(0x43897A);
MakeDword(0x43897E);
MakeDword(0x438982);
MakeDword(0x438986);
MakeDword(0x43898A);
MakeDword(0x43898E);
MakeDword(0x438992);
MakeDword(0x438938);
MakeDword(0x43893C);
MakeDword(0x438940);
MakeDword(0x438944);
MakeDword(0x438948);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x438996, 0x4389A5);
MakeDword(0x43894C);
MakeDword(0x438950);
MakeDword(0x438954);
MakeDword(0x438958);
MakeDword(0x43895C);
MakeDword(0x438960);
MakeDword(0x438964);
MakeDword(0x438968);
MakeDword(0x43896C);
MakeDword(0x438970);
MakeUnkn(0x4389A8, 1);
MakeNameEx(0x4389A8, "TPrinterDevice.Create", 0x20);
MakeComm(0x4389A8, "'constructor TPrinterDevice.Create(ADriver:PChar; ADevice:PChar; APort:PChar);'");
MakeCode(0x4389A8);
MakeCode(0x4389BA);
MakeCode(0x4389FE);
MakeFunction(0x4389A8, 0x438A07);
MakeUnkn(0x438A08, 1);
MakeNameEx(0x438A08, "TPrinterDevice.IsEqual", 0x20);
MakeComm(0x438A08, "'function TPrinterDevice.IsEqual(ADriver:PChar; ADevice:PChar; APort:PChar):Boolean;'");
MakeCode(0x438A08);
MakeCode(0x438A58);
MakeCode(0x438A5C);
MakeCode(0x438A5E);
MakeCode(0x438A60);
MakeCode(0x438A6D);
MakeCode(0x438A7B);
MakeCode(0x438A80);
MakeFunction(0x438A08, 0x438A8C);
MakeUnkn(0x438A8C, 1);
MakeNameEx(0x438A8C, "VMT_438A8C_TPrinterCanvas", 0);
MakeDword(0x438A8C);
MakeDword(0x438A90);
MakeDword(0x438A94);
MakeDword(0x438A98);
MakeDword(0x438A9C);
MakeDword(0x438AA0);
MakeUnkn(0x438AF0, 1);
MakeNameEx(0x438AF0, "TPrinterCanvas_FieldTable", 0);
MakeWord(0x438AF0);
MakeDword(0x438AF2);
MakeWord(0x438B48);
MakeDword(0x438B4A);
MakeDword(0x438AF6);
MakeWord(0x438AFA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x438AFC, 0x438B04);
MakeDword(0x438AA4);
MakeUnkn(0x438B04, 1);
MakeNameEx(0x438B04, "TPrinterCanvas_MethodTable", 0);
MakeWord(0x438B04);
MakeWord(0x438B06);
MakeDword(0x438B08);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x438B0C, 0x438B19);
MakeWord(0x438B19);
MakeDword(0x438B1B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x438B1F, 0x438B28);
MakeWord(0x438B28);
MakeDword(0x438B2A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x438B2E, 0x438B39);
MakeDword(0x438AA8);
MakeDword(0x438AAC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x438B39, 0x438B48);
MakeDword(0x438AB0);
MakeDword(0x438AB4);
MakeDword(0x438AB8);
MakeDword(0x438ABC);
MakeDword(0x438AC0);
MakeDword(0x438AC4);
MakeDword(0x438AC8);
MakeDword(0x438ACC);
MakeDword(0x438AD0);
MakeDword(0x438AD4);
MakeComm(0x438AD8, "'+0'");
MakeDword(0x438AD8);
MakeComm(0x438ADC, "'+4'");
MakeDword(0x438ADC);
MakeComm(0x438AE0, "'+8'");
MakeDword(0x438AE0);
MakeComm(0x438AE4, "'+C'");
MakeDword(0x438AE4);
MakeComm(0x438AE8, "'+10'");
MakeDword(0x438AE8);
MakeComm(0x438AEC, "'+14'");
MakeDword(0x438AEC);
MakeUnkn(0x438B50, 1);
MakeNameEx(0x438B50, "RTTI_438B50_Class_TPrinterCanvas", 0);
MakeDword(0x438B50);
MakeUnkn(0x438B54, 1);
MakeNameEx(0x438B54, "", 0);
MakeByte(0x438B54);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x438B55, 0x438B64);
MakeDword(0x438B64);
MakeDword(0x438B68);
MakeWord(0x438B6C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x438B6E, 0x438B77);
MakeWord(0x438B77);
MakeUnkn(0x438B7C, 1);
MakeNameEx(0x438B7C, "TPrinterCanvas.Create", 0x20);
MakeComm(0x438B7C, "'constructor TPrinterCanvas.Create(APrinter:TPrinter);'");
MakeCode(0x438B7C);
MakeCode(0x438B8B);
MakeCode(0x438BB2);
MakeFunction(0x438B7C, 0x438BB8);
MakeUnkn(0x438BB8, 1);
MakeNameEx(0x438BB8, "TPrinterCanvas.CreateHandle", 0x20);
MakeComm(0x438BB8, "'procedure TPrinterCanvas.CreateHandle;'");
MakeCode(0x438BB8);
MakeFunction(0x438BB8, 0x438BDB);
MakeUnkn(0x438BDC, 1);
MakeNameEx(0x438BDC, "TPrinterCanvas.Changing", 0x20);
MakeComm(0x438BDC, "'procedure TPrinterCanvas.Changing;'");
MakeCode(0x438BDC);
MakeFunction(0x438BDC, 0x438BF9);
MakeUnkn(0x438BFC, 1);
MakeNameEx(0x438BFC, "TPrinterCanvas.UpdateFont", 0x20);
MakeComm(0x438BFC, "'procedure TPrinterCanvas.UpdateFont;'");
MakeCode(0x438BFC);
MakeCode(0x438C3D);
MakeFunction(0x438BFC, 0x438C41);
MakeUnkn(0x438C44, 1);
MakeNameEx(0x438C44, "TPrinter.Create", 0x20);
MakeComm(0x438C44, "'constructor TPrinter.Create;'");
MakeCode(0x438C44);
MakeCode(0x438C52);
MakeCode(0x438C7B);
MakeFunction(0x438C44, 0x438C80);
MakeUnkn(0x438C80, 1);
MakeNameEx(0x438C80, "TPrinter.Destroy", 0x20);
MakeComm(0x438C80, "'destructor TPrinter.Destroy;'");
MakeCode(0x438C80);
MakeCode(0x438C98);
MakeCode(0x438CC4);
MakeCode(0x438CDF);
MakeCode(0x438CF6);
MakeFunction(0x438C80, 0x438CF9);
MakeUnkn(0x438CFC, 1);
MakeNameEx(0x438CFC, "TPrinter.SetState", 0x20);
MakeComm(0x438CFC, "'procedure TPrinter.SetState(Value:TPrinterState);'");
MakeCode(0x438CFC);
MakeCode(0x438D39);
MakeCode(0x438D50);
MakeCode(0x438D60);
MakeCode(0x438D6F);
MakeCode(0x438D7D);
MakeCode(0x438D8A);
MakeCode(0x438D8F);
MakeCode(0x438DF3);
MakeCode(0x438E02);
MakeCode(0x438E05);
MakeCode(0x438E12);
MakeCode(0x438E1B);
MakeCode(0x438E20);
MakeFunction(0x438CFC, 0x438E29);
MakeUnkn(0x438E2C, 1);
MakeNameEx(0x438E2C, "TPrinter.CheckPrinting", 0x20);
MakeComm(0x438E2C, "'procedure TPrinter.CheckPrinting(Value:Boolean);'");
MakeCode(0x438E2C);
MakeCode(0x438E61);
MakeCode(0x438E76);
MakeCode(0x438E83);
MakeCode(0x438E91);
MakeCode(0x438E96);
MakeFunction(0x438E2C, 0x438E9C);
MakeUnkn(0x438E9C, 1);
MakeNameEx(0x438E9C, "TPrinter.Abort", 0x20);
MakeComm(0x438E9C, "'procedure TPrinter.Abort;'");
MakeCode(0x438E9C);
MakeFunction(0x438E9C, 0x438ECB);
MakeUnkn(0x438ECC, 1);
MakeNameEx(0x438ECC, "TPrinter.BeginDoc", 0x20);
MakeComm(0x438ECC, "'procedure TPrinter.BeginDoc;'");
MakeCode(0x438ECC);
MakeFunction(0x438ECC, 0x438F52);
MakeUnkn(0x438F54, 1);
MakeNameEx(0x438F54, "TPrinter.EndDoc", 0x20);
MakeComm(0x438F54, "'procedure TPrinter.EndDoc;'");
MakeCode(0x438F54);
MakeCode(0x438F78);
MakeFunction(0x438F54, 0x438F87);
MakeUnkn(0x438F88, 1);
MakeNameEx(0x438F88, "TPrinter.NewPage", 0x20);
MakeComm(0x438F88, "'procedure TPrinter.NewPage;'");
MakeCode(0x438F88);
MakeFunction(0x438F88, 0x438FB7);
MakeUnkn(0x438FB8, 1);
MakeNameEx(0x438FB8, "TPrinter.GetPrinter", 0x20);
MakeComm(0x438FB8, "'procedure TPrinter.GetPrinter(ADevice:PChar; ADriver:PChar; APort:PChar; var ADeviceMode:THandle);'");
MakeCode(0x438FB8);
MakeFunction(0x438FB8, 0x439022);
MakeUnkn(0x439024, 1);
MakeNameEx(0x439024, "TPrinter.SetPrinterCapabilities", 0x20);
MakeComm(0x439024, "'procedure TPrinter.SetPrinterCapabilities(Value:Integer);'");
MakeCode(0x439024);
MakeCode(0x439040);
MakeCode(0x43904C);
MakeCode(0x439058);
MakeFunction(0x439024, 0x43905B);
MakeUnkn(0x439060, 1);
MakeNameEx(0x439060, "TPrinter.SetPrinter", 0x20);
MakeComm(0x439060, "'procedure TPrinter.SetPrinter(ADevice:PChar; ADriver:PChar; APort:PChar; ADeviceMode:THandle);'");
MakeCode(0x439060);
MakeCode(0x4390BB);
MakeCode(0x4390BE);
MakeCode(0x4390DA);
MakeCode(0x4390F3);
MakeCode(0x43911F);
MakeCode(0x439156);
MakeCode(0x43915A);
MakeCode(0x4391DF);
MakeCode(0x439270);
MakeCode(0x439283);
MakeCode(0x439290);
MakeCode(0x4392A1);
MakeCode(0x4392A6);
MakeFunction(0x439060, 0x4392B1);
MakeUnkn(0x4392B4, 1);
MakeNameEx(0x4392B4, "TPrinter.GetCanvas", 0x20);
MakeComm(0x4392B4, "'function TPrinter.GetCanvas:TCanvas;'");
MakeCode(0x4392B4);
MakeCode(0x4392CE);
MakeFunction(0x4392B4, 0x4392D3);
MakeUnkn(0x4392D4, 1);
MakeNameEx(0x4392D4, "TPrinter.GetHandle", 0x20);
MakeComm(0x4392D4, "'function TPrinter.GetHandle:HDC;'");
MakeCode(0x4392D4);
MakeFunction(0x4392D4, 0x4392E5);
MakeUnkn(0x4392E8, 1);
MakeNameEx(0x4392E8, "TPrinter.GetNumCopies", 0x20);
MakeComm(0x4392E8, "'function TPrinter.GetNumCopies:Integer;'");
MakeCode(0x4392E8);
MakeCode(0x439320);
MakeCode(0x439329);
MakeCode(0x439336);
MakeCode(0x43933F);
MakeCode(0x439344);
MakeFunction(0x4392E8, 0x43934C);
MakeUnkn(0x43934C, 1);
MakeNameEx(0x43934C, "TPrinter.SetNumCopies", 0x20);
MakeComm(0x43934C, "'procedure TPrinter.SetNumCopies(Value:Integer);'");
MakeCode(0x43934C);
MakeCode(0x439390);
MakeCode(0x4393A0);
MakeCode(0x4393AD);
MakeCode(0x4393B6);
MakeCode(0x4393BB);
MakeFunction(0x43934C, 0x4393C2);
MakeUnkn(0x4393C4, 1);
MakeNameEx(0x4393C4, "TPrinter.GetPageHeight", 0x20);
MakeComm(0x4393C4, "'function TPrinter.GetPageHeight:Integer;'");
MakeCode(0x4393C4);
MakeFunction(0x4393C4, 0x4393DD);
MakeUnkn(0x4393E0, 1);
MakeNameEx(0x4393E0, "TPrinter.GetPageWidth", 0x20);
MakeComm(0x4393E0, "'function TPrinter.GetPageWidth:Integer;'");
MakeCode(0x4393E0);
MakeFunction(0x4393E0, 0x4393F9);
MakeUnkn(0x4393FC, 1);
MakeNameEx(0x4393FC, "TPrinter.GetPrinterIndex", 0x20);
MakeComm(0x4393FC, "'function TPrinter.GetPrinterIndex:Integer;'");
MakeCode(0x4393FC);
MakeCode(0x43940C);
MakeFunction(0x4393FC, 0x439411);
MakeUnkn(0x439414, 1);
MakeNameEx(0x439414, "TPrinter.GetPrinters", 0x20);
MakeComm(0x439414, "'function TPrinter.GetPrinters:TStrings;'");
MakeCode(0x439414);
MakeCode(0x43947D);
MakeCode(0x439486);
MakeCode(0x4394AA);
MakeCode(0x4394B7);
MakeCode(0x4394F2);
MakeCode(0x4394FF);
MakeCode(0x439515);
MakeCode(0x439551);
MakeCode(0x439566);
MakeCode(0x4395C3);
MakeCode(0x4395CC);
MakeCode(0x4395D5);
MakeCode(0x4395E2);
MakeCode(0x4395EE);
MakeCode(0x4395F3);
MakeCode(0x4395F5);
MakeCode(0x4395FF);
MakeCode(0x439621);
MakeCode(0x439627);
MakeCode(0x439634);
MakeCode(0x439642);
MakeCode(0x439647);
MakeFunction(0x439414, 0x439652);
MakeUnkn(0x439654, 1);
MakeNameEx(0x439654, "TPrinter.SetToDefaultPrinter", 0x20);
MakeComm(0x439654, "'procedure TPrinter.SetToDefaultPrinter;'");
MakeCode(0x439654);
MakeCode(0x4396E1);
MakeCode(0x4396E6);
MakeCode(0x43972A);
MakeCode(0x43975E);
MakeCode(0x439785);
MakeCode(0x4397A8);
MakeCode(0x4397C5);
MakeCode(0x439846);
MakeCode(0x439852);
MakeCode(0x43985F);
MakeCode(0x439868);
MakeCode(0x43986D);
MakeCode(0x43988A);
MakeCode(0x439897);
MakeCode(0x4398B3);
MakeCode(0x4398B8);
MakeFunction(0x439654, 0x4398C1);
MakeUnkn(0x4398D8, 1);
MakeNameEx(0x4398D8, "TPrinter.FreePrinters", 0x20);
MakeComm(0x4398D8, "'procedure TPrinter.FreePrinters;'");
MakeCode(0x4398D8);
MakeCode(0x4398F5);
MakeCode(0x439908);
MakeCode(0x439910);
MakeFunction(0x4398D8, 0x439914);
MakeUnkn(0x439914, 1);
MakeNameEx(0x439914, "TPrinter.FreeFonts", 0x20);
MakeComm(0x439914, "'procedure TPrinter.FreeFonts;'");
MakeCode(0x439914);
MakeFunction(0x439914, 0x43991D);
MakeUnkn(0x439920, 1);
MakeNameEx(0x439920, "Printer", 0x20);
MakeComm(0x439920, "'function Printer:TPrinter;'");
MakeCode(0x439920);
MakeCode(0x43993A);
MakeFunction(0x439920, 0x439940);
MakeUnkn(0x439940, 1);
MakeNameEx(0x439940, "Finalization_1", 0x20);
MakeComm(0x439940, "'procedure Finalization;'");
MakeCode(0x439940);
MakeCode(0x439963);
MakeCode(0x439970);
MakeCode(0x439971);
MakeCode(0x439976);
MakeFunction(0x439940, 0x43997A);
MakeUnkn(0x43997C, 1);
MakeNameEx(0x43997C, "comdlg32.GetOpenFileNameA", 0x20);
MakeComm(0x43997C, "'function comdlg32.GetOpenFileNameA:BOOL; stdcall;'");
MakeCode(0x43997C);
MakeFunction(0x43997C, 0x439982);
MakeUnkn(0x439984, 1);
MakeNameEx(0x439984, "comdlg32.GetSaveFileNameA", 0x20);
MakeComm(0x439984, "'function comdlg32.GetSaveFileNameA:BOOL; stdcall;'");
MakeCode(0x439984);
MakeFunction(0x439984, 0x43998A);
MakeUnkn(0x43998C, 1);
MakeNameEx(0x43998C, "comdlg32.GetFileTitleA", 0x20);
MakeComm(0x43998C, "'function comdlg32.GetFileTitleA(Title:PAnsiChar; TitleSize:Word):Smallint; stdcall;'");
MakeCode(0x43998C);
MakeFunction(0x43998C, 0x439992);
MakeUnkn(0x439994, 1);
MakeNameEx(0x439994, "comdlg32.ChooseColorA", 0x20);
MakeComm(0x439994, "'function comdlg32.ChooseColorA:BOOL; stdcall;'");
MakeCode(0x439994);
MakeFunction(0x439994, 0x43999A);
MakeUnkn(0x43999C, 1);
MakeNameEx(0x43999C, "comdlg32.PrintDlgA", 0x20);
MakeComm(0x43999C, "'function comdlg32.PrintDlgA:BOOL; stdcall;'");
MakeCode(0x43999C);
MakeFunction(0x43999C, 0x4399A2);
MakeUnkn(0x4399A4, 1);
MakeNameEx(0x4399A4, "comdlg32.PageSetupDlgA", 0x20);
MakeComm(0x4399A4, "'function comdlg32.PageSetupDlgA:BOOL; stdcall;'");
MakeCode(0x4399A4);
MakeFunction(0x4399A4, 0x4399AA);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4399B4, -1);
MakeDword(0x4399B0);
MakeDword(0x4399AC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4399C8, -1);
MakeDword(0x4399C4);
MakeDword(0x4399C0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4399E4, -1);
MakeDword(0x4399E0);
MakeDword(0x4399DC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439A00, -1);
MakeDword(0x4399FC);
MakeDword(0x4399F8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439A18, -1);
MakeDword(0x439A14);
MakeDword(0x439A10);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439A2C, -1);
MakeDword(0x439A28);
MakeDword(0x439A24);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439A44, -1);
MakeDword(0x439A40);
MakeDword(0x439A3C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439A58, -1);
MakeDword(0x439A54);
MakeDword(0x439A50);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439A74, -1);
MakeDword(0x439A70);
MakeDword(0x439A6C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439A88, -1);
MakeDword(0x439A84);
MakeDword(0x439A80);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439AA0, -1);
MakeDword(0x439A9C);
MakeDword(0x439A98);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439AB8, -1);
MakeDword(0x439AB4);
MakeDword(0x439AB0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439AD0, -1);
MakeDword(0x439ACC);
MakeDword(0x439AC8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439AE8, -1);
MakeDword(0x439AE4);
MakeDword(0x439AE0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439B04, -1);
MakeDword(0x439B00);
MakeDword(0x439AFC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439B1C, -1);
MakeDword(0x439B18);
MakeDword(0x439B14);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439B38, -1);
MakeDword(0x439B34);
MakeDword(0x439B30);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439B50, -1);
MakeDword(0x439B4C);
MakeDword(0x439B48);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439B68, -1);
MakeDword(0x439B64);
MakeDword(0x439B60);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439B7C, -1);
MakeDword(0x439B78);
MakeDword(0x439B74);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439B94, -1);
MakeDword(0x439B90);
MakeDword(0x439B8C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439BAC, -1);
MakeDword(0x439BA8);
MakeDword(0x439BA4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439BC0, -1);
MakeDword(0x439BBC);
MakeDword(0x439BB8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439BDC, -1);
MakeDword(0x439BD8);
MakeDword(0x439BD4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439BF8, -1);
MakeDword(0x439BF4);
MakeDword(0x439BF0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439C0C, -1);
MakeDword(0x439C08);
MakeDword(0x439C04);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439C24, -1);
MakeDword(0x439C20);
MakeDword(0x439C1C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439C38, -1);
MakeDword(0x439C34);
MakeDword(0x439C30);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439C4C, -1);
MakeDword(0x439C48);
MakeDword(0x439C44);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439C64, -1);
MakeDword(0x439C60);
MakeDword(0x439C5C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439C78, -1);
MakeDword(0x439C74);
MakeDword(0x439C70);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439C90, -1);
MakeDword(0x439C8C);
MakeDword(0x439C88);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439CA4, -1);
MakeDword(0x439CA0);
MakeDword(0x439C9C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439CBC, -1);
MakeDword(0x439CB8);
MakeDword(0x439CB4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439CD0, -1);
MakeDword(0x439CCC);
MakeDword(0x439CC8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439CE4, -1);
MakeDword(0x439CE0);
MakeDword(0x439CDC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439CF8, -1);
MakeDword(0x439CF4);
MakeDword(0x439CF0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439D0C, -1);
MakeDword(0x439D08);
MakeDword(0x439D04);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439D24, -1);
MakeDword(0x439D20);
MakeDword(0x439D1C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439D38, -1);
MakeDword(0x439D34);
MakeDword(0x439D30);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439D50, -1);
MakeDword(0x439D4C);
MakeDword(0x439D48);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439D68, -1);
MakeDword(0x439D64);
MakeDword(0x439D60);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439D84, -1);
MakeDword(0x439D80);
MakeDword(0x439D7C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439D9C, -1);
MakeDword(0x439D98);
MakeDword(0x439D94);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439DB0, -1);
MakeDword(0x439DAC);
MakeDword(0x439DA8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439DC8, -1);
MakeDword(0x439DC4);
MakeDword(0x439DC0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439DE0, -1);
MakeDword(0x439DDC);
MakeDword(0x439DD8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439DFC, -1);
MakeDword(0x439DF8);
MakeDword(0x439DF4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439E10, -1);
MakeDword(0x439E0C);
MakeDword(0x439E08);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439E24, -1);
MakeDword(0x439E20);
MakeDword(0x439E1C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439E3C, -1);
MakeDword(0x439E38);
MakeDword(0x439E34);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439E54, -1);
MakeDword(0x439E50);
MakeDword(0x439E4C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439E70, -1);
MakeDword(0x439E6C);
MakeDword(0x439E68);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439E94, -1);
MakeDword(0x439E90);
MakeDword(0x439E8C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439EA8, -1);
MakeDword(0x439EA4);
MakeDword(0x439EA0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439EC4, -1);
MakeDword(0x439EC0);
MakeDword(0x439EBC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439EE0, -1);
MakeDword(0x439EDC);
MakeDword(0x439ED8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439EF8, -1);
MakeDword(0x439EF4);
MakeDword(0x439EF0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439F10, -1);
MakeDword(0x439F0C);
MakeDword(0x439F08);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439F28, -1);
MakeDword(0x439F24);
MakeDword(0x439F20);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439F40, -1);
MakeDword(0x439F3C);
MakeDword(0x439F38);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439F58, -1);
MakeDword(0x439F54);
MakeDword(0x439F50);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439F6C, -1);
MakeDword(0x439F68);
MakeDword(0x439F64);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439F84, -1);
MakeDword(0x439F80);
MakeDword(0x439F7C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439F98, -1);
MakeDword(0x439F94);
MakeDword(0x439F90);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439FB4, -1);
MakeDword(0x439FB0);
MakeDword(0x439FAC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439FCC, -1);
MakeDword(0x439FC8);
MakeDword(0x439FC4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x439FE4, -1);
MakeDword(0x439FE0);
MakeDword(0x439FDC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A004, -1);
MakeDword(0x43A000);
MakeDword(0x439FFC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A020, -1);
MakeDword(0x43A01C);
MakeDword(0x43A018);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A03C, -1);
MakeDword(0x43A038);
MakeDword(0x43A034);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A054, -1);
MakeDword(0x43A050);
MakeDword(0x43A04C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A070, -1);
MakeDword(0x43A06C);
MakeDword(0x43A068);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A088, -1);
MakeDword(0x43A084);
MakeDword(0x43A080);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A0A0, -1);
MakeDword(0x43A09C);
MakeDword(0x43A098);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A0B4, -1);
MakeDword(0x43A0B0);
MakeDword(0x43A0AC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A0D0, -1);
MakeDword(0x43A0CC);
MakeDword(0x43A0C8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A0F0, -1);
MakeDword(0x43A0EC);
MakeDword(0x43A0E8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A10C, -1);
MakeDword(0x43A108);
MakeDword(0x43A104);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A128, -1);
MakeDword(0x43A124);
MakeDword(0x43A120);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A144, -1);
MakeDword(0x43A140);
MakeDword(0x43A13C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A15C, -1);
MakeDword(0x43A158);
MakeDword(0x43A154);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A174, -1);
MakeDword(0x43A170);
MakeDword(0x43A16C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A190, -1);
MakeDword(0x43A18C);
MakeDword(0x43A188);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A1AC, -1);
MakeDword(0x43A1A8);
MakeDword(0x43A1A4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A1C4, -1);
MakeDword(0x43A1C0);
MakeDword(0x43A1BC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A1D8, -1);
MakeDword(0x43A1D4);
MakeDword(0x43A1D0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A1F8, -1);
MakeDword(0x43A1F4);
MakeDword(0x43A1F0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A210, -1);
MakeDword(0x43A20C);
MakeDword(0x43A208);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A224, -1);
MakeDword(0x43A220);
MakeDword(0x43A21C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A23C, -1);
MakeDword(0x43A238);
MakeDword(0x43A234);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A254, -1);
MakeDword(0x43A250);
MakeDword(0x43A24C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A26C, -1);
MakeDword(0x43A268);
MakeDword(0x43A264);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A284, -1);
MakeDword(0x43A280);
MakeDword(0x43A27C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A2A0, -1);
MakeDword(0x43A29C);
MakeDword(0x43A298);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A2BC, -1);
MakeDword(0x43A2B8);
MakeDword(0x43A2B4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A2D4, -1);
MakeDword(0x43A2D0);
MakeDword(0x43A2CC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A2EC, -1);
MakeDword(0x43A2E8);
MakeDword(0x43A2E4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A300, -1);
MakeDword(0x43A2FC);
MakeDword(0x43A2F8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A31C, -1);
MakeDword(0x43A318);
MakeDword(0x43A314);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A334, -1);
MakeDword(0x43A330);
MakeDword(0x43A32C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A348, -1);
MakeDword(0x43A344);
MakeDword(0x43A340);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A35C, -1);
MakeDword(0x43A358);
MakeDword(0x43A354);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A374, -1);
MakeDword(0x43A370);
MakeDword(0x43A36C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A38C, -1);
MakeDword(0x43A388);
MakeDword(0x43A384);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A3A4, -1);
MakeDword(0x43A3A0);
MakeDword(0x43A39C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A3C0, -1);
MakeDword(0x43A3BC);
MakeDword(0x43A3B8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A3E0, -1);
MakeDword(0x43A3DC);
MakeDword(0x43A3D8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A3FC, -1);
MakeDword(0x43A3F8);
MakeDword(0x43A3F4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A414, -1);
MakeDword(0x43A410);
MakeDword(0x43A40C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A430, -1);
MakeDword(0x43A42C);
MakeDword(0x43A428);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A44C, -1);
MakeDword(0x43A448);
MakeDword(0x43A444);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A460, -1);
MakeDword(0x43A45C);
MakeDword(0x43A458);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A478, -1);
MakeDword(0x43A474);
MakeDword(0x43A470);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A490, -1);
MakeDword(0x43A48C);
MakeDword(0x43A488);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A4A4, -1);
MakeDword(0x43A4A0);
MakeDword(0x43A49C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A4B8, -1);
MakeDword(0x43A4B4);
MakeDword(0x43A4B0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A4CC, -1);
MakeDword(0x43A4C8);
MakeDword(0x43A4C4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A4E4, -1);
MakeDword(0x43A4E0);
MakeDword(0x43A4DC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A4FC, -1);
MakeDword(0x43A4F8);
MakeDword(0x43A4F4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A510, -1);
MakeDword(0x43A50C);
MakeDword(0x43A508);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A52C, -1);
MakeDword(0x43A528);
MakeDword(0x43A524);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A54C, -1);
MakeDword(0x43A548);
MakeDword(0x43A544);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A568, -1);
MakeDword(0x43A564);
MakeDword(0x43A560);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A57C, -1);
MakeDword(0x43A578);
MakeDword(0x43A574);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A594, -1);
MakeDword(0x43A590);
MakeDword(0x43A58C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A5A8, -1);
MakeDword(0x43A5A4);
MakeDword(0x43A5A0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A5C0, -1);
MakeDword(0x43A5BC);
MakeDword(0x43A5B8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A5D8, -1);
MakeDword(0x43A5D4);
MakeDword(0x43A5D0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A5F0, -1);
MakeDword(0x43A5EC);
MakeDword(0x43A5E8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A608, -1);
MakeDword(0x43A604);
MakeDword(0x43A600);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A61C, -1);
MakeDword(0x43A618);
MakeDword(0x43A614);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A634, -1);
MakeDword(0x43A630);
MakeDword(0x43A62C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A64C, -1);
MakeDword(0x43A648);
MakeDword(0x43A644);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A668, -1);
MakeDword(0x43A664);
MakeDword(0x43A660);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A684, -1);
MakeDword(0x43A680);
MakeDword(0x43A67C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A69C, -1);
MakeDword(0x43A698);
MakeDword(0x43A694);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43A6B4, -1);
MakeDword(0x43A6B0);
MakeDword(0x43A6AC);
MakeCode(0x43A6C0);
MakeCode(0x43A6EE);
MakeCode(0x43A6FB);
MakeCode(0x43A6FC);
MakeCode(0x43A701);
MakeFunction(0x43A6C0, 0x43A705);
MakeUnkn(0x43A708, 1);
MakeNameEx(0x43A708, "VMT_43A708_TPaintBox", 0);
MakeDword(0x43A708);
MakeDword(0x43A70C);
MakeDword(0x43A710);
MakeDword(0x43A714);
MakeDword(0x43A718);
MakeDword(0x43A71C);
MakeDword(0x43A720);
MakeDword(0x43A724);
MakeDword(0x43A728);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43A7E8, 0x43A7F2);
MakeDword(0x43A72C);
MakeDword(0x43A730);
MakeDword(0x43A734);
MakeDword(0x43A738);
MakeDword(0x43A73C);
MakeDword(0x43A740);
MakeDword(0x43A744);
MakeDword(0x43A748);
MakeDword(0x43A74C);
MakeDword(0x43A750);
MakeComm(0x43A754, "'+0'");
MakeDword(0x43A754);
MakeComm(0x43A758, "'+4'");
MakeDword(0x43A758);
MakeComm(0x43A75C, "'+8'");
MakeDword(0x43A75C);
MakeComm(0x43A760, "'+C'");
MakeDword(0x43A760);
MakeComm(0x43A764, "'+10'");
MakeDword(0x43A764);
MakeComm(0x43A768, "'+14'");
MakeDword(0x43A768);
MakeComm(0x43A76C, "'+18'");
MakeDword(0x43A76C);
MakeComm(0x43A770, "'+1C'");
MakeDword(0x43A770);
MakeComm(0x43A774, "'+20'");
MakeDword(0x43A774);
MakeComm(0x43A778, "'+24'");
MakeDword(0x43A778);
MakeComm(0x43A77C, "'+28'");
MakeDword(0x43A77C);
MakeComm(0x43A780, "'+2C'");
MakeDword(0x43A780);
MakeComm(0x43A784, "'+30'");
MakeDword(0x43A784);
MakeComm(0x43A788, "'+34'");
MakeDword(0x43A788);
MakeComm(0x43A78C, "'+38'");
MakeDword(0x43A78C);
MakeComm(0x43A790, "'+3C'");
MakeDword(0x43A790);
MakeComm(0x43A794, "'+40'");
MakeDword(0x43A794);
MakeComm(0x43A798, "'+44'");
MakeDword(0x43A798);
MakeComm(0x43A79C, "'+48'");
MakeDword(0x43A79C);
MakeComm(0x43A7A0, "'+4C'");
MakeDword(0x43A7A0);
MakeComm(0x43A7A4, "'+50'");
MakeDword(0x43A7A4);
MakeComm(0x43A7A8, "'+54'");
MakeDword(0x43A7A8);
MakeComm(0x43A7AC, "'+58'");
MakeDword(0x43A7AC);
MakeComm(0x43A7B0, "'+5C'");
MakeDword(0x43A7B0);
MakeComm(0x43A7B4, "'+60'");
MakeDword(0x43A7B4);
MakeComm(0x43A7B8, "'+64'");
MakeDword(0x43A7B8);
MakeComm(0x43A7BC, "'+68'");
MakeDword(0x43A7BC);
MakeComm(0x43A7C0, "'+6C'");
MakeDword(0x43A7C0);
MakeComm(0x43A7C4, "'+70'");
MakeDword(0x43A7C4);
MakeComm(0x43A7C8, "'+74'");
MakeDword(0x43A7C8);
MakeComm(0x43A7CC, "'+78'");
MakeDword(0x43A7CC);
MakeComm(0x43A7D0, "'+7C'");
MakeDword(0x43A7D0);
MakeComm(0x43A7D4, "'+80'");
MakeDword(0x43A7D4);
MakeComm(0x43A7D8, "'+84'");
MakeDword(0x43A7D8);
MakeComm(0x43A7DC, "'+88'");
MakeDword(0x43A7DC);
MakeComm(0x43A7E0, "'+8C'");
MakeDword(0x43A7E0);
MakeComm(0x43A7E4, "'+90'");
MakeDword(0x43A7E4);
MakeUnkn(0x43A7F4, 1);
MakeNameEx(0x43A7F4, "RTTI_43A7F4_Class_TPaintBox", 0);
MakeDword(0x43A7F4);
MakeUnkn(0x43A7F8, 1);
MakeNameEx(0x43A7F8, "", 0);
MakeByte(0x43A7F8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43A7F9, 0x43A803);
MakeDword(0x43A803);
MakeDword(0x43A807);
MakeWord(0x43A80B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43A80D, 0x43A816);
MakeWord(0x43A816);
MakeDword(0x43A818);
MakeDword(0x43A81C);
MakeDword(0x43A820);
MakeDword(0x43A824);
MakeDword(0x43A828);
MakeDword(0x43A82C);
MakeWord(0x43A830);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43A832, 0x43A838);
MakeDword(0x43A838);
MakeDword(0x43A83C);
MakeDword(0x43A840);
MakeDword(0x43A844);
MakeDword(0x43A848);
MakeDword(0x43A84C);
MakeWord(0x43A850);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43A852, 0x43A85A);
MakeDword(0x43A85A);
MakeDword(0x43A85E);
MakeDword(0x43A862);
MakeDword(0x43A866);
MakeDword(0x43A86A);
MakeDword(0x43A86E);
MakeWord(0x43A872);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43A874, 0x43A87A);
MakeDword(0x43A87A);
MakeDword(0x43A87E);
MakeDword(0x43A882);
MakeDword(0x43A886);
MakeDword(0x43A88A);
MakeDword(0x43A88E);
MakeWord(0x43A892);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43A894, 0x43A8A0);
MakeDword(0x43A8A0);
MakeDword(0x43A8A4);
MakeDword(0x43A8A8);
MakeDword(0x43A8AC);
MakeDword(0x43A8B0);
MakeDword(0x43A8B4);
MakeWord(0x43A8B8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43A8BA, 0x43A8C5);
MakeDword(0x43A8C5);
MakeDword(0x43A8C9);
MakeDword(0x43A8CD);
MakeDword(0x43A8D1);
MakeDword(0x43A8D5);
MakeDword(0x43A8D9);
MakeWord(0x43A8DD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43A8DF, 0x43A8E8);
MakeDword(0x43A8E8);
MakeDword(0x43A8EC);
MakeDword(0x43A8F0);
MakeDword(0x43A8F4);
MakeDword(0x43A8F8);
MakeDword(0x43A8FC);
MakeWord(0x43A900);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43A902, 0x43A90B);
MakeDword(0x43A90B);
MakeDword(0x43A90F);
MakeDword(0x43A913);
MakeDword(0x43A917);
MakeDword(0x43A91B);
MakeDword(0x43A91F);
MakeWord(0x43A923);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43A925, 0x43A92D);
MakeDword(0x43A92D);
MakeDword(0x43A931);
MakeDword(0x43A935);
MakeDword(0x43A939);
MakeDword(0x43A93D);
MakeDword(0x43A941);
MakeWord(0x43A945);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43A947, 0x43A94C);
MakeDword(0x43A94C);
MakeDword(0x43A950);
MakeDword(0x43A954);
MakeDword(0x43A958);
MakeDword(0x43A95C);
MakeDword(0x43A960);
MakeWord(0x43A964);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43A966, 0x43A972);
MakeDword(0x43A972);
MakeDword(0x43A976);
MakeDword(0x43A97A);
MakeDword(0x43A97E);
MakeDword(0x43A982);
MakeDword(0x43A986);
MakeWord(0x43A98A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43A98C, 0x43A997);
MakeDword(0x43A997);
MakeDword(0x43A99B);
MakeDword(0x43A99F);
MakeDword(0x43A9A3);
MakeDword(0x43A9A7);
MakeDword(0x43A9AB);
MakeWord(0x43A9AF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43A9B1, 0x43A9C0);
MakeDword(0x43A9C0);
MakeDword(0x43A9C4);
MakeDword(0x43A9C8);
MakeDword(0x43A9CC);
MakeDword(0x43A9D0);
MakeDword(0x43A9D4);
MakeWord(0x43A9D8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43A9DA, 0x43A9E4);
MakeDword(0x43A9E4);
MakeDword(0x43A9E8);
MakeDword(0x43A9EC);
MakeDword(0x43A9F0);
MakeDword(0x43A9F4);
MakeDword(0x43A9F8);
MakeWord(0x43A9FC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43A9FE, 0x43AA07);
MakeDword(0x43AA07);
MakeDword(0x43AA0B);
MakeDword(0x43AA0F);
MakeDword(0x43AA13);
MakeDword(0x43AA17);
MakeDword(0x43AA1B);
MakeWord(0x43AA1F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43AA21, 0x43AA29);
MakeDword(0x43AA29);
MakeDword(0x43AA2D);
MakeDword(0x43AA31);
MakeDword(0x43AA35);
MakeDword(0x43AA39);
MakeDword(0x43AA3D);
MakeWord(0x43AA41);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43AA43, 0x43AA4B);
MakeDword(0x43AA4B);
MakeDword(0x43AA4F);
MakeDword(0x43AA53);
MakeDword(0x43AA57);
MakeDword(0x43AA5B);
MakeDword(0x43AA5F);
MakeWord(0x43AA63);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43AA65, 0x43AA74);
MakeDword(0x43AA74);
MakeDword(0x43AA78);
MakeDword(0x43AA7C);
MakeDword(0x43AA80);
MakeDword(0x43AA84);
MakeDword(0x43AA88);
MakeWord(0x43AA8C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43AA8E, 0x43AA99);
MakeDword(0x43AA99);
MakeDword(0x43AA9D);
MakeDword(0x43AAA1);
MakeDword(0x43AAA5);
MakeDword(0x43AAA9);
MakeDword(0x43AAAD);
MakeWord(0x43AAB1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43AAB3, 0x43AABE);
MakeDword(0x43AABE);
MakeDword(0x43AAC2);
MakeDword(0x43AAC6);
MakeDword(0x43AACA);
MakeDword(0x43AACE);
MakeDword(0x43AAD2);
MakeWord(0x43AAD6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43AAD8, 0x43AAE3);
MakeDword(0x43AAE3);
MakeDword(0x43AAE7);
MakeDword(0x43AAEB);
MakeDword(0x43AAEF);
MakeDword(0x43AAF3);
MakeDword(0x43AAF7);
MakeWord(0x43AAFB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43AAFD, 0x43AB07);
MakeDword(0x43AB07);
MakeDword(0x43AB0B);
MakeDword(0x43AB0F);
MakeDword(0x43AB13);
MakeDword(0x43AB17);
MakeDword(0x43AB1B);
MakeWord(0x43AB1F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43AB21, 0x43AB2B);
MakeDword(0x43AB2B);
MakeDword(0x43AB2F);
MakeDword(0x43AB33);
MakeDword(0x43AB37);
MakeDword(0x43AB3B);
MakeDword(0x43AB3F);
MakeWord(0x43AB43);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43AB45, 0x43AB55);
MakeDword(0x43AB55);
MakeDword(0x43AB59);
MakeDword(0x43AB5D);
MakeDword(0x43AB61);
MakeDword(0x43AB65);
MakeDword(0x43AB69);
MakeWord(0x43AB6D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43AB6F, 0x43AB7B);
MakeDword(0x43AB7B);
MakeDword(0x43AB7F);
MakeDword(0x43AB83);
MakeDword(0x43AB87);
MakeDword(0x43AB8B);
MakeDword(0x43AB8F);
MakeWord(0x43AB93);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43AB95, 0x43ABA2);
MakeDword(0x43ABA2);
MakeDword(0x43ABA6);
MakeDword(0x43ABAA);
MakeDword(0x43ABAE);
MakeDword(0x43ABB2);
MakeDword(0x43ABB6);
MakeWord(0x43ABBA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43ABBC, 0x43ABC9);
MakeDword(0x43ABC9);
MakeDword(0x43ABCD);
MakeDword(0x43ABD1);
MakeDword(0x43ABD5);
MakeDword(0x43ABD9);
MakeDword(0x43ABDD);
MakeWord(0x43ABE1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43ABE3, 0x43ABEF);
MakeDword(0x43ABEF);
MakeDword(0x43ABF3);
MakeDword(0x43ABF7);
MakeDword(0x43ABFB);
MakeDword(0x43ABFF);
MakeDword(0x43AC03);
MakeWord(0x43AC07);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43AC09, 0x43AC13);
MakeDword(0x43AC13);
MakeDword(0x43AC17);
MakeDword(0x43AC1B);
MakeDword(0x43AC1F);
MakeDword(0x43AC23);
MakeDword(0x43AC27);
MakeWord(0x43AC2B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43AC2D, 0x43AC35);
MakeDword(0x43AC35);
MakeDword(0x43AC39);
MakeDword(0x43AC3D);
MakeDword(0x43AC41);
MakeDword(0x43AC45);
MakeDword(0x43AC49);
MakeWord(0x43AC4D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43AC4F, 0x43AC5B);
MakeDword(0x43AC5B);
MakeDword(0x43AC5F);
MakeDword(0x43AC63);
MakeDword(0x43AC67);
MakeDword(0x43AC6B);
MakeDword(0x43AC6F);
MakeWord(0x43AC73);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43AC75, 0x43AC81);
MakeUnkn(0x43AC84, 1);
MakeNameEx(0x43AC84, "VMT_43AC84_TImage", 0);
MakeDword(0x43AC84);
MakeDword(0x43AC88);
MakeDword(0x43AC8C);
MakeDword(0x43AC90);
MakeDword(0x43AC94);
MakeDword(0x43AC98);
MakeDword(0x43AC9C);
MakeDword(0x43ACA0);
MakeUnkn(0x43AD64, 1);
MakeNameEx(0x43AD64, "TImage_DynamicTable", 0);
MakeWord(0x43AD64);
MakeWord(0x43AD66);
MakeWord(0x43AD68);
MakeDword(0x43AD6A);
MakeDword(0x43AD6E);
MakeDword(0x43ACA4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43AD72, 0x43AD79);
MakeDword(0x43ACA8);
MakeDword(0x43ACAC);
MakeDword(0x43ACB0);
MakeDword(0x43ACB4);
MakeDword(0x43ACB8);
MakeDword(0x43ACBC);
MakeDword(0x43ACC0);
MakeDword(0x43ACC4);
MakeDword(0x43ACC8);
MakeDword(0x43ACCC);
MakeComm(0x43ACD0, "'+0'");
MakeDword(0x43ACD0);
MakeComm(0x43ACD4, "'+4'");
MakeDword(0x43ACD4);
MakeComm(0x43ACD8, "'+8'");
MakeDword(0x43ACD8);
MakeComm(0x43ACDC, "'+C'");
MakeDword(0x43ACDC);
MakeComm(0x43ACE0, "'+10'");
MakeDword(0x43ACE0);
MakeComm(0x43ACE4, "'+14'");
MakeDword(0x43ACE4);
MakeComm(0x43ACE8, "'+18'");
MakeDword(0x43ACE8);
MakeComm(0x43ACEC, "'+1C'");
MakeDword(0x43ACEC);
MakeComm(0x43ACF0, "'+20'");
MakeDword(0x43ACF0);
MakeComm(0x43ACF4, "'+24'");
MakeDword(0x43ACF4);
MakeComm(0x43ACF8, "'+28'");
MakeDword(0x43ACF8);
MakeComm(0x43ACFC, "'+2C'");
MakeDword(0x43ACFC);
MakeComm(0x43AD00, "'+30'");
MakeDword(0x43AD00);
MakeComm(0x43AD04, "'+34'");
MakeDword(0x43AD04);
MakeComm(0x43AD08, "'+38'");
MakeDword(0x43AD08);
MakeComm(0x43AD0C, "'+3C'");
MakeDword(0x43AD0C);
MakeComm(0x43AD10, "'+40'");
MakeDword(0x43AD10);
MakeComm(0x43AD14, "'+44'");
MakeDword(0x43AD14);
MakeComm(0x43AD18, "'+48'");
MakeDword(0x43AD18);
MakeComm(0x43AD1C, "'+4C'");
MakeDword(0x43AD1C);
MakeComm(0x43AD20, "'+50'");
MakeDword(0x43AD20);
MakeComm(0x43AD24, "'+54'");
MakeDword(0x43AD24);
MakeComm(0x43AD28, "'+58'");
MakeDword(0x43AD28);
MakeComm(0x43AD2C, "'+5C'");
MakeDword(0x43AD2C);
MakeComm(0x43AD30, "'+60'");
MakeDword(0x43AD30);
MakeComm(0x43AD34, "'+64'");
MakeDword(0x43AD34);
MakeComm(0x43AD38, "'+68'");
MakeDword(0x43AD38);
MakeComm(0x43AD3C, "'+6C'");
MakeDword(0x43AD3C);
MakeComm(0x43AD40, "'+70'");
MakeDword(0x43AD40);
MakeComm(0x43AD44, "'+74'");
MakeDword(0x43AD44);
MakeComm(0x43AD48, "'+78'");
MakeDword(0x43AD48);
MakeComm(0x43AD4C, "'+7C'");
MakeDword(0x43AD4C);
MakeComm(0x43AD50, "'+80'");
MakeDword(0x43AD50);
MakeComm(0x43AD54, "'+84'");
MakeDword(0x43AD54);
MakeComm(0x43AD58, "'+88'");
MakeDword(0x43AD58);
MakeComm(0x43AD5C, "'+8C'");
MakeDword(0x43AD5C);
MakeComm(0x43AD60, "'+90'");
MakeDword(0x43AD60);
MakeUnkn(0x43AD7C, 1);
MakeNameEx(0x43AD7C, "RTTI_43AD7C_Class_TImage", 0);
MakeDword(0x43AD7C);
MakeUnkn(0x43AD80, 1);
MakeNameEx(0x43AD80, "", 0);
MakeByte(0x43AD80);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43AD81, 0x43AD88);
MakeDword(0x43AD88);
MakeDword(0x43AD8C);
MakeWord(0x43AD90);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43AD92, 0x43AD9B);
MakeWord(0x43AD9B);
MakeDword(0x43AD9D);
MakeDword(0x43ADA1);
MakeDword(0x43ADA5);
MakeDword(0x43ADA9);
MakeDword(0x43ADAD);
MakeDword(0x43ADB1);
MakeWord(0x43ADB5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43ADB7, 0x43ADBD);
MakeDword(0x43ADBD);
MakeDword(0x43ADC1);
MakeDword(0x43ADC5);
MakeDword(0x43ADC9);
MakeDword(0x43ADCD);
MakeDword(0x43ADD1);
MakeWord(0x43ADD5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43ADD7, 0x43ADDF);
MakeDword(0x43ADDF);
MakeDword(0x43ADE3);
MakeDword(0x43ADE7);
MakeDword(0x43ADEB);
MakeDword(0x43ADEF);
MakeDword(0x43ADF3);
MakeWord(0x43ADF7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43ADF9, 0x43AE02);
MakeDword(0x43AE02);
MakeDword(0x43AE06);
MakeDword(0x43AE0A);
MakeDword(0x43AE0E);
MakeDword(0x43AE12);
MakeDword(0x43AE16);
MakeWord(0x43AE1A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43AE1C, 0x43AE23);
MakeDword(0x43AE23);
MakeDword(0x43AE27);
MakeDword(0x43AE2B);
MakeDword(0x43AE2F);
MakeDword(0x43AE33);
MakeDword(0x43AE37);
MakeWord(0x43AE3B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43AE3D, 0x43AE49);
MakeDword(0x43AE49);
MakeDword(0x43AE4D);
MakeDword(0x43AE51);
MakeDword(0x43AE55);
MakeDword(0x43AE59);
MakeDword(0x43AE5D);
MakeWord(0x43AE61);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43AE63, 0x43AE6E);
MakeDword(0x43AE6E);
MakeDword(0x43AE72);
MakeDword(0x43AE76);
MakeDword(0x43AE7A);
MakeDword(0x43AE7E);
MakeDword(0x43AE82);
MakeWord(0x43AE86);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43AE88, 0x43AE91);
MakeDword(0x43AE91);
MakeDword(0x43AE95);
MakeDword(0x43AE99);
MakeDword(0x43AE9D);
MakeDword(0x43AEA1);
MakeDword(0x43AEA5);
MakeWord(0x43AEA9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43AEAB, 0x43AEB4);
MakeDword(0x43AEB4);
MakeDword(0x43AEB8);
MakeDword(0x43AEBC);
MakeDword(0x43AEC0);
MakeDword(0x43AEC4);
MakeDword(0x43AEC8);
MakeWord(0x43AECC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43AECE, 0x43AED6);
MakeDword(0x43AED6);
MakeDword(0x43AEDA);
MakeDword(0x43AEDE);
MakeDword(0x43AEE2);
MakeDword(0x43AEE6);
MakeDword(0x43AEEA);
MakeWord(0x43AEEE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43AEF0, 0x43AF03);
MakeDword(0x43AF03);
MakeDword(0x43AF07);
MakeDword(0x43AF0B);
MakeDword(0x43AF0F);
MakeDword(0x43AF13);
MakeDword(0x43AF17);
MakeWord(0x43AF1B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43AF1D, 0x43AF2C);
MakeDword(0x43AF2C);
MakeDword(0x43AF30);
MakeDword(0x43AF34);
MakeDword(0x43AF38);
MakeDword(0x43AF3C);
MakeDword(0x43AF40);
MakeWord(0x43AF44);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43AF46, 0x43AF4E);
MakeDword(0x43AF4E);
MakeDword(0x43AF52);
MakeDword(0x43AF56);
MakeDword(0x43AF5A);
MakeDword(0x43AF5E);
MakeDword(0x43AF62);
MakeWord(0x43AF66);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43AF68, 0x43AF72);
MakeDword(0x43AF72);
MakeDword(0x43AF76);
MakeDword(0x43AF7A);
MakeDword(0x43AF7E);
MakeDword(0x43AF82);
MakeDword(0x43AF86);
MakeWord(0x43AF8A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43AF8C, 0x43AF99);
MakeDword(0x43AF99);
MakeDword(0x43AF9D);
MakeDword(0x43AFA1);
MakeDword(0x43AFA5);
MakeDword(0x43AFA9);
MakeDword(0x43AFAD);
MakeWord(0x43AFB1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43AFB3, 0x43AFBC);
MakeDword(0x43AFBC);
MakeDword(0x43AFC0);
MakeDword(0x43AFC4);
MakeDword(0x43AFC8);
MakeDword(0x43AFCC);
MakeDword(0x43AFD0);
MakeWord(0x43AFD4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43AFD6, 0x43AFDE);
MakeDword(0x43AFDE);
MakeDword(0x43AFE2);
MakeDword(0x43AFE6);
MakeDword(0x43AFEA);
MakeDword(0x43AFEE);
MakeDword(0x43AFF2);
MakeWord(0x43AFF6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43AFF8, 0x43B004);
MakeDword(0x43B004);
MakeDword(0x43B008);
MakeDword(0x43B00C);
MakeDword(0x43B010);
MakeDword(0x43B014);
MakeDword(0x43B018);
MakeWord(0x43B01C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B01E, 0x43B026);
MakeDword(0x43B026);
MakeDword(0x43B02A);
MakeDword(0x43B02E);
MakeDword(0x43B032);
MakeDword(0x43B036);
MakeDword(0x43B03A);
MakeWord(0x43B03E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B040, 0x43B048);
MakeDword(0x43B048);
MakeDword(0x43B04C);
MakeDword(0x43B050);
MakeDword(0x43B054);
MakeDword(0x43B058);
MakeDword(0x43B05C);
MakeWord(0x43B060);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B062, 0x43B071);
MakeDword(0x43B071);
MakeDword(0x43B075);
MakeDword(0x43B079);
MakeDword(0x43B07D);
MakeDword(0x43B081);
MakeDword(0x43B085);
MakeWord(0x43B089);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B08B, 0x43B096);
MakeDword(0x43B096);
MakeDword(0x43B09A);
MakeDword(0x43B09E);
MakeDword(0x43B0A2);
MakeDword(0x43B0A6);
MakeDword(0x43B0AA);
MakeWord(0x43B0AE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B0B0, 0x43B0BB);
MakeDword(0x43B0BB);
MakeDword(0x43B0BF);
MakeDword(0x43B0C3);
MakeDword(0x43B0C7);
MakeDword(0x43B0CB);
MakeDword(0x43B0CF);
MakeWord(0x43B0D3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B0D5, 0x43B0E0);
MakeDword(0x43B0E0);
MakeDword(0x43B0E4);
MakeDword(0x43B0E8);
MakeDword(0x43B0EC);
MakeDword(0x43B0F0);
MakeDword(0x43B0F4);
MakeWord(0x43B0F8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B0FA, 0x43B104);
MakeDword(0x43B104);
MakeDword(0x43B108);
MakeDword(0x43B10C);
MakeDword(0x43B110);
MakeDword(0x43B114);
MakeDword(0x43B118);
MakeWord(0x43B11C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B11E, 0x43B128);
MakeDword(0x43B128);
MakeDword(0x43B12C);
MakeDword(0x43B130);
MakeDword(0x43B134);
MakeDword(0x43B138);
MakeDword(0x43B13C);
MakeWord(0x43B140);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B142, 0x43B152);
MakeDword(0x43B152);
MakeDword(0x43B156);
MakeDword(0x43B15A);
MakeDword(0x43B15E);
MakeDword(0x43B162);
MakeDword(0x43B166);
MakeWord(0x43B16A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B16C, 0x43B178);
MakeDword(0x43B178);
MakeDword(0x43B17C);
MakeDword(0x43B180);
MakeDword(0x43B184);
MakeDword(0x43B188);
MakeDword(0x43B18C);
MakeWord(0x43B190);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B192, 0x43B19F);
MakeDword(0x43B19F);
MakeDword(0x43B1A3);
MakeDword(0x43B1A7);
MakeDword(0x43B1AB);
MakeDword(0x43B1AF);
MakeDword(0x43B1B3);
MakeWord(0x43B1B7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B1B9, 0x43B1C6);
MakeDword(0x43B1C6);
MakeDword(0x43B1CA);
MakeDword(0x43B1CE);
MakeDword(0x43B1D2);
MakeDword(0x43B1D6);
MakeDword(0x43B1DA);
MakeWord(0x43B1DE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B1E0, 0x43B1EC);
MakeDword(0x43B1EC);
MakeDword(0x43B1F0);
MakeDword(0x43B1F4);
MakeDword(0x43B1F8);
MakeDword(0x43B1FC);
MakeDword(0x43B200);
MakeWord(0x43B204);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B206, 0x43B210);
MakeDword(0x43B210);
MakeDword(0x43B214);
MakeDword(0x43B218);
MakeDword(0x43B21C);
MakeDword(0x43B220);
MakeDword(0x43B224);
MakeWord(0x43B228);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B22A, 0x43B235);
MakeDword(0x43B235);
MakeDword(0x43B239);
MakeDword(0x43B23D);
MakeDword(0x43B241);
MakeDword(0x43B245);
MakeDword(0x43B249);
MakeWord(0x43B24D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B24F, 0x43B25B);
MakeDword(0x43B25B);
MakeDword(0x43B25F);
MakeDword(0x43B263);
MakeDword(0x43B267);
MakeDword(0x43B26B);
MakeDword(0x43B26F);
MakeWord(0x43B273);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B275, 0x43B281);
MakeUnkn(0x43B284, 1);
MakeNameEx(0x43B284, "RTTI_43B284_Enumeration_TBevelStyle", 0);
MakeDword(0x43B284);
MakeUnkn(0x43B288, 1);
MakeNameEx(0x43B288, "", 0);
MakeByte(0x43B288);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B289, 0x43B295);
MakeByte(0x43B295);
MakeDword(0x43B296);
MakeDword(0x43B29A);
MakeDword(0x43B29E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B2A2, 0x43B2AC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B2AC, 0x43B2B5);
MakeUnkn(0x43B2C0, 1);
MakeNameEx(0x43B2C0, "RTTI_43B2C0_Enumeration_TBevelShape", 0);
MakeDword(0x43B2C0);
MakeUnkn(0x43B2C4, 1);
MakeNameEx(0x43B2C4, "", 0);
MakeByte(0x43B2C4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B2C5, 0x43B2D1);
MakeByte(0x43B2D1);
MakeDword(0x43B2D2);
MakeDword(0x43B2D6);
MakeDword(0x43B2DA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B2DE, 0x43B2E4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B2E4, 0x43B2EC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B2EC, 0x43B2F6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B2F6, 0x43B303);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B303, 0x43B30E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B30E, 0x43B31A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B31A, 0x43B323);
MakeUnkn(0x43B32C, 1);
MakeNameEx(0x43B32C, "VMT_43B32C_TBevel", 0);
MakeDword(0x43B32C);
MakeDword(0x43B330);
MakeDword(0x43B334);
MakeDword(0x43B338);
MakeDword(0x43B33C);
MakeDword(0x43B340);
MakeDword(0x43B344);
MakeDword(0x43B348);
MakeDword(0x43B34C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B40C, 0x43B413);
MakeDword(0x43B350);
MakeDword(0x43B354);
MakeDword(0x43B358);
MakeDword(0x43B35C);
MakeDword(0x43B360);
MakeDword(0x43B364);
MakeDword(0x43B368);
MakeDword(0x43B36C);
MakeDword(0x43B370);
MakeDword(0x43B374);
MakeComm(0x43B378, "'+0'");
MakeDword(0x43B378);
MakeComm(0x43B37C, "'+4'");
MakeDword(0x43B37C);
MakeComm(0x43B380, "'+8'");
MakeDword(0x43B380);
MakeComm(0x43B384, "'+C'");
MakeDword(0x43B384);
MakeComm(0x43B388, "'+10'");
MakeDword(0x43B388);
MakeComm(0x43B38C, "'+14'");
MakeDword(0x43B38C);
MakeComm(0x43B390, "'+18'");
MakeDword(0x43B390);
MakeComm(0x43B394, "'+1C'");
MakeDword(0x43B394);
MakeComm(0x43B398, "'+20'");
MakeDword(0x43B398);
MakeComm(0x43B39C, "'+24'");
MakeDword(0x43B39C);
MakeComm(0x43B3A0, "'+28'");
MakeDword(0x43B3A0);
MakeComm(0x43B3A4, "'+2C'");
MakeDword(0x43B3A4);
MakeComm(0x43B3A8, "'+30'");
MakeDword(0x43B3A8);
MakeComm(0x43B3AC, "'+34'");
MakeDword(0x43B3AC);
MakeComm(0x43B3B0, "'+38'");
MakeDword(0x43B3B0);
MakeComm(0x43B3B4, "'+3C'");
MakeDword(0x43B3B4);
MakeComm(0x43B3B8, "'+40'");
MakeDword(0x43B3B8);
MakeComm(0x43B3BC, "'+44'");
MakeDword(0x43B3BC);
MakeComm(0x43B3C0, "'+48'");
MakeDword(0x43B3C0);
MakeComm(0x43B3C4, "'+4C'");
MakeDword(0x43B3C4);
MakeComm(0x43B3C8, "'+50'");
MakeDword(0x43B3C8);
MakeComm(0x43B3CC, "'+54'");
MakeDword(0x43B3CC);
MakeComm(0x43B3D0, "'+58'");
MakeDword(0x43B3D0);
MakeComm(0x43B3D4, "'+5C'");
MakeDword(0x43B3D4);
MakeComm(0x43B3D8, "'+60'");
MakeDword(0x43B3D8);
MakeComm(0x43B3DC, "'+64'");
MakeDword(0x43B3DC);
MakeComm(0x43B3E0, "'+68'");
MakeDword(0x43B3E0);
MakeComm(0x43B3E4, "'+6C'");
MakeDword(0x43B3E4);
MakeComm(0x43B3E8, "'+70'");
MakeDword(0x43B3E8);
MakeComm(0x43B3EC, "'+74'");
MakeDword(0x43B3EC);
MakeComm(0x43B3F0, "'+78'");
MakeDword(0x43B3F0);
MakeComm(0x43B3F4, "'+7C'");
MakeDword(0x43B3F4);
MakeComm(0x43B3F8, "'+80'");
MakeDword(0x43B3F8);
MakeComm(0x43B3FC, "'+84'");
MakeDword(0x43B3FC);
MakeComm(0x43B400, "'+88'");
MakeDword(0x43B400);
MakeComm(0x43B404, "'+8C'");
MakeDword(0x43B404);
MakeComm(0x43B408, "'+90'");
MakeDword(0x43B408);
MakeUnkn(0x43B414, 1);
MakeNameEx(0x43B414, "RTTI_43B414_Class_TBevel", 0);
MakeDword(0x43B414);
MakeUnkn(0x43B418, 1);
MakeNameEx(0x43B418, "", 0);
MakeByte(0x43B418);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B419, 0x43B420);
MakeDword(0x43B420);
MakeDword(0x43B424);
MakeWord(0x43B428);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B42A, 0x43B433);
MakeWord(0x43B433);
MakeDword(0x43B435);
MakeDword(0x43B439);
MakeDword(0x43B43D);
MakeDword(0x43B441);
MakeDword(0x43B445);
MakeDword(0x43B449);
MakeWord(0x43B44D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B44F, 0x43B455);
MakeDword(0x43B455);
MakeDword(0x43B459);
MakeDword(0x43B45D);
MakeDword(0x43B461);
MakeDword(0x43B465);
MakeDword(0x43B469);
MakeWord(0x43B46D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B46F, 0x43B477);
MakeDword(0x43B477);
MakeDword(0x43B47B);
MakeDword(0x43B47F);
MakeDword(0x43B483);
MakeDword(0x43B487);
MakeDword(0x43B48B);
MakeWord(0x43B48F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B491, 0x43B49D);
MakeDword(0x43B49D);
MakeDword(0x43B4A1);
MakeDword(0x43B4A5);
MakeDword(0x43B4A9);
MakeDword(0x43B4AD);
MakeDword(0x43B4B1);
MakeWord(0x43B4B5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B4B7, 0x43B4C6);
MakeDword(0x43B4C6);
MakeDword(0x43B4CA);
MakeDword(0x43B4CE);
MakeDword(0x43B4D2);
MakeDword(0x43B4D6);
MakeDword(0x43B4DA);
MakeWord(0x43B4DE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B4E0, 0x43B4E6);
MakeDword(0x43B4E6);
MakeDword(0x43B4EA);
MakeDword(0x43B4EE);
MakeDword(0x43B4F2);
MakeDword(0x43B4F6);
MakeDword(0x43B4FA);
MakeWord(0x43B4FE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B500, 0x43B509);
MakeDword(0x43B509);
MakeDword(0x43B50D);
MakeDword(0x43B511);
MakeDword(0x43B515);
MakeDword(0x43B519);
MakeDword(0x43B51D);
MakeWord(0x43B521);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B523, 0x43B529);
MakeDword(0x43B529);
MakeDword(0x43B52D);
MakeDword(0x43B531);
MakeDword(0x43B535);
MakeDword(0x43B539);
MakeDword(0x43B53D);
MakeWord(0x43B541);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B543, 0x43B54B);
MakeUnkn(0x43B54C, 1);
MakeNameEx(0x43B54C, "VMT_43B54C_TTimer", 0);
MakeDword(0x43B54C);
MakeDword(0x43B550);
MakeDword(0x43B554);
MakeDword(0x43B558);
MakeDword(0x43B55C);
MakeDword(0x43B560);
MakeDword(0x43B564);
MakeDword(0x43B568);
MakeUnkn(0x43B5C8, 1);
MakeNameEx(0x43B5C8, "TTimer_DynamicTable", 0);
MakeWord(0x43B5C8);
MakeWord(0x43B5CA);
MakeDword(0x43B5CC);
MakeDword(0x43B56C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B5D0, 0x43B5D7);
MakeDword(0x43B570);
MakeDword(0x43B574);
MakeDword(0x43B578);
MakeDword(0x43B57C);
MakeDword(0x43B580);
MakeDword(0x43B584);
MakeDword(0x43B588);
MakeDword(0x43B58C);
MakeDword(0x43B590);
MakeDword(0x43B594);
MakeComm(0x43B598, "'+0'");
MakeDword(0x43B598);
MakeComm(0x43B59C, "'+4'");
MakeDword(0x43B59C);
MakeComm(0x43B5A0, "'+8'");
MakeDword(0x43B5A0);
MakeComm(0x43B5A4, "'+C'");
MakeDword(0x43B5A4);
MakeComm(0x43B5A8, "'+10'");
MakeDword(0x43B5A8);
MakeComm(0x43B5AC, "'+14'");
MakeDword(0x43B5AC);
MakeComm(0x43B5B0, "'+18'");
MakeDword(0x43B5B0);
MakeComm(0x43B5B4, "'+1C'");
MakeDword(0x43B5B4);
MakeComm(0x43B5B8, "'+20'");
MakeDword(0x43B5B8);
MakeComm(0x43B5BC, "'+24'");
MakeDword(0x43B5BC);
MakeComm(0x43B5C0, "'+28'");
MakeDword(0x43B5C0);
MakeComm(0x43B5C4, "'+2C'");
MakeDword(0x43B5C4);
MakeUnkn(0x43B5D8, 1);
MakeNameEx(0x43B5D8, "RTTI_43B5D8_Class_TTimer", 0);
MakeDword(0x43B5D8);
MakeUnkn(0x43B5DC, 1);
MakeNameEx(0x43B5DC, "", 0);
MakeByte(0x43B5DC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B5DD, 0x43B5E4);
MakeDword(0x43B5E4);
MakeDword(0x43B5E8);
MakeWord(0x43B5EC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B5EE, 0x43B5F7);
MakeWord(0x43B5F7);
MakeDword(0x43B5F9);
MakeDword(0x43B5FD);
MakeDword(0x43B601);
MakeDword(0x43B605);
MakeDword(0x43B609);
MakeDword(0x43B60D);
MakeWord(0x43B611);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B613, 0x43B61B);
MakeDword(0x43B61B);
MakeDword(0x43B61F);
MakeDword(0x43B623);
MakeDword(0x43B627);
MakeDword(0x43B62B);
MakeDword(0x43B62F);
MakeWord(0x43B633);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B635, 0x43B63E);
MakeDword(0x43B63E);
MakeDword(0x43B642);
MakeDword(0x43B646);
MakeDword(0x43B64A);
MakeDword(0x43B64E);
MakeDword(0x43B652);
MakeWord(0x43B656);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B658, 0x43B660);
MakeUnkn(0x43B660, 1);
MakeNameEx(0x43B660, "VMT_43B660_TCustomPanel", 0);
MakeDword(0x43B660);
MakeDword(0x43B664);
MakeDword(0x43B668);
MakeDword(0x43B66C);
MakeDword(0x43B670);
MakeDword(0x43B674);
MakeDword(0x43B678);
MakeDword(0x43B67C);
MakeUnkn(0x43B788, 1);
MakeNameEx(0x43B788, "TCustomPanel_DynamicTable", 0);
MakeWord(0x43B788);
MakeWord(0x43B78A);
MakeWord(0x43B78C);
MakeWord(0x43B78E);
MakeWord(0x43B790);
MakeWord(0x43B792);
MakeWord(0x43B794);
MakeWord(0x43B796);
MakeDword(0x43B798);
MakeDword(0x43B79C);
MakeDword(0x43B7A0);
MakeDword(0x43B7A4);
MakeDword(0x43B7A8);
MakeDword(0x43B7AC);
MakeDword(0x43B7B0);
MakeDword(0x43B680);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B7B4, 0x43B7C1);
MakeDword(0x43B684);
MakeDword(0x43B688);
MakeDword(0x43B68C);
MakeDword(0x43B690);
MakeDword(0x43B694);
MakeDword(0x43B698);
MakeDword(0x43B69C);
MakeDword(0x43B6A0);
MakeDword(0x43B6A4);
MakeDword(0x43B6A8);
MakeComm(0x43B6AC, "'+0'");
MakeDword(0x43B6AC);
MakeComm(0x43B6B0, "'+4'");
MakeDword(0x43B6B0);
MakeComm(0x43B6B4, "'+8'");
MakeDword(0x43B6B4);
MakeComm(0x43B6B8, "'+C'");
MakeDword(0x43B6B8);
MakeComm(0x43B6BC, "'+10'");
MakeDword(0x43B6BC);
MakeComm(0x43B6C0, "'+14'");
MakeDword(0x43B6C0);
MakeComm(0x43B6C4, "'+18'");
MakeDword(0x43B6C4);
MakeComm(0x43B6C8, "'+1C'");
MakeDword(0x43B6C8);
MakeComm(0x43B6CC, "'+20'");
MakeDword(0x43B6CC);
MakeComm(0x43B6D0, "'+24'");
MakeDword(0x43B6D0);
MakeComm(0x43B6D4, "'+28'");
MakeDword(0x43B6D4);
MakeComm(0x43B6D8, "'+2C'");
MakeDword(0x43B6D8);
MakeComm(0x43B6DC, "'+30'");
MakeDword(0x43B6DC);
MakeComm(0x43B6E0, "'+34'");
MakeDword(0x43B6E0);
MakeComm(0x43B6E4, "'+38'");
MakeDword(0x43B6E4);
MakeComm(0x43B6E8, "'+3C'");
MakeDword(0x43B6E8);
MakeComm(0x43B6EC, "'+40'");
MakeDword(0x43B6EC);
MakeComm(0x43B6F0, "'+44'");
MakeDword(0x43B6F0);
MakeComm(0x43B6F4, "'+48'");
MakeDword(0x43B6F4);
MakeComm(0x43B6F8, "'+4C'");
MakeDword(0x43B6F8);
MakeComm(0x43B6FC, "'+50'");
MakeDword(0x43B6FC);
MakeComm(0x43B700, "'+54'");
MakeDword(0x43B700);
MakeComm(0x43B704, "'+58'");
MakeDword(0x43B704);
MakeComm(0x43B708, "'+5C'");
MakeDword(0x43B708);
MakeComm(0x43B70C, "'+60'");
MakeDword(0x43B70C);
MakeComm(0x43B710, "'+64'");
MakeDword(0x43B710);
MakeComm(0x43B714, "'+68'");
MakeDword(0x43B714);
MakeComm(0x43B718, "'+6C'");
MakeDword(0x43B718);
MakeComm(0x43B71C, "'+70'");
MakeDword(0x43B71C);
MakeComm(0x43B720, "'+74'");
MakeDword(0x43B720);
MakeComm(0x43B724, "'+78'");
MakeDword(0x43B724);
MakeComm(0x43B728, "'+7C'");
MakeDword(0x43B728);
MakeComm(0x43B72C, "'+80'");
MakeDword(0x43B72C);
MakeComm(0x43B730, "'+84'");
MakeDword(0x43B730);
MakeComm(0x43B734, "'+88'");
MakeDword(0x43B734);
MakeComm(0x43B738, "'+8C'");
MakeDword(0x43B738);
MakeComm(0x43B73C, "'+90'");
MakeDword(0x43B73C);
MakeComm(0x43B740, "'+94'");
MakeDword(0x43B740);
MakeComm(0x43B744, "'+98'");
MakeDword(0x43B744);
MakeComm(0x43B748, "'+9C'");
MakeDword(0x43B748);
MakeComm(0x43B74C, "'+A0'");
MakeDword(0x43B74C);
MakeComm(0x43B750, "'+A4'");
MakeDword(0x43B750);
MakeComm(0x43B754, "'+A8'");
MakeDword(0x43B754);
MakeComm(0x43B758, "'+AC'");
MakeDword(0x43B758);
MakeComm(0x43B75C, "'+B0'");
MakeDword(0x43B75C);
MakeComm(0x43B760, "'+B4'");
MakeDword(0x43B760);
MakeComm(0x43B764, "'+B8'");
MakeDword(0x43B764);
MakeComm(0x43B768, "'+BC'");
MakeDword(0x43B768);
MakeComm(0x43B76C, "'+C0'");
MakeDword(0x43B76C);
MakeComm(0x43B770, "'+C4'");
MakeDword(0x43B770);
MakeComm(0x43B774, "'+C8'");
MakeDword(0x43B774);
MakeComm(0x43B778, "'+CC'");
MakeDword(0x43B778);
MakeComm(0x43B77C, "'+D0'");
MakeDword(0x43B77C);
MakeComm(0x43B780, "'+D4'");
MakeDword(0x43B780);
MakeComm(0x43B784, "'+D8'");
MakeDword(0x43B784);
MakeUnkn(0x43B7C4, 1);
MakeNameEx(0x43B7C4, "RTTI_43B7C4_Class_TCustomPanel", 0);
MakeDword(0x43B7C4);
MakeUnkn(0x43B7C8, 1);
MakeNameEx(0x43B7C8, "", 0);
MakeByte(0x43B7C8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B7C9, 0x43B7D6);
MakeDword(0x43B7D6);
MakeDword(0x43B7DA);
MakeWord(0x43B7DE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B7E0, 0x43B7E9);
MakeWord(0x43B7E9);
MakeUnkn(0x43B7EC, 1);
MakeNameEx(0x43B7EC, "VMT_43B7EC_TPanel", 0);
MakeDword(0x43B7EC);
MakeDword(0x43B7F0);
MakeDword(0x43B7F4);
MakeDword(0x43B7F8);
MakeDword(0x43B7FC);
MakeDword(0x43B800);
MakeDword(0x43B804);
MakeDword(0x43B808);
MakeDword(0x43B80C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B914, 0x43B91B);
MakeDword(0x43B810);
MakeDword(0x43B814);
MakeDword(0x43B818);
MakeDword(0x43B81C);
MakeDword(0x43B820);
MakeDword(0x43B824);
MakeDword(0x43B828);
MakeDword(0x43B82C);
MakeDword(0x43B830);
MakeDword(0x43B834);
MakeComm(0x43B838, "'+0'");
MakeDword(0x43B838);
MakeComm(0x43B83C, "'+4'");
MakeDword(0x43B83C);
MakeComm(0x43B840, "'+8'");
MakeDword(0x43B840);
MakeComm(0x43B844, "'+C'");
MakeDword(0x43B844);
MakeComm(0x43B848, "'+10'");
MakeDword(0x43B848);
MakeComm(0x43B84C, "'+14'");
MakeDword(0x43B84C);
MakeComm(0x43B850, "'+18'");
MakeDword(0x43B850);
MakeComm(0x43B854, "'+1C'");
MakeDword(0x43B854);
MakeComm(0x43B858, "'+20'");
MakeDword(0x43B858);
MakeComm(0x43B85C, "'+24'");
MakeDword(0x43B85C);
MakeComm(0x43B860, "'+28'");
MakeDword(0x43B860);
MakeComm(0x43B864, "'+2C'");
MakeDword(0x43B864);
MakeComm(0x43B868, "'+30'");
MakeDword(0x43B868);
MakeComm(0x43B86C, "'+34'");
MakeDword(0x43B86C);
MakeComm(0x43B870, "'+38'");
MakeDword(0x43B870);
MakeComm(0x43B874, "'+3C'");
MakeDword(0x43B874);
MakeComm(0x43B878, "'+40'");
MakeDword(0x43B878);
MakeComm(0x43B87C, "'+44'");
MakeDword(0x43B87C);
MakeComm(0x43B880, "'+48'");
MakeDword(0x43B880);
MakeComm(0x43B884, "'+4C'");
MakeDword(0x43B884);
MakeComm(0x43B888, "'+50'");
MakeDword(0x43B888);
MakeComm(0x43B88C, "'+54'");
MakeDword(0x43B88C);
MakeComm(0x43B890, "'+58'");
MakeDword(0x43B890);
MakeComm(0x43B894, "'+5C'");
MakeDword(0x43B894);
MakeComm(0x43B898, "'+60'");
MakeDword(0x43B898);
MakeComm(0x43B89C, "'+64'");
MakeDword(0x43B89C);
MakeComm(0x43B8A0, "'+68'");
MakeDword(0x43B8A0);
MakeComm(0x43B8A4, "'+6C'");
MakeDword(0x43B8A4);
MakeComm(0x43B8A8, "'+70'");
MakeDword(0x43B8A8);
MakeComm(0x43B8AC, "'+74'");
MakeDword(0x43B8AC);
MakeComm(0x43B8B0, "'+78'");
MakeDword(0x43B8B0);
MakeComm(0x43B8B4, "'+7C'");
MakeDword(0x43B8B4);
MakeComm(0x43B8B8, "'+80'");
MakeDword(0x43B8B8);
MakeComm(0x43B8BC, "'+84'");
MakeDword(0x43B8BC);
MakeComm(0x43B8C0, "'+88'");
MakeDword(0x43B8C0);
MakeComm(0x43B8C4, "'+8C'");
MakeDword(0x43B8C4);
MakeComm(0x43B8C8, "'+90'");
MakeDword(0x43B8C8);
MakeComm(0x43B8CC, "'+94'");
MakeDword(0x43B8CC);
MakeComm(0x43B8D0, "'+98'");
MakeDword(0x43B8D0);
MakeComm(0x43B8D4, "'+9C'");
MakeDword(0x43B8D4);
MakeComm(0x43B8D8, "'+A0'");
MakeDword(0x43B8D8);
MakeComm(0x43B8DC, "'+A4'");
MakeDword(0x43B8DC);
MakeComm(0x43B8E0, "'+A8'");
MakeDword(0x43B8E0);
MakeComm(0x43B8E4, "'+AC'");
MakeDword(0x43B8E4);
MakeComm(0x43B8E8, "'+B0'");
MakeDword(0x43B8E8);
MakeComm(0x43B8EC, "'+B4'");
MakeDword(0x43B8EC);
MakeComm(0x43B8F0, "'+B8'");
MakeDword(0x43B8F0);
MakeComm(0x43B8F4, "'+BC'");
MakeDword(0x43B8F4);
MakeComm(0x43B8F8, "'+C0'");
MakeDword(0x43B8F8);
MakeComm(0x43B8FC, "'+C4'");
MakeDword(0x43B8FC);
MakeComm(0x43B900, "'+C8'");
MakeDword(0x43B900);
MakeComm(0x43B904, "'+CC'");
MakeDword(0x43B904);
MakeComm(0x43B908, "'+D0'");
MakeDword(0x43B908);
MakeComm(0x43B90C, "'+D4'");
MakeDword(0x43B90C);
MakeComm(0x43B910, "'+D8'");
MakeDword(0x43B910);
MakeUnkn(0x43B91C, 1);
MakeNameEx(0x43B91C, "RTTI_43B91C_Class_TPanel", 0);
MakeDword(0x43B91C);
MakeUnkn(0x43B920, 1);
MakeNameEx(0x43B920, "", 0);
MakeByte(0x43B920);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B921, 0x43B928);
MakeDword(0x43B928);
MakeDword(0x43B92C);
MakeWord(0x43B930);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B932, 0x43B93B);
MakeWord(0x43B93B);
MakeDword(0x43B93D);
MakeDword(0x43B941);
MakeDword(0x43B945);
MakeDword(0x43B949);
MakeDword(0x43B94D);
MakeDword(0x43B951);
MakeWord(0x43B955);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B957, 0x43B95D);
MakeDword(0x43B95D);
MakeDword(0x43B961);
MakeDword(0x43B965);
MakeDword(0x43B969);
MakeDword(0x43B96D);
MakeDword(0x43B971);
MakeWord(0x43B975);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B977, 0x43B981);
MakeDword(0x43B981);
MakeDword(0x43B985);
MakeDword(0x43B989);
MakeDword(0x43B98D);
MakeDword(0x43B991);
MakeDword(0x43B995);
MakeWord(0x43B999);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B99B, 0x43B9A3);
MakeDword(0x43B9A3);
MakeDword(0x43B9A7);
MakeDword(0x43B9AB);
MakeDword(0x43B9AF);
MakeDword(0x43B9B3);
MakeDword(0x43B9B7);
MakeWord(0x43B9BB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B9BD, 0x43B9C6);
MakeDword(0x43B9C6);
MakeDword(0x43B9CA);
MakeDword(0x43B9CE);
MakeDword(0x43B9D2);
MakeDword(0x43B9D6);
MakeDword(0x43B9DA);
MakeWord(0x43B9DE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43B9E0, 0x43B9EB);
MakeDword(0x43B9EB);
MakeDword(0x43B9EF);
MakeDword(0x43B9F3);
MakeDword(0x43B9F7);
MakeDword(0x43B9FB);
MakeDword(0x43B9FF);
MakeWord(0x43BA03);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43BA05, 0x43BA10);
MakeDword(0x43BA10);
MakeDword(0x43BA14);
MakeDword(0x43BA18);
MakeDword(0x43BA1C);
MakeDword(0x43BA20);
MakeDword(0x43BA24);
MakeWord(0x43BA28);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43BA2A, 0x43BA34);
MakeDword(0x43BA34);
MakeDword(0x43BA38);
MakeDword(0x43BA3C);
MakeDword(0x43BA40);
MakeDword(0x43BA44);
MakeDword(0x43BA48);
MakeWord(0x43BA4C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43BA4E, 0x43BA59);
MakeDword(0x43BA59);
MakeDword(0x43BA5D);
MakeDword(0x43BA61);
MakeDword(0x43BA65);
MakeDword(0x43BA69);
MakeDword(0x43BA6D);
MakeWord(0x43BA71);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43BA73, 0x43BA7E);
MakeDword(0x43BA7E);
MakeDword(0x43BA82);
MakeDword(0x43BA86);
MakeDword(0x43BA8A);
MakeDword(0x43BA8E);
MakeDword(0x43BA92);
MakeWord(0x43BA96);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43BA98, 0x43BAA1);
MakeDword(0x43BAA1);
MakeDword(0x43BAA5);
MakeDword(0x43BAA9);
MakeDword(0x43BAAD);
MakeDword(0x43BAB1);
MakeDword(0x43BAB5);
MakeWord(0x43BAB9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43BABB, 0x43BAC7);
MakeDword(0x43BAC7);
MakeDword(0x43BACB);
MakeDword(0x43BACF);
MakeDword(0x43BAD3);
MakeDword(0x43BAD7);
MakeDword(0x43BADB);
MakeWord(0x43BADF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43BAE1, 0x43BAED);
MakeDword(0x43BAED);
MakeDword(0x43BAF1);
MakeDword(0x43BAF5);
MakeDword(0x43BAF9);
MakeDword(0x43BAFD);
MakeDword(0x43BB01);
MakeWord(0x43BB05);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43BB07, 0x43BB0F);
MakeDword(0x43BB0F);
MakeDword(0x43BB13);
MakeDword(0x43BB17);
MakeDword(0x43BB1B);
MakeDword(0x43BB1F);
MakeDword(0x43BB23);
MakeWord(0x43BB27);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43BB29, 0x43BB2F);
MakeDword(0x43BB2F);
MakeDword(0x43BB33);
MakeDword(0x43BB37);
MakeDword(0x43BB3B);
MakeDword(0x43BB3F);
MakeDword(0x43BB43);
MakeWord(0x43BB47);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43BB49, 0x43BB55);
MakeDword(0x43BB55);
MakeDword(0x43BB59);
MakeDword(0x43BB5D);
MakeDword(0x43BB61);
MakeDword(0x43BB65);
MakeDword(0x43BB69);
MakeWord(0x43BB6D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43BB6F, 0x43BB75);
MakeDword(0x43BB75);
MakeDword(0x43BB79);
MakeDword(0x43BB7D);
MakeDword(0x43BB81);
MakeDword(0x43BB85);
MakeDword(0x43BB89);
MakeWord(0x43BB8D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43BB8F, 0x43BB9E);
MakeDword(0x43BB9E);
MakeDword(0x43BBA2);
MakeDword(0x43BBA6);
MakeDword(0x43BBAA);
MakeDword(0x43BBAE);
MakeDword(0x43BBB2);
MakeWord(0x43BBB6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43BBB8, 0x43BBC1);
MakeDword(0x43BBC1);
MakeDword(0x43BBC5);
MakeDword(0x43BBC9);
MakeDword(0x43BBCD);
MakeDword(0x43BBD1);
MakeDword(0x43BBD5);
MakeWord(0x43BBD9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43BBDB, 0x43BBE6);
MakeDword(0x43BBE6);
MakeDword(0x43BBEA);
MakeDword(0x43BBEE);
MakeDword(0x43BBF2);
MakeDword(0x43BBF6);
MakeDword(0x43BBFA);
MakeWord(0x43BBFE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43BC00, 0x43BC09);
MakeDword(0x43BC09);
MakeDword(0x43BC0D);
MakeDword(0x43BC11);
MakeDword(0x43BC15);
MakeDword(0x43BC19);
MakeDword(0x43BC1D);
MakeWord(0x43BC21);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43BC23, 0x43BC2C);
MakeDword(0x43BC2C);
MakeDword(0x43BC30);
MakeDword(0x43BC34);
MakeDword(0x43BC38);
MakeDword(0x43BC3C);
MakeDword(0x43BC40);
MakeWord(0x43BC44);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43BC46, 0x43BC4E);
MakeDword(0x43BC4E);
MakeDword(0x43BC52);
MakeDword(0x43BC56);
MakeDword(0x43BC5A);
MakeDword(0x43BC5E);
MakeDword(0x43BC62);
MakeWord(0x43BC66);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43BC68, 0x43BC74);
MakeDword(0x43BC74);
MakeDword(0x43BC78);
MakeDword(0x43BC7C);
MakeDword(0x43BC80);
MakeDword(0x43BC84);
MakeDword(0x43BC88);
MakeWord(0x43BC8C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43BC8E, 0x43BC93);
MakeDword(0x43BC93);
MakeDword(0x43BC97);
MakeDword(0x43BC9B);
MakeDword(0x43BC9F);
MakeDword(0x43BCA3);
MakeDword(0x43BCA7);
MakeWord(0x43BCAB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43BCAD, 0x43BCB4);
MakeDword(0x43BCB4);
MakeDword(0x43BCB8);
MakeDword(0x43BCBC);
MakeDword(0x43BCC0);
MakeDword(0x43BCC4);
MakeDword(0x43BCC8);
MakeWord(0x43BCCC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43BCCE, 0x43BCD6);
MakeDword(0x43BCD6);
MakeDword(0x43BCDA);
MakeDword(0x43BCDE);
MakeDword(0x43BCE2);
MakeDword(0x43BCE6);
MakeDword(0x43BCEA);
MakeWord(0x43BCEE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43BCF0, 0x43BCFF);
MakeDword(0x43BCFF);
MakeDword(0x43BD03);
MakeDword(0x43BD07);
MakeDword(0x43BD0B);
MakeDword(0x43BD0F);
MakeDword(0x43BD13);
MakeWord(0x43BD17);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43BD19, 0x43BD2A);
MakeDword(0x43BD2A);
MakeDword(0x43BD2E);
MakeDword(0x43BD32);
MakeDword(0x43BD36);
MakeDword(0x43BD3A);
MakeDword(0x43BD3E);
MakeWord(0x43BD42);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43BD44, 0x43BD50);
MakeDword(0x43BD50);
MakeDword(0x43BD54);
MakeDword(0x43BD58);
MakeDword(0x43BD5C);
MakeDword(0x43BD60);
MakeDword(0x43BD64);
MakeWord(0x43BD68);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43BD6A, 0x43BD76);
MakeDword(0x43BD76);
MakeDword(0x43BD7A);
MakeDword(0x43BD7E);
MakeDword(0x43BD82);
MakeDword(0x43BD86);
MakeDword(0x43BD8A);
MakeWord(0x43BD8E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43BD90, 0x43BD9B);
MakeDword(0x43BD9B);
MakeDword(0x43BD9F);
MakeDword(0x43BDA3);
MakeDword(0x43BDA7);
MakeDword(0x43BDAB);
MakeDword(0x43BDAF);
MakeWord(0x43BDB3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43BDB5, 0x43BDC4);
MakeDword(0x43BDC4);
MakeDword(0x43BDC8);
MakeDword(0x43BDCC);
MakeDword(0x43BDD0);
MakeDword(0x43BDD4);
MakeDword(0x43BDD8);
MakeWord(0x43BDDC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43BDDE, 0x43BDE8);
MakeDword(0x43BDE8);
MakeDword(0x43BDEC);
MakeDword(0x43BDF0);
MakeDword(0x43BDF4);
MakeDword(0x43BDF8);
MakeDword(0x43BDFC);
MakeWord(0x43BE00);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43BE02, 0x43BE0B);
MakeDword(0x43BE0B);
MakeDword(0x43BE0F);
MakeDword(0x43BE13);
MakeDword(0x43BE17);
MakeDword(0x43BE1B);
MakeDword(0x43BE1F);
MakeWord(0x43BE23);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43BE25, 0x43BE2E);
MakeDword(0x43BE2E);
MakeDword(0x43BE32);
MakeDword(0x43BE36);
MakeDword(0x43BE3A);
MakeDword(0x43BE3E);
MakeDword(0x43BE42);
MakeWord(0x43BE46);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43BE48, 0x43BE50);
MakeDword(0x43BE50);
MakeDword(0x43BE54);
MakeDword(0x43BE58);
MakeDword(0x43BE5C);
MakeDword(0x43BE60);
MakeDword(0x43BE64);
MakeWord(0x43BE68);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43BE6A, 0x43BE7C);
MakeDword(0x43BE7C);
MakeDword(0x43BE80);
MakeDword(0x43BE84);
MakeDword(0x43BE88);
MakeDword(0x43BE8C);
MakeDword(0x43BE90);
MakeWord(0x43BE94);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43BE96, 0x43BE9E);
MakeDword(0x43BE9E);
MakeDword(0x43BEA2);
MakeDword(0x43BEA6);
MakeDword(0x43BEAA);
MakeDword(0x43BEAE);
MakeDword(0x43BEB2);
MakeWord(0x43BEB6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43BEB8, 0x43BECC);
MakeDword(0x43BECC);
MakeDword(0x43BED0);
MakeDword(0x43BED4);
MakeDword(0x43BED8);
MakeDword(0x43BEDC);
MakeDword(0x43BEE0);
MakeWord(0x43BEE4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43BEE6, 0x43BEF6);
MakeDword(0x43BEF6);
MakeDword(0x43BEFA);
MakeDword(0x43BEFE);
MakeDword(0x43BF02);
MakeDword(0x43BF06);
MakeDword(0x43BF0A);
MakeWord(0x43BF0E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43BF10, 0x43BF1C);
MakeDword(0x43BF1C);
MakeDword(0x43BF20);
MakeDword(0x43BF24);
MakeDword(0x43BF28);
MakeDword(0x43BF2C);
MakeDword(0x43BF30);
MakeWord(0x43BF34);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43BF36, 0x43BF3E);
MakeDword(0x43BF3E);
MakeDword(0x43BF42);
MakeDword(0x43BF46);
MakeDword(0x43BF4A);
MakeDword(0x43BF4E);
MakeDword(0x43BF52);
MakeWord(0x43BF56);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43BF58, 0x43BF6C);
MakeDword(0x43BF6C);
MakeDword(0x43BF70);
MakeDword(0x43BF74);
MakeDword(0x43BF78);
MakeDword(0x43BF7C);
MakeDword(0x43BF80);
MakeWord(0x43BF84);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43BF86, 0x43BF95);
MakeDword(0x43BF95);
MakeDword(0x43BF99);
MakeDword(0x43BF9D);
MakeDword(0x43BFA1);
MakeDword(0x43BFA5);
MakeDword(0x43BFA9);
MakeWord(0x43BFAD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43BFAF, 0x43BFBA);
MakeDword(0x43BFBA);
MakeDword(0x43BFBE);
MakeDword(0x43BFC2);
MakeDword(0x43BFC6);
MakeDword(0x43BFCA);
MakeDword(0x43BFCE);
MakeWord(0x43BFD2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43BFD4, 0x43BFDF);
MakeDword(0x43BFDF);
MakeDword(0x43BFE3);
MakeDword(0x43BFE7);
MakeDword(0x43BFEB);
MakeDword(0x43BFEF);
MakeDword(0x43BFF3);
MakeWord(0x43BFF7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43BFF9, 0x43C004);
MakeDword(0x43C004);
MakeDword(0x43C008);
MakeDword(0x43C00C);
MakeDword(0x43C010);
MakeDword(0x43C014);
MakeDword(0x43C018);
MakeWord(0x43C01C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43C01E, 0x43C029);
MakeDword(0x43C029);
MakeDword(0x43C02D);
MakeDword(0x43C031);
MakeDword(0x43C035);
MakeDword(0x43C039);
MakeDword(0x43C03D);
MakeWord(0x43C041);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43C043, 0x43C04E);
MakeDword(0x43C04E);
MakeDword(0x43C052);
MakeDword(0x43C056);
MakeDword(0x43C05A);
MakeDword(0x43C05E);
MakeDword(0x43C062);
MakeWord(0x43C066);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43C068, 0x43C072);
MakeDword(0x43C072);
MakeDword(0x43C076);
MakeDword(0x43C07A);
MakeDword(0x43C07E);
MakeDword(0x43C082);
MakeDword(0x43C086);
MakeWord(0x43C08A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43C08C, 0x43C096);
MakeDword(0x43C096);
MakeDword(0x43C09A);
MakeDword(0x43C09E);
MakeDword(0x43C0A2);
MakeDword(0x43C0A6);
MakeDword(0x43C0AA);
MakeWord(0x43C0AE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43C0B0, 0x43C0B8);
MakeDword(0x43C0B8);
MakeDword(0x43C0BC);
MakeDword(0x43C0C0);
MakeDword(0x43C0C4);
MakeDword(0x43C0C8);
MakeDword(0x43C0CC);
MakeWord(0x43C0D0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43C0D2, 0x43C0D9);
MakeDword(0x43C0D9);
MakeDword(0x43C0DD);
MakeDword(0x43C0E1);
MakeDword(0x43C0E5);
MakeDword(0x43C0E9);
MakeDword(0x43C0ED);
MakeWord(0x43C0F1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43C0F3, 0x43C101);
MakeDword(0x43C101);
MakeDword(0x43C105);
MakeDword(0x43C109);
MakeDword(0x43C10D);
MakeDword(0x43C111);
MakeDword(0x43C115);
MakeWord(0x43C119);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43C11B, 0x43C12B);
MakeDword(0x43C12B);
MakeDword(0x43C12F);
MakeDword(0x43C133);
MakeDword(0x43C137);
MakeDword(0x43C13B);
MakeDword(0x43C13F);
MakeWord(0x43C143);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43C145, 0x43C151);
MakeDword(0x43C151);
MakeDword(0x43C155);
MakeDword(0x43C159);
MakeDword(0x43C15D);
MakeDword(0x43C161);
MakeDword(0x43C165);
MakeWord(0x43C169);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43C16B, 0x43C178);
MakeDword(0x43C178);
MakeDword(0x43C17C);
MakeDword(0x43C180);
MakeDword(0x43C184);
MakeDword(0x43C188);
MakeDword(0x43C18C);
MakeWord(0x43C190);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43C192, 0x43C19F);
MakeDword(0x43C19F);
MakeDword(0x43C1A3);
MakeDword(0x43C1A7);
MakeDword(0x43C1AB);
MakeDword(0x43C1AF);
MakeDword(0x43C1B3);
MakeWord(0x43C1B7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43C1B9, 0x43C1C5);
MakeDword(0x43C1C5);
MakeDword(0x43C1C9);
MakeDword(0x43C1CD);
MakeDword(0x43C1D1);
MakeDword(0x43C1D5);
MakeDword(0x43C1D9);
MakeWord(0x43C1DD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43C1DF, 0x43C1E9);
MakeDword(0x43C1E9);
MakeDword(0x43C1ED);
MakeDword(0x43C1F1);
MakeDword(0x43C1F5);
MakeDword(0x43C1F9);
MakeDword(0x43C1FD);
MakeWord(0x43C201);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43C203, 0x43C20C);
MakeDword(0x43C20C);
MakeDword(0x43C210);
MakeDword(0x43C214);
MakeDword(0x43C218);
MakeDword(0x43C21C);
MakeDword(0x43C220);
MakeWord(0x43C224);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43C226, 0x43C232);
MakeDword(0x43C232);
MakeDword(0x43C236);
MakeDword(0x43C23A);
MakeDword(0x43C23E);
MakeDword(0x43C242);
MakeDword(0x43C246);
MakeWord(0x43C24A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43C24C, 0x43C258);
MakeDword(0x43C258);
MakeDword(0x43C25C);
MakeDword(0x43C260);
MakeDword(0x43C264);
MakeDword(0x43C268);
MakeDword(0x43C26C);
MakeWord(0x43C270);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43C272, 0x43C27B);
MakeUnkn(0x43C27C, 1);
MakeNameEx(0x43C27C, "DoRect", 0x20);
MakeComm(0x43C27C, "'procedure DoRect;'");
MakeCode(0x43C27C);
MakeFunction(0x43C27C, 0x43C33D);
MakeUnkn(0x43C340, 1);
MakeNameEx(0x43C340, "Frame3D", 0x20);
MakeComm(0x43C340, "'procedure Frame3D(Canvas:TCanvas; var Rect:TRect; TopColor:TColor; BottomColor:TColor; Width:Integer);'");
MakeCode(0x43C340);
MakeCode(0x43C373);
MakeCode(0x43C38C);
MakeFunction(0x43C340, 0x43C39F);
MakeUnkn(0x43C3A0, 1);
MakeNameEx(0x43C3A0, "TPaintBox.Create", 0x20);
MakeComm(0x43C3A0, "'constructor TPaintBox.Create(AOwner:TComponent);'");
MakeCode(0x43C3A0);
MakeCode(0x43C3AE);
MakeCode(0x43C3F4);
MakeFunction(0x43C3A0, 0x43C3F9);
MakeUnkn(0x43C400, 1);
MakeNameEx(0x43C400, "TPaintBox.Paint", 0x20);
MakeComm(0x43C400, "'procedure TPaintBox.Paint;'");
MakeCode(0x43C400);
MakeCode(0x43C456);
MakeCode(0x43C46E);
MakeFunction(0x43C400, 0x43C471);
MakeUnkn(0x43C474, 1);
MakeNameEx(0x43C474, "TImage.Create", 0x20);
MakeComm(0x43C474, "'constructor TImage.Create(AOwner:TComponent);'");
MakeCode(0x43C474);
MakeCode(0x43C486);
MakeCode(0x43C4FE);
MakeFunction(0x43C474, 0x43C505);
MakeUnkn(0x43C50C, 1);
MakeNameEx(0x43C50C, "TImage.Destroy", 0x20);
MakeComm(0x43C50C, "'destructor TImage.Destroy;'");
MakeCode(0x43C50C);
MakeCode(0x43C539);
MakeFunction(0x43C50C, 0x43C53C);
MakeUnkn(0x43C53C, 1);
MakeNameEx(0x43C53C, "TImage.GetPalette", 0x20);
MakeComm(0x43C53C, "'procedure TImage.GetPalette;'");
MakeCode(0x43C53C);
MakeCode(0x43C555);
MakeFunction(0x43C53C, 0x43C559);
MakeUnkn(0x43C55C, 1);
MakeNameEx(0x43C55C, "TImage.DestRect", 0x20);
MakeComm(0x43C55C, "'function TImage.DestRect:TRect;'");
MakeCode(0x43C55C);
MakeCode(0x43C5BB);
MakeCode(0x43C613);
MakeCode(0x43C63E);
MakeCode(0x43C645);
MakeCode(0x43C66B);
MakeCode(0x43C679);
MakeCode(0x43C680);
MakeFunction(0x43C55C, 0x43C688);
MakeUnkn(0x43C688, 1);
MakeNameEx(0x43C688, "TImage.Paint", 0x20);
MakeComm(0x43C688, "'procedure TImage.Paint;'");
MakeCode(0x43C688);
MakeCode(0x43C6D1);
MakeCode(0x43C720);
MakeCode(0x43C72D);
MakeCode(0x43C73B);
MakeCode(0x43C740);
MakeFunction(0x43C688, 0x43C747);
MakeUnkn(0x43C748, 1);
MakeNameEx(0x43C748, "TImage.DoPaletteChange", 0x20);
MakeComm(0x43C748, "'function TImage.DoPaletteChange:Boolean;'");
MakeCode(0x43C748);
MakeCode(0x43C780);
MakeCode(0x43C7BE);
MakeCode(0x43C7D4);
MakeCode(0x43C7DA);
MakeFunction(0x43C748, 0x43C7E1);
MakeUnkn(0x43C7E4, 1);
MakeNameEx(0x43C7E4, "TImage.Progress", 0x20);
MakeComm(0x43C7E4, "'procedure TImage.Progress(Sender:TObject; Stage:TProgressStage; PercentDone:Byte; RedrawNow:Boolean; const R:TRect; const Msg:AnsiString);'");
MakeCode(0x43C7E4);
MakeCode(0x43C814);
MakeCode(0x43C81E);
MakeCode(0x43C848);
MakeFunction(0x43C7E4, 0x43C850);
MakeUnkn(0x43C850, 1);
MakeNameEx(0x43C850, "TImage.SetCenter", 0x20);
MakeComm(0x43C850, "'procedure TImage.SetCenter(Value:Boolean);'");
MakeCode(0x43C850);
MakeFunction(0x43C850, 0x43C866);
MakeUnkn(0x43C868, 1);
MakeNameEx(0x43C868, "TImage.SetPicture", 0x20);
MakeComm(0x43C868, "'procedure TImage.SetPicture(Value:TPicture);'");
MakeCode(0x43C868);
MakeFunction(0x43C868, 0x43C878);
MakeUnkn(0x43C878, 1);
MakeNameEx(0x43C878, "TImage.SetStretch", 0x20);
MakeComm(0x43C878, "'procedure TImage.SetStretch(Value:Boolean);'");
MakeCode(0x43C878);
MakeFunction(0x43C878, 0x43C88E);
MakeUnkn(0x43C890, 1);
MakeNameEx(0x43C890, "TImage.SetTransparent", 0x20);
MakeComm(0x43C890, "'procedure TImage.SetTransparent(Value:Boolean);'");
MakeCode(0x43C890);
MakeFunction(0x43C890, 0x43C8A6);
MakeUnkn(0x43C8A8, 1);
MakeNameEx(0x43C8A8, "TImage.SetProportional", 0x20);
MakeComm(0x43C8A8, "'procedure TImage.SetProportional(Value:Boolean);'");
MakeCode(0x43C8A8);
MakeFunction(0x43C8A8, 0x43C8BE);
MakeUnkn(0x43C8C0, 1);
MakeNameEx(0x43C8C0, "TImage.PictureChanged", 0x20);
MakeComm(0x43C8C0, "'procedure TImage.PictureChanged(Sender:TObject);'");
MakeCode(0x43C8C0);
MakeCode(0x43C913);
MakeCode(0x43C954);
MakeCode(0x43C994);
MakeCode(0x43C9A1);
MakeCode(0x43C9C1);
MakeCode(0x43C9CE);
MakeCode(0x43C9E1);
MakeFunction(0x43C8C0, 0x43C9E7);
MakeUnkn(0x43C9EC, 1);
MakeNameEx(0x43C9EC, "TImage.CanAutoSize", 0x20);
MakeComm(0x43C9EC, "'function TImage.CanAutoSize(var NewWidth:Integer; var NewHeight:Integer):Boolean;'");
MakeCode(0x43C9EC);
MakeCode(0x43CA1C);
MakeCode(0x43CA2A);
MakeCode(0x43CA37);
MakeCode(0x43CA4D);
MakeFunction(0x43C9EC, 0x43CA54);
MakeUnkn(0x43CA54, 1);
MakeNameEx(0x43CA54, "TBevel.Create", 0x20);
MakeComm(0x43CA54, "'constructor TBevel.Create(AOwner:TComponent);'");
MakeCode(0x43CA54);
MakeCode(0x43CA62);
MakeCode(0x43CAB6);
MakeFunction(0x43CA54, 0x43CABB);
MakeUnkn(0x43CAC0, 1);
MakeNameEx(0x43CAC0, "TBevel.SetStyle", 0x20);
MakeComm(0x43CAC0, "'procedure TBevel.SetStyle(Value:TBevelStyle);'");
MakeCode(0x43CAC0);
MakeCode(0x43CADB);
MakeFunction(0x43CAC0, 0x43CADD);
MakeUnkn(0x43CAE0, 1);
MakeNameEx(0x43CAE0, "TBevel.SetShape", 0x20);
MakeComm(0x43CAE0, "'procedure TBevel.SetShape(Value:TBevelShape);'");
MakeCode(0x43CAE0);
MakeCode(0x43CAFB);
MakeFunction(0x43CAE0, 0x43CAFD);
MakeUnkn(0x43CB00, 1);
MakeNameEx(0x43CB00, "BevelRect", 0x20);
MakeComm(0x43CB00, "'procedure BevelRect(const R:TRect);'");
MakeCode(0x43CB00);
MakeFunction(0x43CB00, 0x43CBEF);
MakeUnkn(0x43CBF0, 1);
MakeNameEx(0x43CBF0, "BevelLine", 0x20);
MakeComm(0x43CBF0, "'procedure BevelLine(C:TColor; X1:Integer; Y1:Integer; X2:Integer; Y2:Integer);'");
MakeCode(0x43CBF0);
MakeFunction(0x43CBF0, 0x43CC2F);
MakeCode(0x43CC30);
MakeComm(0x43CC3D, "'TBevel........FCanvas:TCanvas'");
MakeComm(0x43CC46, "'TBevel.FComponentState:TComponentState'");
MakeComm(0x43CC53, "'TBevel.Shape:TBevelShape'");
MakeComm(0x43CC5E, "'TCanvas.Pen:TPen'");
MakeComm(0x43CC68, "'TCanvas.Pen:TPen'");
MakeComm(0x43CC75, "'TCanvas.Pen:TPen'");
MakeComm(0x43CC7F, "'TCanvas.Brush:TBrush'");
MakeCode(0x43CCA9);
MakeComm(0x43CCAB, "'TCanvas.Pen:TPen'");
MakeComm(0x43CCB5, "'TCanvas.Pen:TPen'");
MakeComm(0x43CCBF, "'TCanvas.Pen:TPen'");
MakeComm(0x43CCC9, "'TCanvas.Brush:TBrush'");
MakeCode(0x43CCD1);
MakeComm(0x43CCD6, "'TCanvas.Pen:TPen'");
MakeComm(0x43CCE1, "'TBevel.Style:TBevelStyle'");
MakeCode(0x43CCFA);
MakeCode(0x43CD08);
MakeComm(0x43CD0B, "'TBevel.Shape:TBevelShape'");
MakeCode(0x43CD3A);
MakeComm(0x43CD3E, "'TBevel.Height:Integer'");
MakeComm(0x43CD4A, "'TBevel.Width:Integer'");
MakeCode(0x43CD65);
MakeComm(0x43CD72, "'TBevel.Height:Integer'");
MakeComm(0x43CD7E, "'TBevel.Width:Integer'");
MakeComm(0x43CDA4, "'TBevel.Height:Integer'");
MakeComm(0x43CDB2, "'TBevel.Width:Integer'");
MakeCode(0x43CDCF);
MakeComm(0x43CDD3, "'TBevel.Width:Integer'");
MakeComm(0x43CDEA, "'TBevel.Width:Integer'");
MakeCode(0x43CE05);
MakeComm(0x43CE09, "'TBevel.Width:Integer'");
MakeComm(0x43CE10, "'TBevel.Height:Integer'");
MakeComm(0x43CE28, "'TBevel.Width:Integer'");
MakeComm(0x43CE2F, "'TBevel.Height:Integer'");
MakeCode(0x43CE43);
MakeComm(0x43CE49, "'TBevel.Height:Integer'");
MakeComm(0x43CE60, "'TBevel.Height:Integer'");
MakeCode(0x43CE76);
MakeComm(0x43CE7A, "'TBevel.Width:Integer'");
MakeComm(0x43CE84, "'TBevel.Height:Integer'");
MakeComm(0x43CE99, "'TBevel.Width:Integer'");
MakeComm(0x43CEA1, "'TBevel.Height:Integer'");
MakeCode(0x43CEB2);
MakeFunction(0x43CC30, 0x43CEB7);
MakeUnkn(0x43CEB8, 1);
MakeNameEx(0x43CEB8, "TTimer.Create", 0x20);
MakeComm(0x43CEB8, "'constructor TTimer.Create(AOwner:TComponent);'");
MakeCode(0x43CEB8);
MakeCode(0x43CEC6);
MakeCode(0x43CF01);
MakeFunction(0x43CEB8, 0x43CF06);
MakeUnkn(0x43CF08, 1);
MakeNameEx(0x43CF08, "TTimer.Destroy", 0x20);
MakeComm(0x43CF08, "'destructor TTimer.Destroy;'");
MakeCode(0x43CF08);
MakeCode(0x43CF3D);
MakeFunction(0x43CF08, 0x43CF40);
MakeUnkn(0x43CF40, 1);
MakeNameEx(0x43CF40, "TTimer.WndProc", 0x20);
MakeComm(0x43CF40, "'procedure TTimer.WndProc(var Msg:TMessage);'");
MakeCode(0x43CF40);
MakeCode(0x43CF70);
MakeCode(0x43CF7A);
MakeCode(0x43CF95);
MakeCode(0x43CFAD);
MakeFunction(0x43CF40, 0x43CFB3);
MakeUnkn(0x43CFB4, 1);
MakeNameEx(0x43CFB4, "TTimer.UpdateTimer", 0x20);
MakeComm(0x43CFB4, "'procedure TTimer.UpdateTimer;'");
MakeCode(0x43CFB4);
MakeCode(0x43D01D);
MakeCode(0x43D02A);
MakeCode(0x43D033);
MakeCode(0x43D038);
MakeFunction(0x43CFB4, 0x43D03F);
MakeUnkn(0x43D040, 1);
MakeNameEx(0x43D040, "TTimer.SetEnabled", 0x20);
MakeComm(0x43D040, "'procedure TTimer.SetEnabled(Value:Boolean);'");
MakeCode(0x43D040);
MakeFunction(0x43D040, 0x43D04E);
MakeUnkn(0x43D050, 1);
MakeNameEx(0x43D050, "TTimer.SetInterval", 0x20);
MakeComm(0x43D050, "'procedure TTimer.SetInterval(Value:Cardinal);'");
MakeCode(0x43D050);
MakeFunction(0x43D050, 0x43D05E);
MakeUnkn(0x43D060, 1);
MakeNameEx(0x43D060, "TTimer.SetOnTimer", 0x20);
MakeComm(0x43D060, "'procedure TTimer.SetOnTimer(Value:TNotifyEvent);'");
MakeCode(0x43D060);
MakeFunction(0x43D060, 0x43D078);
MakeUnkn(0x43D078, 1);
MakeNameEx(0x43D078, "TTimer.Timer", 0x20);
MakeComm(0x43D078, "'procedure TTimer.Timer;'");
MakeCode(0x43D078);
MakeCode(0x43D08A);
MakeFunction(0x43D078, 0x43D08C);
MakeUnkn(0x43D08C, 1);
MakeNameEx(0x43D08C, "TCustomPanel.Create", 0x20);
MakeComm(0x43D08C, "'constructor TCustomPanel.Create(AOwner:TComponent);'");
MakeCode(0x43D08C);
MakeCode(0x43D09A);
MakeCode(0x43D0D3);
MakeCode(0x43D152);
MakeFunction(0x43D08C, 0x43D157);
MakeUnkn(0x43D164, 1);
MakeNameEx(0x43D164, "TCustomPanel.CreateParams", 0x20);
MakeComm(0x43D164, "'procedure TCustomPanel.CreateParams(var Params:TCreateParams);'");
MakeCode(0x43D164);
MakeCode(0x43D1AE);
MakeFunction(0x43D164, 0x43D1B5);
MakeUnkn(0x43D1B8, 1);
MakeNameEx(0x43D1B8, "TCustomPanel.CMBorderChanged", 0x20);
MakeComm(0x43D1B8, "'procedure TCustomPanel.CMBorderChanged(var Message:TMessage);'");
MakeCode(0x43D1B8);
MakeFunction(0x43D1B8, 0x43D1CE);
MakeUnkn(0x43D1D0, 1);
MakeNameEx(0x43D1D0, "TCustomPanel.CMTextChanged", 0x20);
MakeComm(0x43D1D0, "'procedure TCustomPanel.CMTextChanged(var Message:TMessage);'");
MakeCode(0x43D1D0);
MakeFunction(0x43D1D0, 0x43D1D9);
MakeUnkn(0x43D1DC, 1);
MakeNameEx(0x43D1DC, "TCustomPanel.CMCtl3DChanged", 0x20);
MakeComm(0x43D1DC, "'procedure TCustomPanel.CMCtl3DChanged(var Message:TMessage);'");
MakeCode(0x43D1DC);
MakeCode(0x43D1FC);
MakeFunction(0x43D1DC, 0x43D208);
MakeUnkn(0x43D208, 1);
MakeNameEx(0x43D208, "TCustomPanel.CMIsToolControl", 0x20);
MakeComm(0x43D208, "'procedure TCustomPanel.CMIsToolControl(var Message:TMessage);'");
MakeCode(0x43D208);
MakeFunction(0x43D208, 0x43D219);
MakeUnkn(0x43D21C, 1);
MakeNameEx(0x43D21C, "TCustomPanel.WMWindowPosChanged", 0x20);
MakeComm(0x43D21C, "'procedure TCustomPanel.WMWindowPosChanged(var Message:TWMWindowPosChanged);'");
MakeCode(0x43D21C);
MakeCode(0x43D255);
MakeCode(0x43D264);
MakeCode(0x43D279);
MakeCode(0x43D288);
MakeCode(0x43D2C4);
MakeCode(0x43D2F0);
MakeCode(0x43D2F9);
MakeCode(0x43D306);
MakeCode(0x43D30F);
MakeCode(0x43D314);
MakeFunction(0x43D21C, 0x43D31D);
MakeUnkn(0x43D320, 1);
MakeNameEx(0x43D320, "AdjustColors", 0x20);
MakeComm(0x43D320, "'procedure AdjustColors(Bevel:TBevelCut);'");
MakeCode(0x43D320);
MakeCode(0x43D33B);
MakeCode(0x43D353);
MakeFunction(0x43D320, 0x43D355);
MakeUnkn(0x43D358, 1);
MakeNameEx(0x43D358, "TCustomPanel.Paint", 0x20);
MakeComm(0x43D358, "'procedure TCustomPanel.Paint;'");
MakeCode(0x43D358);
MakeCode(0x43D3AE);
MakeCode(0x43D3C2);
MakeCode(0x43D3DF);
MakeCode(0x43D3FA);
MakeCode(0x43D428);
MakeCode(0x43D447);
MakeCode(0x43D45C);
MakeCode(0x43D4C1);
MakeCode(0x43D4CE);
MakeCode(0x43D4D7);
MakeCode(0x43D4DC);
MakeFunction(0x43D358, 0x43D4E5);
MakeUnkn(0x43D4E8, 1);
MakeNameEx(0x43D4E8, "TCustomPanel.SetAlignment", 0x20);
MakeComm(0x43D4E8, "'procedure TCustomPanel.SetAlignment(Value:TAlignment);'");
MakeCode(0x43D4E8);
MakeFunction(0x43D4E8, 0x43D4F7);
MakeUnkn(0x43D4F8, 1);
MakeNameEx(0x43D4F8, "TCustomPanel.SetBevelInner", 0x20);
MakeComm(0x43D4F8, "'procedure TCustomPanel.SetBevelInner(Value:TBevelCut);'");
MakeCode(0x43D4F8);
MakeFunction(0x43D4F8, 0x43D514);
MakeUnkn(0x43D514, 1);
MakeNameEx(0x43D514, "TCustomPanel.SetBevelOuter", 0x20);
MakeComm(0x43D514, "'procedure TCustomPanel.SetBevelOuter(Value:TBevelCut);'");
MakeCode(0x43D514);
MakeFunction(0x43D514, 0x43D530);
MakeUnkn(0x43D530, 1);
MakeNameEx(0x43D530, "TCustomPanel.SetBevelWidth", 0x20);
MakeComm(0x43D530, "'procedure TCustomPanel.SetBevelWidth(Value:TBevelWidth);'");
MakeCode(0x43D530);
MakeFunction(0x43D530, 0x43D54C);
MakeUnkn(0x43D54C, 1);
MakeNameEx(0x43D54C, "TCustomPanel.SetBorderWidth", 0x20);
MakeComm(0x43D54C, "'procedure TCustomPanel.SetBorderWidth(Value:TBorderWidth);'");
MakeCode(0x43D54C);
MakeFunction(0x43D54C, 0x43D568);
MakeUnkn(0x43D568, 1);
MakeNameEx(0x43D568, "TCustomPanel.SetBorderStyle", 0x20);
MakeComm(0x43D568, "'procedure TCustomPanel.SetBorderStyle(Value:TBorderStyle);'");
MakeCode(0x43D568);
MakeFunction(0x43D568, 0x43D57C);
MakeUnkn(0x43D57C, 1);
MakeNameEx(0x43D57C, "TCustomPanel.GetControlsAlignment", 0x20);
MakeComm(0x43D57C, "'procedure TCustomPanel.GetControlsAlignment;'");
MakeCode(0x43D57C);
MakeFunction(0x43D57C, 0x43D584);
MakeUnkn(0x43D584, 1);
MakeNameEx(0x43D584, "TCustomPanel.AdjustClientRect", 0x20);
MakeComm(0x43D584, "'procedure TCustomPanel.AdjustClientRect(var Rect:TRect);'");
MakeCode(0x43D584);
MakeCode(0x43D5BC);
MakeCode(0x43D5CB);
MakeFunction(0x43D584, 0x43D5DC);
MakeUnkn(0x43D5DC, 1);
MakeNameEx(0x43D5DC, "TCustomPanel.CMDockClient", 0x20);
MakeComm(0x43D5DC, "'procedure TCustomPanel.CMDockClient(var Message:TCMDockClient);'");
MakeCode(0x43D5DC);
MakeCode(0x43D63C);
MakeCode(0x43D659);
MakeCode(0x43D68B);
MakeCode(0x43D6A4);
MakeCode(0x43D6D4);
MakeCode(0x43D6E6);
MakeCode(0x43D6F3);
MakeCode(0x43D6FE);
MakeCode(0x43D703);
MakeCode(0x43D705);
MakeCode(0x43D710);
MakeFunction(0x43D5DC, 0x43D717);
MakeUnkn(0x43D718, 1);
MakeNameEx(0x43D718, "TCustomPanel.CanAutoSize", 0x20);
MakeComm(0x43D718, "'function TCustomPanel.CanAutoSize(var NewWidth:Integer; var NewHeight:Integer):Boolean;'");
MakeCode(0x43D718);
MakeCode(0x43D739);
MakeCode(0x43D73D);
MakeCode(0x43D73F);
MakeFunction(0x43D718, 0x43D743);
MakeUnkn(0x43D744, 1);
MakeNameEx(0x43D744, "TCustomPanel.SetParentBackground", 0x20);
MakeComm(0x43D744, "'procedure TCustomPanel.SetParentBackground(Value:Boolean);'");
MakeCode(0x43D744);
MakeCode(0x43D75D);
MakeCode(0x43D768);
MakeFunction(0x43D744, 0x43D77B);
MakeUnkn(0x43D780, 1);
MakeNameEx(0x43D780, "TCustomPanel.SetVerticalAlignment", 0x20);
MakeComm(0x43D780, "'procedure TCustomPanel.SetVerticalAlignment(const Value:TVerticalAlignment);'");
MakeCode(0x43D780);
MakeFunction(0x43D780, 0x43D78F);
MakeCode(0x43D790);
MakeCode(0x43D7A7);
MakeCode(0x43D7B4);
MakeCode(0x43D7B5);
MakeCode(0x43D7BA);
MakeFunction(0x43D790, 0x43D7BE);
MakeUnkn(0x43D7C0, 1);
MakeNameEx(0x43D7C0, "VMT_43D7C0_TCommonDialog", 0);
MakeDword(0x43D7C0);
MakeDword(0x43D7C4);
MakeDword(0x43D7C8);
MakeDword(0x43D7CC);
MakeDword(0x43D7D0);
MakeDword(0x43D7D4);
MakeDword(0x43D7D8);
MakeDword(0x43D7DC);
MakeUnkn(0x43D850, 1);
MakeNameEx(0x43D850, "TCommonDialog_DynamicTable", 0);
MakeWord(0x43D850);
MakeWord(0x43D852);
MakeWord(0x43D854);
MakeWord(0x43D856);
MakeWord(0x43D858);
MakeWord(0x43D85A);
MakeDword(0x43D85C);
MakeDword(0x43D860);
MakeDword(0x43D864);
MakeDword(0x43D868);
MakeDword(0x43D86C);
MakeDword(0x43D7E0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43D870, 0x43D87E);
MakeDword(0x43D7E4);
MakeDword(0x43D7E8);
MakeDword(0x43D7EC);
MakeDword(0x43D7F0);
MakeDword(0x43D7F4);
MakeDword(0x43D7F8);
MakeDword(0x43D7FC);
MakeDword(0x43D800);
MakeDword(0x43D804);
MakeDword(0x43D808);
MakeComm(0x43D80C, "'+0'");
MakeDword(0x43D80C);
MakeComm(0x43D810, "'+4'");
MakeDword(0x43D810);
MakeComm(0x43D814, "'+8'");
MakeDword(0x43D814);
MakeComm(0x43D818, "'+C'");
MakeDword(0x43D818);
MakeComm(0x43D81C, "'+10'");
MakeDword(0x43D81C);
MakeComm(0x43D820, "'+14'");
MakeDword(0x43D820);
MakeComm(0x43D824, "'+18'");
MakeDword(0x43D824);
MakeComm(0x43D828, "'+1C'");
MakeDword(0x43D828);
MakeComm(0x43D82C, "'+20'");
MakeDword(0x43D82C);
MakeComm(0x43D830, "'+24'");
MakeDword(0x43D830);
MakeComm(0x43D834, "'+28'");
MakeDword(0x43D834);
MakeComm(0x43D838, "'+2C'");
MakeDword(0x43D838);
MakeComm(0x43D83C, "'+30'");
MakeDword(0x43D83C);
MakeComm(0x43D840, "'+34'");
MakeDword(0x43D840);
MakeComm(0x43D844, "'+38'");
MakeDword(0x43D844);
MakeComm(0x43D848, "'+3C'");
MakeDword(0x43D848);
MakeComm(0x43D84C, "'+40'");
MakeDword(0x43D84C);
MakeUnkn(0x43D880, 1);
MakeNameEx(0x43D880, "RTTI_43D880_Class_TCommonDialog", 0);
MakeDword(0x43D880);
MakeUnkn(0x43D884, 1);
MakeNameEx(0x43D884, "", 0);
MakeByte(0x43D884);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43D885, 0x43D893);
MakeDword(0x43D893);
MakeDword(0x43D897);
MakeWord(0x43D89B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43D89D, 0x43D8A5);
MakeWord(0x43D8A5);
MakeDword(0x43D8A7);
MakeDword(0x43D8AB);
MakeDword(0x43D8AF);
MakeDword(0x43D8B3);
MakeDword(0x43D8B7);
MakeDword(0x43D8BB);
MakeWord(0x43D8BF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43D8C1, 0x43D8C7);
MakeDword(0x43D8C7);
MakeDword(0x43D8CB);
MakeDword(0x43D8CF);
MakeDword(0x43D8D3);
MakeDword(0x43D8D7);
MakeDword(0x43D8DB);
MakeWord(0x43D8DF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43D8E1, 0x43D8ED);
MakeDword(0x43D8ED);
MakeDword(0x43D8F1);
MakeDword(0x43D8F5);
MakeDword(0x43D8F9);
MakeDword(0x43D8FD);
MakeDword(0x43D901);
MakeWord(0x43D905);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43D907, 0x43D90F);
MakeDword(0x43D90F);
MakeDword(0x43D913);
MakeDword(0x43D917);
MakeDword(0x43D91B);
MakeDword(0x43D91F);
MakeDword(0x43D923);
MakeWord(0x43D927);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43D929, 0x43D930);
MakeUnkn(0x43D930, 1);
MakeNameEx(0x43D930, "RTTI_43D930_Enumeration_TOpenOption", 0);
MakeDword(0x43D930);
MakeUnkn(0x43D934, 1);
MakeNameEx(0x43D934, "", 0);
MakeByte(0x43D934);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43D935, 0x43D941);
MakeByte(0x43D941);
MakeDword(0x43D942);
MakeDword(0x43D946);
MakeDword(0x43D94A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43D94E, 0x43D959);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43D959, 0x43D96B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43D96B, 0x43D97A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43D97A, 0x43D988);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43D988, 0x43D993);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43D993, 0x43D9A0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43D9A0, 0x43D9B3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43D9B3, 0x43D9C8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43D9C8, 0x43D9D8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43D9D8, 0x43D9E8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43D9E8, 0x43D9F7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43D9F7, 0x43DA04);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DA04, 0x43DA17);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DA17, 0x43DA2A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DA2A, 0x43DA3C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DA3C, 0x43DA4A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DA4A, 0x43DA5B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DA5B, 0x43DA70);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DA70, 0x43DA86);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DA86, 0x43DA95);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DA95, 0x43DAA7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DAA7, 0x43DAB9);
MakeUnkn(0x43DAC4, 1);
MakeNameEx(0x43DAC4, "RTTI_43DAC4_Set_TOpenOptions", 0);
MakeDword(0x43DAC4);
MakeUnkn(0x43DAC8, 1);
MakeNameEx(0x43DAC8, "", 0);
MakeByte(0x43DAC8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DAC9, 0x43DAD6);
MakeByte(0x43DAD6);
MakeDword(0x43DAD7);
MakeUnkn(0x43DADC, 1);
MakeNameEx(0x43DADC, "RTTI_43DADC_Enumeration_TOpenOptionEx", 0);
MakeDword(0x43DADC);
MakeUnkn(0x43DAE0, 1);
MakeNameEx(0x43DAE0, "", 0);
MakeByte(0x43DAE0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DAE1, 0x43DAEF);
MakeByte(0x43DAEF);
MakeDword(0x43DAF0);
MakeDword(0x43DAF4);
MakeDword(0x43DAF8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DAFC, 0x43DB0C);
MakeUnkn(0x43DB14, 1);
MakeNameEx(0x43DB14, "RTTI_43DB14_Set_TOpenOptionsEx", 0);
MakeDword(0x43DB14);
MakeUnkn(0x43DB18, 1);
MakeNameEx(0x43DB18, "", 0);
MakeByte(0x43DB18);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DB19, 0x43DB28);
MakeByte(0x43DB28);
MakeDword(0x43DB29);
MakeUnkn(0x43DB30, 1);
MakeNameEx(0x43DB30, "RTTI_43DB30_Record_TOFNotifyEx", 0);
MakeDword(0x43DB30);
MakeUnkn(0x43DB34, 1);
MakeNameEx(0x43DB34, "", 0);
MakeByte(0x43DB34);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DB35, 0x43DB41);
MakeDword(0x43DB41);
MakeDword(0x43DB45);
MakeDword(0x43DB49);
MakeDword(0x43DB4D);
MakeUnkn(0x43DB54, 1);
MakeNameEx(0x43DB54, "RTTI_43DB54_Method_TIncludeItemEvent", 0);
MakeDword(0x43DB54);
MakeUnkn(0x43DB58, 1);
MakeNameEx(0x43DB58, "", 0);
MakeByte(0x43DB58);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DB59, 0x43DB6B);
MakeByte(0x43DB6B);
MakeByte(0x43DB6C);
MakeByte(0x43DB6D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DB6E, 0x43DB72);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DB72, 0x43DB7E);
MakeByte(0x43DB7E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DB7F, 0x43DB87);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DB87, 0x43DB8F);
MakeByte(0x43DB8F);
MakeDword(0x43DB90);
MakeDword(0x43DB94);
MakeUnkn(0x43DB98, 1);
MakeNameEx(0x43DB98, "VMT_43DB98_TOpenDialog", 0);
MakeDword(0x43DB98);
MakeDword(0x43DB9C);
MakeDword(0x43DBA0);
MakeDword(0x43DBA4);
MakeUnkn(0x43DC2C, 1);
MakeNameEx(0x43DC2C, "TOpenDialog_InitTable", 0);
MakeByte(0x43DC2C);
MakeByte(0x43DC2D);
MakeDword(0x43DC2E);
MakeDword(0x43DC32);
MakeDword(0x43DC36);
MakeDword(0x43DC3A);
MakeDword(0x43DC3E);
MakeDword(0x43DC42);
MakeDword(0x43DC46);
MakeDword(0x43DC4A);
MakeDword(0x43DC4E);
MakeDword(0x43DC52);
MakeDword(0x43DC56);
MakeDword(0x43DC5A);
MakeDword(0x43DBA8);
MakeDword(0x43DBAC);
MakeDword(0x43DBB0);
MakeDword(0x43DBB4);
MakeUnkn(0x43DC5E, 1);
MakeNameEx(0x43DC5E, "TOpenDialog_DynamicTable", 0);
MakeWord(0x43DC5E);
MakeWord(0x43DC60);
MakeWord(0x43DC62);
MakeWord(0x43DC64);
MakeWord(0x43DC66);
MakeWord(0x43DC68);
MakeDword(0x43DC6A);
MakeDword(0x43DC6E);
MakeDword(0x43DC72);
MakeDword(0x43DC76);
MakeDword(0x43DC7A);
MakeDword(0x43DBB8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DC7E, 0x43DC8A);
MakeDword(0x43DBBC);
MakeDword(0x43DBC0);
MakeDword(0x43DBC4);
MakeDword(0x43DBC8);
MakeDword(0x43DBCC);
MakeDword(0x43DBD0);
MakeDword(0x43DBD4);
MakeDword(0x43DBD8);
MakeDword(0x43DBDC);
MakeDword(0x43DBE0);
MakeComm(0x43DBE4, "'+0'");
MakeDword(0x43DBE4);
MakeComm(0x43DBE8, "'+4'");
MakeDword(0x43DBE8);
MakeComm(0x43DBEC, "'+8'");
MakeDword(0x43DBEC);
MakeComm(0x43DBF0, "'+C'");
MakeDword(0x43DBF0);
MakeComm(0x43DBF4, "'+10'");
MakeDword(0x43DBF4);
MakeComm(0x43DBF8, "'+14'");
MakeDword(0x43DBF8);
MakeComm(0x43DBFC, "'+18'");
MakeDword(0x43DBFC);
MakeComm(0x43DC00, "'+1C'");
MakeDword(0x43DC00);
MakeComm(0x43DC04, "'+20'");
MakeDword(0x43DC04);
MakeComm(0x43DC08, "'+24'");
MakeDword(0x43DC08);
MakeComm(0x43DC0C, "'+28'");
MakeDword(0x43DC0C);
MakeComm(0x43DC10, "'+2C'");
MakeDword(0x43DC10);
MakeComm(0x43DC14, "'+30'");
MakeDword(0x43DC14);
MakeComm(0x43DC18, "'+34'");
MakeDword(0x43DC18);
MakeComm(0x43DC1C, "'+38'");
MakeDword(0x43DC1C);
MakeComm(0x43DC20, "'+3C'");
MakeDword(0x43DC20);
MakeComm(0x43DC24, "'+40'");
MakeDword(0x43DC24);
MakeComm(0x43DC28, "'+44'");
MakeDword(0x43DC28);
MakeUnkn(0x43DC8C, 1);
MakeNameEx(0x43DC8C, "RTTI_43DC8C_Class_TOpenDialog", 0);
MakeDword(0x43DC8C);
MakeUnkn(0x43DC90, 1);
MakeNameEx(0x43DC90, "", 0);
MakeByte(0x43DC90);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DC91, 0x43DC9D);
MakeDword(0x43DC9D);
MakeDword(0x43DCA1);
MakeWord(0x43DCA5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DCA7, 0x43DCAF);
MakeWord(0x43DCAF);
MakeDword(0x43DCB1);
MakeDword(0x43DCB5);
MakeDword(0x43DCB9);
MakeDword(0x43DCBD);
MakeDword(0x43DCC1);
MakeDword(0x43DCC5);
MakeWord(0x43DCC9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DCCB, 0x43DCD6);
MakeDword(0x43DCD6);
MakeDword(0x43DCDA);
MakeDword(0x43DCDE);
MakeDword(0x43DCE2);
MakeDword(0x43DCE6);
MakeDword(0x43DCEA);
MakeWord(0x43DCEE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DCF0, 0x43DCF9);
MakeDword(0x43DCF9);
MakeDword(0x43DCFD);
MakeDword(0x43DD01);
MakeDword(0x43DD05);
MakeDword(0x43DD09);
MakeDword(0x43DD0D);
MakeWord(0x43DD11);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DD13, 0x43DD1A);
MakeDword(0x43DD1A);
MakeDword(0x43DD1E);
MakeDword(0x43DD22);
MakeDword(0x43DD26);
MakeDword(0x43DD2A);
MakeDword(0x43DD2E);
MakeWord(0x43DD32);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DD34, 0x43DD40);
MakeDword(0x43DD40);
MakeDword(0x43DD44);
MakeDword(0x43DD48);
MakeDword(0x43DD4C);
MakeDword(0x43DD50);
MakeDword(0x43DD54);
MakeWord(0x43DD58);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DD5A, 0x43DD65);
MakeDword(0x43DD65);
MakeDword(0x43DD69);
MakeDword(0x43DD6D);
MakeDword(0x43DD71);
MakeDword(0x43DD75);
MakeDword(0x43DD79);
MakeWord(0x43DD7D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DD7F, 0x43DD87);
MakeDword(0x43DD87);
MakeDword(0x43DD8B);
MakeDword(0x43DD8F);
MakeDword(0x43DD93);
MakeDword(0x43DD97);
MakeDword(0x43DD9B);
MakeWord(0x43DD9F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DDA1, 0x43DDAB);
MakeDword(0x43DDAB);
MakeDword(0x43DDAF);
MakeDword(0x43DDB3);
MakeDword(0x43DDB7);
MakeDword(0x43DDBB);
MakeDword(0x43DDBF);
MakeWord(0x43DDC3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DDC5, 0x43DDCB);
MakeDword(0x43DDCB);
MakeDword(0x43DDCF);
MakeDword(0x43DDD3);
MakeDword(0x43DDD7);
MakeDword(0x43DDDB);
MakeDword(0x43DDDF);
MakeWord(0x43DDE3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DDE5, 0x43DDF0);
MakeDword(0x43DDF0);
MakeDword(0x43DDF4);
MakeDword(0x43DDF8);
MakeDword(0x43DDFC);
MakeDword(0x43DE00);
MakeDword(0x43DE04);
MakeWord(0x43DE08);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DE0A, 0x43DE19);
MakeDword(0x43DE19);
MakeDword(0x43DE1D);
MakeDword(0x43DE21);
MakeDword(0x43DE25);
MakeDword(0x43DE29);
MakeDword(0x43DE2D);
MakeWord(0x43DE31);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DE33, 0x43DE45);
MakeDword(0x43DE45);
MakeDword(0x43DE49);
MakeDword(0x43DE4D);
MakeDword(0x43DE51);
MakeDword(0x43DE55);
MakeDword(0x43DE59);
MakeWord(0x43DE5D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DE5F, 0x43DE6C);
MakeDword(0x43DE6C);
MakeDword(0x43DE70);
MakeDword(0x43DE74);
MakeDword(0x43DE78);
MakeDword(0x43DE7C);
MakeDword(0x43DE80);
MakeWord(0x43DE84);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DE86, 0x43DE94);
MakeUnkn(0x43DE94, 1);
MakeNameEx(0x43DE94, "VMT_43DE94_TSaveDialog", 0);
MakeDword(0x43DE94);
MakeDword(0x43DE98);
MakeDword(0x43DE9C);
MakeDword(0x43DEA0);
MakeDword(0x43DEA4);
MakeDword(0x43DEA8);
MakeDword(0x43DEAC);
MakeUnkn(0x43DF28, 1);
MakeNameEx(0x43DF28, "TSaveDialog_MethodTable", 0);
MakeWord(0x43DF28);
MakeWord(0x43DF2A);
MakeDword(0x43DF2C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DF30, 0x43DF38);
MakeDword(0x43DEB0);
MakeDword(0x43DEB4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DF38, 0x43DF44);
MakeDword(0x43DEB8);
MakeDword(0x43DEBC);
MakeDword(0x43DEC0);
MakeDword(0x43DEC4);
MakeDword(0x43DEC8);
MakeDword(0x43DECC);
MakeDword(0x43DED0);
MakeDword(0x43DED4);
MakeDword(0x43DED8);
MakeDword(0x43DEDC);
MakeComm(0x43DEE0, "'+0'");
MakeDword(0x43DEE0);
MakeComm(0x43DEE4, "'+4'");
MakeDword(0x43DEE4);
MakeComm(0x43DEE8, "'+8'");
MakeDword(0x43DEE8);
MakeComm(0x43DEEC, "'+C'");
MakeDword(0x43DEEC);
MakeComm(0x43DEF0, "'+10'");
MakeDword(0x43DEF0);
MakeComm(0x43DEF4, "'+14'");
MakeDword(0x43DEF4);
MakeComm(0x43DEF8, "'+18'");
MakeDword(0x43DEF8);
MakeComm(0x43DEFC, "'+1C'");
MakeDword(0x43DEFC);
MakeComm(0x43DF00, "'+20'");
MakeDword(0x43DF00);
MakeComm(0x43DF04, "'+24'");
MakeDword(0x43DF04);
MakeComm(0x43DF08, "'+28'");
MakeDword(0x43DF08);
MakeComm(0x43DF0C, "'+2C'");
MakeDword(0x43DF0C);
MakeComm(0x43DF10, "'+30'");
MakeDword(0x43DF10);
MakeComm(0x43DF14, "'+34'");
MakeDword(0x43DF14);
MakeComm(0x43DF18, "'+38'");
MakeDword(0x43DF18);
MakeComm(0x43DF1C, "'+3C'");
MakeDword(0x43DF1C);
MakeComm(0x43DF20, "'+40'");
MakeDword(0x43DF20);
MakeComm(0x43DF24, "'+44'");
MakeDword(0x43DF24);
MakeUnkn(0x43DF44, 1);
MakeNameEx(0x43DF44, "RTTI_43DF44_Class_TSaveDialog", 0);
MakeDword(0x43DF44);
MakeUnkn(0x43DF48, 1);
MakeNameEx(0x43DF48, "", 0);
MakeByte(0x43DF48);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DF49, 0x43DF55);
MakeDword(0x43DF55);
MakeDword(0x43DF59);
MakeWord(0x43DF5D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DF5F, 0x43DF67);
MakeWord(0x43DF67);
MakeUnkn(0x43DF6C, 1);
MakeNameEx(0x43DF6C, "RTTI_43DF6C_Enumeration_TColorDialogOption", 0);
MakeDword(0x43DF6C);
MakeUnkn(0x43DF70, 1);
MakeNameEx(0x43DF70, "", 0);
MakeByte(0x43DF70);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DF71, 0x43DF84);
MakeByte(0x43DF84);
MakeDword(0x43DF85);
MakeDword(0x43DF89);
MakeDword(0x43DF8D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DF91, 0x43DF9C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DF9C, 0x43DFAE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DFAE, 0x43DFB9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DFB9, 0x43DFC6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DFC6, 0x43DFD1);
MakeUnkn(0x43DFDC, 1);
MakeNameEx(0x43DFDC, "RTTI_43DFDC_Set_TColorDialogOptions", 0);
MakeDword(0x43DFDC);
MakeUnkn(0x43DFE0, 1);
MakeNameEx(0x43DFE0, "", 0);
MakeByte(0x43DFE0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43DFE1, 0x43DFF5);
MakeByte(0x43DFF5);
MakeDword(0x43DFF6);
MakeUnkn(0x43DFFC, 1);
MakeNameEx(0x43DFFC, "VMT_43DFFC_TColorDialog", 0);
MakeDword(0x43DFFC);
MakeDword(0x43E000);
MakeDword(0x43E004);
MakeDword(0x43E008);
MakeDword(0x43E00C);
MakeDword(0x43E010);
MakeDword(0x43E014);
MakeDword(0x43E018);
MakeDword(0x43E01C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E08C, 0x43E099);
MakeDword(0x43E020);
MakeDword(0x43E024);
MakeDword(0x43E028);
MakeDword(0x43E02C);
MakeDword(0x43E030);
MakeDword(0x43E034);
MakeDword(0x43E038);
MakeDword(0x43E03C);
MakeDword(0x43E040);
MakeDword(0x43E044);
MakeComm(0x43E048, "'+0'");
MakeDword(0x43E048);
MakeComm(0x43E04C, "'+4'");
MakeDword(0x43E04C);
MakeComm(0x43E050, "'+8'");
MakeDword(0x43E050);
MakeComm(0x43E054, "'+C'");
MakeDword(0x43E054);
MakeComm(0x43E058, "'+10'");
MakeDword(0x43E058);
MakeComm(0x43E05C, "'+14'");
MakeDword(0x43E05C);
MakeComm(0x43E060, "'+18'");
MakeDword(0x43E060);
MakeComm(0x43E064, "'+1C'");
MakeDword(0x43E064);
MakeComm(0x43E068, "'+20'");
MakeDword(0x43E068);
MakeComm(0x43E06C, "'+24'");
MakeDword(0x43E06C);
MakeComm(0x43E070, "'+28'");
MakeDword(0x43E070);
MakeComm(0x43E074, "'+2C'");
MakeDword(0x43E074);
MakeComm(0x43E078, "'+30'");
MakeDword(0x43E078);
MakeComm(0x43E07C, "'+34'");
MakeDword(0x43E07C);
MakeComm(0x43E080, "'+38'");
MakeDword(0x43E080);
MakeComm(0x43E084, "'+3C'");
MakeDword(0x43E084);
MakeComm(0x43E088, "'+40'");
MakeDword(0x43E088);
MakeUnkn(0x43E09C, 1);
MakeNameEx(0x43E09C, "RTTI_43E09C_Class_TColorDialog", 0);
MakeDword(0x43E09C);
MakeUnkn(0x43E0A0, 1);
MakeNameEx(0x43E0A0, "", 0);
MakeByte(0x43E0A0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E0A1, 0x43E0AE);
MakeDword(0x43E0AE);
MakeDword(0x43E0B2);
MakeWord(0x43E0B6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E0B8, 0x43E0C0);
MakeWord(0x43E0C0);
MakeDword(0x43E0C2);
MakeDword(0x43E0C6);
MakeDword(0x43E0CA);
MakeDword(0x43E0CE);
MakeDword(0x43E0D2);
MakeDword(0x43E0D6);
MakeWord(0x43E0DA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E0DC, 0x43E0E2);
MakeDword(0x43E0E2);
MakeDword(0x43E0E6);
MakeDword(0x43E0EA);
MakeDword(0x43E0EE);
MakeDword(0x43E0F2);
MakeDword(0x43E0F6);
MakeWord(0x43E0FA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E0FC, 0x43E102);
MakeDword(0x43E102);
MakeDword(0x43E106);
MakeDword(0x43E10A);
MakeDword(0x43E10E);
MakeDword(0x43E112);
MakeDword(0x43E116);
MakeWord(0x43E11A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E11C, 0x43E129);
MakeDword(0x43E129);
MakeDword(0x43E12D);
MakeDword(0x43E131);
MakeDword(0x43E135);
MakeDword(0x43E139);
MakeDword(0x43E13D);
MakeWord(0x43E141);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E143, 0x43E14B);
MakeUnkn(0x43E14C, 1);
MakeNameEx(0x43E14C, "RTTI_43E14C_Enumeration_TPrintRange", 0);
MakeDword(0x43E14C);
MakeUnkn(0x43E150, 1);
MakeNameEx(0x43E150, "", 0);
MakeByte(0x43E150);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E151, 0x43E15D);
MakeByte(0x43E15D);
MakeDword(0x43E15E);
MakeDword(0x43E162);
MakeDword(0x43E166);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E16A, 0x43E175);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E175, 0x43E181);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E181, 0x43E18C);
MakeUnkn(0x43E194, 1);
MakeNameEx(0x43E194, "RTTI_43E194_Enumeration_TPrintDialogOption", 0);
MakeDword(0x43E194);
MakeUnkn(0x43E198, 1);
MakeNameEx(0x43E198, "", 0);
MakeByte(0x43E198);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E199, 0x43E1AC);
MakeByte(0x43E1AC);
MakeDword(0x43E1AD);
MakeDword(0x43E1B1);
MakeDword(0x43E1B5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E1B9, 0x43E1C7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E1C7, 0x43E1D2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E1D2, 0x43E1DE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E1DE, 0x43E1E8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E1E8, 0x43E1EF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E1EF, 0x43E204);
MakeUnkn(0x43E20C, 1);
MakeNameEx(0x43E20C, "RTTI_43E20C_Set_TPrintDialogOptions", 0);
MakeDword(0x43E20C);
MakeUnkn(0x43E210, 1);
MakeNameEx(0x43E210, "", 0);
MakeByte(0x43E210);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E211, 0x43E225);
MakeByte(0x43E225);
MakeDword(0x43E226);
MakeUnkn(0x43E22C, 1);
MakeNameEx(0x43E22C, "VMT_43E22C_TPrintDialog", 0);
MakeDword(0x43E22C);
MakeDword(0x43E230);
MakeDword(0x43E234);
MakeDword(0x43E238);
MakeDword(0x43E23C);
MakeDword(0x43E240);
MakeDword(0x43E244);
MakeDword(0x43E248);
MakeDword(0x43E24C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E2BC, 0x43E2C9);
MakeDword(0x43E250);
MakeDword(0x43E254);
MakeDword(0x43E258);
MakeDword(0x43E25C);
MakeDword(0x43E260);
MakeDword(0x43E264);
MakeDword(0x43E268);
MakeDword(0x43E26C);
MakeDword(0x43E270);
MakeDword(0x43E274);
MakeComm(0x43E278, "'+0'");
MakeDword(0x43E278);
MakeComm(0x43E27C, "'+4'");
MakeDword(0x43E27C);
MakeComm(0x43E280, "'+8'");
MakeDword(0x43E280);
MakeComm(0x43E284, "'+C'");
MakeDword(0x43E284);
MakeComm(0x43E288, "'+10'");
MakeDword(0x43E288);
MakeComm(0x43E28C, "'+14'");
MakeDword(0x43E28C);
MakeComm(0x43E290, "'+18'");
MakeDword(0x43E290);
MakeComm(0x43E294, "'+1C'");
MakeDword(0x43E294);
MakeComm(0x43E298, "'+20'");
MakeDword(0x43E298);
MakeComm(0x43E29C, "'+24'");
MakeDword(0x43E29C);
MakeComm(0x43E2A0, "'+28'");
MakeDword(0x43E2A0);
MakeComm(0x43E2A4, "'+2C'");
MakeDword(0x43E2A4);
MakeComm(0x43E2A8, "'+30'");
MakeDword(0x43E2A8);
MakeComm(0x43E2AC, "'+34'");
MakeDword(0x43E2AC);
MakeComm(0x43E2B0, "'+38'");
MakeDword(0x43E2B0);
MakeComm(0x43E2B4, "'+3C'");
MakeDword(0x43E2B4);
MakeComm(0x43E2B8, "'+40'");
MakeDword(0x43E2B8);
MakeUnkn(0x43E2CC, 1);
MakeNameEx(0x43E2CC, "RTTI_43E2CC_Class_TPrintDialog", 0);
MakeDword(0x43E2CC);
MakeUnkn(0x43E2D0, 1);
MakeNameEx(0x43E2D0, "", 0);
MakeByte(0x43E2D0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E2D1, 0x43E2DE);
MakeDword(0x43E2DE);
MakeDword(0x43E2E2);
MakeWord(0x43E2E6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E2E8, 0x43E2F0);
MakeWord(0x43E2F0);
MakeDword(0x43E2F2);
MakeDword(0x43E2F6);
MakeDword(0x43E2FA);
MakeDword(0x43E2FE);
MakeDword(0x43E302);
MakeDword(0x43E306);
MakeWord(0x43E30A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E30C, 0x43E314);
MakeDword(0x43E314);
MakeDword(0x43E318);
MakeDword(0x43E31C);
MakeDword(0x43E320);
MakeDword(0x43E324);
MakeDword(0x43E328);
MakeWord(0x43E32C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E32E, 0x43E335);
MakeDword(0x43E335);
MakeDword(0x43E339);
MakeDword(0x43E33D);
MakeDword(0x43E341);
MakeDword(0x43E345);
MakeDword(0x43E349);
MakeWord(0x43E34D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E34F, 0x43E358);
MakeDword(0x43E358);
MakeDword(0x43E35C);
MakeDword(0x43E360);
MakeDword(0x43E364);
MakeDword(0x43E368);
MakeDword(0x43E36C);
MakeWord(0x43E370);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E372, 0x43E37A);
MakeDword(0x43E37A);
MakeDword(0x43E37E);
MakeDword(0x43E382);
MakeDword(0x43E386);
MakeDword(0x43E38A);
MakeDword(0x43E38E);
MakeWord(0x43E392);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E394, 0x43E39C);
MakeDword(0x43E39C);
MakeDword(0x43E3A0);
MakeDword(0x43E3A4);
MakeDword(0x43E3A8);
MakeDword(0x43E3AC);
MakeDword(0x43E3B0);
MakeWord(0x43E3B4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E3B6, 0x43E3BE);
MakeDword(0x43E3BE);
MakeDword(0x43E3C2);
MakeDword(0x43E3C6);
MakeDword(0x43E3CA);
MakeDword(0x43E3CE);
MakeDword(0x43E3D2);
MakeWord(0x43E3D6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E3D8, 0x43E3E4);
MakeDword(0x43E3E4);
MakeDword(0x43E3E8);
MakeDword(0x43E3EC);
MakeDword(0x43E3F0);
MakeDword(0x43E3F4);
MakeDword(0x43E3F8);
MakeWord(0x43E3FC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E3FE, 0x43E409);
MakeDword(0x43E409);
MakeDword(0x43E40D);
MakeDword(0x43E411);
MakeDword(0x43E415);
MakeDword(0x43E419);
MakeDword(0x43E41D);
MakeWord(0x43E421);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E423, 0x43E42A);
MakeUnkn(0x43E42C, 1);
MakeNameEx(0x43E42C, "CenterWindow", 0x20);
MakeComm(0x43E42C, "'procedure CenterWindow(Wnd:HWND);'");
MakeCode(0x43E42C);
MakeCode(0x43E466);
MakeCode(0x43E476);
MakeCode(0x43E486);
MakeCode(0x43E4CE);
MakeFunction(0x43E42C, 0x43E4E0);
MakeUnkn(0x43E4E0, 1);
MakeNameEx(0x43E4E0, "DialogHook", 0x20);
MakeComm(0x43E4E0, "'function DialogHook(Wnd:HWND; Msg:UINT; WParam:WPARAM; LParam:LPARAM):UINT; stdcall;'");
MakeCode(0x43E4E0);
MakeCode(0x43E53E);
MakeFunction(0x43E4E0, 0x43E547);
MakeUnkn(0x43E548, 1);
MakeNameEx(0x43E548, "VMT_43E548_TRedirectorWindow", 0);
MakeDword(0x43E548);
MakeDword(0x43E54C);
MakeDword(0x43E550);
MakeDword(0x43E554);
MakeDword(0x43E558);
MakeDword(0x43E55C);
MakeDword(0x43E560);
MakeDword(0x43E564);
MakeUnkn(0x43E66C, 1);
MakeNameEx(0x43E66C, "TRedirectorWindow_DynamicTable", 0);
MakeWord(0x43E66C);
MakeWord(0x43E66E);
MakeDword(0x43E670);
MakeDword(0x43E568);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E674, 0x43E686);
MakeDword(0x43E56C);
MakeDword(0x43E570);
MakeDword(0x43E574);
MakeDword(0x43E578);
MakeDword(0x43E57C);
MakeDword(0x43E580);
MakeDword(0x43E584);
MakeDword(0x43E588);
MakeDword(0x43E58C);
MakeDword(0x43E590);
MakeComm(0x43E594, "'+0'");
MakeDword(0x43E594);
MakeComm(0x43E598, "'+4'");
MakeDword(0x43E598);
MakeComm(0x43E59C, "'+8'");
MakeDword(0x43E59C);
MakeComm(0x43E5A0, "'+C'");
MakeDword(0x43E5A0);
MakeComm(0x43E5A4, "'+10'");
MakeDword(0x43E5A4);
MakeComm(0x43E5A8, "'+14'");
MakeDword(0x43E5A8);
MakeComm(0x43E5AC, "'+18'");
MakeDword(0x43E5AC);
MakeComm(0x43E5B0, "'+1C'");
MakeDword(0x43E5B0);
MakeComm(0x43E5B4, "'+20'");
MakeDword(0x43E5B4);
MakeComm(0x43E5B8, "'+24'");
MakeDword(0x43E5B8);
MakeComm(0x43E5BC, "'+28'");
MakeDword(0x43E5BC);
MakeComm(0x43E5C0, "'+2C'");
MakeDword(0x43E5C0);
MakeComm(0x43E5C4, "'+30'");
MakeDword(0x43E5C4);
MakeComm(0x43E5C8, "'+34'");
MakeDword(0x43E5C8);
MakeComm(0x43E5CC, "'+38'");
MakeDword(0x43E5CC);
MakeComm(0x43E5D0, "'+3C'");
MakeDword(0x43E5D0);
MakeComm(0x43E5D4, "'+40'");
MakeDword(0x43E5D4);
MakeComm(0x43E5D8, "'+44'");
MakeDword(0x43E5D8);
MakeComm(0x43E5DC, "'+48'");
MakeDword(0x43E5DC);
MakeComm(0x43E5E0, "'+4C'");
MakeDword(0x43E5E0);
MakeComm(0x43E5E4, "'+50'");
MakeDword(0x43E5E4);
MakeComm(0x43E5E8, "'+54'");
MakeDword(0x43E5E8);
MakeComm(0x43E5EC, "'+58'");
MakeDword(0x43E5EC);
MakeComm(0x43E5F0, "'+5C'");
MakeDword(0x43E5F0);
MakeComm(0x43E5F4, "'+60'");
MakeDword(0x43E5F4);
MakeComm(0x43E5F8, "'+64'");
MakeDword(0x43E5F8);
MakeComm(0x43E5FC, "'+68'");
MakeDword(0x43E5FC);
MakeComm(0x43E600, "'+6C'");
MakeDword(0x43E600);
MakeComm(0x43E604, "'+70'");
MakeDword(0x43E604);
MakeComm(0x43E608, "'+74'");
MakeDword(0x43E608);
MakeComm(0x43E60C, "'+78'");
MakeDword(0x43E60C);
MakeComm(0x43E610, "'+7C'");
MakeDword(0x43E610);
MakeComm(0x43E614, "'+80'");
MakeDword(0x43E614);
MakeComm(0x43E618, "'+84'");
MakeDword(0x43E618);
MakeComm(0x43E61C, "'+88'");
MakeDword(0x43E61C);
MakeComm(0x43E620, "'+8C'");
MakeDword(0x43E620);
MakeComm(0x43E624, "'+90'");
MakeDword(0x43E624);
MakeComm(0x43E628, "'+94'");
MakeDword(0x43E628);
MakeComm(0x43E62C, "'+98'");
MakeDword(0x43E62C);
MakeComm(0x43E630, "'+9C'");
MakeDword(0x43E630);
MakeComm(0x43E634, "'+A0'");
MakeDword(0x43E634);
MakeComm(0x43E638, "'+A4'");
MakeDword(0x43E638);
MakeComm(0x43E63C, "'+A8'");
MakeDword(0x43E63C);
MakeComm(0x43E640, "'+AC'");
MakeDword(0x43E640);
MakeComm(0x43E644, "'+B0'");
MakeDword(0x43E644);
MakeComm(0x43E648, "'+B4'");
MakeDword(0x43E648);
MakeComm(0x43E64C, "'+B8'");
MakeDword(0x43E64C);
MakeComm(0x43E650, "'+BC'");
MakeDword(0x43E650);
MakeComm(0x43E654, "'+C0'");
MakeDword(0x43E654);
MakeComm(0x43E658, "'+C4'");
MakeDword(0x43E658);
MakeComm(0x43E65C, "'+C8'");
MakeDword(0x43E65C);
MakeComm(0x43E660, "'+CC'");
MakeDword(0x43E660);
MakeComm(0x43E664, "'+D0'");
MakeDword(0x43E664);
MakeComm(0x43E668, "'+D4'");
MakeDword(0x43E668);
MakeUnkn(0x43E688, 1);
MakeNameEx(0x43E688, "RTTI_43E688_Class_TRedirectorWindow", 0);
MakeDword(0x43E688);
MakeUnkn(0x43E68C, 1);
MakeNameEx(0x43E68C, "", 0);
MakeByte(0x43E68C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E68D, 0x43E69F);
MakeDword(0x43E69F);
MakeDword(0x43E6A3);
MakeWord(0x43E6A7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43E6A9, 0x43E6B1);
MakeWord(0x43E6B1);
MakeUnkn(0x43E6B4, 1);
MakeNameEx(0x43E6B4, "TRedirectorWindow.CreateParams", 0x20);
MakeComm(0x43E6B4, "'procedure TRedirectorWindow.CreateParams(var Params:TCreateParams);'");
MakeCode(0x43E6B4);
MakeFunction(0x43E6B4, 0x43E6D6);
MakeUnkn(0x43E6D8, 1);
MakeNameEx(0x43E6D8, "TRedirectorWindow.WndProc", 0x20);
MakeComm(0x43E6D8, "'procedure TRedirectorWindow.WndProc(var Message:TMessage);'");
MakeCode(0x43E6D8);
MakeCode(0x43E711);
MakeCode(0x43E73E);
MakeFunction(0x43E6D8, 0x43E741);
MakeUnkn(0x43E744, 1);
MakeNameEx(0x43E744, "TRedirectorWindow.CMRelease", 0x20);
MakeComm(0x43E744, "'procedure TRedirectorWindow.CMRelease;'");
MakeCode(0x43E744);
MakeFunction(0x43E744, 0x43E74A);
MakeUnkn(0x43E74C, 1);
MakeNameEx(0x43E74C, "TCommonDialog.Create", 0x20);
MakeComm(0x43E74C, "'constructor TCommonDialog.Create(AOwner:TComponent);'");
MakeCode(0x43E74C);
MakeCode(0x43E75A);
MakeCode(0x43E78E);
MakeFunction(0x43E74C, 0x43E793);
MakeUnkn(0x43E794, 1);
MakeNameEx(0x43E794, "TCommonDialog.Destroy", 0x20);
MakeComm(0x43E794, "'destructor TCommonDialog.Destroy;'");
MakeCode(0x43E794);
MakeCode(0x43E7AB);
MakeCode(0x43E7BA);
MakeCode(0x43E7D9);
MakeFunction(0x43E794, 0x43E7DC);
MakeUnkn(0x43E7DC, 1);
MakeNameEx(0x43E7DC, "TCommonDialog.Execute", 0x20);
MakeComm(0x43E7DC, "'function TCommonDialog.Execute:Boolean;'");
MakeCode(0x43E7DC);
MakeCode(0x43E80B);
MakeCode(0x43E815);
MakeFunction(0x43E7DC, 0x43E820);
MakeUnkn(0x43E820, 1);
MakeNameEx(0x43E820, "TCommonDialog.MessageHook", 0x20);
MakeComm(0x43E820, "'function TCommonDialog.MessageHook(var Msg:TMessage):Boolean;'");
MakeCode(0x43E820);
MakeCode(0x43E845);
MakeFunction(0x43E820, 0x43E848);
MakeUnkn(0x43E848, 1);
MakeNameEx(0x43E848, "TCommonDialog.DefaultHandler", 0x20);
MakeComm(0x43E848, "'procedure TCommonDialog.DefaultHandler(var Message:void );'");
MakeCode(0x43E848);
MakeCode(0x43E870);
MakeCode(0x43E879);
MakeFunction(0x43E848, 0x43E87D);
MakeUnkn(0x43E880, 1);
MakeNameEx(0x43E880, "TCommonDialog.MainWndProc", 0x20);
MakeComm(0x43E880, "'procedure TCommonDialog.MainWndProc(var Message:TMessage);'");
MakeCode(0x43E880);
MakeCode(0x43E8A0);
MakeCode(0x43E8AA);
MakeCode(0x43E8C3);
MakeFunction(0x43E880, 0x43E8C9);
MakeUnkn(0x43E8CC, 1);
MakeNameEx(0x43E8CC, "TCommonDialog.WndProc", 0x20);
MakeComm(0x43E8CC, "'procedure TCommonDialog.WndProc(var Message:TMessage);'");
MakeCode(0x43E8CC);
MakeFunction(0x43E8CC, 0x43E8D2);
MakeUnkn(0x43E8D4, 1);
MakeNameEx(0x43E8D4, "TCommonDialog.WMDestroy", 0x20);
MakeComm(0x43E8D4, "'procedure TCommonDialog.WMDestroy(var Message:TWMDestroy);'");
MakeCode(0x43E8D4);
MakeFunction(0x43E8D4, 0x43E8EB);
MakeUnkn(0x43E8EC, 1);
MakeNameEx(0x43E8EC, "TCommonDialog.WMInitDialog", 0x20);
MakeComm(0x43E8EC, "'procedure TCommonDialog.WMInitDialog(var Message:TWMInitDialog);'");
MakeCode(0x43E8EC);
MakeFunction(0x43E8EC, 0x43E901);
MakeUnkn(0x43E904, 1);
MakeNameEx(0x43E904, "TCommonDialog.WMNCDestroy", 0x20);
MakeComm(0x43E904, "'procedure TCommonDialog.WMNCDestroy(var Message:TWMNCDestroy);'");
MakeCode(0x43E904);
MakeFunction(0x43E904, 0x43E915);
MakeUnkn(0x43E918, 1);
MakeNameEx(0x43E918, "TCommonDialog.TaskModalDialog", 0x20);
MakeComm(0x43E918, "'function TCommonDialog.TaskModalDialog(DialogFunc:Pointer; var DialogData:void ):BOOL;'");
MakeCode(0x43E918);
MakeCode(0x43E975);
MakeCode(0x43E982);
MakeCode(0x43E988);
MakeCode(0x43E98D);
MakeCode(0x43E98F);
MakeCode(0x43E99C);
MakeCode(0x43E9C1);
MakeCode(0x43E9C6);
MakeFunction(0x43E918, 0x43E9D1);
MakeUnkn(0x43E9D4, 1);
MakeNameEx(0x43E9D4, "TCommonDialog.DoClose", 0x20);
MakeComm(0x43E9D4, "'procedure TCommonDialog.DoClose;'");
MakeCode(0x43E9D4);
MakeCode(0x43E9E6);
MakeFunction(0x43E9D4, 0x43E9E8);
MakeUnkn(0x43E9E8, 1);
MakeNameEx(0x43E9E8, "TCommonDialog.DoShow", 0x20);
MakeComm(0x43E9E8, "'procedure TCommonDialog.DoShow;'");
MakeCode(0x43E9E8);
MakeCode(0x43E9FA);
MakeFunction(0x43E9E8, 0x43E9FC);
MakeUnkn(0x43E9FC, 1);
MakeNameEx(0x43E9FC, "ExplorerHook", 0x20);
MakeComm(0x43E9FC, "'function ExplorerHook(Wnd:HWND; Msg:UINT; WParam:WPARAM; LParam:LPARAM):UINT; stdcall;'");
MakeCode(0x43E9FC);
MakeCode(0x43EA59);
MakeCode(0x43EA74);
MakeFunction(0x43E9FC, 0x43EA7F);
MakeUnkn(0x43EA80, 1);
MakeNameEx(0x43EA80, "TOpenDialog.Create", 0x20);
MakeComm(0x43EA80, "'constructor TOpenDialog.Create(AOwner:TComponent);'");
MakeCode(0x43EA80);
MakeCode(0x43EA8E);
MakeCode(0x43EAF4);
MakeFunction(0x43EA80, 0x43EAF9);
MakeUnkn(0x43EB04, 1);
MakeNameEx(0x43EB04, "TOpenDialog.Destroy", 0x20);
MakeComm(0x43EB04, "'destructor TOpenDialog.Destroy;'");
MakeCode(0x43EB04);
MakeCode(0x43EB39);
MakeFunction(0x43EB04, 0x43EB3C);
MakeUnkn(0x43EB3C, 1);
MakeNameEx(0x43EB3C, "TOpenDialog.CanClose", 0x20);
MakeComm(0x43EB3C, "'function TOpenDialog.CanClose(var OpenFileName:TOpenFilename):Boolean;'");
MakeCode(0x43EB3C);
MakeFunction(0x43EB3C, 0x43EB66);
MakeUnkn(0x43EB68, 1);
MakeNameEx(0x43EB68, "TOpenDialog.WndProc", 0x20);
MakeComm(0x43EB68, "'procedure TOpenDialog.WndProc(var Message:TMessage);'");
MakeCode(0x43EB68);
MakeCode(0x43EB88);
MakeCode(0x43EBCC);
MakeCode(0x43EBF0);
MakeCode(0x43EBFD);
MakeCode(0x43EC0A);
MakeCode(0x43EC17);
MakeCode(0x43EC32);
MakeCode(0x43EC55);
MakeCode(0x43EC5E);
MakeFunction(0x43EB68, 0x43EC63);
MakeUnkn(0x43EC64, 1);
MakeNameEx(0x43EC64, "TOpenDialog.DoCanClose", 0x20);
MakeComm(0x43EC64, "'procedure TOpenDialog.DoCanClose;'");
MakeCode(0x43EC64);
MakeCode(0x43EC86);
MakeFunction(0x43EC64, 0x43EC8D);
MakeUnkn(0x43EC90, 1);
MakeNameEx(0x43EC90, "TOpenDialog.DoSelectionChange", 0x20);
MakeComm(0x43EC90, "'procedure TOpenDialog.DoSelectionChange;'");
MakeCode(0x43EC90);
MakeCode(0x43ECAB);
MakeFunction(0x43EC90, 0x43ECAD);
MakeUnkn(0x43ECB0, 1);
MakeNameEx(0x43ECB0, "TOpenDialog.DoFolderChange", 0x20);
MakeComm(0x43ECB0, "'procedure TOpenDialog.DoFolderChange;'");
MakeCode(0x43ECB0);
MakeCode(0x43ECCB);
MakeFunction(0x43ECB0, 0x43ECCD);
MakeUnkn(0x43ECD0, 1);
MakeNameEx(0x43ECD0, "TOpenDialog.DoTypeChange", 0x20);
MakeComm(0x43ECD0, "'procedure TOpenDialog.DoTypeChange;'");
MakeCode(0x43ECD0);
MakeCode(0x43ECEB);
MakeFunction(0x43ECD0, 0x43ECED);
MakeUnkn(0x43ECF0, 1);
MakeNameEx(0x43ECF0, "TOpenDialog.ReadFileEditStyle", 0x20);
MakeComm(0x43ECF0, "'procedure TOpenDialog.ReadFileEditStyle(Reader:TReader);'");
MakeCode(0x43ECF0);
MakeCode(0x43ED0C);
MakeCode(0x43ED19);
MakeCode(0x43ED22);
MakeCode(0x43ED27);
MakeFunction(0x43ECF0, 0x43ED2C);
MakeUnkn(0x43ED2C, 1);
MakeNameEx(0x43ED2C, "TOpenDialog.DefineProperties", 0x20);
MakeComm(0x43ED2C, "'procedure TOpenDialog.DefineProperties(Filer:TFiler);'");
MakeCode(0x43ED2C);
MakeFunction(0x43ED2C, 0x43ED56);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43ED60, -1);
MakeDword(0x43ED5C);
MakeDword(0x43ED58);
MakeUnkn(0x43ED70, 1);
MakeNameEx(0x43ED70, "AllocFilterStr", 0x20);
MakeComm(0x43ED70, "'function AllocFilterStr(const S:AnsiString):AnsiString;'");
MakeCode(0x43ED70);
MakeCode(0x43EDA3);
MakeCode(0x43EDB6);
MakeFunction(0x43ED70, 0x43EDB9);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43EDC4, -1);
MakeDword(0x43EDC0);
MakeDword(0x43EDBC);
MakeUnkn(0x43EDC8, 1);
MakeNameEx(0x43EDC8, "TOpenDialog.DoExecute", 0x20);
MakeComm(0x43EDC8, "'function TOpenDialog.DoExecute(Func:Pointer; ParentWnd:HWND):BOOL;'");
MakeCode(0x43EDC8);
MakeCode(0x43EE1F);
MakeCode(0x43EE3D);
MakeCode(0x43EE46);
MakeCode(0x43EE4D);
MakeCode(0x43EE83);
MakeCode(0x43EE8A);
MakeCode(0x43EEE5);
MakeCode(0x43EEF0);
MakeCode(0x43EF0E);
MakeCode(0x43EF1C);
MakeCode(0x43EF23);
MakeCode(0x43EF50);
MakeCode(0x43EF6E);
MakeCode(0x43EF75);
MakeCode(0x43EF86);
MakeCode(0x43EF8D);
MakeCode(0x43EF97);
MakeCode(0x43EF9E);
MakeCode(0x43EFD5);
MakeCode(0x43EFE6);
MakeCode(0x43EFF6);
MakeCode(0x43EFFF);
MakeCode(0x43F006);
MakeCode(0x43F01E);
MakeCode(0x43F05F);
MakeCode(0x43F06C);
MakeCode(0x43F098);
MakeCode(0x43F09F);
MakeCode(0x43F0AB);
MakeCode(0x43F0AF);
MakeCode(0x43F0B5);
MakeCode(0x43F0C2);
MakeCode(0x43F0D0);
MakeCode(0x43F0D5);
MakeFunction(0x43EDC8, 0x43F0DF);
MakeUnkn(0x43F0E4, 1);
MakeNameEx(0x43F0E4, "ExtractFileName_0", 0x20);
MakeComm(0x43F0E4, "'function ExtractFileName(P:PChar; var S:TFileName):PChar;'");
MakeCode(0x43F0E4);
MakeCode(0x43F116);
MakeCode(0x43F124);
MakeFunction(0x43F0E4, 0x43F12B);
MakeUnkn(0x43F12C, 1);
MakeNameEx(0x43F12C, "ExtractFileNames", 0x20);
MakeComm(0x43F12C, "'procedure ExtractFileNames(P:PChar);'");
MakeCode(0x43F12C);
MakeCode(0x43F185);
MakeCode(0x43F19F);
MakeCode(0x43F1B3);
MakeCode(0x43F1BC);
MakeCode(0x43F1C6);
MakeCode(0x43F1CE);
MakeCode(0x43F1D8);
MakeCode(0x43F1EA);
MakeCode(0x43F215);
MakeCode(0x43F222);
MakeCode(0x43F230);
MakeCode(0x43F235);
MakeFunction(0x43F12C, 0x43F23C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43F244, -1);
MakeDword(0x43F240);
MakeDword(0x43F23C);
MakeUnkn(0x43F248, 1);
MakeNameEx(0x43F248, "TOpenDialog.GetFileNames", 0x20);
MakeComm(0x43F248, "'procedure TOpenDialog.GetFileNames(var OpenFileName:TOpenFilename);'");
MakeCode(0x43F248);
MakeCode(0x43F285);
MakeCode(0x43F289);
MakeCode(0x43F2C1);
MakeCode(0x43F2EB);
MakeCode(0x43F2F8);
MakeCode(0x43F301);
MakeCode(0x43F306);
MakeFunction(0x43F248, 0x43F30D);
MakeCode(0x43F310);
MakeComm(0x43F317, "'TOpenDialog.FHandle:HWND'");
MakeComm(0x43F31E, "'TOpenDialog.?f66:byte'");
MakeComm(0x43F339, "'TOpenDialog.FHandle:HWND'");
MakeCode(0x43F346);
MakeCode(0x43F34F);
MakeCode(0x43F35D);
MakeFunction(0x43F310, 0x43F361);
MakeUnkn(0x43F364, 1);
MakeNameEx(0x43F364, "TOpenDialog.GetFileName", 0x20);
MakeComm(0x43F364, "'function TOpenDialog.GetFileName:TFileName;'");
MakeCode(0x43F364);
MakeCode(0x43F3A7);
MakeCode(0x43F3B4);
MakeFunction(0x43F364, 0x43F3BD);
MakeUnkn(0x43F3C0, 1);
MakeNameEx(0x43F3C0, "TOpenDialog.GetFilterIndex", 0x20);
MakeComm(0x43F3C0, "'function TOpenDialog.GetFilterIndex:Integer;'");
MakeCode(0x43F3C0);
MakeCode(0x43F3CA);
MakeFunction(0x43F3C0, 0x43F3CE);
MakeUnkn(0x43F3D0, 1);
MakeNameEx(0x43F3D0, "TOpenDialog.SetInitialDir", 0x20);
MakeComm(0x43F3D0, "'procedure TOpenDialog.SetInitialDir(const Value:AnsiString);'");
MakeCode(0x43F3D0);
MakeCode(0x43F3E2);
MakeCode(0x43F40A);
MakeFunction(0x43F3D0, 0x43F420);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43F428, -1);
MakeDword(0x43F424);
MakeDword(0x43F420);
MakeUnkn(0x43F42C, 1);
MakeNameEx(0x43F42C, "TOpenDialog.Execute", 0x20);
MakeComm(0x43F42C, "'function TOpenDialog.Execute(ParentWnd:HWND):Boolean;'");
MakeCode(0x43F42C);
MakeFunction(0x43F42C, 0x43F449);
MakeUnkn(0x43F44C, 1);
MakeNameEx(0x43F44C, "TOpenDialog.DoIncludeItem", 0x20);
MakeComm(0x43F44C, "'procedure TOpenDialog.DoIncludeItem(const OFN:TOFNotifyEx; var Include:Boolean);'");
MakeCode(0x43F44C);
MakeCode(0x43F465);
MakeFunction(0x43F44C, 0x43F467);
MakeUnkn(0x43F468, 1);
MakeNameEx(0x43F468, "TSaveDialog.Execute", 0x20);
MakeComm(0x43F468, "'procedure TSaveDialog.Execute(ParentWnd:HWND);'");
MakeCode(0x43F468);
MakeFunction(0x43F468, 0x43F485);
MakeUnkn(0x43F488, 1);
MakeNameEx(0x43F488, "TColorDialog.Create", 0x20);
MakeComm(0x43F488, "'constructor TColorDialog.Create(AOwner:TComponent);'");
MakeCode(0x43F488);
MakeCode(0x43F496);
MakeCode(0x43F4C7);
MakeFunction(0x43F488, 0x43F4CC);
MakeUnkn(0x43F4CC, 1);
MakeNameEx(0x43F4CC, "TColorDialog.Destroy", 0x20);
MakeComm(0x43F4CC, "'destructor TColorDialog.Destroy;'");
MakeCode(0x43F4CC);
MakeCode(0x43F4F6);
MakeFunction(0x43F4CC, 0x43F4F9);
MakeUnkn(0x43F4FC, 1);
MakeNameEx(0x43F4FC, "GetCustomColorsArray", 0x20);
MakeComm(0x43F4FC, "'procedure GetCustomColorsArray;'");
MakeCode(0x43F4FC);
MakeCode(0x43F51E);
MakeCode(0x43F576);
MakeCode(0x43F583);
MakeCode(0x43F599);
MakeCode(0x43F59E);
MakeFunction(0x43F4FC, 0x43F5A6);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43F5B0, -1);
MakeDword(0x43F5AC);
MakeDword(0x43F5A8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43F5C0, -1);
MakeDword(0x43F5BC);
MakeDword(0x43F5B8);
MakeUnkn(0x43F5C8, 1);
MakeNameEx(0x43F5C8, "SetCustomColorsArray", 0x20);
MakeComm(0x43F5C8, "'procedure SetCustomColorsArray;'");
MakeCode(0x43F5C8);
MakeCode(0x43F5E9);
MakeCode(0x43F63C);
MakeCode(0x43F642);
MakeCode(0x43F64B);
MakeCode(0x43F658);
MakeCode(0x43F666);
MakeCode(0x43F66B);
MakeFunction(0x43F5C8, 0x43F673);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43F67C, -1);
MakeDword(0x43F678);
MakeDword(0x43F674);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x43F68C, -1);
MakeDword(0x43F688);
MakeDword(0x43F684);
MakeUnkn(0x43F690, 1);
MakeNameEx(0x43F690, "TColorDialog.Execute", 0x20);
MakeComm(0x43F690, "'function TColorDialog.Execute(ParentWnd:HWND):Boolean;'");
MakeCode(0x43F690);
MakeCode(0x43F6D5);
MakeCode(0x43F6E6);
MakeCode(0x43F6ED);
MakeCode(0x43F713);
MakeCode(0x43F764);
MakeCode(0x43F771);
MakeCode(0x43F79B);
MakeFunction(0x43F690, 0x43F7A2);
MakeUnkn(0x43F7A4, 1);
MakeNameEx(0x43F7A4, "TColorDialog.SetCustomColors", 0x20);
MakeComm(0x43F7A4, "'procedure TColorDialog.SetCustomColors(Value:TStrings);'");
MakeCode(0x43F7A4);
MakeFunction(0x43F7A4, 0x43F7B1);
MakeUnkn(0x43F7B4, 1);
MakeNameEx(0x43F7B4, "GetPrinter", 0x20);
MakeComm(0x43F7B4, "'procedure GetPrinter(var DeviceMode:THandle; var DeviceNames:THandle);'");
MakeCode(0x43F7B4);
MakeCode(0x43F88F);
MakeCode(0x43F89C);
MakeCode(0x43F8A8);
MakeCode(0x43F8AD);
MakeCode(0x43F8AF);
MakeFunction(0x43F7B4, 0x43F8B6);
MakeUnkn(0x43F8B8, 1);
MakeNameEx(0x43F8B8, "SetPrinter", 0x20);
MakeComm(0x43F8B8, "'procedure SetPrinter(DeviceMode:THandle; DeviceNames:THandle);'");
MakeCode(0x43F8B8);
MakeCode(0x43F904);
MakeCode(0x43F911);
MakeCode(0x43F924);
MakeCode(0x43F929);
MakeFunction(0x43F8B8, 0x43F932);
MakeUnkn(0x43F934, 1);
MakeNameEx(0x43F934, "CopyData", 0x20);
MakeComm(0x43F934, "'function CopyData(Handle:THandle):THandle;'");
MakeCode(0x43F934);
MakeCode(0x43F996);
MakeCode(0x43F9A3);
MakeCode(0x43F9B6);
MakeCode(0x43F9BB);
MakeCode(0x43F9BD);
MakeCode(0x43F9C2);
MakeFunction(0x43F934, 0x43F9CB);
MakeUnkn(0x43F9CC, 1);
MakeNameEx(0x43F9CC, "TPrintDialog.SetNumCopies", 0x20);
MakeComm(0x43F9CC, "'procedure TPrintDialog.SetNumCopies(Value:Integer);'");
MakeCode(0x43F9CC);
MakeFunction(0x43F9CC, 0x43F9E0);
MakeUnkn(0x43F9E0, 1);
MakeNameEx(0x43F9E0, "TPrintDialog.Execute", 0x20);
MakeComm(0x43F9E0, "'function TPrintDialog.Execute(ParentWnd:HWND):Boolean;'");
MakeCode(0x43F9E0);
MakeCode(0x43FA3D);
MakeCode(0x43FA4A);
MakeCode(0x43FA54);
MakeCode(0x43FA5E);
MakeCode(0x43FA6B);
MakeCode(0x43FA75);
MakeCode(0x43FA82);
MakeCode(0x43FA8F);
MakeCode(0x43FAAA);
MakeCode(0x43FB16);
MakeCode(0x43FB23);
MakeCode(0x43FB67);
MakeCode(0x43FB71);
MakeCode(0x43FB75);
MakeCode(0x43FBA2);
MakeCode(0x43FBAE);
MakeCode(0x43FBBB);
MakeCode(0x43FBC8);
MakeFunction(0x43F9E0, 0x43FBD2);
MakeUnkn(0x43FBD4, 1);
MakeNameEx(0x43FBD4, "GetAveCharSize", 0x20);
MakeComm(0x43FBD4, "'function GetAveCharSize(Canvas:TCanvas):TPoint;'");
MakeCode(0x43FBD4);
MakeCode(0x43FBE1);
MakeCode(0x43FBF3);
MakeFunction(0x43FBD4, 0x43FC26);
MakeUnkn(0x43FC28, 1);
MakeNameEx(0x43FC28, "VMT_43FC28_TMessageForm", 0);
MakeDword(0x43FC28);
MakeDword(0x43FC2C);
MakeDword(0x43FC30);
MakeDword(0x43FC34);
MakeDword(0x43FC38);
MakeDword(0x43FC3C);
MakeDword(0x43FC40);
MakeDword(0x43FC44);
MakeDword(0x43FC48);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43FD78, 0x43FD85);
MakeDword(0x43FC4C);
MakeDword(0x43FC50);
MakeDword(0x43FC54);
MakeDword(0x43FC58);
MakeDword(0x43FC5C);
MakeDword(0x43FC60);
MakeDword(0x43FC64);
MakeDword(0x43FC68);
MakeDword(0x43FC6C);
MakeDword(0x43FC70);
MakeComm(0x43FC74, "'+0'");
MakeDword(0x43FC74);
MakeComm(0x43FC78, "'+4'");
MakeDword(0x43FC78);
MakeComm(0x43FC7C, "'+8'");
MakeDword(0x43FC7C);
MakeComm(0x43FC80, "'+C'");
MakeDword(0x43FC80);
MakeComm(0x43FC84, "'+10'");
MakeDword(0x43FC84);
MakeComm(0x43FC88, "'+14'");
MakeDword(0x43FC88);
MakeComm(0x43FC8C, "'+18'");
MakeDword(0x43FC8C);
MakeComm(0x43FC90, "'+1C'");
MakeDword(0x43FC90);
MakeComm(0x43FC94, "'+20'");
MakeDword(0x43FC94);
MakeComm(0x43FC98, "'+24'");
MakeDword(0x43FC98);
MakeComm(0x43FC9C, "'+28'");
MakeDword(0x43FC9C);
MakeComm(0x43FCA0, "'+2C'");
MakeDword(0x43FCA0);
MakeComm(0x43FCA4, "'+30'");
MakeDword(0x43FCA4);
MakeComm(0x43FCA8, "'+34'");
MakeDword(0x43FCA8);
MakeComm(0x43FCAC, "'+38'");
MakeDword(0x43FCAC);
MakeComm(0x43FCB0, "'+3C'");
MakeDword(0x43FCB0);
MakeComm(0x43FCB4, "'+40'");
MakeDword(0x43FCB4);
MakeComm(0x43FCB8, "'+44'");
MakeDword(0x43FCB8);
MakeComm(0x43FCBC, "'+48'");
MakeDword(0x43FCBC);
MakeComm(0x43FCC0, "'+4C'");
MakeDword(0x43FCC0);
MakeComm(0x43FCC4, "'+50'");
MakeDword(0x43FCC4);
MakeComm(0x43FCC8, "'+54'");
MakeDword(0x43FCC8);
MakeComm(0x43FCCC, "'+58'");
MakeDword(0x43FCCC);
MakeComm(0x43FCD0, "'+5C'");
MakeDword(0x43FCD0);
MakeComm(0x43FCD4, "'+60'");
MakeDword(0x43FCD4);
MakeComm(0x43FCD8, "'+64'");
MakeDword(0x43FCD8);
MakeComm(0x43FCDC, "'+68'");
MakeDword(0x43FCDC);
MakeComm(0x43FCE0, "'+6C'");
MakeDword(0x43FCE0);
MakeComm(0x43FCE4, "'+70'");
MakeDword(0x43FCE4);
MakeComm(0x43FCE8, "'+74'");
MakeDword(0x43FCE8);
MakeComm(0x43FCEC, "'+78'");
MakeDword(0x43FCEC);
MakeComm(0x43FCF0, "'+7C'");
MakeDword(0x43FCF0);
MakeComm(0x43FCF4, "'+80'");
MakeDword(0x43FCF4);
MakeComm(0x43FCF8, "'+84'");
MakeDword(0x43FCF8);
MakeComm(0x43FCFC, "'+88'");
MakeDword(0x43FCFC);
MakeComm(0x43FD00, "'+8C'");
MakeDword(0x43FD00);
MakeComm(0x43FD04, "'+90'");
MakeDword(0x43FD04);
MakeComm(0x43FD08, "'+94'");
MakeDword(0x43FD08);
MakeComm(0x43FD0C, "'+98'");
MakeDword(0x43FD0C);
MakeComm(0x43FD10, "'+9C'");
MakeDword(0x43FD10);
MakeComm(0x43FD14, "'+A0'");
MakeDword(0x43FD14);
MakeComm(0x43FD18, "'+A4'");
MakeDword(0x43FD18);
MakeComm(0x43FD1C, "'+A8'");
MakeDword(0x43FD1C);
MakeComm(0x43FD20, "'+AC'");
MakeDword(0x43FD20);
MakeComm(0x43FD24, "'+B0'");
MakeDword(0x43FD24);
MakeComm(0x43FD28, "'+B4'");
MakeDword(0x43FD28);
MakeComm(0x43FD2C, "'+B8'");
MakeDword(0x43FD2C);
MakeComm(0x43FD30, "'+BC'");
MakeDword(0x43FD30);
MakeComm(0x43FD34, "'+C0'");
MakeDword(0x43FD34);
MakeComm(0x43FD38, "'+C4'");
MakeDword(0x43FD38);
MakeComm(0x43FD3C, "'+C8'");
MakeDword(0x43FD3C);
MakeComm(0x43FD40, "'+CC'");
MakeDword(0x43FD40);
MakeComm(0x43FD44, "'+D0'");
MakeDword(0x43FD44);
MakeComm(0x43FD48, "'+D4'");
MakeDword(0x43FD48);
MakeComm(0x43FD4C, "'+D8'");
MakeDword(0x43FD4C);
MakeComm(0x43FD50, "'+DC'");
MakeDword(0x43FD50);
MakeComm(0x43FD54, "'+E0'");
MakeDword(0x43FD54);
MakeComm(0x43FD58, "'+E4'");
MakeDword(0x43FD58);
MakeComm(0x43FD5C, "'+E8'");
MakeDword(0x43FD5C);
MakeComm(0x43FD60, "'+EC'");
MakeDword(0x43FD60);
MakeComm(0x43FD64, "'+F0'");
MakeDword(0x43FD64);
MakeComm(0x43FD68, "'+F4'");
MakeDword(0x43FD68);
MakeComm(0x43FD6C, "'+F8'");
MakeDword(0x43FD6C);
MakeComm(0x43FD70, "'+FC'");
MakeDword(0x43FD70);
MakeComm(0x43FD74, "'+100'");
MakeDword(0x43FD74);
MakeUnkn(0x43FD88, 1);
MakeNameEx(0x43FD88, "RTTI_43FD88_Class_TMessageForm", 0);
MakeDword(0x43FD88);
MakeUnkn(0x43FD8C, 1);
MakeNameEx(0x43FD8C, "", 0);
MakeByte(0x43FD8C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43FD8D, 0x43FD9A);
MakeDword(0x43FD9A);
MakeDword(0x43FD9E);
MakeWord(0x43FDA2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x43FDA4, 0x43FDAC);
MakeWord(0x43FDAC);
MakeUnkn(0x43FDB0, 1);
MakeNameEx(0x43FDB0, "TMessageForm.CreateNew", 0x20);
MakeComm(0x43FDB0, "'constructor TMessageForm.CreateNew(AOwner:TComponent);'");
MakeCode(0x43FDB0);
MakeCode(0x43FDC7);
MakeCode(0x43FE09);
MakeCode(0x43FE1E);
MakeFunction(0x43FDB0, 0x43FE26);
MakeUnkn(0x43FE28, 1);
MakeNameEx(0x43FE28, "TMessageForm.HelpButtonClick", 0x20);
MakeComm(0x43FE28, "'procedure TMessageForm.HelpButtonClick(Sender:TObject);'");
MakeCode(0x43FE28);
MakeFunction(0x43FE28, 0x43FE3D);
MakeUnkn(0x43FE40, 1);
MakeNameEx(0x43FE40, "TMessageForm.CustomKeyDown", 0x20);
MakeComm(0x43FE40, "'procedure TMessageForm.CustomKeyDown(Sender:TObject; var Key:Word; Shift:TShiftState);'");
MakeCode(0x43FE40);
MakeCode(0x43FE84);
MakeCode(0x43FE91);
MakeCode(0x43FE9A);
MakeCode(0x43FE9F);
MakeFunction(0x43FE40, 0x43FEA8);
MakeUnkn(0x43FEAC, 1);
MakeNameEx(0x43FEAC, "TMessageForm.WriteToClipBoard", 0x20);
MakeComm(0x43FEAC, "'procedure TMessageForm.WriteToClipBoard(Text:AnsiString);'");
MakeCode(0x43FEAC);
MakeCode(0x43FEF9);
MakeCode(0x43FF38);
MakeCode(0x43FF5A);
MakeCode(0x43FF67);
MakeCode(0x43FF71);
MakeCode(0x43FF76);
MakeCode(0x43FF78);
MakeCode(0x43FF82);
MakeCode(0x43FF9A);
MakeCode(0x43FFA7);
MakeCode(0x43FFAD);
MakeCode(0x43FFB2);
MakeCode(0x43FFB4);
MakeCode(0x43FFCB);
MakeCode(0x43FFD8);
MakeCode(0x43FFE1);
MakeCode(0x43FFE6);
MakeFunction(0x43FEAC, 0x43FFEF);
MakeUnkn(0x43FFF0, 1);
MakeNameEx(0x43FFF0, "TMessageForm.GetFormText", 0x20);
MakeComm(0x43FFF0, "'function TMessageForm.GetFormText:AnsiString;'");
MakeCode(0x43FFF0);
MakeCode(0x440056);
MakeCode(0x4400A4);
MakeCode(0x4400A8);
MakeCode(0x440166);
MakeCode(0x440173);
MakeCode(0x4401AB);
MakeCode(0x4401B0);
MakeFunction(0x43FFF0, 0x4401B9);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4401C4, -1);
MakeDword(0x4401C0);
MakeDword(0x4401BC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4401D4, -1);
MakeDword(0x4401D0);
MakeDword(0x4401CC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4401E0, -1);
MakeDword(0x4401DC);
MakeDword(0x4401D8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x440200, -1);
MakeDword(0x4401FC);
MakeDword(0x4401F8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x44020C, -1);
MakeDword(0x440208);
MakeDword(0x440204);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x440218, -1);
MakeDword(0x440214);
MakeDword(0x440210);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x440224, -1);
MakeDword(0x440220);
MakeDword(0x44021C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x440234, -1);
MakeDword(0x440230);
MakeDword(0x44022C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x440244, -1);
MakeDword(0x440240);
MakeDword(0x44023C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x440254, -1);
MakeDword(0x440250);
MakeDword(0x44024C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x440264, -1);
MakeDword(0x440260);
MakeDword(0x44025C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x440270, -1);
MakeDword(0x44026C);
MakeDword(0x440268);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x440280, -1);
MakeDword(0x44027C);
MakeDword(0x440278);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x440294, -1);
MakeDword(0x440290);
MakeDword(0x44028C);
MakeCode(0x44029C);
MakeComm(0x4402DA, "'TMessageForm.Create'");
MakeComm(0x4402E9, "'TApplication.FBiDiMode:TBiDiMode'");
MakeComm(0x4402F2, "'TControl.SetBiDiMode'");
MakeComm(0x44030A, "'TMessageForm.FFont:TFont'");
MakeComm(0x440315, "'TMessageForm.FKeyPreview:Boolean'");
MakeComm(0x44032C, "'TMessageForm.?f20C:TMessageForm'");
MakeComm(0x440332, "'TMessageForm.FOnKeyDown:TKeyEvent'");
MakeCode(0x4403A1);
MakeCode(0x4403AE);
MakeCode(0x44040E);
MakeCode(0x440418);
MakeCode(0x44045E);
MakeCode(0x440478);
MakeCode(0x4404D5);
MakeCode(0x4404D9);
MakeCode(0x4404E7);
MakeCode(0x4404EA);
MakeCode(0x440502);
MakeCode(0x44050A);
MakeCode(0x44050C);
MakeCode(0x440548);
MakeComm(0x44054B, "'TMessageForm.Width:Integer'");
MakeCode(0x440555);
MakeCode(0x440574);
MakeComm(0x440577, "'TMessageForm.Height:Integer'");
MakeCode(0x440581);
MakeCode(0x4405B1);
MakeCode(0x4405CB);
MakeComm(0x4405D9, "'TImage.Create'");
MakeComm(0x4405EB, "'TControl.SetName'");
MakeComm(0x4405F6, "'TControl.SetParent'");
MakeComm(0x440605, "'TImage.Picture:TPicture'");
MakeComm(0x440625, "'TControl.SetBounds'");
MakeCode(0x44062B);
MakeComm(0x440635, "'TLabel.Create'");
MakeComm(0x44063F, "'TMessageForm...Message:TLabel'");
MakeComm(0x44064E, "'TControl.SetName'");
MakeComm(0x440658, "'TControl.SetParent'");
MakeComm(0x44067B, "'TMessageForm.FBiDiMode:TBiDiMode'");
MakeComm(0x440683, "'TControl.SetBiDiMode'");
MakeComm(0x440695, "'TControl.UseRightToLeftAlignment'");
MakeCode(0x4406AF);
MakeComm(0x4406C1, "'TControl.SetBounds'");
MakeCode(0x4406D3);
MakeCode(0x4406DF);
MakeCode(0x4406E3);
MakeCode(0x4406F4);
MakeCode(0x44070C);
MakeCode(0x440719);
MakeComm(0x440729, "'TButton.Create'");
MakeComm(0x44073B, "'TControl.SetName'");
MakeComm(0x440746, "'TWinControl.SetParent'");
MakeComm(0x440766, "'TButton.ModalResult:TModalResult'");
MakeCode(0x440786);
MakeComm(0x44078E, "'TButton.Cancel:Boolean'");
MakeCode(0x440795);
MakeComm(0x4407AE, "'TWinControl.SetBounds'");
MakeComm(0x4407C8, "'TButton.?f114:TMessageForm'");
MakeComm(0x4407CE, "'TButton.FOnClick:TNotifyEvent'");
MakeCode(0x4407D8);
MakeCode(0x4407ED);
MakeCode(0x4407FA);
MakeCode(0x440808);
MakeCode(0x44080D);
MakeFunction(0x44029C, 0x44081B);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x440824, -1);
MakeDword(0x440820);
MakeDword(0x44081C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x440834, -1);
MakeDword(0x440830);
MakeDword(0x44082C);
MakeUnkn(0x44083C, 1);
MakeNameEx(0x44083C, "CreateMessageDialog", 0x20);
MakeComm(0x44083C, "'function CreateMessageDialog(const Msg:AnsiString; DlgType:TMsgDlgType; Buttons:TMsgDlgButtons):TForm;'");
MakeCode(0x44083C);
MakeCode(0x44084B);
MakeCode(0x440855);
MakeCode(0x440857);
MakeFunction(0x44083C, 0x440864);
MakeUnkn(0x440864, 1);
MakeNameEx(0x440864, "MessageDlg", 0x20);
MakeComm(0x440864, "'function MessageDlg(const Msg:AnsiString; DlgType:TMsgDlgType; Buttons:TMsgDlgButtons; HelpCtx:Longint):Integer;'");
MakeCode(0x440864);
MakeFunction(0x440864, 0x440884);
MakeUnkn(0x440884, 1);
MakeNameEx(0x440884, "DoMessageDlgPosHelp", 0x20);
MakeComm(0x440884, "'function DoMessageDlgPosHelp(MessageDialog:TForm; HelpCtx:Longint; X:Integer; Y:Integer; const HelpFileName:AnsiString):Integer;'");
MakeCode(0x440884);
MakeCode(0x4408C8);
MakeCode(0x4408D6);
MakeCode(0x4408E8);
MakeCode(0x4408F6);
MakeCode(0x440903);
MakeCode(0x44090C);
MakeCode(0x440911);
MakeFunction(0x440884, 0x44091E);
MakeUnkn(0x440920, 1);
MakeNameEx(0x440920, "MessageDlgPosHelp", 0x20);
MakeComm(0x440920, "'function MessageDlgPosHelp(const Msg:AnsiString; DlgType:TMsgDlgType; Buttons:TMsgDlgButtons; HelpCtx:Longint; X:Integer; Y:Integer; const HelpFileName:AnsiString):Integer;'");
MakeCode(0x440920);
MakeFunction(0x440920, 0x440955);
MakeUnkn(0x440958, 1);
MakeNameEx(0x440958, "InputQuery", 0x20);
MakeComm(0x440958, "'function InputQuery(const ACaption:AnsiString; const APrompt:AnsiString; var Value:AnsiString):Boolean;'");
MakeCode(0x440958);
MakeCode(0x440C20);
MakeCode(0x440C2D);
MakeCode(0x440C36);
MakeCode(0x440C3B);
MakeCode(0x440C3D);
MakeCode(0x440C4A);
MakeCode(0x440C60);
MakeCode(0x440C65);
MakeFunction(0x440958, 0x440C72);
MakeUnkn(0x440C74, 1);
MakeNameEx(0x440C74, "InitGlobals", 0x20);
MakeComm(0x440C74, "'procedure InitGlobals;'");
MakeCode(0x440C74);
MakeFunction(0x440C74, 0x440CD5);
MakeUnkn(0x440DC8, 1);
MakeNameEx(0x440DC8, "Finalization_2", 0x20);
MakeComm(0x440DC8, "'procedure Finalization;'");
MakeCode(0x440DC8);
MakeCode(0x440DF8);
MakeCode(0x440E0D);
MakeCode(0x440E1A);
MakeCode(0x440E1B);
MakeCode(0x440E20);
MakeFunction(0x440DC8, 0x440E24);
MakeUnkn(0x440E24, 1);
MakeNameEx(0x440E24, "VMT_440E24_TClipboard", 0);
MakeDword(0x440E24);
MakeDword(0x440E28);
MakeDword(0x440E2C);
MakeDword(0x440E30);
MakeDword(0x440E34);
MakeDword(0x440E38);
MakeDword(0x440E3C);
MakeDword(0x440E40);
MakeDword(0x440E44);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x440E8C, 0x440E97);
MakeDword(0x440E48);
MakeDword(0x440E4C);
MakeDword(0x440E50);
MakeDword(0x440E54);
MakeDword(0x440E58);
MakeDword(0x440E5C);
MakeDword(0x440E60);
MakeDword(0x440E64);
MakeDword(0x440E68);
MakeDword(0x440E6C);
MakeComm(0x440E70, "'+0'");
MakeDword(0x440E70);
MakeComm(0x440E74, "'+4'");
MakeDword(0x440E74);
MakeComm(0x440E78, "'+8'");
MakeDword(0x440E78);
MakeComm(0x440E7C, "'+C'");
MakeDword(0x440E7C);
MakeComm(0x440E80, "'+10'");
MakeDword(0x440E80);
MakeComm(0x440E84, "'+14'");
MakeDword(0x440E84);
MakeComm(0x440E88, "'+18'");
MakeDword(0x440E88);
MakeUnkn(0x440E98, 1);
MakeNameEx(0x440E98, "RTTI_440E98_Class_TClipboard", 0);
MakeDword(0x440E98);
MakeUnkn(0x440E9C, 1);
MakeNameEx(0x440E9C, "", 0);
MakeByte(0x440E9C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x440E9D, 0x440EA8);
MakeDword(0x440EA8);
MakeDword(0x440EAC);
MakeWord(0x440EB0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x440EB2, 0x440EBA);
MakeWord(0x440EBA);
MakeUnkn(0x440EBC, 1);
MakeNameEx(0x440EBC, "TClipboard.Clear", 0x20);
MakeComm(0x440EBC, "'procedure TClipboard.Clear;'");
MakeCode(0x440EBC);
MakeCode(0x440EDE);
MakeCode(0x440EEB);
MakeCode(0x440EF4);
MakeCode(0x440EF9);
MakeFunction(0x440EBC, 0x440EFE);
MakeUnkn(0x440F00, 1);
MakeNameEx(0x440F00, "TClipboard.Adding", 0x20);
MakeComm(0x440F00, "'procedure TClipboard.Adding;'");
MakeCode(0x440F00);
MakeCode(0x440F1A);
MakeFunction(0x440F00, 0x440F1C);
MakeUnkn(0x440F1C, 1);
MakeNameEx(0x440F1C, "TClipboard.Close", 0x20);
MakeComm(0x440F1C, "'procedure TClipboard.Close;'");
MakeCode(0x440F1C);
MakeCode(0x440F41);
MakeCode(0x440F46);
MakeFunction(0x440F1C, 0x440F48);
MakeUnkn(0x440F48, 1);
MakeNameEx(0x440F48, "TClipboard.Open", 0x20);
MakeComm(0x440F48, "'procedure TClipboard.Open;'");
MakeCode(0x440F48);
MakeCode(0x440F74);
MakeCode(0x440F98);
MakeCode(0x440F9C);
MakeFunction(0x440F48, 0x440FA1);
MakeUnkn(0x440FA4, 1);
MakeNameEx(0x440FA4, "TClipboard.WndProc", 0x20);
MakeComm(0x440FA4, "'procedure TClipboard.WndProc(var Message:TMessage);'");
MakeCode(0x440FA4);
MakeFunction(0x440FA4, 0x440FC4);
MakeUnkn(0x440FC4, 1);
MakeNameEx(0x440FC4, "TClipboard.AssignToPicture", 0x20);
MakeComm(0x440FC4, "'procedure TClipboard.AssignToPicture(Dest:TPicture);'");
MakeCode(0x440FC4);
MakeCode(0x440FF7);
MakeCode(0x44102F);
MakeCode(0x44103F);
MakeCode(0x441056);
MakeCode(0x441063);
MakeCode(0x44106C);
MakeCode(0x441071);
MakeCode(0x441073);
MakeFunction(0x440FC4, 0x44107A);
MakeUnkn(0x44107C, 1);
MakeNameEx(0x44107C, "TClipboard.AssignToBitmap", 0x20);
MakeComm(0x44107C, "'procedure TClipboard.AssignToBitmap(Dest:TBitmap);'");
MakeCode(0x44107C);
MakeCode(0x4410BE);
MakeCode(0x4410CB);
MakeCode(0x4410D4);
MakeCode(0x4410D9);
MakeFunction(0x44107C, 0x4410E1);
MakeUnkn(0x4410E4, 1);
MakeNameEx(0x4410E4, "TClipboard.AssignToMetafile", 0x20);
MakeComm(0x4410E4, "'procedure TClipboard.AssignToMetafile(Dest:TMetafile);'");
MakeCode(0x4410E4);
MakeCode(0x441123);
MakeCode(0x441130);
MakeCode(0x441139);
MakeCode(0x44113E);
MakeFunction(0x4410E4, 0x441145);
MakeUnkn(0x441148, 1);
MakeNameEx(0x441148, "TClipboard.AssignTo", 0x20);
MakeComm(0x441148, "'procedure TClipboard.AssignTo(Dest:TPersistent);'");
MakeCode(0x441148);
MakeCode(0x44116B);
MakeCode(0x441187);
MakeCode(0x4411A3);
MakeCode(0x4411AC);
MakeFunction(0x441148, 0x4411AF);
MakeUnkn(0x4411B0, 1);
MakeNameEx(0x4411B0, "TClipboard.AssignPicture", 0x20);
MakeComm(0x4411B0, "'procedure TClipboard.AssignPicture(Source:TPicture);'");
MakeCode(0x4411B0);
MakeCode(0x44120F);
MakeCode(0x44121C);
MakeCode(0x441225);
MakeCode(0x44122A);
MakeFunction(0x4411B0, 0x441231);
MakeUnkn(0x441234, 1);
MakeNameEx(0x441234, "TClipboard.AssignGraphic", 0x20);
MakeComm(0x441234, "'procedure TClipboard.AssignGraphic(Source:TGraphic);'");
MakeCode(0x441234);
MakeCode(0x441293);
MakeCode(0x4412A0);
MakeCode(0x4412A9);
MakeCode(0x4412AE);
MakeFunction(0x441234, 0x4412B5);
MakeUnkn(0x4412B8, 1);
MakeNameEx(0x4412B8, "TClipboard.Assign", 0x20);
MakeComm(0x4412B8, "'procedure TClipboard.Assign(Source:TPersistent);'");
MakeCode(0x4412B8);
MakeCode(0x4412DB);
MakeCode(0x4412F7);
MakeCode(0x441300);
MakeFunction(0x4412B8, 0x441303);
MakeUnkn(0x441304, 1);
MakeNameEx(0x441304, "TClipboard.GetAsHandle", 0x20);
MakeComm(0x441304, "'function TClipboard.GetAsHandle(Format:Word):THandle;'");
MakeCode(0x441304);
MakeCode(0x441332);
MakeCode(0x44133F);
MakeCode(0x441348);
MakeCode(0x44134D);
MakeFunction(0x441304, 0x441357);
MakeUnkn(0x441358, 1);
MakeNameEx(0x441358, "TClipboard.SetAsHandle", 0x20);
MakeComm(0x441358, "'procedure TClipboard.SetAsHandle(Format:Word; Value:THandle);'");
MakeCode(0x441358);
MakeCode(0x44138D);
MakeCode(0x44139A);
MakeCode(0x4413A3);
MakeCode(0x4413A8);
MakeFunction(0x441358, 0x4413AF);
MakeUnkn(0x4413B0, 1);
MakeNameEx(0x4413B0, "HasAPicture", 0x20);
MakeComm(0x4413B0, "'function HasAPicture:Boolean;'");
MakeCode(0x4413B0);
MakeCode(0x4413E0);
MakeCode(0x4413F6);
MakeCode(0x441406);
MakeCode(0x441413);
MakeCode(0x44141F);
MakeCode(0x441424);
MakeFunction(0x4413B0, 0x44142E);
MakeUnkn(0x441430, 1);
MakeNameEx(0x441430, "TClipboard.HasFormat", 0x20);
MakeComm(0x441430, "'function TClipboard.HasFormat(Format:Word):Boolean;'");
MakeCode(0x441430);
MakeCode(0x44145B);
MakeCode(0x44145F);
MakeCode(0x441461);
MakeFunction(0x441430, 0x441465);
MakeUnkn(0x441468, 1);
MakeNameEx(0x441468, "Clipboard", 0x20);
MakeComm(0x441468, "'function Clipboard:TClipboard;'");
MakeCode(0x441468);
MakeCode(0x441482);
MakeFunction(0x441468, 0x441488);
MakeUnkn(0x441488, 1);
MakeNameEx(0x441488, "TClipboard.MainWndProc", 0x20);
MakeComm(0x441488, "'procedure TClipboard.MainWndProc(var Message:TMessage);'");
MakeCode(0x441488);
MakeCode(0x4414A8);
MakeCode(0x4414B2);
MakeCode(0x4414D3);
MakeCode(0x4414D8);
MakeCode(0x4414DD);
MakeFunction(0x441488, 0x4414E3);
MakeUnkn(0x4414E4, 1);
MakeNameEx(0x4414E4, "TClipboard.Destroy", 0x20);
MakeComm(0x4414E4, "'destructor TClipboard.Destroy;'");
MakeCode(0x4414E4);
MakeCode(0x4414FE);
MakeCode(0x441515);
MakeFunction(0x4414E4, 0x441518);
MakeUnkn(0x441518, 1);
MakeNameEx(0x441518, "Finalization_3", 0x20);
MakeComm(0x441518, "'procedure Finalization;'");
MakeCode(0x441518);
MakeCode(0x44153B);
MakeCode(0x441548);
MakeCode(0x441549);
MakeCode(0x44154E);
MakeFunction(0x441518, 0x441552);
MakeUnkn(0x441554, 1);
MakeNameEx(0x441554, "VMT_441554_THintAction", 0);
MakeDword(0x441554);
MakeDword(0x441558);
MakeDword(0x44155C);
MakeDword(0x441560);
MakeDword(0x441564);
MakeDword(0x441568);
MakeDword(0x44156C);
MakeDword(0x441570);
MakeDword(0x441574);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4415F4, 0x441600);
MakeDword(0x441578);
MakeDword(0x44157C);
MakeDword(0x441580);
MakeDword(0x441584);
MakeDword(0x441588);
MakeDword(0x44158C);
MakeDword(0x441590);
MakeDword(0x441594);
MakeDword(0x441598);
MakeDword(0x44159C);
MakeComm(0x4415A0, "'+0'");
MakeDword(0x4415A0);
MakeComm(0x4415A4, "'+4'");
MakeDword(0x4415A4);
MakeComm(0x4415A8, "'+8'");
MakeDword(0x4415A8);
MakeComm(0x4415AC, "'+C'");
MakeDword(0x4415AC);
MakeComm(0x4415B0, "'+10'");
MakeDword(0x4415B0);
MakeComm(0x4415B4, "'+14'");
MakeDword(0x4415B4);
MakeComm(0x4415B8, "'+18'");
MakeDword(0x4415B8);
MakeComm(0x4415BC, "'+1C'");
MakeDword(0x4415BC);
MakeComm(0x4415C0, "'+20'");
MakeDword(0x4415C0);
MakeComm(0x4415C4, "'+24'");
MakeDword(0x4415C4);
MakeComm(0x4415C8, "'+28'");
MakeDword(0x4415C8);
MakeComm(0x4415CC, "'+2C'");
MakeDword(0x4415CC);
MakeComm(0x4415D0, "'+30'");
MakeDword(0x4415D0);
MakeComm(0x4415D4, "'+34'");
MakeDword(0x4415D4);
MakeComm(0x4415D8, "'+38'");
MakeDword(0x4415D8);
MakeComm(0x4415DC, "'+3C'");
MakeDword(0x4415DC);
MakeComm(0x4415E0, "'+40'");
MakeDword(0x4415E0);
MakeComm(0x4415E4, "'+44'");
MakeDword(0x4415E4);
MakeComm(0x4415E8, "'+48'");
MakeDword(0x4415E8);
MakeComm(0x4415EC, "'+4C'");
MakeDword(0x4415EC);
MakeComm(0x4415F0, "'+50'");
MakeDword(0x4415F0);
MakeUnkn(0x441600, 1);
MakeNameEx(0x441600, "RTTI_441600_Class_THintAction", 0);
MakeDword(0x441600);
MakeUnkn(0x441604, 1);
MakeNameEx(0x441604, "", 0);
MakeByte(0x441604);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x441605, 0x441611);
MakeDword(0x441611);
MakeDword(0x441615);
MakeWord(0x441619);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44161B, 0x441624);
MakeWord(0x441624);
MakeDword(0x441626);
MakeDword(0x44162A);
MakeDword(0x44162E);
MakeDword(0x441632);
MakeDword(0x441636);
MakeDword(0x44163A);
MakeWord(0x44163E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x441640, 0x441645);
MakeUnkn(0x441648, 1);
MakeNameEx(0x441648, "THintAction.Create", 0x20);
MakeComm(0x441648, "'constructor THintAction.Create(AOwner:TComponent);'");
MakeCode(0x441648);
MakeCode(0x441656);
MakeCode(0x44167C);
MakeFunction(0x441648, 0x441681);
MakeUnkn(0x441684, 1);
MakeNameEx(0x441684, "FlatSB_SetScrollProp", 0x20);
MakeComm(0x441684, "'function FlatSB_SetScrollProp(p1:HWND; index:Integer; newValue:Integer; p4:BOOL):BOOL; stdcall;'");
MakeCode(0x441684);
MakeCode(0x4416AA);
MakeCode(0x4416AE);
MakeCode(0x4416B0);
MakeFunction(0x441684, 0x4416B8);
MakeUnkn(0x4416B8, 1);
MakeNameEx(0x4416B8, "InitializeFlatSB", 0x20);
MakeComm(0x4416B8, "'function InitializeFlatSB(hWnd:HWND):BOOL; stdcall;'");
MakeCode(0x4416B8);
MakeCode(0x4416D2);
MakeCode(0x4416D6);
MakeCode(0x4416D8);
MakeFunction(0x4416B8, 0x4416E0);
MakeUnkn(0x4416E0, 1);
MakeNameEx(0x4416E0, "InitFlatSB", 0x20);
MakeComm(0x4416E0, "'procedure InitFlatSB;'");
MakeCode(0x4416E0);
MakeCode(0x441757);
MakeCode(0x441778);
MakeCode(0x441799);
MakeCode(0x4417BA);
MakeCode(0x4417DB);
MakeCode(0x4417FC);
MakeCode(0x44181D);
MakeCode(0x44183E);
MakeFunction(0x4416E0, 0x441964);
MakeCode(0x441964);
MakeCode(0x44197B);
MakeCode(0x441988);
MakeCode(0x441989);
MakeCode(0x44198E);
MakeFunction(0x441964, 0x441992);
MakeUnkn(0x441994, 1);
MakeNameEx(0x441994, "VMT_441994_TThemeServices", 0);
MakeDword(0x441994);
MakeDword(0x441998);
MakeDword(0x44199C);
MakeDword(0x4419A0);
MakeDword(0x4419A4);
MakeDword(0x4419A8);
MakeDword(0x4419AC);
MakeDword(0x4419B0);
MakeDword(0x4419B4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4419E8, 0x4419F7);
MakeDword(0x4419B8);
MakeDword(0x4419BC);
MakeDword(0x4419C0);
MakeDword(0x4419C4);
MakeDword(0x4419C8);
MakeDword(0x4419CC);
MakeDword(0x4419D0);
MakeDword(0x4419D4);
MakeDword(0x4419D8);
MakeDword(0x4419DC);
MakeComm(0x4419E0, "'+0'");
MakeDword(0x4419E0);
MakeComm(0x4419E4, "'+4'");
MakeDword(0x4419E4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x441A00, -1);
MakeDword(0x4419FC);
MakeDword(0x4419F8);
MakeUnkn(0x441BBC, 1);
MakeNameEx(0x441BBC, "ThemeServices", 0x20);
MakeComm(0x441BBC, "'function ThemeServices:TThemeServices;'");
MakeCode(0x441BBC);
MakeCode(0x441BD4);
MakeFunction(0x441BBC, 0x441BDA);
MakeUnkn(0x441BDC, 1);
MakeNameEx(0x441BDC, "TThemeServices.Create", 0x20);
MakeComm(0x441BDC, "'constructor TThemeServices.Create;'");
MakeCode(0x441BDC);
MakeCode(0x441BEA);
MakeCode(0x441C30);
MakeFunction(0x441BDC, 0x441C35);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x441C40, -1);
MakeDword(0x441C3C);
MakeDword(0x441C38);
MakeUnkn(0x441C50, 1);
MakeNameEx(0x441C50, "TThemeServices.Destroy", 0x20);
MakeComm(0x441C50, "'destructor TThemeServices.Destroy;'");
MakeCode(0x441C50);
MakeCode(0x441C7E);
MakeFunction(0x441C50, 0x441C81);
MakeUnkn(0x441C84, 1);
MakeNameEx(0x441C84, "TThemeServices.GetTheme", 0x20);
MakeComm(0x441C84, "'function TThemeServices.GetTheme(Element:TThemedElement):HTHEME;'");
MakeCode(0x441C84);
MakeCode(0x441CB7);
MakeFunction(0x441C84, 0x441CC2);
MakeUnkn(0x441CC4, 1);
MakeNameEx(0x441CC4, "TThemeServices.GetThemesEnabled", 0x20);
MakeComm(0x441CC4, "'function TThemeServices.GetThemesEnabled:Boolean;'");
MakeCode(0x441CC4);
MakeCode(0x441CD6);
MakeCode(0x441CD9);
MakeFunction(0x441CC4, 0x441CDC);
MakeUnkn(0x441CDC, 1);
MakeNameEx(0x441CDC, "TThemeServices.DoOnThemeChange", 0x20);
MakeComm(0x441CDC, "'procedure TThemeServices.DoOnThemeChange;'");
MakeCode(0x441CDC);
MakeCode(0x441CEE);
MakeFunction(0x441CDC, 0x441CF0);
MakeUnkn(0x441CF0, 1);
MakeNameEx(0x441CF0, "TThemeServices.UnloadThemeData", 0x20);
MakeComm(0x441CF0, "'procedure TThemeServices.UnloadThemeData;'");
MakeCode(0x441CF0);
MakeCode(0x441CF7);
MakeCode(0x441D14);
MakeFunction(0x441CF0, 0x441D1E);
MakeUnkn(0x441D20, 1);
MakeNameEx(0x441D20, "TThemeServices.ApplyThemeChange", 0x20);
MakeComm(0x441D20, "'procedure TThemeServices.ApplyThemeChange;'");
MakeCode(0x441D20);
MakeFunction(0x441D20, 0x441D32);
MakeUnkn(0x441D34, 1);
MakeNameEx(0x441D34, "TThemeServices.DrawEdge", 0x20);
MakeComm(0x441D34, "'procedure TThemeServices.DrawEdge(DC:HDC; Details:TThemedElementDetails; const R:TRect; Edge:Cardinal; Flags:Cardinal; ContentRect:PRect);'");
MakeCode(0x441D34);
MakeFunction(0x441D34, 0x441D80);
MakeUnkn(0x441D80, 1);
MakeNameEx(0x441D80, "TThemeServices.DrawElement", 0x20);
MakeComm(0x441D80, "'procedure TThemeServices.DrawElement(DC:HDC; Details:TThemedElementDetails; const R:TRect; ClipRect:PRect);'");
MakeCode(0x441D80);
MakeFunction(0x441D80, 0x441DC4);
MakeUnkn(0x441DC4, 1);
MakeNameEx(0x441DC4, "TThemeServices.DrawParentBackground", 0x20);
MakeComm(0x441DC4, "'procedure TThemeServices.DrawParentBackground(Window:HWND; Target:HDC; Details:PThemedElementDetails; OnlyIfTransparent:Boolean; Bounds:PRect);'");
MakeCode(0x441DC4);
MakeCode(0x441E07);
MakeCode(0x441E09);
MakeCode(0x441E22);
MakeFunction(0x441DC4, 0x441E2A);
MakeUnkn(0x441E2C, 1);
MakeNameEx(0x441E2C, "TThemeServices.GetElementDetails", 0x20);
MakeComm(0x441E2C, "'function TThemeServices.GetElementDetails(Detail:TThemedButton):TThemedElementDetails;'");
MakeCode(0x441E2C);
MakeCode(0x441E46);
MakeCode(0x441E57);
MakeCode(0x441E65);
MakeCode(0x441E73);
MakeCode(0x441E81);
MakeCode(0x441E8F);
MakeCode(0x441E9D);
MakeCode(0x441EA4);
MakeFunction(0x441E2C, 0x441EAE);
MakeUnkn(0x441EB0, 1);
MakeNameEx(0x441EB0, "TThemeServices.GetElementDetails_0", 0x20);
MakeComm(0x441EB0, "'function TThemeServices.GetElementDetails(Detail:TThemedEdit):TThemedElementDetails;'");
MakeCode(0x441EB0);
MakeCode(0x441EBF);
MakeCode(0x441ECD);
MakeCode(0x441EDB);
MakeCode(0x441EE2);
MakeFunction(0x441EB0, 0x441EEC);
MakeUnkn(0x441EEC, 1);
MakeNameEx(0x441EEC, "TThemeServices.GetElementDetails_1", 0x20);
MakeComm(0x441EEC, "'function TThemeServices.GetElementDetails(Detail:TThemedRebar):TThemedElementDetails;'");
MakeCode(0x441EEC);
MakeCode(0x441F2F);
MakeCode(0x441F3D);
MakeCode(0x441F4B);
MakeCode(0x441F59);
MakeCode(0x441F67);
MakeCode(0x441F75);
MakeCode(0x441F7C);
MakeFunction(0x441EEC, 0x441F86);
MakeUnkn(0x441F88, 1);
MakeNameEx(0x441F88, "TThemeServices.GetElementDetails_2", 0x20);
MakeComm(0x441F88, "'function TThemeServices.GetElementDetails(Detail:TThemedStatus):TThemedElementDetails;'");
MakeCode(0x441F88);
MakeCode(0x441F9B);
MakeCode(0x441FA9);
MakeCode(0x441FB7);
MakeCode(0x441FC5);
MakeCode(0x441FCC);
MakeFunction(0x441F88, 0x441FD6);
MakeUnkn(0x441FD8, 1);
MakeNameEx(0x441FD8, "TThemeServices.GetElementDetails_3", 0x20);
MakeComm(0x441FD8, "'function TThemeServices.GetElementDetails(Detail:TThemedTab):TThemedElementDetails;'");
MakeCode(0x441FD8);
MakeCode(0x44204D);
MakeCode(0x44205E);
MakeCode(0x44206C);
MakeCode(0x44207A);
MakeCode(0x442088);
MakeCode(0x442096);
MakeCode(0x4420A4);
MakeCode(0x4420B2);
MakeCode(0x4420C0);
MakeCode(0x4420CE);
MakeCode(0x4420DC);
MakeCode(0x4420E3);
MakeFunction(0x441FD8, 0x4420ED);
MakeUnkn(0x4420F0, 1);
MakeNameEx(0x4420F0, "TThemeServices.GetElementDetails_4", 0x20);
MakeComm(0x4420F0, "'function TThemeServices.GetElementDetails(Detail:TThemedTrackBar):TThemedElementDetails;'");
MakeCode(0x4420F0);
MakeCode(0x44215D);
MakeCode(0x44216E);
MakeCode(0x44217C);
MakeCode(0x44218A);
MakeCode(0x442198);
MakeCode(0x4421A6);
MakeCode(0x4421B4);
MakeCode(0x4421C2);
MakeCode(0x4421D0);
MakeCode(0x4421DE);
MakeCode(0x4421EC);
MakeCode(0x4421F3);
MakeFunction(0x4420F0, 0x4421FD);
MakeUnkn(0x442200, 1);
MakeNameEx(0x442200, "TThemeServices.GetElementDetails_5", 0x20);
MakeComm(0x442200, "'function TThemeServices.GetElementDetails(Detail:TThemedWindow):TThemedElementDetails;'");
MakeCode(0x442200);
MakeCode(0x44231E);
MakeCode(0x44232F);
MakeCode(0x442340);
MakeCode(0x442351);
MakeCode(0x442362);
MakeCode(0x442373);
MakeCode(0x442384);
MakeCode(0x442395);
MakeCode(0x4423A6);
MakeCode(0x4423B7);
MakeCode(0x4423C8);
MakeCode(0x4423D9);
MakeCode(0x4423EA);
MakeCode(0x4423FB);
MakeCode(0x44240C);
MakeCode(0x44241D);
MakeCode(0x44242E);
MakeCode(0x44243F);
MakeCode(0x442450);
MakeCode(0x442461);
MakeCode(0x442472);
MakeCode(0x442483);
MakeCode(0x442494);
MakeCode(0x4424A5);
MakeCode(0x4424B6);
MakeCode(0x4424C7);
MakeCode(0x4424D8);
MakeCode(0x4424E9);
MakeCode(0x4424FA);
MakeCode(0x442508);
MakeCode(0x442516);
MakeCode(0x442524);
MakeCode(0x442532);
MakeCode(0x442540);
MakeCode(0x44254E);
MakeCode(0x44255C);
MakeCode(0x44256A);
MakeCode(0x442578);
MakeCode(0x44257F);
MakeFunction(0x442200, 0x442589);
MakeUnkn(0x44258C, 1);
MakeNameEx(0x44258C, "TThemeServices.PaintBorder", 0x20);
MakeComm(0x44258C, "'procedure TThemeServices.PaintBorder(Control:TWinControl; EraseLRCorner:Boolean);'");
MakeCode(0x44258C);
MakeCode(0x442683);
MakeCode(0x4426C7);
MakeCode(0x4426D4);
MakeCode(0x4426E7);
MakeCode(0x4426EC);
MakeCode(0x4426EE);
MakeFunction(0x44258C, 0x4426F5);
MakeUnkn(0x4426F8, 1);
MakeNameEx(0x4426F8, "TThemeServices.UpdateThemes", 0x20);
MakeComm(0x4426F8, "'procedure TThemeServices.UpdateThemes;'");
MakeCode(0x4426F8);
MakeCode(0x442708);
MakeFunction(0x4426F8, 0x442712);
MakeCode(0x442714);
MakeCode(0x442741);
MakeCode(0x44274B);
MakeCode(0x442758);
MakeCode(0x442759);
MakeCode(0x44275E);
MakeFunction(0x442714, 0x442762);
MakeUnkn(0x442764, 1);
MakeNameEx(0x442764, "VMT_442764_EMenuError", 0);
MakeDword(0x442764);
MakeDword(0x442768);
MakeDword(0x44276C);
MakeDword(0x442770);
MakeDword(0x442774);
MakeDword(0x442778);
MakeDword(0x44277C);
MakeDword(0x442780);
MakeDword(0x442784);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4427B0, 0x4427BB);
MakeDword(0x442788);
MakeDword(0x44278C);
MakeDword(0x442790);
MakeDword(0x442794);
MakeDword(0x442798);
MakeDword(0x44279C);
MakeDword(0x4427A0);
MakeDword(0x4427A4);
MakeDword(0x4427A8);
MakeDword(0x4427AC);
MakeUnkn(0x4427BC, 1);
MakeNameEx(0x4427BC, "RTTI_4427BC_Enumeration_TMenuBreak", 0);
MakeDword(0x4427BC);
MakeUnkn(0x4427C0, 1);
MakeNameEx(0x4427C0, "", 0);
MakeByte(0x4427C0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4427C1, 0x4427CC);
MakeByte(0x4427CC);
MakeDword(0x4427CD);
MakeDword(0x4427D1);
MakeDword(0x4427D5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4427D9, 0x4427E0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4427E0, 0x4427E8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4427E8, 0x4427F3);
MakeUnkn(0x4427FC, 1);
MakeNameEx(0x4427FC, "RTTI_4427FC_Method_TMenuChangeEvent", 0);
MakeDword(0x4427FC);
MakeUnkn(0x442800, 1);
MakeNameEx(0x442800, "", 0);
MakeByte(0x442800);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442801, 0x442812);
MakeByte(0x442812);
MakeByte(0x442813);
MakeByte(0x442814);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442815, 0x44281C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44281C, 0x442824);
MakeByte(0x442824);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442825, 0x44282C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44282C, 0x442836);
MakeByte(0x442836);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442837, 0x44283F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44283F, 0x442847);
MakeByte(0x442847);
MakeDword(0x442848);
MakeDword(0x44284C);
MakeDword(0x442850);
MakeUnkn(0x442854, 1);
MakeNameEx(0x442854, "RTTI_442854_Method_TMenuDrawItemEvent", 0);
MakeDword(0x442854);
MakeUnkn(0x442858, 1);
MakeNameEx(0x442858, "", 0);
MakeByte(0x442858);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442859, 0x44286C);
MakeByte(0x44286C);
MakeByte(0x44286D);
MakeByte(0x44286E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44286F, 0x442876);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442876, 0x44287E);
MakeByte(0x44287E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44287F, 0x442887);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442887, 0x44288F);
MakeByte(0x44288F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442890, 0x442896);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442896, 0x44289C);
MakeByte(0x44289C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44289D, 0x4428A6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4428A6, 0x4428AE);
MakeByte(0x4428AE);
MakeDword(0x4428AF);
MakeDword(0x4428B3);
MakeDword(0x4428B7);
MakeDword(0x4428BB);
MakeUnkn(0x4428C0, 1);
MakeNameEx(0x4428C0, "RTTI_4428C0_Method_TAdvancedMenuDrawItemEvent", 0);
MakeDword(0x4428C0);
MakeUnkn(0x4428C4, 1);
MakeNameEx(0x4428C4, "", 0);
MakeByte(0x4428C4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4428C5, 0x4428E0);
MakeByte(0x4428E0);
MakeByte(0x4428E1);
MakeByte(0x4428E2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4428E3, 0x4428EA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4428EA, 0x4428F2);
MakeByte(0x4428F2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4428F3, 0x4428FB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4428FB, 0x442903);
MakeByte(0x442903);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442904, 0x44290A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44290A, 0x442910);
MakeByte(0x442910);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442911, 0x442917);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442917, 0x442927);
MakeByte(0x442927);
MakeDword(0x442928);
MakeDword(0x44292C);
MakeDword(0x442930);
MakeDword(0x442934);
MakeUnkn(0x442938, 1);
MakeNameEx(0x442938, "RTTI_442938_Method_TMenuMeasureItemEvent", 0);
MakeDword(0x442938);
MakeUnkn(0x44293C, 1);
MakeNameEx(0x44293C, "", 0);
MakeByte(0x44293C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44293D, 0x442953);
MakeByte(0x442953);
MakeByte(0x442954);
MakeByte(0x442955);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442956, 0x44295D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44295D, 0x442965);
MakeByte(0x442965);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442966, 0x44296E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44296E, 0x442976);
MakeByte(0x442976);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442977, 0x44297D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44297D, 0x442985);
MakeByte(0x442985);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442986, 0x44298D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44298D, 0x442995);
MakeByte(0x442995);
MakeDword(0x442996);
MakeDword(0x44299A);
MakeDword(0x44299E);
MakeDword(0x4429A2);
MakeUnkn(0x4429A8, 1);
MakeNameEx(0x4429A8, "RTTI_4429A8_Enumeration_TMenuItemAutoFlag", 0);
MakeDword(0x4429A8);
MakeUnkn(0x4429AC, 1);
MakeNameEx(0x4429AC, "", 0);
MakeByte(0x4429AC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4429AD, 0x4429BF);
MakeByte(0x4429BF);
MakeDword(0x4429C0);
MakeDword(0x4429C4);
MakeDword(0x4429C8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4429CC, 0x4429D8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4429D8, 0x4429E1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4429E1, 0x4429EA);
MakeUnkn(0x4429F0, 1);
MakeNameEx(0x4429F0, "RTTI_4429F0_Enumeration_TMenuAutoFlag", 0);
MakeDword(0x4429F0);
MakeUnkn(0x4429F4, 1);
MakeNameEx(0x4429F4, "", 0);
MakeByte(0x4429F4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4429F5, 0x442A03);
MakeByte(0x442A03);
MakeDword(0x442A04);
MakeDword(0x442A08);
MakeDword(0x442A0C);
MakeUnkn(0x442A18, 1);
MakeNameEx(0x442A18, "VMT_442A18_TMenuActionLink", 0);
MakeDword(0x442A18);
MakeDword(0x442A1C);
MakeDword(0x442A20);
MakeDword(0x442A24);
MakeDword(0x442A28);
MakeDword(0x442A2C);
MakeDword(0x442A30);
MakeDword(0x442A34);
MakeDword(0x442A38);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442AE0, 0x442AF0);
MakeDword(0x442A3C);
MakeDword(0x442A40);
MakeDword(0x442A44);
MakeDword(0x442A48);
MakeDword(0x442A4C);
MakeDword(0x442A50);
MakeDword(0x442A54);
MakeDword(0x442A58);
MakeDword(0x442A5C);
MakeDword(0x442A60);
MakeComm(0x442A64, "'+0'");
MakeDword(0x442A64);
MakeComm(0x442A68, "'+4'");
MakeDword(0x442A68);
MakeComm(0x442A6C, "'+8'");
MakeDword(0x442A6C);
MakeComm(0x442A70, "'+C'");
MakeDword(0x442A70);
MakeComm(0x442A74, "'+10'");
MakeDword(0x442A74);
MakeComm(0x442A78, "'+14'");
MakeDword(0x442A78);
MakeComm(0x442A7C, "'+18'");
MakeDword(0x442A7C);
MakeComm(0x442A80, "'+1C'");
MakeDword(0x442A80);
MakeComm(0x442A84, "'+20'");
MakeDword(0x442A84);
MakeComm(0x442A88, "'+24'");
MakeDword(0x442A88);
MakeComm(0x442A8C, "'+28'");
MakeDword(0x442A8C);
MakeComm(0x442A90, "'+2C'");
MakeDword(0x442A90);
MakeComm(0x442A94, "'+30'");
MakeDword(0x442A94);
MakeComm(0x442A98, "'+34'");
MakeDword(0x442A98);
MakeComm(0x442A9C, "'+38'");
MakeDword(0x442A9C);
MakeComm(0x442AA0, "'+3C'");
MakeDword(0x442AA0);
MakeComm(0x442AA4, "'+40'");
MakeDword(0x442AA4);
MakeComm(0x442AA8, "'+44'");
MakeDword(0x442AA8);
MakeComm(0x442AAC, "'+48'");
MakeDword(0x442AAC);
MakeComm(0x442AB0, "'+4C'");
MakeDword(0x442AB0);
MakeComm(0x442AB4, "'+50'");
MakeDword(0x442AB4);
MakeComm(0x442AB8, "'+54'");
MakeDword(0x442AB8);
MakeComm(0x442ABC, "'+58'");
MakeDword(0x442ABC);
MakeComm(0x442AC0, "'+5C'");
MakeDword(0x442AC0);
MakeComm(0x442AC4, "'+60'");
MakeDword(0x442AC4);
MakeComm(0x442AC8, "'+64'");
MakeDword(0x442AC8);
MakeComm(0x442ACC, "'+68'");
MakeDword(0x442ACC);
MakeComm(0x442AD0, "'+6C'");
MakeDword(0x442AD0);
MakeComm(0x442AD4, "'+70'");
MakeDword(0x442AD4);
MakeComm(0x442AD8, "'+74'");
MakeDword(0x442AD8);
MakeComm(0x442ADC, "'+78'");
MakeDword(0x442ADC);
MakeUnkn(0x442AF0, 1);
MakeNameEx(0x442AF0, "VMT_442AF0_TMenuItem", 0);
MakeDword(0x442AF0);
MakeDword(0x442AF4);
MakeDword(0x442AF8);
MakeDword(0x442AFC);
MakeUnkn(0x442B84, 1);
MakeNameEx(0x442B84, "TMenuItem_InitTable", 0);
MakeByte(0x442B84);
MakeByte(0x442B85);
MakeDword(0x442B86);
MakeDword(0x442B8A);
MakeDword(0x442B8E);
MakeDword(0x442B92);
MakeDword(0x442B96);
MakeDword(0x442B9A);
MakeDword(0x442B00);
MakeDword(0x442B04);
MakeDword(0x442B08);
MakeDword(0x442B0C);
MakeUnkn(0x442B9E, 1);
MakeNameEx(0x442B9E, "TMenuItem_DynamicTable", 0);
MakeWord(0x442B9E);
MakeWord(0x442BA0);
MakeWord(0x442BA2);
MakeWord(0x442BA4);
MakeWord(0x442BA6);
MakeWord(0x442BA8);
MakeWord(0x442BAA);
MakeWord(0x442BAC);
MakeDword(0x442BAE);
MakeDword(0x442BB2);
MakeDword(0x442BB6);
MakeDword(0x442BBA);
MakeDword(0x442BBE);
MakeDword(0x442BC2);
MakeDword(0x442BC6);
MakeDword(0x442B10);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442BCA, 0x442BD4);
MakeDword(0x442B14);
MakeDword(0x442B18);
MakeDword(0x442B1C);
MakeDword(0x442B20);
MakeDword(0x442B24);
MakeDword(0x442B28);
MakeDword(0x442B2C);
MakeDword(0x442B30);
MakeDword(0x442B34);
MakeDword(0x442B38);
MakeComm(0x442B3C, "'+0'");
MakeDword(0x442B3C);
MakeComm(0x442B40, "'+4'");
MakeDword(0x442B40);
MakeComm(0x442B44, "'+8'");
MakeDword(0x442B44);
MakeComm(0x442B48, "'+C'");
MakeDword(0x442B48);
MakeComm(0x442B4C, "'+10'");
MakeDword(0x442B4C);
MakeComm(0x442B50, "'+14'");
MakeDword(0x442B50);
MakeComm(0x442B54, "'+18'");
MakeDword(0x442B54);
MakeComm(0x442B58, "'+1C'");
MakeDword(0x442B58);
MakeComm(0x442B5C, "'+20'");
MakeDword(0x442B5C);
MakeComm(0x442B60, "'+24'");
MakeDword(0x442B60);
MakeComm(0x442B64, "'+28'");
MakeDword(0x442B64);
MakeComm(0x442B68, "'+2C'");
MakeDword(0x442B68);
MakeComm(0x442B6C, "'+30'");
MakeDword(0x442B6C);
MakeComm(0x442B70, "'+34'");
MakeDword(0x442B70);
MakeComm(0x442B74, "'+38'");
MakeDword(0x442B74);
MakeComm(0x442B78, "'+3C'");
MakeDword(0x442B78);
MakeComm(0x442B7C, "'+40'");
MakeDword(0x442B7C);
MakeComm(0x442B80, "'+44'");
MakeDword(0x442B80);
MakeUnkn(0x442BD4, 1);
MakeNameEx(0x442BD4, "RTTI_442BD4_Class_TMenuItem", 0);
MakeDword(0x442BD4);
MakeUnkn(0x442BD8, 1);
MakeNameEx(0x442BD8, "", 0);
MakeByte(0x442BD8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442BD9, 0x442BE3);
MakeDword(0x442BE3);
MakeDword(0x442BE7);
MakeWord(0x442BEB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442BED, 0x442BF3);
MakeWord(0x442BF3);
MakeDword(0x442BF5);
MakeDword(0x442BF9);
MakeDword(0x442BFD);
MakeDword(0x442C01);
MakeDword(0x442C05);
MakeDword(0x442C09);
MakeWord(0x442C0D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442C0F, 0x442C16);
MakeDword(0x442C16);
MakeDword(0x442C1A);
MakeDword(0x442C1E);
MakeDword(0x442C22);
MakeDword(0x442C26);
MakeDword(0x442C2A);
MakeWord(0x442C2E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442C30, 0x442C3A);
MakeDword(0x442C3A);
MakeDword(0x442C3E);
MakeDword(0x442C42);
MakeDword(0x442C46);
MakeDword(0x442C4A);
MakeDword(0x442C4E);
MakeWord(0x442C52);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442C54, 0x442C60);
MakeDword(0x442C60);
MakeDword(0x442C64);
MakeDword(0x442C68);
MakeDword(0x442C6C);
MakeDword(0x442C70);
MakeDword(0x442C74);
MakeWord(0x442C78);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442C7A, 0x442C8C);
MakeDword(0x442C8C);
MakeDword(0x442C90);
MakeDword(0x442C94);
MakeDword(0x442C98);
MakeDword(0x442C9C);
MakeDword(0x442CA0);
MakeWord(0x442CA4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442CA6, 0x442CAD);
MakeDword(0x442CAD);
MakeDword(0x442CB1);
MakeDword(0x442CB5);
MakeDword(0x442CB9);
MakeDword(0x442CBD);
MakeDword(0x442CC1);
MakeWord(0x442CC5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442CC7, 0x442CCD);
MakeDword(0x442CCD);
MakeDword(0x442CD1);
MakeDword(0x442CD5);
MakeDword(0x442CD9);
MakeDword(0x442CDD);
MakeDword(0x442CE1);
MakeWord(0x442CE5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442CE7, 0x442CEF);
MakeDword(0x442CEF);
MakeDword(0x442CF3);
MakeDword(0x442CF7);
MakeDword(0x442CFB);
MakeDword(0x442CFF);
MakeDword(0x442D03);
MakeWord(0x442D07);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442D09, 0x442D11);
MakeDword(0x442D11);
MakeDword(0x442D15);
MakeDword(0x442D19);
MakeDword(0x442D1D);
MakeDword(0x442D21);
MakeDword(0x442D25);
MakeWord(0x442D29);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442D2B, 0x442D39);
MakeDword(0x442D39);
MakeDword(0x442D3D);
MakeDword(0x442D41);
MakeDword(0x442D45);
MakeDword(0x442D49);
MakeDword(0x442D4D);
MakeWord(0x442D51);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442D53, 0x442D5B);
MakeDword(0x442D5B);
MakeDword(0x442D5F);
MakeDword(0x442D63);
MakeDword(0x442D67);
MakeDword(0x442D6B);
MakeDword(0x442D6F);
MakeWord(0x442D73);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442D75, 0x442D7D);
MakeDword(0x442D7D);
MakeDword(0x442D81);
MakeDword(0x442D85);
MakeDword(0x442D89);
MakeDword(0x442D8D);
MakeDword(0x442D91);
MakeWord(0x442D95);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442D97, 0x442DA2);
MakeDword(0x442DA2);
MakeDword(0x442DA6);
MakeDword(0x442DAA);
MakeDword(0x442DAE);
MakeDword(0x442DB2);
MakeDword(0x442DB6);
MakeWord(0x442DBA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442DBC, 0x442DC8);
MakeDword(0x442DC8);
MakeDword(0x442DCC);
MakeDword(0x442DD0);
MakeDword(0x442DD4);
MakeDword(0x442DD8);
MakeDword(0x442DDC);
MakeWord(0x442DE0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442DE2, 0x442DE7);
MakeDword(0x442DE7);
MakeDword(0x442DEB);
MakeDword(0x442DEF);
MakeDword(0x442DF3);
MakeDword(0x442DF7);
MakeDword(0x442DFB);
MakeWord(0x442DFF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442E01, 0x442E0C);
MakeDword(0x442E0C);
MakeDword(0x442E10);
MakeDword(0x442E14);
MakeDword(0x442E18);
MakeDword(0x442E1C);
MakeDword(0x442E20);
MakeWord(0x442E24);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442E26, 0x442E30);
MakeDword(0x442E30);
MakeDword(0x442E34);
MakeDword(0x442E38);
MakeDword(0x442E3C);
MakeDword(0x442E40);
MakeDword(0x442E44);
MakeWord(0x442E48);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442E4A, 0x442E53);
MakeDword(0x442E53);
MakeDword(0x442E57);
MakeDword(0x442E5B);
MakeDword(0x442E5F);
MakeDword(0x442E63);
MakeDword(0x442E67);
MakeWord(0x442E6B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442E6D, 0x442E75);
MakeDword(0x442E75);
MakeDword(0x442E79);
MakeDword(0x442E7D);
MakeDword(0x442E81);
MakeDword(0x442E85);
MakeDword(0x442E89);
MakeWord(0x442E8D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442E8F, 0x442E97);
MakeDword(0x442E97);
MakeDword(0x442E9B);
MakeDword(0x442E9F);
MakeDword(0x442EA3);
MakeDword(0x442EA7);
MakeDword(0x442EAB);
MakeWord(0x442EAF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442EB1, 0x442EBC);
MakeDword(0x442EBC);
MakeDword(0x442EC0);
MakeDword(0x442EC4);
MakeDword(0x442EC8);
MakeDword(0x442ECC);
MakeDword(0x442ED0);
MakeWord(0x442ED4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442ED6, 0x442EE9);
MakeDword(0x442EE9);
MakeDword(0x442EED);
MakeDword(0x442EF1);
MakeDword(0x442EF5);
MakeDword(0x442EF9);
MakeDword(0x442EFD);
MakeWord(0x442F01);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442F03, 0x442F11);
MakeUnkn(0x442F14, 1);
MakeNameEx(0x442F14, "VMT_442F14_TMenu", 0);
MakeDword(0x442F14);
MakeDword(0x442F18);
MakeDword(0x442F1C);
MakeDword(0x442F20);
MakeUnkn(0x442F9C, 1);
MakeNameEx(0x442F9C, "TMenu_InitTable", 0);
MakeByte(0x442F9C);
MakeByte(0x442F9D);
MakeDword(0x442F9E);
MakeDword(0x442FA2);
MakeDword(0x442FA6);
MakeDword(0x442FAA);
MakeDword(0x442F24);
MakeDword(0x442F28);
MakeDword(0x442F2C);
MakeDword(0x442F30);
MakeUnkn(0x442FAE, 1);
MakeNameEx(0x442FAE, "TMenu_DynamicTable", 0);
MakeWord(0x442FAE);
MakeWord(0x442FB0);
MakeWord(0x442FB2);
MakeWord(0x442FB4);
MakeWord(0x442FB6);
MakeDword(0x442FB8);
MakeDword(0x442FBC);
MakeDword(0x442FC0);
MakeDword(0x442FC4);
MakeDword(0x442F34);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442FC8, 0x442FCE);
MakeDword(0x442F38);
MakeDword(0x442F3C);
MakeDword(0x442F40);
MakeDword(0x442F44);
MakeDword(0x442F48);
MakeDword(0x442F4C);
MakeDword(0x442F50);
MakeDword(0x442F54);
MakeDword(0x442F58);
MakeDword(0x442F5C);
MakeComm(0x442F60, "'+0'");
MakeDword(0x442F60);
MakeComm(0x442F64, "'+4'");
MakeDword(0x442F64);
MakeComm(0x442F68, "'+8'");
MakeDword(0x442F68);
MakeComm(0x442F6C, "'+C'");
MakeDword(0x442F6C);
MakeComm(0x442F70, "'+10'");
MakeDword(0x442F70);
MakeComm(0x442F74, "'+14'");
MakeDword(0x442F74);
MakeComm(0x442F78, "'+18'");
MakeDword(0x442F78);
MakeComm(0x442F7C, "'+1C'");
MakeDword(0x442F7C);
MakeComm(0x442F80, "'+20'");
MakeDword(0x442F80);
MakeComm(0x442F84, "'+24'");
MakeDword(0x442F84);
MakeComm(0x442F88, "'+28'");
MakeDword(0x442F88);
MakeComm(0x442F8C, "'+2C'");
MakeDword(0x442F8C);
MakeComm(0x442F90, "'+30'");
MakeDword(0x442F90);
MakeComm(0x442F94, "'+34'");
MakeDword(0x442F94);
MakeComm(0x442F98, "'+38'");
MakeDword(0x442F98);
MakeUnkn(0x442FD0, 1);
MakeNameEx(0x442FD0, "RTTI_442FD0_Class_TMenu", 0);
MakeDword(0x442FD0);
MakeUnkn(0x442FD4, 1);
MakeNameEx(0x442FD4, "", 0);
MakeByte(0x442FD4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442FD5, 0x442FDB);
MakeDword(0x442FDB);
MakeDword(0x442FDF);
MakeWord(0x442FE3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x442FE5, 0x442FEB);
MakeWord(0x442FEB);
MakeDword(0x442FED);
MakeDword(0x442FF1);
MakeDword(0x442FF5);
MakeDword(0x442FF9);
MakeDword(0x442FFD);
MakeDword(0x443001);
MakeWord(0x443005);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x443007, 0x44300D);
MakeUnkn(0x443010, 1);
MakeNameEx(0x443010, "VMT_443010_TMainMenu", 0);
MakeDword(0x443010);
MakeDword(0x443014);
MakeDword(0x443018);
MakeDword(0x44301C);
MakeDword(0x443020);
MakeDword(0x443024);
MakeDword(0x443028);
MakeDword(0x44302C);
MakeDword(0x443030);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x443098, 0x4430A2);
MakeDword(0x443034);
MakeDword(0x443038);
MakeDword(0x44303C);
MakeDword(0x443040);
MakeDword(0x443044);
MakeDword(0x443048);
MakeDword(0x44304C);
MakeDword(0x443050);
MakeDword(0x443054);
MakeDword(0x443058);
MakeComm(0x44305C, "'+0'");
MakeDword(0x44305C);
MakeComm(0x443060, "'+4'");
MakeDword(0x443060);
MakeComm(0x443064, "'+8'");
MakeDword(0x443064);
MakeComm(0x443068, "'+C'");
MakeDword(0x443068);
MakeComm(0x44306C, "'+10'");
MakeDword(0x44306C);
MakeComm(0x443070, "'+14'");
MakeDword(0x443070);
MakeComm(0x443074, "'+18'");
MakeDword(0x443074);
MakeComm(0x443078, "'+1C'");
MakeDword(0x443078);
MakeComm(0x44307C, "'+20'");
MakeDword(0x44307C);
MakeComm(0x443080, "'+24'");
MakeDword(0x443080);
MakeComm(0x443084, "'+28'");
MakeDword(0x443084);
MakeComm(0x443088, "'+2C'");
MakeDword(0x443088);
MakeComm(0x44308C, "'+30'");
MakeDword(0x44308C);
MakeComm(0x443090, "'+34'");
MakeDword(0x443090);
MakeComm(0x443094, "'+38'");
MakeDword(0x443094);
MakeUnkn(0x4430A4, 1);
MakeNameEx(0x4430A4, "RTTI_4430A4_Class_TMainMenu", 0);
MakeDword(0x4430A4);
MakeUnkn(0x4430A8, 1);
MakeNameEx(0x4430A8, "", 0);
MakeByte(0x4430A8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4430A9, 0x4430B3);
MakeDword(0x4430B3);
MakeDword(0x4430B7);
MakeWord(0x4430BB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4430BD, 0x4430C3);
MakeWord(0x4430C3);
MakeDword(0x4430C5);
MakeDword(0x4430C9);
MakeDword(0x4430CD);
MakeDword(0x4430D1);
MakeDword(0x4430D5);
MakeDword(0x4430D9);
MakeWord(0x4430DD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4430DF, 0x4430EB);
MakeDword(0x4430EB);
MakeDword(0x4430EF);
MakeDword(0x4430F3);
MakeDword(0x4430F7);
MakeDword(0x4430FB);
MakeDword(0x4430FF);
MakeWord(0x443103);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x443105, 0x443117);
MakeDword(0x443117);
MakeDword(0x44311B);
MakeDword(0x44311F);
MakeDword(0x443123);
MakeDword(0x443127);
MakeDword(0x44312B);
MakeWord(0x44312F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x443131, 0x44313B);
MakeDword(0x44313B);
MakeDword(0x44313F);
MakeDword(0x443143);
MakeDword(0x443147);
MakeDword(0x44314B);
MakeDword(0x44314F);
MakeWord(0x443153);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x443155, 0x44315E);
MakeDword(0x44315E);
MakeDword(0x443162);
MakeDword(0x443166);
MakeDword(0x44316A);
MakeDword(0x44316E);
MakeDword(0x443172);
MakeWord(0x443176);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x443178, 0x44317F);
MakeDword(0x44317F);
MakeDword(0x443183);
MakeDword(0x443187);
MakeDword(0x44318B);
MakeDword(0x44318F);
MakeDword(0x443193);
MakeWord(0x443197);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x443199, 0x4431A3);
MakeDword(0x4431A3);
MakeDword(0x4431A7);
MakeDword(0x4431AB);
MakeDword(0x4431AF);
MakeDword(0x4431B3);
MakeDword(0x4431B7);
MakeWord(0x4431BB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4431BD, 0x4431CC);
MakeDword(0x4431CC);
MakeDword(0x4431D0);
MakeDword(0x4431D4);
MakeDword(0x4431D8);
MakeDword(0x4431DC);
MakeDword(0x4431E0);
MakeWord(0x4431E4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4431E6, 0x4431EF);
MakeUnkn(0x4431F0, 1);
MakeNameEx(0x4431F0, "RTTI_4431F0_Enumeration_TPopupAlignment", 0);
MakeDword(0x4431F0);
MakeUnkn(0x4431F4, 1);
MakeNameEx(0x4431F4, "", 0);
MakeByte(0x4431F4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4431F5, 0x443205);
MakeByte(0x443205);
MakeDword(0x443206);
MakeDword(0x44320A);
MakeDword(0x44320E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x443212, 0x443219);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x443219, 0x443221);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x443221, 0x44322A);
MakeUnkn(0x443230, 1);
MakeNameEx(0x443230, "RTTI_443230_Enumeration_TTrackButton", 0);
MakeDword(0x443230);
MakeUnkn(0x443234, 1);
MakeNameEx(0x443234, "", 0);
MakeByte(0x443234);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x443235, 0x443242);
MakeByte(0x443242);
MakeDword(0x443243);
MakeDword(0x443247);
MakeDword(0x44324B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44324F, 0x44325D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44325D, 0x44326A);
MakeUnkn(0x443270, 1);
MakeNameEx(0x443270, "RTTI_443270_Enumeration_TMenuAnimations", 0);
MakeDword(0x443270);
MakeUnkn(0x443274, 1);
MakeNameEx(0x443274, "", 0);
MakeByte(0x443274);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x443275, 0x443285);
MakeByte(0x443285);
MakeDword(0x443286);
MakeDword(0x44328A);
MakeDword(0x44328E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x443292, 0x4432A0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4432A0, 0x4432AE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4432AE, 0x4432BC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4432BC, 0x4432CA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4432CA, 0x4432D1);
MakeUnkn(0x4432D8, 1);
MakeNameEx(0x4432D8, "RTTI_4432D8_Set_TMenuAnimation", 0);
MakeDword(0x4432D8);
MakeUnkn(0x4432DC, 1);
MakeNameEx(0x4432DC, "", 0);
MakeByte(0x4432DC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4432DD, 0x4432EC);
MakeByte(0x4432EC);
MakeDword(0x4432ED);
MakeUnkn(0x4432F4, 1);
MakeNameEx(0x4432F4, "VMT_4432F4_TPopupMenu", 0);
MakeDword(0x4432F4);
MakeDword(0x4432F8);
MakeDword(0x4432FC);
MakeDword(0x443300);
MakeDword(0x443304);
MakeDword(0x443308);
MakeDword(0x44330C);
MakeDword(0x443310);
MakeDword(0x443314);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x443384, 0x44338F);
MakeDword(0x443318);
MakeDword(0x44331C);
MakeDword(0x443320);
MakeDword(0x443324);
MakeDword(0x443328);
MakeDword(0x44332C);
MakeDword(0x443330);
MakeDword(0x443334);
MakeDword(0x443338);
MakeDword(0x44333C);
MakeComm(0x443340, "'+0'");
MakeDword(0x443340);
MakeComm(0x443344, "'+4'");
MakeDword(0x443344);
MakeComm(0x443348, "'+8'");
MakeDword(0x443348);
MakeComm(0x44334C, "'+C'");
MakeDword(0x44334C);
MakeComm(0x443350, "'+10'");
MakeDword(0x443350);
MakeComm(0x443354, "'+14'");
MakeDword(0x443354);
MakeComm(0x443358, "'+18'");
MakeDword(0x443358);
MakeComm(0x44335C, "'+1C'");
MakeDword(0x44335C);
MakeComm(0x443360, "'+20'");
MakeDword(0x443360);
MakeComm(0x443364, "'+24'");
MakeDword(0x443364);
MakeComm(0x443368, "'+28'");
MakeDword(0x443368);
MakeComm(0x44336C, "'+2C'");
MakeDword(0x44336C);
MakeComm(0x443370, "'+30'");
MakeDword(0x443370);
MakeComm(0x443374, "'+34'");
MakeDword(0x443374);
MakeComm(0x443378, "'+38'");
MakeDword(0x443378);
MakeComm(0x44337C, "'+3C'");
MakeDword(0x44337C);
MakeComm(0x443380, "'+40'");
MakeDword(0x443380);
MakeUnkn(0x443390, 1);
MakeNameEx(0x443390, "RTTI_443390_Class_TPopupMenu", 0);
MakeDword(0x443390);
MakeUnkn(0x443394, 1);
MakeNameEx(0x443394, "", 0);
MakeByte(0x443394);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x443395, 0x4433A0);
MakeDword(0x4433A0);
MakeDword(0x4433A4);
MakeWord(0x4433A8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4433AA, 0x4433B0);
MakeWord(0x4433B0);
MakeDword(0x4433B2);
MakeDword(0x4433B6);
MakeDword(0x4433BA);
MakeDword(0x4433BE);
MakeDword(0x4433C2);
MakeDword(0x4433C6);
MakeWord(0x4433CA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4433CC, 0x4433D6);
MakeDword(0x4433D6);
MakeDword(0x4433DA);
MakeDword(0x4433DE);
MakeDword(0x4433E2);
MakeDword(0x4433E6);
MakeDword(0x4433EA);
MakeWord(0x4433EE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4433F0, 0x4433FC);
MakeDword(0x4433FC);
MakeDword(0x443400);
MakeDword(0x443404);
MakeDword(0x443408);
MakeDword(0x44340C);
MakeDword(0x443410);
MakeWord(0x443414);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x443416, 0x443428);
MakeDword(0x443428);
MakeDword(0x44342C);
MakeDword(0x443430);
MakeDword(0x443434);
MakeDword(0x443438);
MakeDword(0x44343C);
MakeWord(0x443440);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x443442, 0x44344C);
MakeDword(0x44344C);
MakeDword(0x443450);
MakeDword(0x443454);
MakeDword(0x443458);
MakeDword(0x44345C);
MakeDword(0x443460);
MakeWord(0x443464);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x443466, 0x44346F);
MakeDword(0x44346F);
MakeDword(0x443473);
MakeDword(0x443477);
MakeDword(0x44347B);
MakeDword(0x44347F);
MakeDword(0x443483);
MakeWord(0x443487);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x443489, 0x443495);
MakeDword(0x443495);
MakeDword(0x443499);
MakeDword(0x44349D);
MakeDword(0x4434A1);
MakeDword(0x4434A5);
MakeDword(0x4434A9);
MakeWord(0x4434AD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4434AF, 0x4434B6);
MakeDword(0x4434B6);
MakeDword(0x4434BA);
MakeDword(0x4434BE);
MakeDword(0x4434C2);
MakeDword(0x4434C6);
MakeDword(0x4434CA);
MakeWord(0x4434CE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4434D0, 0x4434DE);
MakeDword(0x4434DE);
MakeDword(0x4434E2);
MakeDword(0x4434E6);
MakeDword(0x4434EA);
MakeDword(0x4434EE);
MakeDword(0x4434F2);
MakeWord(0x4434F6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4434F8, 0x443502);
MakeDword(0x443502);
MakeDword(0x443506);
MakeDword(0x44350A);
MakeDword(0x44350E);
MakeDword(0x443512);
MakeDword(0x443516);
MakeWord(0x44351A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44351C, 0x44352B);
MakeDword(0x44352B);
MakeDword(0x44352F);
MakeDword(0x443533);
MakeDword(0x443537);
MakeDword(0x44353B);
MakeDword(0x44353F);
MakeWord(0x443543);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x443545, 0x443551);
MakeDword(0x443551);
MakeDword(0x443555);
MakeDword(0x443559);
MakeDword(0x44355D);
MakeDword(0x443561);
MakeDword(0x443565);
MakeWord(0x443569);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44356B, 0x443574);
MakeDword(0x443574);
MakeDword(0x443578);
MakeDword(0x44357C);
MakeDword(0x443580);
MakeDword(0x443584);
MakeDword(0x443588);
MakeWord(0x44358C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44358E, 0x443596);
MakeUnkn(0x443598, 1);
MakeNameEx(0x443598, "VMT_443598_TPopupList", 0);
MakeDword(0x443598);
MakeDword(0x44359C);
MakeDword(0x4435A0);
MakeDword(0x4435A4);
MakeDword(0x4435A8);
MakeDword(0x4435AC);
MakeDword(0x4435B0);
MakeDword(0x4435B4);
MakeDword(0x4435B8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4435F8, 0x443603);
MakeDword(0x4435BC);
MakeDword(0x4435C0);
MakeDword(0x4435C4);
MakeDword(0x4435C8);
MakeDword(0x4435CC);
MakeDword(0x4435D0);
MakeDword(0x4435D4);
MakeDword(0x4435D8);
MakeDword(0x4435DC);
MakeDword(0x4435E0);
MakeComm(0x4435E4, "'+0'");
MakeDword(0x4435E4);
MakeComm(0x4435E8, "'+4'");
MakeDword(0x4435E8);
MakeComm(0x4435EC, "'+8'");
MakeDword(0x4435EC);
MakeComm(0x4435F0, "'+C'");
MakeDword(0x4435F0);
MakeComm(0x4435F4, "'+10'");
MakeDword(0x4435F4);
MakeUnkn(0x443604, 1);
MakeNameEx(0x443604, "VMT_443604_TMenuItemStack", 0);
MakeDword(0x443604);
MakeDword(0x443608);
MakeDword(0x44360C);
MakeDword(0x443610);
MakeDword(0x443614);
MakeDword(0x443618);
MakeDword(0x44361C);
MakeDword(0x443620);
MakeDword(0x443624);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44365C, 0x44366B);
MakeDword(0x443628);
MakeDword(0x44362C);
MakeDword(0x443630);
MakeDword(0x443634);
MakeDword(0x443638);
MakeDword(0x44363C);
MakeDword(0x443640);
MakeDword(0x443644);
MakeDword(0x443648);
MakeDword(0x44364C);
MakeComm(0x443650, "'+0'");
MakeDword(0x443650);
MakeComm(0x443654, "'+4'");
MakeDword(0x443654);
MakeComm(0x443658, "'+8'");
MakeDword(0x443658);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x443674, -1);
MakeDword(0x443670);
MakeDword(0x44366C);
MakeUnkn(0x44369C, 1);
MakeNameEx(0x44369C, "FindPopupControl", 0x20);
MakeComm(0x44369C, "'function FindPopupControl(const Pos:TPoint):TControl;'");
MakeCode(0x44369C);
MakeCode(0x4436C7);
MakeFunction(0x44369C, 0x4436CD);
MakeUnkn(0x4436D0, 1);
MakeNameEx(0x4436D0, "ReturnAddr_1", 0x20);
MakeComm(0x4436D0, "'function ReturnAddr:Pointer;'");
MakeCode(0x4436D0);
MakeFunction(0x4436D0, 0x4436D5);
MakeUnkn(0x4436D8, 1);
MakeNameEx(0x4436D8, "Error_2", 0x20);
MakeComm(0x4436D8, "'procedure Error(ResStr:PResStringRec);'");
MakeCode(0x4436D8);
MakeFunction(0x4436D8, 0x4436F6);
MakeUnkn(0x4436F8, 1);
MakeNameEx(0x4436F8, "ShortCut", 0x20);
MakeComm(0x4436F8, "'function ShortCut(Key:Word; Shift:TShiftState):TShortCut;'");
MakeCode(0x4436F8);
MakeCode(0x443719);
MakeCode(0x443723);
MakeCode(0x44372D);
MakeFunction(0x4436F8, 0x443730);
MakeUnkn(0x443730, 1);
MakeNameEx(0x443730, "GetSpecialName", 0x20);
MakeComm(0x443730, "'function GetSpecialName(ShortCut:TShortCut):AnsiString;'");
MakeCode(0x443730);
MakeCode(0x44377E);
MakeFunction(0x443730, 0x443783);
MakeUnkn(0x443784, 1);
MakeNameEx(0x443784, "ShortCutToText", 0x20);
MakeComm(0x443784, "'function ShortCutToText(ShortCut:TShortCut):AnsiString;'");
MakeCode(0x443784);
MakeCode(0x4437D6);
MakeCode(0x4437F6);
MakeCode(0x44381F);
MakeCode(0x443836);
MakeCode(0x443849);
MakeCode(0x44385C);
MakeCode(0x443873);
MakeCode(0x44388A);
MakeCode(0x44389D);
MakeCode(0x4438B0);
MakeCode(0x4438C3);
MakeCode(0x4438E3);
MakeCode(0x4438EF);
MakeCode(0x44390F);
MakeCode(0x443922);
MakeCode(0x443935);
MakeCode(0x443941);
MakeCode(0x443948);
MakeCode(0x443955);
MakeCode(0x443963);
MakeCode(0x443968);
MakeFunction(0x443784, 0x443970);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x443978, -1);
MakeDword(0x443974);
MakeDword(0x443970);
MakeUnkn(0x44397C, 1);
MakeNameEx(0x44397C, "CompareFront", 0x20);
MakeComm(0x44397C, "'function CompareFront(var Text:AnsiString; const Front:AnsiString):Boolean;'");
MakeCode(0x44397C);
MakeCode(0x4439A1);
MakeCode(0x4439AC);
MakeCode(0x4439BB);
MakeCode(0x4439E8);
MakeCode(0x4439F8);
MakeFunction(0x44397C, 0x443A02);
MakeUnkn(0x443A04, 1);
MakeNameEx(0x443A04, "TextToShortCut", 0x20);
MakeComm(0x443A04, "'function TextToShortCut(Text:AnsiString):TShortCut;'");
MakeCode(0x443A04);
MakeCode(0x443A37);
MakeCode(0x443A51);
MakeCode(0x443A6A);
MakeCode(0x443A84);
MakeCode(0x443A9E);
MakeCode(0x443AA8);
MakeCode(0x443AC4);
MakeCode(0x443AD0);
MakeCode(0x443B01);
MakeCode(0x443B09);
MakeCode(0x443B16);
MakeCode(0x443B27);
MakeCode(0x443B2C);
MakeFunction(0x443A04, 0x443B39);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x443B44, -1);
MakeDword(0x443B40);
MakeDword(0x443B3C);
MakeUnkn(0x443B48, 1);
MakeNameEx(0x443B48, "UniqueCommand", 0x20);
MakeComm(0x443B48, "'function UniqueCommand:Word;'");
MakeCode(0x443B48);
MakeFunction(0x443B48, 0x443B68);
MakeUnkn(0x443B68, 1);
MakeNameEx(0x443B68, "Iterate", 0x20);
MakeComm(0x443B68, "'function Iterate(var I:Integer; MenuItem:TMenuItem; AFunc:Pointer):Boolean;'");
MakeCode(0x443B68);
MakeCode(0x443B81);
MakeCode(0x443BAF);
MakeCode(0x443BC0);
MakeFunction(0x443B68, 0x443BCA);
MakeUnkn(0x443BCC, 1);
MakeNameEx(0x443BCC, "IterateMenus", 0x20);
MakeComm(0x443BCC, "'procedure IterateMenus(Func:Pointer; Menu1:TMenuItem; Menu2:TMenuItem);'");
MakeCode(0x443BCC);
MakeCode(0x443BF8);
MakeCode(0x443C08);
MakeCode(0x443C11);
MakeCode(0x443C2F);
MakeCode(0x443C46);
MakeCode(0x443C63);
MakeCode(0x443C7F);
MakeCode(0x443C82);
MakeCode(0x443C9C);
MakeCode(0x443C9F);
MakeCode(0x443CB8);
MakeCode(0x443CD0);
MakeFunction(0x443BCC, 0x443CD7);
MakeUnkn(0x443CD8, 1);
MakeNameEx(0x443CD8, "TMenuActionLink.AssignClient", 0x20);
MakeComm(0x443CD8, "'procedure TMenuActionLink.AssignClient(AClient:TObject);'");
MakeCode(0x443CD8);
MakeFunction(0x443CD8, 0x443CF1);
MakeUnkn(0x443CF4, 1);
MakeNameEx(0x443CF4, "TMenuActionLink.IsAutoCheckLinked", 0x20);
MakeComm(0x443CF4, "'function TMenuActionLink.IsAutoCheckLinked:Boolean;'");
MakeCode(0x443CF4);
MakeFunction(0x443CF4, 0x443D1A);
MakeUnkn(0x443D1C, 1);
MakeNameEx(0x443D1C, "TMenuActionLink.IsCaptionLinked", 0x20);
MakeComm(0x443D1C, "'function TMenuActionLink.IsCaptionLinked:Boolean;'");
MakeCode(0x443D1C);
MakeCode(0x443D4A);
MakeCode(0x443D4E);
MakeFunction(0x443D1C, 0x443D52);
MakeUnkn(0x443D54, 1);
MakeNameEx(0x443D54, "TMenuActionLink.IsCheckedLinked", 0x20);
MakeComm(0x443D54, "'function TMenuActionLink.IsCheckedLinked:Boolean;'");
MakeCode(0x443D54);
MakeCode(0x443D7C);
MakeCode(0x443D80);
MakeFunction(0x443D54, 0x443D84);
MakeUnkn(0x443D84, 1);
MakeNameEx(0x443D84, "TMenuActionLink.IsEnabledLinked", 0x20);
MakeComm(0x443D84, "'function TMenuActionLink.IsEnabledLinked:Boolean;'");
MakeCode(0x443D84);
MakeCode(0x443DAC);
MakeCode(0x443DB0);
MakeFunction(0x443D84, 0x443DB4);
MakeUnkn(0x443DB4, 1);
MakeNameEx(0x443DB4, "TMenuActionLink.IsHelpContextLinked", 0x20);
MakeComm(0x443DB4, "'function TMenuActionLink.IsHelpContextLinked:Boolean;'");
MakeCode(0x443DB4);
MakeCode(0x443DDB);
MakeCode(0x443DDF);
MakeFunction(0x443DB4, 0x443DE3);
MakeUnkn(0x443DE4, 1);
MakeNameEx(0x443DE4, "TMenuActionLink.IsHintLinked", 0x20);
MakeComm(0x443DE4, "'function TMenuActionLink.IsHintLinked:Boolean;'");
MakeCode(0x443DE4);
MakeCode(0x443E10);
MakeCode(0x443E14);
MakeFunction(0x443DE4, 0x443E18);
MakeUnkn(0x443E18, 1);
MakeNameEx(0x443E18, "TMenuActionLink.IsGroupIndexLinked", 0x20);
MakeComm(0x443E18, "'function TMenuActionLink.IsGroupIndexLinked:Boolean;'");
MakeCode(0x443E18);
MakeCode(0x443E4B);
MakeCode(0x443E4F);
MakeFunction(0x443E18, 0x443E53);
MakeUnkn(0x443E54, 1);
MakeNameEx(0x443E54, "TMenuActionLink.IsImageIndexLinked", 0x20);
MakeComm(0x443E54, "'function TMenuActionLink.IsImageIndexLinked:Boolean;'");
MakeCode(0x443E54);
MakeCode(0x443E7E);
MakeCode(0x443E82);
MakeFunction(0x443E54, 0x443E86);
MakeUnkn(0x443E88, 1);
MakeNameEx(0x443E88, "TMenuActionLink.IsShortCutLinked", 0x20);
MakeComm(0x443E88, "'function TMenuActionLink.IsShortCutLinked:Boolean;'");
MakeCode(0x443E88);
MakeCode(0x443EB4);
MakeCode(0x443EB8);
MakeFunction(0x443E88, 0x443EBC);
MakeUnkn(0x443EBC, 1);
MakeNameEx(0x443EBC, "TMenuActionLink.IsVisibleLinked", 0x20);
MakeComm(0x443EBC, "'function TMenuActionLink.IsVisibleLinked:Boolean;'");
MakeCode(0x443EBC);
MakeCode(0x443EE7);
MakeCode(0x443EEB);
MakeFunction(0x443EBC, 0x443EEF);
MakeUnkn(0x443EF0, 1);
MakeNameEx(0x443EF0, "TMenuActionLink.IsOnExecuteLinked", 0x20);
MakeComm(0x443EF0, "'function TMenuActionLink.IsOnExecuteLinked:Boolean;'");
MakeCode(0x443EF0);
MakeCode(0x443F0F);
MakeCode(0x443F13);
MakeFunction(0x443EF0, 0x443F17);
MakeUnkn(0x443F18, 1);
MakeNameEx(0x443F18, "TMenuActionLink.SetAutoCheck", 0x20);
MakeComm(0x443F18, "'procedure TMenuActionLink.SetAutoCheck(Value:Boolean);'");
MakeCode(0x443F18);
MakeCode(0x443F32);
MakeFunction(0x443F18, 0x443F35);
MakeUnkn(0x443F38, 1);
MakeNameEx(0x443F38, "TMenuActionLink.SetCaption", 0x20);
MakeComm(0x443F38, "'procedure TMenuActionLink.SetCaption(const Value:AnsiString);'");
MakeCode(0x443F38);
MakeCode(0x443F53);
MakeFunction(0x443F38, 0x443F56);
MakeUnkn(0x443F58, 1);
MakeNameEx(0x443F58, "TMenuActionLink.SetChecked", 0x20);
MakeComm(0x443F58, "'procedure TMenuActionLink.SetChecked(Value:Boolean);'");
MakeCode(0x443F58);
MakeCode(0x443F73);
MakeFunction(0x443F58, 0x443F76);
MakeUnkn(0x443F78, 1);
MakeNameEx(0x443F78, "TMenuActionLink.SetEnabled", 0x20);
MakeComm(0x443F78, "'procedure TMenuActionLink.SetEnabled(Value:Boolean);'");
MakeCode(0x443F78);
MakeCode(0x443F93);
MakeFunction(0x443F78, 0x443F96);
MakeUnkn(0x443F98, 1);
MakeNameEx(0x443F98, "TMenuActionLink.SetHelpContext", 0x20);
MakeComm(0x443F98, "'procedure TMenuActionLink.SetHelpContext(Value:THelpContext);'");
MakeCode(0x443F98);
MakeCode(0x443FAF);
MakeFunction(0x443F98, 0x443FB2);
MakeUnkn(0x443FB4, 1);
MakeNameEx(0x443FB4, "TMenuActionLink.SetHint", 0x20);
MakeComm(0x443FB4, "'procedure TMenuActionLink.SetHint(const Value:AnsiString);'");
MakeCode(0x443FB4);
MakeCode(0x443FD2);
MakeFunction(0x443FB4, 0x443FD5);
MakeUnkn(0x443FD8, 1);
MakeNameEx(0x443FD8, "TMenuActionLink.SetImageIndex", 0x20);
MakeComm(0x443FD8, "'procedure TMenuActionLink.SetImageIndex(Value:Integer);'");
MakeCode(0x443FD8);
MakeCode(0x443FF3);
MakeFunction(0x443FD8, 0x443FF6);
MakeUnkn(0x443FF8, 1);
MakeNameEx(0x443FF8, "TMenuActionLink.SetShortCut", 0x20);
MakeComm(0x443FF8, "'procedure TMenuActionLink.SetShortCut(Value:TShortCut);'");
MakeCode(0x443FF8);
MakeCode(0x444013);
MakeFunction(0x443FF8, 0x444016);
MakeUnkn(0x444018, 1);
MakeNameEx(0x444018, "TMenuActionLink.SetVisible", 0x20);
MakeComm(0x444018, "'procedure TMenuActionLink.SetVisible(Value:Boolean);'");
MakeCode(0x444018);
MakeCode(0x444033);
MakeFunction(0x444018, 0x444036);
MakeUnkn(0x444038, 1);
MakeNameEx(0x444038, "TMenuActionLink.SetOnExecute", 0x20);
MakeComm(0x444038, "'procedure TMenuActionLink.SetOnExecute(Value:TNotifyEvent);'");
MakeCode(0x444038);
MakeCode(0x44405E);
MakeFunction(0x444038, 0x444063);
MakeUnkn(0x444064, 1);
MakeNameEx(0x444064, "TMenuItem.Create", 0x20);
MakeComm(0x444064, "'constructor TMenuItem.Create(AOwner:TComponent);'");
MakeCode(0x444064);
MakeCode(0x444076);
MakeCode(0x4440D6);
MakeFunction(0x444064, 0x4440DD);
MakeUnkn(0x4440E0, 1);
MakeNameEx(0x4440E0, "TMenuItem.Destroy", 0x20);
MakeComm(0x4440E0, "'destructor TMenuItem.Destroy;'");
MakeCode(0x4440E0);
MakeCode(0x44410C);
MakeCode(0x44411A);
MakeCode(0x44413D);
MakeCode(0x44416D);
MakeCode(0x444179);
MakeCode(0x444190);
MakeFunction(0x4440E0, 0x444193);
MakeUnkn(0x444194, 1);
MakeNameEx(0x444194, "TMenuItem.AppendTo", 0x20);
MakeComm(0x444194, "'procedure TMenuItem.AppendTo(Menu:HMENU; ARightToLeft:Boolean);'");
MakeCode(0x444194);
MakeCode(0x4441E6);
MakeCode(0x44420C);
MakeCode(0x444230);
MakeCode(0x444270);
MakeCode(0x444282);
MakeCode(0x444286);
MakeCode(0x444288);
MakeCode(0x444330);
MakeCode(0x444343);
MakeCode(0x4443B0);
MakeCode(0x4443C7);
MakeCode(0x4443D4);
MakeCode(0x4443E5);
MakeCode(0x4443EA);
MakeFunction(0x444194, 0x4443F3);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4443FC, -1);
MakeDword(0x4443F8);
MakeDword(0x4443F4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x444408, -1);
MakeDword(0x444404);
MakeDword(0x444400);
MakeUnkn(0x44440C, 1);
MakeNameEx(0x44440C, "AddIn", 0x20);
MakeComm(0x44440C, "'function AddIn(MenuItem:TMenuItem):Boolean;'");
MakeCode(0x44440C);
MakeFunction(0x44440C, 0x444428);
MakeUnkn(0x444428, 1);
MakeNameEx(0x444428, "TMenuItem.PopulateMenu", 0x20);
MakeComm(0x444428, "'procedure TMenuItem.PopulateMenu;'");
MakeCode(0x444428);
MakeCode(0x444461);
MakeCode(0x444476);
MakeCode(0x44447A);
MakeCode(0x44447C);
MakeFunction(0x444428, 0x444497);
MakeUnkn(0x444498, 1);
MakeNameEx(0x444498, "TMenuItem.ReadShortCutText", 0x20);
MakeComm(0x444498, "'procedure TMenuItem.ReadShortCutText(Reader:TReader);'");
MakeCode(0x444498);
MakeCode(0x4444CC);
MakeCode(0x4444D9);
MakeCode(0x4444E2);
MakeCode(0x4444E7);
MakeFunction(0x444498, 0x4444EE);
MakeUnkn(0x4444F0, 1);
MakeNameEx(0x4444F0, "TMenuItem.MergeWith", 0x20);
MakeComm(0x4444F0, "'procedure TMenuItem.MergeWith(Menu:TMenuItem);'");
MakeCode(0x4444F0);
MakeCode(0x4444FD);
MakeCode(0x44450D);
MakeCode(0x444520);
MakeCode(0x444527);
MakeFunction(0x4444F0, 0x444529);
MakeUnkn(0x44452C, 1);
MakeNameEx(0x44452C, "TMenuItem.Loaded", 0x20);
MakeComm(0x44452C, "'procedure TMenuItem.Loaded;'");
MakeCode(0x44452C);
MakeCode(0x444558);
MakeCode(0x444565);
MakeFunction(0x44452C, 0x444568);
MakeUnkn(0x444568, 1);
MakeNameEx(0x444568, "TMenuItem.RebuildHandle", 0x20);
MakeComm(0x444568, "'procedure TMenuItem.RebuildHandle;'");
MakeCode(0x444568);
MakeCode(0x444587);
MakeCode(0x444598);
MakeCode(0x4445B0);
MakeCode(0x4445DF);
MakeCode(0x4445E4);
MakeCode(0x444621);
MakeCode(0x444628);
MakeCode(0x444631);
MakeFunction(0x444568, 0x444636);
MakeUnkn(0x444638, 1);
MakeNameEx(0x444638, "TMenuItem.VerifyGroupIndex", 0x20);
MakeComm(0x444638, "'procedure TMenuItem.VerifyGroupIndex(Position:Integer; Value:Byte);'");
MakeCode(0x444638);
MakeCode(0x444655);
MakeCode(0x444674);
MakeCode(0x44468E);
MakeCode(0x444692);
MakeFunction(0x444638, 0x444698);
MakeUnkn(0x444698, 1);
MakeNameEx(0x444698, "TMenuItem.GetHandle", 0x20);
MakeComm(0x444698, "'function TMenuItem.GetHandle:HMENU;'");
MakeCode(0x444698);
MakeCode(0x4446BD);
MakeCode(0x4446C5);
MakeCode(0x4446D5);
MakeCode(0x4446DC);
MakeFunction(0x444698, 0x4446E1);
MakeUnkn(0x4446E4, 1);
MakeNameEx(0x4446E4, "TMenuItem.DefineProperties", 0x20);
MakeComm(0x4446E4, "'procedure TMenuItem.DefineProperties(Filer:TFiler);'");
MakeCode(0x4446E4);
MakeFunction(0x4446E4, 0x44470E);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x444718, -1);
MakeDword(0x444714);
MakeDword(0x444710);
MakeUnkn(0x444728, 1);
MakeNameEx(0x444728, "TMenuItem.DoDrawText", 0x20);
MakeComm(0x444728, "'procedure TMenuItem.DoDrawText(ACanvas:TCanvas; const ACaption:AnsiString; var Rect:TRect; Selected:Boolean; Flags:Longint);'");
MakeCode(0x444728);
MakeCode(0x444774);
MakeCode(0x444784);
MakeCode(0x44478A);
MakeCode(0x4447B1);
MakeCode(0x4447BE);
MakeCode(0x444801);
MakeCode(0x444830);
MakeCode(0x444869);
MakeCode(0x444893);
MakeCode(0x4448C5);
MakeCode(0x4448D5);
MakeCode(0x4448E1);
MakeCode(0x4448FE);
MakeCode(0x44490B);
MakeCode(0x444914);
MakeCode(0x444919);
MakeFunction(0x444728, 0x444924);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x44492C, -1);
MakeDword(0x444928);
MakeDword(0x444924);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x444938, -1);
MakeDword(0x444934);
MakeDword(0x444930);
MakeUnkn(0x444940, 1);
MakeNameEx(0x444940, "TMenuItem.DrawItem", 0x20);
MakeComm(0x444940, "'procedure TMenuItem.DrawItem(ACanvas:TCanvas; ARect:TRect; Selected:Boolean);'");
MakeCode(0x444940);
MakeCode(0x444977);
MakeFunction(0x444940, 0x444980);
MakeUnkn(0x444980, 1);
MakeNameEx(0x444980, "NormalDraw", 0x20);
MakeComm(0x444980, "'procedure NormalDraw;'");
MakeCode(0x444980);
MakeCode(0x4449A8);
MakeCode(0x4449C3);
MakeCode(0x4449D5);
MakeCode(0x4449F8);
MakeCode(0x444A0B);
MakeCode(0x444A20);
MakeCode(0x444A3C);
MakeCode(0x444A4E);
MakeCode(0x444A5F);
MakeCode(0x444A71);
MakeCode(0x444A98);
MakeCode(0x444A9F);
MakeCode(0x444AFD);
MakeCode(0x444B26);
MakeCode(0x444B4D);
MakeCode(0x444B51);
MakeCode(0x444B53);
MakeCode(0x444B85);
MakeCode(0x444BC1);
MakeCode(0x444BDF);
MakeCode(0x444C6B);
MakeCode(0x444C8F);
MakeCode(0x444CAF);
MakeCode(0x444D14);
MakeCode(0x444DA8);
MakeCode(0x444DD1);
MakeCode(0x444DF7);
MakeCode(0x444E04);
MakeCode(0x444E10);
MakeCode(0x444E15);
MakeCode(0x444E17);
MakeCode(0x444E68);
MakeCode(0x444E8F);
MakeCode(0x444ED0);
MakeCode(0x444EF7);
MakeCode(0x444F21);
MakeCode(0x444F3B);
MakeCode(0x444F79);
MakeCode(0x444F91);
MakeCode(0x444F98);
MakeCode(0x444FD0);
MakeCode(0x445005);
MakeCode(0x445024);
MakeCode(0x445036);
MakeCode(0x445049);
MakeCode(0x44505A);
MakeCode(0x445082);
MakeCode(0x4450A9);
MakeCode(0x4450CE);
MakeCode(0x4450E7);
MakeCode(0x4450F9);
MakeCode(0x445106);
MakeCode(0x44514B);
MakeCode(0x445179);
MakeCode(0x4451D4);
MakeCode(0x445217);
MakeCode(0x4452AC);
MakeCode(0x4452B9);
MakeCode(0x4452C2);
MakeCode(0x4452C7);
MakeFunction(0x444980, 0x4452CF);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4452D8, -1);
MakeDword(0x4452D4);
MakeDword(0x4452D0);
MakeUnkn(0x4452E0, 1);
MakeNameEx(0x4452E0, "BiDiDraw", 0x20);
MakeComm(0x4452E0, "'procedure BiDiDraw;'");
MakeCode(0x4452E0);
MakeCode(0x445308);
MakeCode(0x445323);
MakeCode(0x445335);
MakeCode(0x445358);
MakeCode(0x44536B);
MakeCode(0x445380);
MakeCode(0x44539C);
MakeCode(0x4453BA);
MakeCode(0x4453CB);
MakeCode(0x4453DD);
MakeCode(0x445404);
MakeCode(0x44540B);
MakeCode(0x44546E);
MakeCode(0x445497);
MakeCode(0x4454BE);
MakeCode(0x4454C2);
MakeCode(0x4454C4);
MakeCode(0x4454F6);
MakeCode(0x445532);
MakeCode(0x445550);
MakeCode(0x4455CF);
MakeCode(0x4455F3);
MakeCode(0x445613);
MakeCode(0x445678);
MakeCode(0x44570C);
MakeCode(0x445735);
MakeCode(0x44575B);
MakeCode(0x445768);
MakeCode(0x445774);
MakeCode(0x445779);
MakeCode(0x44577B);
MakeCode(0x4457CC);
MakeCode(0x4457F7);
MakeCode(0x445838);
MakeCode(0x44585F);
MakeCode(0x445889);
MakeCode(0x4458A3);
MakeCode(0x4458E1);
MakeCode(0x4458F9);
MakeCode(0x445900);
MakeCode(0x445941);
MakeCode(0x44596D);
MakeCode(0x44598C);
MakeCode(0x44599E);
MakeCode(0x4459B1);
MakeCode(0x4459C2);
MakeCode(0x4459EA);
MakeCode(0x445A11);
MakeCode(0x445A36);
MakeCode(0x445A4F);
MakeCode(0x445A61);
MakeCode(0x445A6E);
MakeCode(0x445AB3);
MakeCode(0x445AE1);
MakeCode(0x445B54);
MakeCode(0x445B8E);
MakeCode(0x445C2C);
MakeCode(0x445C39);
MakeCode(0x445C42);
MakeCode(0x445C47);
MakeFunction(0x4452E0, 0x445C4F);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x445C58, -1);
MakeDword(0x445C54);
MakeDword(0x445C50);
MakeUnkn(0x445C60, 1);
MakeNameEx(0x445C60, "TMenuItem.AdvancedDrawItem", 0x20);
MakeComm(0x445C60, "'procedure TMenuItem.AdvancedDrawItem(ACanvas:TCanvas; ARect:TRect; State:TOwnerDrawState; TopLevel:Boolean);'");
MakeCode(0x445C60);
MakeCode(0x445CB6);
MakeCode(0x445CBA);
MakeCode(0x445CBC);
MakeCode(0x445CD3);
MakeCode(0x445CD7);
MakeCode(0x445CD9);
MakeCode(0x445D1A);
MakeCode(0x445D1E);
MakeCode(0x445D33);
MakeCode(0x445D4D);
MakeCode(0x445D8D);
MakeCode(0x445DA8);
MakeCode(0x445DAF);
MakeFunction(0x445C60, 0x445DB8);
MakeUnkn(0x445DB8, 1);
MakeNameEx(0x445DB8, "TMenuItem.GetImageList", 0x20);
MakeComm(0x445DB8, "'function TMenuItem.GetImageList:TCustomImageList;'");
MakeCode(0x445DB8);
MakeCode(0x445DC0);
MakeCode(0x445DC3);
MakeCode(0x445DCD);
MakeCode(0x445DD6);
MakeCode(0x445DE2);
MakeFunction(0x445DB8, 0x445DE6);
MakeUnkn(0x445DE8, 1);
MakeNameEx(0x445DE8, "GetMenuSize", 0x20);
MakeComm(0x445DE8, "'procedure GetMenuSize;'");
MakeCode(0x445DE8);
MakeCode(0x445E2D);
MakeFunction(0x445DE8, 0x445E31);
MakeUnkn(0x445E34, 1);
MakeNameEx(0x445E34, "TMenuItem.MeasureItem", 0x20);
MakeComm(0x445E34, "'procedure TMenuItem.MeasureItem(ACanvas:TCanvas; var Width:Integer; var Height:Integer);'");
MakeCode(0x445E34);
MakeCode(0x445E80);
MakeCode(0x445E82);
MakeCode(0x445EBA);
MakeCode(0x445ECA);
MakeCode(0x445EE4);
MakeCode(0x445EE8);
MakeCode(0x445F10);
MakeCode(0x445F14);
MakeCode(0x445F1F);
MakeCode(0x445F2D);
MakeCode(0x445F37);
MakeCode(0x445F4E);
MakeCode(0x445F65);
MakeCode(0x445F67);
MakeCode(0x445F8A);
MakeCode(0x445F95);
MakeCode(0x445FF8);
MakeCode(0x446005);
MakeCode(0x446016);
MakeCode(0x44601B);
MakeFunction(0x445E34, 0x446026);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x446030, -1);
MakeDword(0x44602C);
MakeDword(0x446028);
MakeUnkn(0x446034, 1);
MakeNameEx(0x446034, "TMenuItem.HasParent", 0x20);
MakeComm(0x446034, "'procedure TMenuItem.HasParent;'");
MakeCode(0x446034);
MakeFunction(0x446034, 0x446037);
MakeUnkn(0x446038, 1);
MakeNameEx(0x446038, "TMenuItem.SetBreak", 0x20);
MakeComm(0x446038, "'procedure TMenuItem.SetBreak(Value:TMenuBreak);'");
MakeCode(0x446038);
MakeFunction(0x446038, 0x446048);
MakeUnkn(0x446048, 1);
MakeNameEx(0x446048, "TMenuItem.SetCaption", 0x20);
MakeComm(0x446048, "'procedure TMenuItem.SetCaption(const Value:AnsiString);'");
MakeCode(0x446048);
MakeCode(0x44606D);
MakeFunction(0x446048, 0x446070);
MakeUnkn(0x446070, 1);
MakeNameEx(0x446070, "TMenuItem.TurnSiblingsOff", 0x20);
MakeComm(0x446070, "'procedure TMenuItem.TurnSiblingsOff;'");
MakeCode(0x446070);
MakeCode(0x44608D);
MakeCode(0x4460B1);
MakeCode(0x4460B5);
MakeFunction(0x446070, 0x4460B9);
MakeUnkn(0x4460BC, 1);
MakeNameEx(0x4460BC, "TMenuItem.SetChecked", 0x20);
MakeComm(0x4460BC, "'procedure TMenuItem.SetChecked(Value:Boolean);'");
MakeCode(0x4460BC);
MakeCode(0x4460F8);
MakeCode(0x446109);
MakeFunction(0x4460BC, 0x44610D);
MakeUnkn(0x446110, 1);
MakeNameEx(0x446110, "TMenuItem.SetEnabled", 0x20);
MakeComm(0x446110, "'procedure TMenuItem.SetEnabled(Value:Boolean);'");
MakeCode(0x446110);
MakeCode(0x446134);
MakeCode(0x446141);
MakeCode(0x44614C);
MakeCode(0x446179);
MakeCode(0x446182);
MakeFunction(0x446110, 0x446186);
MakeUnkn(0x446188, 1);
MakeNameEx(0x446188, "TMenuItem.SetGroupIndex", 0x20);
MakeComm(0x446188, "'procedure TMenuItem.SetGroupIndex(Value:Byte);'");
MakeCode(0x446188);
MakeCode(0x4461AF);
MakeCode(0x4461C5);
MakeFunction(0x446188, 0x4461C9);
MakeUnkn(0x4461CC, 1);
MakeNameEx(0x4461CC, "TMenuItem.GetAction", 0x20);
MakeComm(0x4461CC, "'function TMenuItem.GetAction:TBasicAction;'");
MakeCode(0x4461CC);
MakeCode(0x4461D7);
MakeFunction(0x4461CC, 0x4461DA);
MakeUnkn(0x4461DC, 1);
MakeNameEx(0x4461DC, "TMenuItem.sub_004461DC", 0x20);
MakeComm(0x4461DC, "'procedure TMenuItem.sub_004461DC;'");
MakeCode(0x4461DC);
MakeFunction(0x4461DC, 0x4461E2);
MakeUnkn(0x4461E4, 1);
MakeNameEx(0x4461E4, "TMenuItem.GetCount", 0x20);
MakeComm(0x4461E4, "'function TMenuItem.GetCount:Integer;'");
MakeCode(0x4461E4);
MakeCode(0x4461EE);
MakeFunction(0x4461E4, 0x4461F2);
MakeUnkn(0x4461F4, 1);
MakeNameEx(0x4461F4, "TMenuItem.GetItem", 0x20);
MakeComm(0x4461F4, "'function TMenuItem.GetItem(Index:Integer):TMenuItem;'");
MakeCode(0x4461F4);
MakeCode(0x44620A);
MakeFunction(0x4461F4, 0x446217);
MakeUnkn(0x446218, 1);
MakeNameEx(0x446218, "TMenuItem.SetShortCut", 0x20);
MakeComm(0x446218, "'procedure TMenuItem.SetShortCut(Value:TShortCut);'");
MakeCode(0x446218);
MakeFunction(0x446218, 0x44622A);
MakeUnkn(0x44622C, 1);
MakeNameEx(0x44622C, "TMenuItem.SetVisible", 0x20);
MakeComm(0x44622C, "'procedure TMenuItem.SetVisible(Value:Boolean);'");
MakeCode(0x44622C);
MakeFunction(0x44622C, 0x44623C);
MakeUnkn(0x44623C, 1);
MakeNameEx(0x44623C, "TMenuItem.SetImageIndex", 0x20);
MakeComm(0x44623C, "'procedure TMenuItem.SetImageIndex(Value:TImageIndex);'");
MakeCode(0x44623C);
MakeFunction(0x44623C, 0x44624C);
MakeUnkn(0x44624C, 1);
MakeNameEx(0x44624C, "TMenuItem.GetMenuIndex", 0x20);
MakeComm(0x44624C, "'function TMenuItem.GetMenuIndex:Integer;'");
MakeCode(0x44624C);
MakeCode(0x446261);
MakeFunction(0x44624C, 0x446264);
MakeUnkn(0x446264, 1);
MakeNameEx(0x446264, "TMenuItem.SetMenuIndex", 0x20);
MakeComm(0x446264, "'procedure TMenuItem.SetMenuIndex(Value:Integer);'");
MakeCode(0x446264);
MakeCode(0x44627D);
MakeCode(0x446284);
MakeCode(0x4462A6);
MakeFunction(0x446264, 0x4462AA);
MakeUnkn(0x4462AC, 1);
MakeNameEx(0x4462AC, "TMenuItem.GetChildren", 0x20);
MakeComm(0x4462AC, "'procedure TMenuItem.GetChildren(Proc:TGetChildProc; Root:TComponent);'");
MakeCode(0x4462AC);
MakeCode(0x4462C7);
MakeCode(0x4462DD);
MakeFunction(0x4462AC, 0x4462E4);
MakeUnkn(0x4462E4, 1);
MakeNameEx(0x4462E4, "TMenuItem.SetChildOrder", 0x20);
MakeComm(0x4462E4, "'procedure TMenuItem.SetChildOrder(Child:TComponent; Order:Integer);'");
MakeCode(0x4462E4);
MakeFunction(0x4462E4, 0x446301);
MakeUnkn(0x446304, 1);
MakeNameEx(0x446304, "TMenuItem.SetDefault", 0x20);
MakeComm(0x446304, "'procedure TMenuItem.SetDefault(Value:Boolean);'");
MakeCode(0x446304);
MakeCode(0x44632D);
MakeCode(0x44634B);
MakeCode(0x44634F);
MakeCode(0x44635B);
MakeFunction(0x446304, 0x446360);
MakeUnkn(0x446360, 1);
MakeNameEx(0x446360, "TMenuItem.InitiateAction", 0x20);
MakeComm(0x446360, "'procedure TMenuItem.InitiateAction;'");
MakeCode(0x446360);
MakeFunction(0x446360, 0x44636F);
MakeUnkn(0x446370, 1);
MakeNameEx(0x446370, "TMenuItem.Insert", 0x20);
MakeComm(0x446370, "'procedure TMenuItem.Insert(Index:Integer; Item:TMenuItem);'");
MakeCode(0x446370);
MakeCode(0x44638A);
MakeCode(0x44639F);
MakeCode(0x4463D6);
MakeCode(0x44640F);
MakeFunction(0x446370, 0x446426);
MakeUnkn(0x446428, 1);
MakeNameEx(0x446428, "TMenuItem.Delete", 0x20);
MakeComm(0x446428, "'procedure TMenuItem.Delete(Index:Integer);'");
MakeCode(0x446428);
MakeCode(0x446444);
MakeCode(0x44644E);
MakeCode(0x446484);
MakeFunction(0x446428, 0x44649B);
MakeUnkn(0x44649C, 1);
MakeNameEx(0x44649C, "TMenuItem.Click", 0x20);
MakeComm(0x44649C, "'procedure TMenuItem.Click;'");
MakeCode(0x44649C);
MakeCode(0x4464B9);
MakeCode(0x4464D4);
MakeCode(0x4464E2);
MakeCode(0x446519);
MakeCode(0x446531);
MakeCode(0x446549);
MakeFunction(0x44649C, 0x44654C);
MakeUnkn(0x44654C, 1);
MakeNameEx(0x44654C, "TMenuItem.IndexOf", 0x20);
MakeComm(0x44654C, "'function TMenuItem.IndexOf(Item:TMenuItem):Integer;'");
MakeCode(0x44654C);
MakeCode(0x446560);
MakeFunction(0x44654C, 0x446564);
MakeUnkn(0x446564, 1);
MakeNameEx(0x446564, "TMenuItem.Add", 0x20);
MakeComm(0x446564, "'procedure TMenuItem.Add(Item:TMenuItem);'");
MakeCode(0x446564);
MakeFunction(0x446564, 0x44657F);
MakeUnkn(0x446580, 1);
MakeNameEx(0x446580, "TMenuItem.Remove", 0x20);
MakeComm(0x446580, "'procedure TMenuItem.Remove(Item:TMenuItem);'");
MakeCode(0x446580);
MakeCode(0x44659C);
MakeFunction(0x446580, 0x4465A8);
MakeUnkn(0x4465A8, 1);
MakeNameEx(0x4465A8, "TMenuItem.MenuChanged", 0x20);
MakeComm(0x4465A8, "'procedure TMenuItem.MenuChanged(Rebuild:Boolean);'");
MakeCode(0x4465A8);
MakeCode(0x4465CA);
MakeCode(0x4465CC);
MakeCode(0x4465E7);
MakeFunction(0x4465A8, 0x4465EA);
MakeUnkn(0x4465EC, 1);
MakeNameEx(0x4465EC, "TMenuItem.SubItemChanged", 0x20);
MakeComm(0x4465EC, "'procedure TMenuItem.SubItemChanged(Sender:TObject; Source:TMenuItem; Rebuild:Boolean);'");
MakeCode(0x4465EC);
MakeFunction(0x4465EC, 0x446643);
MakeUnkn(0x446644, 1);
MakeNameEx(0x446644, "TMenuItem.GetBitmap", 0x20);
MakeComm(0x446644, "'function TMenuItem.GetBitmap:TBitmap;'");
MakeCode(0x446644);
MakeCode(0x44665C);
MakeFunction(0x446644, 0x44666B);
MakeUnkn(0x44666C, 1);
MakeNameEx(0x44666C, "TMenuItem.SetAction", 0x20);
MakeComm(0x44666C, "'procedure TMenuItem.SetAction(Value:TBasicAction);'");
MakeCode(0x44666C);
MakeCode(0x446686);
MakeCode(0x4466A1);
MakeCode(0x4466D5);
MakeFunction(0x44666C, 0x4466D9);
MakeUnkn(0x4466DC, 1);
MakeNameEx(0x4466DC, "TMenuItem.SetBitmap", 0x20);
MakeComm(0x4466DC, "'procedure TMenuItem.SetBitmap(Value:TBitmap);'");
MakeCode(0x4466DC);
MakeCode(0x4466F7);
MakeFunction(0x4466DC, 0x44670D);
MakeUnkn(0x446710, 1);
MakeNameEx(0x446710, "TMenuItem.InitiateActions", 0x20);
MakeComm(0x446710, "'procedure TMenuItem.InitiateActions;'");
MakeCode(0x446710);
MakeCode(0x446726);
MakeCode(0x446738);
MakeFunction(0x446710, 0x44673C);
MakeUnkn(0x44673C, 1);
MakeNameEx(0x44673C, "TMenuItem.GetParentComponent", 0x20);
MakeComm(0x44673C, "'procedure TMenuItem.GetParentComponent;'");
MakeCode(0x44673C);
MakeCode(0x44674D);
MakeFunction(0x44673C, 0x446750);
MakeUnkn(0x446750, 1);
MakeNameEx(0x446750, "TMenuItem.SetParentComponent", 0x20);
MakeComm(0x446750, "'procedure TMenuItem.SetParentComponent(Value:TComponent);'");
MakeCode(0x446750);
MakeCode(0x446764);
MakeCode(0x446785);
MakeCode(0x44679F);
MakeFunction(0x446750, 0x4467A2);
MakeUnkn(0x4467A4, 1);
MakeNameEx(0x4467A4, "TMenuItem.GetParentMenu", 0x20);
MakeComm(0x4467A4, "'function TMenuItem.GetParentMenu:TMenu;'");
MakeCode(0x4467A4);
MakeFunction(0x4467A4, 0x4467B3);
MakeUnkn(0x4467B4, 1);
MakeNameEx(0x4467B4, "TMenuItem.SetRadioItem", 0x20);
MakeComm(0x4467B4, "'procedure TMenuItem.SetRadioItem(Value:Boolean);'");
MakeCode(0x4467B4);
MakeCode(0x4467D2);
MakeCode(0x4467DB);
MakeFunction(0x4467B4, 0x4467DD);
MakeUnkn(0x4467E0, 1);
MakeNameEx(0x4467E0, "TMenuItem.ActionChange", 0x20);
MakeComm(0x4467E0, "'procedure TMenuItem.ActionChange(Sender:TObject; CheckDefaults:Boolean);'");
MakeCode(0x4467E0);
MakeCode(0x44680B);
MakeCode(0x446818);
MakeCode(0x446822);
MakeCode(0x44682C);
MakeCode(0x446836);
MakeCode(0x446841);
MakeCode(0x44684B);
MakeCode(0x446856);
MakeCode(0x446860);
MakeCode(0x446866);
MakeCode(0x446870);
MakeCode(0x44687B);
MakeCode(0x44688B);
MakeCode(0x446896);
MakeCode(0x4468A0);
MakeCode(0x4468AD);
MakeCode(0x4468B8);
MakeCode(0x4468C6);
MakeCode(0x4468D0);
MakeCode(0x4468DE);
MakeCode(0x4468EC);
MakeCode(0x4468FE);
MakeFunction(0x4467E0, 0x446902);
MakeUnkn(0x446904, 1);
MakeNameEx(0x446904, "TMenuItem.DoActionChange", 0x20);
MakeComm(0x446904, "'procedure TMenuItem.DoActionChange(Sender:TObject);'");
MakeCode(0x446904);
MakeCode(0x446924);
MakeFunction(0x446904, 0x446927);
MakeUnkn(0x446928, 1);
MakeNameEx(0x446928, "TMenuItem.IsCaptionStored", 0x20);
MakeComm(0x446928, "'function TMenuItem.IsCaptionStored(Value:string):Boolean;'");
MakeCode(0x446928);
MakeCode(0x446943);
MakeFunction(0x446928, 0x446948);
MakeUnkn(0x446948, 1);
MakeNameEx(0x446948, "TMenuItem.IsCheckedStored", 0x20);
MakeComm(0x446948, "'function TMenuItem.IsCheckedStored(Value:Boolean):Boolean;'");
MakeCode(0x446948);
MakeCode(0x446963);
MakeFunction(0x446948, 0x446968);
MakeUnkn(0x446968, 1);
MakeNameEx(0x446968, "TMenuItem.IsEnabledStored", 0x20);
MakeComm(0x446968, "'function TMenuItem.IsEnabledStored(Value:Boolean):Boolean;'");
MakeCode(0x446968);
MakeCode(0x446983);
MakeFunction(0x446968, 0x446988);
MakeUnkn(0x446988, 1);
MakeNameEx(0x446988, "TMenuItem.IsHintStored", 0x20);
MakeComm(0x446988, "'function TMenuItem.IsHintStored(Value:string):Boolean;'");
MakeCode(0x446988);
MakeCode(0x4469A3);
MakeFunction(0x446988, 0x4469A8);
MakeUnkn(0x4469A8, 1);
MakeNameEx(0x4469A8, "TMenuItem.IsHelpContextStored", 0x20);
MakeComm(0x4469A8, "'function TMenuItem.IsHelpContextStored(Value:THelpContext):Boolean;'");
MakeCode(0x4469A8);
MakeCode(0x4469C3);
MakeFunction(0x4469A8, 0x4469C8);
MakeUnkn(0x4469C8, 1);
MakeNameEx(0x4469C8, "TMenuItem.IsImageIndexStored", 0x20);
MakeComm(0x4469C8, "'function TMenuItem.IsImageIndexStored(Value:TImageIndex):Boolean;'");
MakeCode(0x4469C8);
MakeCode(0x4469E3);
MakeFunction(0x4469C8, 0x4469E8);
MakeUnkn(0x4469E8, 1);
MakeNameEx(0x4469E8, "TMenuItem.IsShortCutStored", 0x20);
MakeComm(0x4469E8, "'function TMenuItem.IsShortCutStored(Value:TShortCut):Boolean;'");
MakeCode(0x4469E8);
MakeCode(0x446A03);
MakeFunction(0x4469E8, 0x446A08);
MakeUnkn(0x446A08, 1);
MakeNameEx(0x446A08, "TMenuItem.IsVisibleStored", 0x20);
MakeComm(0x446A08, "'function TMenuItem.IsVisibleStored(Value:Boolean):Boolean;'");
MakeCode(0x446A08);
MakeCode(0x446A23);
MakeFunction(0x446A08, 0x446A28);
MakeUnkn(0x446A28, 1);
MakeNameEx(0x446A28, "TMenuItem.IsOnClickStored", 0x20);
MakeComm(0x446A28, "'function TMenuItem.IsOnClickStored(Value:TNotifyEvent):Boolean;'");
MakeCode(0x446A28);
MakeCode(0x446A43);
MakeFunction(0x446A28, 0x446A48);
MakeUnkn(0x446A48, 1);
MakeNameEx(0x446A48, "TMenuItem.AssignTo", 0x20);
MakeComm(0x446A48, "'procedure TMenuItem.AssignTo(Dest:TPersistent);'");
MakeCode(0x446A48);
MakeCode(0x446AB5);
MakeCode(0x446ABE);
MakeFunction(0x446A48, 0x446AC2);
MakeUnkn(0x446AC4, 1);
MakeNameEx(0x446AC4, "TMenuItem.Notification", 0x20);
MakeComm(0x446AC4, "'procedure TMenuItem.Notification(AComponent:TComponent; Operation:TOperation);'");
MakeCode(0x446AC4);
MakeCode(0x446AF3);
MakeCode(0x446B03);
MakeCode(0x446B11);
MakeFunction(0x446AC4, 0x446B15);
MakeUnkn(0x446B18, 1);
MakeNameEx(0x446B18, "TMenuItem.SetSubMenuImages", 0x20);
MakeComm(0x446B18, "'procedure TMenuItem.SetSubMenuImages(Value:TCustomImageList);'");
MakeCode(0x446B18);
MakeCode(0x446B2D);
MakeCode(0x446B48);
MakeFunction(0x446B18, 0x446B52);
MakeUnkn(0x446B54, 1);
MakeNameEx(0x446B54, "TMenuItem.ImageListChange", 0x20);
MakeComm(0x446B54, "'procedure TMenuItem.ImageListChange(Sender:TObject);'");
MakeCode(0x446B54);
MakeFunction(0x446B54, 0x446B5F);
MakeUnkn(0x446B60, 1);
MakeNameEx(0x446B60, "UpdateItem", 0x20);
MakeComm(0x446B60, "'function UpdateItem(MenuItem:TMenuItem):Boolean;'");
MakeCode(0x446B60);
MakeFunction(0x446B60, 0x446B87);
MakeUnkn(0x446B88, 1);
MakeNameEx(0x446B88, "TMenuItem.UpdateItems", 0x20);
MakeComm(0x446B88, "'procedure TMenuItem.UpdateItems;'");
MakeCode(0x446B88);
MakeFunction(0x446B88, 0x446B99);
MakeUnkn(0x446B9C, 1);
MakeNameEx(0x446B9C, "IfHotkeyAvailable", 0x20);
MakeComm(0x446B9C, "'function IfHotkeyAvailable(const AHotkey:AnsiString):Boolean;'");
MakeCode(0x446B9C);
MakeCode(0x446BC5);
MakeFunction(0x446B9C, 0x446BCA);
MakeUnkn(0x446BCC, 1);
MakeNameEx(0x446BCC, "CopyToBest", 0x20);
MakeComm(0x446BCC, "'procedure CopyToBest;'");
MakeCode(0x446BCC);
MakeCode(0x446C09);
MakeCode(0x446C37);
MakeFunction(0x446BCC, 0x446C4D);
MakeUnkn(0x446C50, 1);
MakeNameEx(0x446C50, "InsertHotkeyFarEastFormat", 0x20);
MakeComm(0x446C50, "'procedure InsertHotkeyFarEastFormat(var ACaption:AnsiString; const AHotKey:AnsiString; AColumn:Integer);'");
MakeCode(0x446C50);
MakeCode(0x446C8B);
MakeCode(0x446C94);
MakeCode(0x446CAF);
MakeCode(0x446CB3);
MakeCode(0x446CCE);
MakeCode(0x446D04);
MakeCode(0x446D41);
MakeCode(0x446D63);
MakeCode(0x446D78);
MakeCode(0x446D85);
MakeCode(0x446D93);
MakeCode(0x446D98);
MakeFunction(0x446C50, 0x446DA0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x446DA8, -1);
MakeDword(0x446DA4);
MakeDword(0x446DA0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x446DB4, -1);
MakeDword(0x446DB0);
MakeDword(0x446DAC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x446DC0, -1);
MakeDword(0x446DBC);
MakeDword(0x446DB8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x446DCC, -1);
MakeDword(0x446DC8);
MakeDword(0x446DC4);
MakeUnkn(0x446DD0, 1);
MakeNameEx(0x446DD0, "TMenuItem.InternalRethinkHotkeys", 0x20);
MakeComm(0x446DD0, "'function TMenuItem.InternalRethinkHotkeys(ForceRethink:Boolean):Boolean;'");
MakeCode(0x446DD0);
MakeCode(0x446DD8);
MakeCode(0x446E19);
MakeCode(0x446EA0);
MakeCode(0x446F29);
MakeCode(0x446F93);
MakeCode(0x446F9D);
MakeCode(0x446FBD);
MakeCode(0x446FEF);
MakeCode(0x447006);
MakeCode(0x44701F);
MakeCode(0x447065);
MakeCode(0x447074);
MakeCode(0x447097);
MakeCode(0x447098);
MakeCode(0x4470A8);
MakeCode(0x4470B2);
MakeCode(0x4470C6);
MakeCode(0x4470E4);
MakeCode(0x447113);
MakeCode(0x44711C);
MakeCode(0x447129);
MakeCode(0x44714E);
MakeCode(0x44719A);
MakeCode(0x4471C6);
MakeCode(0x4471D4);
MakeCode(0x4471F3);
MakeCode(0x447200);
MakeCode(0x447221);
MakeCode(0x447226);
MakeCode(0x447228);
MakeCode(0x447235);
MakeCode(0x447258);
MakeCode(0x44725D);
MakeFunction(0x446DD0, 0x44726A);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x447274, -1);
MakeDword(0x447270);
MakeDword(0x44726C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x447280, -1);
MakeDword(0x44727C);
MakeDword(0x447278);
MakeUnkn(0x447284, 1);
MakeNameEx(0x447284, "TMenuItem.SetAutoHotkeys", 0x20);
MakeComm(0x447284, "'procedure TMenuItem.SetAutoHotkeys(const Value:TMenuItemAutoFlag);'");
MakeCode(0x447284);
MakeFunction(0x447284, 0x447294);
MakeUnkn(0x447294, 1);
MakeNameEx(0x447294, "TMenuItem.IsLine", 0x20);
MakeComm(0x447294, "'function TMenuItem.IsLine:Boolean;'");
MakeCode(0x447294);
MakeFunction(0x447294, 0x4472A9);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4472B4, -1);
MakeDword(0x4472B0);
MakeDword(0x4472AC);
MakeUnkn(0x4472B8, 1);
MakeNameEx(0x4472B8, "TMenuItem.InternalRethinkLines", 0x20);
MakeComm(0x4472B8, "'function TMenuItem.InternalRethinkLines(ForceRethink:Boolean):Boolean;'");
MakeCode(0x4472B8);
MakeCode(0x4472E4);
MakeCode(0x4472FF);
MakeCode(0x447333);
MakeCode(0x447339);
MakeCode(0x44733D);
MakeCode(0x447350);
MakeCode(0x447374);
MakeCode(0x447381);
MakeCode(0x4473A2);
MakeCode(0x4473A8);
MakeCode(0x4473AC);
MakeCode(0x4473BF);
MakeCode(0x4473F1);
MakeCode(0x4473F5);
MakeFunction(0x4472B8, 0x447400);
MakeUnkn(0x447400, 1);
MakeNameEx(0x447400, "TMenuItem.SetAutoLineReduction", 0x20);
MakeComm(0x447400, "'procedure TMenuItem.SetAutoLineReduction(const Value:TMenuItemAutoFlag);'");
MakeCode(0x447400);
MakeFunction(0x447400, 0x447410);
MakeUnkn(0x447410, 1);
MakeNameEx(0x447410, "TMenuItem.GetAutoHotkeys", 0x20);
MakeComm(0x447410, "'function TMenuItem.GetAutoHotkeys:Boolean;'");
MakeCode(0x447410);
MakeCode(0x447433);
MakeFunction(0x447410, 0x44743F);
MakeUnkn(0x447440, 1);
MakeNameEx(0x447440, "TMenuItem.GetAutoLineReduction", 0x20);
MakeComm(0x447440, "'function TMenuItem.GetAutoLineReduction:Boolean;'");
MakeCode(0x447440);
MakeCode(0x447463);
MakeFunction(0x447440, 0x44746F);
MakeUnkn(0x447470, 1);
MakeNameEx(0x447470, "TMenu.Create", 0x20);
MakeComm(0x447470, "'constructor TMenu.Create(AOwner:TComponent);'");
MakeCode(0x447470);
MakeCode(0x447483);
MakeCode(0x447504);
MakeFunction(0x447470, 0x44750C);
MakeUnkn(0x44750C, 1);
MakeNameEx(0x44750C, "TMenu.CreateMenuItem", 0x20);
MakeComm(0x44750C, "'procedure TMenu.CreateMenuItem;'");
MakeCode(0x44750C);
MakeFunction(0x44750C, 0x44751B);
MakeUnkn(0x44751C, 1);
MakeNameEx(0x44751C, "TMenu.Destroy", 0x20);
MakeComm(0x44751C, "'destructor TMenu.Destroy;'");
MakeCode(0x44751C);
MakeCode(0x44754E);
MakeFunction(0x44751C, 0x447551);
MakeUnkn(0x447554, 1);
MakeNameEx(0x447554, "TMenu.GetChildren", 0x20);
MakeComm(0x447554, "'procedure TMenu.GetChildren(Proc:TGetChildProc; Root:TComponent);'");
MakeCode(0x447554);
MakeFunction(0x447554, 0x44756F);
MakeUnkn(0x447570, 1);
MakeNameEx(0x447570, "TMenu.GetHandle", 0x20);
MakeComm(0x447570, "'function TMenu.GetHandle:HMENU;'");
MakeCode(0x447570);
MakeFunction(0x447570, 0x447579);
MakeUnkn(0x44757C, 1);
MakeNameEx(0x44757C, "TMenu.SetChildOrder", 0x20);
MakeComm(0x44757C, "'procedure TMenu.SetChildOrder(Child:TComponent; Order:Integer);'");
MakeCode(0x44757C);
MakeFunction(0x44757C, 0x44758D);
MakeUnkn(0x447590, 1);
MakeNameEx(0x447590, "UpdateItem_0", 0x20);
MakeComm(0x447590, "'function UpdateItem(MenuItem:TMenuItem):Boolean;'");
MakeCode(0x447590);
MakeFunction(0x447590, 0x4475B7);
MakeUnkn(0x4475B8, 1);
MakeNameEx(0x4475B8, "TMenu.UpdateItems", 0x20);
MakeComm(0x4475B8, "'procedure TMenu.UpdateItems;'");
MakeCode(0x4475B8);
MakeFunction(0x4475B8, 0x4475D0);
MakeUnkn(0x4475D0, 1);
MakeNameEx(0x4475D0, "Find", 0x20);
MakeComm(0x4475D0, "'function Find(Item:TMenuItem):Boolean;'");
MakeCode(0x4475D0);
MakeFunction(0x4475D0, 0x447667);
MakeUnkn(0x447668, 1);
MakeNameEx(0x447668, "TMenu.FindItem", 0x20);
MakeComm(0x447668, "'function TMenu.FindItem(Value:Integer; Kind:TFindItemKind):TMenuItem;'");
MakeCode(0x447668);
MakeFunction(0x447668, 0x447697);
MakeUnkn(0x447698, 1);
MakeNameEx(0x447698, "TMenu.GetHelpContext", 0x20);
MakeComm(0x447698, "'function TMenu.GetHelpContext(Value:Integer; ByCommand:Boolean):THelpContext;'");
MakeCode(0x447698);
MakeCode(0x4476B0);
MakeCode(0x4476DC);
MakeCode(0x4476E9);
MakeCode(0x4476EC);
MakeCode(0x4476F6);
MakeCode(0x4476FD);
MakeFunction(0x447698, 0x447705);
MakeUnkn(0x447708, 1);
MakeNameEx(0x447708, "TMenu.DispatchCommand", 0x20);
MakeComm(0x447708, "'function TMenu.DispatchCommand(ACommand:Word):Boolean;'");
MakeCode(0x447708);
MakeCode(0x447720);
MakeFunction(0x447708, 0x447724);
MakeUnkn(0x447724, 1);
MakeNameEx(0x447724, "TMenu.DispatchPopup", 0x20);
MakeComm(0x447724, "'function TMenu.DispatchPopup(AHandle:HMENU):Boolean;'");
MakeCode(0x447724);
MakeCode(0x44774B);
MakeCode(0x447773);
MakeCode(0x4477C0);
MakeCode(0x4477C4);
MakeCode(0x4477E3);
MakeFunction(0x447724, 0x4477E9);
MakeUnkn(0x4477EC, 1);
MakeNameEx(0x4477EC, "TMenu.IsOwnerDraw", 0x20);
MakeComm(0x4477EC, "'function TMenu.IsOwnerDraw:Boolean;'");
MakeCode(0x4477EC);
MakeCode(0x4477FB);
MakeFunction(0x4477EC, 0x4477FE);
MakeUnkn(0x447800, 1);
MakeNameEx(0x447800, "GetAltGRStatus", 0x20);
MakeComm(0x447800, "'procedure GetAltGRStatus;'");
MakeCode(0x447800);
MakeCode(0x4478D5);
MakeCode(0x4478E2);
MakeCode(0x4478EC);
MakeCode(0x4478F1);
MakeCode(0x4478F3);
MakeCode(0x447900);
MakeCode(0x447909);
MakeCode(0x44790E);
MakeCode(0x447910);
MakeCode(0x44791D);
MakeCode(0x447933);
MakeCode(0x447938);
MakeFunction(0x447800, 0x44793F);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x447948, -1);
MakeDword(0x447944);
MakeDword(0x447940);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x447984, -1);
MakeDword(0x447980);
MakeDword(0x44797C);
MakeUnkn(0x4479A4, 1);
MakeNameEx(0x4479A4, "IsAltGRPressed", 0x20);
MakeComm(0x4479A4, "'function IsAltGRPressed:Boolean;'");
MakeCode(0x4479A4);
MakeCode(0x4479D2);
MakeCode(0x4479D9);
MakeFunction(0x4479A4, 0x4479DD);
MakeUnkn(0x4479E0, 1);
MakeNameEx(0x4479E0, "ShortCutFromMessage", 0x20);
MakeComm(0x4479E0, "'function ShortCutFromMessage(Message:TWMKey):TShortCut;'");
MakeCode(0x4479E0);
MakeCode(0x447A0A);
MakeCode(0x447A1B);
MakeCode(0x447A27);
MakeFunction(0x4479E0, 0x447A30);
MakeUnkn(0x447A30, 1);
MakeNameEx(0x447A30, "NthParentOf", 0x20);
MakeComm(0x447A30, "'function NthParentOf(Item:TMenuItem; N:Integer):TMenuItem;'");
MakeCode(0x447A30);
MakeFunction(0x447A30, 0x447A3F);
MakeUnkn(0x447A40, 1);
MakeNameEx(0x447A40, "DoClick", 0x20);
MakeComm(0x447A40, "'function DoClick(var Item:TMenuItem; Level:Integer):TClickResult;'");
MakeCode(0x447A40);
MakeCode(0x447A72);
MakeCode(0x447AA8);
MakeCode(0x447AD4);
MakeCode(0x447B02);
MakeCode(0x447B2B);
MakeCode(0x447B58);
MakeCode(0x447B5C);
MakeCode(0x447B84);
MakeCode(0x447B88);
MakeFunction(0x447A40, 0x447B93);
MakeUnkn(0x447B94, 1);
MakeNameEx(0x447B94, "TMenu.IsShortCut", 0x20);
MakeComm(0x447B94, "'procedure TMenu.IsShortCut(var Message:TWMKey);'");
MakeCode(0x447B94);
MakeCode(0x447BDF);
MakeCode(0x447C24);
MakeCode(0x447C31);
MakeCode(0x447C3C);
MakeCode(0x447C41);
MakeCode(0x447C43);
MakeCode(0x447C4F);
MakeCode(0x447C5C);
MakeCode(0x447C67);
MakeCode(0x447C6C);
MakeCode(0x447C7E);
MakeCode(0x447C80);
MakeFunction(0x447B94, 0x447C88);
MakeUnkn(0x447C88, 1);
MakeNameEx(0x447C88, "TMainMenu.IsStoredBiDiMode", 0x20);
MakeComm(0x447C88, "'procedure TMainMenu.IsStoredBiDiMode(Value:TBiDiMode);'");
MakeCode(0x447C88);
MakeComm(0x447C88, "'TMainMenu.FParentBiDiMode:Boolean'");
MakeFunction(0x447C88, 0x447C8F);
MakeUnkn(0x447C90, 1);
MakeNameEx(0x447C90, "TMenu.DoBiDiModeChanged", 0x20);
MakeComm(0x447C90, "'procedure TMenu.DoBiDiModeChanged;'");
MakeCode(0x447C90);
MakeCode(0x447D42);
MakeFunction(0x447C90, 0x447D4B);
MakeUnkn(0x447D4C, 1);
MakeNameEx(0x447D4C, "BuildImage", 0x20);
MakeComm(0x447D4C, "'procedure BuildImage(Menu:HMENU);'");
MakeCode(0x447D4C);
MakeCode(0x447D7A);
MakeCode(0x447DC1);
MakeCode(0x447DCF);
MakeCode(0x447DDD);
MakeCode(0x447DE5);
MakeCode(0x447DEF);
MakeFunction(0x447D4C, 0x447DF6);
MakeUnkn(0x447DF8, 1);
MakeNameEx(0x447DF8, "TMenu.UpdateImage", 0x20);
MakeComm(0x447DF8, "'function TMenu.UpdateImage:Boolean;'");
MakeCode(0x447DF8);
MakeCode(0x447E2F);
MakeCode(0x447E58);
MakeCode(0x447E73);
MakeFunction(0x447DF8, 0x447E7A);
MakeUnkn(0x447E7C, 1);
MakeNameEx(0x447E7C, "TMenu.SetOwnerDraw", 0x20);
MakeComm(0x447E7C, "'procedure TMenu.SetOwnerDraw(Value:Boolean);'");
MakeCode(0x447E7C);
MakeFunction(0x447E7C, 0x447E8A);
MakeUnkn(0x447E8C, 1);
MakeNameEx(0x447E8C, "TMenu.AdjustBiDiBehavior", 0x20);
MakeComm(0x447E8C, "'procedure TMenu.AdjustBiDiBehavior;'");
MakeCode(0x447E8C);
MakeCode(0x447ED2);
MakeCode(0x447EDC);
MakeCode(0x447EE9);
MakeCode(0x447F00);
MakeCode(0x447F05);
MakeCode(0x447F07);
MakeFunction(0x447E8C, 0x447F0B);
MakeUnkn(0x447F0C, 1);
MakeNameEx(0x447F0C, "TMenu.SetWindowHandle", 0x20);
MakeComm(0x447F0C, "'procedure TMenu.SetWindowHandle(Value:HWND);'");
MakeCode(0x447F0C);
MakeCode(0x447F3A);
MakeCode(0x447F41);
MakeFunction(0x447F0C, 0x447F44);
MakeUnkn(0x447F44, 1);
MakeNameEx(0x447F44, "TMenu.DoChange", 0x20);
MakeComm(0x447F44, "'procedure TMenu.DoChange(Source:TMenuItem; Rebuild:Boolean);'");
MakeCode(0x447F44);
MakeCode(0x447F59);
MakeFunction(0x447F44, 0x447F5B);
MakeUnkn(0x447F5C, 1);
MakeNameEx(0x447F5C, "TMenu.Loaded", 0x20);
MakeComm(0x447F5C, "'procedure TMenu.Loaded;'");
MakeCode(0x447F5C);
MakeFunction(0x447F5C, 0x447F73);
MakeUnkn(0x447F74, 1);
MakeNameEx(0x447F74, "TMenu.MenuChanged", 0x20);
MakeComm(0x447F74, "'procedure TMenu.MenuChanged(Sender:TObject; Source:TMenuItem; Rebuild:Boolean);'");
MakeCode(0x447F74);
MakeCode(0x447FA1);
MakeFunction(0x447F74, 0x447FA7);
MakeUnkn(0x447FB0, 1);
MakeNameEx(0x447FB0, "TMenu.ImageListChange", 0x20);
MakeComm(0x447FB0, "'procedure TMenu.ImageListChange(Sender:TObject);'");
MakeCode(0x447FB0);
MakeFunction(0x447FB0, 0x447FBB);
MakeUnkn(0x447FBC, 1);
MakeNameEx(0x447FBC, "TMenu.SetImages", 0x20);
MakeComm(0x447FBC, "'procedure TMenu.SetImages(Value:TCustomImageList);'");
MakeCode(0x447FBC);
MakeCode(0x447FD1);
MakeCode(0x447FEC);
MakeFunction(0x447FBC, 0x447FF6);
MakeUnkn(0x447FF8, 1);
MakeNameEx(0x447FF8, "TMenu.Notification", 0x20);
MakeComm(0x447FF8, "'procedure TMenu.Notification(AComponent:TComponent; Operation:TOperation);'");
MakeCode(0x447FF8);
MakeCode(0x44801F);
MakeFunction(0x447FF8, 0x448023);
MakeUnkn(0x448024, 1);
MakeNameEx(0x448024, "TMenu.IsRightToLeft", 0x20);
MakeComm(0x448024, "'function TMenu.IsRightToLeft:Boolean;'");
MakeCode(0x448024);
MakeCode(0x448036);
MakeCode(0x448039);
MakeFunction(0x448024, 0x44803C);
MakeUnkn(0x44803C, 1);
MakeNameEx(0x44803C, "IsAccelChar", 0x20);
MakeComm(0x44803C, "'function IsAccelChar(Menu:HMENU; State:Word; I:Integer; C:Char):Boolean;'");
MakeCode(0x44803C);
MakeCode(0x448060);
MakeCode(0x44807C);
MakeCode(0x44808E);
MakeCode(0x448090);
MakeFunction(0x44803C, 0x448095);
MakeUnkn(0x448098, 1);
MakeNameEx(0x448098, "IsInitialChar", 0x20);
MakeComm(0x448098, "'function IsInitialChar(Menu:HMENU; State:Word; I:Integer; C:Char):Boolean;'");
MakeCode(0x448098);
MakeCode(0x4480DD);
MakeCode(0x448107);
MakeCode(0x448133);
MakeCode(0x44814B);
MakeCode(0x4481A0);
MakeCode(0x4481A2);
MakeCode(0x4481A6);
MakeCode(0x4481A8);
MakeCode(0x4481B5);
MakeCode(0x4481C3);
MakeCode(0x4481C8);
MakeFunction(0x448098, 0x4481D5);
MakeUnkn(0x4481D8, 1);
MakeNameEx(0x4481D8, "TMenu.ProcessMenuChar", 0x20);
MakeComm(0x4481D8, "'procedure TMenu.ProcessMenuChar(var Message:TWMMenuChar);'");
MakeCode(0x4481D8);
MakeCode(0x44821A);
MakeCode(0x448258);
MakeCode(0x44826A);
MakeCode(0x448271);
MakeCode(0x44827D);
MakeCode(0x448286);
MakeCode(0x44828C);
MakeCode(0x44829E);
MakeCode(0x4482B2);
MakeCode(0x4482EA);
MakeCode(0x4482FC);
MakeCode(0x448303);
MakeCode(0x44830F);
MakeCode(0x448318);
MakeCode(0x44831E);
MakeCode(0x448331);
MakeCode(0x448342);
MakeCode(0x44834B);
MakeFunction(0x4481D8, 0x448352);
MakeUnkn(0x448354, 1);
MakeNameEx(0x448354, "TMenu.DoGetMenuString", 0x20);
MakeComm(0x448354, "'function TMenu.DoGetMenuString(Menu:HMENU; ItemID:UINT; Str:PChar; MaxCount:Integer; Flag:UINT):Integer;'");
MakeCode(0x448354);
MakeCode(0x448399);
MakeCode(0x4483B5);
MakeCode(0x4483DC);
MakeCode(0x4483E0);
MakeCode(0x4483F3);
MakeFunction(0x448354, 0x4483FB);
MakeUnkn(0x4483FC, 1);
MakeNameEx(0x4483FC, "TMenu.SetBiDiMode", 0x20);
MakeComm(0x4483FC, "'procedure TMenu.SetBiDiMode(Value:TBiDiMode);'");
MakeCode(0x4483FC);
MakeFunction(0x4483FC, 0x44840E);
MakeUnkn(0x448410, 1);
MakeNameEx(0x448410, "TMenu.SetParentBiDiMode", 0x20);
MakeComm(0x448410, "'procedure TMenu.SetParentBiDiMode(Value:Boolean);'");
MakeCode(0x448410);
MakeFunction(0x448410, 0x44841E);
MakeUnkn(0x448420, 1);
MakeNameEx(0x448420, "TMenu.ParentBiDiModeChanged", 0x20);
MakeComm(0x448420, "'procedure TMenu.ParentBiDiModeChanged;'");
MakeCode(0x448420);
MakeCode(0x448444);
MakeFunction(0x448420, 0x448446);
MakeUnkn(0x448448, 1);
MakeNameEx(0x448448, "TMenu.ParentBiDiModeChanged_0", 0x20);
MakeComm(0x448448, "'procedure TMenu.ParentBiDiModeChanged(AControl:TObject);'");
MakeCode(0x448448);
MakeCode(0x448470);
MakeFunction(0x448448, 0x448473);
MakeUnkn(0x448474, 1);
MakeNameEx(0x448474, "TMenu.GetAutoHotkeys", 0x20);
MakeComm(0x448474, "'function TMenu.GetAutoHotkeys:TMenuAutoFlag;'");
MakeCode(0x448474);
MakeFunction(0x448474, 0x448483);
MakeUnkn(0x448484, 1);
MakeNameEx(0x448484, "TMenu.SetAutoHotkeys", 0x20);
MakeComm(0x448484, "'procedure TMenu.SetAutoHotkeys(const Value:TMenuAutoFlag);'");
MakeCode(0x448484);
MakeFunction(0x448484, 0x448495);
MakeUnkn(0x448498, 1);
MakeNameEx(0x448498, "TMenu.GetAutoLineReduction", 0x20);
MakeComm(0x448498, "'function TMenu.GetAutoLineReduction:TMenuAutoFlag;'");
MakeCode(0x448498);
MakeFunction(0x448498, 0x4484A7);
MakeUnkn(0x4484A8, 1);
MakeNameEx(0x4484A8, "TMenu.SetAutoLineReduction", 0x20);
MakeComm(0x4484A8, "'procedure TMenu.SetAutoLineReduction(const Value:TMenuAutoFlag);'");
MakeCode(0x4484A8);
MakeFunction(0x4484A8, 0x4484B9);
MakeUnkn(0x4484BC, 1);
MakeNameEx(0x4484BC, "TMainMenu.SetAutoMerge", 0x20);
MakeComm(0x4484BC, "'procedure TMainMenu.SetAutoMerge(Value:Boolean);'");
MakeCode(0x4484BC);
MakeFunction(0x4484BC, 0x4484DB);
MakeUnkn(0x4484DC, 1);
MakeNameEx(0x4484DC, "TMainMenu.MenuChanged", 0x20);
MakeComm(0x4484DC, "'procedure TMainMenu.MenuChanged(Sender:TObject; Source:TMenuItem; Rebuild:Boolean);'");
MakeCode(0x4484DC);
MakeCode(0x44850F);
MakeCode(0x44851C);
MakeFunction(0x4484DC, 0x448535);
MakeUnkn(0x448538, 1);
MakeNameEx(0x448538, "TMainMenu.Merge", 0x20);
MakeComm(0x448538, "'procedure TMainMenu.Merge(Menu:TMainMenu);'");
MakeCode(0x448538);
MakeCode(0x448548);
MakeFunction(0x448538, 0x448553);
MakeUnkn(0x448554, 1);
MakeNameEx(0x448554, "TMainMenu.Unmerge", 0x20);
MakeComm(0x448554, "'procedure TMainMenu.Unmerge(Menu:TMainMenu);'");
MakeCode(0x448554);
MakeFunction(0x448554, 0x44856E);
MakeUnkn(0x448570, 1);
MakeNameEx(0x448570, "TMainMenu.ItemChanged", 0x20);
MakeComm(0x448570, "'procedure TMainMenu.ItemChanged;'");
MakeCode(0x448570);
MakeCode(0x448597);
MakeFunction(0x448570, 0x44859A);
MakeUnkn(0x44859C, 1);
MakeNameEx(0x44859C, "TMainMenu.GetHandle", 0x20);
MakeComm(0x44859C, "'function TMainMenu.GetHandle:HMENU;'");
MakeCode(0x44859C);
MakeCode(0x4485A6);
MakeFunction(0x44859C, 0x4485AC);
MakeUnkn(0x4485AC, 1);
MakeNameEx(0x4485AC, "TPopupList.MainWndProc", 0x20);
MakeComm(0x4485AC, "'procedure TPopupList.MainWndProc(var Message:TMessage);'");
MakeCode(0x4485AC);
MakeCode(0x4485CC);
MakeCode(0x4485D6);
MakeCode(0x4485EF);
MakeFunction(0x4485AC, 0x4485F5);
MakeUnkn(0x4485F8, 1);
MakeNameEx(0x4485F8, "TPopupList.WndProc", 0x20);
MakeComm(0x4485F8, "'procedure TPopupList.WndProc(var Message:TMessage);'");
MakeCode(0x4485F8);
MakeCode(0x448642);
MakeCode(0x44865A);
MakeCode(0x44866C);
MakeCode(0x448690);
MakeCode(0x4486A2);
MakeCode(0x4486C5);
MakeCode(0x4486D3);
MakeCode(0x4486E1);
MakeCode(0x4486FE);
MakeCode(0x448707);
MakeCode(0x44870E);
MakeCode(0x44874F);
MakeCode(0x448753);
MakeCode(0x448766);
MakeCode(0x44877E);
MakeCode(0x4487A7);
MakeCode(0x4487C1);
MakeCode(0x4487FD);
MakeCode(0x44881F);
MakeCode(0x448848);
MakeCode(0x44885B);
MakeCode(0x448868);
MakeCode(0x448880);
MakeCode(0x44891A);
MakeCode(0x448927);
MakeCode(0x448942);
MakeCode(0x448947);
MakeCode(0x448949);
MakeCode(0x448956);
MakeCode(0x44895F);
MakeCode(0x448964);
MakeCode(0x448966);
MakeCode(0x448973);
MakeCode(0x44898B);
MakeCode(0x448A3B);
MakeCode(0x448A48);
MakeCode(0x448A60);
MakeCode(0x448A65);
MakeCode(0x448A67);
MakeCode(0x448A74);
MakeCode(0x448A7D);
MakeCode(0x448A82);
MakeCode(0x448A84);
MakeCode(0x448A91);
MakeCode(0x448AA2);
MakeCode(0x448AA7);
MakeCode(0x448AA9);
MakeCode(0x448AB3);
MakeCode(0x448AC1);
MakeCode(0x448AEC);
MakeCode(0x448AF8);
MakeCode(0x448AFC);
MakeCode(0x448B16);
MakeCode(0x448B23);
MakeCode(0x448B2C);
MakeCode(0x448B31);
MakeFunction(0x4485F8, 0x448B3A);
MakeUnkn(0x448B3C, 1);
MakeNameEx(0x448B3C, "TPopupList.Add", 0x20);
MakeComm(0x448B3C, "'procedure TPopupList.Add(Popup:TPopupMenu);'");
MakeCode(0x448B3C);
MakeCode(0x448B56);
MakeFunction(0x448B3C, 0x448B62);
MakeUnkn(0x448B64, 1);
MakeNameEx(0x448B64, "TPopupList.Remove", 0x20);
MakeComm(0x448B64, "'procedure TPopupList.Remove(Popup:TPopupMenu);'");
MakeCode(0x448B64);
MakeCode(0x448B7C);
MakeFunction(0x448B64, 0x448B7E);
MakeUnkn(0x448B80, 1);
MakeNameEx(0x448B80, "TPopupMenu.Create", 0x20);
MakeComm(0x448B80, "'constructor TPopupMenu.Create(AOwner:TComponent);'");
MakeCode(0x448B80);
MakeCode(0x448B8E);
MakeCode(0x448BEF);
MakeFunction(0x448B80, 0x448BF4);
MakeUnkn(0x448BF4, 1);
MakeNameEx(0x448BF4, "TPopupMenu.Destroy", 0x20);
MakeComm(0x448BF4, "'destructor TPopupMenu.Destroy;'");
MakeCode(0x448BF4);
MakeCode(0x448C22);
MakeFunction(0x448BF4, 0x448C25);
MakeUnkn(0x448C28, 1);
MakeNameEx(0x448C28, "TPopupMenu.DoPopup", 0x20);
MakeComm(0x448C28, "'procedure TPopupMenu.DoPopup(Sender:TObject);'");
MakeCode(0x448C28);
MakeCode(0x448C38);
MakeFunction(0x448C28, 0x448C3A);
MakeUnkn(0x448C3C, 1);
MakeNameEx(0x448C3C, "TPopupMenu.GetHelpContext", 0x20);
MakeComm(0x448C3C, "'function TPopupMenu.GetHelpContext:THelpContext;'");
MakeCode(0x448C3C);
MakeFunction(0x448C3C, 0x448C43);
MakeUnkn(0x448C44, 1);
MakeNameEx(0x448C44, "TPopupMenu.SetHelpContext", 0x20);
MakeComm(0x448C44, "'procedure TPopupMenu.SetHelpContext(Value:THelpContext);'");
MakeCode(0x448C44);
MakeComm(0x448C44, "'TPopupMenu.Items:TMenuItem'");
MakeComm(0x448C47, "'TMenuItem.HelpContext:THelpContext'");
MakeFunction(0x448C44, 0x448C4B);
MakeUnkn(0x448C4C, 1);
MakeNameEx(0x448C4C, "TPopupMenu.SetBiDiModeFromPopupControl", 0x20);
MakeComm(0x448C4C, "'procedure TPopupMenu.SetBiDiModeFromPopupControl;'");
MakeCode(0x448C4C);
MakeCode(0x448C7D);
MakeCode(0x448C93);
MakeFunction(0x448C4C, 0x448C95);
MakeUnkn(0x448C98, 1);
MakeNameEx(0x448C98, "TPopupMenu.UseRightToLeftAlignment", 0x20);
MakeComm(0x448C98, "'function TPopupMenu.UseRightToLeftAlignment:Boolean;'");
MakeCode(0x448C98);
MakeCode(0x448CC6);
MakeCode(0x448CD6);
MakeCode(0x448CDD);
MakeFunction(0x448C98, 0x448CE1);
MakeUnkn(0x448CE4, 1);
MakeNameEx(0x448CE4, "TPopupMenu.Popup", 0x20);
MakeComm(0x448CE4, "'procedure TPopupMenu.Popup(X:Integer; Y:Integer);'");
MakeCode(0x448CE4);
MakeFunction(0x448CE4, 0x448D91);
MakeUnkn(0x448D94, 1);
MakeNameEx(0x448D94, "TPopupMenu.SetPopupPoint", 0x20);
MakeComm(0x448D94, "'procedure TPopupMenu.SetPopupPoint(APopupPoint:TPoint);'");
MakeCode(0x448D94);
MakeFunction(0x448D94, 0x448DB2);
MakeUnkn(0x448DB4, 1);
MakeNameEx(0x448DB4, "TMenuItemStack.ClearItem", 0x20);
MakeComm(0x448DB4, "'procedure TMenuItemStack.ClearItem(AItem:TMenuItem);'");
MakeCode(0x448DB4);
MakeCode(0x448DCA);
MakeCode(0x448DE6);
MakeCode(0x448DEA);
MakeFunction(0x448DB4, 0x448DEF);
MakeUnkn(0x448DF0, 1);
MakeNameEx(0x448DF0, "DrawMenuItem", 0x20);
MakeComm(0x448DF0, "'procedure DrawMenuItem(MenuItem:TMenuItem; ACanvas:TCanvas; ARect:TRect; State:TOwnerDrawState);'");
MakeCode(0x448DF0);
MakeCode(0x448E25);
MakeCode(0x448E29);
MakeCode(0x448E2B);
MakeCode(0x448E5B);
MakeCode(0x448E77);
MakeCode(0x448E9D);
MakeCode(0x448EB7);
MakeFunction(0x448DF0, 0x448ED7);
MakeUnkn(0x448ED8, 1);
MakeNameEx(0x448ED8, "StripHotkey", 0x20);
MakeComm(0x448ED8, "'function StripHotkey(const Text:AnsiString):AnsiString;'");
MakeCode(0x448ED8);
MakeCode(0x448EF6);
MakeCode(0x448F11);
MakeCode(0x448F40);
MakeCode(0x448F4C);
MakeCode(0x448F51);
MakeCode(0x448F66);
MakeCode(0x448F6B);
MakeCode(0x448F80);
MakeCode(0x448F85);
MakeCode(0x448F8C);
MakeCode(0x448F8E);
MakeCode(0x448FA3);
MakeCode(0x448FB1);
MakeCode(0x448FB2);
MakeFunction(0x448ED8, 0x448FC8);
MakeUnkn(0x448FC8, 1);
MakeNameEx(0x448FC8, "GetHotkey", 0x20);
MakeComm(0x448FC8, "'function GetHotkey(const Text:AnsiString):AnsiString;'");
MakeCode(0x448FC8);
MakeCode(0x448FE7);
MakeCode(0x448FED);
MakeCode(0x449002);
MakeCode(0x449024);
MakeCode(0x449029);
MakeFunction(0x448FC8, 0x44902E);
MakeUnkn(0x449030, 1);
MakeNameEx(0x449030, "AnsiSameCaption", 0x20);
MakeComm(0x449030, "'function AnsiSameCaption(const Text1:AnsiString; const Text2:AnsiString):Boolean;'");
MakeCode(0x449030);
MakeCode(0x44907F);
MakeCode(0x44908B);
MakeCode(0x4490B8);
MakeCode(0x4490C5);
MakeCode(0x4490D3);
MakeCode(0x4490D8);
MakeFunction(0x449030, 0x4490E3);
MakeUnkn(0x449178, 1);
MakeNameEx(0x449178, "Finalization_4", 0x20);
MakeComm(0x449178, "'procedure Finalization;'");
MakeCode(0x449178);
MakeCode(0x4491CE);
MakeCode(0x4491DB);
MakeCode(0x4491DC);
MakeCode(0x4491E1);
MakeFunction(0x449178, 0x4491E5);
MakeUnkn(0x4491E8, 1);
MakeNameEx(0x4491E8, "RTTI_4491E8_Integer_TModalResult", 0);
MakeDword(0x4491E8);
MakeUnkn(0x4491EC, 1);
MakeNameEx(0x4491EC, "", 0);
MakeByte(0x4491EC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4491ED, 0x4491FA);
MakeByte(0x4491FA);
MakeDword(0x4491FB);
MakeDword(0x4491FF);
MakeUnkn(0x449204, 1);
MakeNameEx(0x449204, "RTTI_449204_Integer_TCursor", 0);
MakeDword(0x449204);
MakeUnkn(0x449208, 1);
MakeNameEx(0x449208, "", 0);
MakeByte(0x449208);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449209, 0x449211);
MakeByte(0x449211);
MakeDword(0x449212);
MakeDword(0x449216);
MakeUnkn(0x44921C, 1);
MakeNameEx(0x44921C, "RTTI_44921C_Enumeration_TAlign", 0);
MakeDword(0x44921C);
MakeUnkn(0x449220, 1);
MakeNameEx(0x449220, "", 0);
MakeByte(0x449220);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449221, 0x449228);
MakeByte(0x449228);
MakeDword(0x449229);
MakeDword(0x44922D);
MakeDword(0x449231);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449235, 0x44923C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44923C, 0x449242);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449242, 0x44924B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44924B, 0x449252);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449252, 0x44925A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44925A, 0x449263);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449263, 0x44926C);
MakeUnkn(0x449278, 1);
MakeNameEx(0x449278, "VMT_449278_TDragObject", 0);
MakeDword(0x449278);
MakeDword(0x44927C);
MakeDword(0x449280);
MakeDword(0x449284);
MakeDword(0x449288);
MakeDword(0x44928C);
MakeDword(0x449290);
MakeDword(0x449294);
MakeDword(0x449298);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4492E8, 0x4492F4);
MakeDword(0x44929C);
MakeDword(0x4492A0);
MakeDword(0x4492A4);
MakeDword(0x4492A8);
MakeDword(0x4492AC);
MakeDword(0x4492B0);
MakeDword(0x4492B4);
MakeDword(0x4492B8);
MakeDword(0x4492BC);
MakeDword(0x4492C0);
MakeComm(0x4492C4, "'+0'");
MakeDword(0x4492C4);
MakeComm(0x4492C8, "'+4'");
MakeDword(0x4492C8);
MakeComm(0x4492CC, "'+8'");
MakeDword(0x4492CC);
MakeComm(0x4492D0, "'+C'");
MakeDword(0x4492D0);
MakeComm(0x4492D4, "'+10'");
MakeDword(0x4492D4);
MakeComm(0x4492D8, "'+14'");
MakeDword(0x4492D8);
MakeComm(0x4492DC, "'+18'");
MakeDword(0x4492DC);
MakeComm(0x4492E0, "'+1C'");
MakeDword(0x4492E0);
MakeComm(0x4492E4, "'+20'");
MakeDword(0x4492E4);
MakeUnkn(0x4492F4, 1);
MakeNameEx(0x4492F4, "RTTI_4492F4_Class_TDragObject", 0);
MakeDword(0x4492F4);
MakeUnkn(0x4492F8, 1);
MakeNameEx(0x4492F8, "", 0);
MakeByte(0x4492F8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4492F9, 0x449305);
MakeDword(0x449305);
MakeDword(0x449309);
MakeWord(0x44930D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44930F, 0x449318);
MakeWord(0x449318);
MakeUnkn(0x44931C, 1);
MakeNameEx(0x44931C, "VMT_44931C_TBaseDragControlObject", 0);
MakeDword(0x44931C);
MakeDword(0x449320);
MakeDword(0x449324);
MakeDword(0x449328);
MakeDword(0x44932C);
MakeDword(0x449330);
MakeDword(0x449334);
MakeDword(0x449338);
MakeDword(0x44933C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449394, 0x4493AB);
MakeDword(0x449340);
MakeDword(0x449344);
MakeDword(0x449348);
MakeDword(0x44934C);
MakeDword(0x449350);
MakeDword(0x449354);
MakeDword(0x449358);
MakeDword(0x44935C);
MakeDword(0x449360);
MakeDword(0x449364);
MakeComm(0x449368, "'+0'");
MakeDword(0x449368);
MakeComm(0x44936C, "'+4'");
MakeDword(0x44936C);
MakeComm(0x449370, "'+8'");
MakeDword(0x449370);
MakeComm(0x449374, "'+C'");
MakeDword(0x449374);
MakeComm(0x449378, "'+10'");
MakeDword(0x449378);
MakeComm(0x44937C, "'+14'");
MakeDword(0x44937C);
MakeComm(0x449380, "'+18'");
MakeDword(0x449380);
MakeComm(0x449384, "'+1C'");
MakeDword(0x449384);
MakeComm(0x449388, "'+20'");
MakeDword(0x449388);
MakeComm(0x44938C, "'+24'");
MakeDword(0x44938C);
MakeComm(0x449390, "'+28'");
MakeDword(0x449390);
MakeUnkn(0x4493AC, 1);
MakeNameEx(0x4493AC, "RTTI_4493AC_Class_TBaseDragControlObject", 0);
MakeDword(0x4493AC);
MakeUnkn(0x4493B0, 1);
MakeNameEx(0x4493B0, "", 0);
MakeByte(0x4493B0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4493B1, 0x4493C8);
MakeDword(0x4493C8);
MakeDword(0x4493CC);
MakeWord(0x4493D0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4493D2, 0x4493DB);
MakeWord(0x4493DB);
MakeUnkn(0x4493E0, 1);
MakeNameEx(0x4493E0, "VMT_4493E0_TDragControlObject", 0);
MakeDword(0x4493E0);
MakeDword(0x4493E4);
MakeDword(0x4493E8);
MakeDword(0x4493EC);
MakeDword(0x4493F0);
MakeDword(0x4493F4);
MakeDword(0x4493F8);
MakeDword(0x4493FC);
MakeDword(0x449400);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449458, 0x44946B);
MakeDword(0x449404);
MakeDword(0x449408);
MakeDword(0x44940C);
MakeDword(0x449410);
MakeDword(0x449414);
MakeDword(0x449418);
MakeDword(0x44941C);
MakeDword(0x449420);
MakeDword(0x449424);
MakeDword(0x449428);
MakeComm(0x44942C, "'+0'");
MakeDword(0x44942C);
MakeComm(0x449430, "'+4'");
MakeDword(0x449430);
MakeComm(0x449434, "'+8'");
MakeDword(0x449434);
MakeComm(0x449438, "'+C'");
MakeDword(0x449438);
MakeComm(0x44943C, "'+10'");
MakeDword(0x44943C);
MakeComm(0x449440, "'+14'");
MakeDword(0x449440);
MakeComm(0x449444, "'+18'");
MakeDword(0x449444);
MakeComm(0x449448, "'+1C'");
MakeDword(0x449448);
MakeComm(0x44944C, "'+20'");
MakeDword(0x44944C);
MakeComm(0x449450, "'+24'");
MakeDword(0x449450);
MakeComm(0x449454, "'+28'");
MakeDword(0x449454);
MakeUnkn(0x44946C, 1);
MakeNameEx(0x44946C, "VMT_44946C_TDragControlObjectEx", 0);
MakeDword(0x44946C);
MakeDword(0x449470);
MakeDword(0x449474);
MakeDword(0x449478);
MakeDword(0x44947C);
MakeDword(0x449480);
MakeDword(0x449484);
MakeDword(0x449488);
MakeDword(0x44948C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4494E4, 0x4494F9);
MakeDword(0x449490);
MakeDword(0x449494);
MakeDword(0x449498);
MakeDword(0x44949C);
MakeDword(0x4494A0);
MakeDword(0x4494A4);
MakeDword(0x4494A8);
MakeDword(0x4494AC);
MakeDword(0x4494B0);
MakeDword(0x4494B4);
MakeComm(0x4494B8, "'+0'");
MakeDword(0x4494B8);
MakeComm(0x4494BC, "'+4'");
MakeDword(0x4494BC);
MakeComm(0x4494C0, "'+8'");
MakeDword(0x4494C0);
MakeComm(0x4494C4, "'+C'");
MakeDword(0x4494C4);
MakeComm(0x4494C8, "'+10'");
MakeDword(0x4494C8);
MakeComm(0x4494CC, "'+14'");
MakeDword(0x4494CC);
MakeComm(0x4494D0, "'+18'");
MakeDword(0x4494D0);
MakeComm(0x4494D4, "'+1C'");
MakeDword(0x4494D4);
MakeComm(0x4494D8, "'+20'");
MakeDword(0x4494D8);
MakeComm(0x4494DC, "'+24'");
MakeDword(0x4494DC);
MakeComm(0x4494E0, "'+28'");
MakeDword(0x4494E0);
MakeUnkn(0x4494FC, 1);
MakeNameEx(0x4494FC, "VMT_4494FC_TDragDockObject", 0);
MakeDword(0x4494FC);
MakeDword(0x449500);
MakeDword(0x449504);
MakeDword(0x449508);
MakeDword(0x44950C);
MakeDword(0x449510);
MakeDword(0x449514);
MakeDword(0x449518);
MakeDword(0x44951C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449588, 0x449598);
MakeDword(0x449520);
MakeDword(0x449524);
MakeDword(0x449528);
MakeDword(0x44952C);
MakeDword(0x449530);
MakeDword(0x449534);
MakeDword(0x449538);
MakeDword(0x44953C);
MakeDword(0x449540);
MakeDword(0x449544);
MakeComm(0x449548, "'+0'");
MakeDword(0x449548);
MakeComm(0x44954C, "'+4'");
MakeDword(0x44954C);
MakeComm(0x449550, "'+8'");
MakeDword(0x449550);
MakeComm(0x449554, "'+C'");
MakeDword(0x449554);
MakeComm(0x449558, "'+10'");
MakeDword(0x449558);
MakeComm(0x44955C, "'+14'");
MakeDword(0x44955C);
MakeComm(0x449560, "'+18'");
MakeDword(0x449560);
MakeComm(0x449564, "'+1C'");
MakeDword(0x449564);
MakeComm(0x449568, "'+20'");
MakeDword(0x449568);
MakeComm(0x44956C, "'+24'");
MakeDword(0x44956C);
MakeComm(0x449570, "'+28'");
MakeDword(0x449570);
MakeComm(0x449574, "'+2C'");
MakeDword(0x449574);
MakeComm(0x449578, "'+30'");
MakeDword(0x449578);
MakeComm(0x44957C, "'+34'");
MakeDword(0x44957C);
MakeComm(0x449580, "'+38'");
MakeDword(0x449580);
MakeComm(0x449584, "'+3C'");
MakeDword(0x449584);
MakeUnkn(0x449598, 1);
MakeNameEx(0x449598, "RTTI_449598_Class_TDragDockObject", 0);
MakeDword(0x449598);
MakeUnkn(0x44959C, 1);
MakeNameEx(0x44959C, "", 0);
MakeByte(0x44959C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44959D, 0x4495AD);
MakeDword(0x4495AD);
MakeDword(0x4495B1);
MakeWord(0x4495B5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4495B7, 0x4495C0);
MakeWord(0x4495C0);
MakeUnkn(0x4495C4, 1);
MakeNameEx(0x4495C4, "VMT_4495C4_TDragDockObjectEx", 0);
MakeDword(0x4495C4);
MakeDword(0x4495C8);
MakeDword(0x4495CC);
MakeDword(0x4495D0);
MakeDword(0x4495D4);
MakeDword(0x4495D8);
MakeDword(0x4495DC);
MakeDword(0x4495E0);
MakeDword(0x4495E4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449650, 0x449662);
MakeDword(0x4495E8);
MakeDword(0x4495EC);
MakeDword(0x4495F0);
MakeDword(0x4495F4);
MakeDword(0x4495F8);
MakeDword(0x4495FC);
MakeDword(0x449600);
MakeDword(0x449604);
MakeDword(0x449608);
MakeDword(0x44960C);
MakeComm(0x449610, "'+0'");
MakeDword(0x449610);
MakeComm(0x449614, "'+4'");
MakeDword(0x449614);
MakeComm(0x449618, "'+8'");
MakeDword(0x449618);
MakeComm(0x44961C, "'+C'");
MakeDword(0x44961C);
MakeComm(0x449620, "'+10'");
MakeDword(0x449620);
MakeComm(0x449624, "'+14'");
MakeDword(0x449624);
MakeComm(0x449628, "'+18'");
MakeDword(0x449628);
MakeComm(0x44962C, "'+1C'");
MakeDword(0x44962C);
MakeComm(0x449630, "'+20'");
MakeDword(0x449630);
MakeComm(0x449634, "'+24'");
MakeDword(0x449634);
MakeComm(0x449638, "'+28'");
MakeDword(0x449638);
MakeComm(0x44963C, "'+2C'");
MakeDword(0x44963C);
MakeComm(0x449640, "'+30'");
MakeDword(0x449640);
MakeComm(0x449644, "'+34'");
MakeDword(0x449644);
MakeComm(0x449648, "'+38'");
MakeDword(0x449648);
MakeComm(0x44964C, "'+3C'");
MakeDword(0x44964C);
MakeUnkn(0x449664, 1);
MakeNameEx(0x449664, "VMT_449664_TControlCanvas", 0);
MakeDword(0x449664);
MakeDword(0x449668);
MakeDword(0x44966C);
MakeDword(0x449670);
MakeDword(0x449674);
MakeDword(0x449678);
MakeDword(0x44967C);
MakeDword(0x449680);
MakeDword(0x449684);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4496C8, 0x4496D7);
MakeDword(0x449688);
MakeDword(0x44968C);
MakeDword(0x449690);
MakeDword(0x449694);
MakeDword(0x449698);
MakeDword(0x44969C);
MakeDword(0x4496A0);
MakeDword(0x4496A4);
MakeDword(0x4496A8);
MakeDword(0x4496AC);
MakeComm(0x4496B0, "'+0'");
MakeDword(0x4496B0);
MakeComm(0x4496B4, "'+4'");
MakeDword(0x4496B4);
MakeComm(0x4496B8, "'+8'");
MakeDword(0x4496B8);
MakeComm(0x4496BC, "'+C'");
MakeDword(0x4496BC);
MakeComm(0x4496C0, "'+10'");
MakeDword(0x4496C0);
MakeComm(0x4496C4, "'+14'");
MakeDword(0x4496C4);
MakeUnkn(0x4496D8, 1);
MakeNameEx(0x4496D8, "RTTI_4496D8_Class_TControlCanvas", 0);
MakeDword(0x4496D8);
MakeUnkn(0x4496DC, 1);
MakeNameEx(0x4496DC, "", 0);
MakeByte(0x4496DC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4496DD, 0x4496EC);
MakeDword(0x4496EC);
MakeDword(0x4496F0);
MakeWord(0x4496F4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4496F6, 0x4496FF);
MakeWord(0x4496FF);
MakeUnkn(0x449704, 1);
MakeNameEx(0x449704, "VMT_449704_TCustomControlAction", 0);
MakeDword(0x449704);
MakeDword(0x449708);
MakeDword(0x44970C);
MakeDword(0x449710);
MakeDword(0x449714);
MakeDword(0x449718);
MakeDword(0x44971C);
MakeDword(0x449720);
MakeDword(0x449724);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4497A4, 0x4497B9);
MakeDword(0x449728);
MakeDword(0x44972C);
MakeDword(0x449730);
MakeDword(0x449734);
MakeDword(0x449738);
MakeDword(0x44973C);
MakeDword(0x449740);
MakeDword(0x449744);
MakeDword(0x449748);
MakeDword(0x44974C);
MakeComm(0x449750, "'+0'");
MakeDword(0x449750);
MakeComm(0x449754, "'+4'");
MakeDword(0x449754);
MakeComm(0x449758, "'+8'");
MakeDword(0x449758);
MakeComm(0x44975C, "'+C'");
MakeDword(0x44975C);
MakeComm(0x449760, "'+10'");
MakeDword(0x449760);
MakeComm(0x449764, "'+14'");
MakeDword(0x449764);
MakeComm(0x449768, "'+18'");
MakeDword(0x449768);
MakeComm(0x44976C, "'+1C'");
MakeDword(0x44976C);
MakeComm(0x449770, "'+20'");
MakeDword(0x449770);
MakeComm(0x449774, "'+24'");
MakeDword(0x449774);
MakeComm(0x449778, "'+28'");
MakeDword(0x449778);
MakeComm(0x44977C, "'+2C'");
MakeDword(0x44977C);
MakeComm(0x449780, "'+30'");
MakeDword(0x449780);
MakeComm(0x449784, "'+34'");
MakeDword(0x449784);
MakeComm(0x449788, "'+38'");
MakeDword(0x449788);
MakeComm(0x44978C, "'+3C'");
MakeDword(0x44978C);
MakeComm(0x449790, "'+40'");
MakeDword(0x449790);
MakeComm(0x449794, "'+44'");
MakeDword(0x449794);
MakeComm(0x449798, "'+48'");
MakeDword(0x449798);
MakeComm(0x44979C, "'+4C'");
MakeDword(0x44979C);
MakeComm(0x4497A0, "'+50'");
MakeDword(0x4497A0);
MakeUnkn(0x4497BC, 1);
MakeNameEx(0x4497BC, "RTTI_4497BC_Class_TCustomControlAction", 0);
MakeDword(0x4497BC);
MakeUnkn(0x4497C0, 1);
MakeNameEx(0x4497C0, "", 0);
MakeByte(0x4497C0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4497C1, 0x4497D6);
MakeDword(0x4497D6);
MakeDword(0x4497DA);
MakeWord(0x4497DE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4497E0, 0x4497E9);
MakeWord(0x4497E9);
MakeUnkn(0x4497EC, 1);
MakeNameEx(0x4497EC, "VMT_4497EC_TControlActionLink", 0);
MakeDword(0x4497EC);
MakeDword(0x4497F0);
MakeDword(0x4497F4);
MakeDword(0x4497F8);
MakeDword(0x4497FC);
MakeDword(0x449800);
MakeDword(0x449804);
MakeDword(0x449808);
MakeDword(0x44980C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4498CC, 0x4498DF);
MakeDword(0x449810);
MakeDword(0x449814);
MakeDword(0x449818);
MakeDword(0x44981C);
MakeDword(0x449820);
MakeDword(0x449824);
MakeDword(0x449828);
MakeDword(0x44982C);
MakeDword(0x449830);
MakeDword(0x449834);
MakeComm(0x449838, "'+0'");
MakeDword(0x449838);
MakeComm(0x44983C, "'+4'");
MakeDword(0x44983C);
MakeComm(0x449840, "'+8'");
MakeDword(0x449840);
MakeComm(0x449844, "'+C'");
MakeDword(0x449844);
MakeComm(0x449848, "'+10'");
MakeDword(0x449848);
MakeComm(0x44984C, "'+14'");
MakeDword(0x44984C);
MakeComm(0x449850, "'+18'");
MakeDword(0x449850);
MakeComm(0x449854, "'+1C'");
MakeDword(0x449854);
MakeComm(0x449858, "'+20'");
MakeDword(0x449858);
MakeComm(0x44985C, "'+24'");
MakeDword(0x44985C);
MakeComm(0x449860, "'+28'");
MakeDword(0x449860);
MakeComm(0x449864, "'+2C'");
MakeDword(0x449864);
MakeComm(0x449868, "'+30'");
MakeDword(0x449868);
MakeComm(0x44986C, "'+34'");
MakeDword(0x44986C);
MakeComm(0x449870, "'+38'");
MakeDword(0x449870);
MakeComm(0x449874, "'+3C'");
MakeDword(0x449874);
MakeComm(0x449878, "'+40'");
MakeDword(0x449878);
MakeComm(0x44987C, "'+44'");
MakeDword(0x44987C);
MakeComm(0x449880, "'+48'");
MakeDword(0x449880);
MakeComm(0x449884, "'+4C'");
MakeDword(0x449884);
MakeComm(0x449888, "'+50'");
MakeDword(0x449888);
MakeComm(0x44988C, "'+54'");
MakeDword(0x44988C);
MakeComm(0x449890, "'+58'");
MakeDword(0x449890);
MakeComm(0x449894, "'+5C'");
MakeDword(0x449894);
MakeComm(0x449898, "'+60'");
MakeDword(0x449898);
MakeComm(0x44989C, "'+64'");
MakeDword(0x44989C);
MakeComm(0x4498A0, "'+68'");
MakeDword(0x4498A0);
MakeComm(0x4498A4, "'+6C'");
MakeDword(0x4498A4);
MakeComm(0x4498A8, "'+70'");
MakeDword(0x4498A8);
MakeComm(0x4498AC, "'+74'");
MakeDword(0x4498AC);
MakeComm(0x4498B0, "'+78'");
MakeDword(0x4498B0);
MakeComm(0x4498B4, "'+7C'");
MakeDword(0x4498B4);
MakeComm(0x4498B8, "'+80'");
MakeDword(0x4498B8);
MakeComm(0x4498BC, "'+84'");
MakeDword(0x4498BC);
MakeComm(0x4498C0, "'+88'");
MakeDword(0x4498C0);
MakeComm(0x4498C4, "'+8C'");
MakeDword(0x4498C4);
MakeComm(0x4498C8, "'+90'");
MakeDword(0x4498C8);
MakeUnkn(0x4498E0, 1);
MakeNameEx(0x4498E0, "RTTI_4498E0_Enumeration_TMouseButton", 0);
MakeDword(0x4498E0);
MakeUnkn(0x4498E4, 1);
MakeNameEx(0x4498E4, "", 0);
MakeByte(0x4498E4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4498E5, 0x4498F2);
MakeByte(0x4498F2);
MakeDword(0x4498F3);
MakeDword(0x4498F7);
MakeDword(0x4498FB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4498FF, 0x449906);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449906, 0x44990E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44990E, 0x449917);
MakeUnkn(0x449920, 1);
MakeNameEx(0x449920, "RTTI_449920_Enumeration_TMouseActivate", 0);
MakeDword(0x449920);
MakeUnkn(0x449924, 1);
MakeNameEx(0x449924, "", 0);
MakeByte(0x449924);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449925, 0x449934);
MakeByte(0x449934);
MakeDword(0x449935);
MakeDword(0x449939);
MakeDword(0x44993D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449941, 0x44994B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44994B, 0x449956);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449956, 0x449967);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449967, 0x449974);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449974, 0x449987);
MakeUnkn(0x449990, 1);
MakeNameEx(0x449990, "RTTI_449990_Enumeration_TDragMode", 0);
MakeDword(0x449990);
MakeUnkn(0x449994, 1);
MakeNameEx(0x449994, "", 0);
MakeByte(0x449994);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449995, 0x44999F);
MakeByte(0x44999F);
MakeDword(0x4499A0);
MakeDword(0x4499A4);
MakeDword(0x4499A8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4499AC, 0x4499B5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4499B5, 0x4499C1);
MakeUnkn(0x4499CC, 1);
MakeNameEx(0x4499CC, "RTTI_4499CC_Enumeration_TDragState", 0);
MakeDword(0x4499CC);
MakeUnkn(0x4499D0, 1);
MakeNameEx(0x4499D0, "", 0);
MakeByte(0x4499D0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4499D1, 0x4499DC);
MakeByte(0x4499DC);
MakeDword(0x4499DD);
MakeDword(0x4499E1);
MakeDword(0x4499E5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4499E9, 0x4499F5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4499F5, 0x449A01);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449A01, 0x449A0C);
MakeUnkn(0x449A18, 1);
MakeNameEx(0x449A18, "RTTI_449A18_Enumeration_TDragKind", 0);
MakeDword(0x449A18);
MakeUnkn(0x449A1C, 1);
MakeNameEx(0x449A1C, "", 0);
MakeByte(0x449A1C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449A1D, 0x449A27);
MakeByte(0x449A27);
MakeDword(0x449A28);
MakeDword(0x449A2C);
MakeDword(0x449A30);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449A34, 0x449A3B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449A3B, 0x449A42);
MakeUnkn(0x449A4C, 1);
MakeNameEx(0x449A4C, "RTTI_449A4C_Integer_TTabOrder", 0);
MakeDword(0x449A4C);
MakeUnkn(0x449A50, 1);
MakeNameEx(0x449A50, "", 0);
MakeByte(0x449A50);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449A51, 0x449A5B);
MakeByte(0x449A5B);
MakeDword(0x449A5C);
MakeDword(0x449A60);
MakeUnkn(0x449A64, 1);
MakeNameEx(0x449A64, "RTTI_449A64_AnsiString_TCaption", 0);
MakeDword(0x449A64);
MakeUnkn(0x449A68, 1);
MakeNameEx(0x449A68, "", 0);
MakeByte(0x449A68);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449A69, 0x449A72);
MakeUnkn(0x449A74, 1);
MakeNameEx(0x449A74, "RTTI_449A74_Enumeration_TAnchorKind", 0);
MakeDword(0x449A74);
MakeUnkn(0x449A78, 1);
MakeNameEx(0x449A78, "", 0);
MakeByte(0x449A78);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449A79, 0x449A85);
MakeByte(0x449A85);
MakeDword(0x449A86);
MakeDword(0x449A8A);
MakeDword(0x449A8E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449A92, 0x449A99);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449A99, 0x449A9F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449A9F, 0x449AA7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449AA7, 0x449AB0);
MakeUnkn(0x449ABC, 1);
MakeNameEx(0x449ABC, "RTTI_449ABC_Set_TAnchors", 0);
MakeDword(0x449ABC);
MakeUnkn(0x449AC0, 1);
MakeNameEx(0x449AC0, "", 0);
MakeByte(0x449AC0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449AC1, 0x449ACA);
MakeByte(0x449ACA);
MakeDword(0x449ACB);
MakeUnkn(0x449AD0, 1);
MakeNameEx(0x449AD0, "RTTI_449AD0_Integer_TConstraintSize", 0);
MakeDword(0x449AD0);
MakeUnkn(0x449AD4, 1);
MakeNameEx(0x449AD4, "", 0);
MakeByte(0x449AD4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449AD5, 0x449AE5);
MakeByte(0x449AE5);
MakeDword(0x449AE6);
MakeDword(0x449AEA);
MakeUnkn(0x449AF0, 1);
MakeNameEx(0x449AF0, "VMT_449AF0_TSizeConstraints", 0);
MakeDword(0x449AF0);
MakeDword(0x449AF4);
MakeDword(0x449AF8);
MakeDword(0x449AFC);
MakeDword(0x449B00);
MakeDword(0x449B04);
MakeDword(0x449B08);
MakeDword(0x449B0C);
MakeDword(0x449B10);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449B50, 0x449B61);
MakeDword(0x449B14);
MakeDword(0x449B18);
MakeDword(0x449B1C);
MakeDword(0x449B20);
MakeDword(0x449B24);
MakeDword(0x449B28);
MakeDword(0x449B2C);
MakeDword(0x449B30);
MakeDword(0x449B34);
MakeDword(0x449B38);
MakeComm(0x449B3C, "'+0'");
MakeDword(0x449B3C);
MakeComm(0x449B40, "'+4'");
MakeDword(0x449B40);
MakeComm(0x449B44, "'+8'");
MakeDword(0x449B44);
MakeComm(0x449B48, "'+C'");
MakeDword(0x449B48);
MakeComm(0x449B4C, "'+10'");
MakeDword(0x449B4C);
MakeUnkn(0x449B64, 1);
MakeNameEx(0x449B64, "RTTI_449B64_Class_TSizeConstraints", 0);
MakeDword(0x449B64);
MakeUnkn(0x449B68, 1);
MakeNameEx(0x449B68, "", 0);
MakeByte(0x449B68);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449B69, 0x449B7A);
MakeDword(0x449B7A);
MakeDword(0x449B7E);
MakeWord(0x449B82);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449B84, 0x449B8D);
MakeWord(0x449B8D);
MakeDword(0x449B8F);
MakeDword(0x449B93);
MakeDword(0x449B97);
MakeDword(0x449B9B);
MakeDword(0x449B9F);
MakeDword(0x449BA3);
MakeWord(0x449BA7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449BA9, 0x449BB3);
MakeDword(0x449BB3);
MakeDword(0x449BB7);
MakeDword(0x449BBB);
MakeDword(0x449BBF);
MakeDword(0x449BC3);
MakeDword(0x449BC7);
MakeWord(0x449BCB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449BCD, 0x449BD6);
MakeDword(0x449BD6);
MakeDword(0x449BDA);
MakeDword(0x449BDE);
MakeDword(0x449BE2);
MakeDword(0x449BE6);
MakeDword(0x449BEA);
MakeWord(0x449BEE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449BF0, 0x449BFA);
MakeDword(0x449BFA);
MakeDword(0x449BFE);
MakeDword(0x449C02);
MakeDword(0x449C06);
MakeDword(0x449C0A);
MakeDword(0x449C0E);
MakeWord(0x449C12);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449C14, 0x449C1D);
MakeUnkn(0x449C20, 1);
MakeNameEx(0x449C20, "RTTI_449C20_Integer_TMarginSize", 0);
MakeDword(0x449C20);
MakeUnkn(0x449C24, 1);
MakeNameEx(0x449C24, "", 0);
MakeByte(0x449C24);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449C25, 0x449C31);
MakeByte(0x449C31);
MakeDword(0x449C32);
MakeDword(0x449C36);
MakeUnkn(0x449C3C, 1);
MakeNameEx(0x449C3C, "VMT_449C3C_TMargins", 0);
MakeDword(0x449C3C);
MakeDword(0x449C40);
MakeDword(0x449C44);
MakeDword(0x449C48);
MakeDword(0x449C4C);
MakeDword(0x449C50);
MakeDword(0x449C54);
MakeDword(0x449C58);
MakeDword(0x449C5C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449CA4, 0x449CAD);
MakeDword(0x449C60);
MakeDword(0x449C64);
MakeDword(0x449C68);
MakeDword(0x449C6C);
MakeDword(0x449C70);
MakeDword(0x449C74);
MakeDword(0x449C78);
MakeDword(0x449C7C);
MakeDword(0x449C80);
MakeDword(0x449C84);
MakeComm(0x449C88, "'+0'");
MakeDword(0x449C88);
MakeComm(0x449C8C, "'+4'");
MakeDword(0x449C8C);
MakeComm(0x449C90, "'+8'");
MakeDword(0x449C90);
MakeComm(0x449C94, "'+C'");
MakeDword(0x449C94);
MakeComm(0x449C98, "'+10'");
MakeDword(0x449C98);
MakeComm(0x449C9C, "'+14'");
MakeDword(0x449C9C);
MakeComm(0x449CA0, "'+18'");
MakeDword(0x449CA0);
MakeUnkn(0x449CB0, 1);
MakeNameEx(0x449CB0, "RTTI_449CB0_Class_TMargins", 0);
MakeDword(0x449CB0);
MakeUnkn(0x449CB4, 1);
MakeNameEx(0x449CB4, "", 0);
MakeByte(0x449CB4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449CB5, 0x449CBE);
MakeDword(0x449CBE);
MakeDword(0x449CC2);
MakeWord(0x449CC6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449CC8, 0x449CD1);
MakeWord(0x449CD1);
MakeDword(0x449CD3);
MakeDword(0x449CD7);
MakeDword(0x449CDB);
MakeDword(0x449CDF);
MakeDword(0x449CE3);
MakeDword(0x449CE7);
MakeWord(0x449CEB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449CED, 0x449CF2);
MakeDword(0x449CF2);
MakeDword(0x449CF6);
MakeDword(0x449CFA);
MakeDword(0x449CFE);
MakeDword(0x449D02);
MakeDword(0x449D06);
MakeWord(0x449D0A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449D0C, 0x449D10);
MakeDword(0x449D10);
MakeDword(0x449D14);
MakeDword(0x449D18);
MakeDword(0x449D1C);
MakeDword(0x449D20);
MakeDword(0x449D24);
MakeWord(0x449D28);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449D2A, 0x449D30);
MakeDword(0x449D30);
MakeDword(0x449D34);
MakeDword(0x449D38);
MakeDword(0x449D3C);
MakeDword(0x449D40);
MakeDword(0x449D44);
MakeWord(0x449D48);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449D4A, 0x449D51);
MakeUnkn(0x449D54, 1);
MakeNameEx(0x449D54, "VMT_449D54_TPadding", 0);
MakeDword(0x449D54);
MakeDword(0x449D58);
MakeDword(0x449D5C);
MakeDword(0x449D60);
MakeDword(0x449D64);
MakeDword(0x449D68);
MakeDword(0x449D6C);
MakeDword(0x449D70);
MakeDword(0x449D74);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449DBC, 0x449DC5);
MakeDword(0x449D78);
MakeDword(0x449D7C);
MakeDword(0x449D80);
MakeDword(0x449D84);
MakeDword(0x449D88);
MakeDword(0x449D8C);
MakeDword(0x449D90);
MakeDword(0x449D94);
MakeDword(0x449D98);
MakeDword(0x449D9C);
MakeComm(0x449DA0, "'+0'");
MakeDword(0x449DA0);
MakeComm(0x449DA4, "'+4'");
MakeDword(0x449DA4);
MakeComm(0x449DA8, "'+8'");
MakeDword(0x449DA8);
MakeComm(0x449DAC, "'+C'");
MakeDword(0x449DAC);
MakeComm(0x449DB0, "'+10'");
MakeDword(0x449DB0);
MakeComm(0x449DB4, "'+14'");
MakeDword(0x449DB4);
MakeComm(0x449DB8, "'+18'");
MakeDword(0x449DB8);
MakeUnkn(0x449DC8, 1);
MakeNameEx(0x449DC8, "RTTI_449DC8_Class_TPadding", 0);
MakeDword(0x449DC8);
MakeUnkn(0x449DCC, 1);
MakeNameEx(0x449DCC, "", 0);
MakeByte(0x449DCC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449DCD, 0x449DD6);
MakeDword(0x449DD6);
MakeDword(0x449DDA);
MakeWord(0x449DDE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449DE0, 0x449DE9);
MakeWord(0x449DE9);
MakeDword(0x449DEB);
MakeDword(0x449DEF);
MakeDword(0x449DF3);
MakeDword(0x449DF7);
MakeDword(0x449DFB);
MakeDword(0x449DFF);
MakeWord(0x449E03);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449E05, 0x449E0A);
MakeDword(0x449E0A);
MakeDword(0x449E0E);
MakeDword(0x449E12);
MakeDword(0x449E16);
MakeDword(0x449E1A);
MakeDword(0x449E1E);
MakeWord(0x449E22);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449E24, 0x449E28);
MakeDword(0x449E28);
MakeDword(0x449E2C);
MakeDword(0x449E30);
MakeDword(0x449E34);
MakeDword(0x449E38);
MakeDword(0x449E3C);
MakeWord(0x449E40);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449E42, 0x449E48);
MakeDword(0x449E48);
MakeDword(0x449E4C);
MakeDword(0x449E50);
MakeDword(0x449E54);
MakeDword(0x449E58);
MakeDword(0x449E5C);
MakeWord(0x449E60);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449E62, 0x449E69);
MakeUnkn(0x449E6C, 1);
MakeNameEx(0x449E6C, "RTTI_449E6C_Method_TMouseEvent", 0);
MakeDword(0x449E6C);
MakeUnkn(0x449E70, 1);
MakeNameEx(0x449E70, "", 0);
MakeByte(0x449E70);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449E71, 0x449E7D);
MakeByte(0x449E7D);
MakeByte(0x449E7E);
MakeByte(0x449E7F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449E80, 0x449E87);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449E87, 0x449E8F);
MakeByte(0x449E8F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449E90, 0x449E97);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449E97, 0x449EA4);
MakeByte(0x449EA4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449EA5, 0x449EAB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449EAB, 0x449EB7);
MakeByte(0x449EB7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449EB8, 0x449EBA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449EBA, 0x449EC2);
MakeByte(0x449EC2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449EC3, 0x449EC5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449EC5, 0x449ECD);
MakeByte(0x449ECD);
MakeDword(0x449ECE);
MakeDword(0x449ED2);
MakeDword(0x449ED6);
MakeDword(0x449EDA);
MakeDword(0x449EDE);
MakeUnkn(0x449EE4, 1);
MakeNameEx(0x449EE4, "RTTI_449EE4_Method_TMouseMoveEvent", 0);
MakeDword(0x449EE4);
MakeUnkn(0x449EE8, 1);
MakeNameEx(0x449EE8, "", 0);
MakeByte(0x449EE8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449EE9, 0x449EF9);
MakeByte(0x449EF9);
MakeByte(0x449EFA);
MakeByte(0x449EFB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449EFC, 0x449F03);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449F03, 0x449F0B);
MakeByte(0x449F0B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449F0C, 0x449F12);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449F12, 0x449F1E);
MakeByte(0x449F1E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449F1F, 0x449F21);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449F21, 0x449F29);
MakeByte(0x449F29);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449F2A, 0x449F2C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449F2C, 0x449F34);
MakeByte(0x449F34);
MakeDword(0x449F35);
MakeDword(0x449F39);
MakeDword(0x449F3D);
MakeDword(0x449F41);
MakeUnkn(0x449F48, 1);
MakeNameEx(0x449F48, "RTTI_449F48_Method_TMouseActivateEvent", 0);
MakeDword(0x449F48);
MakeUnkn(0x449F4C, 1);
MakeNameEx(0x449F4C, "", 0);
MakeByte(0x449F4C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449F4D, 0x449F61);
MakeByte(0x449F61);
MakeByte(0x449F62);
MakeByte(0x449F63);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449F64, 0x449F6B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449F6B, 0x449F73);
MakeByte(0x449F73);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449F74, 0x449F7B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449F7B, 0x449F88);
MakeByte(0x449F88);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449F89, 0x449F8F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449F8F, 0x449F9B);
MakeByte(0x449F9B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449F9C, 0x449F9E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449F9E, 0x449FA6);
MakeByte(0x449FA6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449FA7, 0x449FA9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449FA9, 0x449FB1);
MakeByte(0x449FB1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449FB2, 0x449FBA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449FBA, 0x449FC2);
MakeByte(0x449FC2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449FC3, 0x449FD1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x449FD1, 0x449FE0);
MakeByte(0x449FE0);
MakeDword(0x449FE1);
MakeDword(0x449FE5);
MakeDword(0x449FE9);
MakeDword(0x449FED);
MakeDword(0x449FF1);
MakeDword(0x449FF5);
MakeDword(0x449FF9);
MakeUnkn(0x44A000, 1);
MakeNameEx(0x44A000, "RTTI_44A000_Method_TKeyEvent", 0);
MakeDword(0x44A000);
MakeUnkn(0x44A004, 1);
MakeNameEx(0x44A004, "", 0);
MakeByte(0x44A004);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A005, 0x44A00F);
MakeByte(0x44A00F);
MakeByte(0x44A010);
MakeByte(0x44A011);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A012, 0x44A019);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A019, 0x44A021);
MakeByte(0x44A021);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A022, 0x44A026);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A026, 0x44A02B);
MakeByte(0x44A02B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A02C, 0x44A032);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A032, 0x44A03E);
MakeByte(0x44A03E);
MakeDword(0x44A03F);
MakeDword(0x44A043);
MakeDword(0x44A047);
MakeUnkn(0x44A04C, 1);
MakeNameEx(0x44A04C, "RTTI_44A04C_Method_TKeyPressEvent", 0);
MakeDword(0x44A04C);
MakeUnkn(0x44A050, 1);
MakeNameEx(0x44A050, "", 0);
MakeByte(0x44A050);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A051, 0x44A060);
MakeByte(0x44A060);
MakeByte(0x44A061);
MakeByte(0x44A062);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A063, 0x44A06A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A06A, 0x44A072);
MakeByte(0x44A072);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A073, 0x44A077);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A077, 0x44A07C);
MakeByte(0x44A07C);
MakeDword(0x44A07D);
MakeDword(0x44A081);
MakeUnkn(0x44A088, 1);
MakeNameEx(0x44A088, "RTTI_44A088_Method_TDragOverEvent", 0);
MakeDword(0x44A088);
MakeUnkn(0x44A08C, 1);
MakeNameEx(0x44A08C, "", 0);
MakeByte(0x44A08C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A08D, 0x44A09C);
MakeByte(0x44A09C);
MakeByte(0x44A09D);
MakeByte(0x44A09E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A09F, 0x44A0A6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A0A6, 0x44A0AE);
MakeByte(0x44A0AE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A0AF, 0x44A0B6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A0B6, 0x44A0BE);
MakeByte(0x44A0BE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A0BF, 0x44A0C1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A0C1, 0x44A0C9);
MakeByte(0x44A0C9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A0CA, 0x44A0CC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A0CC, 0x44A0D4);
MakeByte(0x44A0D4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A0D5, 0x44A0DB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A0DB, 0x44A0E6);
MakeByte(0x44A0E6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A0E7, 0x44A0EE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A0EE, 0x44A0F6);
MakeByte(0x44A0F6);
MakeDword(0x44A0F7);
MakeDword(0x44A0FB);
MakeDword(0x44A0FF);
MakeDword(0x44A103);
MakeDword(0x44A107);
MakeDword(0x44A10B);
MakeUnkn(0x44A110, 1);
MakeNameEx(0x44A110, "RTTI_44A110_Method_TDragDropEvent", 0);
MakeDword(0x44A110);
MakeUnkn(0x44A114, 1);
MakeNameEx(0x44A114, "", 0);
MakeByte(0x44A114);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A115, 0x44A124);
MakeByte(0x44A124);
MakeByte(0x44A125);
MakeByte(0x44A126);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A127, 0x44A12E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A12E, 0x44A136);
MakeByte(0x44A136);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A137, 0x44A13E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A13E, 0x44A146);
MakeByte(0x44A146);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A147, 0x44A149);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A149, 0x44A151);
MakeByte(0x44A151);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A152, 0x44A154);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A154, 0x44A15C);
MakeByte(0x44A15C);
MakeDword(0x44A15D);
MakeDword(0x44A161);
MakeDword(0x44A165);
MakeDword(0x44A169);
MakeUnkn(0x44A170, 1);
MakeNameEx(0x44A170, "RTTI_44A170_Method_TStartDragEvent", 0);
MakeDword(0x44A170);
MakeUnkn(0x44A174, 1);
MakeNameEx(0x44A174, "", 0);
MakeByte(0x44A174);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A175, 0x44A185);
MakeByte(0x44A185);
MakeByte(0x44A186);
MakeByte(0x44A187);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A188, 0x44A18F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A18F, 0x44A197);
MakeByte(0x44A197);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A198, 0x44A1A3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A1A3, 0x44A1AF);
MakeByte(0x44A1AF);
MakeDword(0x44A1B0);
MakeDword(0x44A1B4);
MakeUnkn(0x44A1B8, 1);
MakeNameEx(0x44A1B8, "RTTI_44A1B8_Method_TEndDragEvent", 0);
MakeDword(0x44A1B8);
MakeUnkn(0x44A1BC, 1);
MakeNameEx(0x44A1BC, "", 0);
MakeByte(0x44A1BC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A1BD, 0x44A1CB);
MakeByte(0x44A1CB);
MakeByte(0x44A1CC);
MakeByte(0x44A1CD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A1CE, 0x44A1D5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A1D5, 0x44A1DD);
MakeByte(0x44A1DD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A1DE, 0x44A1E5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A1E5, 0x44A1ED);
MakeByte(0x44A1ED);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A1EE, 0x44A1F0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A1F0, 0x44A1F8);
MakeByte(0x44A1F8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A1F9, 0x44A1FB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A1FB, 0x44A203);
MakeByte(0x44A203);
MakeDword(0x44A204);
MakeDword(0x44A208);
MakeDword(0x44A20C);
MakeDword(0x44A210);
MakeUnkn(0x44A214, 1);
MakeNameEx(0x44A214, "RTTI_44A214_Method_TDockDropEvent", 0);
MakeDword(0x44A214);
MakeUnkn(0x44A218, 1);
MakeNameEx(0x44A218, "", 0);
MakeByte(0x44A218);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A219, 0x44A228);
MakeByte(0x44A228);
MakeByte(0x44A229);
MakeByte(0x44A22A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A22B, 0x44A232);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A232, 0x44A23A);
MakeByte(0x44A23A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A23B, 0x44A242);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A242, 0x44A252);
MakeByte(0x44A252);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A253, 0x44A255);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A255, 0x44A25D);
MakeByte(0x44A25D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A25E, 0x44A260);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A260, 0x44A268);
MakeByte(0x44A268);
MakeDword(0x44A269);
MakeDword(0x44A26D);
MakeDword(0x44A271);
MakeDword(0x44A275);
MakeUnkn(0x44A27C, 1);
MakeNameEx(0x44A27C, "RTTI_44A27C_Method_TDockOverEvent", 0);
MakeDword(0x44A27C);
MakeUnkn(0x44A280, 1);
MakeNameEx(0x44A280, "", 0);
MakeByte(0x44A280);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A281, 0x44A290);
MakeByte(0x44A290);
MakeByte(0x44A291);
MakeByte(0x44A292);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A293, 0x44A29A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A29A, 0x44A2A2);
MakeByte(0x44A2A2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A2A3, 0x44A2AA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A2AA, 0x44A2BA);
MakeByte(0x44A2BA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A2BB, 0x44A2BD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A2BD, 0x44A2C5);
MakeByte(0x44A2C5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A2C6, 0x44A2C8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A2C8, 0x44A2D0);
MakeByte(0x44A2D0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A2D1, 0x44A2D7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A2D7, 0x44A2E2);
MakeByte(0x44A2E2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A2E3, 0x44A2EA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A2EA, 0x44A2F2);
MakeByte(0x44A2F2);
MakeDword(0x44A2F3);
MakeDword(0x44A2F7);
MakeDword(0x44A2FB);
MakeDword(0x44A2FF);
MakeDword(0x44A303);
MakeDword(0x44A307);
MakeUnkn(0x44A30C, 1);
MakeNameEx(0x44A30C, "RTTI_44A30C_Method_TUnDockEvent", 0);
MakeDword(0x44A30C);
MakeUnkn(0x44A310, 1);
MakeNameEx(0x44A310, "", 0);
MakeByte(0x44A310);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A311, 0x44A31E);
MakeByte(0x44A31E);
MakeByte(0x44A31F);
MakeByte(0x44A320);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A321, 0x44A328);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A328, 0x44A330);
MakeByte(0x44A330);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A331, 0x44A338);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A338, 0x44A341);
MakeByte(0x44A341);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A342, 0x44A34C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A34C, 0x44A358);
MakeByte(0x44A358);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A359, 0x44A35F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A35F, 0x44A367);
MakeByte(0x44A367);
MakeDword(0x44A368);
MakeDword(0x44A36C);
MakeDword(0x44A370);
MakeDword(0x44A374);
MakeUnkn(0x44A378, 1);
MakeNameEx(0x44A378, "RTTI_44A378_Method_TStartDockEvent", 0);
MakeDword(0x44A378);
MakeUnkn(0x44A37C, 1);
MakeNameEx(0x44A37C, "", 0);
MakeByte(0x44A37C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A37D, 0x44A38D);
MakeByte(0x44A38D);
MakeByte(0x44A38E);
MakeByte(0x44A38F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A390, 0x44A397);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A397, 0x44A39F);
MakeByte(0x44A39F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A3A0, 0x44A3AB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A3AB, 0x44A3BB);
MakeByte(0x44A3BB);
MakeDword(0x44A3BC);
MakeDword(0x44A3C0);
MakeUnkn(0x44A3C4, 1);
MakeNameEx(0x44A3C4, "RTTI_44A3C4_Method_TGetSiteInfoEvent", 0);
MakeDword(0x44A3C4);
MakeUnkn(0x44A3C8, 1);
MakeNameEx(0x44A3C8, "", 0);
MakeByte(0x44A3C8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A3C9, 0x44A3DB);
MakeByte(0x44A3DB);
MakeByte(0x44A3DC);
MakeByte(0x44A3DD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A3DE, 0x44A3E5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A3E5, 0x44A3ED);
MakeByte(0x44A3ED);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A3EE, 0x44A3F9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A3F9, 0x44A402);
MakeByte(0x44A402);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A403, 0x44A411);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A411, 0x44A417);
MakeByte(0x44A417);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A418, 0x44A421);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A421, 0x44A428);
MakeByte(0x44A428);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A429, 0x44A431);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A431, 0x44A439);
MakeByte(0x44A439);
MakeDword(0x44A43A);
MakeDword(0x44A43E);
MakeDword(0x44A442);
MakeDword(0x44A446);
MakeDword(0x44A44A);
MakeUnkn(0x44A450, 1);
MakeNameEx(0x44A450, "RTTI_44A450_Method_TCanResizeEvent", 0);
MakeDword(0x44A450);
MakeUnkn(0x44A454, 1);
MakeNameEx(0x44A454, "", 0);
MakeByte(0x44A454);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A455, 0x44A465);
MakeByte(0x44A465);
MakeByte(0x44A466);
MakeByte(0x44A467);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A468, 0x44A46F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A46F, 0x44A477);
MakeByte(0x44A477);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A478, 0x44A481);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A481, 0x44A489);
MakeByte(0x44A489);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A48A, 0x44A494);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A494, 0x44A49C);
MakeByte(0x44A49C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A49D, 0x44A4A4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A4A4, 0x44A4AC);
MakeByte(0x44A4AC);
MakeDword(0x44A4AD);
MakeDword(0x44A4B1);
MakeDword(0x44A4B5);
MakeDword(0x44A4B9);
MakeUnkn(0x44A4C0, 1);
MakeNameEx(0x44A4C0, "RTTI_44A4C0_Method_TConstrainedResizeEvent", 0);
MakeDword(0x44A4C0);
MakeUnkn(0x44A4C4, 1);
MakeNameEx(0x44A4C4, "", 0);
MakeByte(0x44A4C4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A4C5, 0x44A4DD);
MakeByte(0x44A4DD);
MakeByte(0x44A4DE);
MakeByte(0x44A4DF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A4E0, 0x44A4E7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A4E7, 0x44A4EF);
MakeByte(0x44A4EF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A4F0, 0x44A4F9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A4F9, 0x44A501);
MakeByte(0x44A501);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A502, 0x44A50C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A50C, 0x44A514);
MakeByte(0x44A514);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A515, 0x44A51E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A51E, 0x44A526);
MakeByte(0x44A526);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A527, 0x44A531);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A531, 0x44A539);
MakeByte(0x44A539);
MakeDword(0x44A53A);
MakeDword(0x44A53E);
MakeDword(0x44A542);
MakeDword(0x44A546);
MakeDword(0x44A54A);
MakeUnkn(0x44A550, 1);
MakeNameEx(0x44A550, "RTTI_44A550_Method_TMouseWheelEvent", 0);
MakeDword(0x44A550);
MakeUnkn(0x44A554, 1);
MakeNameEx(0x44A554, "", 0);
MakeByte(0x44A554);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A555, 0x44A566);
MakeByte(0x44A566);
MakeByte(0x44A567);
MakeByte(0x44A568);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A569, 0x44A570);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A570, 0x44A578);
MakeByte(0x44A578);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A579, 0x44A57F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A57F, 0x44A58B);
MakeByte(0x44A58B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A58C, 0x44A597);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A597, 0x44A59F);
MakeByte(0x44A59F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A5A0, 0x44A5A9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A5A9, 0x44A5B0);
MakeByte(0x44A5B0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A5B1, 0x44A5B9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A5B9, 0x44A5C1);
MakeByte(0x44A5C1);
MakeDword(0x44A5C2);
MakeDword(0x44A5C6);
MakeDword(0x44A5CA);
MakeDword(0x44A5CE);
MakeDword(0x44A5D2);
MakeUnkn(0x44A5D8, 1);
MakeNameEx(0x44A5D8, "RTTI_44A5D8_Method_TMouseWheelUpDownEvent", 0);
MakeDword(0x44A5D8);
MakeUnkn(0x44A5DC, 1);
MakeNameEx(0x44A5DC, "", 0);
MakeByte(0x44A5DC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A5DD, 0x44A5F4);
MakeByte(0x44A5F4);
MakeByte(0x44A5F5);
MakeByte(0x44A5F6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A5F7, 0x44A5FE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A5FE, 0x44A606);
MakeByte(0x44A606);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A607, 0x44A60D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A60D, 0x44A619);
MakeByte(0x44A619);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A61A, 0x44A623);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A623, 0x44A62A);
MakeByte(0x44A62A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A62B, 0x44A633);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A633, 0x44A63B);
MakeByte(0x44A63B);
MakeDword(0x44A63C);
MakeDword(0x44A640);
MakeDword(0x44A644);
MakeDword(0x44A648);
MakeUnkn(0x44A64C, 1);
MakeNameEx(0x44A64C, "RTTI_44A64C_Method_TContextPopupEvent", 0);
MakeDword(0x44A64C);
MakeUnkn(0x44A650, 1);
MakeNameEx(0x44A650, "", 0);
MakeByte(0x44A650);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A651, 0x44A664);
MakeByte(0x44A664);
MakeByte(0x44A665);
MakeByte(0x44A666);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A667, 0x44A66E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A66E, 0x44A676);
MakeByte(0x44A676);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A677, 0x44A680);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A680, 0x44A687);
MakeByte(0x44A687);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A688, 0x44A690);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A690, 0x44A698);
MakeByte(0x44A698);
MakeDword(0x44A699);
MakeDword(0x44A69D);
MakeDword(0x44A6A1);
MakeUnkn(0x44A6A8, 1);
MakeNameEx(0x44A6A8, "VMT_44A6A8_TControl", 0);
MakeDword(0x44A6A8);
MakeDword(0x44A6AC);
MakeDword(0x44A6B0);
MakeDword(0x44A6B4);
MakeUnkn(0x44A784, 1);
MakeNameEx(0x44A784, "TControl_InitTable", 0);
MakeByte(0x44A784);
MakeByte(0x44A785);
MakeDword(0x44A786);
MakeDword(0x44A78A);
MakeDword(0x44A78E);
MakeDword(0x44A792);
MakeDword(0x44A796);
MakeDword(0x44A79A);
MakeDword(0x44A6B8);
MakeDword(0x44A6BC);
MakeDword(0x44A6C0);
MakeDword(0x44A6C4);
MakeUnkn(0x44A79E, 1);
MakeNameEx(0x44A79E, "TControl_DynamicTable", 0);
MakeWord(0x44A79E);
MakeWord(0x44A7A0);
MakeWord(0x44A7A2);
MakeWord(0x44A7A4);
MakeWord(0x44A7A6);
MakeWord(0x44A7A8);
MakeWord(0x44A7AA);
MakeWord(0x44A7AC);
MakeWord(0x44A7AE);
MakeWord(0x44A7B0);
MakeWord(0x44A7B2);
MakeWord(0x44A7B4);
MakeWord(0x44A7B6);
MakeWord(0x44A7B8);
MakeWord(0x44A7BA);
MakeWord(0x44A7BC);
MakeWord(0x44A7BE);
MakeWord(0x44A7C0);
MakeWord(0x44A7C2);
MakeWord(0x44A7C4);
MakeWord(0x44A7C6);
MakeWord(0x44A7C8);
MakeWord(0x44A7CA);
MakeWord(0x44A7CC);
MakeWord(0x44A7CE);
MakeWord(0x44A7D0);
MakeWord(0x44A7D2);
MakeWord(0x44A7D4);
MakeWord(0x44A7D6);
MakeWord(0x44A7D8);
MakeWord(0x44A7DA);
MakeWord(0x44A7DC);
MakeWord(0x44A7DE);
MakeWord(0x44A7E0);
MakeWord(0x44A7E2);
MakeWord(0x44A7E4);
MakeWord(0x44A7E6);
MakeWord(0x44A7E8);
MakeWord(0x44A7EA);
MakeWord(0x44A7EC);
MakeWord(0x44A7EE);
MakeWord(0x44A7F0);
MakeWord(0x44A7F2);
MakeWord(0x44A7F4);
MakeWord(0x44A7F6);
MakeWord(0x44A7F8);
MakeWord(0x44A7FA);
MakeWord(0x44A7FC);
MakeWord(0x44A7FE);
MakeWord(0x44A800);
MakeWord(0x44A802);
MakeWord(0x44A804);
MakeWord(0x44A806);
MakeWord(0x44A808);
MakeWord(0x44A80A);
MakeWord(0x44A80C);
MakeWord(0x44A80E);
MakeWord(0x44A810);
MakeWord(0x44A812);
MakeWord(0x44A814);
MakeWord(0x44A816);
MakeWord(0x44A818);
MakeWord(0x44A81A);
MakeWord(0x44A81C);
MakeWord(0x44A81E);
MakeWord(0x44A820);
MakeWord(0x44A822);
MakeWord(0x44A824);
MakeWord(0x44A826);
MakeWord(0x44A828);
MakeWord(0x44A82A);
MakeWord(0x44A82C);
MakeWord(0x44A82E);
MakeWord(0x44A830);
MakeWord(0x44A832);
MakeWord(0x44A834);
MakeWord(0x44A836);
MakeWord(0x44A838);
MakeDword(0x44A83A);
MakeDword(0x44A83E);
MakeDword(0x44A842);
MakeDword(0x44A846);
MakeDword(0x44A84A);
MakeDword(0x44A84E);
MakeDword(0x44A852);
MakeDword(0x44A856);
MakeDword(0x44A85A);
MakeDword(0x44A85E);
MakeDword(0x44A862);
MakeDword(0x44A866);
MakeDword(0x44A86A);
MakeDword(0x44A86E);
MakeDword(0x44A872);
MakeDword(0x44A876);
MakeDword(0x44A87A);
MakeDword(0x44A87E);
MakeDword(0x44A882);
MakeDword(0x44A886);
MakeDword(0x44A88A);
MakeDword(0x44A88E);
MakeDword(0x44A892);
MakeDword(0x44A896);
MakeDword(0x44A89A);
MakeDword(0x44A89E);
MakeDword(0x44A8A2);
MakeDword(0x44A8A6);
MakeDword(0x44A8AA);
MakeDword(0x44A8AE);
MakeDword(0x44A8B2);
MakeDword(0x44A8B6);
MakeDword(0x44A8BA);
MakeDword(0x44A8BE);
MakeDword(0x44A8C2);
MakeDword(0x44A8C6);
MakeDword(0x44A8CA);
MakeDword(0x44A8CE);
MakeDword(0x44A8D2);
MakeDword(0x44A8D6);
MakeDword(0x44A8DA);
MakeDword(0x44A8DE);
MakeDword(0x44A8E2);
MakeDword(0x44A8E6);
MakeDword(0x44A8EA);
MakeDword(0x44A8EE);
MakeDword(0x44A8F2);
MakeDword(0x44A8F6);
MakeDword(0x44A8FA);
MakeDword(0x44A8FE);
MakeDword(0x44A902);
MakeDword(0x44A906);
MakeDword(0x44A90A);
MakeDword(0x44A90E);
MakeDword(0x44A912);
MakeDword(0x44A916);
MakeDword(0x44A91A);
MakeDword(0x44A91E);
MakeDword(0x44A922);
MakeDword(0x44A926);
MakeDword(0x44A92A);
MakeDword(0x44A92E);
MakeDword(0x44A932);
MakeDword(0x44A936);
MakeDword(0x44A93A);
MakeDword(0x44A93E);
MakeDword(0x44A942);
MakeDword(0x44A946);
MakeDword(0x44A94A);
MakeDword(0x44A94E);
MakeDword(0x44A952);
MakeDword(0x44A956);
MakeDword(0x44A95A);
MakeDword(0x44A95E);
MakeDword(0x44A962);
MakeDword(0x44A966);
MakeDword(0x44A96A);
MakeDword(0x44A6C8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A96E, 0x44A977);
MakeDword(0x44A6CC);
MakeDword(0x44A6D0);
MakeDword(0x44A6D4);
MakeDword(0x44A6D8);
MakeDword(0x44A6DC);
MakeDword(0x44A6E0);
MakeDword(0x44A6E4);
MakeDword(0x44A6E8);
MakeDword(0x44A6EC);
MakeDword(0x44A6F0);
MakeComm(0x44A6F4, "'+0'");
MakeDword(0x44A6F4);
MakeComm(0x44A6F8, "'+4'");
MakeDword(0x44A6F8);
MakeComm(0x44A6FC, "'+8'");
MakeDword(0x44A6FC);
MakeComm(0x44A700, "'+C'");
MakeDword(0x44A700);
MakeComm(0x44A704, "'+10'");
MakeDword(0x44A704);
MakeComm(0x44A708, "'+14'");
MakeDword(0x44A708);
MakeComm(0x44A70C, "'+18'");
MakeDword(0x44A70C);
MakeComm(0x44A710, "'+1C'");
MakeDword(0x44A710);
MakeComm(0x44A714, "'+20'");
MakeDword(0x44A714);
MakeComm(0x44A718, "'+24'");
MakeDword(0x44A718);
MakeComm(0x44A71C, "'+28'");
MakeDword(0x44A71C);
MakeComm(0x44A720, "'+2C'");
MakeDword(0x44A720);
MakeComm(0x44A724, "'+30'");
MakeDword(0x44A724);
MakeComm(0x44A728, "'+34'");
MakeDword(0x44A728);
MakeComm(0x44A72C, "'+38'");
MakeDword(0x44A72C);
MakeComm(0x44A730, "'+3C'");
MakeDword(0x44A730);
MakeComm(0x44A734, "'+40'");
MakeDword(0x44A734);
MakeComm(0x44A738, "'+44'");
MakeDword(0x44A738);
MakeComm(0x44A73C, "'+48'");
MakeDword(0x44A73C);
MakeComm(0x44A740, "'+4C'");
MakeDword(0x44A740);
MakeComm(0x44A744, "'+50'");
MakeDword(0x44A744);
MakeComm(0x44A748, "'+54'");
MakeDword(0x44A748);
MakeComm(0x44A74C, "'+58'");
MakeDword(0x44A74C);
MakeComm(0x44A750, "'+5C'");
MakeDword(0x44A750);
MakeComm(0x44A754, "'+60'");
MakeDword(0x44A754);
MakeComm(0x44A758, "'+64'");
MakeDword(0x44A758);
MakeComm(0x44A75C, "'+68'");
MakeDword(0x44A75C);
MakeComm(0x44A760, "'+6C'");
MakeDword(0x44A760);
MakeComm(0x44A764, "'+70'");
MakeDword(0x44A764);
MakeComm(0x44A768, "'+74'");
MakeDword(0x44A768);
MakeComm(0x44A76C, "'+78'");
MakeDword(0x44A76C);
MakeComm(0x44A770, "'+7C'");
MakeDword(0x44A770);
MakeComm(0x44A774, "'+80'");
MakeDword(0x44A774);
MakeComm(0x44A778, "'+84'");
MakeDword(0x44A778);
MakeComm(0x44A77C, "'+88'");
MakeDword(0x44A77C);
MakeComm(0x44A780, "'+8C'");
MakeDword(0x44A780);
MakeUnkn(0x44A978, 1);
MakeNameEx(0x44A978, "RTTI_44A978_Class_TControl", 0);
MakeDword(0x44A978);
MakeUnkn(0x44A97C, 1);
MakeNameEx(0x44A97C, "", 0);
MakeByte(0x44A97C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A97D, 0x44A986);
MakeDword(0x44A986);
MakeDword(0x44A98A);
MakeWord(0x44A98E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A990, 0x44A999);
MakeWord(0x44A999);
MakeDword(0x44A99B);
MakeDword(0x44A99F);
MakeDword(0x44A9A3);
MakeDword(0x44A9A7);
MakeDword(0x44A9AB);
MakeDword(0x44A9AF);
MakeWord(0x44A9B3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A9B5, 0x44A9C6);
MakeDword(0x44A9C6);
MakeDword(0x44A9CA);
MakeDword(0x44A9CE);
MakeDword(0x44A9D2);
MakeDword(0x44A9D6);
MakeDword(0x44A9DA);
MakeWord(0x44A9DE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A9E0, 0x44A9E5);
MakeDword(0x44A9E5);
MakeDword(0x44A9E9);
MakeDword(0x44A9ED);
MakeDword(0x44A9F1);
MakeDword(0x44A9F5);
MakeDword(0x44A9F9);
MakeWord(0x44A9FD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44A9FF, 0x44AA03);
MakeDword(0x44AA03);
MakeDword(0x44AA07);
MakeDword(0x44AA0B);
MakeDword(0x44AA0F);
MakeDword(0x44AA13);
MakeDword(0x44AA17);
MakeWord(0x44AA1B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AA1D, 0x44AA23);
MakeDword(0x44AA23);
MakeDword(0x44AA27);
MakeDword(0x44AA2B);
MakeDword(0x44AA2F);
MakeDword(0x44AA33);
MakeDword(0x44AA37);
MakeWord(0x44AA3B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AA3D, 0x44AA44);
MakeDword(0x44AA44);
MakeDword(0x44AA48);
MakeDword(0x44AA4C);
MakeDword(0x44AA50);
MakeDword(0x44AA54);
MakeDword(0x44AA58);
MakeWord(0x44AA5C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AA5E, 0x44AA65);
MakeDword(0x44AA65);
MakeDword(0x44AA69);
MakeDword(0x44AA6D);
MakeDword(0x44AA71);
MakeDword(0x44AA75);
MakeDword(0x44AA79);
MakeWord(0x44AA7D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AA7F, 0x44AA84);
MakeDword(0x44AA84);
MakeDword(0x44AA88);
MakeDword(0x44AA8C);
MakeDword(0x44AA90);
MakeDword(0x44AA94);
MakeDword(0x44AA98);
MakeWord(0x44AA9C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AA9E, 0x44AAA7);
MakeDword(0x44AAA7);
MakeDword(0x44AAAB);
MakeDword(0x44AAAF);
MakeDword(0x44AAB3);
MakeDword(0x44AAB7);
MakeDword(0x44AABB);
MakeWord(0x44AABF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AAC1, 0x44AACD);
MakeDword(0x44AACD);
MakeDword(0x44AAD1);
MakeDword(0x44AAD5);
MakeDword(0x44AAD9);
MakeDword(0x44AADD);
MakeDword(0x44AAE1);
MakeWord(0x44AAE5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AAE7, 0x44AAF3);
MakeDword(0x44AAF3);
MakeDword(0x44AAF7);
MakeDword(0x44AAFB);
MakeDword(0x44AAFF);
MakeDword(0x44AB03);
MakeDword(0x44AB07);
MakeWord(0x44AB0B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AB0D, 0x44AB15);
MakeUnkn(0x44AB18, 1);
MakeNameEx(0x44AB18, "VMT_44AB18_TWinControlActionLink", 0);
MakeDword(0x44AB18);
MakeDword(0x44AB1C);
MakeDword(0x44AB20);
MakeDword(0x44AB24);
MakeDword(0x44AB28);
MakeDword(0x44AB2C);
MakeDword(0x44AB30);
MakeDword(0x44AB34);
MakeDword(0x44AB38);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44ABF8, 0x44AC0E);
MakeDword(0x44AB3C);
MakeDword(0x44AB40);
MakeDword(0x44AB44);
MakeDword(0x44AB48);
MakeDword(0x44AB4C);
MakeDword(0x44AB50);
MakeDword(0x44AB54);
MakeDword(0x44AB58);
MakeDword(0x44AB5C);
MakeDword(0x44AB60);
MakeComm(0x44AB64, "'+0'");
MakeDword(0x44AB64);
MakeComm(0x44AB68, "'+4'");
MakeDword(0x44AB68);
MakeComm(0x44AB6C, "'+8'");
MakeDword(0x44AB6C);
MakeComm(0x44AB70, "'+C'");
MakeDword(0x44AB70);
MakeComm(0x44AB74, "'+10'");
MakeDword(0x44AB74);
MakeComm(0x44AB78, "'+14'");
MakeDword(0x44AB78);
MakeComm(0x44AB7C, "'+18'");
MakeDword(0x44AB7C);
MakeComm(0x44AB80, "'+1C'");
MakeDword(0x44AB80);
MakeComm(0x44AB84, "'+20'");
MakeDword(0x44AB84);
MakeComm(0x44AB88, "'+24'");
MakeDword(0x44AB88);
MakeComm(0x44AB8C, "'+28'");
MakeDword(0x44AB8C);
MakeComm(0x44AB90, "'+2C'");
MakeDword(0x44AB90);
MakeComm(0x44AB94, "'+30'");
MakeDword(0x44AB94);
MakeComm(0x44AB98, "'+34'");
MakeDword(0x44AB98);
MakeComm(0x44AB9C, "'+38'");
MakeDword(0x44AB9C);
MakeComm(0x44ABA0, "'+3C'");
MakeDword(0x44ABA0);
MakeComm(0x44ABA4, "'+40'");
MakeDword(0x44ABA4);
MakeComm(0x44ABA8, "'+44'");
MakeDword(0x44ABA8);
MakeComm(0x44ABAC, "'+48'");
MakeDword(0x44ABAC);
MakeComm(0x44ABB0, "'+4C'");
MakeDword(0x44ABB0);
MakeComm(0x44ABB4, "'+50'");
MakeDword(0x44ABB4);
MakeComm(0x44ABB8, "'+54'");
MakeDword(0x44ABB8);
MakeComm(0x44ABBC, "'+58'");
MakeDword(0x44ABBC);
MakeComm(0x44ABC0, "'+5C'");
MakeDword(0x44ABC0);
MakeComm(0x44ABC4, "'+60'");
MakeDword(0x44ABC4);
MakeComm(0x44ABC8, "'+64'");
MakeDword(0x44ABC8);
MakeComm(0x44ABCC, "'+68'");
MakeDword(0x44ABCC);
MakeComm(0x44ABD0, "'+6C'");
MakeDword(0x44ABD0);
MakeComm(0x44ABD4, "'+70'");
MakeDword(0x44ABD4);
MakeComm(0x44ABD8, "'+74'");
MakeDword(0x44ABD8);
MakeComm(0x44ABDC, "'+78'");
MakeDword(0x44ABDC);
MakeComm(0x44ABE0, "'+7C'");
MakeDword(0x44ABE0);
MakeComm(0x44ABE4, "'+80'");
MakeDword(0x44ABE4);
MakeComm(0x44ABE8, "'+84'");
MakeDword(0x44ABE8);
MakeComm(0x44ABEC, "'+88'");
MakeDword(0x44ABEC);
MakeComm(0x44ABF0, "'+8C'");
MakeDword(0x44ABF0);
MakeComm(0x44ABF4, "'+90'");
MakeDword(0x44ABF4);
MakeUnkn(0x44AC10, 1);
MakeNameEx(0x44AC10, "RTTI_44AC10_Enumeration_TImeMode", 0);
MakeDword(0x44AC10);
MakeUnkn(0x44AC14, 1);
MakeNameEx(0x44AC14, "", 0);
MakeByte(0x44AC14);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AC15, 0x44AC1E);
MakeByte(0x44AC1E);
MakeDword(0x44AC1F);
MakeDword(0x44AC23);
MakeDword(0x44AC27);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AC2B, 0x44AC35);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AC35, 0x44AC3D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AC3D, 0x44AC44);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AC44, 0x44AC4F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AC4F, 0x44AC58);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AC58, 0x44AC60);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AC60, 0x44AC67);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AC67, 0x44AC6F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AC6F, 0x44AC76);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AC76, 0x44AC80);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AC80, 0x44AC8B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AC8B, 0x44AC95);
MakeUnkn(0x44ACA0, 1);
MakeNameEx(0x44ACA0, "RTTI_44ACA0_AnsiString_TImeName", 0);
MakeDword(0x44ACA0);
MakeUnkn(0x44ACA4, 1);
MakeNameEx(0x44ACA4, "", 0);
MakeByte(0x44ACA4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44ACA5, 0x44ACAE);
MakeUnkn(0x44ACB0, 1);
MakeNameEx(0x44ACB0, "RTTI_44ACB0_Integer_TBorderWidth", 0);
MakeDword(0x44ACB0);
MakeUnkn(0x44ACB4, 1);
MakeNameEx(0x44ACB4, "", 0);
MakeByte(0x44ACB4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44ACB5, 0x44ACC2);
MakeByte(0x44ACC2);
MakeDword(0x44ACC3);
MakeDword(0x44ACC7);
MakeUnkn(0x44ACCC, 1);
MakeNameEx(0x44ACCC, "RTTI_44ACCC_Enumeration_TBevelCut", 0);
MakeDword(0x44ACCC);
MakeUnkn(0x44ACD0, 1);
MakeNameEx(0x44ACD0, "", 0);
MakeByte(0x44ACD0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44ACD1, 0x44ACDB);
MakeByte(0x44ACDB);
MakeDword(0x44ACDC);
MakeDword(0x44ACE0);
MakeDword(0x44ACE4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44ACE8, 0x44ACEF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44ACEF, 0x44ACF9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44ACF9, 0x44AD02);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AD02, 0x44AD0A);
MakeUnkn(0x44AD14, 1);
MakeNameEx(0x44AD14, "RTTI_44AD14_Enumeration_TBevelEdge", 0);
MakeDword(0x44AD14);
MakeUnkn(0x44AD18, 1);
MakeNameEx(0x44AD18, "", 0);
MakeByte(0x44AD18);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AD19, 0x44AD24);
MakeByte(0x44AD24);
MakeDword(0x44AD25);
MakeDword(0x44AD29);
MakeDword(0x44AD2D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AD31, 0x44AD38);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AD38, 0x44AD3E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AD3E, 0x44AD46);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AD46, 0x44AD4F);
MakeUnkn(0x44AD58, 1);
MakeNameEx(0x44AD58, "RTTI_44AD58_Set_TBevelEdges", 0);
MakeDword(0x44AD58);
MakeUnkn(0x44AD5C, 1);
MakeNameEx(0x44AD5C, "", 0);
MakeByte(0x44AD5C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AD5D, 0x44AD69);
MakeByte(0x44AD69);
MakeDword(0x44AD6A);
MakeUnkn(0x44AD70, 1);
MakeNameEx(0x44AD70, "RTTI_44AD70_Enumeration_TBevelKind", 0);
MakeDword(0x44AD70);
MakeUnkn(0x44AD74, 1);
MakeNameEx(0x44AD74, "", 0);
MakeByte(0x44AD74);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AD75, 0x44AD80);
MakeByte(0x44AD80);
MakeDword(0x44AD81);
MakeDword(0x44AD85);
MakeDword(0x44AD89);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AD8D, 0x44AD94);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AD94, 0x44AD9B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AD9B, 0x44ADA2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44ADA2, 0x44ADA9);
MakeUnkn(0x44ADB4, 1);
MakeNameEx(0x44ADB4, "RTTI_44ADB4_Integer_TBevelWidth", 0);
MakeDword(0x44ADB4);
MakeUnkn(0x44ADB8, 1);
MakeNameEx(0x44ADB8, "", 0);
MakeByte(0x44ADB8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44ADB9, 0x44ADC5);
MakeByte(0x44ADC5);
MakeDword(0x44ADC6);
MakeDword(0x44ADCA);
MakeUnkn(0x44ADD0, 1);
MakeNameEx(0x44ADD0, "RTTI_44ADD0_Interface_IDockManager", 0);
MakeDword(0x44ADD0);
MakeUnkn(0x44ADD4, 1);
MakeNameEx(0x44ADD4, "", 0);
MakeByte(0x44ADD4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44ADD5, 0x44ADE2);
MakeDword(0x44ADE2);
MakeByte(0x44ADE6);
MakeByte(0x44ADE7);
MakeArray(0x44ADE7, 16);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44ADF7, 0x44AE00);
MakeWord(0x44AE00);
MakeWord(0x44AE02);
MakeUnkn(0x44AE04, 1);
MakeNameEx(0x44AE04, "RTTI_44AE04_Method_TAlignInsertBeforeEvent", 0);
MakeDword(0x44AE04);
MakeUnkn(0x44AE08, 1);
MakeNameEx(0x44AE08, "", 0);
MakeByte(0x44AE08);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AE09, 0x44AE21);
MakeByte(0x44AE21);
MakeByte(0x44AE22);
MakeByte(0x44AE23);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AE24, 0x44AE2B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AE2B, 0x44AE37);
MakeByte(0x44AE37);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AE38, 0x44AE3B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AE3B, 0x44AE44);
MakeByte(0x44AE44);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AE45, 0x44AE48);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AE48, 0x44AE51);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AE51, 0x44AE59);
MakeDword(0x44AE59);
MakeByte(0x44AE5D);
MakeDword(0x44AE5E);
MakeDword(0x44AE62);
MakeDword(0x44AE66);
MakeUnkn(0x44AE6C, 1);
MakeNameEx(0x44AE6C, "RTTI_44AE6C_Method_TAlignPositionEvent", 0);
MakeDword(0x44AE6C);
MakeUnkn(0x44AE70, 1);
MakeNameEx(0x44AE70, "", 0);
MakeByte(0x44AE70);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AE71, 0x44AE85);
MakeByte(0x44AE85);
MakeByte(0x44AE86);
MakeByte(0x44AE87);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AE88, 0x44AE8F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AE8F, 0x44AE9B);
MakeByte(0x44AE9B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AE9C, 0x44AEA4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AEA4, 0x44AEAD);
MakeByte(0x44AEAD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AEAE, 0x44AEB6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AEB6, 0x44AEBE);
MakeByte(0x44AEBE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AEBF, 0x44AEC6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AEC6, 0x44AECE);
MakeByte(0x44AECE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AECF, 0x44AED8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AED8, 0x44AEE0);
MakeByte(0x44AEE0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AEE1, 0x44AEEB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AEEB, 0x44AEF3);
MakeByte(0x44AEF3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AEF4, 0x44AEFE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AEFE, 0x44AF04);
MakeByte(0x44AF04);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AF05, 0x44AF0F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44AF0F, 0x44AF1A);
MakeByte(0x44AF1A);
MakeDword(0x44AF1B);
MakeDword(0x44AF1F);
MakeDword(0x44AF23);
MakeDword(0x44AF27);
MakeDword(0x44AF2B);
MakeDword(0x44AF2F);
MakeDword(0x44AF33);
MakeDword(0x44AF37);
MakeUnkn(0x44AF3C, 1);
MakeNameEx(0x44AF3C, "VMT_44AF3C_TWinControl", 0);
MakeDword(0x44AF3C);
MakeDword(0x44AF40);
MakeDword(0x44AF44);
MakeDword(0x44AF48);
MakeUnkn(0x44B060, 1);
MakeNameEx(0x44B060, "TWinControl_InitTable", 0);
MakeByte(0x44B060);
MakeByte(0x44B061);
MakeDword(0x44B062);
MakeDword(0x44B066);
MakeDword(0x44B06A);
MakeDword(0x44B06E);
MakeDword(0x44B072);
MakeDword(0x44B076);
MakeDword(0x44AF4C);
MakeDword(0x44AF50);
MakeDword(0x44AF54);
MakeDword(0x44AF58);
MakeUnkn(0x44B07A, 1);
MakeNameEx(0x44B07A, "TWinControl_DynamicTable", 0);
MakeWord(0x44B07A);
MakeWord(0x44B07C);
MakeWord(0x44B07E);
MakeWord(0x44B080);
MakeWord(0x44B082);
MakeWord(0x44B084);
MakeWord(0x44B086);
MakeWord(0x44B088);
MakeWord(0x44B08A);
MakeWord(0x44B08C);
MakeWord(0x44B08E);
MakeWord(0x44B090);
MakeWord(0x44B092);
MakeWord(0x44B094);
MakeWord(0x44B096);
MakeWord(0x44B098);
MakeWord(0x44B09A);
MakeWord(0x44B09C);
MakeWord(0x44B09E);
MakeWord(0x44B0A0);
MakeWord(0x44B0A2);
MakeWord(0x44B0A4);
MakeWord(0x44B0A6);
MakeWord(0x44B0A8);
MakeWord(0x44B0AA);
MakeWord(0x44B0AC);
MakeWord(0x44B0AE);
MakeWord(0x44B0B0);
MakeWord(0x44B0B2);
MakeWord(0x44B0B4);
MakeWord(0x44B0B6);
MakeWord(0x44B0B8);
MakeWord(0x44B0BA);
MakeWord(0x44B0BC);
MakeWord(0x44B0BE);
MakeWord(0x44B0C0);
MakeWord(0x44B0C2);
MakeWord(0x44B0C4);
MakeWord(0x44B0C6);
MakeWord(0x44B0C8);
MakeWord(0x44B0CA);
MakeWord(0x44B0CC);
MakeWord(0x44B0CE);
MakeWord(0x44B0D0);
MakeWord(0x44B0D2);
MakeWord(0x44B0D4);
MakeWord(0x44B0D6);
MakeWord(0x44B0D8);
MakeWord(0x44B0DA);
MakeWord(0x44B0DC);
MakeWord(0x44B0DE);
MakeWord(0x44B0E0);
MakeWord(0x44B0E2);
MakeWord(0x44B0E4);
MakeWord(0x44B0E6);
MakeWord(0x44B0E8);
MakeWord(0x44B0EA);
MakeWord(0x44B0EC);
MakeWord(0x44B0EE);
MakeWord(0x44B0F0);
MakeWord(0x44B0F2);
MakeWord(0x44B0F4);
MakeWord(0x44B0F6);
MakeWord(0x44B0F8);
MakeWord(0x44B0FA);
MakeWord(0x44B0FC);
MakeWord(0x44B0FE);
MakeWord(0x44B100);
MakeWord(0x44B102);
MakeWord(0x44B104);
MakeWord(0x44B106);
MakeWord(0x44B108);
MakeWord(0x44B10A);
MakeWord(0x44B10C);
MakeWord(0x44B10E);
MakeWord(0x44B110);
MakeWord(0x44B112);
MakeWord(0x44B114);
MakeWord(0x44B116);
MakeWord(0x44B118);
MakeWord(0x44B11A);
MakeWord(0x44B11C);
MakeWord(0x44B11E);
MakeWord(0x44B120);
MakeWord(0x44B122);
MakeWord(0x44B124);
MakeWord(0x44B126);
MakeWord(0x44B128);
MakeWord(0x44B12A);
MakeWord(0x44B12C);
MakeWord(0x44B12E);
MakeWord(0x44B130);
MakeWord(0x44B132);
MakeWord(0x44B134);
MakeWord(0x44B136);
MakeWord(0x44B138);
MakeWord(0x44B13A);
MakeWord(0x44B13C);
MakeWord(0x44B13E);
MakeWord(0x44B140);
MakeWord(0x44B142);
MakeWord(0x44B144);
MakeWord(0x44B146);
MakeWord(0x44B148);
MakeWord(0x44B14A);
MakeWord(0x44B14C);
MakeWord(0x44B14E);
MakeWord(0x44B150);
MakeWord(0x44B152);
MakeWord(0x44B154);
MakeWord(0x44B156);
MakeWord(0x44B158);
MakeDword(0x44B15A);
MakeDword(0x44B15E);
MakeDword(0x44B162);
MakeDword(0x44B166);
MakeDword(0x44B16A);
MakeDword(0x44B16E);
MakeDword(0x44B172);
MakeDword(0x44B176);
MakeDword(0x44B17A);
MakeDword(0x44B17E);
MakeDword(0x44B182);
MakeDword(0x44B186);
MakeDword(0x44B18A);
MakeDword(0x44B18E);
MakeDword(0x44B192);
MakeDword(0x44B196);
MakeDword(0x44B19A);
MakeDword(0x44B19E);
MakeDword(0x44B1A2);
MakeDword(0x44B1A6);
MakeDword(0x44B1AA);
MakeDword(0x44B1AE);
MakeDword(0x44B1B2);
MakeDword(0x44B1B6);
MakeDword(0x44B1BA);
MakeDword(0x44B1BE);
MakeDword(0x44B1C2);
MakeDword(0x44B1C6);
MakeDword(0x44B1CA);
MakeDword(0x44B1CE);
MakeDword(0x44B1D2);
MakeDword(0x44B1D6);
MakeDword(0x44B1DA);
MakeDword(0x44B1DE);
MakeDword(0x44B1E2);
MakeDword(0x44B1E6);
MakeDword(0x44B1EA);
MakeDword(0x44B1EE);
MakeDword(0x44B1F2);
MakeDword(0x44B1F6);
MakeDword(0x44B1FA);
MakeDword(0x44B1FE);
MakeDword(0x44B202);
MakeDword(0x44B206);
MakeDword(0x44B20A);
MakeDword(0x44B20E);
MakeDword(0x44B212);
MakeDword(0x44B216);
MakeDword(0x44B21A);
MakeDword(0x44B21E);
MakeDword(0x44B222);
MakeDword(0x44B226);
MakeDword(0x44B22A);
MakeDword(0x44B22E);
MakeDword(0x44B232);
MakeDword(0x44B236);
MakeDword(0x44B23A);
MakeDword(0x44B23E);
MakeDword(0x44B242);
MakeDword(0x44B246);
MakeDword(0x44B24A);
MakeDword(0x44B24E);
MakeDword(0x44B252);
MakeDword(0x44B256);
MakeDword(0x44B25A);
MakeDword(0x44B25E);
MakeDword(0x44B262);
MakeDword(0x44B266);
MakeDword(0x44B26A);
MakeDword(0x44B26E);
MakeDword(0x44B272);
MakeDword(0x44B276);
MakeDword(0x44B27A);
MakeDword(0x44B27E);
MakeDword(0x44B282);
MakeDword(0x44B286);
MakeDword(0x44B28A);
MakeDword(0x44B28E);
MakeDword(0x44B292);
MakeDword(0x44B296);
MakeDword(0x44B29A);
MakeDword(0x44B29E);
MakeDword(0x44B2A2);
MakeDword(0x44B2A6);
MakeDword(0x44B2AA);
MakeDword(0x44B2AE);
MakeDword(0x44B2B2);
MakeDword(0x44B2B6);
MakeDword(0x44B2BA);
MakeDword(0x44B2BE);
MakeDword(0x44B2C2);
MakeDword(0x44B2C6);
MakeDword(0x44B2CA);
MakeDword(0x44B2CE);
MakeDword(0x44B2D2);
MakeDword(0x44B2D6);
MakeDword(0x44B2DA);
MakeDword(0x44B2DE);
MakeDword(0x44B2E2);
MakeDword(0x44B2E6);
MakeDword(0x44B2EA);
MakeDword(0x44B2EE);
MakeDword(0x44B2F2);
MakeDword(0x44B2F6);
MakeDword(0x44B2FA);
MakeDword(0x44B2FE);
MakeDword(0x44B302);
MakeDword(0x44B306);
MakeDword(0x44B30A);
MakeDword(0x44B30E);
MakeDword(0x44B312);
MakeDword(0x44AF5C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44B316, 0x44B322);
MakeDword(0x44AF60);
MakeDword(0x44AF64);
MakeDword(0x44AF68);
MakeDword(0x44AF6C);
MakeDword(0x44AF70);
MakeDword(0x44AF74);
MakeDword(0x44AF78);
MakeDword(0x44AF7C);
MakeDword(0x44AF80);
MakeDword(0x44AF84);
MakeComm(0x44AF88, "'+0'");
MakeDword(0x44AF88);
MakeComm(0x44AF8C, "'+4'");
MakeDword(0x44AF8C);
MakeComm(0x44AF90, "'+8'");
MakeDword(0x44AF90);
MakeComm(0x44AF94, "'+C'");
MakeDword(0x44AF94);
MakeComm(0x44AF98, "'+10'");
MakeDword(0x44AF98);
MakeComm(0x44AF9C, "'+14'");
MakeDword(0x44AF9C);
MakeComm(0x44AFA0, "'+18'");
MakeDword(0x44AFA0);
MakeComm(0x44AFA4, "'+1C'");
MakeDword(0x44AFA4);
MakeComm(0x44AFA8, "'+20'");
MakeDword(0x44AFA8);
MakeComm(0x44AFAC, "'+24'");
MakeDword(0x44AFAC);
MakeComm(0x44AFB0, "'+28'");
MakeDword(0x44AFB0);
MakeComm(0x44AFB4, "'+2C'");
MakeDword(0x44AFB4);
MakeComm(0x44AFB8, "'+30'");
MakeDword(0x44AFB8);
MakeComm(0x44AFBC, "'+34'");
MakeDword(0x44AFBC);
MakeComm(0x44AFC0, "'+38'");
MakeDword(0x44AFC0);
MakeComm(0x44AFC4, "'+3C'");
MakeDword(0x44AFC4);
MakeComm(0x44AFC8, "'+40'");
MakeDword(0x44AFC8);
MakeComm(0x44AFCC, "'+44'");
MakeDword(0x44AFCC);
MakeComm(0x44AFD0, "'+48'");
MakeDword(0x44AFD0);
MakeComm(0x44AFD4, "'+4C'");
MakeDword(0x44AFD4);
MakeComm(0x44AFD8, "'+50'");
MakeDword(0x44AFD8);
MakeComm(0x44AFDC, "'+54'");
MakeDword(0x44AFDC);
MakeComm(0x44AFE0, "'+58'");
MakeDword(0x44AFE0);
MakeComm(0x44AFE4, "'+5C'");
MakeDword(0x44AFE4);
MakeComm(0x44AFE8, "'+60'");
MakeDword(0x44AFE8);
MakeComm(0x44AFEC, "'+64'");
MakeDword(0x44AFEC);
MakeComm(0x44AFF0, "'+68'");
MakeDword(0x44AFF0);
MakeComm(0x44AFF4, "'+6C'");
MakeDword(0x44AFF4);
MakeComm(0x44AFF8, "'+70'");
MakeDword(0x44AFF8);
MakeComm(0x44AFFC, "'+74'");
MakeDword(0x44AFFC);
MakeComm(0x44B000, "'+78'");
MakeDword(0x44B000);
MakeComm(0x44B004, "'+7C'");
MakeDword(0x44B004);
MakeComm(0x44B008, "'+80'");
MakeDword(0x44B008);
MakeComm(0x44B00C, "'+84'");
MakeDword(0x44B00C);
MakeComm(0x44B010, "'+88'");
MakeDword(0x44B010);
MakeComm(0x44B014, "'+8C'");
MakeDword(0x44B014);
MakeComm(0x44B018, "'+90'");
MakeDword(0x44B018);
MakeComm(0x44B01C, "'+94'");
MakeDword(0x44B01C);
MakeComm(0x44B020, "'+98'");
MakeDword(0x44B020);
MakeComm(0x44B024, "'+9C'");
MakeDword(0x44B024);
MakeComm(0x44B028, "'+A0'");
MakeDword(0x44B028);
MakeComm(0x44B02C, "'+A4'");
MakeDword(0x44B02C);
MakeComm(0x44B030, "'+A8'");
MakeDword(0x44B030);
MakeComm(0x44B034, "'+AC'");
MakeDword(0x44B034);
MakeComm(0x44B038, "'+B0'");
MakeDword(0x44B038);
MakeComm(0x44B03C, "'+B4'");
MakeDword(0x44B03C);
MakeComm(0x44B040, "'+B8'");
MakeDword(0x44B040);
MakeComm(0x44B044, "'+BC'");
MakeDword(0x44B044);
MakeComm(0x44B048, "'+C0'");
MakeDword(0x44B048);
MakeComm(0x44B04C, "'+C4'");
MakeDword(0x44B04C);
MakeComm(0x44B050, "'+C8'");
MakeDword(0x44B050);
MakeComm(0x44B054, "'+CC'");
MakeDword(0x44B054);
MakeComm(0x44B058, "'+D0'");
MakeDword(0x44B058);
MakeComm(0x44B05C, "'+D4'");
MakeDword(0x44B05C);
MakeUnkn(0x44B324, 1);
MakeNameEx(0x44B324, "RTTI_44B324_Class_TWinControl", 0);
MakeDword(0x44B324);
MakeUnkn(0x44B328, 1);
MakeNameEx(0x44B328, "", 0);
MakeByte(0x44B328);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44B329, 0x44B335);
MakeDword(0x44B335);
MakeDword(0x44B339);
MakeWord(0x44B33D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44B33F, 0x44B348);
MakeWord(0x44B348);
MakeUnkn(0x44B34C, 1);
MakeNameEx(0x44B34C, "VMT_44B34C_TGraphicControl", 0);
MakeDword(0x44B34C);
MakeDword(0x44B350);
MakeDword(0x44B354);
MakeDword(0x44B358);
MakeDword(0x44B35C);
MakeDword(0x44B360);
MakeDword(0x44B364);
MakeDword(0x44B368);
MakeUnkn(0x44B42C, 1);
MakeNameEx(0x44B42C, "TGraphicControl_DynamicTable", 0);
MakeWord(0x44B42C);
MakeWord(0x44B42E);
MakeDword(0x44B430);
MakeDword(0x44B36C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44B434, 0x44B444);
MakeDword(0x44B370);
MakeDword(0x44B374);
MakeDword(0x44B378);
MakeDword(0x44B37C);
MakeDword(0x44B380);
MakeDword(0x44B384);
MakeDword(0x44B388);
MakeDword(0x44B38C);
MakeDword(0x44B390);
MakeDword(0x44B394);
MakeComm(0x44B398, "'+0'");
MakeDword(0x44B398);
MakeComm(0x44B39C, "'+4'");
MakeDword(0x44B39C);
MakeComm(0x44B3A0, "'+8'");
MakeDword(0x44B3A0);
MakeComm(0x44B3A4, "'+C'");
MakeDword(0x44B3A4);
MakeComm(0x44B3A8, "'+10'");
MakeDword(0x44B3A8);
MakeComm(0x44B3AC, "'+14'");
MakeDword(0x44B3AC);
MakeComm(0x44B3B0, "'+18'");
MakeDword(0x44B3B0);
MakeComm(0x44B3B4, "'+1C'");
MakeDword(0x44B3B4);
MakeComm(0x44B3B8, "'+20'");
MakeDword(0x44B3B8);
MakeComm(0x44B3BC, "'+24'");
MakeDword(0x44B3BC);
MakeComm(0x44B3C0, "'+28'");
MakeDword(0x44B3C0);
MakeComm(0x44B3C4, "'+2C'");
MakeDword(0x44B3C4);
MakeComm(0x44B3C8, "'+30'");
MakeDword(0x44B3C8);
MakeComm(0x44B3CC, "'+34'");
MakeDword(0x44B3CC);
MakeComm(0x44B3D0, "'+38'");
MakeDword(0x44B3D0);
MakeComm(0x44B3D4, "'+3C'");
MakeDword(0x44B3D4);
MakeComm(0x44B3D8, "'+40'");
MakeDword(0x44B3D8);
MakeComm(0x44B3DC, "'+44'");
MakeDword(0x44B3DC);
MakeComm(0x44B3E0, "'+48'");
MakeDword(0x44B3E0);
MakeComm(0x44B3E4, "'+4C'");
MakeDword(0x44B3E4);
MakeComm(0x44B3E8, "'+50'");
MakeDword(0x44B3E8);
MakeComm(0x44B3EC, "'+54'");
MakeDword(0x44B3EC);
MakeComm(0x44B3F0, "'+58'");
MakeDword(0x44B3F0);
MakeComm(0x44B3F4, "'+5C'");
MakeDword(0x44B3F4);
MakeComm(0x44B3F8, "'+60'");
MakeDword(0x44B3F8);
MakeComm(0x44B3FC, "'+64'");
MakeDword(0x44B3FC);
MakeComm(0x44B400, "'+68'");
MakeDword(0x44B400);
MakeComm(0x44B404, "'+6C'");
MakeDword(0x44B404);
MakeComm(0x44B408, "'+70'");
MakeDword(0x44B408);
MakeComm(0x44B40C, "'+74'");
MakeDword(0x44B40C);
MakeComm(0x44B410, "'+78'");
MakeDword(0x44B410);
MakeComm(0x44B414, "'+7C'");
MakeDword(0x44B414);
MakeComm(0x44B418, "'+80'");
MakeDword(0x44B418);
MakeComm(0x44B41C, "'+84'");
MakeDword(0x44B41C);
MakeComm(0x44B420, "'+88'");
MakeDword(0x44B420);
MakeComm(0x44B424, "'+8C'");
MakeDword(0x44B424);
MakeComm(0x44B428, "'+90'");
MakeDword(0x44B428);
MakeUnkn(0x44B444, 1);
MakeNameEx(0x44B444, "RTTI_44B444_Class_TGraphicControl", 0);
MakeDword(0x44B444);
MakeUnkn(0x44B448, 1);
MakeNameEx(0x44B448, "", 0);
MakeByte(0x44B448);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44B449, 0x44B459);
MakeDword(0x44B459);
MakeDword(0x44B45D);
MakeWord(0x44B461);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44B463, 0x44B46C);
MakeWord(0x44B46C);
MakeUnkn(0x44B470, 1);
MakeNameEx(0x44B470, "VMT_44B470_TCustomControl", 0);
MakeDword(0x44B470);
MakeDword(0x44B474);
MakeDword(0x44B478);
MakeDword(0x44B47C);
MakeDword(0x44B480);
MakeDword(0x44B484);
MakeDword(0x44B488);
MakeDword(0x44B48C);
MakeUnkn(0x44B598, 1);
MakeNameEx(0x44B598, "TCustomControl_DynamicTable", 0);
MakeWord(0x44B598);
MakeWord(0x44B59A);
MakeDword(0x44B59C);
MakeDword(0x44B490);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44B5A0, 0x44B5AF);
MakeDword(0x44B494);
MakeDword(0x44B498);
MakeDword(0x44B49C);
MakeDword(0x44B4A0);
MakeDword(0x44B4A4);
MakeDword(0x44B4A8);
MakeDword(0x44B4AC);
MakeDword(0x44B4B0);
MakeDword(0x44B4B4);
MakeDword(0x44B4B8);
MakeComm(0x44B4BC, "'+0'");
MakeDword(0x44B4BC);
MakeComm(0x44B4C0, "'+4'");
MakeDword(0x44B4C0);
MakeComm(0x44B4C4, "'+8'");
MakeDword(0x44B4C4);
MakeComm(0x44B4C8, "'+C'");
MakeDword(0x44B4C8);
MakeComm(0x44B4CC, "'+10'");
MakeDword(0x44B4CC);
MakeComm(0x44B4D0, "'+14'");
MakeDword(0x44B4D0);
MakeComm(0x44B4D4, "'+18'");
MakeDword(0x44B4D4);
MakeComm(0x44B4D8, "'+1C'");
MakeDword(0x44B4D8);
MakeComm(0x44B4DC, "'+20'");
MakeDword(0x44B4DC);
MakeComm(0x44B4E0, "'+24'");
MakeDword(0x44B4E0);
MakeComm(0x44B4E4, "'+28'");
MakeDword(0x44B4E4);
MakeComm(0x44B4E8, "'+2C'");
MakeDword(0x44B4E8);
MakeComm(0x44B4EC, "'+30'");
MakeDword(0x44B4EC);
MakeComm(0x44B4F0, "'+34'");
MakeDword(0x44B4F0);
MakeComm(0x44B4F4, "'+38'");
MakeDword(0x44B4F4);
MakeComm(0x44B4F8, "'+3C'");
MakeDword(0x44B4F8);
MakeComm(0x44B4FC, "'+40'");
MakeDword(0x44B4FC);
MakeComm(0x44B500, "'+44'");
MakeDword(0x44B500);
MakeComm(0x44B504, "'+48'");
MakeDword(0x44B504);
MakeComm(0x44B508, "'+4C'");
MakeDword(0x44B508);
MakeComm(0x44B50C, "'+50'");
MakeDword(0x44B50C);
MakeComm(0x44B510, "'+54'");
MakeDword(0x44B510);
MakeComm(0x44B514, "'+58'");
MakeDword(0x44B514);
MakeComm(0x44B518, "'+5C'");
MakeDword(0x44B518);
MakeComm(0x44B51C, "'+60'");
MakeDword(0x44B51C);
MakeComm(0x44B520, "'+64'");
MakeDword(0x44B520);
MakeComm(0x44B524, "'+68'");
MakeDword(0x44B524);
MakeComm(0x44B528, "'+6C'");
MakeDword(0x44B528);
MakeComm(0x44B52C, "'+70'");
MakeDword(0x44B52C);
MakeComm(0x44B530, "'+74'");
MakeDword(0x44B530);
MakeComm(0x44B534, "'+78'");
MakeDword(0x44B534);
MakeComm(0x44B538, "'+7C'");
MakeDword(0x44B538);
MakeComm(0x44B53C, "'+80'");
MakeDword(0x44B53C);
MakeComm(0x44B540, "'+84'");
MakeDword(0x44B540);
MakeComm(0x44B544, "'+88'");
MakeDword(0x44B544);
MakeComm(0x44B548, "'+8C'");
MakeDword(0x44B548);
MakeComm(0x44B54C, "'+90'");
MakeDword(0x44B54C);
MakeComm(0x44B550, "'+94'");
MakeDword(0x44B550);
MakeComm(0x44B554, "'+98'");
MakeDword(0x44B554);
MakeComm(0x44B558, "'+9C'");
MakeDword(0x44B558);
MakeComm(0x44B55C, "'+A0'");
MakeDword(0x44B55C);
MakeComm(0x44B560, "'+A4'");
MakeDword(0x44B560);
MakeComm(0x44B564, "'+A8'");
MakeDword(0x44B564);
MakeComm(0x44B568, "'+AC'");
MakeDword(0x44B568);
MakeComm(0x44B56C, "'+B0'");
MakeDword(0x44B56C);
MakeComm(0x44B570, "'+B4'");
MakeDword(0x44B570);
MakeComm(0x44B574, "'+B8'");
MakeDword(0x44B574);
MakeComm(0x44B578, "'+BC'");
MakeDword(0x44B578);
MakeComm(0x44B57C, "'+C0'");
MakeDword(0x44B57C);
MakeComm(0x44B580, "'+C4'");
MakeDword(0x44B580);
MakeComm(0x44B584, "'+C8'");
MakeDword(0x44B584);
MakeComm(0x44B588, "'+CC'");
MakeDword(0x44B588);
MakeComm(0x44B58C, "'+D0'");
MakeDword(0x44B58C);
MakeComm(0x44B590, "'+D4'");
MakeDword(0x44B590);
MakeComm(0x44B594, "'+D8'");
MakeDword(0x44B594);
MakeUnkn(0x44B5B0, 1);
MakeNameEx(0x44B5B0, "RTTI_44B5B0_Class_TCustomControl", 0);
MakeDword(0x44B5B0);
MakeUnkn(0x44B5B4, 1);
MakeNameEx(0x44B5B4, "", 0);
MakeByte(0x44B5B4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44B5B5, 0x44B5C4);
MakeDword(0x44B5C4);
MakeDword(0x44B5C8);
MakeWord(0x44B5CC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44B5CE, 0x44B5D7);
MakeWord(0x44B5D7);
MakeUnkn(0x44B5DC, 1);
MakeNameEx(0x44B5DC, "VMT_44B5DC_THintWindow", 0);
MakeDword(0x44B5DC);
MakeDword(0x44B5E0);
MakeDword(0x44B5E4);
MakeDword(0x44B5E8);
MakeDword(0x44B5EC);
MakeDword(0x44B5F0);
MakeDword(0x44B5F4);
MakeDword(0x44B5F8);
MakeUnkn(0x44B71C, 1);
MakeNameEx(0x44B71C, "THintWindow_DynamicTable", 0);
MakeWord(0x44B71C);
MakeWord(0x44B71E);
MakeWord(0x44B720);
MakeWord(0x44B722);
MakeWord(0x44B724);
MakeDword(0x44B726);
MakeDword(0x44B72A);
MakeDword(0x44B72E);
MakeDword(0x44B732);
MakeDword(0x44B5FC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44B736, 0x44B742);
MakeDword(0x44B600);
MakeDword(0x44B604);
MakeDword(0x44B608);
MakeDword(0x44B60C);
MakeDword(0x44B610);
MakeDword(0x44B614);
MakeDword(0x44B618);
MakeDword(0x44B61C);
MakeDword(0x44B620);
MakeDword(0x44B624);
MakeComm(0x44B628, "'+0'");
MakeDword(0x44B628);
MakeComm(0x44B62C, "'+4'");
MakeDword(0x44B62C);
MakeComm(0x44B630, "'+8'");
MakeDword(0x44B630);
MakeComm(0x44B634, "'+C'");
MakeDword(0x44B634);
MakeComm(0x44B638, "'+10'");
MakeDword(0x44B638);
MakeComm(0x44B63C, "'+14'");
MakeDword(0x44B63C);
MakeComm(0x44B640, "'+18'");
MakeDword(0x44B640);
MakeComm(0x44B644, "'+1C'");
MakeDword(0x44B644);
MakeComm(0x44B648, "'+20'");
MakeDword(0x44B648);
MakeComm(0x44B64C, "'+24'");
MakeDword(0x44B64C);
MakeComm(0x44B650, "'+28'");
MakeDword(0x44B650);
MakeComm(0x44B654, "'+2C'");
MakeDword(0x44B654);
MakeComm(0x44B658, "'+30'");
MakeDword(0x44B658);
MakeComm(0x44B65C, "'+34'");
MakeDword(0x44B65C);
MakeComm(0x44B660, "'+38'");
MakeDword(0x44B660);
MakeComm(0x44B664, "'+3C'");
MakeDword(0x44B664);
MakeComm(0x44B668, "'+40'");
MakeDword(0x44B668);
MakeComm(0x44B66C, "'+44'");
MakeDword(0x44B66C);
MakeComm(0x44B670, "'+48'");
MakeDword(0x44B670);
MakeComm(0x44B674, "'+4C'");
MakeDword(0x44B674);
MakeComm(0x44B678, "'+50'");
MakeDword(0x44B678);
MakeComm(0x44B67C, "'+54'");
MakeDword(0x44B67C);
MakeComm(0x44B680, "'+58'");
MakeDword(0x44B680);
MakeComm(0x44B684, "'+5C'");
MakeDword(0x44B684);
MakeComm(0x44B688, "'+60'");
MakeDword(0x44B688);
MakeComm(0x44B68C, "'+64'");
MakeDword(0x44B68C);
MakeComm(0x44B690, "'+68'");
MakeDword(0x44B690);
MakeComm(0x44B694, "'+6C'");
MakeDword(0x44B694);
MakeComm(0x44B698, "'+70'");
MakeDword(0x44B698);
MakeComm(0x44B69C, "'+74'");
MakeDword(0x44B69C);
MakeComm(0x44B6A0, "'+78'");
MakeDword(0x44B6A0);
MakeComm(0x44B6A4, "'+7C'");
MakeDword(0x44B6A4);
MakeComm(0x44B6A8, "'+80'");
MakeDword(0x44B6A8);
MakeComm(0x44B6AC, "'+84'");
MakeDword(0x44B6AC);
MakeComm(0x44B6B0, "'+88'");
MakeDword(0x44B6B0);
MakeComm(0x44B6B4, "'+8C'");
MakeDword(0x44B6B4);
MakeComm(0x44B6B8, "'+90'");
MakeDword(0x44B6B8);
MakeComm(0x44B6BC, "'+94'");
MakeDword(0x44B6BC);
MakeComm(0x44B6C0, "'+98'");
MakeDword(0x44B6C0);
MakeComm(0x44B6C4, "'+9C'");
MakeDword(0x44B6C4);
MakeComm(0x44B6C8, "'+A0'");
MakeDword(0x44B6C8);
MakeComm(0x44B6CC, "'+A4'");
MakeDword(0x44B6CC);
MakeComm(0x44B6D0, "'+A8'");
MakeDword(0x44B6D0);
MakeComm(0x44B6D4, "'+AC'");
MakeDword(0x44B6D4);
MakeComm(0x44B6D8, "'+B0'");
MakeDword(0x44B6D8);
MakeComm(0x44B6DC, "'+B4'");
MakeDword(0x44B6DC);
MakeComm(0x44B6E0, "'+B8'");
MakeDword(0x44B6E0);
MakeComm(0x44B6E4, "'+BC'");
MakeDword(0x44B6E4);
MakeComm(0x44B6E8, "'+C0'");
MakeDword(0x44B6E8);
MakeComm(0x44B6EC, "'+C4'");
MakeDword(0x44B6EC);
MakeComm(0x44B6F0, "'+C8'");
MakeDword(0x44B6F0);
MakeComm(0x44B6F4, "'+CC'");
MakeDword(0x44B6F4);
MakeComm(0x44B6F8, "'+D0'");
MakeDword(0x44B6F8);
MakeComm(0x44B6FC, "'+D4'");
MakeDword(0x44B6FC);
MakeComm(0x44B700, "'+D8'");
MakeDword(0x44B700);
MakeComm(0x44B704, "'+DC'");
MakeDword(0x44B704);
MakeComm(0x44B708, "'+E0'");
MakeDword(0x44B708);
MakeComm(0x44B70C, "'+E4'");
MakeDword(0x44B70C);
MakeComm(0x44B710, "'+E8'");
MakeDword(0x44B710);
MakeComm(0x44B714, "'+EC'");
MakeDword(0x44B714);
MakeComm(0x44B718, "'+F0'");
MakeDword(0x44B718);
MakeUnkn(0x44B744, 1);
MakeNameEx(0x44B744, "RTTI_44B744_Class_THintWindow", 0);
MakeDword(0x44B744);
MakeUnkn(0x44B748, 1);
MakeNameEx(0x44B748, "", 0);
MakeByte(0x44B748);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44B749, 0x44B755);
MakeDword(0x44B755);
MakeDword(0x44B759);
MakeWord(0x44B75D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44B75F, 0x44B768);
MakeWord(0x44B768);
MakeUnkn(0x44B76C, 1);
MakeNameEx(0x44B76C, "VMT_44B76C_TDragImageList", 0);
MakeDword(0x44B76C);
MakeDword(0x44B770);
MakeDword(0x44B774);
MakeDword(0x44B778);
MakeDword(0x44B77C);
MakeDword(0x44B780);
MakeDword(0x44B784);
MakeDword(0x44B788);
MakeDword(0x44B78C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44B7FC, 0x44B80B);
MakeDword(0x44B790);
MakeDword(0x44B794);
MakeDword(0x44B798);
MakeDword(0x44B79C);
MakeDword(0x44B7A0);
MakeDword(0x44B7A4);
MakeDword(0x44B7A8);
MakeDword(0x44B7AC);
MakeDword(0x44B7B0);
MakeDword(0x44B7B4);
MakeComm(0x44B7B8, "'+0'");
MakeDword(0x44B7B8);
MakeComm(0x44B7BC, "'+4'");
MakeDword(0x44B7BC);
MakeComm(0x44B7C0, "'+8'");
MakeDword(0x44B7C0);
MakeComm(0x44B7C4, "'+C'");
MakeDword(0x44B7C4);
MakeComm(0x44B7C8, "'+10'");
MakeDword(0x44B7C8);
MakeComm(0x44B7CC, "'+14'");
MakeDword(0x44B7CC);
MakeComm(0x44B7D0, "'+18'");
MakeDword(0x44B7D0);
MakeComm(0x44B7D4, "'+1C'");
MakeDword(0x44B7D4);
MakeComm(0x44B7D8, "'+20'");
MakeDword(0x44B7D8);
MakeComm(0x44B7DC, "'+24'");
MakeDword(0x44B7DC);
MakeComm(0x44B7E0, "'+28'");
MakeDword(0x44B7E0);
MakeComm(0x44B7E4, "'+2C'");
MakeDword(0x44B7E4);
MakeComm(0x44B7E8, "'+30'");
MakeDword(0x44B7E8);
MakeComm(0x44B7EC, "'+34'");
MakeDword(0x44B7EC);
MakeComm(0x44B7F0, "'+38'");
MakeDword(0x44B7F0);
MakeComm(0x44B7F4, "'+3C'");
MakeDword(0x44B7F4);
MakeComm(0x44B7F8, "'+40'");
MakeDword(0x44B7F8);
MakeUnkn(0x44B80C, 1);
MakeNameEx(0x44B80C, "RTTI_44B80C_Class_TDragImageList", 0);
MakeDword(0x44B80C);
MakeUnkn(0x44B810, 1);
MakeNameEx(0x44B810, "", 0);
MakeByte(0x44B810);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44B811, 0x44B820);
MakeDword(0x44B820);
MakeDword(0x44B824);
MakeWord(0x44B828);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44B82A, 0x44B833);
MakeWord(0x44B833);
MakeUnkn(0x44B838, 1);
MakeNameEx(0x44B838, "VMT_44B838_TImageList", 0);
MakeDword(0x44B838);
MakeDword(0x44B83C);
MakeDword(0x44B840);
MakeDword(0x44B844);
MakeDword(0x44B848);
MakeDword(0x44B84C);
MakeDword(0x44B850);
MakeDword(0x44B854);
MakeDword(0x44B858);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44B8C8, 0x44B8D3);
MakeDword(0x44B85C);
MakeDword(0x44B860);
MakeDword(0x44B864);
MakeDword(0x44B868);
MakeDword(0x44B86C);
MakeDword(0x44B870);
MakeDword(0x44B874);
MakeDword(0x44B878);
MakeDword(0x44B87C);
MakeDword(0x44B880);
MakeComm(0x44B884, "'+0'");
MakeDword(0x44B884);
MakeComm(0x44B888, "'+4'");
MakeDword(0x44B888);
MakeComm(0x44B88C, "'+8'");
MakeDword(0x44B88C);
MakeComm(0x44B890, "'+C'");
MakeDword(0x44B890);
MakeComm(0x44B894, "'+10'");
MakeDword(0x44B894);
MakeComm(0x44B898, "'+14'");
MakeDword(0x44B898);
MakeComm(0x44B89C, "'+18'");
MakeDword(0x44B89C);
MakeComm(0x44B8A0, "'+1C'");
MakeDword(0x44B8A0);
MakeComm(0x44B8A4, "'+20'");
MakeDword(0x44B8A4);
MakeComm(0x44B8A8, "'+24'");
MakeDword(0x44B8A8);
MakeComm(0x44B8AC, "'+28'");
MakeDword(0x44B8AC);
MakeComm(0x44B8B0, "'+2C'");
MakeDword(0x44B8B0);
MakeComm(0x44B8B4, "'+30'");
MakeDword(0x44B8B4);
MakeComm(0x44B8B8, "'+34'");
MakeDword(0x44B8B8);
MakeComm(0x44B8BC, "'+38'");
MakeDword(0x44B8BC);
MakeComm(0x44B8C0, "'+3C'");
MakeDword(0x44B8C0);
MakeComm(0x44B8C4, "'+40'");
MakeDword(0x44B8C4);
MakeUnkn(0x44B8D4, 1);
MakeNameEx(0x44B8D4, "RTTI_44B8D4_Class_TImageList", 0);
MakeDword(0x44B8D4);
MakeUnkn(0x44B8D8, 1);
MakeNameEx(0x44B8D8, "", 0);
MakeByte(0x44B8D8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44B8D9, 0x44B8E4);
MakeDword(0x44B8E4);
MakeDword(0x44B8E8);
MakeWord(0x44B8EC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44B8EE, 0x44B8F7);
MakeWord(0x44B8F7);
MakeDword(0x44B8F9);
MakeDword(0x44B8FD);
MakeDword(0x44B901);
MakeDword(0x44B905);
MakeDword(0x44B909);
MakeDword(0x44B90D);
MakeWord(0x44B911);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44B913, 0x44B91E);
MakeDword(0x44B91E);
MakeDword(0x44B922);
MakeDword(0x44B926);
MakeDword(0x44B92A);
MakeDword(0x44B92E);
MakeDword(0x44B932);
MakeWord(0x44B936);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44B938, 0x44B940);
MakeDword(0x44B940);
MakeDword(0x44B944);
MakeDword(0x44B948);
MakeDword(0x44B94C);
MakeDword(0x44B950);
MakeDword(0x44B954);
MakeWord(0x44B958);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44B95A, 0x44B962);
MakeDword(0x44B962);
MakeDword(0x44B966);
MakeDword(0x44B96A);
MakeDword(0x44B96E);
MakeDword(0x44B972);
MakeDword(0x44B976);
MakeWord(0x44B97A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44B97C, 0x44B989);
MakeDword(0x44B989);
MakeDword(0x44B98D);
MakeDword(0x44B991);
MakeDword(0x44B995);
MakeDword(0x44B999);
MakeDword(0x44B99D);
MakeWord(0x44B9A1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44B9A3, 0x44B9AA);
MakeDword(0x44B9AA);
MakeDword(0x44B9AE);
MakeDword(0x44B9B2);
MakeDword(0x44B9B6);
MakeDword(0x44B9BA);
MakeDword(0x44B9BE);
MakeWord(0x44B9C2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44B9C4, 0x44B9CE);
MakeDword(0x44B9CE);
MakeDword(0x44B9D2);
MakeDword(0x44B9D6);
MakeDword(0x44B9DA);
MakeDword(0x44B9DE);
MakeDword(0x44B9E2);
MakeWord(0x44B9E6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44B9E8, 0x44B9EF);
MakeDword(0x44B9EF);
MakeDword(0x44B9F3);
MakeDword(0x44B9F7);
MakeDword(0x44B9FB);
MakeDword(0x44B9FF);
MakeDword(0x44BA03);
MakeWord(0x44BA07);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44BA09, 0x44BA12);
MakeDword(0x44BA12);
MakeDword(0x44BA16);
MakeDword(0x44BA1A);
MakeDword(0x44BA1E);
MakeDword(0x44BA22);
MakeDword(0x44BA26);
MakeWord(0x44BA2A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44BA2C, 0x44BA38);
MakeDword(0x44BA38);
MakeDword(0x44BA3C);
MakeDword(0x44BA40);
MakeDword(0x44BA44);
MakeDword(0x44BA48);
MakeDword(0x44BA4C);
MakeWord(0x44BA50);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44BA52, 0x44BA58);
MakeUnkn(0x44BA58, 1);
MakeNameEx(0x44BA58, "VMT_44BA58_TDockZone", 0);
MakeDword(0x44BA58);
MakeDword(0x44BA5C);
MakeDword(0x44BA60);
MakeDword(0x44BA64);
MakeDword(0x44BA68);
MakeDword(0x44BA6C);
MakeDword(0x44BA70);
MakeDword(0x44BA74);
MakeDword(0x44BA78);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44BAA4, 0x44BAAE);
MakeDword(0x44BA7C);
MakeDword(0x44BA80);
MakeDword(0x44BA84);
MakeDword(0x44BA88);
MakeDword(0x44BA8C);
MakeDword(0x44BA90);
MakeDword(0x44BA94);
MakeDword(0x44BA98);
MakeDword(0x44BA9C);
MakeDword(0x44BAA0);
MakeUnkn(0x44BBA4, 1);
MakeNameEx(0x44BBA4, "VMT_44BBA4_TDockTree", 0);
MakeDword(0x44BBA4);
MakeDword(0x44BBA8);
MakeUnkn(0x44BB82, 1);
MakeNameEx(0x44BB82, "TDockTree_IntfTable", 0);
MakeDword(0x44BB82);
MakeByte(0x44BB86);
MakeArray(0x44BB86, 16);
MakeDword(0x44BB96);
MakeDword(0x44BB4A);
MakeFunction(0x44BB2C, -1);
MakeCode(0x44BB2C);
MakeDword(0x44BB4E);
MakeFunction(0x44BB36, -1);
MakeCode(0x44BB36);
MakeDword(0x44BB52);
MakeFunction(0x44BB40, -1);
MakeCode(0x44BB40);
MakeDword(0x44BB56);
MakeFunction(0x44BAB1, -1);
MakeCode(0x44BAB1);
MakeDword(0x44BB5A);
MakeFunction(0x44BAB9, -1);
MakeCode(0x44BAB9);
MakeDword(0x44BB5E);
MakeFunction(0x44BAC1, -1);
MakeCode(0x44BAC1);
MakeDword(0x44BB62);
MakeFunction(0x44BAC9, -1);
MakeCode(0x44BAC9);
MakeDword(0x44BB66);
MakeFunction(0x44BAD6, -1);
MakeCode(0x44BAD6);
MakeDword(0x44BB6A);
MakeFunction(0x44BAE3, -1);
MakeCode(0x44BAE3);
MakeDword(0x44BB6E);
MakeFunction(0x44BAF0, -1);
MakeCode(0x44BAF0);
MakeDword(0x44BB72);
MakeFunction(0x44BAFD, -1);
MakeCode(0x44BAFD);
MakeDword(0x44BB76);
MakeFunction(0x44BB0A, -1);
MakeCode(0x44BB0A);
MakeDword(0x44BB7A);
MakeFunction(0x44BB17, -1);
MakeCode(0x44BB17);
MakeDword(0x44BB7E);
MakeFunction(0x44BB24, -1);
MakeCode(0x44BB24);
MakeByte(0x44BAB0);
MakeDword(0x44BB9A);
MakeDword(0x44BB9E);
MakeDword(0x44BBAC);
MakeDword(0x44BBB0);
MakeDword(0x44BBB4);
MakeDword(0x44BBB8);
MakeDword(0x44BBBC);
MakeDword(0x44BBC0);
MakeDword(0x44BBC4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44BC3C, 0x44BC46);
MakeDword(0x44BBC8);
MakeDword(0x44BBCC);
MakeDword(0x44BBD0);
MakeDword(0x44BBD4);
MakeDword(0x44BBD8);
MakeDword(0x44BBDC);
MakeDword(0x44BBE0);
MakeDword(0x44BBE4);
MakeDword(0x44BBE8);
MakeDword(0x44BBEC);
MakeComm(0x44BBF0, "'+0'");
MakeDword(0x44BBF0);
MakeComm(0x44BBF4, "'+4'");
MakeDword(0x44BBF4);
MakeComm(0x44BBF8, "'+8'");
MakeDword(0x44BBF8);
MakeComm(0x44BBFC, "'+C'");
MakeDword(0x44BBFC);
MakeComm(0x44BC00, "'+10'");
MakeDword(0x44BC00);
MakeComm(0x44BC04, "'+14'");
MakeDword(0x44BC04);
MakeComm(0x44BC08, "'+18'");
MakeDword(0x44BC08);
MakeComm(0x44BC0C, "'+1C'");
MakeDword(0x44BC0C);
MakeComm(0x44BC10, "'+20'");
MakeDword(0x44BC10);
MakeComm(0x44BC14, "'+24'");
MakeDword(0x44BC14);
MakeComm(0x44BC18, "'+28'");
MakeDword(0x44BC18);
MakeComm(0x44BC1C, "'+2C'");
MakeDword(0x44BC1C);
MakeComm(0x44BC20, "'+30'");
MakeDword(0x44BC20);
MakeComm(0x44BC24, "'+34'");
MakeDword(0x44BC24);
MakeComm(0x44BC28, "'+38'");
MakeDword(0x44BC28);
MakeComm(0x44BC2C, "'+3C'");
MakeDword(0x44BC2C);
MakeComm(0x44BC30, "'+40'");
MakeDword(0x44BC30);
MakeComm(0x44BC34, "'+44'");
MakeDword(0x44BC34);
MakeComm(0x44BC38, "'+48'");
MakeDword(0x44BC38);
MakeUnkn(0x44BC48, 1);
MakeNameEx(0x44BC48, "VMT_44BC48_TMouse", 0);
MakeDword(0x44BC48);
MakeDword(0x44BC4C);
MakeDword(0x44BC50);
MakeDword(0x44BC54);
MakeDword(0x44BC58);
MakeDword(0x44BC5C);
MakeDword(0x44BC60);
MakeDword(0x44BC64);
MakeDword(0x44BC68);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44BC94, 0x44BC9B);
MakeDword(0x44BC6C);
MakeDword(0x44BC70);
MakeDword(0x44BC74);
MakeDword(0x44BC78);
MakeDword(0x44BC7C);
MakeDword(0x44BC80);
MakeDword(0x44BC84);
MakeDword(0x44BC88);
MakeDword(0x44BC8C);
MakeDword(0x44BC90);
MakeUnkn(0x44BC9C, 1);
MakeNameEx(0x44BC9C, "VMT_44BC9C_TCustomListControl", 0);
MakeDword(0x44BC9C);
MakeDword(0x44BCA0);
MakeDword(0x44BCA4);
MakeDword(0x44BCA8);
MakeDword(0x44BCAC);
MakeDword(0x44BCB0);
MakeDword(0x44BCB4);
MakeDword(0x44BCB8);
MakeDword(0x44BCBC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44BDE8, 0x44BDFB);
MakeDword(0x44BCC0);
MakeDword(0x44BCC4);
MakeDword(0x44BCC8);
MakeDword(0x44BCCC);
MakeDword(0x44BCD0);
MakeDword(0x44BCD4);
MakeDword(0x44BCD8);
MakeDword(0x44BCDC);
MakeDword(0x44BCE0);
MakeDword(0x44BCE4);
MakeComm(0x44BCE8, "'+0'");
MakeDword(0x44BCE8);
MakeComm(0x44BCEC, "'+4'");
MakeDword(0x44BCEC);
MakeComm(0x44BCF0, "'+8'");
MakeDword(0x44BCF0);
MakeComm(0x44BCF4, "'+C'");
MakeDword(0x44BCF4);
MakeComm(0x44BCF8, "'+10'");
MakeDword(0x44BCF8);
MakeComm(0x44BCFC, "'+14'");
MakeDword(0x44BCFC);
MakeComm(0x44BD00, "'+18'");
MakeDword(0x44BD00);
MakeComm(0x44BD04, "'+1C'");
MakeDword(0x44BD04);
MakeComm(0x44BD08, "'+20'");
MakeDword(0x44BD08);
MakeComm(0x44BD0C, "'+24'");
MakeDword(0x44BD0C);
MakeComm(0x44BD10, "'+28'");
MakeDword(0x44BD10);
MakeComm(0x44BD14, "'+2C'");
MakeDword(0x44BD14);
MakeComm(0x44BD18, "'+30'");
MakeDword(0x44BD18);
MakeComm(0x44BD1C, "'+34'");
MakeDword(0x44BD1C);
MakeComm(0x44BD20, "'+38'");
MakeDword(0x44BD20);
MakeComm(0x44BD24, "'+3C'");
MakeDword(0x44BD24);
MakeComm(0x44BD28, "'+40'");
MakeDword(0x44BD28);
MakeComm(0x44BD2C, "'+44'");
MakeDword(0x44BD2C);
MakeComm(0x44BD30, "'+48'");
MakeDword(0x44BD30);
MakeComm(0x44BD34, "'+4C'");
MakeDword(0x44BD34);
MakeComm(0x44BD38, "'+50'");
MakeDword(0x44BD38);
MakeComm(0x44BD3C, "'+54'");
MakeDword(0x44BD3C);
MakeComm(0x44BD40, "'+58'");
MakeDword(0x44BD40);
MakeComm(0x44BD44, "'+5C'");
MakeDword(0x44BD44);
MakeComm(0x44BD48, "'+60'");
MakeDword(0x44BD48);
MakeComm(0x44BD4C, "'+64'");
MakeDword(0x44BD4C);
MakeComm(0x44BD50, "'+68'");
MakeDword(0x44BD50);
MakeComm(0x44BD54, "'+6C'");
MakeDword(0x44BD54);
MakeComm(0x44BD58, "'+70'");
MakeDword(0x44BD58);
MakeComm(0x44BD5C, "'+74'");
MakeDword(0x44BD5C);
MakeComm(0x44BD60, "'+78'");
MakeDword(0x44BD60);
MakeComm(0x44BD64, "'+7C'");
MakeDword(0x44BD64);
MakeComm(0x44BD68, "'+80'");
MakeDword(0x44BD68);
MakeComm(0x44BD6C, "'+84'");
MakeDword(0x44BD6C);
MakeComm(0x44BD70, "'+88'");
MakeDword(0x44BD70);
MakeComm(0x44BD74, "'+8C'");
MakeDword(0x44BD74);
MakeComm(0x44BD78, "'+90'");
MakeDword(0x44BD78);
MakeComm(0x44BD7C, "'+94'");
MakeDword(0x44BD7C);
MakeComm(0x44BD80, "'+98'");
MakeDword(0x44BD80);
MakeComm(0x44BD84, "'+9C'");
MakeDword(0x44BD84);
MakeComm(0x44BD88, "'+A0'");
MakeDword(0x44BD88);
MakeComm(0x44BD8C, "'+A4'");
MakeDword(0x44BD8C);
MakeComm(0x44BD90, "'+A8'");
MakeDword(0x44BD90);
MakeComm(0x44BD94, "'+AC'");
MakeDword(0x44BD94);
MakeComm(0x44BD98, "'+B0'");
MakeDword(0x44BD98);
MakeComm(0x44BD9C, "'+B4'");
MakeDword(0x44BD9C);
MakeComm(0x44BDA0, "'+B8'");
MakeDword(0x44BDA0);
MakeComm(0x44BDA4, "'+BC'");
MakeDword(0x44BDA4);
MakeComm(0x44BDA8, "'+C0'");
MakeDword(0x44BDA8);
MakeComm(0x44BDAC, "'+C4'");
MakeDword(0x44BDAC);
MakeComm(0x44BDB0, "'+C8'");
MakeDword(0x44BDB0);
MakeComm(0x44BDB4, "'+CC'");
MakeDword(0x44BDB4);
MakeComm(0x44BDB8, "'+D0'");
MakeDword(0x44BDB8);
MakeComm(0x44BDBC, "'+D4'");
MakeDword(0x44BDBC);
MakeComm(0x44BDC0, "'+D8'");
MakeDword(0x44BDC0);
MakeComm(0x44BDC4, "'+DC'");
MakeDword(0x44BDC4);
MakeComm(0x44BDC8, "'+E0'");
MakeDword(0x44BDC8);
MakeComm(0x44BDCC, "'+E4'");
MakeDword(0x44BDCC);
MakeComm(0x44BDD0, "'+E8'");
MakeDword(0x44BDD0);
MakeComm(0x44BDD4, "'+EC'");
MakeDword(0x44BDD4);
MakeComm(0x44BDD8, "'+F0'");
MakeDword(0x44BDD8);
MakeComm(0x44BDDC, "'+F4'");
MakeDword(0x44BDDC);
MakeComm(0x44BDE0, "'+F8'");
MakeDword(0x44BDE0);
MakeComm(0x44BDE4, "'+FC'");
MakeDword(0x44BDE4);
MakeUnkn(0x44BDFC, 1);
MakeNameEx(0x44BDFC, "RTTI_44BDFC_Class_TCustomListControl", 0);
MakeDword(0x44BDFC);
MakeUnkn(0x44BE00, 1);
MakeNameEx(0x44BE00, "", 0);
MakeByte(0x44BE00);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44BE01, 0x44BE14);
MakeDword(0x44BE14);
MakeDword(0x44BE18);
MakeWord(0x44BE1C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44BE1E, 0x44BE27);
MakeWord(0x44BE27);
MakeUnkn(0x44BE2C, 1);
MakeNameEx(0x44BE2C, "VMT_44BE2C_TCustomMultiSelectListControl", 0);
MakeDword(0x44BE2C);
MakeDword(0x44BE30);
MakeDword(0x44BE34);
MakeDword(0x44BE38);
MakeDword(0x44BE3C);
MakeDword(0x44BE40);
MakeDword(0x44BE44);
MakeDword(0x44BE48);
MakeDword(0x44BE4C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44BF80, 0x44BF9E);
MakeDword(0x44BE50);
MakeDword(0x44BE54);
MakeDword(0x44BE58);
MakeDword(0x44BE5C);
MakeDword(0x44BE60);
MakeDword(0x44BE64);
MakeDword(0x44BE68);
MakeDword(0x44BE6C);
MakeDword(0x44BE70);
MakeDword(0x44BE74);
MakeComm(0x44BE78, "'+0'");
MakeDword(0x44BE78);
MakeComm(0x44BE7C, "'+4'");
MakeDword(0x44BE7C);
MakeComm(0x44BE80, "'+8'");
MakeDword(0x44BE80);
MakeComm(0x44BE84, "'+C'");
MakeDword(0x44BE84);
MakeComm(0x44BE88, "'+10'");
MakeDword(0x44BE88);
MakeComm(0x44BE8C, "'+14'");
MakeDword(0x44BE8C);
MakeComm(0x44BE90, "'+18'");
MakeDword(0x44BE90);
MakeComm(0x44BE94, "'+1C'");
MakeDword(0x44BE94);
MakeComm(0x44BE98, "'+20'");
MakeDword(0x44BE98);
MakeComm(0x44BE9C, "'+24'");
MakeDword(0x44BE9C);
MakeComm(0x44BEA0, "'+28'");
MakeDword(0x44BEA0);
MakeComm(0x44BEA4, "'+2C'");
MakeDword(0x44BEA4);
MakeComm(0x44BEA8, "'+30'");
MakeDword(0x44BEA8);
MakeComm(0x44BEAC, "'+34'");
MakeDword(0x44BEAC);
MakeComm(0x44BEB0, "'+38'");
MakeDword(0x44BEB0);
MakeComm(0x44BEB4, "'+3C'");
MakeDword(0x44BEB4);
MakeComm(0x44BEB8, "'+40'");
MakeDword(0x44BEB8);
MakeComm(0x44BEBC, "'+44'");
MakeDword(0x44BEBC);
MakeComm(0x44BEC0, "'+48'");
MakeDword(0x44BEC0);
MakeComm(0x44BEC4, "'+4C'");
MakeDword(0x44BEC4);
MakeComm(0x44BEC8, "'+50'");
MakeDword(0x44BEC8);
MakeComm(0x44BECC, "'+54'");
MakeDword(0x44BECC);
MakeComm(0x44BED0, "'+58'");
MakeDword(0x44BED0);
MakeComm(0x44BED4, "'+5C'");
MakeDword(0x44BED4);
MakeComm(0x44BED8, "'+60'");
MakeDword(0x44BED8);
MakeComm(0x44BEDC, "'+64'");
MakeDword(0x44BEDC);
MakeComm(0x44BEE0, "'+68'");
MakeDword(0x44BEE0);
MakeComm(0x44BEE4, "'+6C'");
MakeDword(0x44BEE4);
MakeComm(0x44BEE8, "'+70'");
MakeDword(0x44BEE8);
MakeComm(0x44BEEC, "'+74'");
MakeDword(0x44BEEC);
MakeComm(0x44BEF0, "'+78'");
MakeDword(0x44BEF0);
MakeComm(0x44BEF4, "'+7C'");
MakeDword(0x44BEF4);
MakeComm(0x44BEF8, "'+80'");
MakeDword(0x44BEF8);
MakeComm(0x44BEFC, "'+84'");
MakeDword(0x44BEFC);
MakeComm(0x44BF00, "'+88'");
MakeDword(0x44BF00);
MakeComm(0x44BF04, "'+8C'");
MakeDword(0x44BF04);
MakeComm(0x44BF08, "'+90'");
MakeDword(0x44BF08);
MakeComm(0x44BF0C, "'+94'");
MakeDword(0x44BF0C);
MakeComm(0x44BF10, "'+98'");
MakeDword(0x44BF10);
MakeComm(0x44BF14, "'+9C'");
MakeDword(0x44BF14);
MakeComm(0x44BF18, "'+A0'");
MakeDword(0x44BF18);
MakeComm(0x44BF1C, "'+A4'");
MakeDword(0x44BF1C);
MakeComm(0x44BF20, "'+A8'");
MakeDword(0x44BF20);
MakeComm(0x44BF24, "'+AC'");
MakeDword(0x44BF24);
MakeComm(0x44BF28, "'+B0'");
MakeDword(0x44BF28);
MakeComm(0x44BF2C, "'+B4'");
MakeDword(0x44BF2C);
MakeComm(0x44BF30, "'+B8'");
MakeDword(0x44BF30);
MakeComm(0x44BF34, "'+BC'");
MakeDword(0x44BF34);
MakeComm(0x44BF38, "'+C0'");
MakeDword(0x44BF38);
MakeComm(0x44BF3C, "'+C4'");
MakeDword(0x44BF3C);
MakeComm(0x44BF40, "'+C8'");
MakeDword(0x44BF40);
MakeComm(0x44BF44, "'+CC'");
MakeDword(0x44BF44);
MakeComm(0x44BF48, "'+D0'");
MakeDword(0x44BF48);
MakeComm(0x44BF4C, "'+D4'");
MakeDword(0x44BF4C);
MakeComm(0x44BF50, "'+D8'");
MakeDword(0x44BF50);
MakeComm(0x44BF54, "'+DC'");
MakeDword(0x44BF54);
MakeComm(0x44BF58, "'+E0'");
MakeDword(0x44BF58);
MakeComm(0x44BF5C, "'+E4'");
MakeDword(0x44BF5C);
MakeComm(0x44BF60, "'+E8'");
MakeDword(0x44BF60);
MakeComm(0x44BF64, "'+EC'");
MakeDword(0x44BF64);
MakeComm(0x44BF68, "'+F0'");
MakeDword(0x44BF68);
MakeComm(0x44BF6C, "'+F4'");
MakeDword(0x44BF6C);
MakeComm(0x44BF70, "'+F8'");
MakeDword(0x44BF70);
MakeComm(0x44BF74, "'+FC'");
MakeDword(0x44BF74);
MakeComm(0x44BF78, "'+100'");
MakeDword(0x44BF78);
MakeComm(0x44BF7C, "'+104'");
MakeDword(0x44BF7C);
MakeUnkn(0x44BFA0, 1);
MakeNameEx(0x44BFA0, "RTTI_44BFA0_Class_TCustomMultiSelectListControl", 0);
MakeDword(0x44BFA0);
MakeUnkn(0x44BFA4, 1);
MakeNameEx(0x44BFA4, "", 0);
MakeByte(0x44BFA4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44BFA5, 0x44BFC3);
MakeDword(0x44BFC3);
MakeDword(0x44BFC7);
MakeWord(0x44BFCB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44BFCD, 0x44BFD6);
MakeWord(0x44BFD6);
MakeUnkn(0x44BFD8, 1);
MakeNameEx(0x44BFD8, "ChangeBiDiModeAlignment", 0x20);
MakeComm(0x44BFD8, "'procedure ChangeBiDiModeAlignment(var Alignment:TAlignment);'");
MakeCode(0x44BFD8);
MakeCode(0x44BFE4);
MakeCode(0x44BFE8);
MakeFunction(0x44BFD8, 0x44BFEC);
MakeUnkn(0x44BFEC, 1);
MakeNameEx(0x44BFEC, "InitWndProc", 0x20);
MakeComm(0x44BFEC, "'function InitWndProc(HWindow:HWND; Message:Longint; WParam:Longint; LParam:Longint):Longint; stdcall;'");
MakeCode(0x44BFEC);
MakeCode(0x44C058);
MakeCode(0x44C09F);
MakeFunction(0x44BFEC, 0x44C0F9);
MakeUnkn(0x44C0FC, 1);
MakeNameEx(0x44C0FC, "ObjectFromHWnd", 0x20);
MakeComm(0x44C0FC, "'function ObjectFromHWnd(Handle:HWND):TWinControl;'");
MakeCode(0x44C0FC);
MakeCode(0x44C128);
MakeFunction(0x44C0FC, 0x44C12D);
MakeUnkn(0x44C130, 1);
MakeNameEx(0x44C130, "FindControl", 0x20);
MakeComm(0x44C130, "'function FindControl(Handle:HWND):TWinControl;'");
MakeCode(0x44C130);
MakeCode(0x44C17B);
MakeCode(0x44C184);
MakeFunction(0x44C130, 0x44C18A);
MakeUnkn(0x44C18C, 1);
MakeNameEx(0x44C18C, "IsVCLControl", 0x20);
MakeComm(0x44C18C, "'function IsVCLControl(Handle:HWND):Boolean;'");
MakeCode(0x44C18C);
MakeCode(0x44C1B7);
MakeFunction(0x44C18C, 0x44C1B9);
MakeUnkn(0x44C1BC, 1);
MakeNameEx(0x44C1BC, "SendAppMessage", 0x20);
MakeComm(0x44C1BC, "'function SendAppMessage(Msg:Cardinal; WParam:Longint; LParam:Longint):Longint;'");
MakeCode(0x44C1BC);
MakeCode(0x44C1DE);
MakeFunction(0x44C1BC, 0x44C1E3);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x44C1EC, -1);
MakeDword(0x44C1E8);
MakeDword(0x44C1E4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x44C200, -1);
MakeDword(0x44C1FC);
MakeDword(0x44C1F8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x44C210, -1);
MakeDword(0x44C20C);
MakeDword(0x44C208);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x44C220, -1);
MakeDword(0x44C21C);
MakeDword(0x44C218);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x44C230, -1);
MakeDword(0x44C22C);
MakeDword(0x44C228);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x44C244, -1);
MakeDword(0x44C240);
MakeDword(0x44C23C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x44C258, -1);
MakeDword(0x44C254);
MakeDword(0x44C250);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x44C26C, -1);
MakeDword(0x44C268);
MakeDword(0x44C264);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x44C280, -1);
MakeDword(0x44C27C);
MakeDword(0x44C278);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x44C294, -1);
MakeDword(0x44C290);
MakeDword(0x44C28C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x44C2A8, -1);
MakeDword(0x44C2A4);
MakeDword(0x44C2A0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x44C2B8, -1);
MakeDword(0x44C2B4);
MakeDword(0x44C2B0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x44C2CC, -1);
MakeDword(0x44C2C8);
MakeDword(0x44C2C4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x44C2E0, -1);
MakeDword(0x44C2DC);
MakeDword(0x44C2D8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x44C2F4, -1);
MakeDword(0x44C2F0);
MakeDword(0x44C2EC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x44C308, -1);
MakeDword(0x44C304);
MakeDword(0x44C300);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x44C31C, -1);
MakeDword(0x44C318);
MakeDword(0x44C314);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x44C32C, -1);
MakeDword(0x44C328);
MakeDword(0x44C324);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x44C340, -1);
MakeDword(0x44C33C);
MakeDword(0x44C338);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x44C350, -1);
MakeDword(0x44C34C);
MakeDword(0x44C348);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x44C364, -1);
MakeDword(0x44C360);
MakeDword(0x44C35C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x44C378, -1);
MakeDword(0x44C374);
MakeDword(0x44C370);
MakeUnkn(0x44C380, 1);
MakeNameEx(0x44C380, "CursorToIdent", 0x20);
MakeComm(0x44C380, "'function CursorToIdent(Cursor:Longint; var Ident:AnsiString):Boolean;'");
MakeCode(0x44C380);
MakeFunction(0x44C380, 0x44C38D);
MakeUnkn(0x44C390, 1);
MakeNameEx(0x44C390, "IdentToCursor", 0x20);
MakeComm(0x44C390, "'function IdentToCursor(const Ident:AnsiString; var Cursor:Longint):Boolean;'");
MakeCode(0x44C390);
MakeFunction(0x44C390, 0x44C39D);
MakeUnkn(0x44C3A0, 1);
MakeNameEx(0x44C3A0, "GetShortHint", 0x20);
MakeComm(0x44C3A0, "'function GetShortHint(const Hint:AnsiString):AnsiString;'");
MakeCode(0x44C3A0);
MakeCode(0x44C3C4);
MakeCode(0x44C3D4);
MakeFunction(0x44C3A0, 0x44C3D8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x44C3E0, -1);
MakeDword(0x44C3DC);
MakeDword(0x44C3D8);
MakeUnkn(0x44C3E4, 1);
MakeNameEx(0x44C3E4, "GetLongHint", 0x20);
MakeComm(0x44C3E4, "'function GetLongHint(const Hint:AnsiString):AnsiString;'");
MakeCode(0x44C3E4);
MakeCode(0x44C408);
MakeCode(0x44C418);
MakeFunction(0x44C3E4, 0x44C41C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x44C424, -1);
MakeDword(0x44C420);
MakeDword(0x44C41C);
MakeUnkn(0x44C428, 1);
MakeNameEx(0x44C428, "PerformEraseBackground", 0x20);
MakeComm(0x44C428, "'procedure PerformEraseBackground(Control:TControl; DC:HDC);'");
MakeCode(0x44C428);
MakeFunction(0x44C428, 0x44C479);
MakeUnkn(0x44C47C, 1);
MakeNameEx(0x44C47C, "GetCaptureControl", 0x20);
MakeComm(0x44C47C, "'function GetCaptureControl:TControl;'");
MakeCode(0x44C47C);
MakeFunction(0x44C47C, 0x44C4A4);
MakeUnkn(0x44C4A4, 1);
MakeNameEx(0x44C4A4, "SetCaptureControl", 0x20);
MakeComm(0x44C4A4, "'procedure SetCaptureControl(Control:TControl);'");
MakeCode(0x44C4A4);
MakeCode(0x44C4D7);
MakeCode(0x44C4E4);
MakeFunction(0x44C4A4, 0x44C4E6);
MakeUnkn(0x44C4E8, 1);
MakeNameEx(0x44C4E8, "VMT_44C4E8_TSiteList", 0);
MakeDword(0x44C4E8);
MakeDword(0x44C4EC);
MakeDword(0x44C4F0);
MakeDword(0x44C4F4);
MakeDword(0x44C4F8);
MakeDword(0x44C4FC);
MakeDword(0x44C500);
MakeDword(0x44C504);
MakeDword(0x44C508);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x44C544, 0x44C54E);
MakeDword(0x44C50C);
MakeDword(0x44C510);
MakeDword(0x44C514);
MakeDword(0x44C518);
MakeDword(0x44C51C);
MakeDword(0x44C520);
MakeDword(0x44C524);
MakeDword(0x44C528);
MakeDword(0x44C52C);
MakeDword(0x44C530);
MakeComm(0x44C534, "'+0'");
MakeDword(0x44C534);
MakeComm(0x44C538, "'+4'");
MakeDword(0x44C538);
MakeComm(0x44C53C, "'+8'");
MakeDword(0x44C53C);
MakeComm(0x44C540, "'+C'");
MakeDword(0x44C540);
MakeUnkn(0x44C550, 1);
MakeNameEx(0x44C550, "TSiteList.Find", 0x20);
MakeComm(0x44C550, "'function TSiteList.Find(ParentWnd:HWND; var Index:Integer):Boolean;'");
MakeCode(0x44C550);
MakeCode(0x44C562);
MakeCode(0x44C577);
MakeCode(0x44C57E);
MakeFunction(0x44C550, 0x44C585);
MakeUnkn(0x44C588, 1);
MakeNameEx(0x44C588, "GetTopParent", 0x20);
MakeComm(0x44C588, "'function GetTopParent:HWND;'");
MakeCode(0x44C588);
MakeCode(0x44C5A0);
MakeCode(0x44C5AE);
MakeFunction(0x44C588, 0x44C5B4);
MakeUnkn(0x44C5B4, 1);
MakeNameEx(0x44C5B4, "TSiteList.AddSite", 0x20);
MakeComm(0x44C5B4, "'procedure TSiteList.AddSite(ASite:TWinControl);'");
MakeCode(0x44C5B4);
MakeCode(0x44C617);
MakeCode(0x44C625);
MakeCode(0x44C62E);
MakeFunction(0x44C5B4, 0x44C635);
MakeUnkn(0x44C638, 1);
MakeNameEx(0x44C638, "TSiteList.Clear", 0x20);
MakeComm(0x44C638, "'procedure TSiteList.Clear;'");
MakeCode(0x44C638);
MakeCode(0x44C648);
MakeCode(0x44C65F);
MakeFunction(0x44C638, 0x44C66A);
MakeUnkn(0x44C66C, 1);
MakeNameEx(0x44C66C, "TSiteList.GetTopSite", 0x20);
MakeComm(0x44C66C, "'function TSiteList.GetTopSite:TWinControl;'");
MakeCode(0x44C66C);
MakeCode(0x44C68B);
MakeCode(0x44C69A);
MakeCode(0x44C6B6);
MakeCode(0x44C6C0);
MakeCode(0x44C6C8);
MakeFunction(0x44C66C, 0x44C6CF);
MakeUnkn(0x44C6D0, 1);
MakeNameEx(0x44C6D0, "TDragObject.Assign", 0x20);
MakeComm(0x44C6D0, "'procedure TDragObject.Assign(Source:TDragObject);'");
MakeCode(0x44C6D0);
MakeFunction(0x44C6D0, 0x44C70D);
MakeUnkn(0x44C710, 1);
MakeNameEx(0x44C710, "TDragObject.Capture", 0x20);
MakeComm(0x44C710, "'function TDragObject.Capture:HWND;'");
MakeCode(0x44C710);
MakeFunction(0x44C710, 0x44C728);
MakeCode(0x44C728);
MakeFunction(0x44C728, 0x44C72F);
MakeUnkn(0x44C730, 1);
MakeNameEx(0x44C730, "TDragObject.GetName", 0x20);
MakeComm(0x44C730, "'function TDragObject.GetName:AnsiString;'");
MakeCode(0x44C730);
MakeFunction(0x44C730, 0x44C757);
MakeUnkn(0x44C758, 1);
MakeNameEx(0x44C758, "TDragObject.ReleaseCapture", 0x20);
MakeComm(0x44C758, "'procedure TDragObject.ReleaseCapture(Handle:HWND);'");
MakeCode(0x44C758);
MakeFunction(0x44C758, 0x44C769);
MakeUnkn(0x44C76C, 1);
MakeNameEx(0x44C76C, "TDragObject.WndProc", 0x20);
MakeComm(0x44C76C, "'procedure TDragObject.WndProc(var Msg:TMessage);'");
MakeCode(0x44C76C);
MakeCode(0x44C7A7);
MakeCode(0x44C7BA);
MakeCode(0x44C7F3);
MakeCode(0x44C7FC);
MakeCode(0x44C805);
MakeCode(0x44C817);
MakeCode(0x44C820);
MakeCode(0x44C835);
MakeCode(0x44C844);
MakeCode(0x44C853);
MakeCode(0x44C861);
MakeCode(0x44C86B);
MakeCode(0x44C880);
MakeCode(0x44C894);
MakeFunction(0x44C76C, 0x44C89B);
MakeCode(0x44C89C);
MakeFunction(0x44C89C, 0x44C89F);
MakeUnkn(0x44C8A0, 1);
MakeNameEx(0x44C8A0, "TDragObject.GetDragCursor", 0x20);
MakeComm(0x44C8A0, "'function TDragObject.GetDragCursor(Accepted:Boolean; X:Integer; Y:Integer):TCursor;'");
MakeCode(0x44C8A0);
MakeCode(0x44C8AD);
MakeCode(0x44C8B1);
MakeFunction(0x44C8A0, 0x44C8B5);
MakeCode(0x44C8B8);
MakeFunction(0x44C8B8, 0x44C8B9);
MakeCode(0x44C8BC);
MakeFunction(0x44C8BC, 0x44C8C2);
MakeCode(0x44C8C4);
MakeFunction(0x44C8C4, 0x44C8C5);
MakeUnkn(0x44C8C8, 1);
MakeNameEx(0x44C8C8, "TDragObject.MainWndProc", 0x20);
MakeComm(0x44C8C8, "'procedure TDragObject.MainWndProc(var Message:TMessage);'");
MakeCode(0x44C8C8);
MakeCode(0x44C8E8);
MakeCode(0x44C8F2);
MakeCode(0x44C90B);
MakeFunction(0x44C8C8, 0x44C911);
MakeUnkn(0x44C914, 1);
MakeNameEx(0x44C914, "TDragObject.AfterConstruction", 0x20);
MakeComm(0x44C914, "'procedure TDragObject.AfterConstruction;'");
MakeCode(0x44C914);
MakeFunction(0x44C914, 0x44C921);
MakeUnkn(0x44C924, 1);
MakeNameEx(0x44C924, "TDragObject.AfterConstruction_0", 0x20);
MakeComm(0x44C924, "'procedure TDragObject.AfterConstruction;'");
MakeCode(0x44C924);
MakeFunction(0x44C924, 0x44C931);
MakeUnkn(0x44C934, 1);
MakeNameEx(0x44C934, "TBaseDragControlObject.Create", 0x20);
MakeComm(0x44C934, "'constructor TBaseDragControlObject.Create(AControl:TControl);'");
MakeCode(0x44C934);
MakeCode(0x44C940);
MakeFunction(0x44C934, 0x44C957);
MakeUnkn(0x44C958, 1);
MakeNameEx(0x44C958, "TBaseDragControlObject.Assign", 0x20);
MakeComm(0x44C958, "'procedure TBaseDragControlObject.Assign(Source:TDragObject);'");
MakeCode(0x44C958);
MakeCode(0x44C97E);
MakeFunction(0x44C958, 0x44C981);
MakeUnkn(0x44C984, 1);
MakeNameEx(0x44C984, "TBaseDragControlObject.EndDrag", 0x20);
MakeComm(0x44C984, "'procedure TBaseDragControlObject.EndDrag(Target:TObject; X:Integer; Y:Integer);'");
MakeCode(0x44C984);
MakeCode(0x44C9A1);
MakeFunction(0x44C984, 0x44C9A7);
MakeUnkn(0x44C9A8, 1);
MakeNameEx(0x44C9A8, "TBaseDragControlObject.Finished", 0x20);
MakeComm(0x44C9A8, "'procedure TBaseDragControlObject.Finished(Target:TObject; X:Integer; Y:Integer; Accepted:Boolean);'");
MakeCode(0x44C9A8);
MakeCode(0x44C9C6);
MakeFunction(0x44C9A8, 0x44C9DA);
MakeUnkn(0x44C9DC, 1);
MakeNameEx(0x44C9DC, "TDragControlObject.GetDragCursor", 0x20);
MakeComm(0x44C9DC, "'function TDragControlObject.GetDragCursor(Accepted:Boolean; X:Integer; Y:Integer):TCursor;'");
MakeCode(0x44C9DC);
MakeCode(0x44C9EC);
MakeCode(0x44C9F0);
MakeFunction(0x44C9DC, 0x44C9F4);
MakeUnkn(0x44C9F4, 1);
MakeNameEx(0x44C9F4, "TDragControlObject.GetDragImages", 0x20);
MakeComm(0x44C9F4, "'function TDragControlObject.GetDragImages:TDragImageList;'");
MakeCode(0x44C9F4);
MakeFunction(0x44C9F4, 0x44C9FD);
MakeUnkn(0x44CA00, 1);
MakeNameEx(0x44CA00, "TDragControlObject.HideDragImage", 0x20);
MakeComm(0x44CA00, "'procedure TDragControlObject.HideDragImage;'");
MakeCode(0x44CA00);
MakeCode(0x44CA1C);
MakeFunction(0x44CA00, 0x44CA1E);
MakeUnkn(0x44CA20, 1);
MakeNameEx(0x44CA20, "TDragControlObject.ShowDragImage", 0x20);
MakeComm(0x44CA20, "'procedure TDragControlObject.ShowDragImage;'");
MakeCode(0x44CA20);
MakeCode(0x44CA3C);
MakeFunction(0x44CA20, 0x44CA3E);
MakeUnkn(0x44CA40, 1);
MakeNameEx(0x44CA40, "TDragControlObjectEx.BeforeDestruction", 0x20);
MakeComm(0x44CA40, "'procedure TDragControlObjectEx.BeforeDestruction;'");
MakeCode(0x44CA40);
MakeFunction(0x44CA40, 0x44CA41);
MakeUnkn(0x44CA44, 1);
MakeNameEx(0x44CA44, "TDragDockObject.Create", 0x20);
MakeComm(0x44CA44, "'constructor TDragDockObject.Create(AControl:TControl);'");
MakeCode(0x44CA44);
MakeCode(0x44CA56);
MakeCode(0x44CAA5);
MakeFunction(0x44CA44, 0x44CAAC);
MakeUnkn(0x44CAAC, 1);
MakeNameEx(0x44CAAC, "TDragDockObject.Destroy", 0x20);
MakeComm(0x44CAAC, "'destructor TDragDockObject.Destroy;'");
MakeCode(0x44CAAC);
MakeCode(0x44CAD6);
MakeFunction(0x44CAAC, 0x44CAD9);
MakeUnkn(0x44CADC, 1);
MakeNameEx(0x44CADC, "TDragDockObject.Assign", 0x20);
MakeComm(0x44CADC, "'procedure TDragDockObject.Assign(Source:TDragObject);'");
MakeCode(0x44CADC);
MakeCode(0x44CB36);
MakeFunction(0x44CADC, 0x44CB3A);
MakeUnkn(0x44CB3C, 1);
MakeNameEx(0x44CB3C, "TDragDockObject.EndDrag", 0x20);
MakeComm(0x44CB3C, "'procedure TDragDockObject.EndDrag(Target:TObject; X:Integer; Y:Integer);'");
MakeCode(0x44CB3C);
MakeFunction(0x44CB3C, 0x44CB57);
MakeUnkn(0x44CB58, 1);
MakeNameEx(0x44CB58, "AbsMin", 0x20);
MakeComm(0x44CB58, "'function AbsMin(Value1:Integer; Value2:Integer):Integer;'");
MakeCode(0x44CB58);
MakeCode(0x44CB77);
MakeFunction(0x44CB58, 0x44CB7C);
MakeUnkn(0x44CB7C, 1);
MakeNameEx(0x44CB7C, "TDragDockObject.AdjustDockRect", 0x20);
MakeComm(0x44CB7C, "'procedure TDragDockObject.AdjustDockRect(ARect:TRect);'");
MakeCode(0x44CB7C);
MakeCode(0x44CB9D);
MakeCode(0x44CBB1);
MakeCode(0x44CBB3);
MakeCode(0x44CBC4);
MakeCode(0x44CBD6);
MakeCode(0x44CBD8);
MakeCode(0x44CBE0);
MakeCode(0x44CBEF);
MakeFunction(0x44CB7C, 0x44CBF6);
MakeUnkn(0x44CBF8, 1);
MakeNameEx(0x44CBF8, "TDragDockObject.DrawDragDockImage", 0x20);
MakeComm(0x44CBF8, "'procedure TDragDockObject.DrawDragDockImage;'");
MakeCode(0x44CBF8);
MakeFunction(0x44CBF8, 0x44CC09);
MakeUnkn(0x44CC0C, 1);
MakeNameEx(0x44CC0C, "TDragDockObject.EraseDragDockImage", 0x20);
MakeComm(0x44CC0C, "'procedure TDragDockObject.EraseDragDockImage;'");
MakeCode(0x44CC0C);
MakeFunction(0x44CC0C, 0x44CC1D);
MakeUnkn(0x44CC20, 1);
MakeNameEx(0x44CC20, "TDragDockObject.GetDragCursor", 0x20);
MakeComm(0x44CC20, "'function TDragDockObject.GetDragCursor(Accepted:Boolean; X:Integer; Y:Integer):TCursor;'");
MakeCode(0x44CC20);
MakeFunction(0x44CC20, 0x44CC29);
MakeCode(0x44CC2C);
MakeFunction(0x44CC2C, 0x44CC2F);
MakeCode(0x44CC30);
MakeFunction(0x44CC30, 0x44CC36);
MakeUnkn(0x44CC38, 1);
MakeNameEx(0x44CC38, "TDragDockObjectEx.BeforeDestruction", 0x20);
MakeComm(0x44CC38, "'procedure TDragDockObjectEx.BeforeDestruction;'");
MakeCode(0x44CC38);
MakeFunction(0x44CC38, 0x44CC39);
MakeUnkn(0x44CC3C, 1);
MakeNameEx(0x44CC3C, "IsBeforeTargetWindow", 0x20);
MakeComm(0x44CC3C, "'function IsBeforeTargetWindow(Window:HWND; Data:Longint):BOOL; stdcall;'");
MakeCode(0x44CC3C);
MakeCode(0x44CC56);
MakeCode(0x44CC7C);
MakeCode(0x44CC8B);
MakeCode(0x44CC99);
MakeCode(0x44CC9C);
MakeFunction(0x44CC3C, 0x44CCA5);
MakeUnkn(0x44CCA8, 1);
MakeNameEx(0x44CCA8, "ValidDockTarget", 0x20);
MakeComm(0x44CCA8, "'function ValidDockTarget(Target:TWinControl):Boolean;'");
MakeCode(0x44CCA8);
MakeCode(0x44CCF0);
MakeCode(0x44CCF2);
MakeCode(0x44CD03);
MakeCode(0x44CD11);
MakeCode(0x44CD13);
MakeCode(0x44CD43);
MakeCode(0x44CD45);
MakeCode(0x44CD58);
MakeCode(0x44CD7D);
MakeCode(0x44CD82);
MakeCode(0x44CE1D);
MakeCode(0x44CE36);
MakeFunction(0x44CCA8, 0x44CE41);
MakeUnkn(0x44CE44, 1);
MakeNameEx(0x44CE44, "IsSiteChildOfClient", 0x20);
MakeComm(0x44CE44, "'function IsSiteChildOfClient:Boolean;'");
MakeCode(0x44CE44);
MakeCode(0x44CE81);
MakeFunction(0x44CE44, 0x44CE85);
MakeUnkn(0x44CE88, 1);
MakeNameEx(0x44CE88, "GetDockSiteAtPos", 0x20);
MakeComm(0x44CE88, "'function GetDockSiteAtPos(MousePos:TPoint; Client:TControl):TWinControl;'");
MakeCode(0x44CE88);
MakeCode(0x44CEED);
MakeCode(0x44CF98);
MakeCode(0x44CFA0);
MakeCode(0x44CFB8);
MakeCode(0x44CFD1);
MakeFunction(0x44CE88, 0x44CFDB);
MakeUnkn(0x44CFDC, 1);
MakeNameEx(0x44CFDC, "RegisterDockSite", 0x20);
MakeComm(0x44CFDC, "'procedure RegisterDockSite(Site:TWinControl; DoRegister:Boolean);'");
MakeCode(0x44CFDC);
MakeCode(0x44D000);
MakeCode(0x44D021);
MakeCode(0x44D032);
MakeFunction(0x44CFDC, 0x44D035);
MakeUnkn(0x44D038, 1);
MakeNameEx(0x44D038, "DragMessage", 0x20);
MakeComm(0x44D038, "'function DragMessage(Handle:HWND; Msg:TDragMessage; Source:TDragObject; Target:Pointer; const Pos:TPoint):Longint;'");
MakeCode(0x44D038);
MakeCode(0x44D084);
MakeFunction(0x44D038, 0x44D08D);
MakeUnkn(0x44D090, 1);
MakeNameEx(0x44D090, "IsDelphiHandle", 0x20);
MakeComm(0x44D090, "'function IsDelphiHandle(Handle:HWND):Boolean;'");
MakeCode(0x44D090);
MakeCode(0x44D0DE);
MakeCode(0x44D0EA);
MakeFunction(0x44D090, 0x44D0F0);
MakeUnkn(0x44D0F0, 1);
MakeNameEx(0x44D0F0, "DragFindWindow", 0x20);
MakeComm(0x44D0F0, "'function DragFindWindow(const Pos:TPoint):HWND;'");
MakeCode(0x44D0F0);
MakeCode(0x44D101);
MakeCode(0x44D118);
MakeFunction(0x44D0F0, 0x44D11C);
MakeUnkn(0x44D11C, 1);
MakeNameEx(0x44D11C, "DragFindTarget", 0x20);
MakeComm(0x44D11C, "'function DragFindTarget(const Pos:TPoint; var Handle:HWND; DragKind:TDragKind; Client:TControl):Pointer;'");
MakeCode(0x44D11C);
MakeCode(0x44D148);
MakeCode(0x44D161);
MakeFunction(0x44D11C, 0x44D169);
MakeUnkn(0x44D16C, 1);
MakeNameEx(0x44D16C, "DoDragOver", 0x20);
MakeComm(0x44D16C, "'function DoDragOver(DragMsg:TDragMessage):Boolean;'");
MakeCode(0x44D16C);
MakeCode(0x44D1A4);
MakeFunction(0x44D16C, 0x44D1A7);
MakeUnkn(0x44D1A8, 1);
MakeNameEx(0x44D1A8, "GetDropCtl", 0x20);
MakeComm(0x44D1A8, "'function GetDropCtl:TControl;'");
MakeCode(0x44D1A8);
MakeCode(0x44D1FF);
MakeCode(0x44D212);
MakeCode(0x44D234);
MakeCode(0x44D237);
MakeCode(0x44D23F);
MakeFunction(0x44D1A8, 0x44D248);
MakeUnkn(0x44D248, 1);
MakeNameEx(0x44D248, "DragTo", 0x20);
MakeComm(0x44D248, "'procedure DragTo(const Pos:TPoint);'");
MakeCode(0x44D248);
MakeCode(0x44D286);
MakeCode(0x44D2D4);
MakeCode(0x44D2F0);
MakeCode(0x44D303);
MakeCode(0x44D358);
MakeCode(0x44D399);
MakeCode(0x44D3D2);
MakeCode(0x44D402);
MakeCode(0x44D413);
MakeCode(0x44D432);
MakeCode(0x44D472);
MakeCode(0x44D4A9);
MakeCode(0x44D4CE);
MakeCode(0x44D510);
MakeCode(0x44D529);
MakeFunction(0x44D248, 0x44D530);
MakeUnkn(0x44D530, 1);
MakeNameEx(0x44D530, "DragInit", 0x20);
MakeComm(0x44D530, "'procedure DragInit(ADragObject:TDragObject; Immediate:Boolean; Threshold:Integer);'");
MakeCode(0x44D530);
MakeCode(0x44D5D1);
MakeCode(0x44D5D9);
MakeCode(0x44D608);
MakeCode(0x44D610);
MakeCode(0x44D624);
MakeCode(0x44D62D);
MakeCode(0x44D63A);
MakeCode(0x44D641);
MakeCode(0x44D676);
MakeCode(0x44D69A);
MakeFunction(0x44D530, 0x44D6A0);
MakeUnkn(0x44D6A0, 1);
MakeNameEx(0x44D6A0, "DragInitControl", 0x20);
MakeComm(0x44D6A0, "'procedure DragInitControl(Control:TControl; Immediate:Boolean; Threshold:Integer);'");
MakeCode(0x44D6A0);
MakeCode(0x44D6F0);
MakeCode(0x44D6FD);
MakeCode(0x44D724);
MakeCode(0x44D73B);
MakeCode(0x44D748);
MakeCode(0x44D766);
MakeCode(0x44D796);
MakeCode(0x44D7CD);
MakeCode(0x44D7F5);
MakeCode(0x44D821);
MakeCode(0x44D82E);
MakeCode(0x44D83B);
MakeCode(0x44D845);
MakeCode(0x44D85B);
MakeFunction(0x44D6A0, 0x44D862);
MakeUnkn(0x44D864, 1);
MakeNameEx(0x44D864, "CheckUndock", 0x20);
MakeComm(0x44D864, "'function CheckUndock:Boolean;'");
MakeCode(0x44D864);
MakeCode(0x44D8A3);
MakeCode(0x44D8A7);
MakeCode(0x44D8D0);
MakeFunction(0x44D864, 0x44D8D6);
MakeUnkn(0x44D8D8, 1);
MakeNameEx(0x44D8D8, "DragDone", 0x20);
MakeComm(0x44D8D8, "'procedure DragDone(Drop:Boolean);'");
MakeCode(0x44D8D8);
MakeCode(0x44D97B);
MakeCode(0x44D9B0);
MakeCode(0x44D9C1);
MakeCode(0x44D9DB);
MakeCode(0x44D9EF);
MakeCode(0x44D9F5);
MakeCode(0x44D9F9);
MakeCode(0x44D9FB);
MakeCode(0x44DA33);
MakeCode(0x44DA4C);
MakeCode(0x44DA61);
MakeCode(0x44DA6C);
MakeCode(0x44DAC0);
MakeCode(0x44DB00);
MakeCode(0x44DB0D);
MakeCode(0x44DB1E);
MakeCode(0x44DB1F);
MakeCode(0x44DB24);
MakeCode(0x44DB26);
MakeCode(0x44DB33);
MakeCode(0x44DB73);
MakeCode(0x44DB7B);
MakeCode(0x44DB80);
MakeCode(0x44DB82);
MakeCode(0x44DB8F);
MakeCode(0x44DBDB);
MakeCode(0x44DBE5);
MakeCode(0x44DBED);
MakeCode(0x44DBF2);
MakeCode(0x44DBF4);
MakeFunction(0x44D8D8, 0x44DBF9);
MakeUnkn(0x44DBFC, 1);
MakeNameEx(0x44DBFC, "CancelDrag", 0x20);
MakeComm(0x44DBFC, "'procedure CancelDrag;'");
MakeCode(0x44DBFC);
MakeCode(0x44DC0C);
MakeFunction(0x44DBFC, 0x44DC14);
MakeUnkn(0x44DC14, 1);
MakeNameEx(0x44DC14, "FindVCLWindow", 0x20);
MakeComm(0x44DC14, "'function FindVCLWindow(const Pos:TPoint):TWinControl;'");
MakeCode(0x44DC14);
MakeCode(0x44DC28);
MakeCode(0x44DC41);
MakeFunction(0x44DC14, 0x44DC46);
MakeUnkn(0x44DC48, 1);
MakeNameEx(0x44DC48, "FindDragTarget", 0x20);
MakeComm(0x44DC48, "'function FindDragTarget(const Pos:TPoint; AllowDisabled:Boolean):TControl;'");
MakeCode(0x44DC48);
MakeCode(0x44DC88);
MakeFunction(0x44DC48, 0x44DC91);
MakeUnkn(0x44DC94, 1);
MakeNameEx(0x44DC94, "ListAdd", 0x20);
MakeComm(0x44DC94, "'procedure ListAdd(var List:TList; Item:Pointer);'");
MakeCode(0x44DC94);
MakeCode(0x44DCAD);
MakeFunction(0x44DC94, 0x44DCB9);
MakeUnkn(0x44DCBC, 1);
MakeNameEx(0x44DCBC, "ListRemove", 0x20);
MakeComm(0x44DCBC, "'procedure ListRemove(var List:TList; Item:Pointer);'");
MakeCode(0x44DCBC);
MakeCode(0x44DCD9);
MakeFunction(0x44DCBC, 0x44DCDB);
MakeUnkn(0x44DCDC, 1);
MakeNameEx(0x44DCDC, "MoveWindowOrg", 0x20);
MakeComm(0x44DCDC, "'procedure MoveWindowOrg(DC:HDC; DX:Integer; DY:Integer);'");
MakeCode(0x44DCDC);
MakeFunction(0x44DCDC, 0x44DD0B);
MakeUnkn(0x44DD0C, 1);
MakeNameEx(0x44DD0C, "FreeDeviceContext", 0x20);
MakeComm(0x44DD0C, "'procedure FreeDeviceContext;'");
MakeCode(0x44DD0C);
MakeCode(0x44DD43);
MakeCode(0x44DD7F);
MakeCode(0x44DD8C);
MakeCode(0x44DD95);
MakeCode(0x44DD9A);
MakeCode(0x44DD9C);
MakeCode(0x44DDA4);
MakeCode(0x44DDB1);
MakeCode(0x44DDBC);
MakeCode(0x44DDC1);
MakeCode(0x44DDC3);
MakeFunction(0x44DD0C, 0x44DDC7);
MakeUnkn(0x44DDC8, 1);
MakeNameEx(0x44DDC8, "FreeDeviceContexts", 0x20);
MakeComm(0x44DDC8, "'procedure FreeDeviceContexts;'");
MakeCode(0x44DDC8);
MakeCode(0x44DDF8);
MakeCode(0x44DE28);
MakeCode(0x44DE35);
MakeCode(0x44DE3E);
MakeCode(0x44DE43);
MakeCode(0x44DE45);
MakeCode(0x44DE4E);
MakeCode(0x44DE5B);
MakeCode(0x44DE66);
MakeCode(0x44DE6B);
MakeFunction(0x44DDC8, 0x44DE71);
MakeUnkn(0x44DE74, 1);
MakeNameEx(0x44DE74, "TControlCanvas.Destroy", 0x20);
MakeComm(0x44DE74, "'destructor TControlCanvas.Destroy;'");
MakeCode(0x44DE74);
MakeCode(0x44DE9D);
MakeFunction(0x44DE74, 0x44DEA0);
MakeUnkn(0x44DEA0, 1);
MakeNameEx(0x44DEA0, "TControlCanvas.CreateHandle", 0x20);
MakeComm(0x44DEA0, "'procedure TControlCanvas.CreateHandle;'");
MakeCode(0x44DEA0);
MakeCode(0x44DEBE);
MakeCode(0x44DEEC);
MakeCode(0x44DF0D);
MakeCode(0x44DF1A);
MakeCode(0x44DF25);
MakeCode(0x44DF2A);
MakeCode(0x44DF2C);
MakeCode(0x44DF42);
MakeFunction(0x44DEA0, 0x44DF46);
MakeUnkn(0x44DF48, 1);
MakeNameEx(0x44DF48, "TControlCanvas.FreeHandle", 0x20);
MakeComm(0x44DF48, "'procedure TControlCanvas.FreeHandle;'");
MakeCode(0x44DF48);
MakeCode(0x44DF78);
MakeFunction(0x44DF48, 0x44DF7A);
MakeUnkn(0x44DF7C, 1);
MakeNameEx(0x44DF7C, "TControlCanvas.SetControl", 0x20);
MakeComm(0x44DF7C, "'procedure TControlCanvas.SetControl(AControl:TControl);'");
MakeCode(0x44DF7C);
MakeCode(0x44DF91);
MakeFunction(0x44DF7C, 0x44DF94);
MakeUnkn(0x44DF94, 1);
MakeNameEx(0x44DF94, "TControlCanvas.UpdateTextFlags", 0x20);
MakeComm(0x44DF94, "'procedure TControlCanvas.UpdateTextFlags;'");
MakeCode(0x44DF94);
MakeCode(0x44DFB3);
MakeCode(0x44DFBA);
MakeFunction(0x44DF94, 0x44DFBD);
MakeUnkn(0x44DFC0, 1);
MakeNameEx(0x44DFC0, "TSizeConstraints.Create", 0x20);
MakeComm(0x44DFC0, "'constructor TSizeConstraints.Create(Control:TControl);'");
MakeCode(0x44DFC0);
MakeCode(0x44DFCF);
MakeCode(0x44DFF6);
MakeFunction(0x44DFC0, 0x44DFFC);
MakeUnkn(0x44DFFC, 1);
MakeNameEx(0x44DFFC, "TSizeConstraints.AssignTo", 0x20);
MakeComm(0x44DFFC, "'procedure TSizeConstraints.AssignTo(Dest:TPersistent);'");
MakeCode(0x44DFFC);
MakeCode(0x44E035);
MakeFunction(0x44DFFC, 0x44E041);
MakeUnkn(0x44E044, 1);
MakeNameEx(0x44E044, "TSizeConstraints.SetConstraints", 0x20);
MakeComm(0x44E044, "'procedure TSizeConstraints.SetConstraints(Index:Integer; Value:TConstraintSize);'");
MakeCode(0x44E044);
MakeCode(0x44E056);
MakeCode(0x44E06A);
MakeCode(0x44E073);
MakeCode(0x44E087);
MakeCode(0x44E090);
MakeCode(0x44E0A6);
MakeCode(0x44E0AF);
MakeCode(0x44E0C5);
MakeCode(0x44E0CC);
MakeFunction(0x44E044, 0x44E0CE);
MakeUnkn(0x44E0D0, 1);
MakeNameEx(0x44E0D0, "TMargins.Change", 0x20);
MakeComm(0x44E0D0, "'procedure TMargins.Change;'");
MakeCode(0x44E0D0);
MakeCode(0x44E0E2);
MakeFunction(0x44E0D0, 0x44E0E4);
MakeUnkn(0x44E0E4, 1);
MakeNameEx(0x44E0E4, "TControlActionLink.AssignClient", 0x20);
MakeComm(0x44E0E4, "'procedure TControlActionLink.AssignClient(AClient:TObject);'");
MakeCode(0x44E0E4);
MakeFunction(0x44E0E4, 0x44E0FD);
MakeUnkn(0x44E100, 1);
MakeNameEx(0x44E100, "TControlActionLink.DoShowHint", 0x20);
MakeComm(0x44E100, "'function TControlActionLink.DoShowHint(var HintStr:AnsiString):Boolean;'");
MakeCode(0x44E100);
MakeCode(0x44E1AF);
MakeCode(0x44E1BC);
MakeCode(0x44E1CD);
MakeCode(0x44E1D2);
MakeFunction(0x44E100, 0x44E1DF);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x44E1E8, -1);
MakeDword(0x44E1E4);
MakeDword(0x44E1E0);
MakeUnkn(0x44E1F0, 1);
MakeNameEx(0x44E1F0, "TControlActionLink.IsCaptionLinked", 0x20);
MakeComm(0x44E1F0, "'function TControlActionLink.IsCaptionLinked:Boolean;'");
MakeCode(0x44E1F0);
MakeCode(0x44E239);
MakeCode(0x44E23D);
MakeCode(0x44E23F);
MakeCode(0x44E241);
MakeCode(0x44E24E);
MakeCode(0x44E257);
MakeCode(0x44E25C);
MakeFunction(0x44E1F0, 0x44E264);
MakeUnkn(0x44E264, 1);
MakeNameEx(0x44E264, "TControlActionLink.IsDropdownMenuLinked", 0x20);
MakeComm(0x44E264, "'function TControlActionLink.IsDropdownMenuLinked:Boolean;'");
MakeCode(0x44E264);
MakeFunction(0x44E264, 0x44E277);
MakeUnkn(0x44E278, 1);
MakeNameEx(0x44E278, "TControlActionLink.IsEnabledLinked", 0x20);
MakeComm(0x44E278, "'function TControlActionLink.IsEnabledLinked:Boolean;'");
MakeCode(0x44E278);
MakeCode(0x44E2A3);
MakeCode(0x44E2A7);
MakeFunction(0x44E278, 0x44E2AB);
MakeUnkn(0x44E2AC, 1);
MakeNameEx(0x44E2AC, "TControlActionLink.IsEnableDropdownLinked", 0x20);
MakeComm(0x44E2AC, "'function TControlActionLink.IsEnableDropdownLinked:Boolean;'");
MakeCode(0x44E2AC);
MakeFunction(0x44E2AC, 0x44E2BF);
MakeUnkn(0x44E2C0, 1);
MakeNameEx(0x44E2C0, "TControlActionLink.IsHintLinked", 0x20);
MakeComm(0x44E2C0, "'function TControlActionLink.IsHintLinked:Boolean;'");
MakeCode(0x44E2C0);
MakeCode(0x44E2EF);
MakeCode(0x44E2F3);
MakeFunction(0x44E2C0, 0x44E2F7);
MakeUnkn(0x44E2F8, 1);
MakeNameEx(0x44E2F8, "TControlActionLink.IsPopupMenuLinked", 0x20);
MakeComm(0x44E2F8, "'function TControlActionLink.IsPopupMenuLinked:Boolean;'");
MakeCode(0x44E2F8);
MakeCode(0x44E32E);
MakeCode(0x44E333);
MakeFunction(0x44E2F8, 0x44E338);
MakeUnkn(0x44E338, 1);
MakeNameEx(0x44E338, "TControlActionLink.IsVisibleLinked", 0x20);
MakeComm(0x44E338, "'function TControlActionLink.IsVisibleLinked:Boolean;'");
MakeCode(0x44E338);
MakeCode(0x44E363);
MakeCode(0x44E367);
MakeFunction(0x44E338, 0x44E36B);
MakeUnkn(0x44E36C, 1);
MakeNameEx(0x44E36C, "TControlActionLink.IsOnExecuteLinked", 0x20);
MakeComm(0x44E36C, "'function TControlActionLink.IsOnExecuteLinked:Boolean;'");
MakeCode(0x44E36C);
MakeCode(0x44E38B);
MakeCode(0x44E38F);
MakeFunction(0x44E36C, 0x44E393);
MakeUnkn(0x44E394, 1);
MakeNameEx(0x44E394, "TControlActionLink.SetCaption", 0x20);
MakeComm(0x44E394, "'procedure TControlActionLink.SetCaption(const Value:AnsiString);'");
MakeCode(0x44E394);
MakeCode(0x44E3AF);
MakeFunction(0x44E394, 0x44E3B2);
MakeCode(0x44E3B4);
MakeFunction(0x44E3B4, 0x44E3B5);
MakeUnkn(0x44E3B8, 1);
MakeNameEx(0x44E3B8, "TControlActionLink.SetEnabled", 0x20);
MakeComm(0x44E3B8, "'procedure TControlActionLink.SetEnabled(Value:Boolean);'");
MakeCode(0x44E3B8);
MakeCode(0x44E3D3);
MakeFunction(0x44E3B8, 0x44E3D6);
MakeCode(0x44E3D8);
MakeFunction(0x44E3D8, 0x44E3D9);
MakeUnkn(0x44E3DC, 1);
MakeNameEx(0x44E3DC, "TControlActionLink.SetHint", 0x20);
MakeComm(0x44E3DC, "'procedure TControlActionLink.SetHint(const Value:AnsiString);'");
MakeCode(0x44E3DC);
MakeCode(0x44E3FC);
MakeFunction(0x44E3DC, 0x44E3FF);
MakeUnkn(0x44E400, 1);
MakeNameEx(0x44E400, "TControlActionLink.SetVisible", 0x20);
MakeComm(0x44E400, "'procedure TControlActionLink.SetVisible(Value:Boolean);'");
MakeCode(0x44E400);
MakeCode(0x44E41B);
MakeFunction(0x44E400, 0x44E41E);
MakeUnkn(0x44E420, 1);
MakeNameEx(0x44E420, "TControlActionLink.SetOnExecute", 0x20);
MakeComm(0x44E420, "'procedure TControlActionLink.SetOnExecute(Value:TNotifyEvent);'");
MakeCode(0x44E420);
MakeCode(0x44E446);
MakeFunction(0x44E420, 0x44E44B);
MakeUnkn(0x44E44C, 1);
MakeNameEx(0x44E44C, "TControlActionLink.IsHelpLinked", 0x20);
MakeComm(0x44E44C, "'function TControlActionLink.IsHelpLinked:Boolean;'");
MakeCode(0x44E44C);
MakeCode(0x44E4A7);
MakeCode(0x44E4AB);
MakeCode(0x44E4AD);
MakeFunction(0x44E44C, 0x44E4B1);
MakeUnkn(0x44E4B4, 1);
MakeNameEx(0x44E4B4, "TControlActionLink.SetHelpContext", 0x20);
MakeComm(0x44E4B4, "'procedure TControlActionLink.SetHelpContext(Value:THelpContext);'");
MakeCode(0x44E4B4);
MakeCode(0x44E4CF);
MakeFunction(0x44E4B4, 0x44E4D2);
MakeCode(0x44E4D4);
MakeComm(0x44E4DE, "'TControlActionLink.IsHelpLinked'");
MakeComm(0x44E4E7, "'TControlActionLink...FClient:TControl'");
MakeCode(0x44E4EF);
MakeFunction(0x44E4D4, 0x44E4F2);
MakeUnkn(0x44E4F4, 1);
MakeNameEx(0x44E4F4, "TControlActionLink.SetHelpType", 0x20);
MakeComm(0x44E4F4, "'procedure TControlActionLink.SetHelpType(Value:THelpType);'");
MakeCode(0x44E4F4);
MakeCode(0x44E50E);
MakeFunction(0x44E4F4, 0x44E511);
MakeUnkn(0x44E514, 1);
MakeNameEx(0x44E514, "TControlActionLink.SetPopupMenu", 0x20);
MakeComm(0x44E514, "'procedure TControlActionLink.SetPopupMenu(Value:TPopupMenu);'");
MakeCode(0x44E514);
MakeCode(0x44E532);
MakeFunction(0x44E514, 0x44E535);
MakeUnkn(0x44E538, 1);
MakeNameEx(0x44E538, "TControl.Create", 0x20);
MakeComm(0x44E538, "'constructor TControl.Create(AOwner:TComponent);'");
MakeCode(0x44E538);
MakeCode(0x44E54A);
MakeCode(0x44E61F);
MakeFunction(0x44E538, 0x44E626);
MakeUnkn(0x44E630, 1);
MakeNameEx(0x44E630, "TControl.Destroy", 0x20);
MakeComm(0x44E630, "'destructor TControl.Destroy;'");
MakeCode(0x44E630);
MakeCode(0x44E6A3);
MakeCode(0x44E6AC);
MakeCode(0x44E6F0);
MakeFunction(0x44E630, 0x44E6F7);
MakeCode(0x44E6F8);
MakeFunction(0x44E6F8, 0x44E6FB);
MakeUnkn(0x44E6FC, 1);
MakeNameEx(0x44E6FC, "TLabel.GetEnabled", 0x20);
MakeComm(0x44E6FC, "'function TLabel.GetEnabled:Boolean;'");
MakeCode(0x44E6FC);
MakeComm(0x44E6FC, "'TLabel.FEnabled:Boolean'");
MakeFunction(0x44E6FC, 0x44E701);
MakeUnkn(0x44E704, 1);
MakeNameEx(0x44E704, "TControl.sub_0044E704", 0x20);
MakeComm(0x44E704, "'procedure TControl.sub_0044E704;'");
MakeCode(0x44E704);
MakeFunction(0x44E704, 0x44E707);
MakeUnkn(0x44E708, 1);
MakeNameEx(0x44E708, "TControl.HasParent", 0x20);
MakeComm(0x44E708, "'procedure TControl.HasParent;'");
MakeCode(0x44E708);
MakeFunction(0x44E708, 0x44E710);
MakeUnkn(0x44E710, 1);
MakeNameEx(0x44E710, "TControl.GetParentComponent", 0x20);
MakeComm(0x44E710, "'procedure TControl.GetParentComponent;'");
MakeCode(0x44E710);
MakeComm(0x44E710, "'TControl.FParent:TWinControl'");
MakeFunction(0x44E710, 0x44E714);
MakeUnkn(0x44E714, 1);
MakeNameEx(0x44E714, "TControl.SetParentComponent", 0x20);
MakeComm(0x44E714, "'procedure TControl.SetParentComponent(Value:TComponent);'");
MakeCode(0x44E714);
MakeCode(0x44E739);
MakeFunction(0x44E714, 0x44E73C);
MakeUnkn(0x44E73C, 1);
MakeNameEx(0x44E73C, "TControl.PaletteChanged", 0x20);
MakeComm(0x44E73C, "'procedure TControl.PaletteChanged(Foreground:Boolean);'");
MakeCode(0x44E73C);
MakeCode(0x44E796);
MakeCode(0x44E7AC);
MakeFunction(0x44E73C, 0x44E7B5);
MakeUnkn(0x44E7B8, 1);
MakeNameEx(0x44E7B8, "TControl.GetAction", 0x20);
MakeComm(0x44E7B8, "'function TControl.GetAction:TBasicAction;'");
MakeCode(0x44E7B8);
MakeCode(0x44E7C3);
MakeFunction(0x44E7B8, 0x44E7C6);
MakeUnkn(0x44E7C8, 1);
MakeNameEx(0x44E7C8, "TControl.SetAnchors", 0x20);
MakeComm(0x44E7C8, "'procedure TControl.SetAnchors(Value:TAnchors);'");
MakeCode(0x44E7C8);
MakeCode(0x44E831);
MakeCode(0x44E857);
MakeCode(0x44E85E);
MakeFunction(0x44E7C8, 0x44E862);
MakeUnkn(0x44E868, 1);
MakeNameEx(0x44E868, "TControl.SetAction", 0x20);
MakeComm(0x44E868, "'procedure TControl.SetAction(Value:TBasicAction);'");
MakeCode(0x44E868);
MakeCode(0x44E889);
MakeCode(0x44E8AB);
MakeCode(0x44E8DF);
MakeFunction(0x44E868, 0x44E8E3);
MakeUnkn(0x44E8E4, 1);
MakeNameEx(0x44E8E4, "TControl.IsAnchorsStored", 0x20);
MakeComm(0x44E8E4, "'function TControl.IsAnchorsStored(Value:TAnchors):Boolean;'");
MakeCode(0x44E8E4);
MakeFunction(0x44E8E4, 0x44E8FA);
MakeUnkn(0x44E8FC, 1);
MakeNameEx(0x44E8FC, "TControl.SetDesignVisible", 0x20);
MakeComm(0x44E8FC, "'procedure TControl.SetDesignVisible(Value:Boolean);'");
MakeCode(0x44E8FC);
MakeCode(0x44E91E);
MakeCode(0x44E924);
MakeCode(0x44E92F);
MakeFunction(0x44E8FC, 0x44E931);
MakeUnkn(0x44E934, 1);
MakeNameEx(0x44E934, "TLabel.SetDragMode", 0x20);
MakeComm(0x44E934, "'procedure TLabel.SetDragMode(Value:TDragMode);'");
MakeCode(0x44E934);
MakeComm(0x44E934, "'TLabel.FDragMode:TDragMode'");
MakeFunction(0x44E934, 0x44E938);
MakeUnkn(0x44E938, 1);
MakeNameEx(0x44E938, "TControl.RequestAlign", 0x20);
MakeComm(0x44E938, "'procedure TControl.RequestAlign;'");
MakeCode(0x44E938);
MakeFunction(0x44E938, 0x44E946);
MakeUnkn(0x44E948, 1);
MakeNameEx(0x44E948, "TControl.Resize", 0x20);
MakeComm(0x44E948, "'procedure TControl.Resize;'");
MakeCode(0x44E948);
MakeCode(0x44E963);
MakeFunction(0x44E948, 0x44E965);
MakeUnkn(0x44E968, 1);
MakeNameEx(0x44E968, "TControl.ReadState", 0x20);
MakeComm(0x44E968, "'procedure TControl.ReadState(Reader:TReader);'");
MakeCode(0x44E968);
MakeCode(0x44E991);
MakeCode(0x44E9F5);
MakeFunction(0x44E968, 0x44E9F9);
MakeUnkn(0x44E9FC, 1);
MakeNameEx(0x44E9FC, "TControl.Notification", 0x20);
MakeComm(0x44E9FC, "'procedure TControl.Notification(AComponent:TComponent; Operation:TOperation);'");
MakeCode(0x44E9FC);
MakeCode(0x44EA28);
MakeCode(0x44EA3E);
MakeCode(0x44EA4E);
MakeFunction(0x44E9FC, 0x44EA52);
MakeUnkn(0x44EA54, 1);
MakeNameEx(0x44EA54, "TControl.SetAlign", 0x20);
MakeComm(0x44EA54, "'procedure TControl.SetAlign(Value:TAlign);'");
MakeCode(0x44EA54);
MakeCode(0x44EA99);
MakeCode(0x44EAF5);
MakeCode(0x44EB25);
MakeCode(0x44EB30);
MakeFunction(0x44EA54, 0x44EB3C);
MakeUnkn(0x44EB3C, 1);
MakeNameEx(0x44EB3C, "TControl.SetBounds", 0x20);
MakeComm(0x44EB3C, "'procedure TControl.SetBounds(ALeft:Integer; ATop:Integer; AWidth:Integer; AHeight:Integer);'");
MakeCode(0x44EB3C);
MakeCode(0x44EB73);
MakeCode(0x44EBD2);
MakeFunction(0x44EB3C, 0x44EBD9);
MakeUnkn(0x44EBDC, 1);
MakeNameEx(0x44EBDC, "TControl.UpdateAnchorRules", 0x20);
MakeComm(0x44EBDC, "'procedure TControl.UpdateAnchorRules;'");
MakeCode(0x44EBDC);
MakeCode(0x44EC22);
MakeCode(0x44EC45);
MakeCode(0x44EC86);
MakeCode(0x44ECA5);
MakeCode(0x44ECB7);
MakeCode(0x44ECD7);
MakeCode(0x44ECDF);
MakeCode(0x44ECFE);
MakeCode(0x44ED13);
MakeCode(0x44ED36);
MakeCode(0x44ED3E);
MakeCode(0x44ED55);
MakeFunction(0x44EBDC, 0x44ED5B);
MakeUnkn(0x44ED60, 1);
MakeNameEx(0x44ED60, "TControl.SetLeft", 0x20);
MakeComm(0x44ED60, "'procedure TControl.SetLeft(Value:Integer);'");
MakeCode(0x44ED60);
MakeCode(0x44ED8F);
MakeFunction(0x44ED60, 0x44ED92);
MakeUnkn(0x44ED94, 1);
MakeNameEx(0x44ED94, "TControl.SetTop", 0x20);
MakeComm(0x44ED94, "'procedure TControl.SetTop(Value:Integer);'");
MakeCode(0x44ED94);
MakeCode(0x44EDC5);
MakeFunction(0x44ED94, 0x44EDC8);
MakeUnkn(0x44EDC8, 1);
MakeNameEx(0x44EDC8, "TControl.SetWidth", 0x20);
MakeComm(0x44EDC8, "'procedure TControl.SetWidth(Value:Integer);'");
MakeCode(0x44EDC8);
MakeCode(0x44EDF7);
MakeFunction(0x44EDC8, 0x44EDFA);
MakeUnkn(0x44EDFC, 1);
MakeNameEx(0x44EDFC, "TControl.SetHeight", 0x20);
MakeComm(0x44EDFC, "'procedure TControl.SetHeight(Value:Integer);'");
MakeCode(0x44EDFC);
MakeCode(0x44EE2B);
MakeFunction(0x44EDFC, 0x44EE2E);
MakeUnkn(0x44EE30, 1);
MakeNameEx(0x44EE30, "TControl.Dock", 0x20);
MakeComm(0x44EE30, "'procedure TControl.Dock(NewDockSite:TWinControl; ARect:TRect);'");
MakeCode(0x44EE30);
MakeCode(0x44EE86);
MakeCode(0x44EEA6);
MakeCode(0x44EED3);
MakeCode(0x44EF19);
MakeCode(0x44EF24);
MakeCode(0x44EF39);
MakeCode(0x44EF46);
MakeCode(0x44EF50);
MakeCode(0x44EF55);
MakeFunction(0x44EE30, 0x44EF5D);
MakeUnkn(0x44EF60, 1);
MakeNameEx(0x44EF60, "TControl.DoDock", 0x20);
MakeComm(0x44EF60, "'procedure TControl.DoDock(NewDockSite:TWinControl; var ARect:TRect);'");
MakeCode(0x44EF60);
MakeCode(0x44EF87);
MakeCode(0x44EF97);
MakeCode(0x44EFA0);
MakeCode(0x44EFA9);
MakeCode(0x44EFB2);
MakeFunction(0x44EF60, 0x44EFB6);
MakeUnkn(0x44EFB8, 1);
MakeNameEx(0x44EFB8, "TControl.SetHelpContext", 0x20);
MakeComm(0x44EFB8, "'procedure TControl.SetHelpContext(const Value:THelpContext);'");
MakeCode(0x44EFB8);
MakeCode(0x44EFC5);
MakeFunction(0x44EFB8, 0x44EFCC);
MakeUnkn(0x44EFCC, 1);
MakeNameEx(0x44EFCC, "TControl.SetHelpKeyword", 0x20);
MakeComm(0x44EFCC, "'procedure TControl.SetHelpKeyword(const Value:AnsiString);'");
MakeCode(0x44EFCC);
MakeCode(0x44EFDF);
MakeFunction(0x44EFCC, 0x44EFEF);
MakeUnkn(0x44EFF0, 1);
MakeNameEx(0x44EFF0, "TControl.GetBoundsRect", 0x20);
MakeComm(0x44EFF0, "'function TControl.GetBoundsRect:TRect;'");
MakeCode(0x44EFF0);
MakeFunction(0x44EFF0, 0x44F00E);
MakeUnkn(0x44F010, 1);
MakeNameEx(0x44F010, "TControl.SetBoundsRect", 0x20);
MakeComm(0x44F010, "'procedure TControl.SetBoundsRect(const Rect:TRect);'");
MakeCode(0x44F010);
MakeFunction(0x44F010, 0x44F034);
MakeUnkn(0x44F034, 1);
MakeNameEx(0x44F034, "TControl.GetClientRect", 0x20);
MakeComm(0x44F034, "'function TControl.GetClientRect:TRect;'");
MakeCode(0x44F034);
MakeFunction(0x44F034, 0x44F04A);
MakeUnkn(0x44F04C, 1);
MakeNameEx(0x44F04C, "TControl.GetClientWidth", 0x20);
MakeComm(0x44F04C, "'function TControl.GetClientWidth:Integer;'");
MakeCode(0x44F04C);
MakeFunction(0x44F04C, 0x44F064);
MakeUnkn(0x44F064, 1);
MakeNameEx(0x44F064, "TControl.SetClientWidth", 0x20);
MakeComm(0x44F064, "'procedure TControl.SetClientWidth(Value:Integer);'");
MakeCode(0x44F064);
MakeFunction(0x44F064, 0x44F08D);
MakeUnkn(0x44F090, 1);
MakeNameEx(0x44F090, "TControl.GetClientHeight", 0x20);
MakeComm(0x44F090, "'function TControl.GetClientHeight:Integer;'");
MakeCode(0x44F090);
MakeFunction(0x44F090, 0x44F0A8);
MakeUnkn(0x44F0A8, 1);
MakeNameEx(0x44F0A8, "TControl.SetClientHeight", 0x20);
MakeComm(0x44F0A8, "'procedure TControl.SetClientHeight(Value:Integer);'");
MakeCode(0x44F0A8);
MakeFunction(0x44F0A8, 0x44F0CF);
MakeUnkn(0x44F0D0, 1);
MakeNameEx(0x44F0D0, "TControl.GetClientOrigin", 0x20);
MakeComm(0x44F0D0, "'function TControl.GetClientOrigin:TPoint;'");
MakeCode(0x44F0D0);
MakeCode(0x44F126);
MakeCode(0x44F13B);
MakeCode(0x44F148);
MakeCode(0x44F151);
MakeCode(0x44F156);
MakeFunction(0x44F0D0, 0x44F15E);
MakeUnkn(0x44F160, 1);
MakeNameEx(0x44F160, "TControl.ClientToScreen", 0x20);
MakeComm(0x44F160, "'function TControl.ClientToScreen(const Point:TPoint):TPoint;'");
MakeCode(0x44F160);
MakeFunction(0x44F160, 0x44F18C);
MakeUnkn(0x44F18C, 1);
MakeNameEx(0x44F18C, "TControl.ScaleConstraints", 0x20);
MakeComm(0x44F18C, "'procedure TControl.ScaleConstraints(M:Integer; D:Integer);'");
MakeCode(0x44F18C);
MakeCode(0x44F1B4);
MakeCode(0x44F1D1);
MakeCode(0x44F1EE);
MakeCode(0x44F208);
MakeFunction(0x44F18C, 0x44F20D);
MakeUnkn(0x44F210, 1);
MakeNameEx(0x44F210, "TControl.ScreenToClient", 0x20);
MakeComm(0x44F210, "'function TControl.ScreenToClient(const Point:TPoint):TPoint;'");
MakeCode(0x44F210);
MakeFunction(0x44F210, 0x44F23C);
MakeUnkn(0x44F23C, 1);
MakeNameEx(0x44F23C, "TControl.SendCancelMode", 0x20);
MakeComm(0x44F23C, "'procedure TControl.SendCancelMode(Sender:TControl);'");
MakeCode(0x44F23C);
MakeCode(0x44F246);
MakeCode(0x44F260);
MakeCode(0x44F267);
MakeFunction(0x44F23C, 0x44F26A);
MakeUnkn(0x44F26C, 1);
MakeNameEx(0x44F26C, "TControl.SendDockNotification", 0x20);
MakeComm(0x44F26C, "'procedure TControl.SendDockNotification(Msg:Cardinal; WParam:Integer; LParam:Integer);'");
MakeCode(0x44F26C);
MakeCode(0x44F2C7);
MakeFunction(0x44F26C, 0x44F2D0);
MakeUnkn(0x44F2D8, 1);
MakeNameEx(0x44F2D8, "TControl.Changed", 0x20);
MakeComm(0x44F2D8, "'procedure TControl.Changed;'");
MakeCode(0x44F2D8);
MakeFunction(0x44F2D8, 0x44F2E6);
MakeUnkn(0x44F2E8, 1);
MakeNameEx(0x44F2E8, "TControl.ChangeScale", 0x20);
MakeComm(0x44F2E8, "'procedure TControl.ChangeScale(M:Integer; D:Integer);'");
MakeCode(0x44F2E8);
MakeCode(0x44F30E);
MakeCode(0x44F315);
MakeCode(0x44F32C);
MakeCode(0x44F32F);
MakeCode(0x44F348);
MakeCode(0x44F34F);
MakeCode(0x44F378);
MakeCode(0x44F38C);
MakeCode(0x44F393);
MakeCode(0x44F3C8);
MakeCode(0x44F3DC);
MakeCode(0x44F3E3);
MakeCode(0x44F433);
MakeCode(0x44F45D);
MakeCode(0x44F486);
MakeFunction(0x44F2E8, 0x44F49B);
MakeUnkn(0x44F4AC, 1);
MakeNameEx(0x44F4AC, "TControl.SetAutoSize", 0x20);
MakeComm(0x44F4AC, "'procedure TControl.SetAutoSize(Value:Boolean);'");
MakeCode(0x44F4AC);
MakeCode(0x44F4C6);
MakeFunction(0x44F4AC, 0x44F4C8);
MakeUnkn(0x44F4C8, 1);
MakeNameEx(0x44F4C8, "TControl.SetName", 0x20);
MakeComm(0x44F4C8, "'procedure TControl.SetName(const Value:TComponentName);'");
MakeCode(0x44F4C8);
MakeCode(0x44F52A);
MakeCode(0x44F52E);
MakeCode(0x44F530);
MakeCode(0x44F548);
MakeCode(0x44F555);
MakeCode(0x44F55E);
MakeCode(0x44F563);
MakeFunction(0x44F4C8, 0x44F56C);
MakeUnkn(0x44F56C, 1);
MakeNameEx(0x44F56C, "TControl.SetClientSize", 0x20);
MakeComm(0x44F56C, "'procedure TControl.SetClientSize(Value:TPoint);'");
MakeCode(0x44F56C);
MakeFunction(0x44F56C, 0x44F5B4);
MakeUnkn(0x44F5B4, 1);
MakeNameEx(0x44F5B4, "TControl.SetParent", 0x20);
MakeComm(0x44F5B4, "'procedure TControl.SetParent(AParent:TWinControl);'");
MakeCode(0x44F5B4);
MakeCode(0x44F5DA);
MakeCode(0x44F5E8);
MakeCode(0x44F5FC);
MakeFunction(0x44F5B4, 0x44F5FF);
MakeUnkn(0x44F600, 1);
MakeNameEx(0x44F600, "TControl.SetVisible", 0x20);
MakeComm(0x44F600, "'procedure TControl.SetVisible(Value:Boolean);'");
MakeCode(0x44F600);
MakeCode(0x44F632);
MakeFunction(0x44F600, 0x44F636);
MakeUnkn(0x44F638, 1);
MakeNameEx(0x44F638, "TControl.SetEnabled", 0x20);
MakeComm(0x44F638, "'procedure TControl.SetEnabled(Value:Boolean);'");
MakeCode(0x44F638);
MakeFunction(0x44F638, 0x44F64F);
MakeUnkn(0x44F650, 1);
MakeNameEx(0x44F650, "TControl.GetTextLen", 0x20);
MakeComm(0x44F650, "'function TControl.GetTextLen:Integer;'");
MakeCode(0x44F650);
MakeFunction(0x44F650, 0x44F65F);
MakeUnkn(0x44F660, 1);
MakeNameEx(0x44F660, "TControl.GetTextBuf", 0x20);
MakeComm(0x44F660, "'function TControl.GetTextBuf(Buffer:PChar; BufSize:Integer):Integer;'");
MakeCode(0x44F660);
MakeFunction(0x44F660, 0x44F66C);
MakeUnkn(0x44F66C, 1);
MakeNameEx(0x44F66C, "TControl.GetUndockHeight", 0x20);
MakeComm(0x44F66C, "'function TControl.GetUndockHeight:Integer;'");
MakeCode(0x44F66C);
MakeCode(0x44F679);
MakeFunction(0x44F66C, 0x44F67D);
MakeUnkn(0x44F680, 1);
MakeNameEx(0x44F680, "TControl.GetUndockWidth", 0x20);
MakeComm(0x44F680, "'function TControl.GetUndockWidth:Integer;'");
MakeCode(0x44F680);
MakeCode(0x44F68D);
MakeFunction(0x44F680, 0x44F691);
MakeUnkn(0x44F694, 1);
MakeNameEx(0x44F694, "TControl.SetPopupMenu", 0x20);
MakeComm(0x44F694, "'procedure TControl.SetPopupMenu(Value:TPopupMenu);'");
MakeCode(0x44F694);
MakeCode(0x44F6B6);
MakeFunction(0x44F694, 0x44F6B9);
MakeUnkn(0x44F6BC, 1);
MakeNameEx(0x44F6BC, "TControl.SetTextBuf", 0x20);
MakeComm(0x44F6BC, "'procedure TControl.SetTextBuf(Buffer:PChar);'");
MakeCode(0x44F6BC);
MakeFunction(0x44F6BC, 0x44F6E0);
MakeUnkn(0x44F6E0, 1);
MakeNameEx(0x44F6E0, "TControl.GetText", 0x20);
MakeComm(0x44F6E0, "'function TControl.GetText:TCaption;'");
MakeCode(0x44F6E0);
MakeCode(0x44F70B);
MakeFunction(0x44F6E0, 0x44F70F);
MakeUnkn(0x44F710, 1);
MakeNameEx(0x44F710, "TControl.SetText", 0x20);
MakeComm(0x44F710, "'procedure TControl.SetText(const Value:TCaption);'");
MakeCode(0x44F710);
MakeCode(0x44F74F);
MakeCode(0x44F75C);
MakeCode(0x44F765);
MakeCode(0x44F76A);
MakeFunction(0x44F710, 0x44F771);
MakeUnkn(0x44F774, 1);
MakeNameEx(0x44F774, "TControl.SetBiDiMode", 0x20);
MakeComm(0x44F774, "'procedure TControl.SetBiDiMode(Value:TBiDiMode);'");
MakeCode(0x44F774);
MakeFunction(0x44F774, 0x44F78F);
MakeUnkn(0x44F790, 1);
MakeNameEx(0x44F790, "TControl.FontChanged", 0x20);
MakeComm(0x44F790, "'procedure TControl.FontChanged(Sender:TObject);'");
MakeCode(0x44F790);
MakeCode(0x44F7C0);
MakeFunction(0x44F790, 0x44F7D2);
MakeUnkn(0x44F7D4, 1);
MakeNameEx(0x44F7D4, "TControl.SetFont", 0x20);
MakeComm(0x44F7D4, "'procedure TControl.SetFont(Value:TFont);'");
MakeCode(0x44F7D4);
MakeFunction(0x44F7D4, 0x44F7E1);
MakeUnkn(0x44F7E4, 1);
MakeNameEx(0x44F7E4, "TControl.IsFontStored", 0x20);
MakeComm(0x44F7E4, "'function TControl.IsFontStored(Value:TFont):Boolean;'");
MakeCode(0x44F7E4);
MakeCode(0x44F7F0);
MakeCode(0x44F7F3);
MakeFunction(0x44F7E4, 0x44F7F6);
MakeUnkn(0x44F7F8, 1);
MakeNameEx(0x44F7F8, "TControl.IsShowHintStored", 0x20);
MakeComm(0x44F7F8, "'function TControl.IsShowHintStored(Value:Boolean):Boolean;'");
MakeCode(0x44F7F8);
MakeFunction(0x44F7F8, 0x44F802);
MakeUnkn(0x44F804, 1);
MakeNameEx(0x44F804, "TLabel.IsStoredBiDiMode", 0x20);
MakeComm(0x44F804, "'procedure TLabel.IsStoredBiDiMode(Value:TBiDiMode);'");
MakeCode(0x44F804);
MakeComm(0x44F804, "'TLabel.FParentBiDiMode:Boolean'");
MakeFunction(0x44F804, 0x44F80B);
MakeUnkn(0x44F80C, 1);
MakeNameEx(0x44F80C, "TControl.SetParentFont", 0x20);
MakeComm(0x44F80C, "'procedure TControl.SetParentFont(Value:Boolean);'");
MakeCode(0x44F80C);
MakeFunction(0x44F80C, 0x44F82F);
MakeUnkn(0x44F830, 1);
MakeNameEx(0x44F830, "TControl.SetShowHint", 0x20);
MakeComm(0x44F830, "'procedure TControl.SetShowHint(Value:Boolean);'");
MakeCode(0x44F830);
MakeFunction(0x44F830, 0x44F854);
MakeUnkn(0x44F854, 1);
MakeNameEx(0x44F854, "TControl.SetParentShowHint", 0x20);
MakeComm(0x44F854, "'procedure TControl.SetParentShowHint(Value:Boolean);'");
MakeCode(0x44F854);
MakeFunction(0x44F854, 0x44F87D);
MakeUnkn(0x44F880, 1);
MakeNameEx(0x44F880, "TControl.SetColor", 0x20);
MakeComm(0x44F880, "'procedure TControl.SetColor(Value:TColor);'");
MakeCode(0x44F880);
MakeFunction(0x44F880, 0x44F89B);
MakeUnkn(0x44F89C, 1);
MakeNameEx(0x44F89C, "TLabel.IsStoredColor", 0x20);
MakeComm(0x44F89C, "'procedure TLabel.IsStoredColor(Value:TColor);'");
MakeCode(0x44F89C);
MakeComm(0x44F89C, "'TLabel.FParentColor:Boolean'");
MakeFunction(0x44F89C, 0x44F8A3);
MakeUnkn(0x44F8A4, 1);
MakeNameEx(0x44F8A4, "TControl.SetParentColor", 0x20);
MakeComm(0x44F8A4, "'procedure TControl.SetParentColor(Value:Boolean);'");
MakeCode(0x44F8A4);
MakeFunction(0x44F8A4, 0x44F8C7);
MakeUnkn(0x44F8C8, 1);
MakeNameEx(0x44F8C8, "TControl.SetParentBiDiMode", 0x20);
MakeComm(0x44F8C8, "'procedure TControl.SetParentBiDiMode(Value:Boolean);'");
MakeCode(0x44F8C8);
MakeFunction(0x44F8C8, 0x44F8EB);
MakeUnkn(0x44F8EC, 1);
MakeNameEx(0x44F8EC, "TControl.SetCursor", 0x20);
MakeComm(0x44F8EC, "'procedure TControl.SetCursor(Value:TCursor);'");
MakeCode(0x44F8EC);
MakeFunction(0x44F8EC, 0x44F905);
MakeUnkn(0x44F908, 1);
MakeNameEx(0x44F908, "TControl.GetMouseCapture", 0x20);
MakeComm(0x44F908, "'function TControl.GetMouseCapture:Boolean;'");
MakeCode(0x44F908);
MakeFunction(0x44F908, 0x44F917);
MakeUnkn(0x44F918, 1);
MakeNameEx(0x44F918, "TControl.SetMouseCapture", 0x20);
MakeComm(0x44F918, "'procedure TControl.SetMouseCapture(Value:Boolean);'");
MakeCode(0x44F918);
MakeCode(0x44F936);
MakeCode(0x44F93D);
MakeFunction(0x44F918, 0x44F940);
MakeUnkn(0x44F940, 1);
MakeNameEx(0x44F940, "TControl.BringToFront", 0x20);
MakeComm(0x44F940, "'procedure TControl.BringToFront;'");
MakeCode(0x44F940);
MakeFunction(0x44F940, 0x44F952);
MakeUnkn(0x44F954, 1);
MakeNameEx(0x44F954, "TControl.SetZOrderPosition", 0x20);
MakeComm(0x44F954, "'procedure TControl.SetZOrderPosition(Position:Integer);'");
MakeCode(0x44F954);
MakeCode(0x44F985);
MakeCode(0x44F98C);
MakeCode(0x44F9D7);
MakeFunction(0x44F954, 0x44F9DB);
MakeUnkn(0x44F9DC, 1);
MakeNameEx(0x44F9DC, "TControl.SetZOrder", 0x20);
MakeComm(0x44F9DC, "'procedure TControl.SetZOrder(TopMost:Boolean);'");
MakeCode(0x44F9DC);
MakeCode(0x44F9F8);
MakeFunction(0x44F9DC, 0x44FA00);
MakeUnkn(0x44FA00, 1);
MakeNameEx(0x44FA00, "TControl.GetDeviceContext", 0x20);
MakeComm(0x44FA00, "'function TControl.GetDeviceContext(var WindowHandle:HWND):HDC;'");
MakeCode(0x44FA00);
MakeCode(0x44FA54);
MakeCode(0x44FA80);
MakeCode(0x44FA8D);
MakeCode(0x44FA96);
MakeCode(0x44FA9B);
MakeFunction(0x44FA00, 0x44FAA5);
MakeUnkn(0x44FAA8, 1);
MakeNameEx(0x44FAA8, "BackgroundClipped", 0x20);
MakeComm(0x44FAA8, "'function BackgroundClipped:Boolean;'");
MakeCode(0x44FAA8);
MakeCode(0x44FAD7);
MakeCode(0x44FB21);
MakeCode(0x44FB25);
MakeCode(0x44FB29);
MakeFunction(0x44FAA8, 0x44FB34);
MakeUnkn(0x44FB34, 1);
MakeNameEx(0x44FB34, "TControl.InvalidateControl", 0x20);
MakeComm(0x44FB34, "'procedure TControl.InvalidateControl(IsVisible:Boolean; IsOpaque:Boolean);'");
MakeCode(0x44FB34);
MakeCode(0x44FB59);
MakeCode(0x44FB99);
MakeCode(0x44FB9D);
MakeCode(0x44FB9F);
MakeCode(0x44FBB9);
MakeFunction(0x44FB34, 0x44FBBE);
MakeUnkn(0x44FBC0, 1);
MakeNameEx(0x44FBC0, "TControl.Invalidate", 0x20);
MakeComm(0x44FBC0, "'procedure TControl.Invalidate;'");
MakeCode(0x44FBC0);
MakeFunction(0x44FBC0, 0x44FBD1);
MakeUnkn(0x44FBD4, 1);
MakeNameEx(0x44FBD4, "TControl.MouseActivate", 0x20);
MakeComm(0x44FBD4, "'procedure TControl.MouseActivate(Button:TMouseButton; Shift:TShiftState; X:Integer; Y:Integer; HitTest:Integer);'");
MakeCode(0x44FBD4);
MakeCode(0x44FC11);
MakeFunction(0x44FBD4, 0x44FC1B);
MakeUnkn(0x44FC1C, 1);
MakeNameEx(0x44FC1C, "TControl.MouseWheelHandler", 0x20);
MakeComm(0x44FC1C, "'procedure TControl.MouseWheelHandler(var Message:TMessage);'");
MakeCode(0x44FC1C);
MakeCode(0x44FC53);
MakeCode(0x44FC74);
MakeCode(0x44FC94);
MakeFunction(0x44FC1C, 0x44FC99);
MakeUnkn(0x44FC9C, 1);
MakeNameEx(0x44FC9C, "TControl.Hide", 0x20);
MakeComm(0x44FC9C, "'procedure TControl.Hide;'");
MakeCode(0x44FC9C);
MakeFunction(0x44FC9C, 0x44FCA4);
MakeUnkn(0x44FCA4, 1);
MakeNameEx(0x44FCA4, "TControl.Show", 0x20);
MakeComm(0x44FCA4, "'procedure TControl.Show;'");
MakeCode(0x44FCA4);
MakeCode(0x44FCBB);
MakeCode(0x44FCC7);
MakeCode(0x44FCD0);
MakeFunction(0x44FCA4, 0x44FCD3);
MakeUnkn(0x44FCD4, 1);
MakeNameEx(0x44FCD4, "TControl.Update", 0x20);
MakeComm(0x44FCD4, "'procedure TControl.Update;'");
MakeCode(0x44FCD4);
MakeCode(0x44FCE6);
MakeFunction(0x44FCD4, 0x44FCE8);
MakeUnkn(0x44FCE8, 1);
MakeNameEx(0x44FCE8, "TControl.Refresh", 0x20);
MakeComm(0x44FCE8, "'procedure TControl.Refresh;'");
MakeCode(0x44FCE8);
MakeFunction(0x44FCE8, 0x44FCF1);
MakeUnkn(0x44FCF4, 1);
MakeNameEx(0x44FCF4, "TControl.Repaint", 0x20);
MakeComm(0x44FCF4, "'procedure TControl.Repaint;'");
MakeCode(0x44FCF4);
MakeCode(0x44FD21);
MakeCode(0x44FDAA);
MakeCode(0x44FDB7);
MakeCode(0x44FDCD);
MakeCode(0x44FDD2);
MakeCode(0x44FDD4);
MakeCode(0x44FDEA);
MakeFunction(0x44FCF4, 0x44FDEF);
MakeUnkn(0x44FDF0, 1);
MakeNameEx(0x44FDF0, "TControl.sub_0044FDF0", 0x20);
MakeComm(0x44FDF0, "'procedure TControl.sub_0044FDF0;'");
MakeCode(0x44FDF0);
MakeFunction(0x44FDF0, 0x44FDF3);
MakeUnkn(0x44FDF4, 1);
MakeNameEx(0x44FDF4, "TControl.UseRightToLeftReading", 0x20);
MakeComm(0x44FDF4, "'function TControl.UseRightToLeftReading:Boolean;'");
MakeCode(0x44FDF4);
MakeCode(0x44FE06);
MakeCode(0x44FE09);
MakeFunction(0x44FDF4, 0x44FE0C);
MakeUnkn(0x44FE0C, 1);
MakeNameEx(0x44FE0C, "TControl.UseRightToLeftAlignment", 0x20);
MakeComm(0x44FE0C, "'procedure TControl.UseRightToLeftAlignment;'");
MakeCode(0x44FE0C);
MakeCode(0x44FE1E);
MakeCode(0x44FE21);
MakeFunction(0x44FE0C, 0x44FE24);
MakeUnkn(0x44FE24, 1);
MakeNameEx(0x44FE24, "TControl.UseRightToLeftScrollBar", 0x20);
MakeComm(0x44FE24, "'function TControl.UseRightToLeftScrollBar:Boolean;'");
MakeCode(0x44FE24);
MakeCode(0x44FE39);
MakeCode(0x44FE3C);
MakeFunction(0x44FE24, 0x44FE3F);
MakeUnkn(0x44FE40, 1);
MakeNameEx(0x44FE40, "TControl.BeginAutoDrag", 0x20);
MakeComm(0x44FE40, "'procedure TControl.BeginAutoDrag;'");
MakeCode(0x44FE40);
MakeFunction(0x44FE40, 0x44FE59);
MakeUnkn(0x44FE5C, 1);
MakeNameEx(0x44FE5C, "TControl.BeginDrag", 0x20);
MakeComm(0x44FE5C, "'procedure TControl.BeginDrag(Immediate:Boolean; Threshold:Integer);'");
MakeCode(0x44FE5C);
MakeCode(0x44FE82);
MakeCode(0x44FEB3);
MakeCode(0x44FECC);
MakeCode(0x44FF21);
MakeCode(0x44FF2D);
MakeCode(0x44FF41);
MakeFunction(0x44FE5C, 0x44FF48);
MakeUnkn(0x44FF48, 1);
MakeNameEx(0x44FF48, "TControl.sub_0044FF48", 0x20);
MakeComm(0x44FF48, "'procedure TControl.sub_0044FF48;'");
MakeCode(0x44FF48);
MakeFunction(0x44FF48, 0x44FF49);
MakeUnkn(0x44FF4C, 1);
MakeNameEx(0x44FF4C, "TControl.Dragging", 0x20);
MakeComm(0x44FF4C, "'function TControl.Dragging:Boolean;'");
MakeCode(0x44FF4C);
MakeFunction(0x44FF4C, 0x44FF56);
MakeUnkn(0x44FF58, 1);
MakeNameEx(0x44FF58, "TControl.DragOver", 0x20);
MakeComm(0x44FF58, "'procedure TControl.DragOver(Source:TObject; X:Integer; Y:Integer; State:TDragState; var Accept:Boolean);'");
MakeCode(0x44FF58);
MakeCode(0x44FF8D);
MakeFunction(0x44FF58, 0x44FF93);
MakeUnkn(0x44FF94, 1);
MakeNameEx(0x44FF94, "TControl.DragDrop", 0x20);
MakeComm(0x44FF94, "'procedure TControl.DragDrop(Source:TObject; X:Integer; Y:Integer);'");
MakeCode(0x44FF94);
MakeCode(0x44FFB9);
MakeFunction(0x44FF94, 0x44FFBE);
MakeUnkn(0x44FFC0, 1);
MakeNameEx(0x44FFC0, "TControl.DoStartDrag", 0x20);
MakeComm(0x44FFC0, "'procedure TControl.DoStartDrag(var DragObject:TDragObject);'");
MakeCode(0x44FFC0);
MakeCode(0x44FFDD);
MakeFunction(0x44FFC0, 0x44FFDF);
MakeUnkn(0x44FFE0, 1);
MakeNameEx(0x44FFE0, "TControl.DoEndDrag", 0x20);
MakeComm(0x44FFE0, "'procedure TControl.DoEndDrag(Target:TObject; X:Integer; Y:Integer);'");
MakeCode(0x44FFE0);
MakeCode(0x450005);
MakeFunction(0x44FFE0, 0x45000A);
MakeUnkn(0x45000C, 1);
MakeNameEx(0x45000C, "TControl.PositionDockRect", 0x20);
MakeComm(0x45000C, "'procedure TControl.PositionDockRect(DragDockObject:TDragDockObject);'");
MakeCode(0x45000C);
MakeCode(0x450027);
MakeCode(0x450094);
MakeCode(0x4500D5);
MakeFunction(0x45000C, 0x4500DD);
MakeUnkn(0x4500E0, 1);
MakeNameEx(0x4500E0, "TControl.DockTrackNoTarget", 0x20);
MakeComm(0x4500E0, "'procedure TControl.DockTrackNoTarget(Source:TDragDockObject; X:Integer; Y:Integer);'");
MakeCode(0x4500E0);
MakeFunction(0x4500E0, 0x4500F6);
MakeUnkn(0x4500F8, 1);
MakeNameEx(0x4500F8, "TControl.DoEndDock", 0x20);
MakeComm(0x4500F8, "'procedure TControl.DoEndDock(Target:TObject; X:Integer; Y:Integer);'");
MakeCode(0x4500F8);
MakeCode(0x45011D);
MakeFunction(0x4500F8, 0x450122);
MakeUnkn(0x450124, 1);
MakeNameEx(0x450124, "TControl.DoStartDock", 0x20);
MakeComm(0x450124, "'procedure TControl.DoStartDock(var DragObject:TDragObject);'");
MakeCode(0x450124);
MakeCode(0x450141);
MakeFunction(0x450124, 0x450143);
MakeUnkn(0x450144, 1);
MakeNameEx(0x450144, "TControl.DoMouseActivate", 0x20);
MakeComm(0x450144, "'procedure TControl.DoMouseActivate(var Message:TCMMouseActivate);'");
MakeCode(0x450144);
MakeFunction(0x450144, 0x450178);
MakeUnkn(0x450178, 1);
MakeNameEx(0x450178, "TControl.DoMouseWheel", 0x20);
MakeComm(0x450178, "'procedure TControl.DoMouseWheel(Shift:TShiftState; WheelDelta:Integer; MousePos:TPoint);'");
MakeCode(0x450178);
MakeCode(0x4501B9);
MakeCode(0x4501C7);
MakeCode(0x450200);
MakeCode(0x450217);
MakeCode(0x45022C);
MakeCode(0x45023C);
MakeFunction(0x450178, 0x450249);
MakeUnkn(0x45024C, 1);
MakeNameEx(0x45024C, "TControl.DoMouseWheelDown", 0x20);
MakeComm(0x45024C, "'procedure TControl.DoMouseWheelDown(Shift:TShiftState; MousePos:TPoint);'");
MakeCode(0x45024C);
MakeCode(0x45028B);
MakeFunction(0x45024C, 0x450297);
MakeUnkn(0x450298, 1);
MakeNameEx(0x450298, "TControl.DoMouseWheelUp", 0x20);
MakeComm(0x450298, "'procedure TControl.DoMouseWheelUp(Shift:TShiftState; MousePos:TPoint);'");
MakeCode(0x450298);
MakeCode(0x4502D7);
MakeFunction(0x450298, 0x4502E3);
MakeUnkn(0x4502E4, 1);
MakeNameEx(0x4502E4, "TControl.DefaultDockImage", 0x20);
MakeComm(0x4502E4, "'procedure TControl.DefaultDockImage(DragDockObject:TDragDockObject; Erase:Boolean);'");
MakeCode(0x4502E4);
MakeCode(0x45030F);
MakeCode(0x45031B);
MakeCode(0x4503E4);
MakeCode(0x4503F1);
MakeCode(0x4503FF);
MakeCode(0x450404);
MakeFunction(0x4502E4, 0x45040D);
MakeUnkn(0x450410, 1);
MakeNameEx(0x450410, "TControl.DrawDragDockImage", 0x20);
MakeComm(0x450410, "'procedure TControl.DrawDragDockImage(DragDockObject:TDragDockObject);'");
MakeCode(0x450410);
MakeFunction(0x450410, 0x45041E);
MakeUnkn(0x450420, 1);
MakeNameEx(0x450420, "TControl.EraseDragDockImage", 0x20);
MakeComm(0x450420, "'procedure TControl.EraseDragDockImage(DragDockObject:TDragDockObject);'");
MakeCode(0x450420);
MakeFunction(0x450420, 0x45042E);
MakeUnkn(0x450430, 1);
MakeNameEx(0x450430, "TControl.DoDragMsg", 0x20);
MakeComm(0x450430, "'procedure TControl.DoDragMsg(var DragMsg:TCMDrag);'");
MakeCode(0x450430);
MakeCode(0x45046E);
MakeCode(0x45048B);
MakeCode(0x4504B7);
MakeCode(0x4504D9);
MakeCode(0x4504E3);
MakeCode(0x450500);
MakeCode(0x450518);
MakeFunction(0x450430, 0x450520);
MakeUnkn(0x450520, 1);
MakeNameEx(0x450520, "TControl.ManualDock", 0x20);
MakeComm(0x450520, "'function TControl.ManualDock(NewDockSite:TWinControl; DropControl:TControl; ControlSide:TAlign):Boolean;'");
MakeCode(0x450520);
MakeCode(0x45053D);
MakeCode(0x450584);
MakeCode(0x4505BE);
MakeCode(0x4505FA);
MakeCode(0x450625);
MakeCode(0x450627);
MakeCode(0x450666);
MakeCode(0x450668);
MakeCode(0x450684);
MakeCode(0x4506D6);
MakeCode(0x4506E3);
MakeCode(0x4506EC);
MakeCode(0x4506F1);
MakeCode(0x4506F3);
MakeFunction(0x450520, 0x450700);
MakeUnkn(0x450700, 1);
MakeNameEx(0x450700, "TControl.ManualFloat", 0x20);
MakeComm(0x450700, "'function TControl.ManualFloat(ScreenPos:TRect):Boolean;'");
MakeCode(0x450700);
MakeCode(0x450732);
MakeCode(0x450734);
MakeCode(0x45077B);
MakeCode(0x45078A);
MakeFunction(0x450700, 0x450793);
MakeUnkn(0x450794, 1);
MakeNameEx(0x450794, "TControl.DoConstraintsChange", 0x20);
MakeComm(0x450794, "'procedure TControl.DoConstraintsChange(Sender:TObject);'");
MakeCode(0x450794);
MakeFunction(0x450794, 0x4507A4);
MakeCode(0x4507A4);
MakeFunction(0x4507A4, 0x4507A7);
MakeUnkn(0x4507A8, 1);
MakeNameEx(0x4507A8, "TControl.CanResize", 0x20);
MakeComm(0x4507A8, "'function TControl.CanResize(var NewWidth:Integer; var NewHeight:Integer):Boolean;'");
MakeCode(0x4507A8);
MakeCode(0x4507D0);
MakeFunction(0x4507A8, 0x4507D7);
MakeUnkn(0x4507D8, 1);
MakeNameEx(0x4507D8, "TControl.DoCanAutoSize", 0x20);
MakeComm(0x4507D8, "'function TControl.DoCanAutoSize(var NewWidth:Integer; var NewHeight:Integer):Boolean;'");
MakeCode(0x4507D8);
MakeCode(0x450820);
MakeCode(0x450829);
MakeCode(0x45083A);
MakeCode(0x45083C);
MakeFunction(0x4507D8, 0x450842);
MakeUnkn(0x450844, 1);
MakeNameEx(0x450844, "TControl.DoCanResize", 0x20);
MakeComm(0x450844, "'function TControl.DoCanResize(var NewWidth:Integer; var NewHeight:Integer):Boolean;'");
MakeCode(0x450844);
MakeCode(0x45086D);
MakeFunction(0x450844, 0x450874);
MakeUnkn(0x450874, 1);
MakeNameEx(0x450874, "TControl.ConstrainedResize", 0x20);
MakeComm(0x450874, "'procedure TControl.ConstrainedResize(var MinWidth:Integer; var MinHeight:Integer; var MaxWidth:Integer; var MaxHeight:Integer);'");
MakeCode(0x450874);
MakeCode(0x45089D);
MakeFunction(0x450874, 0x4508A2);
MakeUnkn(0x4508A4, 1);
MakeNameEx(0x4508A4, "TControl.CalcCursorPos", 0x20);
MakeComm(0x4508A4, "'function TControl.CalcCursorPos:TPoint;'");
MakeCode(0x4508A4);
MakeFunction(0x4508A4, 0x4508CF);
MakeUnkn(0x4508D0, 1);
MakeNameEx(0x4508D0, "TControl.DesignWndProc", 0x20);
MakeComm(0x4508D0, "'procedure TControl.DesignWndProc(var Message:TMessage);'");
MakeCode(0x4508D0);
MakeCode(0x4508F9);
MakeCode(0x4508FD);
MakeFunction(0x4508D0, 0x450901);
MakeUnkn(0x450904, 1);
MakeNameEx(0x450904, "TControl.DoConstrainedResize", 0x20);
MakeComm(0x450904, "'procedure TControl.DoConstrainedResize(var NewWidth:Integer; var NewHeight:Integer);'");
MakeCode(0x450904);
MakeCode(0x45091D);
MakeCode(0x450922);
MakeCode(0x450932);
MakeCode(0x450938);
MakeCode(0x450948);
MakeCode(0x45094E);
MakeCode(0x45095E);
MakeCode(0x450964);
MakeCode(0x450992);
MakeCode(0x4509A4);
MakeCode(0x4509BB);
MakeCode(0x4509D0);
MakeFunction(0x450904, 0x4509D7);
MakeUnkn(0x4509D8, 1);
MakeNameEx(0x4509D8, "TControl.Perform", 0x20);
MakeComm(0x4509D8, "'function TControl.Perform(Msg:Cardinal; WParam:Longint; LParam:Longint):Longint;'");
MakeCode(0x4509D8);
MakeCode(0x4509FF);
MakeFunction(0x4509D8, 0x450A09);
MakeUnkn(0x450A0C, 1);
MakeNameEx(0x450A0C, "TControl.CalcDockSizes", 0x20);
MakeComm(0x450A0C, "'procedure TControl.CalcDockSizes;'");
MakeCode(0x450A0C);
MakeCode(0x450A2E);
MakeCode(0x450A4F);
MakeCode(0x450A5A);
MakeCode(0x450A73);
MakeCode(0x450A7C);
MakeFunction(0x450A0C, 0x450A7E);
MakeUnkn(0x450A80, 1);
MakeNameEx(0x450A80, "TControl.UpdateBoundsRect", 0x20);
MakeComm(0x450A80, "'procedure TControl.UpdateBoundsRect(const R:TRect);'");
MakeCode(0x450A80);
MakeFunction(0x450A80, 0x450AAF);
MakeUnkn(0x450AB0, 1);
MakeNameEx(0x450AB0, "TControl.sub_00450AB0", 0x20);
MakeComm(0x450AB0, "'procedure TControl.sub_00450AB0;'");
MakeCode(0x450AB0);
MakeFunction(0x450AB0, 0x450AB1);
MakeUnkn(0x450AB4, 1);
MakeNameEx(0x450AB4, "TControl.WndProc", 0x20);
MakeComm(0x450AB4, "'procedure TControl.WndProc(var Message:TMessage);'");
MakeCode(0x450AB4);
MakeCode(0x450B02);
MakeCode(0x450B44);
MakeCode(0x450B73);
MakeCode(0x450B76);
MakeCode(0x450BAD);
MakeCode(0x450BC2);
MakeCode(0x450C3E);
MakeCode(0x450C5F);
MakeCode(0x450C90);
MakeCode(0x450CAE);
MakeCode(0x450CCE);
MakeCode(0x450CE4);
MakeCode(0x450CEB);
MakeCode(0x450CF2);
MakeCode(0x450D52);
MakeCode(0x450D69);
MakeCode(0x450D72);
MakeFunction(0x450AB4, 0x450D79);
MakeUnkn(0x450D84, 1);
MakeNameEx(0x450D84, "TControl.DefaultHandler", 0x20);
MakeComm(0x450D84, "'procedure TControl.DefaultHandler(var Message:void );'");
MakeCode(0x450D84);
MakeCode(0x450D9A);
MakeCode(0x450DA5);
MakeCode(0x450DAA);
MakeCode(0x450DC2);
MakeCode(0x450DD0);
MakeCode(0x450DDC);
MakeCode(0x450E01);
MakeFunction(0x450D84, 0x450E05);
MakeUnkn(0x450E0C, 1);
MakeNameEx(0x450E0C, "TControl.ReadIsControl", 0x20);
MakeComm(0x450E0C, "'procedure TControl.ReadIsControl(Reader:TReader);'");
MakeCode(0x450E0C);
MakeFunction(0x450E0C, 0x450E1F);
MakeUnkn(0x450E20, 1);
MakeNameEx(0x450E20, "TControl.WriteIsControl", 0x20);
MakeComm(0x450E20, "'procedure TControl.WriteIsControl(Writer:TWriter);'");
MakeCode(0x450E20);
MakeFunction(0x450E20, 0x450E2B);
MakeUnkn(0x450E2C, 1);
MakeNameEx(0x450E2C, "DoWriteIsControl", 0x20);
MakeComm(0x450E2C, "'function DoWriteIsControl:Boolean;'");
MakeCode(0x450E2C);
MakeCode(0x450E51);
MakeFunction(0x450E2C, 0x450E5D);
MakeUnkn(0x450E60, 1);
MakeNameEx(0x450E60, "DoWriteExplicit", 0x20);
MakeComm(0x450E60, "'function DoWriteExplicit(Dim:TExplicitDimension):Boolean;'");
MakeCode(0x450E60);
MakeCode(0x450E83);
MakeCode(0x450EA7);
MakeCode(0x450EDA);
MakeCode(0x450EF1);
MakeCode(0x450EF8);
MakeCode(0x450EFD);
MakeCode(0x450F21);
MakeCode(0x450F54);
MakeCode(0x450F6B);
MakeCode(0x450F72);
MakeCode(0x450F77);
MakeCode(0x450F9B);
MakeCode(0x450FCE);
MakeCode(0x450FE5);
MakeCode(0x450FE9);
MakeCode(0x450FEE);
MakeCode(0x451012);
MakeCode(0x451045);
MakeCode(0x45105C);
MakeCode(0x451060);
MakeCode(0x451065);
MakeCode(0x451067);
MakeFunction(0x450E60, 0x45106A);
MakeUnkn(0x451080, 1);
MakeNameEx(0x451080, "TControl.DefineProperties", 0x20);
MakeComm(0x451080, "'procedure TControl.DefineProperties(Filer:TFiler);'");
MakeCode(0x451080);
MakeCode(0x4510DC);
MakeCode(0x4510E0);
MakeCode(0x4510E2);
MakeCode(0x451114);
MakeCode(0x451118);
MakeCode(0x45111A);
MakeCode(0x45114C);
MakeCode(0x451150);
MakeCode(0x451152);
MakeCode(0x451184);
MakeCode(0x451188);
MakeCode(0x45118A);
MakeFunction(0x451080, 0x45119D);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4511A8, -1);
MakeDword(0x4511A4);
MakeDword(0x4511A0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4511BC, -1);
MakeDword(0x4511B8);
MakeDword(0x4511B4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4511D4, -1);
MakeDword(0x4511D0);
MakeDword(0x4511CC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4511E8, -1);
MakeDword(0x4511E4);
MakeDword(0x4511E0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x451200, -1);
MakeDword(0x4511FC);
MakeDword(0x4511F8);
MakeUnkn(0x451210, 1);
MakeNameEx(0x451210, "TControl.Click", 0x20);
MakeComm(0x451210, "'procedure TControl.Click;'");
MakeCode(0x451210);
MakeCode(0x45124A);
MakeCode(0x451262);
MakeCode(0x45127A);
MakeFunction(0x451210, 0x45127C);
MakeUnkn(0x45127C, 1);
MakeNameEx(0x45127C, "TControl.DblClick", 0x20);
MakeComm(0x45127C, "'procedure TControl.DblClick;'");
MakeCode(0x45127C);
MakeCode(0x451297);
MakeFunction(0x45127C, 0x451299);
MakeUnkn(0x45129C, 1);
MakeNameEx(0x45129C, "TControl.MouseDown", 0x20);
MakeComm(0x45129C, "'procedure TControl.MouseDown(Button:TMouseButton; Shift:TShiftState; X:Integer; Y:Integer);'");
MakeCode(0x45129C);
MakeCode(0x4512CD);
MakeFunction(0x45129C, 0x4512D3);
MakeUnkn(0x4512D4, 1);
MakeNameEx(0x4512D4, "TControl.DoMouseDown", 0x20);
MakeComm(0x4512D4, "'procedure TControl.DoMouseDown(var Message:TWMMouse; Button:TMouseButton; Shift:TShiftState);'");
MakeCode(0x4512D4);
MakeCode(0x4512FB);
MakeCode(0x45132A);
MakeCode(0x45134F);
MakeFunction(0x4512D4, 0x451358);
MakeUnkn(0x451358, 1);
MakeNameEx(0x451358, "TControl.WMLButtonDown", 0x20);
MakeComm(0x451358, "'procedure TControl.WMLButtonDown(var Message:TWMLButtonDown);'");
MakeCode(0x451358);
MakeCode(0x45137F);
MakeCode(0x45138A);
MakeFunction(0x451358, 0x4513A0);
MakeUnkn(0x4513A4, 1);
MakeNameEx(0x4513A4, "TControl.WMNCLButtonDown", 0x20);
MakeComm(0x4513A4, "'procedure TControl.WMNCLButtonDown(var Message:TWMNCLButtonDown);'");
MakeCode(0x4513A4);
MakeFunction(0x4513A4, 0x4513BF);
MakeUnkn(0x4513C0, 1);
MakeNameEx(0x4513C0, "TControl.WMLButtonDblClk", 0x20);
MakeComm(0x4513C0, "'procedure TControl.WMLButtonDblClk(var Message:TWMLButtonDblClk);'");
MakeCode(0x4513C0);
MakeCode(0x4513E8);
MakeCode(0x4513F9);
MakeFunction(0x4513C0, 0x451410);
MakeUnkn(0x451414, 1);
MakeNameEx(0x451414, "TControl.sub_00451414", 0x20);
MakeComm(0x451414, "'procedure TControl.sub_00451414;'");
MakeCode(0x451414);
MakeComm(0x451414, "'TControl.FPopupMenu:TPopupMenu'");
MakeFunction(0x451414, 0x45141B);
MakeUnkn(0x45141C, 1);
MakeNameEx(0x45141C, "TControl.CheckNewSize", 0x20);
MakeComm(0x45141C, "'function TControl.CheckNewSize(var NewWidth:Integer; var NewHeight:Integer):Boolean;'");
MakeCode(0x45141C);
MakeCode(0x451483);
MakeCode(0x45149A);
MakeCode(0x45149C);
MakeCode(0x4514AD);
MakeFunction(0x45141C, 0x4514B7);
MakeUnkn(0x4514B8, 1);
MakeNameEx(0x4514B8, "TControl.WMRButtonDown", 0x20);
MakeComm(0x4514B8, "'procedure TControl.WMRButtonDown(var Message:TWMRButtonDown);'");
MakeCode(0x4514B8);
MakeFunction(0x4514B8, 0x4514DD);
MakeUnkn(0x4514E4, 1);
MakeNameEx(0x4514E4, "TControl.WMRButtonDblClk", 0x20);
MakeComm(0x4514E4, "'procedure TControl.WMRButtonDblClk(var Message:TWMRButtonDblClk);'");
MakeCode(0x4514E4);
MakeFunction(0x4514E4, 0x451509);
MakeUnkn(0x451510, 1);
MakeNameEx(0x451510, "TControl.WMMButtonDown", 0x20);
MakeComm(0x451510, "'procedure TControl.WMMButtonDown(var Message:TWMMButtonDown);'");
MakeCode(0x451510);
MakeFunction(0x451510, 0x451535);
MakeUnkn(0x45153C, 1);
MakeNameEx(0x45153C, "TControl.WMMButtonDblClk", 0x20);
MakeComm(0x45153C, "'procedure TControl.WMMButtonDblClk(var Message:TWMMButtonDblClk);'");
MakeCode(0x45153C);
MakeFunction(0x45153C, 0x451561);
MakeUnkn(0x451568, 1);
MakeNameEx(0x451568, "TControl.MouseMove", 0x20);
MakeComm(0x451568, "'procedure TControl.MouseMove(Shift:TShiftState; X:Integer; Y:Integer);'");
MakeCode(0x451568);
MakeCode(0x451593);
MakeFunction(0x451568, 0x451599);
MakeUnkn(0x45159C, 1);
MakeNameEx(0x45159C, "TControl.WMMouseMove", 0x20);
MakeComm(0x45159C, "'procedure TControl.WMMouseMove(var Message:TWMMouseMove);'");
MakeCode(0x45159C);
MakeCode(0x4515C6);
MakeCode(0x4515F0);
MakeCode(0x45160F);
MakeFunction(0x45159C, 0x451614);
MakeUnkn(0x451614, 1);
MakeNameEx(0x451614, "TControl.MouseUp", 0x20);
MakeComm(0x451614, "'procedure TControl.MouseUp(Button:TMouseButton; Shift:TShiftState; X:Integer; Y:Integer);'");
MakeCode(0x451614);
MakeCode(0x451645);
MakeFunction(0x451614, 0x45164B);
MakeUnkn(0x45164C, 1);
MakeNameEx(0x45164C, "TControl.DoMouseUp", 0x20);
MakeComm(0x45164C, "'procedure TControl.DoMouseUp(var Message:TWMMouse; Button:TMouseButton);'");
MakeCode(0x45164C);
MakeCode(0x45167D);
MakeFunction(0x45164C, 0x451681);
MakeUnkn(0x451684, 1);
MakeNameEx(0x451684, "TControl.WMLButtonUp", 0x20);
MakeComm(0x451684, "'procedure TControl.WMLButtonUp(var Message:TWMLButtonUp);'");
MakeCode(0x451684);
MakeCode(0x4516A6);
MakeCode(0x4516F4);
MakeFunction(0x451684, 0x451706);
MakeUnkn(0x451708, 1);
MakeNameEx(0x451708, "TControl.WMRButtonUp", 0x20);
MakeComm(0x451708, "'procedure TControl.WMRButtonUp(var Message:TWMRButtonUp);'");
MakeCode(0x451708);
MakeFunction(0x451708, 0x451725);
MakeUnkn(0x451728, 1);
MakeNameEx(0x451728, "TControl.WMMButtonUp", 0x20);
MakeComm(0x451728, "'procedure TControl.WMMButtonUp(var Message:TWMMButtonUp);'");
MakeCode(0x451728);
MakeFunction(0x451728, 0x451745);
MakeUnkn(0x451748, 1);
MakeNameEx(0x451748, "TControl.WMMouseWheel", 0x20);
MakeComm(0x451748, "'procedure TControl.WMMouseWheel(var Message:TWMMouseWheel);'");
MakeCode(0x451748);
MakeCode(0x451772);
MakeCode(0x45179A);
MakeFunction(0x451748, 0x45179E);
MakeUnkn(0x4517A0, 1);
MakeNameEx(0x4517A0, "TControl.WMCancelMode", 0x20);
MakeComm(0x4517A0, "'procedure TControl.WMCancelMode(var Message:TWMCancelMode);'");
MakeCode(0x4517A0);
MakeCode(0x4517D6);
MakeCode(0x4517DB);
MakeFunction(0x4517A0, 0x4517DD);
MakeUnkn(0x4517E0, 1);
MakeNameEx(0x4517E0, "TControl.WMWindowPosChanged", 0x20);
MakeComm(0x4517E0, "'procedure TControl.WMWindowPosChanged(var Message:TWMWindowPosChanged);'");
MakeCode(0x4517E0);
MakeCode(0x45181D);
MakeCode(0x45182F);
MakeCode(0x451843);
MakeCode(0x451855);
MakeCode(0x451884);
MakeFunction(0x4517E0, 0x451887);
MakeUnkn(0x451890, 1);
MakeNameEx(0x451890, "TControl.CMVisibleChanged", 0x20);
MakeComm(0x451890, "'procedure TControl.CMVisibleChanged(var Message:TMessage);'");
MakeCode(0x451890);
MakeCode(0x45189C);
MakeCode(0x4518A8);
MakeCode(0x4518AC);
MakeCode(0x4518AE);
MakeFunction(0x451890, 0x4518B6);
MakeUnkn(0x4518B8, 1);
MakeNameEx(0x4518B8, "TControl.CMColorChanged", 0x20);
MakeComm(0x4518B8, "'procedure TControl.CMColorChanged(var Message:TMessage);'");
MakeCode(0x4518B8);
MakeFunction(0x4518B8, 0x4518C7);
MakeUnkn(0x4518C8, 1);
MakeNameEx(0x4518C8, "TControl.CMFontChanged", 0x20);
MakeComm(0x4518C8, "'procedure TControl.CMFontChanged(var Message:TMessage);'");
MakeCode(0x4518C8);
MakeFunction(0x4518C8, 0x4518D7);
MakeUnkn(0x4518D8, 1);
MakeNameEx(0x4518D8, "TControl.CMEnabledChanged", 0x20);
MakeComm(0x4518D8, "'procedure TControl.CMEnabledChanged(var Message:TMessage);'");
MakeCode(0x4518D8);
MakeFunction(0x4518D8, 0x4518E7);
MakeUnkn(0x4518E8, 1);
MakeNameEx(0x4518E8, "TControl.CMParentColorChanged", 0x20);
MakeComm(0x4518E8, "'procedure TControl.CMParentColorChanged(var Message:TMessage);'");
MakeCode(0x4518E8);
MakeCode(0x451903);
MakeCode(0x451910);
MakeCode(0x451914);
MakeFunction(0x4518E8, 0x451916);
MakeUnkn(0x451918, 1);
MakeNameEx(0x451918, "TControl.CMParentBiDiModeChanged", 0x20);
MakeComm(0x451918, "'procedure TControl.CMParentBiDiModeChanged(var Message:TMessage);'");
MakeCode(0x451918);
MakeCode(0x451934);
MakeCode(0x451938);
MakeFunction(0x451918, 0x45193B);
MakeUnkn(0x45193C, 1);
MakeNameEx(0x45193C, "TControl.CMMouseWheel", 0x20);
MakeComm(0x45193C, "'procedure TControl.CMMouseWheel(var Message:TCMMouseWheel);'");
MakeCode(0x45193C);
MakeCode(0x451987);
MakeCode(0x4519A4);
MakeFunction(0x45193C, 0x4519AB);
MakeUnkn(0x4519AC, 1);
MakeNameEx(0x4519AC, "TControl.CMBiDiModeChanged", 0x20);
MakeComm(0x4519AC, "'procedure TControl.CMBiDiModeChanged(var Message:TMessage);'");
MakeCode(0x4519AC);
MakeCode(0x4519CA);
MakeFunction(0x4519AC, 0x4519CC);
MakeUnkn(0x4519CC, 1);
MakeNameEx(0x4519CC, "TControl.CMParentShowHintChanged", 0x20);
MakeComm(0x4519CC, "'procedure TControl.CMParentShowHintChanged(var Message:TMessage);'");
MakeCode(0x4519CC);
MakeCode(0x451A05);
MakeFunction(0x4519CC, 0x451A07);
MakeUnkn(0x451A08, 1);
MakeNameEx(0x451A08, "TControl.CMParentFontChanged", 0x20);
MakeComm(0x451A08, "'procedure TControl.CMParentFontChanged(var Message:TMessage);'");
MakeCode(0x451A08);
MakeCode(0x451A23);
MakeCode(0x451A30);
MakeCode(0x451A34);
MakeFunction(0x451A08, 0x451A36);
MakeUnkn(0x451A38, 1);
MakeNameEx(0x451A38, "TControl.CMSysFontChanged", 0x20);
MakeComm(0x451A38, "'procedure TControl.CMSysFontChanged(var Message:TMessage);'");
MakeCode(0x451A38);
MakeCode(0x451A59);
MakeFunction(0x451A38, 0x451A5B);
MakeUnkn(0x451A5C, 1);
MakeNameEx(0x451A5C, "TControl.CMHitTest", 0x20);
MakeComm(0x451A5C, "'procedure TControl.CMHitTest(var Message:TWMNCHitTest);'");
MakeCode(0x451A5C);
MakeFunction(0x451A5C, 0x451A64);
MakeUnkn(0x451A64, 1);
MakeNameEx(0x451A64, "TControl.CMMouseEnter", 0x20);
MakeComm(0x451A64, "'procedure TControl.CMMouseEnter(var Message:TMessage);'");
MakeCode(0x451A64);
MakeCode(0x451A7E);
MakeCode(0x451A9C);
MakeFunction(0x451A64, 0x451A9F);
MakeUnkn(0x451AA0, 1);
MakeNameEx(0x451AA0, "TControl.CMMouseLeave", 0x20);
MakeComm(0x451AA0, "'procedure TControl.CMMouseLeave(var Message:TMessage);'");
MakeCode(0x451AA0);
MakeCode(0x451ABA);
MakeCode(0x451AD8);
MakeFunction(0x451AA0, 0x451ADB);
MakeUnkn(0x451ADC, 1);
MakeNameEx(0x451ADC, "TControl.CMDesignHitTest", 0x20);
MakeComm(0x451ADC, "'procedure TControl.CMDesignHitTest(var Message:TWMMouse);'");
MakeCode(0x451ADC);
MakeFunction(0x451ADC, 0x451AE2);
MakeUnkn(0x451AE4, 1);
MakeNameEx(0x451AE4, "TControl.CreateFloatingDockSite", 0x20);
MakeComm(0x451AE4, "'function TControl.CreateFloatingDockSite(Bounds:TRect):TWinControl;'");
MakeCode(0x451AE4);
MakeCode(0x451B5E);
MakeFunction(0x451AE4, 0x451B67);
MakeUnkn(0x451B68, 1);
MakeNameEx(0x451B68, "UpdateFloatingDockSitePos", 0x20);
MakeComm(0x451B68, "'procedure UpdateFloatingDockSitePos;'");
MakeCode(0x451B68);
MakeFunction(0x451B68, 0x451BF1);
MakeUnkn(0x451BF4, 1);
MakeNameEx(0x451BF4, "TControl.CMFloat", 0x20);
MakeComm(0x451BF4, "'procedure TControl.CMFloat(var Message:TCMFloat);'");
MakeCode(0x451BF4);
MakeCode(0x451C1F);
MakeCode(0x451C4F);
MakeFunction(0x451BF4, 0x451C54);
MakeUnkn(0x451C54, 1);
MakeNameEx(0x451C54, "TControl.ActionChange", 0x20);
MakeComm(0x451C54, "'procedure TControl.ActionChange(Sender:TObject; CheckDefaults:Boolean);'");
MakeCode(0x451C54);
MakeCode(0x451CB2);
MakeCode(0x451CBC);
MakeCode(0x451CCB);
MakeCode(0x451CD6);
MakeCode(0x451CE3);
MakeCode(0x451CF1);
MakeCode(0x451CFB);
MakeCode(0x451D09);
MakeCode(0x451D17);
MakeCode(0x451D29);
MakeCode(0x451D36);
MakeCode(0x451D44);
MakeCode(0x451D49);
MakeFunction(0x451C54, 0x451D52);
MakeUnkn(0x451D54, 1);
MakeNameEx(0x451D54, "TControl.DoActionChange", 0x20);
MakeComm(0x451D54, "'procedure TControl.DoActionChange(Sender:TObject);'");
MakeCode(0x451D54);
MakeCode(0x451D74);
MakeFunction(0x451D54, 0x451D77);
MakeUnkn(0x451D78, 1);
MakeNameEx(0x451D78, "TControl.sub_00451D78", 0x20);
MakeComm(0x451D78, "'procedure TControl.sub_00451D78;'");
MakeCode(0x451D78);
MakeFunction(0x451D78, 0x451D7E);
MakeUnkn(0x451D80, 1);
MakeNameEx(0x451D80, "TControl.IsCaptionStored", 0x20);
MakeComm(0x451D80, "'function TControl.IsCaptionStored(Value:TCaption):Boolean;'");
MakeCode(0x451D80);
MakeCode(0x451D9B);
MakeFunction(0x451D80, 0x451DA0);
MakeUnkn(0x451DA0, 1);
MakeNameEx(0x451DA0, "TControl.IsEnabledStored", 0x20);
MakeComm(0x451DA0, "'function TControl.IsEnabledStored(Value:Boolean):Boolean;'");
MakeCode(0x451DA0);
MakeCode(0x451DBB);
MakeFunction(0x451DA0, 0x451DC0);
MakeUnkn(0x451DC0, 1);
MakeNameEx(0x451DC0, "TControl.IsHintStored", 0x20);
MakeComm(0x451DC0, "'function TControl.IsHintStored(Value:string):Boolean;'");
MakeCode(0x451DC0);
MakeCode(0x451DDB);
MakeFunction(0x451DC0, 0x451DE0);
MakeUnkn(0x451DE0, 1);
MakeNameEx(0x451DE0, "TControl.IsHelpContextStored", 0x20);
MakeComm(0x451DE0, "'function TControl.IsHelpContextStored(Value:string):Boolean;'");
MakeCode(0x451DE0);
MakeCode(0x451DFB);
MakeFunction(0x451DE0, 0x451E00);
MakeUnkn(0x451E00, 1);
MakeNameEx(0x451E00, "TControl.IsVisibleStored", 0x20);
MakeComm(0x451E00, "'function TControl.IsVisibleStored(Value:Boolean):Boolean;'");
MakeCode(0x451E00);
MakeCode(0x451E1B);
MakeFunction(0x451E00, 0x451E20);
MakeUnkn(0x451E20, 1);
MakeNameEx(0x451E20, "TControl.IsOnClickStored", 0x20);
MakeComm(0x451E20, "'function TControl.IsOnClickStored(Value:TNotifyEvent):Boolean;'");
MakeCode(0x451E20);
MakeCode(0x451E3B);
MakeFunction(0x451E20, 0x451E40);
MakeUnkn(0x451E40, 1);
MakeNameEx(0x451E40, "TControl.Loaded", 0x20);
MakeComm(0x451E40, "'procedure TControl.Loaded;'");
MakeCode(0x451E40);
MakeCode(0x451E6C);
MakeFunction(0x451E40, 0x451E76);
MakeUnkn(0x451E78, 1);
MakeNameEx(0x451E78, "TControl.AssignTo", 0x20);
MakeComm(0x451E78, "'procedure TControl.AssignTo(Dest:TPersistent);'");
MakeCode(0x451E78);
MakeCode(0x451EF6);
MakeCode(0x451EFF);
MakeCode(0x451F0C);
MakeCode(0x451F15);
MakeCode(0x451F1A);
MakeFunction(0x451E78, 0x451F22);
MakeUnkn(0x451F24, 1);
MakeNameEx(0x451F24, "MinVar", 0x20);
MakeComm(0x451F24, "'function MinVar(const Data:array[$0..-$1] of System.Double; const _Dv_:$0..-$1):Integer;'");
MakeCode(0x451F24);
MakeCode(0x451F40);
MakeCode(0x451F50);
MakeCode(0x451F57);
MakeFunction(0x451F24, 0x451F5E);
MakeUnkn(0x451F60, 1);
MakeNameEx(0x451F60, "TControl.GetDockEdge", 0x20);
MakeComm(0x451F60, "'procedure TControl.GetDockEdge(MousePos:TPoint);'");
MakeCode(0x451F60);
MakeCode(0x451F84);
MakeCode(0x451F8C);
MakeCode(0x451F98);
MakeCode(0x451FA0);
MakeCode(0x451FF7);
MakeCode(0x451FFB);
MakeCode(0x451FFF);
MakeCode(0x452003);
MakeCode(0x452005);
MakeFunction(0x451F60, 0x45200F);
MakeUnkn(0x452010, 1);
MakeNameEx(0x452010, "TControl.GetFloating", 0x20);
MakeComm(0x452010, "'function TControl.GetFloating:Boolean;'");
MakeCode(0x452010);
MakeCode(0x452034);
MakeCode(0x452038);
MakeFunction(0x452010, 0x45203C);
MakeCode(0x45203C);
MakeComm(0x45203C, "'TControl.FFloatingDockSiteClass:TWinControlClass'");
MakeFunction(0x45203C, 0x452043);
MakeUnkn(0x452044, 1);
MakeNameEx(0x452044, "TControl.AdjustSize", 0x20);
MakeComm(0x452044, "'procedure TControl.AdjustSize;'");
MakeCode(0x452044);
MakeCode(0x452061);
MakeFunction(0x452044, 0x452063);
MakeUnkn(0x452064, 1);
MakeNameEx(0x452064, "TControl.DrawTextBiDiModeFlags", 0x20);
MakeComm(0x452064, "'function TControl.DrawTextBiDiModeFlags(Flags:Longint):Longint;'");
MakeCode(0x452064);
MakeCode(0x452089);
MakeCode(0x452094);
MakeFunction(0x452064, 0x4520A3);
MakeUnkn(0x4520A4, 1);
MakeNameEx(0x4520A4, "TControl.DrawTextBiDiModeFlagsReadingOnly", 0x20);
MakeComm(0x4520A4, "'function TControl.DrawTextBiDiModeFlagsReadingOnly:Longint;'");
MakeCode(0x4520A4);
MakeCode(0x4520B9);
MakeFunction(0x4520A4, 0x4520BD);
MakeUnkn(0x4520C0, 1);
MakeNameEx(0x4520C0, "TControl.InitiateAction", 0x20);
MakeComm(0x4520C0, "'procedure TControl.InitiateAction;'");
MakeCode(0x4520C0);
MakeFunction(0x4520C0, 0x4520CF);
MakeUnkn(0x4520D0, 1);
MakeNameEx(0x4520D0, "TControl.CMHintShow", 0x20);
MakeComm(0x4520D0, "'procedure TControl.CMHintShow(var Message:TMessage);'");
MakeCode(0x4520D0);
MakeCode(0x4520F9);
MakeFunction(0x4520D0, 0x4520FD);
MakeUnkn(0x452100, 1);
MakeNameEx(0x452100, "TControl.WMContextMenu", 0x20);
MakeComm(0x452100, "'procedure TControl.WMContextMenu(var Message:TWMContextMenu);'");
MakeCode(0x452100);
MakeCode(0x452129);
MakeCode(0x45216D);
MakeCode(0x4521A9);
MakeCode(0x452218);
MakeCode(0x45222D);
MakeCode(0x45223C);
MakeFunction(0x452100, 0x452244);
MakeUnkn(0x452244, 1);
MakeNameEx(0x452244, "TControl.DoContextPopup", 0x20);
MakeComm(0x452244, "'procedure TControl.DoContextPopup(MousePos:TPoint; var Handled:Boolean);'");
MakeCode(0x452244);
MakeCode(0x452270);
MakeFunction(0x452244, 0x452276);
MakeUnkn(0x452278, 1);
MakeNameEx(0x452278, "TControl.SetConstraints", 0x20);
MakeComm(0x452278, "'procedure TControl.SetConstraints(const Value:TSizeConstraints);'");
MakeCode(0x452278);
MakeFunction(0x452278, 0x452281);
MakeUnkn(0x452284, 1);
MakeNameEx(0x452284, "TControl.ClientToParent", 0x20);
MakeComm(0x452284, "'function TControl.ClientToParent(const Point:TPoint; AParent:TWinControl):TPoint;'");
MakeCode(0x452284);
MakeCode(0x4522B7);
MakeCode(0x4522EF);
MakeCode(0x452315);
MakeCode(0x452326);
MakeCode(0x452329);
MakeCode(0x452331);
MakeCode(0x452369);
MakeCode(0x452376);
MakeCode(0x452384);
MakeCode(0x452389);
MakeFunction(0x452284, 0x452393);
MakeUnkn(0x452394, 1);
MakeNameEx(0x452394, "TControl.CMMouseActivate", 0x20);
MakeComm(0x452394, "'procedure TControl.CMMouseActivate(var Message:TCMMouseActivate);'");
MakeCode(0x452394);
MakeCode(0x4523B2);
MakeFunction(0x452394, 0x4523B5);
MakeUnkn(0x4523B8, 1);
MakeNameEx(0x4523B8, "TControl.DoMarginChange", 0x20);
MakeComm(0x4523B8, "'procedure TControl.DoMarginChange(Sender:TObject);'");
MakeCode(0x4523B8);
MakeFunction(0x4523B8, 0x4523BE);
MakeUnkn(0x4523C0, 1);
MakeNameEx(0x4523C0, "TControl.SetMargins", 0x20);
MakeComm(0x4523C0, "'procedure TControl.SetMargins(const Value:TMargins);'");
MakeCode(0x4523C0);
MakeFunction(0x4523C0, 0x4523C9);
MakeUnkn(0x4523CC, 1);
MakeNameEx(0x4523CC, "TControl.GetAlignWithMargins", 0x20);
MakeComm(0x4523CC, "'function TControl.GetAlignWithMargins:Boolean;'");
MakeCode(0x4523CC);
MakeFunction(0x4523CC, 0x4523D4);
MakeUnkn(0x4523D4, 1);
MakeNameEx(0x4523D4, "TControl.SetAlignWithMargins", 0x20);
MakeComm(0x4523D4, "'procedure TControl.SetAlignWithMargins(Value:Boolean);'");
MakeCode(0x4523D4);
MakeCode(0x4523F2);
MakeCode(0x4523F9);
MakeCode(0x452400);
MakeFunction(0x4523D4, 0x452403);
MakeUnkn(0x452404, 1);
MakeNameEx(0x452404, "TControl.UpdateExplicitBounds", 0x20);
MakeComm(0x452404, "'procedure TControl.UpdateExplicitBounds;'");
MakeCode(0x452404);
MakeFunction(0x452404, 0x452435);
MakeUnkn(0x452438, 1);
MakeNameEx(0x452438, "TControl.WriteExplicitTop", 0x20);
MakeComm(0x452438, "'procedure TControl.WriteExplicitTop(Writer:TWriter);'");
MakeCode(0x452438);
MakeFunction(0x452438, 0x452445);
MakeUnkn(0x452448, 1);
MakeNameEx(0x452448, "TControl.WriteExplicitHeight", 0x20);
MakeComm(0x452448, "'procedure TControl.WriteExplicitHeight(Writer:TWriter);'");
MakeCode(0x452448);
MakeFunction(0x452448, 0x452455);
MakeUnkn(0x452458, 1);
MakeNameEx(0x452458, "TControl.WriteExplicitLeft", 0x20);
MakeComm(0x452458, "'procedure TControl.WriteExplicitLeft(Writer:TWriter);'");
MakeCode(0x452458);
MakeFunction(0x452458, 0x452465);
MakeUnkn(0x452468, 1);
MakeNameEx(0x452468, "TControl.ReadExplicitWidth", 0x20);
MakeComm(0x452468, "'procedure TControl.ReadExplicitWidth(Reader:TReader);'");
MakeCode(0x452468);
MakeFunction(0x452468, 0x45247E);
MakeUnkn(0x452480, 1);
MakeNameEx(0x452480, "TControl.WriteExplicitWidth", 0x20);
MakeComm(0x452480, "'procedure TControl.WriteExplicitWidth(Writer:TWriter);'");
MakeCode(0x452480);
MakeFunction(0x452480, 0x45248D);
MakeUnkn(0x452490, 1);
MakeNameEx(0x452490, "TControl.ReadExplicitTop", 0x20);
MakeComm(0x452490, "'procedure TControl.ReadExplicitTop(Reader:TReader);'");
MakeCode(0x452490);
MakeFunction(0x452490, 0x4524A6);
MakeUnkn(0x4524A8, 1);
MakeNameEx(0x4524A8, "TControl.ReadExplicitHeight", 0x20);
MakeComm(0x4524A8, "'procedure TControl.ReadExplicitHeight(Reader:TReader);'");
MakeCode(0x4524A8);
MakeFunction(0x4524A8, 0x4524BE);
MakeUnkn(0x4524C0, 1);
MakeNameEx(0x4524C0, "TControl.ReadExplicitLeft", 0x20);
MakeComm(0x4524C0, "'procedure TControl.ReadExplicitLeft(Reader:TReader);'");
MakeCode(0x4524C0);
MakeFunction(0x4524C0, 0x4524D6);
MakeUnkn(0x4524D8, 1);
MakeNameEx(0x4524D8, "TWinControlActionLink.AssignClient", 0x20);
MakeComm(0x4524D8, "'procedure TWinControlActionLink.AssignClient(AClient:TObject);'");
MakeCode(0x4524D8);
MakeFunction(0x4524D8, 0x4524FA);
MakeUnkn(0x4524FC, 1);
MakeNameEx(0x4524FC, "TWinControlActionLink.IsHelpContextLinked", 0x20);
MakeComm(0x4524FC, "'procedure TWinControlActionLink.IsHelpContextLinked;'");
MakeCode(0x4524FC);
MakeComm(0x4524FE, "'TControlActionLink.IsHelpLinked'");
MakeFunction(0x4524FC, 0x452502);
MakeCode(0x452504);
MakeFunction(0x452504, 0x45250A);
MakeUnkn(0x45250C, 1);
MakeNameEx(0x45250C, "TWinControl.Create", 0x20);
MakeComm(0x45250C, "'constructor TWinControl.Create(AOwner:TComponent);'");
MakeCode(0x45250C);
MakeCode(0x452525);
MakeCode(0x4525A0);
MakeCode(0x4525BD);
MakeCode(0x452610);
MakeCode(0x45261D);
MakeCode(0x452626);
MakeCode(0x45262B);
MakeCode(0x452644);
MakeFunction(0x45250C, 0x45264C);
MakeUnkn(0x452650, 1);
MakeNameEx(0x452650, "TWinControl.Destroy", 0x20);
MakeComm(0x452650, "'destructor TWinControl.Destroy;'");
MakeCode(0x452650);
MakeCode(0x45267D);
MakeCode(0x4526A2);
MakeCode(0x4526B5);
MakeCode(0x4526C2);
MakeCode(0x4526ED);
MakeCode(0x452707);
MakeCode(0x452729);
MakeFunction(0x452650, 0x45272E);
MakeUnkn(0x452730, 1);
MakeNameEx(0x452730, "TWinControl.FixupTabList", 0x20);
MakeComm(0x452730, "'procedure TWinControl.FixupTabList;'");
MakeCode(0x452730);
MakeCode(0x45278D);
MakeCode(0x4527B6);
MakeCode(0x4527BA);
MakeCode(0x4527C5);
MakeCode(0x4527DA);
MakeCode(0x4527DE);
MakeCode(0x4527EB);
MakeCode(0x4527F4);
MakeCode(0x4527F9);
MakeCode(0x4527FB);
MakeFunction(0x452730, 0x452801);
MakeUnkn(0x452804, 1);
MakeNameEx(0x452804, "TWinControl.ReadState", 0x20);
MakeComm(0x452804, "'procedure TWinControl.ReadState(Reader:TReader);'");
MakeCode(0x452804);
MakeCode(0x45282E);
MakeCode(0x45283B);
MakeCode(0x452844);
MakeCode(0x452849);
MakeCode(0x45286D);
MakeFunction(0x452804, 0x452879);
MakeUnkn(0x45287C, 1);
MakeNameEx(0x45287C, "TWinControl.AdjustClientRect", 0x20);
MakeComm(0x45287C, "'procedure TWinControl.AdjustClientRect(var Rect:TRect);'");
MakeCode(0x45287C);
MakeFunction(0x45287C, 0x4528AC);
MakeUnkn(0x4528AC, 1);
MakeNameEx(0x4528AC, "TWinControl.ArrangeControl", 0x20);
MakeComm(0x4528AC, "'procedure TWinControl.ArrangeControl(AControl:TControl; const ParentSize:TPoint; AAlign:TAlign; AAlignInfo:TAlignInfo; var Rect:TRect; UpdateAnchorOrigin:Boolean);'");
MakeCode(0x4528AC);
MakeCode(0x4528E3);
MakeCode(0x45295B);
MakeCode(0x452970);
MakeCode(0x452996);
MakeCode(0x45299B);
MakeCode(0x4529BD);
MakeCode(0x4529D3);
MakeCode(0x4529FA);
MakeCode(0x4529FF);
MakeCode(0x452A3A);
MakeCode(0x452A3F);
MakeCode(0x452A75);
MakeCode(0x452A7A);
MakeCode(0x452A92);
MakeCode(0x452A9C);
MakeCode(0x452AB8);
MakeCode(0x452AC8);
MakeCode(0x452AE4);
MakeCode(0x452AF4);
MakeCode(0x452B2B);
MakeCode(0x452B33);
MakeCode(0x452B41);
MakeCode(0x452B48);
MakeCode(0x452B56);
MakeCode(0x452B83);
MakeCode(0x452BC3);
MakeCode(0x452BEF);
MakeCode(0x452C06);
MakeCode(0x452C1D);
MakeCode(0x452C33);
MakeCode(0x452C4A);
MakeCode(0x452C74);
MakeFunction(0x4528AC, 0x452C7D);
MakeUnkn(0x452C8C, 1);
MakeNameEx(0x452C8C, "GetClientSize", 0x20);
MakeComm(0x452C8C, "'function GetClientSize(Control:TWinControl):TPoint;'");
MakeCode(0x452C8C);
MakeCode(0x452CBA);
MakeCode(0x452CC7);
MakeFunction(0x452C8C, 0x452CEA);
MakeUnkn(0x452CEC, 1);
MakeNameEx(0x452CEC, "InsertBefore", 0x20);
MakeComm(0x452CEC, "'function InsertBefore(C1:TControl; C2:TControl; AAlign:TAlign):Boolean;'");
MakeCode(0x452CEC);
MakeCode(0x452D2E);
MakeCode(0x452D57);
MakeCode(0x452DA0);
MakeCode(0x452DC0);
MakeCode(0x452E03);
MakeCode(0x452E16);
MakeFunction(0x452CEC, 0x452E1C);
MakeUnkn(0x452E1C, 1);
MakeNameEx(0x452E1C, "DoPosition", 0x20);
MakeComm(0x452E1C, "'procedure DoPosition(Control:TControl; AAlign:TAlign; AlignInfo:TAlignInfo);'");
MakeCode(0x452E1C);
MakeFunction(0x452E1C, 0x452E62);
MakeUnkn(0x452E64, 1);
MakeNameEx(0x452E64, "DoAlign", 0x20);
MakeComm(0x452E64, "'procedure DoAlign(AAlign:TAlign);'");
MakeCode(0x452E64);
MakeCode(0x452EAB);
MakeCode(0x452EC7);
MakeCode(0x452EE6);
MakeCode(0x452F27);
MakeCode(0x452F3E);
MakeCode(0x452F4A);
MakeCode(0x452F4B);
MakeCode(0x452F77);
MakeCode(0x452F86);
MakeCode(0x452F92);
MakeCode(0x452FAB);
MakeCode(0x452FE2);
MakeFunction(0x452E64, 0x452FE9);
MakeUnkn(0x452FF0, 1);
MakeNameEx(0x452FF0, "AlignWork", 0x20);
MakeComm(0x452FF0, "'function AlignWork:Boolean;'");
MakeCode(0x452FF0);
MakeCode(0x45300D);
MakeCode(0x453037);
MakeCode(0x453039);
MakeFunction(0x452FF0, 0x453040);
MakeUnkn(0x453044, 1);
MakeNameEx(0x453044, "TWinControl.AlignControls", 0x20);
MakeComm(0x453044, "'procedure TWinControl.AlignControls(AControl:TControl; var Rect:TRect);'");
MakeCode(0x453044);
MakeCode(0x453088);
MakeCode(0x45310D);
MakeCode(0x45311A);
MakeCode(0x453123);
MakeCode(0x453128);
MakeCode(0x45312A);
MakeCode(0x453142);
MakeFunction(0x453044, 0x453147);
MakeUnkn(0x453148, 1);
MakeNameEx(0x453148, "TWinControl.AlignControl", 0x20);
MakeComm(0x453148, "'procedure TWinControl.AlignControl(AControl:TControl);'");
MakeCode(0x453148);
MakeCode(0x453180);
MakeCode(0x4531B1);
MakeCode(0x4531BE);
MakeCode(0x4531CF);
MakeCode(0x4531D4);
MakeCode(0x4531D6);
MakeFunction(0x453148, 0x4531DB);
MakeUnkn(0x4531DC, 1);
MakeNameEx(0x4531DC, "TWinControl.DisableAlign", 0x20);
MakeComm(0x4531DC, "'procedure TWinControl.DisableAlign;'");
MakeCode(0x4531DC);
MakeFunction(0x4531DC, 0x4531E4);
MakeUnkn(0x4531E4, 1);
MakeNameEx(0x4531E4, "TWinControl.EnableAlign", 0x20);
MakeComm(0x4531E4, "'procedure TWinControl.EnableAlign;'");
MakeCode(0x4531E4);
MakeFunction(0x4531E4, 0x453201);
MakeUnkn(0x453204, 1);
MakeNameEx(0x453204, "TWinControl.Realign", 0x20);
MakeComm(0x453204, "'procedure TWinControl.Realign;'");
MakeCode(0x453204);
MakeFunction(0x453204, 0x45320C);
MakeUnkn(0x45320C, 1);
MakeNameEx(0x45320C, "TWinControl.DoFlipChildren", 0x20);
MakeComm(0x45320C, "'procedure TWinControl.DoFlipChildren;'");
MakeCode(0x45320C);
MakeCode(0x453252);
MakeCode(0x45328D);
MakeCode(0x453291);
MakeCode(0x45329F);
MakeCode(0x4532BB);
MakeCode(0x4532C8);
MakeCode(0x4532D1);
MakeCode(0x4532D6);
MakeFunction(0x45320C, 0x4532DF);
MakeUnkn(0x4532E0, 1);
MakeNameEx(0x4532E0, "TWinControl.FlipChildren", 0x20);
MakeComm(0x4532E0, "'procedure TWinControl.FlipChildren(AllLevels:Boolean);'");
MakeCode(0x4532E0);
MakeCode(0x453336);
MakeCode(0x45335E);
MakeCode(0x453362);
MakeCode(0x45336E);
MakeCode(0x45337D);
MakeCode(0x45339B);
MakeCode(0x4533A4);
MakeCode(0x4533B3);
MakeCode(0x4533CE);
MakeCode(0x4533D3);
MakeCode(0x4533ED);
MakeCode(0x45341B);
MakeCode(0x45341F);
MakeFunction(0x4532E0, 0x453426);
MakeUnkn(0x453428, 1);
MakeNameEx(0x453428, "TWinControl.ContainsControl", 0x20);
MakeComm(0x453428, "'function TWinControl.ContainsControl(Control:TControl):Boolean;'");
MakeCode(0x453428);
MakeFunction(0x453428, 0x45343B);
MakeUnkn(0x45343C, 1);
MakeNameEx(0x45343C, "TWinControl.RemoveFocus", 0x20);
MakeComm(0x45343C, "'procedure TWinControl.RemoveFocus(Removing:Boolean);'");
MakeCode(0x45343C);
MakeCode(0x453458);
MakeFunction(0x45343C, 0x45345B);
MakeUnkn(0x45345C, 1);
MakeNameEx(0x45345C, "TWinControl.Insert", 0x20);
MakeComm(0x45345C, "'procedure TWinControl.Insert(AControl:TControl);'");
MakeCode(0x45345C);
MakeCode(0x453493);
MakeCode(0x4534A0);
MakeCode(0x4534A3);
MakeFunction(0x45345C, 0x4534A6);
MakeUnkn(0x4534A8, 1);
MakeNameEx(0x4534A8, "TWinControl.Remove", 0x20);
MakeComm(0x4534A8, "'procedure TWinControl.Remove(AControl:TControl);'");
MakeCode(0x4534A8);
MakeCode(0x4534DB);
MakeCode(0x4534E8);
MakeFunction(0x4534A8, 0x4534F0);
MakeUnkn(0x4534F0, 1);
MakeNameEx(0x4534F0, "TWinControl.InsertControl", 0x20);
MakeComm(0x4534F0, "'procedure TWinControl.InsertControl(AControl:TControl);'");
MakeCode(0x4534F0);
MakeCode(0x4535AF);
MakeCode(0x4535C4);
MakeCode(0x4535CD);
MakeFunction(0x4534F0, 0x4535E3);
MakeUnkn(0x4535E4, 1);
MakeNameEx(0x4535E4, "TWinControl.RemoveControl", 0x20);
MakeComm(0x4535E4, "'procedure TWinControl.RemoveControl(AControl:TControl);'");
MakeCode(0x4535E4);
MakeCode(0x453630);
MakeCode(0x453648);
MakeFunction(0x4535E4, 0x453681);
MakeUnkn(0x453684, 1);
MakeNameEx(0x453684, "TWinControl.GetControl", 0x20);
MakeComm(0x453684, "'function TWinControl.GetControl(Index:Integer):TControl;'");
MakeCode(0x453684);
MakeCode(0x45369B);
MakeCode(0x45369D);
MakeCode(0x4536AC);
MakeCode(0x4536BB);
MakeFunction(0x453684, 0x4536C0);
MakeUnkn(0x4536C0, 1);
MakeNameEx(0x4536C0, "TWinControl.GetControlCount", 0x20);
MakeComm(0x4536C0, "'function TWinControl.GetControlCount:Integer;'");
MakeCode(0x4536C0);
MakeCode(0x4536CF);
MakeCode(0x4536DC);
MakeFunction(0x4536C0, 0x4536DF);
MakeUnkn(0x4536E0, 1);
MakeNameEx(0x4536E0, "TWinControl.Broadcast", 0x20);
MakeComm(0x4536E0, "'procedure TWinControl.Broadcast(var Message:void );'");
MakeCode(0x4536E0);
MakeCode(0x4536FC);
MakeCode(0x45371A);
MakeFunction(0x4536E0, 0x453720);
MakeUnkn(0x453720, 1);
MakeNameEx(0x453720, "TWinControl.Notification", 0x20);
MakeComm(0x453720, "'procedure TWinControl.Notification(AComponent:TComponent; Operation:TOperation);'");
MakeCode(0x453720);
MakeCode(0x453749);
MakeFunction(0x453720, 0x45374D);
MakeUnkn(0x453750, 1);
MakeNameEx(0x453750, "TWinControl.NotifyControls", 0x20);
MakeComm(0x453750, "'procedure TWinControl.NotifyControls(Msg:Word);'");
MakeCode(0x453750);
MakeFunction(0x453750, 0x453776);
MakeUnkn(0x453778, 1);
MakeNameEx(0x453778, "TWinControl.CreateSubClass", 0x20);
MakeComm(0x453778, "'procedure TWinControl.CreateSubClass(var Params:TCreateParams; ControlClassName:PChar);'");
MakeCode(0x453778);
MakeCode(0x4537CE);
MakeCode(0x4537DF);
MakeFunction(0x453778, 0x4537E3);
MakeUnkn(0x4537E4, 1);
MakeNameEx(0x4537E4, "TWinControl.AddBiDiModeExStyle", 0x20);
MakeComm(0x4537E4, "'procedure TWinControl.AddBiDiModeExStyle(var ExStyle:DWORD);'");
MakeCode(0x4537E4);
MakeCode(0x4537FC);
MakeCode(0x45380D);
MakeCode(0x453833);
MakeCode(0x453845);
MakeFunction(0x4537E4, 0x453849);
MakeUnkn(0x45384C, 1);
MakeNameEx(0x45384C, "TWinControl.CreateParams", 0x20);
MakeComm(0x45384C, "'procedure TWinControl.CreateParams(var Params:TCreateParams);'");
MakeCode(0x45384C);
MakeCode(0x4538A7);
MakeCode(0x4538BF);
MakeCode(0x4538CF);
MakeCode(0x4538FA);
MakeCode(0x453903);
MakeCode(0x453954);
MakeCode(0x453961);
MakeCode(0x45396A);
MakeCode(0x45396F);
MakeFunction(0x45384C, 0x453978);
MakeUnkn(0x453978, 1);
MakeNameEx(0x453978, "TWinControl.CreateWnd", 0x20);
MakeComm(0x453978, "'procedure TWinControl.CreateWnd;'");
MakeCode(0x453978);
MakeCode(0x4539E4);
MakeCode(0x453A24);
MakeCode(0x453A58);
MakeCode(0x453A69);
MakeCode(0x453A89);
MakeCode(0x453AAD);
MakeCode(0x453AE3);
MakeCode(0x453B20);
MakeCode(0x453B2D);
MakeCode(0x453B39);
MakeCode(0x453B3E);
MakeFunction(0x453978, 0x453B46);
MakeUnkn(0x453B48, 1);
MakeNameEx(0x453B48, "TWinControl.CreateWindowHandle", 0x20);
MakeComm(0x453B48, "'procedure TWinControl.CreateWindowHandle(const Params:TCreateParams);'");
MakeCode(0x453B48);
MakeFunction(0x453B48, 0x453B86);
MakeUnkn(0x453B88, 1);
MakeNameEx(0x453B88, "TWinControl.ReadDesignSize", 0x20);
MakeComm(0x453B88, "'procedure TWinControl.ReadDesignSize(Reader:TReader);'");
MakeCode(0x453B88);
MakeFunction(0x453B88, 0x453BC0);
MakeUnkn(0x453BC0, 1);
MakeNameEx(0x453BC0, "TWinControl.WriteDesignSize", 0x20);
MakeComm(0x453BC0, "'procedure TWinControl.WriteDesignSize(Writer:TWriter);'");
MakeCode(0x453BC0);
MakeFunction(0x453BC0, 0x453C14);
MakeUnkn(0x453C14, 1);
MakeNameEx(0x453C14, "PointsEqual", 0x20);
MakeComm(0x453C14, "'function PointsEqual(const P1:TPoint; const P2:TPoint):Boolean;'");
MakeCode(0x453C14);
MakeCode(0x453C22);
MakeCode(0x453C25);
MakeFunction(0x453C14, 0x453C28);
MakeUnkn(0x453C28, 1);
MakeNameEx(0x453C28, "DoWriteDesignSize", 0x20);
MakeComm(0x453C28, "'function DoWriteDesignSize:Boolean;'");
MakeCode(0x453C28);
MakeCode(0x453C61);
MakeCode(0x453C7F);
MakeCode(0x453CA6);
MakeCode(0x453CAA);
MakeCode(0x453CC8);
MakeCode(0x453CEF);
MakeCode(0x453CF3);
MakeCode(0x453CF7);
MakeFunction(0x453C28, 0x453D01);
MakeUnkn(0x453D08, 1);
MakeNameEx(0x453D08, "TWinControl.DefineProperties", 0x20);
MakeComm(0x453D08, "'procedure TWinControl.DefineProperties(Filer:TFiler);'");
MakeCode(0x453D08);
MakeFunction(0x453D08, 0x453D4D);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x453D58, -1);
MakeDword(0x453D54);
MakeDword(0x453D50);
MakeUnkn(0x453D64, 1);
MakeNameEx(0x453D64, "TWinControl.DestroyWnd", 0x20);
MakeComm(0x453D64, "'procedure TWinControl.DestroyWnd;'");
MakeCode(0x453D64);
MakeCode(0x453D8C);
MakeCode(0x453DAB);
MakeFunction(0x453D64, 0x453DBE);
MakeUnkn(0x453DC4, 1);
MakeNameEx(0x453DC4, "TWinControl.DestroyWindowHandle", 0x20);
MakeComm(0x453DC4, "'procedure TWinControl.DestroyWindowHandle;'");
MakeCode(0x453DC4);
MakeCode(0x453DFA);
MakeCode(0x453E07);
MakeCode(0x453E11);
MakeCode(0x453E16);
MakeFunction(0x453DC4, 0x453E26);
MakeUnkn(0x453E28, 1);
MakeNameEx(0x453E28, "TWinControl.PrecedingWindow", 0x20);
MakeComm(0x453E28, "'function TWinControl.PrecedingWindow(Control:TWinControl):HWND;'");
MakeCode(0x453E28);
MakeCode(0x453E4E);
MakeCode(0x453E69);
MakeCode(0x453E6B);
MakeFunction(0x453E28, 0x453E6F);
MakeUnkn(0x453E70, 1);
MakeNameEx(0x453E70, "TWinControl.CreateHandle", 0x20);
MakeComm(0x453E70, "'procedure TWinControl.CreateHandle;'");
MakeCode(0x453E70);
MakeCode(0x453EDF);
MakeCode(0x453EF0);
MakeCode(0x453F02);
MakeFunction(0x453E70, 0x453F06);
MakeUnkn(0x453F08, 1);
MakeNameEx(0x453F08, "TWinControl.CustomAlignInsertBefore", 0x20);
MakeComm(0x453F08, "'function TWinControl.CustomAlignInsertBefore(C1:TControl; C2:TControl):Boolean;'");
MakeCode(0x453F08);
MakeCode(0x453F28);
MakeFunction(0x453F08, 0x453F2C);
MakeUnkn(0x453F2C, 1);
MakeNameEx(0x453F2C, "TWinControl.CustomAlignPosition", 0x20);
MakeComm(0x453F2C, "'procedure TWinControl.CustomAlignPosition(Control:TControl; var NewLeft:Integer; var NewTop:Integer; var NewWidth:Integer; var NewHeight:Integer; var AlignRect:TRect; AlignInfo:TAlignInfo);'");
MakeCode(0x453F2C);
MakeCode(0x453F71);
MakeFunction(0x453F2C, 0x453F79);
MakeUnkn(0x453F7C, 1);
MakeNameEx(0x453F7C, "DestroyChildWindow", 0x20);
MakeComm(0x453F7C, "'function DestroyChildWindow(Window:HWND; Data:PDestroyChildData):BOOL; stdcall;'");
MakeCode(0x453F7C);
MakeCode(0x453FB4);
MakeFunction(0x453F7C, 0x453FBD);
MakeUnkn(0x453FC0, 1);
MakeNameEx(0x453FC0, "TWinControl.DestroyHandle", 0x20);
MakeComm(0x453FC0, "'procedure TWinControl.DestroyHandle;'");
MakeCode(0x453FC0);
MakeCode(0x453FE6);
MakeCode(0x453FFF);
MakeCode(0x45402B);
MakeFunction(0x453FC0, 0x454031);
MakeUnkn(0x454034, 1);
MakeNameEx(0x454034, "TWinControl.RecreateWnd", 0x20);
MakeComm(0x454034, "'procedure TWinControl.RecreateWnd;'");
MakeCode(0x454034);
MakeFunction(0x454034, 0x45404C);
MakeUnkn(0x45404C, 1);
MakeNameEx(0x45404C, "TWinControl.CMRecreateWnd", 0x20);
MakeComm(0x45404C, "'procedure TWinControl.CMRecreateWnd(var Message:TMessage);'");
MakeCode(0x45404C);
MakeCode(0x454090);
MakeCode(0x45409D);
MakeCode(0x4540A8);
MakeCode(0x4540AD);
MakeCode(0x4540D0);
MakeFunction(0x45404C, 0x4540D5);
MakeUnkn(0x4540D8, 1);
MakeNameEx(0x4540D8, "TWinControl.UpdateShowing", 0x20);
MakeComm(0x4540D8, "'procedure TWinControl.UpdateShowing;'");
MakeCode(0x4540D8);
MakeFunction(0x4540D8, 0x4541F9);
MakeUnkn(0x4541FC, 1);
MakeNameEx(0x4541FC, "TWinControl.UpdateControlState", 0x20);
MakeComm(0x4541FC, "'procedure TWinControl.UpdateControlState;'");
MakeCode(0x4541FC);
MakeCode(0x454204);
MakeCode(0x45420F);
MakeCode(0x454236);
MakeCode(0x45423D);
MakeFunction(0x4541FC, 0x454240);
MakeUnkn(0x454240, 1);
MakeNameEx(0x454240, "TWinControl.SetParentWindow", 0x20);
MakeComm(0x454240, "'procedure TWinControl.SetParentWindow(Value:HWND);'");
MakeCode(0x454240);
MakeCode(0x4542C3);
MakeCode(0x4542CD);
MakeCode(0x454301);
MakeCode(0x45430E);
MakeCode(0x454319);
MakeCode(0x45431E);
MakeCode(0x454320);
MakeFunction(0x454240, 0x454324);
MakeUnkn(0x454324, 1);
MakeNameEx(0x454324, "TWinControl.MainWndProc", 0x20);
MakeComm(0x454324, "'procedure TWinControl.MainWndProc(var Message:TMessage);'");
MakeCode(0x454324);
MakeCode(0x454353);
MakeCode(0x454360);
MakeCode(0x45436B);
MakeCode(0x454370);
MakeCode(0x454372);
MakeCode(0x45437C);
MakeCode(0x454395);
MakeFunction(0x454324, 0x45439B);
MakeUnkn(0x45439C, 1);
MakeNameEx(0x45439C, "GetControlAtPos", 0x20);
MakeComm(0x45439C, "'function GetControlAtPos(AControl:TControl):Boolean;'");
MakeCode(0x45439C);
MakeCode(0x454405);
MakeCode(0x454409);
MakeCode(0x454423);
MakeCode(0x454452);
MakeCode(0x454456);
MakeCode(0x454458);
MakeCode(0x454462);
MakeFunction(0x45439C, 0x454467);
MakeUnkn(0x454468, 1);
MakeNameEx(0x454468, "TWinControl.ControlAtPos", 0x20);
MakeComm(0x454468, "'function TWinControl.ControlAtPos(const Pos:TPoint; AllowDisabled:Boolean; AllowWinControls:Boolean; AllLevels:Boolean):TControl;'");
MakeCode(0x454468);
MakeCode(0x45449F);
MakeCode(0x4544C3);
MakeCode(0x4544E1);
MakeCode(0x4544E7);
MakeCode(0x454500);
MakeCode(0x45451E);
MakeFunction(0x454468, 0x45452A);
MakeUnkn(0x45452C, 1);
MakeNameEx(0x45452C, "TWinControl.IsControlActivateMsg", 0x20);
MakeComm(0x45452C, "'function TWinControl.IsControlActivateMsg(var Message:TWMMouseActivate; Control:TControl):Boolean;'");
MakeCode(0x45452C);
MakeCode(0x45457F);
MakeCode(0x4545A8);
MakeCode(0x4545BD);
MakeCode(0x4545F5);
MakeCode(0x45460D);
MakeCode(0x454617);
MakeCode(0x454621);
MakeCode(0x45462B);
MakeCode(0x454633);
MakeCode(0x45466A);
MakeCode(0x45466C);
MakeFunction(0x45452C, 0x454676);
MakeUnkn(0x454678, 1);
MakeNameEx(0x454678, "TWinControl.IsControlMouseMsg", 0x20);
MakeComm(0x454678, "'function TWinControl.IsControlMouseMsg(var Message:TWMMouse):Boolean;'");
MakeCode(0x454678);
MakeCode(0x4546AF);
MakeCode(0x4546B3);
MakeCode(0x4546DF);
MakeCode(0x454723);
MakeFunction(0x454678, 0x45472A);
MakeUnkn(0x45472C, 1);
MakeNameEx(0x45472C, "TWinControl.WndProc", 0x20);
MakeComm(0x45472C, "'procedure TWinControl.WndProc(var Message:TMessage);'");
MakeCode(0x45472C);
MakeCode(0x454768);
MakeCode(0x45477F);
MakeCode(0x4547B0);
MakeCode(0x4547C6);
MakeCode(0x454801);
MakeCode(0x454825);
MakeCode(0x45483F);
MakeCode(0x454851);
MakeCode(0x4548B6);
MakeCode(0x4548DD);
MakeCode(0x4548EE);
MakeCode(0x4548FE);
MakeCode(0x454951);
MakeCode(0x454957);
MakeCode(0x45497B);
MakeCode(0x454995);
MakeCode(0x4549B1);
MakeCode(0x4549C8);
MakeCode(0x4549DD);
MakeCode(0x4549F4);
MakeCode(0x454A09);
MakeCode(0x454A23);
MakeCode(0x454A3A);
MakeCode(0x454A79);
MakeCode(0x454AD0);
MakeCode(0x454B12);
MakeCode(0x454B27);
MakeCode(0x454B69);
MakeCode(0x454B7D);
MakeCode(0x454B96);
MakeCode(0x454BA3);
MakeCode(0x454BB7);
MakeCode(0x454BB8);
MakeCode(0x454BBD);
MakeCode(0x454BBF);
MakeCode(0x454BCA);
MakeFunction(0x45472C, 0x454BCF);
MakeUnkn(0x454BD0, 1);
MakeNameEx(0x454BD0, "TWinControl.DefaultHandler", 0x20);
MakeComm(0x454BD0, "'procedure TWinControl.DefaultHandler(var Message:void );'");
MakeCode(0x454BD0);
MakeCode(0x454C10);
MakeCode(0x454C2A);
MakeCode(0x454C44);
MakeCode(0x454C83);
MakeCode(0x454C90);
MakeCode(0x454CAF);
MakeCode(0x454CC8);
MakeCode(0x454CD1);
MakeFunction(0x454BD0, 0x454CD6);
MakeUnkn(0x454CD8, 1);
MakeNameEx(0x454CD8, "DoControlMsg", 0x20);
MakeComm(0x454CD8, "'function DoControlMsg(ControlHandle:HWND; var Message:void ):Boolean;'");
MakeCode(0x454CD8);
MakeCode(0x454D05);
MakeFunction(0x454CD8, 0x454D0B);
MakeUnkn(0x454D0C, 1);
MakeNameEx(0x454D0C, "TWinControl.PaintHandler", 0x20);
MakeComm(0x454D0C, "'procedure TWinControl.PaintHandler(var Message:TWMPaint);'");
MakeCode(0x454D0C);
MakeCode(0x454D3F);
MakeCode(0x454D6C);
MakeCode(0x454D9F);
MakeCode(0x454DC1);
MakeCode(0x454DD3);
MakeCode(0x454DFE);
MakeCode(0x454E02);
MakeCode(0x454E13);
MakeCode(0x454E20);
MakeCode(0x454E2E);
MakeCode(0x454E33);
MakeCode(0x454E35);
MakeCode(0x454E42);
MakeCode(0x454E4F);
MakeCode(0x454E6A);
MakeCode(0x454E6B);
MakeCode(0x454E70);
MakeFunction(0x454D0C, 0x454E79);
MakeUnkn(0x454E7C, 1);
MakeNameEx(0x454E7C, "TWinControl.PaintWindow", 0x20);
MakeComm(0x454E7C, "'procedure TWinControl.PaintWindow(DC:HDC);'");
MakeCode(0x454E7C);
MakeFunction(0x454E7C, 0x454EA1);
MakeUnkn(0x454EA4, 1);
MakeNameEx(0x454EA4, "TWinControl.PaintControls", 0x20);
MakeComm(0x454EA4, "'procedure TWinControl.PaintControls(DC:HDC; First:TControl);'");
MakeCode(0x454EA4);
MakeCode(0x454EEA);
MakeCode(0x454F19);
MakeCode(0x454F34);
MakeCode(0x454F63);
MakeCode(0x454F8A);
MakeCode(0x454FDB);
MakeCode(0x455036);
MakeCode(0x455043);
MakeCode(0x455051);
MakeCode(0x455056);
MakeCode(0x455061);
MakeCode(0x455070);
MakeCode(0x455095);
MakeCode(0x4550D9);
MakeCode(0x455161);
MakeCode(0x45516B);
MakeFunction(0x454EA4, 0x455172);
MakeUnkn(0x455174, 1);
MakeNameEx(0x455174, "TWinControl.PaintTo", 0x20);
MakeComm(0x455174, "'procedure TWinControl.PaintTo(DC:HDC; X:Integer; Y:Integer);'");
MakeCode(0x455174);
MakeCode(0x4551F4);
MakeCode(0x455215);
MakeCode(0x45526C);
MakeCode(0x4552A8);
MakeCode(0x4552CD);
MakeCode(0x4552D1);
MakeFunction(0x455174, 0x455304);
MakeUnkn(0x455304, 1);
MakeNameEx(0x455304, "TWinControl.WMPaint", 0x20);
MakeComm(0x455304, "'procedure TWinControl.WMPaint(var Message:TWMPaint);'");
MakeCode(0x455304);
MakeCode(0x455320);
MakeCode(0x45533F);
MakeCode(0x45534D);
MakeCode(0x45545D);
MakeFunction(0x455304, 0x455464);
MakeUnkn(0x455464, 1);
MakeNameEx(0x455464, "TWinControl.WMCharToItem", 0x20);
MakeComm(0x455464, "'procedure TWinControl.WMCharToItem(var Message:TWMCharToItem);'");
MakeCode(0x455464);
MakeCode(0x455481);
MakeFunction(0x455464, 0x455484);
MakeUnkn(0x455484, 1);
MakeNameEx(0x455484, "TWinControl.WMNotify", 0x20);
MakeComm(0x455484, "'procedure TWinControl.WMNotify(var Message:TWMNotify);'");
MakeCode(0x455484);
MakeCode(0x4554A3);
MakeFunction(0x455484, 0x4554A6);
MakeUnkn(0x4554A8, 1);
MakeNameEx(0x4554A8, "TWinControl.WMSysColorChange", 0x20);
MakeComm(0x4554A8, "'procedure TWinControl.WMSysColorChange(var Message:TWMSysColorChange);'");
MakeCode(0x4554A8);
MakeFunction(0x4554A8, 0x4554C2);
MakeUnkn(0x4554C4, 1);
MakeNameEx(0x4554C4, "TWinControl.WMWinIniChange", 0x20);
MakeComm(0x4554C4, "'procedure TWinControl.WMWinIniChange(var Message:TMessage);'");
MakeCode(0x4554C4);
MakeFunction(0x4554C4, 0x4554D6);
MakeUnkn(0x4554D8, 1);
MakeNameEx(0x4554D8, "TWinControl.WMFontChange", 0x20);
MakeComm(0x4554D8, "'procedure TWinControl.WMFontChange(var Message:TMessage);'");
MakeCode(0x4554D8);
MakeFunction(0x4554D8, 0x4554E7);
MakeUnkn(0x4554E8, 1);
MakeNameEx(0x4554E8, "TWinControl.WMTimeChange", 0x20);
MakeComm(0x4554E8, "'procedure TWinControl.WMTimeChange(var Message:TMessage);'");
MakeCode(0x4554E8);
MakeFunction(0x4554E8, 0x4554F7);
MakeUnkn(0x4554F8, 1);
MakeNameEx(0x4554F8, "TWinControl.WMCommand", 0x20);
MakeComm(0x4554F8, "'procedure TWinControl.WMCommand(var Message:TWMCommand);'");
MakeCode(0x4554F8);
MakeCode(0x455515);
MakeFunction(0x4554F8, 0x455518);
MakeUnkn(0x455518, 1);
MakeNameEx(0x455518, "TWinControl.WMHScroll", 0x20);
MakeComm(0x455518, "'procedure TWinControl.WMHScroll(var Message:TWMHScroll);'");
MakeCode(0x455518);
MakeCode(0x455535);
MakeFunction(0x455518, 0x455538);
MakeUnkn(0x455538, 1);
MakeNameEx(0x455538, "TWinControl.WMCompareItem", 0x20);
MakeComm(0x455538, "'procedure TWinControl.WMCompareItem(var Message:TWMCompareItem);'");
MakeCode(0x455538);
MakeCode(0x455558);
MakeFunction(0x455538, 0x45555B);
MakeUnkn(0x45555C, 1);
MakeNameEx(0x45555C, "TWinControl.WMDeleteItem", 0x20);
MakeComm(0x45555C, "'procedure TWinControl.WMDeleteItem(var Message:TWMDeleteItem);'");
MakeCode(0x45555C);
MakeCode(0x45557C);
MakeFunction(0x45555C, 0x45557F);
MakeUnkn(0x455580, 1);
MakeNameEx(0x455580, "TWinControl.WMDrawItem", 0x20);
MakeComm(0x455580, "'procedure TWinControl.WMDrawItem(var Message:TWMDrawItem);'");
MakeCode(0x455580);
MakeCode(0x4555A0);
MakeFunction(0x455580, 0x4555A3);
MakeUnkn(0x4555A4, 1);
MakeNameEx(0x4555A4, "TWinControl.WMMeasureItem", 0x20);
MakeComm(0x4555A4, "'procedure TWinControl.WMMeasureItem(var Message:TWMMeasureItem);'");
MakeCode(0x4555A4);
MakeCode(0x4555C1);
MakeFunction(0x4555A4, 0x4555C4);
MakeUnkn(0x4555C4, 1);
MakeNameEx(0x4555C4, "TWinControl.WMMouseActivate", 0x20);
MakeComm(0x4555C4, "'procedure TWinControl.WMMouseActivate(var Message:TWMMouseActivate);'");
MakeCode(0x4555C4);
MakeCode(0x4555F3);
MakeFunction(0x4555C4, 0x4555F6);
MakeUnkn(0x4555F8, 1);
MakeNameEx(0x4555F8, "TWinControl.WMEraseBkgnd", 0x20);
MakeComm(0x4555F8, "'procedure TWinControl.WMEraseBkgnd(var Message:TWMEraseBkgnd);'");
MakeCode(0x4555F8);
MakeCode(0x455638);
MakeCode(0x455653);
MakeCode(0x455664);
MakeCode(0x455689);
MakeFunction(0x4555F8, 0x455697);
MakeUnkn(0x455698, 1);
MakeNameEx(0x455698, "TWinControl.WMWindowPosChanged", 0x20);
MakeComm(0x455698, "'procedure TWinControl.WMWindowPosChanged(var Message:TWMWindowPosChanged);'");
MakeCode(0x455698);
MakeCode(0x4556BE);
MakeCode(0x4556C2);
MakeCode(0x4556C4);
MakeCode(0x4556DD);
MakeCode(0x4556E1);
MakeCode(0x4556E3);
MakeCode(0x4556FF);
MakeCode(0x455703);
MakeCode(0x455705);
MakeCode(0x45571E);
MakeCode(0x45572B);
MakeCode(0x45574B);
MakeCode(0x455752);
MakeFunction(0x455698, 0x455757);
MakeUnkn(0x455758, 1);
MakeNameEx(0x455758, "TWinControl.WMWindowPosChanging", 0x20);
MakeComm(0x455758, "'procedure TWinControl.WMWindowPosChanging(var Message:TWMWindowPosChanging);'");
MakeCode(0x455758);
MakeCode(0x455794);
MakeFunction(0x455758, 0x4557A1);
MakeUnkn(0x4557AC, 1);
MakeNameEx(0x4557AC, "TWinControl.WMSize", 0x20);
MakeComm(0x4557AC, "'procedure TWinControl.WMSize(var Message:TWMSize);'");
MakeCode(0x4557AC);
MakeCode(0x4557E1);
MakeFunction(0x4557AC, 0x4557E4);
MakeUnkn(0x4557E4, 1);
MakeNameEx(0x4557E4, "TWinControl.WMMove", 0x20);
MakeComm(0x4557E4, "'procedure TWinControl.WMMove(var Message:TWMMove);'");
MakeCode(0x4557E4);
MakeFunction(0x4557E4, 0x4557FE);
MakeUnkn(0x455800, 1);
MakeNameEx(0x455800, "TWinControl.WMSetCursor", 0x20);
MakeComm(0x455800, "'procedure TWinControl.WMSetCursor(var Message:TWMSetCursor);'");
MakeCode(0x455800);
MakeCode(0x455877);
MakeCode(0x45587B);
MakeCode(0x45588C);
MakeCode(0x455890);
MakeCode(0x4558B3);
MakeCode(0x4558F1);
MakeCode(0x4558FA);
MakeFunction(0x455800, 0x455901);
MakeUnkn(0x455904, 1);
MakeNameEx(0x455904, "TWinControl.WMSetFocus", 0x20);
MakeComm(0x455904, "'procedure TWinControl.WMSetFocus(var Message:TWMSetFocus);'");
MakeCode(0x455904);
MakeFunction(0x455904, 0x455920);
MakeUnkn(0x455920, 1);
MakeNameEx(0x455920, "TWinControl.WMKillFocus", 0x20);
MakeComm(0x455920, "'procedure TWinControl.WMKillFocus(var Message:TWMSetFocus);'");
MakeCode(0x455920);
MakeFunction(0x455920, 0x45593C);
MakeUnkn(0x45593C, 1);
MakeNameEx(0x45593C, "TWinControl.WMIMEStartComp", 0x20);
MakeComm(0x45593C, "'procedure TWinControl.WMIMEStartComp(var Message:TMessage);'");
MakeCode(0x45593C);
MakeFunction(0x45593C, 0x45594F);
MakeUnkn(0x455950, 1);
MakeNameEx(0x455950, "TWinControl.WMIMEEndComp", 0x20);
MakeComm(0x455950, "'procedure TWinControl.WMIMEEndComp(var Message:TMessage);'");
MakeCode(0x455950);
MakeFunction(0x455950, 0x455963);
MakeUnkn(0x455964, 1);
MakeNameEx(0x455964, "TWinControl.SetIme", 0x20);
MakeComm(0x455964, "'procedure TWinControl.SetIme;'");
MakeCode(0x455964);
MakeCode(0x4559C2);
MakeCode(0x4559CE);
MakeCode(0x455A52);
MakeCode(0x455A5A);
MakeCode(0x455A6D);
MakeCode(0x455A7A);
MakeCode(0x455A83);
MakeCode(0x455A88);
MakeFunction(0x455964, 0x455A91);
MakeUnkn(0x455A94, 1);
MakeNameEx(0x455A94, "TWinControl.ResetIme", 0x20);
MakeComm(0x455A94, "'procedure TWinControl.ResetIme;'");
MakeCode(0x455A94);
MakeCode(0x455AEE);
MakeCode(0x455AFA);
MakeCode(0x455B36);
MakeCode(0x455B4D);
MakeCode(0x455B5A);
MakeCode(0x455B63);
MakeCode(0x455B68);
MakeFunction(0x455A94, 0x455B71);
MakeUnkn(0x455B74, 1);
MakeNameEx(0x455B74, "TWinControl.DoAddDockClient", 0x20);
MakeComm(0x455B74, "'procedure TWinControl.DoAddDockClient(Client:TControl; const ARect:TRect);'");
MakeCode(0x455B74);
MakeFunction(0x455B74, 0x455B82);
MakeUnkn(0x455B84, 1);
MakeNameEx(0x455B84, "TWinControl.DoRemoveDockClient", 0x20);
MakeComm(0x455B84, "'procedure TWinControl.DoRemoveDockClient(Client:TControl);'");
MakeCode(0x455B84);
MakeFunction(0x455B84, 0x455B85);
MakeUnkn(0x455B88, 1);
MakeNameEx(0x455B88, "TWinControl.DoEnter", 0x20);
MakeComm(0x455B88, "'procedure TWinControl.DoEnter;'");
MakeCode(0x455B88);
MakeCode(0x455BA3);
MakeFunction(0x455B88, 0x455BA5);
MakeUnkn(0x455BA8, 1);
MakeNameEx(0x455BA8, "TWinControl.DoExit", 0x20);
MakeComm(0x455BA8, "'procedure TWinControl.DoExit;'");
MakeCode(0x455BA8);
MakeCode(0x455BC3);
MakeFunction(0x455BA8, 0x455BC5);
MakeUnkn(0x455BC8, 1);
MakeNameEx(0x455BC8, "TWinControl.DockDrop", 0x20);
MakeComm(0x455BC8, "'procedure TWinControl.DockDrop(Source:TDragDockObject; X:Integer; Y:Integer);'");
MakeCode(0x455BC8);
MakeCode(0x455C11);
MakeFunction(0x455BC8, 0x455C18);
MakeUnkn(0x455C18, 1);
MakeNameEx(0x455C18, "TWinControl.DoDockOver", 0x20);
MakeComm(0x455C18, "'procedure TWinControl.DoDockOver(Source:TDragDockObject; X:Integer; Y:Integer; State:TDragState; var Accept:Boolean);'");
MakeCode(0x455C18);
MakeCode(0x455C46);
MakeFunction(0x455C18, 0x455C4B);
MakeUnkn(0x455C4C, 1);
MakeNameEx(0x455C4C, "TWinControl.DockOver", 0x20);
MakeComm(0x455C4C, "'procedure TWinControl.DockOver(Source:TDragDockObject; X:Integer; Y:Integer; State:TDragState; var Accept:Boolean);'");
MakeCode(0x455C4C);
MakeFunction(0x455C4C, 0x455C90);
MakeUnkn(0x455C90, 1);
MakeNameEx(0x455C90, "TWinControl.DoUnDock", 0x20);
MakeComm(0x455C90, "'procedure TWinControl.DoUnDock(NewTarget:TWinControl; Client:TControl);'");
MakeCode(0x455C90);
MakeCode(0x455CBE);
MakeCode(0x455CD7);
MakeCode(0x455CDB);
MakeCode(0x455CDD);
MakeFunction(0x455C90, 0x455CE9);
MakeUnkn(0x455CEC, 1);
MakeNameEx(0x455CEC, "TWinControl.ReloadDockedControl", 0x20);
MakeComm(0x455CEC, "'procedure TWinControl.ReloadDockedControl(const AControlName:AnsiString; var AControl:TControl);'");
MakeCode(0x455CEC);
MakeFunction(0x455CEC, 0x455D10);
MakeUnkn(0x455D10, 1);
MakeNameEx(0x455D10, "TWinControl.GetDockClientCount", 0x20);
MakeComm(0x455D10, "'function TWinControl.GetDockClientCount:Integer;'");
MakeCode(0x455D10);
MakeCode(0x455D1E);
MakeFunction(0x455D10, 0x455D21);
MakeUnkn(0x455D24, 1);
MakeNameEx(0x455D24, "TWinControl.GetDockClients", 0x20);
MakeComm(0x455D24, "'function TWinControl.GetDockClients(Index:Integer):TControl;'");
MakeCode(0x455D24);
MakeCode(0x455D40);
MakeCode(0x455D42);
MakeFunction(0x455D24, 0x455D46);
MakeUnkn(0x455D48, 1);
MakeNameEx(0x455D48, "TWinControl.GetSiteInfo", 0x20);
MakeComm(0x455D48, "'procedure TWinControl.GetSiteInfo(Client:TControl; var InfluenceRect:TRect; MousePos:TPoint; var CanDock:Boolean);'");
MakeCode(0x455D48);
MakeCode(0x455D9A);
MakeFunction(0x455D48, 0x455DA3);
MakeUnkn(0x455DA4, 1);
MakeNameEx(0x455DA4, "TWinControl.GetVisibleDockClientCount", 0x20);
MakeComm(0x455DA4, "'function TWinControl.GetVisibleDockClientCount:Integer;'");
MakeCode(0x455DA4);
MakeCode(0x455DBE);
MakeCode(0x455DD2);
MakeCode(0x455DD8);
MakeFunction(0x455DA4, 0x455DDE);
MakeUnkn(0x455DE0, 1);
MakeNameEx(0x455DE0, "TWinControl.sub_00455DE0", 0x20);
MakeComm(0x455DE0, "'procedure TWinControl.sub_00455DE0;'");
MakeCode(0x455DE0);
MakeFunction(0x455DE0, 0x455DE1);
MakeUnkn(0x455DE4, 1);
MakeNameEx(0x455DE4, "TWinControl.CreateDockManager", 0x20);
MakeComm(0x455DE4, "'procedure TWinControl.CreateDockManager;'");
MakeCode(0x455DE4);
MakeCode(0x455E1A);
MakeCode(0x455E23);
MakeCode(0x455E30);
MakeCode(0x455E42);
MakeCode(0x455E44);
MakeFunction(0x455DE4, 0x455E4D);
MakeUnkn(0x455E50, 1);
MakeNameEx(0x455E50, "TWinControl.SetDesignVisible", 0x20);
MakeComm(0x455E50, "'procedure TWinControl.SetDesignVisible(Value:Boolean);'");
MakeCode(0x455E50);
MakeCode(0x455E72);
MakeCode(0x455E78);
MakeCode(0x455E7F);
MakeFunction(0x455E50, 0x455E81);
MakeUnkn(0x455E84, 1);
MakeNameEx(0x455E84, "TWinControl.SetDockSite", 0x20);
MakeComm(0x455E84, "'procedure TWinControl.SetDockSite(Value:Boolean);'");
MakeCode(0x455E84);
MakeCode(0x455EDF);
MakeCode(0x455EFA);
MakeCode(0x455F16);
MakeCode(0x455F23);
MakeCode(0x455F2C);
MakeCode(0x455F31);
MakeFunction(0x455E84, 0x455F39);
MakeUnkn(0x455F3C, 1);
MakeNameEx(0x455F3C, "TWinControl.CMDockClient", 0x20);
MakeComm(0x455F3C, "'procedure TWinControl.CMDockClient(var Message:TCMDockClient);'");
MakeCode(0x455F3C);
MakeCode(0x455FE9);
MakeCode(0x455FF6);
MakeCode(0x455FFF);
MakeCode(0x456004);
MakeCode(0x456019);
MakeCode(0x456023);
MakeFunction(0x455F3C, 0x45602A);
MakeUnkn(0x45602C, 1);
MakeNameEx(0x45602C, "TWinControl.CMUnDockClient", 0x20);
MakeComm(0x45602C, "'procedure TWinControl.CMUnDockClient(var Message:TCMUnDockClient);'");
MakeCode(0x45602C);
MakeFunction(0x45602C, 0x456052);
MakeUnkn(0x456054, 1);
MakeNameEx(0x456054, "TWinControl.CMFloat", 0x20);
MakeComm(0x456054, "'procedure TWinControl.CMFloat(var Message:TCMFloat);'");
MakeCode(0x456054);
MakeCode(0x4560A3);
MakeCode(0x4560B0);
MakeCode(0x4560BE);
MakeCode(0x4560BF);
MakeCode(0x4560C4);
MakeCode(0x4560C6);
MakeFunction(0x456054, 0x4560D6);
MakeUnkn(0x4560D8, 1);
MakeNameEx(0x4560D8, "TWinControl.KeyDown", 0x20);
MakeComm(0x4560D8, "'procedure TWinControl.KeyDown(var Key:Word; Shift:TShiftState);'");
MakeCode(0x4560D8);
MakeCode(0x4560FE);
MakeFunction(0x4560D8, 0x456101);
MakeUnkn(0x456104, 1);
MakeNameEx(0x456104, "TWinControl.DoKeyDown", 0x20);
MakeComm(0x456104, "'function TWinControl.DoKeyDown(var Message:TWMKey):Boolean;'");
MakeCode(0x456104);
MakeCode(0x45613A);
MakeCode(0x456176);
MakeCode(0x4561A0);
MakeCode(0x4561A2);
MakeFunction(0x456104, 0x4561AB);
MakeUnkn(0x4561AC, 1);
MakeNameEx(0x4561AC, "TWinControl.WMKeyDown", 0x20);
MakeComm(0x4561AC, "'procedure TWinControl.WMKeyDown(var Message:TWMKeyDown);'");
MakeCode(0x4561AC);
MakeCode(0x4561C8);
MakeFunction(0x4561AC, 0x4561D6);
MakeUnkn(0x4561D8, 1);
MakeNameEx(0x4561D8, "TWinControl.WMSysKeyDown", 0x20);
MakeComm(0x4561D8, "'procedure TWinControl.WMSysKeyDown(var Message:TWMKeyDown);'");
MakeCode(0x4561D8);
MakeCode(0x4561F4);
MakeFunction(0x4561D8, 0x456202);
MakeUnkn(0x456204, 1);
MakeNameEx(0x456204, "TWinControl.KeyUp", 0x20);
MakeComm(0x456204, "'procedure TWinControl.KeyUp(var Key:Word; Shift:TShiftState);'");
MakeCode(0x456204);
MakeCode(0x45622A);
MakeFunction(0x456204, 0x45622D);
MakeUnkn(0x456230, 1);
MakeNameEx(0x456230, "TWinControl.DoKeyUp", 0x20);
MakeComm(0x456230, "'function TWinControl.DoKeyUp(var Message:TWMKey):Boolean;'");
MakeCode(0x456230);
MakeCode(0x456264);
MakeCode(0x45628E);
MakeCode(0x456290);
MakeFunction(0x456230, 0x456298);
MakeUnkn(0x456298, 1);
MakeNameEx(0x456298, "TWinControl.WMKeyUp", 0x20);
MakeComm(0x456298, "'procedure TWinControl.WMKeyUp(var Message:TWMKeyUp);'");
MakeCode(0x456298);
MakeCode(0x4562B4);
MakeFunction(0x456298, 0x4562B7);
MakeUnkn(0x4562B8, 1);
MakeNameEx(0x4562B8, "TWinControl.WMSysKeyUp", 0x20);
MakeComm(0x4562B8, "'procedure TWinControl.WMSysKeyUp(var Message:TWMKeyUp);'");
MakeCode(0x4562B8);
MakeCode(0x4562D4);
MakeFunction(0x4562B8, 0x4562D7);
MakeUnkn(0x4562D8, 1);
MakeNameEx(0x4562D8, "TWinControl.KeyPress", 0x20);
MakeComm(0x4562D8, "'procedure TWinControl.KeyPress(var Key:Char);'");
MakeCode(0x4562D8);
MakeCode(0x4562F5);
MakeFunction(0x4562D8, 0x4562F7);
MakeUnkn(0x4562F8, 1);
MakeNameEx(0x4562F8, "TWinControl.DoKeyPress", 0x20);
MakeComm(0x4562F8, "'function TWinControl.DoKeyPress(var Message:TWMKey):Boolean;'");
MakeCode(0x4562F8);
MakeCode(0x45632C);
MakeCode(0x456354);
MakeCode(0x456356);
MakeFunction(0x4562F8, 0x45635E);
MakeUnkn(0x456360, 1);
MakeNameEx(0x456360, "TWinControl.WMChar", 0x20);
MakeComm(0x456360, "'procedure TWinControl.WMChar(var Message:TWMChar);'");
MakeCode(0x456360);
MakeCode(0x45637C);
MakeFunction(0x456360, 0x45637F);
MakeUnkn(0x456380, 1);
MakeNameEx(0x456380, "TraverseControls", 0x20);
MakeComm(0x456380, "'function TraverseControls(Container:TWinControl):Boolean;'");
MakeCode(0x456380);
MakeCode(0x4563B2);
MakeCode(0x4563F8);
MakeCode(0x456419);
MakeCode(0x45641F);
MakeCode(0x456423);
MakeFunction(0x456380, 0x45642E);
MakeUnkn(0x456430, 1);
MakeNameEx(0x456430, "TWinControl.WMSysCommand", 0x20);
MakeComm(0x456430, "'procedure TWinControl.WMSysCommand(var Message:TWMSysCommand);'");
MakeCode(0x456430);
MakeCode(0x4564AB);
MakeCode(0x4564CA);
MakeCode(0x4564D4);
MakeFunction(0x456430, 0x4564D9);
MakeUnkn(0x4564DC, 1);
MakeNameEx(0x4564DC, "TWinControl.WMVKeyToItem", 0x20);
MakeComm(0x4564DC, "'procedure TWinControl.WMVKeyToItem(var Message:TWMVKeyToItem);'");
MakeCode(0x4564DC);
MakeCode(0x4564F9);
MakeFunction(0x4564DC, 0x4564FC);
MakeUnkn(0x4564FC, 1);
MakeNameEx(0x4564FC, "TWinControl.WMParentNotify", 0x20);
MakeComm(0x4564FC, "'procedure TWinControl.WMParentNotify(var Message:TWMParentNotify);'");
MakeCode(0x4564FC);
MakeCode(0x456513);
MakeCode(0x456521);
MakeCode(0x45652A);
MakeFunction(0x4564FC, 0x45652E);
MakeUnkn(0x456530, 1);
MakeNameEx(0x456530, "TWinControl.WMVScroll", 0x20);
MakeComm(0x456530, "'procedure TWinControl.WMVScroll(var Message:TWMVScroll);'");
MakeCode(0x456530);
MakeCode(0x45654D);
MakeFunction(0x456530, 0x456550);
MakeUnkn(0x456550, 1);
MakeNameEx(0x456550, "TWinControl.WMDestroy", 0x20);
MakeComm(0x456550, "'procedure TWinControl.WMDestroy(var Message:TWMDestroy);'");
MakeCode(0x456550);
MakeCode(0x45657B);
MakeCode(0x45659A);
MakeFunction(0x456550, 0x4565AF);
MakeUnkn(0x4565B4, 1);
MakeNameEx(0x4565B4, "TWinControl.WMNCDestroy", 0x20);
MakeComm(0x4565B4, "'procedure TWinControl.WMNCDestroy(var Message:TWMNCDestroy);'");
MakeCode(0x4565B4);
MakeFunction(0x4565B4, 0x4565CF);
MakeUnkn(0x4565D0, 1);
MakeNameEx(0x4565D0, "TWinControl.WMNCHitTest", 0x20);
MakeComm(0x4565D0, "'procedure TWinControl.WMNCHitTest(var Message:TWMNCHitTest);'");
MakeCode(0x4565D0);
MakeCode(0x4565E8);
MakeFunction(0x4565D0, 0x4565F1);
MakeUnkn(0x4565F4, 1);
MakeNameEx(0x4565F4, "TWinControl.PaletteChanged", 0x20);
MakeComm(0x4565F4, "'procedure TWinControl.PaletteChanged(Foreground:Boolean);'");
MakeCode(0x4565F4);
MakeCode(0x456620);
MakeCode(0x456643);
MakeFunction(0x4565F4, 0x45664B);
MakeUnkn(0x45664C, 1);
MakeNameEx(0x45664C, "TWinControl.WMQueryNewPalette", 0x20);
MakeComm(0x45664C, "'procedure TWinControl.WMQueryNewPalette(var Message:TMessage);'");
MakeCode(0x45664C);
MakeFunction(0x45664C, 0x45666F);
MakeUnkn(0x456670, 1);
MakeNameEx(0x456670, "TWinControl.WMPaletteChanged", 0x20);
MakeComm(0x456670, "'procedure TWinControl.WMPaletteChanged(var Message:TMessage);'");
MakeCode(0x456670);
MakeFunction(0x456670, 0x45668E);
MakeUnkn(0x456690, 1);
MakeNameEx(0x456690, "TWinControl.CMShowHintChanged", 0x20);
MakeComm(0x456690, "'procedure TWinControl.CMShowHintChanged(var Message:TMessage);'");
MakeCode(0x456690);
MakeFunction(0x456690, 0x4566A7);
MakeUnkn(0x4566A8, 1);
MakeNameEx(0x4566A8, "TWinControl.CMBiDiModeChanged", 0x20);
MakeComm(0x4566A8, "'procedure TWinControl.CMBiDiModeChanged(var Message:TMessage);'");
MakeCode(0x4566A8);
MakeCode(0x4566CF);
MakeFunction(0x4566A8, 0x4566DD);
MakeUnkn(0x4566E0, 1);
MakeNameEx(0x4566E0, "TWinControl.CMEnter", 0x20);
MakeComm(0x4566E0, "'procedure TWinControl.CMEnter(var Message:TWMNoParams);'");
MakeCode(0x4566E0);
MakeCode(0x45671F);
MakeCode(0x456743);
MakeFunction(0x4566E0, 0x456750);
MakeUnkn(0x456750, 1);
MakeNameEx(0x456750, "TWinControl.CMExit", 0x20);
MakeComm(0x456750, "'procedure TWinControl.CMExit(var Message:TWMNoParams);'");
MakeCode(0x456750);
MakeFunction(0x456750, 0x456760);
MakeUnkn(0x456760, 1);
MakeNameEx(0x456760, "TWinControl.CMDesignHitTest", 0x20);
MakeComm(0x456760, "'procedure TWinControl.CMDesignHitTest(var Message:TWMMouse);'");
MakeCode(0x456760);
MakeCode(0x45677C);
MakeFunction(0x456760, 0x45677F);
MakeUnkn(0x456780, 1);
MakeNameEx(0x456780, "TWinControl.CMChanged", 0x20);
MakeComm(0x456780, "'procedure TWinControl.CMChanged(var Message:TMessage);'");
MakeCode(0x456780);
MakeCode(0x456790);
MakeFunction(0x456780, 0x456792);
MakeUnkn(0x456794, 1);
MakeNameEx(0x456794, "TWinControl.CMChildKey", 0x20);
MakeComm(0x456794, "'procedure TWinControl.CMChildKey(var Message:TMessage);'");
MakeCode(0x456794);
MakeCode(0x4567A4);
MakeFunction(0x456794, 0x4567A6);
MakeUnkn(0x4567A8, 1);
MakeNameEx(0x4567A8, "TWinControl.CMDialogKey", 0x20);
MakeComm(0x4567A8, "'procedure TWinControl.CMDialogKey(var Message:TWMKey);'");
MakeCode(0x4567A8);
MakeFunction(0x4567A8, 0x4567AE);
MakeUnkn(0x4567B0, 1);
MakeNameEx(0x4567B0, "TWinControl.CMDialogChar", 0x20);
MakeComm(0x4567B0, "'procedure TWinControl.CMDialogChar(var Message:TWMKey);'");
MakeCode(0x4567B0);
MakeFunction(0x4567B0, 0x4567B6);
MakeUnkn(0x4567B8, 1);
MakeNameEx(0x4567B8, "TWinControl.CMFocusChanged", 0x20);
MakeComm(0x4567B8, "'procedure TWinControl.CMFocusChanged(var Message:TCMFocusChanged);'");
MakeCode(0x4567B8);
MakeFunction(0x4567B8, 0x4567BE);
MakeUnkn(0x4567C0, 1);
MakeNameEx(0x4567C0, "TWinControl.CMVisibleChanged", 0x20);
MakeComm(0x4567C0, "'procedure TWinControl.CMVisibleChanged(var Message:TMessage);'");
MakeCode(0x4567C0);
MakeCode(0x4567D8);
MakeCode(0x4567E4);
MakeCode(0x4567EB);
MakeFunction(0x4567C0, 0x4567ED);
MakeUnkn(0x4567F0, 1);
MakeNameEx(0x4567F0, "TWinControl.CMShowingChanged", 0x20);
MakeComm(0x4567F0, "'procedure TWinControl.CMShowingChanged(var Message:TMessage);'");
MakeCode(0x4567F0);
MakeFunction(0x4567F0, 0x456817);
MakeUnkn(0x456818, 1);
MakeNameEx(0x456818, "TWinControl.CMEnabledChanged", 0x20);
MakeComm(0x456818, "'procedure TWinControl.CMEnabledChanged(var Message:TMessage);'");
MakeCode(0x456818);
MakeCode(0x456835);
MakeCode(0x45685E);
MakeFunction(0x456818, 0x456860);
MakeUnkn(0x456860, 1);
MakeNameEx(0x456860, "TWinControl.CMColorChanged", 0x20);
MakeComm(0x456860, "'procedure TWinControl.CMColorChanged(var Message:TMessage);'");
MakeCode(0x456860);
MakeFunction(0x456860, 0x456885);
MakeUnkn(0x456888, 1);
MakeNameEx(0x456888, "TWinControl.CMFontChanged", 0x20);
MakeComm(0x456888, "'procedure TWinControl.CMFontChanged(var Message:TMessage);'");
MakeCode(0x456888);
MakeCode(0x4568B5);
MakeFunction(0x456888, 0x4568C2);
MakeUnkn(0x4568C4, 1);
MakeNameEx(0x4568C4, "TWinControl.CMCursorChanged", 0x20);
MakeComm(0x4568C4, "'procedure TWinControl.CMCursorChanged(var Message:TMessage);'");
MakeCode(0x4568C4);
MakeCode(0x4568FD);
MakeFunction(0x4568C4, 0x456901);
MakeUnkn(0x456904, 1);
MakeNameEx(0x456904, "TWinControl.CMBorderChanged", 0x20);
MakeComm(0x456904, "'procedure TWinControl.CMBorderChanged(var Message:TMessage);'");
MakeCode(0x456904);
MakeCode(0x456942);
MakeFunction(0x456904, 0x456944);
MakeUnkn(0x456944, 1);
MakeNameEx(0x456944, "TWinControl.CMCtl3DChanged", 0x20);
MakeComm(0x456944, "'procedure TWinControl.CMCtl3DChanged(var Message:TMessage);'");
MakeCode(0x456944);
MakeCode(0x456975);
MakeFunction(0x456944, 0x456982);
MakeUnkn(0x456984, 1);
MakeNameEx(0x456984, "TWinControl.CMParentCtl3DChanged", 0x20);
MakeComm(0x456984, "'procedure TWinControl.CMParentCtl3DChanged(var Message:TMessage);'");
MakeCode(0x456984);
MakeCode(0x4569A8);
MakeCode(0x4569B9);
MakeCode(0x4569C0);
MakeFunction(0x456984, 0x4569C2);
MakeUnkn(0x4569C4, 1);
MakeNameEx(0x4569C4, "TWinControl.CMSysColorChange", 0x20);
MakeComm(0x4569C4, "'procedure TWinControl.CMSysColorChange(var Message:TMessage);'");
MakeCode(0x4569C4);
MakeFunction(0x4569C4, 0x4569CA);
MakeUnkn(0x4569CC, 1);
MakeNameEx(0x4569CC, "TWinControl.CMWinIniChange", 0x20);
MakeComm(0x4569CC, "'procedure TWinControl.CMWinIniChange(var Message:TWMWinIniChange);'");
MakeCode(0x4569CC);
MakeFunction(0x4569CC, 0x4569D2);
MakeUnkn(0x4569D4, 1);
MakeNameEx(0x4569D4, "TWinControl.CMFontChange", 0x20);
MakeComm(0x4569D4, "'procedure TWinControl.CMFontChange;'");
MakeCode(0x4569D4);
MakeFunction(0x4569D4, 0x4569DA);
MakeUnkn(0x4569DC, 1);
MakeNameEx(0x4569DC, "TWinControl.CMTimeChange", 0x20);
MakeComm(0x4569DC, "'procedure TWinControl.CMTimeChange;'");
MakeCode(0x4569DC);
MakeFunction(0x4569DC, 0x4569E2);
MakeUnkn(0x4569E4, 1);
MakeNameEx(0x4569E4, "TWinControl.CMDrag", 0x20);
MakeComm(0x4569E4, "'procedure TWinControl.CMDrag(var Message:TCMDrag);'");
MakeCode(0x4569E4);
MakeCode(0x456A00);
MakeCode(0x456A12);
MakeCode(0x456A3C);
MakeFunction(0x4569E4, 0x456A43);
MakeUnkn(0x456A44, 1);
MakeNameEx(0x456A44, "TWinControl.CMControlListChange", 0x20);
MakeComm(0x456A44, "'procedure TWinControl.CMControlListChange(var Message:TMessage);'");
MakeCode(0x456A44);
MakeCode(0x456A54);
MakeFunction(0x456A44, 0x456A56);
MakeUnkn(0x456A58, 1);
MakeNameEx(0x456A58, "TWinControl.CMControlListChanging", 0x20);
MakeComm(0x456A58, "'procedure TWinControl.CMControlListChanging(var Message:TMessage);'");
MakeCode(0x456A58);
MakeCode(0x456A68);
MakeFunction(0x456A58, 0x456A6A);
MakeUnkn(0x456A6C, 1);
MakeNameEx(0x456A6C, "TWinControl.CMSysFontChanged", 0x20);
MakeComm(0x456A6C, "'procedure TWinControl.CMSysFontChanged(var Message:TMessage);'");
MakeCode(0x456A6C);
MakeFunction(0x456A6C, 0x456A87);
MakeUnkn(0x456A88, 1);
MakeNameEx(0x456A88, "TWinControl.IsMenuKey", 0x20);
MakeComm(0x456A88, "'function TWinControl.IsMenuKey(var Message:TWMKey):Boolean;'");
MakeCode(0x456A88);
MakeCode(0x456AA9);
MakeCode(0x456AD1);
MakeCode(0x456AD8);
MakeCode(0x456AF9);
MakeCode(0x456B13);
MakeFunction(0x456A88, 0x456B1F);
MakeUnkn(0x456B20, 1);
MakeNameEx(0x456B20, "TWinControl.CNKeyDown", 0x20);
MakeComm(0x456B20, "'procedure TWinControl.CNKeyDown(var Message:TWMKeyDown);'");
MakeCode(0x456B20);
MakeCode(0x456B8B);
MakeCode(0x456B9A);
MakeCode(0x456BA1);
MakeCode(0x456BA8);
MakeCode(0x456BAD);
MakeCode(0x456BFA);
MakeCode(0x456BFF);
MakeFunction(0x456B20, 0x456C03);
MakeUnkn(0x456C04, 1);
MakeNameEx(0x456C04, "TWinControl.CNKeyUp", 0x20);
MakeComm(0x456C04, "'procedure TWinControl.CNKeyUp(var Message:TWMKeyUp);'");
MakeCode(0x456C04);
MakeCode(0x456C30);
MakeCode(0x456C3D);
MakeCode(0x456C51);
MakeFunction(0x456C04, 0x456C55);
MakeUnkn(0x456C58, 1);
MakeNameEx(0x456C58, "TWinControl.CNChar", 0x20);
MakeComm(0x456C58, "'procedure TWinControl.CNChar(var Message:TWMChar);'");
MakeCode(0x456C58);
MakeCode(0x456C9E);
MakeCode(0x456CA3);
MakeFunction(0x456C58, 0x456CA6);
MakeUnkn(0x456CA8, 1);
MakeNameEx(0x456CA8, "TWinControl.CNSysKeyDown", 0x20);
MakeComm(0x456CA8, "'procedure TWinControl.CNSysKeyDown(var Message:TWMKeyDown);'");
MakeCode(0x456CA8);
MakeCode(0x456CFC);
MakeCode(0x456D01);
MakeFunction(0x456CA8, 0x456D04);
MakeUnkn(0x456D04, 1);
MakeNameEx(0x456D04, "TWinControl.CNSysChar", 0x20);
MakeComm(0x456D04, "'procedure TWinControl.CNSysChar(var Message:TWMChar);'");
MakeCode(0x456D04);
MakeCode(0x456D35);
MakeFunction(0x456D04, 0x456D38);
MakeUnkn(0x456D38, 1);
MakeNameEx(0x456D38, "TWinControl.SetBounds", 0x20);
MakeComm(0x456D38, "'procedure TWinControl.SetBounds(ALeft:Integer; ATop:Integer; AWidth:Integer; AHeight:Integer);'");
MakeCode(0x456D38);
MakeCode(0x456D65);
MakeCode(0x456D9C);
MakeCode(0x456DF4);
MakeCode(0x456E09);
MakeFunction(0x456D38, 0x456E12);
MakeUnkn(0x456E14, 1);
MakeNameEx(0x456E14, "TWinControl.ScaleControls", 0x20);
MakeComm(0x456E14, "'procedure TWinControl.ScaleControls(M:Integer; D:Integer);'");
MakeCode(0x456E14);
MakeCode(0x456E35);
MakeCode(0x456E52);
MakeFunction(0x456E14, 0x456E59);
MakeUnkn(0x456E5C, 1);
MakeNameEx(0x456E5C, "TWinControl.ChangeScale", 0x20);
MakeComm(0x456E5C, "'procedure TWinControl.ChangeScale(M:Integer; D:Integer);'");
MakeCode(0x456E5C);
MakeCode(0x456ED8);
MakeCode(0x456EE4);
MakeCode(0x456EF1);
MakeCode(0x456EFA);
MakeCode(0x456EFF);
MakeFunction(0x456E5C, 0x456F06);
MakeUnkn(0x456F08, 1);
MakeNameEx(0x456F08, "TWinControl.ScrollBy", 0x20);
MakeComm(0x456F08, "'procedure TWinControl.ScrollBy(DeltaX:Integer; DeltaY:Integer);'");
MakeCode(0x456F08);
MakeCode(0x456F2C);
MakeCode(0x456F30);
MakeCode(0x456F32);
MakeCode(0x456F57);
MakeCode(0x456F68);
MakeCode(0x456F8D);
MakeCode(0x456F9C);
MakeCode(0x456FCD);
MakeCode(0x456FD1);
MakeFunction(0x456F08, 0x456FE0);
MakeUnkn(0x456FE0, 1);
MakeNameEx(0x456FE0, "TWinControl.ShowControl", 0x20);
MakeComm(0x456FE0, "'procedure TWinControl.ShowControl(AControl:TControl);'");
MakeCode(0x456FE0);
MakeCode(0x456FF4);
MakeFunction(0x456FE0, 0x456FF6);
MakeUnkn(0x456FF8, 1);
MakeNameEx(0x456FF8, "TWinControl.SetZOrderPosition", 0x20);
MakeComm(0x456FF8, "'procedure TWinControl.SetZOrderPosition(Position:Integer);'");
MakeCode(0x456FF8);
MakeCode(0x457018);
MakeCode(0x45703D);
MakeCode(0x457044);
MakeCode(0x457063);
MakeCode(0x457077);
MakeCode(0x45708C);
MakeCode(0x4570A1);
MakeCode(0x4570B3);
MakeCode(0x4570CA);
MakeFunction(0x456FF8, 0x4570CF);
MakeUnkn(0x4570D0, 1);
MakeNameEx(0x4570D0, "TWinControl.SetZOrder", 0x20);
MakeComm(0x4570D0, "'procedure TWinControl.SetZOrder(TopMost:Boolean);'");
MakeCode(0x4570D0);
MakeCode(0x4570E9);
MakeCode(0x4570EB);
MakeCode(0x4570FA);
MakeCode(0x457106);
MakeCode(0x45712C);
MakeFunction(0x4570D0, 0x45712F);
MakeUnkn(0x457130, 1);
MakeNameEx(0x457130, "TWinControl.GetDeviceContext", 0x20);
MakeComm(0x457130, "'function TWinControl.GetDeviceContext(var WindowHandle:HWND):HDC;'");
MakeCode(0x457130);
MakeCode(0x45714F);
MakeCode(0x45715C);
MakeCode(0x457177);
MakeFunction(0x457130, 0x457182);
MakeUnkn(0x457184, 1);
MakeNameEx(0x457184, "TWinControl.Invalidate", 0x20);
MakeComm(0x457184, "'procedure TWinControl.Invalidate;'");
MakeCode(0x457184);
MakeFunction(0x457184, 0x457193);
MakeUnkn(0x457194, 1);
MakeNameEx(0x457194, "TWinControl.CMInvalidate", 0x20);
MakeComm(0x457194, "'procedure TWinControl.CMInvalidate(var Message:TMessage);'");
MakeCode(0x457194);
MakeCode(0x4571BE);
MakeCode(0x4571FF);
MakeCode(0x45721F);
MakeCode(0x457223);
MakeFunction(0x457194, 0x457227);
MakeUnkn(0x457228, 1);
MakeNameEx(0x457228, "TWinControl.Update", 0x20);
MakeComm(0x457228, "'procedure TWinControl.Update;'");
MakeCode(0x457228);
MakeCode(0x457242);
MakeFunction(0x457228, 0x457244);
MakeUnkn(0x457244, 1);
MakeNameEx(0x457244, "TWinControl.Repaint", 0x20);
MakeComm(0x457244, "'procedure TWinControl.Repaint;'");
MakeCode(0x457244);
MakeFunction(0x457244, 0x45725D);
MakeUnkn(0x457260, 1);
MakeNameEx(0x457260, "TWinControl.InvalidateFrame", 0x20);
MakeComm(0x457260, "'procedure TWinControl.InvalidateFrame;'");
MakeCode(0x457260);
MakeFunction(0x457260, 0x457298);
MakeUnkn(0x457298, 1);
MakeNameEx(0x457298, "TWinControl.CanFocus", 0x20);
MakeComm(0x457298, "'procedure TWinControl.CanFocus;'");
MakeCode(0x457298);
MakeCode(0x4572B4);
MakeCode(0x4572CC);
MakeCode(0x4572D0);
MakeFunction(0x457298, 0x4572D8);
MakeUnkn(0x4572D8, 1);
MakeNameEx(0x4572D8, "TWinControl.SetFocus", 0x20);
MakeComm(0x4572D8, "'procedure TWinControl.SetFocus;'");
MakeCode(0x4572D8);
MakeCode(0x4572F1);
MakeCode(0x457309);
MakeCode(0x457312);
MakeFunction(0x4572D8, 0x457314);
MakeUnkn(0x457314, 1);
MakeNameEx(0x457314, "TWinControl.Focused", 0x20);
MakeComm(0x457314, "'procedure TWinControl.Focused;'");
MakeCode(0x457314);
MakeCode(0x45732D);
MakeCode(0x457331);
MakeFunction(0x457314, 0x457335);
MakeUnkn(0x457338, 1);
MakeNameEx(0x457338, "TWinControl.HandleNeeded", 0x20);
MakeComm(0x457338, "'procedure TWinControl.HandleNeeded;'");
MakeCode(0x457338);
MakeFunction(0x457338, 0x45735C);
MakeUnkn(0x45735C, 1);
MakeNameEx(0x45735C, "TWinControl.GetHandle", 0x20);
MakeComm(0x45735C, "'function TWinControl.GetHandle:HWND;'");
MakeCode(0x45735C);
MakeFunction(0x45735C, 0x45736E);
MakeCode(0x457370);
MakeCode(0x4573AC);
MakeComm(0x4573BA, "'TControl.FVisible:Boolean'");
MakeComm(0x4573C0, "'TControl.FComponentState:TComponentState'");
MakeComm(0x4573CA, "'TControl.?f51:byte'");
MakeCode(0x4573D4);
MakeComm(0x4573D6, "'TControl.Margins:TMargins'");
MakeComm(0x4573DB, "'TMargins.GetControlBound'");
MakeComm(0x4573E4, "'TControl.Margins:TMargins'");
MakeComm(0x4573E9, "'TMargins.GetControlBound'");
MakeCode(0x4573EE);
MakeComm(0x4573F3, "'TControl.Margins:TMargins'");
MakeComm(0x4573F8, "'TMargins.GetControlBound'");
MakeComm(0x457405, "'TControl.Margins:TMargins'");
MakeComm(0x45740A, "'TMargins.GetControlBound'");
MakeCode(0x457410);
MakeComm(0x457412, "'TControl.Margins:TMargins'");
MakeComm(0x457417, "'TMargins.GetControlBound'");
MakeComm(0x457421, "'TControl.Margins:TMargins'");
MakeComm(0x457426, "'TMargins.GetControlBound'");
MakeComm(0x457432, "'TControl.Margins:TMargins'");
MakeComm(0x457437, "'TMargins.GetControlBound'");
MakeComm(0x457441, "'TControl.Margins:TMargins'");
MakeComm(0x457446, "'TMargins.GetControlBound'");
MakeCode(0x45744E);
MakeComm(0x457453, "'TControl.Margins:TMargins'");
MakeComm(0x457458, "'TMargins.GetControlBound'");
MakeComm(0x457462, "'TControl.Margins:TMargins'");
MakeComm(0x457467, "'TMargins.GetControlBound'");
MakeComm(0x457476, "'TControl.Margins:TMargins'");
MakeComm(0x45747B, "'TMargins.GetControlBound'");
MakeComm(0x457485, "'TControl.Margins:TMargins'");
MakeComm(0x45748A, "'TMargins.GetControlBound'");
MakeCode(0x457492);
MakeCode(0x45749D);
MakeFunction(0x457370, 0x4574A4);
MakeUnkn(0x4574A4, 1);
MakeNameEx(0x4574A4, "TWinControl.GetClientOrigin", 0x20);
MakeComm(0x4574A4, "'function TWinControl.GetClientOrigin:TPoint;'");
MakeCode(0x4574A4);
MakeFunction(0x4574A4, 0x4574C4);
MakeUnkn(0x4574C4, 1);
MakeNameEx(0x4574C4, "TWinControl.GetClientRect", 0x20);
MakeComm(0x4574C4, "'function TWinControl.GetClientRect:TRect;'");
MakeCode(0x4574C4);
MakeFunction(0x4574C4, 0x4574DB);
MakeUnkn(0x4574DC, 1);
MakeNameEx(0x4574DC, "TWinControl.AdjustSize", 0x20);
MakeComm(0x4574DC, "'procedure TWinControl.AdjustSize;'");
MakeCode(0x4574DC);
MakeCode(0x457514);
MakeFunction(0x4574DC, 0x457516);
MakeUnkn(0x457518, 1);
MakeNameEx(0x457518, "TWinControl.SetBorderWidth", 0x20);
MakeComm(0x457518, "'procedure TWinControl.SetBorderWidth(Value:TBorderWidth);'");
MakeCode(0x457518);
MakeFunction(0x457518, 0x457535);
MakeUnkn(0x457538, 1);
MakeNameEx(0x457538, "TWinControl.SetCtl3D", 0x20);
MakeComm(0x457538, "'procedure TWinControl.SetCtl3D(Value:Boolean);'");
MakeCode(0x457538);
MakeFunction(0x457538, 0x45755C);
MakeUnkn(0x45755C, 1);
MakeNameEx(0x45755C, "TWinControl.IsCtl3DStored", 0x20);
MakeComm(0x45755C, "'function TWinControl.IsCtl3DStored(Value:Boolean):Boolean;'");
MakeCode(0x45755C);
MakeFunction(0x45755C, 0x457566);
MakeUnkn(0x457568, 1);
MakeNameEx(0x457568, "TWinControl.SetParentCtl3D", 0x20);
MakeComm(0x457568, "'procedure TWinControl.SetParentCtl3D(Value:Boolean);'");
MakeCode(0x457568);
MakeFunction(0x457568, 0x457591);
MakeUnkn(0x457594, 1);
MakeNameEx(0x457594, "TWinControl.GetTabOrder", 0x20);
MakeComm(0x457594, "'function TWinControl.GetTabOrder:TTabOrder;'");
MakeCode(0x457594);
MakeCode(0x4575AF);
MakeFunction(0x457594, 0x4575B5);
MakeUnkn(0x4575B8, 1);
MakeNameEx(0x4575B8, "TWinControl.UpdateTabOrder", 0x20);
MakeComm(0x4575B8, "'procedure TWinControl.UpdateTabOrder(Value:TTabOrder);'");
MakeCode(0x4575B8);
MakeCode(0x4575E1);
MakeCode(0x4575EB);
MakeCode(0x45760C);
MakeFunction(0x4575B8, 0x457611);
MakeUnkn(0x457614, 1);
MakeNameEx(0x457614, "TWinControl.SetTabOrder", 0x20);
MakeComm(0x457614, "'procedure TWinControl.SetTabOrder(Value:TTabOrder);'");
MakeCode(0x457614);
MakeCode(0x457624);
MakeFunction(0x457614, 0x45762A);
MakeUnkn(0x45762C, 1);
MakeNameEx(0x45762C, "TWinControl.SetTabStop", 0x20);
MakeComm(0x45762C, "'procedure TWinControl.SetTabStop(Value:Boolean);'");
MakeCode(0x45762C);
MakeCode(0x457667);
MakeCode(0x457676);
MakeCode(0x457686);
MakeFunction(0x45762C, 0x457689);
MakeUnkn(0x45768C, 1);
MakeNameEx(0x45768C, "TWinControl.SetUseDockManager", 0x20);
MakeComm(0x45768C, "'procedure TWinControl.SetUseDockManager(Value:Boolean);'");
MakeCode(0x45768C);
MakeCode(0x4576DA);
MakeCode(0x4576E7);
MakeCode(0x4576F0);
MakeCode(0x4576F5);
MakeFunction(0x45768C, 0x4576FC);
MakeUnkn(0x4576FC, 1);
MakeNameEx(0x4576FC, "TWinControl.HandleAllocated", 0x20);
MakeComm(0x4576FC, "'function TWinControl.HandleAllocated:Boolean;'");
MakeCode(0x4576FC);
MakeFunction(0x4576FC, 0x457707);
MakeUnkn(0x457708, 1);
MakeNameEx(0x457708, "TWinControl.UpdateBounds", 0x20);
MakeComm(0x457708, "'procedure TWinControl.UpdateBounds;'");
MakeCode(0x457708);
MakeCode(0x457745);
MakeCode(0x457752);
MakeCode(0x45778D);
MakeFunction(0x457708, 0x4577BD);
MakeUnkn(0x4577C0, 1);
MakeNameEx(0x4577C0, "TWinControl.GetTabOrderList", 0x20);
MakeComm(0x4577C0, "'procedure TWinControl.GetTabOrderList(List:TList);'");
MakeCode(0x4577C0);
MakeCode(0x4577E7);
MakeCode(0x457817);
MakeFunction(0x4577C0, 0x45781E);
MakeUnkn(0x457820, 1);
MakeNameEx(0x457820, "TWinControl.FindNextControl", 0x20);
MakeComm(0x457820, "'function TWinControl.FindNextControl(CurControl:TWinControl; GoForward:Boolean; CheckTabStop:Boolean; CheckParent:Boolean):TWinControl;'");
MakeCode(0x457820);
MakeCode(0x457894);
MakeCode(0x457899);
MakeCode(0x45789C);
MakeCode(0x4578AF);
MakeCode(0x4578B9);
MakeCode(0x4578BA);
MakeCode(0x4578E4);
MakeCode(0x4578F2);
MakeCode(0x4578F5);
MakeCode(0x457900);
MakeCode(0x45790D);
MakeCode(0x457916);
MakeCode(0x45791B);
MakeFunction(0x457820, 0x457929);
MakeUnkn(0x45792C, 1);
MakeNameEx(0x45792C, "TWinControl.SelectNext", 0x20);
MakeComm(0x45792C, "'procedure TWinControl.SelectNext(CurControl:TWinControl; GoForward:Boolean; CheckTabStop:Boolean);'");
MakeCode(0x45792C);
MakeCode(0x457951);
MakeFunction(0x45792C, 0x457956);
MakeUnkn(0x457958, 1);
MakeNameEx(0x457958, "TWinControl.SelectFirst", 0x20);
MakeComm(0x457958, "'procedure TWinControl.SelectFirst;'");
MakeCode(0x457958);
MakeCode(0x45798D);
MakeCode(0x45799A);
MakeFunction(0x457958, 0x45799D);
MakeUnkn(0x4579A0, 1);
MakeNameEx(0x4579A0, "TWinControl.GetChildren", 0x20);
MakeComm(0x4579A0, "'procedure TWinControl.GetChildren(Proc:TGetChildProc; Root:TComponent);'");
MakeCode(0x4579A0);
MakeCode(0x4579C0);
MakeCode(0x4579DA);
MakeCode(0x4579DE);
MakeFunction(0x4579A0, 0x4579E6);
MakeUnkn(0x4579E8, 1);
MakeNameEx(0x4579E8, "TWinControl.SetChildOrder", 0x20);
MakeComm(0x4579E8, "'procedure TWinControl.SetChildOrder(Child:TComponent; Order:Integer);'");
MakeCode(0x4579E8);
MakeCode(0x457A0B);
MakeCode(0x457A25);
MakeFunction(0x4579E8, 0x457A28);
MakeUnkn(0x457A28, 1);
MakeNameEx(0x457A28, "TWinControl.CanResize", 0x20);
MakeComm(0x457A28, "'procedure TWinControl.CanResize(var NewWidth:Integer; var NewHeight:Integer);'");
MakeCode(0x457A28);
MakeFunction(0x457A28, 0x457A2E);
MakeUnkn(0x457A30, 1);
MakeNameEx(0x457A30, "DoCalcConstraints", 0x20);
MakeComm(0x457A30, "'procedure DoCalcConstraints(Control:TControl; var MinWidth:Integer; var MinHeight:Integer; var MaxWidth:Integer; var MaxHeight:Integer);'");
MakeCode(0x457A30);
MakeCode(0x457A4B);
MakeCode(0x457A4F);
MakeCode(0x457A5F);
MakeCode(0x457A63);
MakeCode(0x457A76);
MakeCode(0x457A7D);
MakeCode(0x457A90);
MakeCode(0x457A97);
MakeCode(0x457AB0);
MakeCode(0x457ABC);
MakeCode(0x457ACF);
MakeCode(0x457ADB);
MakeFunction(0x457A30, 0x457AF1);
MakeUnkn(0x457AF4, 1);
MakeNameEx(0x457AF4, "TWinControl.CalcConstraints", 0x20);
MakeComm(0x457AF4, "'procedure TWinControl.CalcConstraints(var MinWidth:Integer; var MinHeight:Integer; var MaxWidth:Integer; var MaxHeight:Integer);'");
MakeCode(0x457AF4);
MakeCode(0x457BBB);
MakeCode(0x457BCB);
MakeCode(0x457BDB);
MakeCode(0x457BEB);
MakeCode(0x457C3B);
MakeCode(0x457C61);
MakeCode(0x457C88);
MakeCode(0x457C8E);
MakeCode(0x457C94);
MakeCode(0x457CCE);
MakeCode(0x457CF1);
MakeCode(0x457CF7);
MakeCode(0x457CFB);
MakeCode(0x457D0D);
MakeCode(0x457D13);
MakeCode(0x457D19);
MakeCode(0x457D53);
MakeCode(0x457D76);
MakeCode(0x457D7C);
MakeCode(0x457D80);
MakeCode(0x457D8D);
MakeCode(0x457DB7);
MakeCode(0x457DE3);
MakeCode(0x457E03);
MakeCode(0x457E10);
MakeCode(0x457E3A);
MakeCode(0x457E66);
MakeCode(0x457E86);
MakeCode(0x457E90);
MakeCode(0x457EAE);
MakeCode(0x457EC9);
MakeCode(0x457ED4);
MakeCode(0x457EF2);
MakeCode(0x457F0D);
MakeCode(0x457F18);
MakeCode(0x457F25);
MakeCode(0x457F35);
MakeCode(0x457F45);
MakeCode(0x457F55);
MakeCode(0x457F65);
MakeCode(0x457F66);
MakeCode(0x457F6B);
MakeCode(0x457F6D);
MakeFunction(0x457AF4, 0x457F76);
MakeUnkn(0x457F80, 1);
MakeNameEx(0x457F80, "TWinControl.ConstrainedResize", 0x20);
MakeComm(0x457F80, "'procedure TWinControl.ConstrainedResize(var MinWidth:Integer; var MinHeight:Integer; var MaxWidth:Integer; var MaxHeight:Integer);'");
MakeCode(0x457F80);
MakeFunction(0x457F80, 0x457FB9);
MakeUnkn(0x457FBC, 1);
MakeNameEx(0x457FBC, "TWinControl.ActionChange", 0x20);
MakeComm(0x457FBC, "'procedure TWinControl.ActionChange(Sender:TObject; CheckDefaults:Boolean);'");
MakeCode(0x457FBC);
MakeCode(0x457FEE);
MakeCode(0x457FF8);
MakeFunction(0x457FBC, 0x457FFC);
MakeUnkn(0x457FFC, 1);
MakeNameEx(0x457FFC, "TWinControl.sub_00451D78", 0x20);
MakeComm(0x457FFC, "'procedure TWinControl.sub_00451D78;'");
MakeCode(0x457FFC);
MakeFunction(0x457FFC, 0x458002);
MakeUnkn(0x458004, 1);
MakeNameEx(0x458004, "TWinControl.AssignTo", 0x20);
MakeComm(0x458004, "'procedure TWinControl.AssignTo(Dest:TPersistent);'");
MakeCode(0x458004);
MakeCode(0x458031);
MakeFunction(0x458004, 0x458034);
MakeUnkn(0x458034, 1);
MakeNameEx(0x458034, "TWinControl.CanAutoSize", 0x20);
MakeComm(0x458034, "'function TWinControl.CanAutoSize(var NewWidth:Integer; var NewHeight:Integer):Boolean;'");
MakeCode(0x458034);
MakeCode(0x458080);
MakeCode(0x4580D4);
MakeCode(0x4580F1);
MakeCode(0x458104);
MakeCode(0x45810C);
MakeCode(0x45810E);
MakeCode(0x458122);
MakeCode(0x458124);
MakeCode(0x45813E);
MakeCode(0x458144);
MakeCode(0x458151);
MakeCode(0x458162);
MakeCode(0x458167);
MakeCode(0x45817C);
MakeCode(0x4581A8);
MakeCode(0x4581AF);
MakeCode(0x4581E8);
MakeCode(0x4581EF);
MakeFunction(0x458034, 0x4581FA);
MakeUnkn(0x4581FC, 1);
MakeNameEx(0x4581FC, "TWinControl.SetBevelCut", 0x20);
MakeComm(0x4581FC, "'procedure TWinControl.SetBevelCut(Index:Integer; const Value:TBevelCut);'");
MakeCode(0x4581FC);
MakeCode(0x458205);
MakeCode(0x458222);
MakeFunction(0x4581FC, 0x45823F);
MakeUnkn(0x458240, 1);
MakeNameEx(0x458240, "TWinControl.SetBevelEdges", 0x20);
MakeComm(0x458240, "'procedure TWinControl.SetBevelEdges(const Value:TBevelEdges);'");
MakeCode(0x458240);
MakeCode(0x45826D);
MakeFunction(0x458240, 0x458270);
MakeUnkn(0x458270, 1);
MakeNameEx(0x458270, "TWinControl.SetBevelKind", 0x20);
MakeComm(0x458270, "'procedure TWinControl.SetBevelKind(const Value:TBevelKind);'");
MakeCode(0x458270);
MakeFunction(0x458270, 0x45828D);
MakeUnkn(0x458290, 1);
MakeNameEx(0x458290, "TWinControl.SetBevelWidth", 0x20);
MakeComm(0x458290, "'procedure TWinControl.SetBevelWidth(const Value:TBevelWidth);'");
MakeCode(0x458290);
MakeFunction(0x458290, 0x4582AD);
MakeUnkn(0x4582B0, 1);
MakeNameEx(0x4582B0, "TWinControl.WMNCCalcSize", 0x20);
MakeComm(0x4582B0, "'procedure TWinControl.WMNCCalcSize(var Message:TWMNCCalcSize);'");
MakeCode(0x4582B0);
MakeCode(0x4582F9);
MakeCode(0x458308);
MakeCode(0x458315);
MakeCode(0x458321);
MakeCode(0x45832D);
MakeCode(0x458339);
MakeFunction(0x4582B0, 0x45833D);
MakeUnkn(0x458340, 1);
MakeNameEx(0x458340, "TWinControl.WMNCPaint", 0x20);
MakeComm(0x458340, "'procedure TWinControl.WMNCPaint(var Message:TMessage);'");
MakeCode(0x458340);
MakeCode(0x45836B);
MakeCode(0x458442);
MakeCode(0x458458);
MakeCode(0x458481);
MakeCode(0x458498);
MakeCode(0x4584A7);
MakeCode(0x4584B6);
MakeCode(0x4584C5);
MakeCode(0x4584D4);
MakeCode(0x458529);
MakeCode(0x45856E);
MakeCode(0x4585B7);
MakeCode(0x4585D3);
MakeCode(0x4585E0);
MakeCode(0x4585F3);
MakeCode(0x4585F8);
MakeCode(0x4585FA);
MakeCode(0x45862B);
MakeFunction(0x458340, 0x458632);
MakeUnkn(0x458634, 1);
MakeNameEx(0x458634, "TWinControl.WMContextMenu", 0x20);
MakeComm(0x458634, "'procedure TWinControl.WMContextMenu(var Message:TWMContextMenu);'");
MakeCode(0x458634);
MakeCode(0x458696);
MakeCode(0x4586A5);
MakeFunction(0x458634, 0x4586AC);
MakeUnkn(0x4586AC, 1);
MakeNameEx(0x4586AC, "TWinControl.UpdateUIState", 0x20);
MakeComm(0x4586AC, "'procedure TWinControl.UpdateUIState(CharCode:Word);'");
MakeCode(0x4586AC);
MakeCode(0x4586CF);
MakeCode(0x4586E2);
MakeCode(0x4586F3);
MakeFunction(0x4586AC, 0x4586F5);
MakeUnkn(0x4586F8, 1);
MakeNameEx(0x4586F8, "TWinControl.WMPrintClient", 0x20);
MakeComm(0x4586F8, "'procedure TWinControl.WMPrintClient(var Message:TWMPrintClient);'");
MakeCode(0x4586F8);
MakeCode(0x45871C);
MakeCode(0x458743);
MakeCode(0x458750);
MakeCode(0x458761);
MakeCode(0x458766);
MakeCode(0x458768);
MakeCode(0x458774);
MakeCode(0x45877E);
MakeFunction(0x4586F8, 0x458783);
MakeUnkn(0x458784, 1);
MakeNameEx(0x458784, "TWinControl.GetParentBackground", 0x20);
MakeComm(0x458784, "'function TWinControl.GetParentBackground:Boolean;'");
MakeCode(0x458784);
MakeFunction(0x458784, 0x45878C);
MakeUnkn(0x45878C, 1);
MakeNameEx(0x45878C, "TWinControl.SetParentBackground", 0x20);
MakeComm(0x45878C, "'procedure TWinControl.SetParentBackground(Value:Boolean);'");
MakeCode(0x45878C);
MakeCode(0x4587AE);
MakeCode(0x4587BB);
MakeCode(0x4587C5);
MakeFunction(0x45878C, 0x4587C8);
MakeUnkn(0x4587CC, 1);
MakeNameEx(0x4587CC, "TWinControl.CMTextChanged", 0x20);
MakeComm(0x4587CC, "'procedure TWinControl.CMTextChanged(var Message:TMessage);'");
MakeCode(0x4587CC);
MakeFunction(0x4587CC, 0x4587E1);
MakeUnkn(0x4587E4, 1);
MakeNameEx(0x4587E4, "TWinControl.InvalidateDockHostSite", 0x20);
MakeComm(0x4587E4, "'procedure TWinControl.InvalidateDockHostSite(FocusLost:Boolean);'");
MakeCode(0x4587E4);
MakeCode(0x4587EC);
MakeCode(0x4587F1);
MakeCode(0x4587FE);
MakeCode(0x458814);
MakeFunction(0x4587E4, 0x458816);
MakeUnkn(0x458818, 1);
MakeNameEx(0x458818, "TWinControl.DockReplaceDockClient", 0x20);
MakeComm(0x458818, "'function TWinControl.DockReplaceDockClient(Client:TControl; NewDockSite:TWinControl; DropControl:TControl; ControlSide:TAlign; ReplacementClient:TControl):Boolean;'");
MakeCode(0x458818);
MakeFunction(0x458818, 0x458821);
MakeUnkn(0x458824, 1);
MakeNameEx(0x458824, "TWinControl.sub_00458824", 0x20);
MakeComm(0x458824, "'procedure TWinControl.sub_00458824;'");
MakeCode(0x458824);
MakeFunction(0x458824, 0x458827);
MakeUnkn(0x458828, 1);
MakeNameEx(0x458828, "TWinControl.RemoveWindowProps", 0x20);
MakeComm(0x458828, "'procedure TWinControl.RemoveWindowProps;'");
MakeCode(0x458828);
MakeFunction(0x458828, 0x458855);
MakeUnkn(0x458858, 1);
MakeNameEx(0x458858, "TWinControl.IsQualifyingSite", 0x20);
MakeComm(0x458858, "'procedure TWinControl.IsQualifyingSite(const Client:TControl);'");
MakeCode(0x458858);
MakeCode(0x458875);
MakeFunction(0x458858, 0x45887A);
MakeUnkn(0x45887C, 1);
MakeNameEx(0x45887C, "TWinControl.DoPaddingChange", 0x20);
MakeComm(0x45887C, "'procedure TWinControl.DoPaddingChange(Sender:TObject);'");
MakeCode(0x45887C);
MakeFunction(0x45887C, 0x458882);
MakeUnkn(0x458884, 1);
MakeNameEx(0x458884, "TWinControl.SetPadding", 0x20);
MakeComm(0x458884, "'procedure TWinControl.SetPadding(const Value:TPadding);'");
MakeCode(0x458884);
MakeFunction(0x458884, 0x458890);
MakeUnkn(0x458890, 1);
MakeNameEx(0x458890, "TWinControl.UpdateRecreatingFlag", 0x20);
MakeComm(0x458890, "'procedure TWinControl.UpdateRecreatingFlag(Recreating:Boolean);'");
MakeCode(0x458890);
MakeCode(0x4588A4);
MakeCode(0x4588AA);
MakeCode(0x4588BF);
MakeCode(0x4588D7);
MakeFunction(0x458890, 0x4588DC);
MakeUnkn(0x4588DC, 1);
MakeNameEx(0x4588DC, "TWinControl.UpdateControlOriginalParentSize", 0x20);
MakeComm(0x4588DC, "'procedure TWinControl.UpdateControlOriginalParentSize(AControl:TControl; var AOriginalParentSize:TPoint);'");
MakeCode(0x4588DC);
MakeCode(0x458904);
MakeCode(0x458927);
MakeCode(0x458932);
MakeFunction(0x4588DC, 0x458955);
MakeUnkn(0x458958, 1);
MakeNameEx(0x458958, "TWinControl.SetParent", 0x20);
MakeComm(0x458958, "'procedure TWinControl.SetParent(AParent:TWinControl);'");
MakeCode(0x458958);
MakeCode(0x458979);
MakeCode(0x45897D);
MakeCode(0x45897F);
MakeCode(0x458992);
MakeCode(0x4589AA);
MakeCode(0x4589B7);
MakeCode(0x4589C7);
MakeCode(0x4589C8);
MakeCode(0x4589CD);
MakeFunction(0x458958, 0x4589D4);
MakeUnkn(0x4589D4, 1);
MakeNameEx(0x4589D4, "TGraphicControl.Create", 0x20);
MakeComm(0x4589D4, "'constructor TGraphicControl.Create(AOwner:TComponent);'");
MakeCode(0x4589D4);
MakeCode(0x4589E6);
MakeCode(0x458A28);
MakeFunction(0x4589D4, 0x458A2F);
MakeUnkn(0x458A30, 1);
MakeNameEx(0x458A30, "TGraphicControl.Destroy", 0x20);
MakeComm(0x458A30, "'destructor TGraphicControl.Destroy;'");
MakeCode(0x458A30);
MakeCode(0x458A4A);
MakeCode(0x458A6C);
MakeFunction(0x458A30, 0x458A6F);
MakeUnkn(0x458A70, 1);
MakeNameEx(0x458A70, "TGraphicControl.WMPaint", 0x20);
MakeComm(0x458A70, "'procedure TGraphicControl.WMPaint(var Message:TWMPaint);'");
MakeCode(0x458A70);
MakeCode(0x458ACA);
MakeCode(0x458AD7);
MakeCode(0x458AE8);
MakeCode(0x458AED);
MakeCode(0x458AEF);
MakeCode(0x458AFC);
MakeCode(0x458B0B);
MakeCode(0x458B10);
MakeCode(0x458B12);
MakeFunction(0x458A70, 0x458B16);
MakeCode(0x458B18);
MakeFunction(0x458B18, 0x458B19);
MakeUnkn(0x458B1C, 1);
MakeNameEx(0x458B1C, "THintWindow.Create", 0x20);
MakeComm(0x458B1C, "'constructor THintWindow.Create(AOwner:TComponent);'");
MakeCode(0x458B1C);
MakeCode(0x458B2A);
MakeCode(0x458B80);
MakeFunction(0x458B1C, 0x458B85);
MakeUnkn(0x458B88, 1);
MakeNameEx(0x458B88, "THintWindow.CreateParams", 0x20);
MakeComm(0x458B88, "'procedure THintWindow.CreateParams(var Params:TCreateParams);'");
MakeCode(0x458B88);
MakeCode(0x458BB5);
MakeCode(0x458BCF);
MakeCode(0x458BDF);
MakeFunction(0x458B88, 0x458BEC);
MakeUnkn(0x458BEC, 1);
MakeNameEx(0x458BEC, "THintWindow.WMNCHitTest", 0x20);
MakeComm(0x458BEC, "'procedure THintWindow.WMNCHitTest(var Message:TWMNCHitTest);'");
MakeCode(0x458BEC);
MakeFunction(0x458BEC, 0x458BF4);
MakeUnkn(0x458BF4, 1);
MakeNameEx(0x458BF4, "THintWindow.WMNCPaint", 0x20);
MakeComm(0x458BF4, "'procedure THintWindow.WMNCPaint(var Message:TMessage);'");
MakeCode(0x458BF4);
MakeCode(0x458C2A);
MakeCode(0x458C37);
MakeCode(0x458C4A);
MakeCode(0x458C4F);
MakeFunction(0x458BF4, 0x458C55);
MakeUnkn(0x458C58, 1);
MakeNameEx(0x458C58, "THintWindow.Paint", 0x20);
MakeComm(0x458C58, "'procedure THintWindow.Paint;'");
MakeCode(0x458C58);
MakeCode(0x458CDB);
MakeCode(0x458CE8);
MakeCode(0x458CF1);
MakeCode(0x458CF6);
MakeFunction(0x458C58, 0x458CFD);
MakeUnkn(0x458D00, 1);
MakeNameEx(0x458D00, "THintWindow.IsHintMsg", 0x20);
MakeComm(0x458D00, "'function THintWindow.IsHintMsg(var Msg:TMsg):Boolean;'");
MakeCode(0x458D00);
MakeCode(0x458D12);
MakeCode(0x458D53);
MakeCode(0x458D60);
MakeFunction(0x458D00, 0x458D64);
MakeUnkn(0x458D64, 1);
MakeNameEx(0x458D64, "THintWindow.ReleaseHandle", 0x20);
MakeComm(0x458D64, "'procedure THintWindow.ReleaseHandle;'");
MakeCode(0x458D64);
MakeFunction(0x458D64, 0x458D6D);
MakeUnkn(0x458D70, 1);
MakeNameEx(0x458D70, "THintWindow.CMTextChanged", 0x20);
MakeComm(0x458D70, "'procedure THintWindow.CMTextChanged(var Message:TMessage);'");
MakeCode(0x458D70);
MakeCode(0x458DE0);
MakeCode(0x458DED);
MakeCode(0x458DFB);
MakeCode(0x458E00);
MakeFunction(0x458D70, 0x458E07);
MakeUnkn(0x458E08, 1);
MakeNameEx(0x458E08, "THintWindow.ActivateHint", 0x20);
MakeComm(0x458E08, "'procedure THintWindow.ActivateHint(Rect:TRect; const AHint:AnsiString);'");
MakeCode(0x458E08);
MakeCode(0x458E7A);
MakeCode(0x458E9E);
MakeCode(0x458EB4);
MakeCode(0x458ECA);
MakeCode(0x458F12);
MakeCode(0x458F1A);
MakeCode(0x458F1C);
MakeCode(0x458F5D);
MakeCode(0x458F76);
MakeCode(0x458F78);
MakeCode(0x458F99);
MakeCode(0x458FC6);
MakeCode(0x458FD3);
MakeCode(0x458FEC);
MakeCode(0x458FF1);
MakeFunction(0x458E08, 0x458FFA);
MakeUnkn(0x458FFC, 1);
MakeNameEx(0x458FFC, "THintWindow.ActivateHintData", 0x20);
MakeComm(0x458FFC, "'procedure THintWindow.ActivateHintData(Rect:TRect; const AHint:AnsiString; AData:Pointer);'");
MakeCode(0x458FFC);
MakeFunction(0x458FFC, 0x459022);
MakeCode(0x459024);
MakeComm(0x45905C, "'THintWindow......................FCanvas:TCanvas'");
MakeFunction(0x459024, 0x45907D);
MakeCode(0x459080);
MakeComm(0x459089, "'THintWindow.Height:Integer'");
MakeComm(0x459092, "'THintWindow.Width:Integer'");
MakeCode(0x4590BD);
MakeCode(0x4590E4);
MakeFunction(0x459080, 0x4590EA);
MakeUnkn(0x4590EC, 1);
MakeNameEx(0x4590EC, "THintWindow.WMPrint", 0x20);
MakeComm(0x4590EC, "'procedure THintWindow.WMPrint(var Message:TMessage);'");
MakeCode(0x4590EC);
MakeFunction(0x4590EC, 0x459110);
MakeCode(0x459110);
MakeFunction(0x459110, 0x459113);
MakeUnkn(0x459114, 1);
MakeNameEx(0x459114, "ClientToWindow", 0x20);
MakeComm(0x459114, "'function ClientToWindow(Handle:HWND; X:Integer; Y:Integer):TPoint;'");
MakeCode(0x459114);
MakeFunction(0x459114, 0x459154);
MakeUnkn(0x459154, 1);
MakeNameEx(0x459154, "TDragImageList.Initialize", 0x20);
MakeComm(0x459154, "'procedure TDragImageList.Initialize;'");
MakeCode(0x459154);
MakeFunction(0x459154, 0x45916A);
MakeUnkn(0x45916C, 1);
MakeNameEx(0x45916C, "TDragImageList.SetDragImage", 0x20);
MakeComm(0x45916C, "'function TDragImageList.SetDragImage(Index:Integer; HotSpotX:Integer; HotSpotY:Integer):Boolean;'");
MakeCode(0x45916C);
MakeCode(0x4591A9);
MakeCode(0x4591AB);
MakeFunction(0x45916C, 0x4591B2);
MakeUnkn(0x4591B4, 1);
MakeNameEx(0x4591B4, "TDragImageList.SetDragCursor", 0x20);
MakeComm(0x4591B4, "'procedure TDragImageList.SetDragCursor(Value:TCursor);'");
MakeCode(0x4591B4);
MakeFunction(0x4591B4, 0x4591D7);
MakeUnkn(0x4591D8, 1);
MakeNameEx(0x4591D8, "TDragImageList.GetHotSpot", 0x20);
MakeComm(0x4591D8, "'function TDragImageList.GetHotSpot:TPoint;'");
MakeCode(0x4591D8);
MakeCode(0x459200);
MakeFunction(0x4591D8, 0x459203);
MakeUnkn(0x459204, 1);
MakeNameEx(0x459204, "TDragImageList.BeginDrag", 0x20);
MakeComm(0x459204, "'function TDragImageList.BeginDrag(Window:HWND; X:Integer; Y:Integer):Boolean;'");
MakeCode(0x459204);
MakeCode(0x459236);
MakeCode(0x45926B);
MakeFunction(0x459204, 0x459275);
MakeUnkn(0x459278, 1);
MakeNameEx(0x459278, "TDragImageList.DragLock", 0x20);
MakeComm(0x459278, "'function TDragImageList.DragLock(Window:HWND; XPos:Integer; YPos:Integer):Boolean;'");
MakeCode(0x459278);
MakeCode(0x4592CE);
MakeFunction(0x459278, 0x4592D9);
MakeUnkn(0x4592DC, 1);
MakeNameEx(0x4592DC, "TDragImageList.DragUnlock", 0x20);
MakeComm(0x4592DC, "'procedure TDragImageList.DragUnlock;'");
MakeCode(0x4592DC);
MakeCode(0x4592FE);
MakeFunction(0x4592DC, 0x459300);
MakeUnkn(0x459300, 1);
MakeNameEx(0x459300, "TDragImageList.DragMove", 0x20);
MakeComm(0x459300, "'function TDragImageList.DragMove(X:Integer; Y:Integer):Boolean;'");
MakeCode(0x459300);
MakeCode(0x45933B);
MakeCode(0x45933D);
MakeFunction(0x459300, 0x459343);
MakeUnkn(0x459344, 1);
MakeNameEx(0x459344, "TDragImageList.ShowDragImage", 0x20);
MakeComm(0x459344, "'procedure TDragImageList.ShowDragImage;'");
MakeCode(0x459344);
MakeCode(0x459359);
MakeFunction(0x459344, 0x45935B);
MakeUnkn(0x45935C, 1);
MakeNameEx(0x45935C, "TDragImageList.HideDragImage", 0x20);
MakeComm(0x45935C, "'procedure TDragImageList.HideDragImage;'");
MakeCode(0x45935C);
MakeCode(0x459371);
MakeFunction(0x45935C, 0x459373);
MakeUnkn(0x459374, 1);
MakeNameEx(0x459374, "TDragImageList.EndDrag", 0x20);
MakeComm(0x459374, "'function TDragImageList.EndDrag:Boolean;'");
MakeCode(0x459374);
MakeCode(0x4593BB);
MakeCode(0x4593BD);
MakeFunction(0x459374, 0x4593C2);
MakeUnkn(0x4593C4, 1);
MakeNameEx(0x4593C4, "TCustomControl.Create", 0x20);
MakeComm(0x4593C4, "'constructor TCustomControl.Create(AOwner:TComponent);'");
MakeCode(0x4593C4);
MakeCode(0x4593D6);
MakeCode(0x459418);
MakeFunction(0x4593C4, 0x45941F);
MakeUnkn(0x459420, 1);
MakeNameEx(0x459420, "TCustomControl.Destroy", 0x20);
MakeComm(0x459420, "'destructor TCustomControl.Destroy;'");
MakeCode(0x459420);
MakeCode(0x45944D);
MakeFunction(0x459420, 0x459450);
MakeUnkn(0x459450, 1);
MakeNameEx(0x459450, "TCustomControl.WMPaint", 0x20);
MakeComm(0x459450, "'procedure TCustomControl.WMPaint(var Message:TWMPaint);'");
MakeCode(0x459450);
MakeFunction(0x459450, 0x45946E);
MakeUnkn(0x459470, 1);
MakeNameEx(0x459470, "TCustomControl.PaintWindow", 0x20);
MakeComm(0x459470, "'procedure TCustomControl.PaintWindow(DC:HDC);'");
MakeCode(0x459470);
MakeCode(0x4594CD);
MakeCode(0x4594DA);
MakeCode(0x4594EB);
MakeCode(0x4594F0);
MakeCode(0x4594F2);
MakeCode(0x4594FF);
MakeCode(0x45950E);
MakeCode(0x459513);
MakeFunction(0x459470, 0x459519);
MakeCode(0x45951C);
MakeFunction(0x45951C, 0x45951D);
MakeUnkn(0x459520, 1);
MakeNameEx(0x459520, "NextVisibleZone", 0x20);
MakeComm(0x459520, "'function NextVisibleZone(StartZone:TDockZone):TDockZone;'");
MakeCode(0x459520);
MakeCode(0x459525);
MakeCode(0x459528);
MakeCode(0x459537);
MakeFunction(0x459520, 0x45953B);
MakeUnkn(0x45953C, 1);
MakeNameEx(0x45953C, "IsOrientationSet", 0x20);
MakeComm(0x45953C, "'function IsOrientationSet(Zone:TDockZone):Boolean;'");
MakeCode(0x45953C);
MakeCode(0x459549);
MakeCode(0x459557);
MakeCode(0x45955A);
MakeFunction(0x45953C, 0x45955D);
MakeUnkn(0x459560, 1);
MakeNameEx(0x459560, "TDockZone.Create", 0x20);
MakeComm(0x459560, "'constructor TDockZone.Create(Tree:TDockTree);'");
MakeCode(0x459560);
MakeCode(0x45956C);
MakeFunction(0x459560, 0x459583);
MakeUnkn(0x459584, 1);
MakeNameEx(0x459584, "TDockZone.GetChildCount", 0x20);
MakeComm(0x459584, "'function TDockZone.GetChildCount:Integer;'");
MakeCode(0x459584);
MakeCode(0x45958D);
MakeCode(0x459595);
MakeFunction(0x459584, 0x459598);
MakeUnkn(0x459598, 1);
MakeNameEx(0x459598, "TDockZone.GetVisibleChildCount", 0x20);
MakeComm(0x459598, "'function TDockZone.GetVisibleChildCount:Integer;'");
MakeCode(0x459598);
MakeCode(0x4595A7);
MakeCode(0x4595B5);
MakeFunction(0x459598, 0x4595BA);
MakeUnkn(0x4595BC, 1);
MakeNameEx(0x4595BC, "TDockZone.GetVisible", 0x20);
MakeComm(0x4595BC, "'function TDockZone.GetVisible:Boolean;'");
MakeCode(0x4595BC);
MakeCode(0x4595CB);
MakeCode(0x4595D8);
MakeCode(0x4595EA);
MakeCode(0x4595EC);
MakeFunction(0x4595BC, 0x4595F1);
MakeUnkn(0x4595F4, 1);
MakeNameEx(0x4595F4, "TDockZone.GetLimitBegin", 0x20);
MakeComm(0x4595F4, "'function TDockZone.GetLimitBegin:Integer;'");
MakeCode(0x4595F4);
MakeCode(0x459600);
MakeCode(0x459603);
MakeCode(0x459617);
MakeCode(0x459628);
MakeFunction(0x4595F4, 0x45963C);
MakeUnkn(0x45963C, 1);
MakeNameEx(0x45963C, "TDockZone.GetLimitSize", 0x20);
MakeComm(0x45963C, "'function TDockZone.GetLimitSize:Integer;'");
MakeCode(0x45963C);
MakeCode(0x459648);
MakeCode(0x45964B);
MakeCode(0x45965F);
MakeCode(0x459670);
MakeFunction(0x45963C, 0x459684);
MakeUnkn(0x459684, 1);
MakeNameEx(0x459684, "TDockZone.GetTopLeft", 0x20);
MakeComm(0x459684, "'function TDockZone.GetTopLeft(Orient:Integer):Integer;'");
MakeCode(0x459684);
MakeCode(0x459693);
MakeCode(0x4596B0);
MakeCode(0x4596B2);
MakeCode(0x4596EE);
MakeCode(0x4596F7);
MakeCode(0x4596FC);
MakeFunction(0x459684, 0x459707);
MakeUnkn(0x459708, 1);
MakeNameEx(0x459708, "TDockZone.GetHeightWidth", 0x20);
MakeComm(0x459708, "'function TDockZone.GetHeightWidth(Orient:Integer):Integer;'");
MakeCode(0x459708);
MakeCode(0x459736);
MakeCode(0x459763);
MakeCode(0x45976C);
MakeCode(0x459770);
MakeCode(0x45978E);
MakeCode(0x459791);
MakeCode(0x4597AB);
MakeCode(0x4597B4);
MakeFunction(0x459708, 0x4597BE);
MakeUnkn(0x4597C0, 1);
MakeNameEx(0x4597C0, "TDockZone.ResetChildren", 0x20);
MakeComm(0x4597C0, "'procedure TDockZone.ResetChildren;'");
MakeCode(0x4597C0);
MakeCode(0x4597F5);
MakeCode(0x459805);
MakeCode(0x459815);
MakeCode(0x459817);
MakeCode(0x45982D);
MakeCode(0x45983E);
MakeCode(0x459850);
MakeCode(0x459864);
MakeFunction(0x4597C0, 0x459868);
MakeUnkn(0x459868, 1);
MakeNameEx(0x459868, "TDockZone.GetControlName", 0x20);
MakeComm(0x459868, "'function TDockZone.GetControlName:AnsiString;'");
MakeCode(0x459868);
MakeCode(0x45989A);
MakeCode(0x4598A7);
MakeFunction(0x459868, 0x4598AB);
MakeUnkn(0x4598AC, 1);
MakeNameEx(0x4598AC, "TDockZone.SetControlName", 0x20);
MakeComm(0x4598AC, "'function TDockZone.SetControlName(const Value:AnsiString):Boolean;'");
MakeCode(0x4598AC);
MakeCode(0x459907);
MakeCode(0x459914);
MakeCode(0x45991D);
MakeCode(0x459922);
MakeCode(0x459924);
MakeFunction(0x4598AC, 0x45992E);
MakeUnkn(0x459930, 1);
MakeNameEx(0x459930, "ParentNotLast", 0x20);
MakeComm(0x459930, "'function ParentNotLast:Boolean;'");
MakeCode(0x459930);
MakeCode(0x459944);
MakeCode(0x459953);
MakeCode(0x45995A);
MakeFunction(0x459930, 0x459960);
MakeUnkn(0x459960, 1);
MakeNameEx(0x459960, "TDockZone.Update", 0x20);
MakeComm(0x459960, "'procedure TDockZone.Update;'");
MakeCode(0x459960);
MakeCode(0x4599E4);
MakeCode(0x4599ED);
MakeCode(0x459A35);
MakeCode(0x459A69);
MakeCode(0x459A80);
MakeCode(0x459A89);
MakeCode(0x459AD2);
MakeFunction(0x459960, 0x459AD9);
MakeUnkn(0x459ADC, 1);
MakeNameEx(0x459ADC, "TDockZone.GetZoneLimit", 0x20);
MakeComm(0x459ADC, "'function TDockZone.GetZoneLimit:Integer;'");
MakeCode(0x459ADC);
MakeCode(0x459AFE);
MakeFunction(0x459ADC, 0x459B03);
MakeUnkn(0x459B04, 1);
MakeNameEx(0x459B04, "TDockZone.SetZoneLimit", 0x20);
MakeComm(0x459B04, "'procedure TDockZone.SetZoneLimit(const Value:Integer);'");
MakeCode(0x459B04);
MakeFunction(0x459B04, 0x459B08);
MakeUnkn(0x459B08, 1);
MakeNameEx(0x459B08, "GetLastChildZone", 0x20);
MakeComm(0x459B08, "'function GetLastChildZone(Zone:TDockZone):TDockZone;'");
MakeCode(0x459B08);
MakeCode(0x459B0D);
MakeCode(0x459B0F);
MakeFunction(0x459B08, 0x459B17);
MakeUnkn(0x459B18, 1);
MakeNameEx(0x459B18, "TDockZone.ExpandZoneLimit", 0x20);
MakeComm(0x459B18, "'procedure TDockZone.ExpandZoneLimit(NewLimit:Integer);'");
MakeCode(0x459B18);
MakeCode(0x459B2F);
MakeCode(0x459B4C);
MakeCode(0x459B53);
MakeFunction(0x459B18, 0x459B57);
MakeUnkn(0x459B58, 1);
MakeNameEx(0x459B58, "TDockZone.ResetZoneLimits", 0x20);
MakeComm(0x459B58, "'procedure TDockZone.ResetZoneLimits;'");
MakeCode(0x459B58);
MakeCode(0x459B64);
MakeCode(0x459B8C);
MakeCode(0x459BA5);
MakeCode(0x459BB3);
MakeFunction(0x459B58, 0x459BB7);
MakeUnkn(0x459BB8, 1);
MakeNameEx(0x459BB8, "TDockZone.NextVisible", 0x20);
MakeComm(0x459BB8, "'function TDockZone.NextVisible:TDockZone;'");
MakeCode(0x459BB8);
MakeFunction(0x459BB8, 0x459BC1);
MakeUnkn(0x459BC4, 1);
MakeNameEx(0x459BC4, "TDockZone.PrevVisible", 0x20);
MakeComm(0x459BC4, "'function TDockZone.PrevVisible:TDockZone;'");
MakeCode(0x459BC4);
MakeCode(0x459BCA);
MakeCode(0x459BCD);
MakeCode(0x459BDC);
MakeFunction(0x459BC4, 0x459BE0);
MakeUnkn(0x459BE0, 1);
MakeNameEx(0x459BE0, "TDockZone.FirstVisibleChild", 0x20);
MakeComm(0x459BE0, "'function TDockZone.FirstVisibleChild:TDockZone;'");
MakeCode(0x459BE0);
MakeFunction(0x459BE0, 0x459BE9);
MakeUnkn(0x459BEC, 1);
MakeNameEx(0x459BEC, "TDockTree.Create", 0x20);
MakeComm(0x459BEC, "'constructor TDockTree.Create(DockSite:TWinControl);'");
MakeCode(0x459BEC);
MakeCode(0x459C01);
MakeCode(0x459C4A);
MakeCode(0x459C4E);
MakeCode(0x459C50);
MakeCode(0x459CBC);
MakeCode(0x459CD8);
MakeCode(0x459CE3);
MakeCode(0x459CF0);
MakeCode(0x459CF9);
MakeCode(0x459CFE);
MakeCode(0x459D31);
MakeCode(0x459D49);
MakeFunction(0x459BEC, 0x459D53);
MakeUnkn(0x459D54, 1);
MakeNameEx(0x459D54, "TDockTree.Destroy", 0x20);
MakeComm(0x459D54, "'destructor TDockTree.Destroy;'");
MakeCode(0x459D54);
MakeCode(0x459D7C);
MakeCode(0x459DA5);
MakeFunction(0x459D54, 0x459DA8);
MakeUnkn(0x459DA8, 1);
MakeNameEx(0x459DA8, "TDockTree.AdjustDockRect", 0x20);
MakeComm(0x459DA8, "'procedure TDockTree.AdjustDockRect(Control:TControl; var ARect:TRect);'");
MakeCode(0x459DA8);
MakeCode(0x459DB8);
MakeFunction(0x459DA8, 0x459DBD);
MakeUnkn(0x459DC0, 1);
MakeNameEx(0x459DC0, "TDockTree.BeginUpdate", 0x20);
MakeComm(0x459DC0, "'procedure TDockTree.BeginUpdate;'");
MakeCode(0x459DC0);
MakeFunction(0x459DC0, 0x459DC4);
MakeUnkn(0x459DC4, 1);
MakeNameEx(0x459DC4, "TDockTree.EndUpdate", 0x20);
MakeComm(0x459DC4, "'procedure TDockTree.EndUpdate;'");
MakeCode(0x459DC4);
MakeFunction(0x459DC4, 0x459DD8);
MakeUnkn(0x459DD8, 1);
MakeNameEx(0x459DD8, "DoFindControlZone", 0x20);
MakeComm(0x459DD8, "'procedure DoFindControlZone(StartZone:TDockZone);'");
MakeCode(0x459DD8);
MakeCode(0x459DF2);
MakeFunction(0x459DD8, 0x459E2D);
MakeUnkn(0x459E30, 1);
MakeNameEx(0x459E30, "TDockTree.FindControlZone", 0x20);
MakeComm(0x459E30, "'function TDockTree.FindControlZone(Control:TControl):TDockZone;'");
MakeCode(0x459E30);
MakeCode(0x459E54);
MakeFunction(0x459E30, 0x459E5B);
MakeUnkn(0x459E5C, 1);
MakeNameEx(0x459E5C, "DoForEach", 0x20);
MakeComm(0x459E5C, "'procedure DoForEach(Zone:TDockZone);'");
MakeCode(0x459E5C);
MakeCode(0x459E81);
MakeCode(0x459E92);
MakeFunction(0x459E5C, 0x459E96);
MakeUnkn(0x459E98, 1);
MakeNameEx(0x459E98, "TDockTree.ForEachAt", 0x20);
MakeComm(0x459E98, "'procedure TDockTree.ForEachAt(Zone:TDockZone; Proc:TForEachZoneProc);'");
MakeCode(0x459E98);
MakeCode(0x459EA2);
MakeFunction(0x459E98, 0x459EAF);
MakeCode(0x459EB0);
MakeCode(0x459ED3);
MakeCode(0x459F1A);
MakeFunction(0x459EB0, 0x459F21);
MakeUnkn(0x459F24, 1);
MakeNameEx(0x459F24, "TDockTree.HitTest", 0x20);
MakeComm(0x459F24, "'function TDockTree.HitTest(const MousePos:TPoint; var HTFlag:Integer):TControl;'");
MakeCode(0x459F24);
MakeCode(0x459F31);
MakeFunction(0x459F24, 0x459F34);
MakeCode(0x459F34);
MakeComm(0x459F4E, "'TDockTree.FReplacementZone:TDockZone'");
MakeComm(0x459F55, "'TDockZone.FChildControl:TControl'");
MakeComm(0x459F62, "'TDockTree.FTopZone:TDockZone'");
MakeCode(0x459F62);
MakeComm(0x459F65, "'TDockZone.FChildZones:TDockZone'");
MakeComm(0x459F72, "'TDockTree.FDockSite:TWinControl'");
MakeComm(0x459F77, "'TWinControl.GetClientRect'");
MakeComm(0x459F7D, "'TDockTree.FDockSite:TWinControl'");
MakeComm(0x459F82, "'TWinControl.AdjustClientRect'");
MakeComm(0x459F97, "'TDockTree.FDockSite:TWinControl'");
MakeComm(0x459F9A, "'TWinControl.FAutoSize:Boolean'");
MakeCode(0x459FAD);
MakeCode(0x459FBD);
MakeComm(0x459FE7, "'TDockTree.AdjustDockRect'");
MakeComm(0x459FFC, "'TDockZone.Create'");
MakeComm(0x45A001, "'TDockTree.FTopZone:TDockZone'");
MakeComm(0x45A004, "'TDockZone.FChildZones:TDockZone'");
MakeComm(0x45A007, "'TDockZone.FParentZone:TDockZone'");
MakeComm(0x45A00A, "'TDockZone.FChildControl:TControl'");
MakeCode(0x45A012);
MakeCode(0x45A01E);
MakeCode(0x45A022);
MakeCode(0x45A038);
MakeComm(0x45A053, "'TDockTree.FTopZone:TDockZone'");
MakeComm(0x45A05E, "'TDockTree.FTopZone:TDockZone'");
MakeComm(0x45A065, "'TDockZone.FOrientation:TDockOrientation'");
MakeComm(0x45A076, "'TDockZone.FChildZones:TDockZone'");
MakeCode(0x45A076);
MakeComm(0x45A08C, "'TDockTree.FTopZone:TDockZone'");
MakeComm(0x45A08F, "'TDockZone.FChildZones:TDockZone'");
MakeComm(0x45A09C, "'TDockTree.FTopXYLimit:Integer'");
MakeComm(0x45A0A1, "'TDockZone.FChildZones:TDockZone'");
MakeCode(0x45A0A1);
MakeComm(0x45A0B7, "'TDockTree.FTopZone:TDockZone'");
MakeComm(0x45A0BA, "'TDockZone.FChildZones:TDockZone'");
MakeComm(0x45A0C7, "'TDockTree.FTopXYLimit:Integer'");
MakeCode(0x45A0CA);
MakeComm(0x45A0D3, "'TDockZone.Create'");
MakeComm(0x45A0D8, "'TDockZone.FChildControl:TControl'");
MakeComm(0x45A0E4, "'TDockZone.FParentZone:TDockZone'");
MakeComm(0x45A0E7, "'TDockZone.FOrientation:TDockOrientation'");
MakeComm(0x45A0ED, "'TDockTree.FTopZone:TDockZone'");
MakeCode(0x45A0ED);
MakeComm(0x45A0F0, "'TDockZone.FOrientation:TDockOrientation'");
MakeCode(0x45A0F4);
MakeCode(0x45A0FD);
MakeCode(0x45A11C);
MakeComm(0x45A139, "'TDockTree.FDockSite:TWinControl'");
MakeCode(0x45A139);
MakeComm(0x45A13E, "'TWinControl.Invalidate'");
MakeCode(0x45A144);
MakeFunction(0x459F34, 0x45A14D);
MakeUnkn(0x45A150, 1);
MakeNameEx(0x45A150, "TDockTree.InsertNewParent", 0x20);
MakeComm(0x45A150, "'procedure TDockTree.InsertNewParent(NewZone:TDockZone; SiblingZone:TDockZone; ParentOrientation:TDockOrientation; InsertLast:Boolean);'");
MakeCode(0x45A150);
MakeCode(0x45A1DE);
MakeCode(0x45A21E);
MakeCode(0x45A242);
MakeCode(0x45A24A);
MakeCode(0x45A25B);
MakeCode(0x45A27E);
MakeCode(0x45A28B);
MakeCode(0x45A296);
MakeCode(0x45A2BB);
MakeCode(0x45A2D2);
MakeFunction(0x45A150, 0x45A2F7);
MakeUnkn(0x45A2F8, 1);
MakeNameEx(0x45A2F8, "TDockTree.InsertSibling", 0x20);
MakeComm(0x45A2F8, "'procedure TDockTree.InsertSibling(NewZone:TDockZone; SiblingZone:TDockZone; InsertLast:Boolean);'");
MakeCode(0x45A2F8);
MakeCode(0x45A311);
MakeCode(0x45A313);
MakeCode(0x45A31A);
MakeCode(0x45A334);
MakeCode(0x45A339);
MakeCode(0x45A349);
MakeCode(0x45A35A);
MakeFunction(0x45A2F8, 0x45A36F);
MakeUnkn(0x45A370, 1);
MakeNameEx(0x45A370, "TDockTree.ZoneCaptionHitTest", 0x20);
MakeComm(0x45A370, "'function TDockTree.ZoneCaptionHitTest(const Zone:TDockZone; const MousePos:TPoint; var HTFlag:Integer):Boolean;'");
MakeCode(0x45A370);
MakeCode(0x45A405);
MakeCode(0x45A410);
MakeCode(0x45A45D);
MakeCode(0x45A466);
MakeFunction(0x45A370, 0x45A473);
MakeUnkn(0x45A474, 1);
MakeNameEx(0x45A474, "TDockTree.FindControlAtPos", 0x20);
MakeComm(0x45A474, "'function TDockTree.FindControlAtPos(const Pos:TPoint):TControl;'");
MakeCode(0x45A474);
MakeCode(0x45A48F);
MakeCode(0x45A4BB);
MakeCode(0x45A4EE);
MakeCode(0x45A4F4);
MakeCode(0x45A4F6);
MakeFunction(0x45A474, 0x45A500);
MakeUnkn(0x45A500, 1);
MakeNameEx(0x45A500, "DoFindZone", 0x20);
MakeComm(0x45A500, "'procedure DoFindZone(Zone:TDockZone);'");
MakeCode(0x45A500);
MakeCode(0x45A551);
MakeCode(0x45A599);
MakeCode(0x45A5C3);
MakeCode(0x45A5E8);
MakeCode(0x45A60D);
MakeFunction(0x45A500, 0x45A611);
MakeUnkn(0x45A614, 1);
MakeNameEx(0x45A614, "TDockTree.InternalHitTest", 0x20);
MakeComm(0x45A614, "'function TDockTree.InternalHitTest(const MousePos:TPoint; var HTFlag:Integer):TDockZone;'");
MakeCode(0x45A614);
MakeCode(0x45A66D);
MakeCode(0x45A692);
MakeFunction(0x45A614, 0x45A69A);
MakeUnkn(0x45A69C, 1);
MakeNameEx(0x45A69C, "ReadControlName", 0x20);
MakeComm(0x45A69C, "'procedure ReadControlName(var ControlName:AnsiString);'");
MakeCode(0x45A69C);
MakeCode(0x45A6DE);
MakeFunction(0x45A69C, 0x45A6E3);
MakeUnkn(0x45A6E4, 1);
MakeNameEx(0x45A6E4, "TDockTree.LoadFromStream", 0x20);
MakeComm(0x45A6E4, "'procedure TDockTree.LoadFromStream(Stream:TStream);'");
MakeCode(0x45A6E4);
MakeCode(0x45A75D);
MakeCode(0x45A78D);
MakeCode(0x45A7CB);
MakeCode(0x45A7EE);
MakeCode(0x45A835);
MakeCode(0x45A83D);
MakeCode(0x45A87B);
MakeCode(0x45A882);
MakeCode(0x45A8F7);
MakeCode(0x45A921);
MakeCode(0x45A932);
MakeCode(0x45A954);
MakeCode(0x45A962);
MakeCode(0x45A972);
MakeCode(0x45A991);
MakeCode(0x45A9A2);
MakeCode(0x45A9B7);
MakeCode(0x45A9C4);
MakeCode(0x45A9D1);
MakeCode(0x45A9F9);
MakeCode(0x45AA02);
MakeCode(0x45AA07);
MakeCode(0x45AA09);
MakeCode(0x45AA16);
MakeCode(0x45AA27);
MakeCode(0x45AA2C);
MakeFunction(0x45A6E4, 0x45AA35);
MakeUnkn(0x45AA38, 1);
MakeNameEx(0x45AA38, "DrawCloseButton", 0x20);
MakeComm(0x45AA38, "'procedure DrawCloseButton(Left:Integer; Top:Integer);'");
MakeCode(0x45AA38);
MakeCode(0x45AAAC);
MakeCode(0x45AAC5);
MakeFunction(0x45AA38, 0x45AACC);
MakeUnkn(0x45AACC, 1);
MakeNameEx(0x45AACC, "DrawGrabberLine", 0x20);
MakeComm(0x45AACC, "'procedure DrawGrabberLine(Left:Integer; Top:Integer; Right:Integer; Bottom:Integer);'");
MakeCode(0x45AACC);
MakeFunction(0x45AACC, 0x45AB53);
MakeUnkn(0x45AB54, 1);
MakeNameEx(0x45AB54, "DrawThemedGrabber", 0x20);
MakeComm(0x45AB54, "'procedure DrawThemedGrabber(const GripperType:TThemedRebar; const Left:Integer; const Top:Integer; const Right:Integer; const Bottom:Integer);'");
MakeCode(0x45AB54);
MakeFunction(0x45AB54, 0x45ABAF);
MakeUnkn(0x45ABB0, 1);
MakeNameEx(0x45ABB0, "TDockTree.PaintDockFrame", 0x20);
MakeComm(0x45ABB0, "'procedure TDockTree.PaintDockFrame(Canvas:TCanvas; Control:TControl; const ARect:TRect);'");
MakeCode(0x45ABB0);
MakeCode(0x45AC19);
MakeCode(0x45AC62);
MakeCode(0x45ACAE);
MakeCode(0x45ACFA);
MakeFunction(0x45ABB0, 0x45AD01);
MakeUnkn(0x45AD04, 1);
MakeNameEx(0x45AD04, "TDockTree.PaintSite", 0x20);
MakeComm(0x45AD04, "'procedure TDockTree.PaintSite(DC:HDC);'");
MakeCode(0x45AD04);
MakeCode(0x45AD7F);
MakeCode(0x45ADCE);
MakeCode(0x45ADD6);
MakeCode(0x45ADE3);
MakeCode(0x45ADEE);
MakeCode(0x45ADF3);
MakeCode(0x45ADF5);
MakeCode(0x45AE02);
MakeCode(0x45AE0B);
MakeCode(0x45AE10);
MakeCode(0x45AE12);
MakeCode(0x45AE1F);
MakeCode(0x45AE28);
MakeCode(0x45AE2D);
MakeFunction(0x45AD04, 0x45AE36);
MakeCode(0x45AE38);
MakeComm(0x45AE45, "'TDockTree.FDockSite:TWinControl'");
MakeComm(0x45AE65, "'TDockTree.FDockSite:TWinControl'");
MakeCode(0x45AE65);
MakeComm(0x45AE72, "'TDockTree.FDockSite:TWinControl'");
MakeCode(0x45AEB6);
MakeCode(0x45AECF);
MakeCode(0x45AEDC);
MakeCode(0x45AEE6);
MakeCode(0x45AEFF);
MakeCode(0x45AF0C);
MakeCode(0x45AF14);
MakeCode(0x45AF42);
MakeCode(0x45AF55);
MakeCode(0x45AF58);
MakeCode(0x45AF69);
MakeCode(0x45AF6F);
MakeCode(0x45AF92);
MakeComm(0x45AF9A, "'TDockTree.FDockSite:TWinControl'");
MakeFunction(0x45AE38, 0x45AFB1);
MakeUnkn(0x45AFB4, 1);
MakeNameEx(0x45AFB4, "DoPrune", 0x20);
MakeComm(0x45AFB4, "'procedure DoPrune(Zone:TDockZone);'");
MakeCode(0x45AFB4);
MakeCode(0x45AFCB);
MakeCode(0x45AFDC);
MakeFunction(0x45AFB4, 0x45AFE6);
MakeUnkn(0x45AFE8, 1);
MakeNameEx(0x45AFE8, "TDockTree.PruneZone", 0x20);
MakeComm(0x45AFE8, "'procedure TDockTree.PruneZone(Zone:TDockZone);'");
MakeCode(0x45AFE8);
MakeCode(0x45B003);
MakeCode(0x45B012);
MakeCode(0x45B01F);
MakeCode(0x45B02C);
MakeCode(0x45B036);
MakeCode(0x45B03D);
MakeFunction(0x45AFE8, 0x45B041);
MakeUnkn(0x45B044, 1);
MakeNameEx(0x45B044, "TDockTree.RemoveControl", 0x20);
MakeComm(0x45B044, "'procedure TDockTree.RemoveControl(Control:TControl);'");
MakeCode(0x45B044);
MakeCode(0x45B063);
MakeCode(0x45B06C);
MakeCode(0x45B07E);
MakeFunction(0x45B044, 0x45B081);
MakeUnkn(0x45B084, 1);
MakeNameEx(0x45B084, "TDockTree.RemoveZone", 0x20);
MakeComm(0x45B084, "'procedure TDockTree.RemoveZone(Zone:TDockZone);'");
MakeCode(0x45B084);
MakeCode(0x45B0E1);
MakeCode(0x45B122);
MakeCode(0x45B140);
MakeCode(0x45B155);
MakeCode(0x45B157);
MakeCode(0x45B191);
MakeCode(0x45B1A7);
MakeCode(0x45B1BC);
MakeCode(0x45B1FF);
MakeCode(0x45B227);
MakeCode(0x45B230);
MakeCode(0x45B242);
MakeCode(0x45B254);
MakeCode(0x45B269);
MakeCode(0x45B28A);
MakeCode(0x45B29B);
MakeCode(0x45B2BA);
MakeCode(0x45B2CA);
MakeCode(0x45B2E3);
MakeCode(0x45B2F3);
MakeCode(0x45B2FA);
MakeCode(0x45B307);
MakeCode(0x45B315);
MakeCode(0x45B31A);
MakeFunction(0x45B084, 0x45B323);
MakeUnkn(0x45B324, 1);
MakeNameEx(0x45B324, "TDockTree.ResetBounds", 0x20);
MakeComm(0x45B324, "'procedure TDockTree.ResetBounds(Force:Boolean);'");
MakeCode(0x45B324);
MakeCode(0x45B38C);
MakeCode(0x45B3AA);
MakeCode(0x45B3C3);
MakeCode(0x45B3DA);
MakeCode(0x45B404);
MakeFunction(0x45B324, 0x45B40B);
MakeUnkn(0x45B40C, 1);
MakeNameEx(0x45B40C, "TDockTree.ScaleZone", 0x20);
MakeComm(0x45B40C, "'procedure TDockTree.ScaleZone(Zone:TDockZone);'");
MakeCode(0x45B40C);
MakeCode(0x45B445);
MakeFunction(0x45B40C, 0x45B449);
MakeUnkn(0x45B44C, 1);
MakeNameEx(0x45B44C, "WriteControlName", 0x20);
MakeComm(0x45B44C, "'procedure WriteControlName(ControlName:AnsiString);'");
MakeCode(0x45B44C);
MakeCode(0x45B478);
MakeCode(0x45B4A5);
MakeCode(0x45B4B2);
MakeCode(0x45B4BB);
MakeCode(0x45B4C0);
MakeFunction(0x45B44C, 0x45B4C7);
MakeUnkn(0x45B4C8, 1);
MakeNameEx(0x45B4C8, "DoSaveZone", 0x20);
MakeComm(0x45B4C8, "'procedure DoSaveZone(Zone:TDockZone; Level:Integer);'");
MakeCode(0x45B4C8);
MakeFunction(0x45B4C8, 0x45B5D5);
MakeUnkn(0x45B5D8, 1);
MakeNameEx(0x45B5D8, "TDockTree.SaveToStream", 0x20);
MakeComm(0x45B5D8, "'procedure TDockTree.SaveToStream(Stream:TStream);'");
MakeCode(0x45B5D8);
MakeCode(0x45B66C);
MakeCode(0x45B693);
MakeCode(0x45B699);
MakeCode(0x45B6C4);
MakeCode(0x45B6E2);
MakeCode(0x45B6EF);
MakeCode(0x45B6F8);
MakeCode(0x45B6FD);
MakeCode(0x45B72F);
MakeCode(0x45B738);
MakeCode(0x45B769);
MakeCode(0x45B776);
MakeCode(0x45B77F);
MakeCode(0x45B784);
MakeFunction(0x45B5D8, 0x45B78C);
MakeUnkn(0x45B78C, 1);
MakeNameEx(0x45B78C, "DoSetNewBounds", 0x20);
MakeComm(0x45B78C, "'procedure DoSetNewBounds(Zone:TDockZone);'");
MakeCode(0x45B78C);
MakeCode(0x45B7DA);
MakeCode(0x45B7EB);
MakeCode(0x45B80D);
MakeFunction(0x45B78C, 0x45B811);
MakeUnkn(0x45B814, 1);
MakeNameEx(0x45B814, "TDockTree.SetNewBounds", 0x20);
MakeComm(0x45B814, "'procedure TDockTree.SetNewBounds(Zone:TDockZone);'");
MakeCode(0x45B814);
MakeCode(0x45B828);
MakeFunction(0x45B814, 0x45B842);
MakeUnkn(0x45B844, 1);
MakeNameEx(0x45B844, "TDockTree.SetReplacingControl", 0x20);
MakeComm(0x45B844, "'procedure TDockTree.SetReplacingControl(Control:TControl);'");
MakeCode(0x45B844);
MakeFunction(0x45B844, 0x45B859);
MakeUnkn(0x45B85C, 1);
MakeNameEx(0x45B85C, "TDockTree.ShiftZone", 0x20);
MakeComm(0x45B85C, "'procedure TDockTree.ShiftZone(Zone:TDockZone);'");
MakeCode(0x45B85C);
MakeCode(0x45B88A);
MakeFunction(0x45B85C, 0x45B88D);
MakeUnkn(0x45B890, 1);
MakeNameEx(0x45B890, "TDockTree.SplitterMouseDown", 0x20);
MakeComm(0x45B890, "'procedure TDockTree.SplitterMouseDown(OnZone:TDockZone; MousePos:TPoint);'");
MakeCode(0x45B890);
MakeFunction(0x45B890, 0x45B8ED);
MakeUnkn(0x45B8F0, 1);
MakeNameEx(0x45B8F0, "TDockTree.SplitterMouseUp", 0x20);
MakeComm(0x45B8F0, "'procedure TDockTree.SplitterMouseUp;'");
MakeCode(0x45B8F0);
MakeCode(0x45B929);
MakeCode(0x45B933);
MakeCode(0x45B93D);
MakeCode(0x45B945);
MakeFunction(0x45B8F0, 0x45B96C);
MakeUnkn(0x45B96C, 1);
MakeNameEx(0x45B96C, "TDockTree.UpdateAll", 0x20);
MakeComm(0x45B96C, "'procedure TDockTree.UpdateAll;'");
MakeCode(0x45B96C);
MakeCode(0x45B990);
MakeFunction(0x45B96C, 0x45B992);
MakeUnkn(0x45B994, 1);
MakeNameEx(0x45B994, "TDockTree.UpdateZone", 0x20);
MakeComm(0x45B994, "'procedure TDockTree.UpdateZone(Zone:TDockZone);'");
MakeCode(0x45B994);
MakeFunction(0x45B994, 0x45B9A2);
MakeUnkn(0x45B9A4, 1);
MakeNameEx(0x45B9A4, "TDockTree.WindowProc", 0x20);
MakeComm(0x45B9A4, "'procedure TDockTree.WindowProc(var Message:TMessage);'");
MakeCode(0x45B9A4);
MakeFunction(0x45B9A4, 0x45B9B6);
MakeUnkn(0x45B9B8, 1);
MakeNameEx(0x45B9B8, "TDockTree.DrawSizeSplitter", 0x20);
MakeComm(0x45B9B8, "'procedure TDockTree.DrawSizeSplitter;'");
MakeCode(0x45B9B8);
MakeCode(0x45B9EC);
MakeCode(0x45BA16);
MakeCode(0x45BA20);
MakeCode(0x45BA57);
MakeCode(0x45BA9B);
MakeFunction(0x45B9B8, 0x45BAA1);
MakeUnkn(0x45BAA4, 1);
MakeNameEx(0x45BAA4, "DoGetNextLimit", 0x20);
MakeComm(0x45BAA4, "'procedure DoGetNextLimit(Zone:TDockZone);'");
MakeCode(0x45BAA4);
MakeCode(0x45BAF4);
MakeCode(0x45BB07);
MakeCode(0x45BB0D);
MakeCode(0x45BB1E);
MakeCode(0x45BB2F);
MakeFunction(0x45BAA4, 0x45BB34);
MakeUnkn(0x45BB34, 1);
MakeNameEx(0x45BB34, "TDockTree.GetNextLimit", 0x20);
MakeComm(0x45BB34, "'function TDockTree.GetNextLimit(AZone:TDockZone):Integer;'");
MakeCode(0x45BB34);
MakeCode(0x45BB57);
MakeCode(0x45BB6E);
MakeFunction(0x45BB34, 0x45BB84);
MakeUnkn(0x45BB84, 1);
MakeNameEx(0x45BB84, "GetDockAlign", 0x20);
MakeComm(0x45BB84, "'function GetDockAlign(Client:TControl; DropCtl:TControl):TAlign;'");
MakeCode(0x45BB84);
MakeCode(0x45BBC7);
MakeCode(0x45BBE3);
MakeCode(0x45BBF0);
MakeCode(0x45BBF7);
MakeFunction(0x45BB84, 0x45BC00);
MakeUnkn(0x45BC00, 1);
MakeNameEx(0x45BC00, "HideZone", 0x20);
MakeComm(0x45BC00, "'procedure HideZone(const Zone:TDockZone);'");
MakeCode(0x45BC00);
MakeCode(0x45BC23);
MakeCode(0x45BC28);
MakeCode(0x45BC47);
MakeCode(0x45BC61);
MakeFunction(0x45BC00, 0x45BC7F);
MakeUnkn(0x45BC80, 1);
MakeNameEx(0x45BC80, "ShowZone", 0x20);
MakeComm(0x45BC80, "'procedure ShowZone(const Zone:TDockZone);'");
MakeCode(0x45BC80);
MakeCode(0x45BCB2);
MakeCode(0x45BCC3);
MakeCode(0x45BCCA);
MakeCode(0x45BD16);
MakeCode(0x45BD4A);
MakeCode(0x45BD6D);
MakeCode(0x45BD8C);
MakeCode(0x45BD98);
MakeFunction(0x45BC80, 0x45BDB8);
MakeUnkn(0x45BDB8, 1);
MakeNameEx(0x45BDB8, "TDockTree.ControlVisibilityChanged", 0x20);
MakeComm(0x45BDB8, "'procedure TDockTree.ControlVisibilityChanged(Control:TControl; Visible:Boolean);'");
MakeCode(0x45BDB8);
MakeCode(0x45BDE2);
MakeCode(0x45BDE9);
MakeCode(0x45BDF9);
MakeCode(0x45BE22);
MakeCode(0x45BE24);
MakeCode(0x45BE3A);
MakeFunction(0x45BDB8, 0x45BE40);
MakeUnkn(0x45BE40, 1);
MakeNameEx(0x45BE40, "TDockTree.WndProc", 0x20);
MakeComm(0x45BE40, "'procedure TDockTree.WndProc(var Message:TMessage);'");
MakeCode(0x45BE40);
MakeCode(0x45BE81);
MakeCode(0x45BE94);
MakeCode(0x45BEDB);
MakeCode(0x45BF00);
MakeCode(0x45BF2E);
MakeCode(0x45BF5C);
MakeCode(0x45BF84);
MakeCode(0x45BFAC);
MakeCode(0x45BFD4);
MakeCode(0x45BFFC);
MakeCode(0x45C08C);
MakeCode(0x45C0AE);
MakeCode(0x45C0B3);
MakeCode(0x45C0C9);
MakeFunction(0x45BE40, 0x45C0D1);
MakeUnkn(0x45C0D8, 1);
MakeNameEx(0x45C0D8, "TDockTree.ActualSize", 0x20);
MakeComm(0x45C0D8, "'function TDockTree.ActualSize(const RelativeSize:Integer; const Reference:Integer):Integer;'");
MakeCode(0x45C0D8);
MakeFunction(0x45C0D8, 0x45C101);
MakeUnkn(0x45C108, 1);
MakeNameEx(0x45C108, "TDockTree.RelativeSize", 0x20);
MakeComm(0x45C108, "'function TDockTree.RelativeSize(const ActualSize:Integer; const Reference:Integer):Integer;'");
MakeCode(0x45C108);
MakeCode(0x45C132);
MakeCode(0x45C134);
MakeFunction(0x45C108, 0x45C139);
MakeUnkn(0x45C140, 1);
MakeNameEx(0x45C140, "TDockTree.ReferenceFromOrient", 0x20);
MakeComm(0x45C140, "'function TDockTree.ReferenceFromOrient(const Orient:TDockOrientation):Integer;'");
MakeCode(0x45C140);
MakeCode(0x45C157);
MakeFunction(0x45C140, 0x45C169);
MakeUnkn(0x45C16C, 1);
MakeNameEx(0x45C16C, "TDockTree.AdjustFrameRect", 0x20);
MakeComm(0x45C16C, "'procedure TDockTree.AdjustFrameRect(Control:TControl; var ARect:TRect);'");
MakeCode(0x45C16C);
MakeCode(0x45C1A8);
MakeFunction(0x45C16C, 0x45C1AA);
MakeUnkn(0x45C1AC, 1);
MakeNameEx(0x45C1AC, "TDockTree.MouseDown", 0x20);
MakeComm(0x45C1AC, "'procedure TDockTree.MouseDown(Button:TMouseButton; Shift:TShiftState; X:Integer; Y:Integer; var Handled:Boolean);'");
MakeCode(0x45C1AC);
MakeCode(0x45C218);
MakeCode(0x45C25F);
MakeCode(0x45C2A4);
MakeCode(0x45C2C0);
MakeCode(0x45C2C6);
MakeFunction(0x45C1AC, 0x45C2CE);
MakeUnkn(0x45C2D0, 1);
MakeNameEx(0x45C2D0, "CalcSplitterPos", 0x20);
MakeComm(0x45C2D0, "'procedure CalcSplitterPos;'");
MakeCode(0x45C2D0);
MakeCode(0x45C309);
MakeCode(0x45C325);
MakeCode(0x45C33F);
MakeCode(0x45C359);
MakeFunction(0x45C2D0, 0x45C35E);
MakeUnkn(0x45C360, 1);
MakeNameEx(0x45C360, "TDockTree.MouseMove", 0x20);
MakeComm(0x45C360, "'procedure TDockTree.MouseMove(Shift:TShiftState; X:Integer; Y:Integer; var Handled:Boolean);'");
MakeCode(0x45C360);
MakeCode(0x45C3A8);
MakeFunction(0x45C360, 0x45C3AF);
MakeUnkn(0x45C3B0, 1);
MakeNameEx(0x45C3B0, "TDockTree.MouseUp", 0x20);
MakeComm(0x45C3B0, "'procedure TDockTree.MouseUp(Button:TMouseButton; Shift:TShiftState; X:Integer; Y:Integer; var Handled:Boolean);'");
MakeCode(0x45C3B0);
MakeCode(0x45C408);
MakeCode(0x45C413);
MakeCode(0x45C41A);
MakeFunction(0x45C3B0, 0x45C422);
MakeUnkn(0x45C424, 1);
MakeNameEx(0x45C424, "TDockTree.ShowHint", 0x20);
MakeComm(0x45C424, "'procedure TDockTree.ShowHint(CursorPos:TPoint; var CursorRect:TRect; var HintStr:AnsiString);'");
MakeCode(0x45C424);
MakeCode(0x45C46E);
MakeCode(0x45C47F);
MakeCode(0x45C4EF);
MakeCode(0x45C4FC);
MakeCode(0x45C505);
MakeCode(0x45C50A);
MakeFunction(0x45C424, 0x45C515);
MakeUnkn(0x45C518, 1);
MakeNameEx(0x45C518, "TMouse.Create", 0x20);
MakeComm(0x45C518, "'constructor TMouse.Create;'");
MakeCode(0x45C518);
MakeCode(0x45C526);
MakeCode(0x45C552);
MakeCode(0x45C57A);
MakeCode(0x45C57E);
MakeCode(0x45C580);
MakeCode(0x45C5A1);
MakeFunction(0x45C518, 0x45C5A6);
MakeUnkn(0x45C5A8, 1);
MakeNameEx(0x45C5A8, "TMouse.CreatePanningWindow", 0x20);
MakeComm(0x45C5A8, "'function TMouse.CreatePanningWindow:TCustomPanningWindow;'");
MakeCode(0x45C5A8);
MakeCode(0x45C5CF);
MakeFunction(0x45C5A8, 0x45C5D1);
MakeUnkn(0x45C5D4, 1);
MakeNameEx(0x45C5D4, "TMouse.Destroy", 0x20);
MakeComm(0x45C5D4, "'destructor TMouse.Destroy;'");
MakeCode(0x45C5D4);
MakeCode(0x45C5FF);
MakeFunction(0x45C5D4, 0x45C602);
MakeUnkn(0x45C604, 1);
MakeNameEx(0x45C604, "TMouse.GetCapture", 0x20);
MakeComm(0x45C604, "'function TMouse.GetCapture:HWND;'");
MakeCode(0x45C604);
MakeFunction(0x45C604, 0x45C60A);
MakeUnkn(0x45C60C, 1);
MakeNameEx(0x45C60C, "TMouse.GetCursorPos", 0x20);
MakeComm(0x45C60C, "'function TMouse.GetCursorPos:TPoint;'");
MakeCode(0x45C60C);
MakeFunction(0x45C60C, 0x45C61C);
MakeUnkn(0x45C61C, 1);
MakeNameEx(0x45C61C, "TMouse.GetIsDragging", 0x20);
MakeComm(0x45C61C, "'function TMouse.GetIsDragging:Boolean;'");
MakeCode(0x45C61C);
MakeFunction(0x45C61C, 0x45C627);
MakeUnkn(0x45C628, 1);
MakeNameEx(0x45C628, "TMouse.GetIsPanning", 0x20);
MakeComm(0x45C628, "'function TMouse.GetIsPanning:Boolean;'");
MakeCode(0x45C628);
MakeCode(0x45C641);
MakeCode(0x45C646);
MakeFunction(0x45C628, 0x45C64B);
MakeUnkn(0x45C64C, 1);
MakeNameEx(0x45C64C, "TMouse.GetMouseData", 0x20);
MakeComm(0x45C64C, "'procedure TMouse.GetMouseData;'");
MakeCode(0x45C64C);
MakeFunction(0x45C64C, 0x45C665);
MakeUnkn(0x45C668, 1);
MakeNameEx(0x45C668, "TMouse.GetNativeData", 0x20);
MakeComm(0x45C668, "'procedure TMouse.GetNativeData;'");
MakeCode(0x45C668);
MakeCode(0x45C693);
MakeFunction(0x45C668, 0x45C696);
MakeUnkn(0x45C698, 1);
MakeNameEx(0x45C698, "TMouse.GetRegisteredData", 0x20);
MakeComm(0x45C698, "'procedure TMouse.GetRegisteredData;'");
MakeCode(0x45C698);
MakeFunction(0x45C698, 0x45C6BF);
MakeUnkn(0x45C6C0, 1);
MakeNameEx(0x45C6C0, "TMouse.SetCapture", 0x20);
MakeComm(0x45C6C0, "'procedure TMouse.SetCapture(const Value:HWND);'");
MakeCode(0x45C6C0);
MakeCode(0x45C6DC);
MakeCode(0x45C6E2);
MakeFunction(0x45C6C0, 0x45C6E5);
MakeUnkn(0x45C6E8, 1);
MakeNameEx(0x45C6E8, "TMouse.SetPanningWindow", 0x20);
MakeComm(0x45C6E8, "'procedure TMouse.SetPanningWindow(const Value:TCustomPanningWindow);'");
MakeCode(0x45C6E8);
MakeCode(0x45C701);
MakeCode(0x45C704);
MakeFunction(0x45C6E8, 0x45C707);
MakeUnkn(0x45C708, 1);
MakeNameEx(0x45C708, "TMouse.SettingChanged", 0x20);
MakeComm(0x45C708, "'procedure TMouse.SettingChanged(Setting:Integer);'");
MakeCode(0x45C708);
MakeCode(0x45C717);
MakeCode(0x45C72D);
MakeCode(0x45C736);
MakeCode(0x45C753);
MakeCode(0x45C767);
MakeFunction(0x45C708, 0x45C769);
MakeUnkn(0x45C76C, 1);
MakeNameEx(0x45C76C, "InitIMM32", 0x20);
MakeComm(0x45C76C, "'procedure InitIMM32;'");
MakeCode(0x45C76C);
MakeCode(0x45C7C0);
MakeCode(0x45C8BB);
MakeCode(0x45C8C8);
MakeCode(0x45C8D2);
MakeCode(0x45C8D7);
MakeCode(0x45C8D9);
MakeFunction(0x45C76C, 0x45C8DD);
MakeUnkn(0x45C9D4, 1);
MakeNameEx(0x45C9D4, "Win32NLSEnableIME", 0x20);
MakeComm(0x45C9D4, "'function Win32NLSEnableIME(hWnd:HWND; Enable:Boolean):Boolean;'");
MakeCode(0x45C9D4);
MakeCode(0x45C9EC);
MakeFunction(0x45C9D4, 0x45C9EF);
MakeUnkn(0x45C9F0, 1);
MakeNameEx(0x45C9F0, "SetImeMode", 0x20);
MakeComm(0x45C9F0, "'procedure SetImeMode(hWnd:HWND; Mode:TImeMode);'");
MakeCode(0x45C9F0);
MakeCode(0x45CA24);
MakeCode(0x45CA64);
MakeCode(0x45CA6F);
MakeCode(0x45CA7A);
MakeCode(0x45CAA9);
MakeCode(0x45CAC2);
MakeFunction(0x45C9F0, 0x45CAC8);
MakeUnkn(0x45CAC8, 1);
MakeNameEx(0x45CAC8, "Imm32IsIME", 0x20);
MakeComm(0x45CAC8, "'function Imm32IsIME(hKl:HKL):Boolean;'");
MakeCode(0x45CAC8);
MakeCode(0x45CAD9);
MakeFunction(0x45CAC8, 0x45CADC);
MakeUnkn(0x45CADC, 1);
MakeNameEx(0x45CADC, "DoneControls", 0x20);
MakeComm(0x45CADC, "'procedure DoneControls;'");
MakeCode(0x45CADC);
MakeFunction(0x45CADC, 0x45CB64);
MakeUnkn(0x45CB64, 1);
MakeNameEx(0x45CB64, "InitControls", 0x20);
MakeComm(0x45CB64, "'procedure InitControls;'");
MakeCode(0x45CB64);
MakeCode(0x45CCBE);
MakeCode(0x45CCCB);
MakeCode(0x45CCDC);
MakeCode(0x45CCE1);
MakeFunction(0x45CB64, 0x45CCE8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x45CCF0, -1);
MakeDword(0x45CCEC);
MakeDword(0x45CCE8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x45CD04, -1);
MakeDword(0x45CD00);
MakeDword(0x45CCFC);
MakeUnkn(0x45CD30, 1);
MakeNameEx(0x45CD30, "TCustomListControl.MoveSelection", 0x20);
MakeComm(0x45CD30, "'procedure TCustomListControl.MoveSelection(Destination:TCustomListControl);'");
MakeCode(0x45CD30);
MakeFunction(0x45CD30, 0x45CD49);
MakeUnkn(0x45CD4C, 1);
MakeNameEx(0x45CD4C, "TMargins.Create", 0x20);
MakeComm(0x45CD4C, "'constructor TMargins.Create(Control:TControl);'");
MakeCode(0x45CD4C);
MakeCode(0x45CD5B);
MakeCode(0x45CD89);
MakeFunction(0x45CD4C, 0x45CD8F);
MakeUnkn(0x45CD90, 1);
MakeNameEx(0x45CD90, "TMargins.AssignTo", 0x20);
MakeComm(0x45CD90, "'procedure TMargins.AssignTo(Dest:TPersistent);'");
MakeCode(0x45CD90);
MakeCode(0x45CDC9);
MakeFunction(0x45CD90, 0x45CDD5);
MakeUnkn(0x45CDD8, 1);
MakeNameEx(0x45CDD8, "TSizeConstraints.Change", 0x20);
MakeComm(0x45CDD8, "'procedure TSizeConstraints.Change;'");
MakeCode(0x45CDD8);
MakeCode(0x45CDEA);
MakeFunction(0x45CDD8, 0x45CDEC);
MakeUnkn(0x45CDEC, 1);
MakeNameEx(0x45CDEC, "TMargins.InitDefaults", 0x20);
MakeComm(0x45CDEC, "'procedure TMargins.InitDefaults(Margins:TMargins);'");
MakeCode(0x45CDEC);
MakeFunction(0x45CDEC, 0x45CE09);
MakeUnkn(0x45CE0C, 1);
MakeNameEx(0x45CE0C, "TMargins.SetMargin", 0x20);
MakeComm(0x45CE0C, "'procedure TMargins.SetMargin(Index:Integer; Value:TMarginSize);'");
MakeCode(0x45CE0C);
MakeCode(0x45CE1E);
MakeCode(0x45CE2F);
MakeCode(0x45CE40);
MakeCode(0x45CE51);
MakeCode(0x45CE60);
MakeFunction(0x45CE0C, 0x45CE62);
MakeUnkn(0x45CE64, 1);
MakeNameEx(0x45CE64, "TMargins.SetControlBounds", 0x20);
MakeComm(0x45CE64, "'procedure TMargins.SetControlBounds(ALeft:Integer; ATop:Integer; AWidth:Integer; AHeight:Integer; Aligning:Boolean);'");
MakeCode(0x45CE64);
MakeCode(0x45CE93);
MakeCode(0x45CEFE);
MakeCode(0x45CF18);
MakeCode(0x45CF25);
MakeCode(0x45CF3E);
MakeCode(0x45CF3F);
MakeCode(0x45CF44);
MakeCode(0x45CF46);
MakeFunction(0x45CE64, 0x45CF4E);
MakeUnkn(0x45CF50, 1);
MakeNameEx(0x45CF50, "TMargins.GetControlBound", 0x20);
MakeComm(0x45CF50, "'function TMargins.GetControlBound(Index:Integer):Integer;'");
MakeCode(0x45CF50);
MakeCode(0x45CF8F);
MakeCode(0x45CFB2);
MakeCode(0x45CFBD);
MakeCode(0x45CFE0);
MakeCode(0x45CFEB);
MakeCode(0x45D011);
MakeCode(0x45D01C);
MakeCode(0x45D042);
MakeCode(0x45D04D);
MakeCode(0x45D073);
MakeCode(0x45D081);
MakeCode(0x45D0A4);
MakeCode(0x45D0AF);
MakeCode(0x45D0D5);
MakeCode(0x45D0E0);
MakeCode(0x45D106);
MakeCode(0x45D10F);
MakeFunction(0x45CF50, 0x45D111);
MakeUnkn(0x45D114, 1);
MakeNameEx(0x45D114, "TPadding.InitDefaults", 0x20);
MakeComm(0x45D114, "'procedure TPadding.InitDefaults(Margins:TMargins);'");
MakeCode(0x45D114);
MakeFunction(0x45D114, 0x45D115);
MakeUnkn(0x45D118, 1);
MakeNameEx(0x45D118, "Finalization_5", 0x20);
MakeComm(0x45D118, "'procedure Finalization;'");
MakeCode(0x45D118);
MakeCode(0x45D169);
MakeCode(0x45D176);
MakeCode(0x45D177);
MakeCode(0x45D17C);
MakeFunction(0x45D118, 0x45D180);
MakeUnkn(0x45D180, 1);
MakeNameEx(0x45D180, "VMT_45D180_TChangeLink", 0);
MakeDword(0x45D180);
MakeDword(0x45D184);
MakeDword(0x45D188);
MakeDword(0x45D18C);
MakeDword(0x45D190);
MakeDword(0x45D194);
MakeDword(0x45D198);
MakeDword(0x45D19C);
MakeUnkn(0x45D1CC, 1);
MakeNameEx(0x45D1CC, "TChangeLink_DynamicTable", 0);
MakeWord(0x45D1CC);
MakeWord(0x45D1CE);
MakeDword(0x45D1D0);
MakeDword(0x45D1A0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45D1D4, 0x45D1E0);
MakeDword(0x45D1A4);
MakeDword(0x45D1A8);
MakeDword(0x45D1AC);
MakeDword(0x45D1B0);
MakeDword(0x45D1B4);
MakeDword(0x45D1B8);
MakeDword(0x45D1BC);
MakeDword(0x45D1C0);
MakeDword(0x45D1C4);
MakeDword(0x45D1C8);
MakeUnkn(0x45D1E0, 1);
MakeNameEx(0x45D1E0, "RTTI_45D1E0_Enumeration_TDrawingStyle", 0);
MakeDword(0x45D1E0);
MakeUnkn(0x45D1E4, 1);
MakeNameEx(0x45D1E4, "", 0);
MakeByte(0x45D1E4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45D1E5, 0x45D1F3);
MakeByte(0x45D1F3);
MakeDword(0x45D1F4);
MakeDword(0x45D1F8);
MakeDword(0x45D1FC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45D200, 0x45D208);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45D208, 0x45D213);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45D213, 0x45D21C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45D21C, 0x45D22A);
MakeUnkn(0x45D234, 1);
MakeNameEx(0x45D234, "RTTI_45D234_Enumeration_TImageType", 0);
MakeDword(0x45D234);
MakeUnkn(0x45D238, 1);
MakeNameEx(0x45D238, "", 0);
MakeByte(0x45D238);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45D239, 0x45D244);
MakeByte(0x45D244);
MakeDword(0x45D245);
MakeDword(0x45D249);
MakeDword(0x45D24D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45D251, 0x45D259);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45D259, 0x45D260);
MakeUnkn(0x45D268, 1);
MakeNameEx(0x45D268, "RTTI_45D268_Integer_TImageIndex", 0);
MakeDword(0x45D268);
MakeUnkn(0x45D26C, 1);
MakeNameEx(0x45D26C, "", 0);
MakeByte(0x45D26C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45D26D, 0x45D279);
MakeByte(0x45D279);
MakeDword(0x45D27A);
MakeDword(0x45D27E);
MakeUnkn(0x45D284, 1);
MakeNameEx(0x45D284, "VMT_45D284_TCustomImageList", 0);
MakeDword(0x45D284);
MakeDword(0x45D288);
MakeDword(0x45D28C);
MakeDword(0x45D290);
MakeDword(0x45D294);
MakeDword(0x45D298);
MakeDword(0x45D29C);
MakeDword(0x45D2A0);
MakeUnkn(0x45D314, 1);
MakeNameEx(0x45D314, "TCustomImageList_DynamicTable", 0);
MakeWord(0x45D314);
MakeWord(0x45D316);
MakeDword(0x45D318);
MakeDword(0x45D2A4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45D31C, 0x45D32D);
MakeDword(0x45D2A8);
MakeDword(0x45D2AC);
MakeDword(0x45D2B0);
MakeDword(0x45D2B4);
MakeDword(0x45D2B8);
MakeDword(0x45D2BC);
MakeDword(0x45D2C0);
MakeDword(0x45D2C4);
MakeDword(0x45D2C8);
MakeDword(0x45D2CC);
MakeComm(0x45D2D0, "'+0'");
MakeDword(0x45D2D0);
MakeComm(0x45D2D4, "'+4'");
MakeDword(0x45D2D4);
MakeComm(0x45D2D8, "'+8'");
MakeDword(0x45D2D8);
MakeComm(0x45D2DC, "'+C'");
MakeDword(0x45D2DC);
MakeComm(0x45D2E0, "'+10'");
MakeDword(0x45D2E0);
MakeComm(0x45D2E4, "'+14'");
MakeDword(0x45D2E4);
MakeComm(0x45D2E8, "'+18'");
MakeDword(0x45D2E8);
MakeComm(0x45D2EC, "'+1C'");
MakeDword(0x45D2EC);
MakeComm(0x45D2F0, "'+20'");
MakeDword(0x45D2F0);
MakeComm(0x45D2F4, "'+24'");
MakeDword(0x45D2F4);
MakeComm(0x45D2F8, "'+28'");
MakeDword(0x45D2F8);
MakeComm(0x45D2FC, "'+2C'");
MakeDword(0x45D2FC);
MakeComm(0x45D300, "'+30'");
MakeDword(0x45D300);
MakeComm(0x45D304, "'+34'");
MakeDword(0x45D304);
MakeComm(0x45D308, "'+38'");
MakeDword(0x45D308);
MakeComm(0x45D30C, "'+3C'");
MakeDword(0x45D30C);
MakeComm(0x45D310, "'+40'");
MakeDword(0x45D310);
MakeUnkn(0x45D330, 1);
MakeNameEx(0x45D330, "RTTI_45D330_Class_TCustomImageList", 0);
MakeDword(0x45D330);
MakeUnkn(0x45D334, 1);
MakeNameEx(0x45D334, "", 0);
MakeByte(0x45D334);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45D335, 0x45D346);
MakeDword(0x45D346);
MakeDword(0x45D34A);
MakeWord(0x45D34E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45D350, 0x45D358);
MakeWord(0x45D358);
MakeUnkn(0x45D35C, 1);
MakeNameEx(0x45D35C, "GetRGBColor", 0x20);
MakeComm(0x45D35C, "'function GetRGBColor(Value:TColor):DWORD;'");
MakeCode(0x45D35C);
MakeCode(0x45D370);
MakeCode(0x45D374);
MakeFunction(0x45D35C, 0x45D37A);
MakeUnkn(0x45D37C, 1);
MakeNameEx(0x45D37C, "GetColor", 0x20);
MakeComm(0x45D37C, "'function GetColor(Value:DWORD):TColor;'");
MakeCode(0x45D37C);
MakeCode(0x45D394);
MakeFunction(0x45D37C, 0x45D39A);
MakeUnkn(0x45D39C, 1);
MakeNameEx(0x45D39C, "TCustomImageList.Create", 0x20);
MakeComm(0x45D39C, "'constructor TCustomImageList.Create(AOwner:TComponent);'");
MakeCode(0x45D39C);
MakeCode(0x45D3AA);
MakeCode(0x45D3E1);
MakeFunction(0x45D39C, 0x45D3E6);
MakeUnkn(0x45D3E8, 1);
MakeNameEx(0x45D3E8, "TCustomImageList.Destroy", 0x20);
MakeComm(0x45D3E8, "'destructor TCustomImageList.Destroy;'");
MakeCode(0x45D3E8);
MakeCode(0x45D3F6);
MakeCode(0x45D406);
MakeCode(0x45D437);
MakeCode(0x45D44E);
MakeFunction(0x45D3E8, 0x45D452);
MakeUnkn(0x45D454, 1);
MakeNameEx(0x45D454, "TCustomImageList.Initialize", 0x20);
MakeComm(0x45D454, "'procedure TCustomImageList.Initialize;'");
MakeCode(0x45D454);
MakeCode(0x45D48E);
MakeCode(0x45D4AF);
MakeCode(0x45D4EB);
MakeCode(0x45D4F8);
MakeCode(0x45D501);
MakeCode(0x45D506);
MakeFunction(0x45D454, 0x45D50C);
MakeUnkn(0x45D50C, 1);
MakeNameEx(0x45D50C, "TCustomImageList.HandleAllocated", 0x20);
MakeComm(0x45D50C, "'function TCustomImageList.HandleAllocated:Boolean;'");
MakeCode(0x45D50C);
MakeFunction(0x45D50C, 0x45D514);
MakeUnkn(0x45D514, 1);
MakeNameEx(0x45D514, "TCustomImageList.HandleNeeded", 0x20);
MakeComm(0x45D514, "'procedure TCustomImageList.HandleNeeded;'");
MakeCode(0x45D514);
MakeFunction(0x45D514, 0x45D520);
MakeUnkn(0x45D520, 1);
MakeNameEx(0x45D520, "TCustomImageList.InitBitmap", 0x20);
MakeComm(0x45D520, "'procedure TCustomImageList.InitBitmap;'");
MakeCode(0x45D520);
MakeCode(0x45D5A8);
MakeCode(0x45D5B5);
MakeCode(0x45D5C1);
MakeCode(0x45D5C6);
MakeCode(0x45D5DF);
MakeFunction(0x45D520, 0x45D5E4);
MakeUnkn(0x45D5E4, 1);
MakeNameEx(0x45D5E4, "TCustomImageList.SetNewDimensions", 0x20);
MakeComm(0x45D5E4, "'procedure TCustomImageList.SetNewDimensions(Value:HIMAGELIST);'");
MakeCode(0x45D5E4);
MakeFunction(0x45D5E4, 0x45D61B);
MakeUnkn(0x45D61C, 1);
MakeNameEx(0x45D61C, "TCustomImageList.SetWidth", 0x20);
MakeComm(0x45D61C, "'procedure TCustomImageList.SetWidth(Value:Integer);'");
MakeCode(0x45D61C);
MakeCode(0x45D643);
MakeCode(0x45D65C);
MakeFunction(0x45D61C, 0x45D65E);
MakeUnkn(0x45D660, 1);
MakeNameEx(0x45D660, "TCustomImageList.SetHeight", 0x20);
MakeComm(0x45D660, "'procedure TCustomImageList.SetHeight(Value:Integer);'");
MakeCode(0x45D660);
MakeCode(0x45D687);
MakeCode(0x45D6A0);
MakeFunction(0x45D660, 0x45D6A2);
MakeUnkn(0x45D6A4, 1);
MakeNameEx(0x45D6A4, "TCustomImageList.SetHandle", 0x20);
MakeComm(0x45D6A4, "'procedure TCustomImageList.SetHandle(Value:HIMAGELIST);'");
MakeCode(0x45D6A4);
MakeCode(0x45D6CC);
MakeFunction(0x45D6A4, 0x45D6CF);
MakeUnkn(0x45D6D0, 1);
MakeNameEx(0x45D6D0, "TCustomImageList.GetHandle", 0x20);
MakeComm(0x45D6D0, "'function TCustomImageList.GetHandle:HIMAGELIST;'");
MakeCode(0x45D6D0);
MakeFunction(0x45D6D0, 0x45D6DF);
MakeUnkn(0x45D6E0, 1);
MakeNameEx(0x45D6E0, "TCustomImageList.GetImageHandle", 0x20);
MakeComm(0x45D6E0, "'function TCustomImageList.GetImageHandle(Image:TBitmap; ImageDDB:TBitmap):HBITMAP;'");
MakeCode(0x45D6E0);
MakeCode(0x45D70A);
MakeCode(0x45D725);
MakeCode(0x45D72D);
MakeFunction(0x45D6E0, 0x45D731);
MakeUnkn(0x45D734, 1);
MakeNameEx(0x45D734, "TCustomImageList.FreeHandle", 0x20);
MakeComm(0x45D734, "'procedure TCustomImageList.FreeHandle;'");
MakeCode(0x45D734);
MakeCode(0x45D756);
MakeFunction(0x45D734, 0x45D769);
MakeUnkn(0x45D76C, 1);
MakeNameEx(0x45D76C, "TCustomImageList.CreateImageList", 0x20);
MakeComm(0x45D76C, "'procedure TCustomImageList.CreateImageList;'");
MakeCode(0x45D76C);
MakeCode(0x45D7D5);
MakeCode(0x45D7E8);
MakeCode(0x45D7F5);
MakeCode(0x45D7FE);
MakeCode(0x45D803);
MakeFunction(0x45D76C, 0x45D80A);
MakeUnkn(0x45D80C, 1);
MakeNameEx(0x45D80C, "TCustomImageList.Add", 0x20);
MakeComm(0x45D80C, "'function TCustomImageList.Add(Image:TBitmap; Mask:TBitmap):Integer;'");
MakeCode(0x45D80C);
MakeCode(0x45D888);
MakeCode(0x45D895);
MakeCode(0x45D89E);
MakeCode(0x45D8A3);
MakeCode(0x45D8A5);
MakeCode(0x45D8B2);
MakeCode(0x45D8BB);
MakeCode(0x45D8C0);
MakeFunction(0x45D80C, 0x45D8D7);
MakeUnkn(0x45D8D8, 1);
MakeNameEx(0x45D8D8, "TCustomImageList.GetCount", 0x20);
MakeComm(0x45D8D8, "'function TCustomImageList.GetCount:Integer;'");
MakeCode(0x45D8D8);
MakeCode(0x45D8F5);
MakeFunction(0x45D8D8, 0x45D8F9);
MakeUnkn(0x45D8FC, 1);
MakeNameEx(0x45D8FC, "TCustomImageList.Delete", 0x20);
MakeComm(0x45D8FC, "'procedure TCustomImageList.Delete(Index:Integer);'");
MakeCode(0x45D8FC);
MakeCode(0x45D941);
MakeCode(0x45D95A);
MakeCode(0x45D965);
MakeCode(0x45D972);
MakeCode(0x45D97B);
MakeCode(0x45D980);
MakeFunction(0x45D8FC, 0x45D987);
MakeUnkn(0x45D988, 1);
MakeNameEx(0x45D988, "TCustomImageList.Clear", 0x20);
MakeComm(0x45D988, "'procedure TCustomImageList.Clear;'");
MakeCode(0x45D988);
MakeFunction(0x45D988, 0x45D991);
MakeUnkn(0x45D994, 1);
MakeNameEx(0x45D994, "TCustomImageList.SetBkColor", 0x20);
MakeComm(0x45D994, "'procedure TCustomImageList.SetBkColor(Value:TColor);'");
MakeCode(0x45D994);
MakeCode(0x45D9B8);
MakeCode(0x45D9BB);
MakeFunction(0x45D994, 0x45D9C9);
MakeUnkn(0x45D9CC, 1);
MakeNameEx(0x45D9CC, "TCustomImageList.GetBkColor", 0x20);
MakeComm(0x45D9CC, "'function TCustomImageList.GetBkColor:TColor;'");
MakeCode(0x45D9CC);
MakeCode(0x45D9EE);
MakeFunction(0x45D9CC, 0x45D9F3);
MakeCode(0x45D9F4);
MakeComm(0x45DA1D, "'TCustomImageList.FBlendColor:TColor'");
MakeComm(0x45DA5D, "'TCustomImageList.FMonoBitmap:TBitmap'");
MakeCode(0x45DA5D);
MakeComm(0x45DA6A, "'TBitmap.Create'");
MakeComm(0x45DA71, "'TCustomImageList.FMonoBitmap:TBitmap'");
MakeComm(0x45DA7D, "'TCustomImageList.FWidth:Integer'");
MakeComm(0x45DA84, "'TBitmap.SetWidth'");
MakeComm(0x45DA87, "'TCustomImageList.FHeight:Integer'");
MakeComm(0x45DA8E, "'TBitmap.SetHeight'");
MakeComm(0x45DA91, "'TCustomImageList.FMonoBitmap:TBitmap'");
MakeCode(0x45DA91);
MakeComm(0x45DA99, "'TCanvas.Brush:TBrush'");
MakeComm(0x45DAA6, "'TCustomImageList.FHeight:Integer'");
MakeComm(0x45DAAE, "'TCustomImageList.FWidth:Integer'");
MakeComm(0x45DABE, "'TCustomImageList.FMonoBitmap:TBitmap'");
MakeComm(0x45DADA, "'TCustomImageList.FMonoBitmap:TBitmap'");
MakeComm(0x45DAFC, "'TCustomImageList.FHeight:Integer'");
MakeComm(0x45DB07, "'TCustomImageList.FWidth:Integer'");
MakeComm(0x45DB15, "'TCustomImageList.FMonoBitmap:TBitmap'");
MakeComm(0x45DB5B, "'TCustomImageList.FHeight:Integer'");
MakeComm(0x45DB5F, "'TCustomImageList.FWidth:Integer'");
MakeComm(0x45DBA9, "'TCustomImageList.FHeight:Integer'");
MakeComm(0x45DBAD, "'TCustomImageList.FWidth:Integer'");
MakeCode(0x45DBBF);
MakeFunction(0x45D9F4, 0x45DBC8);
MakeUnkn(0x45DBC8, 1);
MakeNameEx(0x45DBC8, "TCustomImageList.Draw", 0x20);
MakeComm(0x45DBC8, "'procedure TCustomImageList.Draw(Canvas:TCanvas; X:Integer; Y:Integer; Index:Integer; Enabled:Boolean);'");
MakeCode(0x45DBC8);
MakeFunction(0x45DBC8, 0x45DBED);
MakeUnkn(0x45DBF0, 1);
MakeNameEx(0x45DBF0, "TCustomImageList.Draw_0", 0x20);
MakeComm(0x45DBF0, "'procedure TCustomImageList.Draw(Canvas:TCanvas; X:Integer; Y:Integer; Index:Integer; ADrawingStyle:TDrawingStyle; AImageType:TImageType; Enabled:Boolean);'");
MakeCode(0x45DBF0);
MakeCode(0x45DC34);
MakeFunction(0x45DBF0, 0x45DC3B);
MakeUnkn(0x45DC3C, 1);
MakeNameEx(0x45DC3C, "TCustomImageList.CopyImages", 0x20);
MakeComm(0x45DC3C, "'procedure TCustomImageList.CopyImages(Value:HIMAGELIST; Index:Integer);'");
MakeCode(0x45DC3C);
MakeCode(0x45DD0C);
MakeCode(0x45DD15);
MakeCode(0x45DD81);
MakeCode(0x45DD85);
MakeCode(0x45DD92);
MakeCode(0x45DD9B);
MakeCode(0x45DDA0);
MakeCode(0x45DDA2);
MakeCode(0x45DDAF);
MakeCode(0x45DDB8);
MakeCode(0x45DDBD);
MakeCode(0x45DDBF);
MakeCode(0x45DDCC);
MakeCode(0x45DDD5);
MakeCode(0x45DDDA);
MakeFunction(0x45DC3C, 0x45DDE3);
MakeUnkn(0x45DDE4, 1);
MakeNameEx(0x45DDE4, "TCustomImageList.AddImages", 0x20);
MakeComm(0x45DDE4, "'procedure TCustomImageList.AddImages(Value:TCustomImageList);'");
MakeCode(0x45DDE4);
MakeCode(0x45DE01);
MakeFunction(0x45DDE4, 0x45DE04);
MakeUnkn(0x45DE04, 1);
MakeNameEx(0x45DE04, "TCustomImageList.Assign", 0x20);
MakeComm(0x45DE04, "'procedure TCustomImageList.Assign(Source:TPersistent);'");
MakeCode(0x45DE04);
MakeCode(0x45DE18);
MakeCode(0x45DE78);
MakeCode(0x45DE8D);
MakeCode(0x45DEB9);
MakeCode(0x45DEC2);
MakeFunction(0x45DE04, 0x45DEC5);
MakeUnkn(0x45DEC8, 1);
MakeNameEx(0x45DEC8, "TCustomImageList.AssignTo", 0x20);
MakeComm(0x45DEC8, "'procedure TCustomImageList.AssignTo(Dest:TPersistent);'");
MakeCode(0x45DEC8);
MakeCode(0x45DF34);
MakeCode(0x45DF49);
MakeCode(0x45DF70);
MakeFunction(0x45DEC8, 0x45DF7C);
MakeUnkn(0x45DF7C, 1);
MakeNameEx(0x45DF7C, "TCustomImageList.CheckImage", 0x20);
MakeComm(0x45DF7C, "'procedure TCustomImageList.CheckImage(Image:TGraphic);'");
MakeCode(0x45DF7C);
MakeCode(0x45DFB1);
MakeCode(0x45DFD2);
MakeCode(0x45DFDF);
MakeCode(0x45DFE8);
MakeCode(0x45DFED);
MakeFunction(0x45DF7C, 0x45DFF4);
MakeUnkn(0x45DFF4, 1);
MakeNameEx(0x45DFF4, "TCustomImageList.SetDrawingStyle", 0x20);
MakeComm(0x45DFF4, "'procedure TCustomImageList.SetDrawingStyle(Value:TDrawingStyle);'");
MakeCode(0x45DFF4);
MakeCode(0x45E00A);
MakeFunction(0x45DFF4, 0x45E00C);
MakeUnkn(0x45E00C, 1);
MakeNameEx(0x45E00C, "TCustomImageList.GetHotSpot", 0x20);
MakeComm(0x45E00C, "'function TCustomImageList.GetHotSpot:TPoint;'");
MakeCode(0x45E00C);
MakeFunction(0x45E00C, 0x45E01C);
MakeUnkn(0x45E01C, 1);
MakeNameEx(0x45E01C, "TCustomImageList.Change", 0x20);
MakeComm(0x45E01C, "'procedure TCustomImageList.Change;'");
MakeCode(0x45E01C);
MakeCode(0x45E03E);
MakeCode(0x45E055);
MakeCode(0x45E064);
MakeFunction(0x45E01C, 0x45E069);
MakeUnkn(0x45E06C, 1);
MakeNameEx(0x45E06C, "TCustomImageList.UnRegisterChanges", 0x20);
MakeComm(0x45E06C, "'procedure TCustomImageList.UnRegisterChanges(Value:TChangeLink);'");
MakeCode(0x45E06C);
MakeCode(0x45E086);
MakeCode(0x45E0A5);
MakeCode(0x45E0A9);
MakeFunction(0x45E06C, 0x45E0AE);
MakeUnkn(0x45E0B0, 1);
MakeNameEx(0x45E0B0, "TCustomImageList.RegisterChanges", 0x20);
MakeComm(0x45E0B0, "'procedure TCustomImageList.RegisterChanges(Value:TChangeLink);'");
MakeCode(0x45E0B0);
MakeFunction(0x45E0B0, 0x45E0C2);
MakeUnkn(0x45E0C4, 1);
MakeNameEx(0x45E0C4, "StreamsEqual", 0x20);
MakeComm(0x45E0C4, "'function StreamsEqual(S1:TMemoryStream; S2:TMemoryStream):Boolean;'");
MakeCode(0x45E0C4);
MakeCode(0x45E0E1);
MakeCode(0x45E0FC);
MakeCode(0x45E101);
MakeFunction(0x45E0C4, 0x45E106);
MakeUnkn(0x45E108, 1);
MakeNameEx(0x45E108, "TCustomImageList.Equal", 0x20);
MakeComm(0x45E108, "'function TCustomImageList.Equal(IL:TCustomImageList):Boolean;'");
MakeCode(0x45E108);
MakeCode(0x45E12D);
MakeCode(0x45E136);
MakeCode(0x45E155);
MakeCode(0x45E1B1);
MakeCode(0x45E1BE);
MakeCode(0x45E1C7);
MakeCode(0x45E1CC);
MakeCode(0x45E1CE);
MakeCode(0x45E1DB);
MakeCode(0x45E1E4);
MakeCode(0x45E1E9);
MakeCode(0x45E1EB);
MakeFunction(0x45E108, 0x45E1F6);
MakeUnkn(0x45E1F8, 1);
MakeNameEx(0x45E1F8, "DoWrite_2", 0x20);
MakeComm(0x45E1F8, "'function DoWrite:Boolean;'");
MakeCode(0x45E1F8);
MakeCode(0x45E23A);
MakeCode(0x45E23F);
MakeCode(0x45E24F);
MakeFunction(0x45E1F8, 0x45E252);
MakeUnkn(0x45E254, 1);
MakeNameEx(0x45E254, "TCustomImageList.DefineProperties", 0x20);
MakeComm(0x45E254, "'procedure TCustomImageList.DefineProperties(Filer:TFiler);'");
MakeCode(0x45E254);
MakeFunction(0x45E254, 0x45E29B);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x45E2A4, -1);
MakeDword(0x45E2A0);
MakeDword(0x45E29C);
MakeUnkn(0x45E2AC, 1);
MakeNameEx(0x45E2AC, "TCustomImageList.ReadD2Stream", 0x20);
MakeComm(0x45E2AC, "'procedure TCustomImageList.ReadD2Stream(Stream:TStream);'");
MakeCode(0x45E2AC);
MakeCode(0x45E3EE);
MakeCode(0x45E417);
MakeCode(0x45E4C6);
MakeCode(0x45E4D0);
MakeCode(0x45E4DD);
MakeCode(0x45E4F6);
MakeCode(0x45E4FB);
MakeCode(0x45E4FD);
MakeCode(0x45E50A);
MakeCode(0x45E513);
MakeCode(0x45E518);
MakeCode(0x45E51A);
MakeCode(0x45E527);
MakeCode(0x45E530);
MakeCode(0x45E535);
MakeFunction(0x45E2AC, 0x45E53E);
MakeUnkn(0x45E540, 1);
MakeNameEx(0x45E540, "TCustomImageList.ReadD3Stream", 0x20);
MakeComm(0x45E540, "'procedure TCustomImageList.ReadD3Stream(Stream:TStream);'");
MakeCode(0x45E540);
MakeCode(0x45E57A);
MakeCode(0x45E58A);
MakeCode(0x45E597);
MakeCode(0x45E5A0);
MakeCode(0x45E5A5);
MakeCode(0x45E658);
MakeCode(0x45E694);
MakeCode(0x45E6A4);
MakeCode(0x45E6B1);
MakeCode(0x45E6BA);
MakeCode(0x45E6BF);
MakeCode(0x45E6C1);
MakeCode(0x45E6CE);
MakeCode(0x45E6D7);
MakeCode(0x45E6DC);
MakeCode(0x45E701);
MakeFunction(0x45E540, 0x45E707);
MakeUnkn(0x45E708, 1);
MakeNameEx(0x45E708, "TCustomImageList.ReadData", 0x20);
MakeComm(0x45E708, "'procedure TCustomImageList.ReadData(Stream:TStream);'");
MakeCode(0x45E708);
MakeCode(0x45E783);
MakeCode(0x45E78C);
MakeFunction(0x45E708, 0x45E793);
MakeUnkn(0x45E794, 1);
MakeNameEx(0x45E794, "TCustomImageList.WriteData", 0x20);
MakeComm(0x45E794, "'procedure TCustomImageList.WriteData(Stream:TStream);'");
MakeCode(0x45E794);
MakeCode(0x45E7E3);
MakeCode(0x45E817);
MakeCode(0x45E845);
MakeCode(0x45E84F);
MakeCode(0x45E878);
MakeCode(0x45E885);
MakeCode(0x45E88E);
MakeCode(0x45E893);
MakeFunction(0x45E794, 0x45E89B);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x45E8A4, -1);
MakeDword(0x45E8A0);
MakeDword(0x45E89C);
MakeUnkn(0x45E8D8, 1);
MakeNameEx(0x45E8D8, "TCustomImageList.BeginUpdate", 0x20);
MakeComm(0x45E8D8, "'procedure TCustomImageList.BeginUpdate;'");
MakeCode(0x45E8D8);
MakeFunction(0x45E8D8, 0x45E8DC);
MakeUnkn(0x45E8DC, 1);
MakeNameEx(0x45E8DC, "TCustomImageList.EndUpdate", 0x20);
MakeComm(0x45E8DC, "'procedure TCustomImageList.EndUpdate;'");
MakeCode(0x45E8DC);
MakeCode(0x45E8E6);
MakeCode(0x45E8F9);
MakeFunction(0x45E8DC, 0x45E8FB);
MakeUnkn(0x45E8FC, 1);
MakeNameEx(0x45E8FC, "TChangeLink.Destroy", 0x20);
MakeComm(0x45E8FC, "'destructor TChangeLink.Destroy;'");
MakeCode(0x45E8FC);
MakeCode(0x45E915);
MakeCode(0x45E92C);
MakeFunction(0x45E8FC, 0x45E92F);
MakeUnkn(0x45E930, 1);
MakeNameEx(0x45E930, "TChangeLink.Change", 0x20);
MakeComm(0x45E930, "'procedure TChangeLink.Change;'");
MakeCode(0x45E930);
MakeCode(0x45E943);
MakeFunction(0x45E930, 0x45E945);
MakeUnkn(0x45E948, 1);
MakeNameEx(0x45E948, "VMT_45E948_TContainedAction", 0);
MakeDword(0x45E948);
MakeDword(0x45E94C);
MakeDword(0x45E950);
MakeDword(0x45E954);
MakeUnkn(0x45E9DC, 1);
MakeNameEx(0x45E9DC, "TContainedAction_InitTable", 0);
MakeByte(0x45E9DC);
MakeByte(0x45E9DD);
MakeDword(0x45E9DE);
MakeDword(0x45E9E2);
MakeDword(0x45E9E6);
MakeDword(0x45E9EA);
MakeDword(0x45E958);
MakeDword(0x45E95C);
MakeDword(0x45E960);
MakeDword(0x45E964);
MakeUnkn(0x45E9EE, 1);
MakeNameEx(0x45E9EE, "TContainedAction_DynamicTable", 0);
MakeWord(0x45E9EE);
MakeWord(0x45E9F0);
MakeWord(0x45E9F2);
MakeWord(0x45E9F4);
MakeWord(0x45E9F6);
MakeDword(0x45E9F8);
MakeDword(0x45E9FC);
MakeDword(0x45EA00);
MakeDword(0x45EA04);
MakeDword(0x45E968);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45EA08, 0x45EA19);
MakeDword(0x45E96C);
MakeDword(0x45E970);
MakeDword(0x45E974);
MakeDword(0x45E978);
MakeDword(0x45E97C);
MakeDword(0x45E980);
MakeDword(0x45E984);
MakeDword(0x45E988);
MakeDword(0x45E98C);
MakeDword(0x45E990);
MakeComm(0x45E994, "'+0'");
MakeDword(0x45E994);
MakeComm(0x45E998, "'+4'");
MakeDword(0x45E998);
MakeComm(0x45E99C, "'+8'");
MakeDword(0x45E99C);
MakeComm(0x45E9A0, "'+C'");
MakeDword(0x45E9A0);
MakeComm(0x45E9A4, "'+10'");
MakeDword(0x45E9A4);
MakeComm(0x45E9A8, "'+14'");
MakeDword(0x45E9A8);
MakeComm(0x45E9AC, "'+18'");
MakeDword(0x45E9AC);
MakeComm(0x45E9B0, "'+1C'");
MakeDword(0x45E9B0);
MakeComm(0x45E9B4, "'+20'");
MakeDword(0x45E9B4);
MakeComm(0x45E9B8, "'+24'");
MakeDword(0x45E9B8);
MakeComm(0x45E9BC, "'+28'");
MakeDword(0x45E9BC);
MakeComm(0x45E9C0, "'+2C'");
MakeDword(0x45E9C0);
MakeComm(0x45E9C4, "'+30'");
MakeDword(0x45E9C4);
MakeComm(0x45E9C8, "'+34'");
MakeDword(0x45E9C8);
MakeComm(0x45E9CC, "'+38'");
MakeDword(0x45E9CC);
MakeComm(0x45E9D0, "'+3C'");
MakeDword(0x45E9D0);
MakeComm(0x45E9D4, "'+40'");
MakeDword(0x45E9D4);
MakeComm(0x45E9D8, "'+44'");
MakeDword(0x45E9D8);
MakeUnkn(0x45EA1C, 1);
MakeNameEx(0x45EA1C, "RTTI_45EA1C_Class_TContainedAction", 0);
MakeDword(0x45EA1C);
MakeUnkn(0x45EA20, 1);
MakeNameEx(0x45EA20, "", 0);
MakeByte(0x45EA20);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45EA21, 0x45EA32);
MakeDword(0x45EA32);
MakeDword(0x45EA36);
MakeWord(0x45EA3A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45EA3C, 0x45EA45);
MakeWord(0x45EA45);
MakeDword(0x45EA47);
MakeDword(0x45EA4B);
MakeDword(0x45EA4F);
MakeDword(0x45EA53);
MakeDword(0x45EA57);
MakeDword(0x45EA5B);
MakeWord(0x45EA5F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45EA61, 0x45EA6A);
MakeUnkn(0x45EA6C, 1);
MakeNameEx(0x45EA6C, "RTTI_45EA6C_Method_TActionEvent", 0);
MakeDword(0x45EA6C);
MakeUnkn(0x45EA70, 1);
MakeNameEx(0x45EA70, "", 0);
MakeByte(0x45EA70);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45EA71, 0x45EA7E);
MakeByte(0x45EA7E);
MakeByte(0x45EA7F);
MakeByte(0x45EA80);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45EA81, 0x45EA88);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45EA88, 0x45EA95);
MakeByte(0x45EA95);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45EA96, 0x45EA9E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45EA9E, 0x45EAA6);
MakeByte(0x45EAA6);
MakeDword(0x45EAA7);
MakeDword(0x45EAAB);
MakeUnkn(0x45EAB0, 1);
MakeNameEx(0x45EAB0, "RTTI_45EAB0_Enumeration_TActionListState", 0);
MakeDword(0x45EAB0);
MakeUnkn(0x45EAB4, 1);
MakeNameEx(0x45EAB4, "", 0);
MakeByte(0x45EAB4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45EAB5, 0x45EAC6);
MakeByte(0x45EAC6);
MakeDword(0x45EAC7);
MakeDword(0x45EACB);
MakeDword(0x45EACF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45EAD3, 0x45EADC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45EADC, 0x45EAE8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45EAE8, 0x45EAFB);
MakeUnkn(0x45EB04, 1);
MakeNameEx(0x45EB04, "VMT_45EB04_TCustomActionList", 0);
MakeDword(0x45EB04);
MakeDword(0x45EB08);
MakeDword(0x45EB0C);
MakeDword(0x45EB10);
MakeDword(0x45EB14);
MakeDword(0x45EB18);
MakeDword(0x45EB1C);
MakeDword(0x45EB20);
MakeUnkn(0x45EB8C, 1);
MakeNameEx(0x45EB8C, "TCustomActionList_DynamicTable", 0);
MakeWord(0x45EB8C);
MakeWord(0x45EB8E);
MakeWord(0x45EB90);
MakeWord(0x45EB92);
MakeWord(0x45EB94);
MakeDword(0x45EB96);
MakeDword(0x45EB9A);
MakeDword(0x45EB9E);
MakeDword(0x45EBA2);
MakeDword(0x45EB24);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45EBA6, 0x45EBB8);
MakeDword(0x45EB28);
MakeDword(0x45EB2C);
MakeDword(0x45EB30);
MakeDword(0x45EB34);
MakeDword(0x45EB38);
MakeDword(0x45EB3C);
MakeDword(0x45EB40);
MakeDword(0x45EB44);
MakeDword(0x45EB48);
MakeDword(0x45EB4C);
MakeComm(0x45EB50, "'+0'");
MakeDword(0x45EB50);
MakeComm(0x45EB54, "'+4'");
MakeDword(0x45EB54);
MakeComm(0x45EB58, "'+8'");
MakeDword(0x45EB58);
MakeComm(0x45EB5C, "'+C'");
MakeDword(0x45EB5C);
MakeComm(0x45EB60, "'+10'");
MakeDword(0x45EB60);
MakeComm(0x45EB64, "'+14'");
MakeDword(0x45EB64);
MakeComm(0x45EB68, "'+18'");
MakeDword(0x45EB68);
MakeComm(0x45EB6C, "'+1C'");
MakeDword(0x45EB6C);
MakeComm(0x45EB70, "'+20'");
MakeDword(0x45EB70);
MakeComm(0x45EB74, "'+24'");
MakeDword(0x45EB74);
MakeComm(0x45EB78, "'+28'");
MakeDword(0x45EB78);
MakeComm(0x45EB7C, "'+2C'");
MakeDword(0x45EB7C);
MakeComm(0x45EB80, "'+30'");
MakeDword(0x45EB80);
MakeComm(0x45EB84, "'+34'");
MakeDword(0x45EB84);
MakeComm(0x45EB88, "'+38'");
MakeDword(0x45EB88);
MakeUnkn(0x45EBB8, 1);
MakeNameEx(0x45EBB8, "RTTI_45EBB8_Class_TCustomActionList", 0);
MakeDword(0x45EBB8);
MakeUnkn(0x45EBBC, 1);
MakeNameEx(0x45EBBC, "", 0);
MakeByte(0x45EBBC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45EBBD, 0x45EBCF);
MakeDword(0x45EBCF);
MakeDword(0x45EBD3);
MakeWord(0x45EBD7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45EBD9, 0x45EBE2);
MakeWord(0x45EBE2);
MakeUnkn(0x45EBE4, 1);
MakeNameEx(0x45EBE4, "VMT_45EBE4_TActionList", 0);
MakeDword(0x45EBE4);
MakeDword(0x45EBE8);
MakeDword(0x45EBEC);
MakeDword(0x45EBF0);
MakeDword(0x45EBF4);
MakeDword(0x45EBF8);
MakeDword(0x45EBFC);
MakeDword(0x45EC00);
MakeDword(0x45EC04);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45EC6C, 0x45EC78);
MakeDword(0x45EC08);
MakeDword(0x45EC0C);
MakeDword(0x45EC10);
MakeDword(0x45EC14);
MakeDword(0x45EC18);
MakeDword(0x45EC1C);
MakeDword(0x45EC20);
MakeDword(0x45EC24);
MakeDword(0x45EC28);
MakeDword(0x45EC2C);
MakeComm(0x45EC30, "'+0'");
MakeDword(0x45EC30);
MakeComm(0x45EC34, "'+4'");
MakeDword(0x45EC34);
MakeComm(0x45EC38, "'+8'");
MakeDword(0x45EC38);
MakeComm(0x45EC3C, "'+C'");
MakeDword(0x45EC3C);
MakeComm(0x45EC40, "'+10'");
MakeDword(0x45EC40);
MakeComm(0x45EC44, "'+14'");
MakeDword(0x45EC44);
MakeComm(0x45EC48, "'+18'");
MakeDword(0x45EC48);
MakeComm(0x45EC4C, "'+1C'");
MakeDword(0x45EC4C);
MakeComm(0x45EC50, "'+20'");
MakeDword(0x45EC50);
MakeComm(0x45EC54, "'+24'");
MakeDword(0x45EC54);
MakeComm(0x45EC58, "'+28'");
MakeDword(0x45EC58);
MakeComm(0x45EC5C, "'+2C'");
MakeDword(0x45EC5C);
MakeComm(0x45EC60, "'+30'");
MakeDword(0x45EC60);
MakeComm(0x45EC64, "'+34'");
MakeDword(0x45EC64);
MakeComm(0x45EC68, "'+38'");
MakeDword(0x45EC68);
MakeUnkn(0x45EC78, 1);
MakeNameEx(0x45EC78, "RTTI_45EC78_Class_TActionList", 0);
MakeDword(0x45EC78);
MakeUnkn(0x45EC7C, 1);
MakeNameEx(0x45EC7C, "", 0);
MakeByte(0x45EC7C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45EC7D, 0x45EC89);
MakeDword(0x45EC89);
MakeDword(0x45EC8D);
MakeWord(0x45EC91);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45EC93, 0x45EC9C);
MakeWord(0x45EC9C);
MakeDword(0x45EC9E);
MakeDword(0x45ECA2);
MakeDword(0x45ECA6);
MakeDword(0x45ECAA);
MakeDword(0x45ECAE);
MakeDword(0x45ECB2);
MakeWord(0x45ECB6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45ECB8, 0x45ECBF);
MakeDword(0x45ECBF);
MakeDword(0x45ECC3);
MakeDword(0x45ECC7);
MakeDword(0x45ECCB);
MakeDword(0x45ECCF);
MakeDword(0x45ECD3);
MakeWord(0x45ECD7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45ECD9, 0x45ECDF);
MakeDword(0x45ECDF);
MakeDword(0x45ECE3);
MakeDword(0x45ECE7);
MakeDword(0x45ECEB);
MakeDword(0x45ECEF);
MakeDword(0x45ECF3);
MakeWord(0x45ECF7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45ECF9, 0x45ED02);
MakeDword(0x45ED02);
MakeDword(0x45ED06);
MakeDword(0x45ED0A);
MakeDword(0x45ED0E);
MakeDword(0x45ED12);
MakeDword(0x45ED16);
MakeWord(0x45ED1A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45ED1C, 0x45ED26);
MakeDword(0x45ED26);
MakeDword(0x45ED2A);
MakeDword(0x45ED2E);
MakeDword(0x45ED32);
MakeDword(0x45ED36);
MakeDword(0x45ED3A);
MakeWord(0x45ED3E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45ED40, 0x45ED4E);
MakeDword(0x45ED4E);
MakeDword(0x45ED52);
MakeDword(0x45ED56);
MakeDword(0x45ED5A);
MakeDword(0x45ED5E);
MakeDword(0x45ED62);
MakeWord(0x45ED66);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45ED68, 0x45ED71);
MakeUnkn(0x45ED74, 1);
MakeNameEx(0x45ED74, "VMT_45ED74_TShortCutList", 0);
MakeDword(0x45ED74);
MakeDword(0x45ED78);
MakeDword(0x45ED7C);
MakeDword(0x45ED80);
MakeDword(0x45ED84);
MakeDword(0x45ED88);
MakeDword(0x45ED8C);
MakeDword(0x45ED90);
MakeDword(0x45ED94);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45EE58, 0x45EE66);
MakeDword(0x45ED98);
MakeDword(0x45ED9C);
MakeDword(0x45EDA0);
MakeDword(0x45EDA4);
MakeDword(0x45EDA8);
MakeDword(0x45EDAC);
MakeDword(0x45EDB0);
MakeDword(0x45EDB4);
MakeDword(0x45EDB8);
MakeDword(0x45EDBC);
MakeComm(0x45EDC0, "'+0'");
MakeDword(0x45EDC0);
MakeComm(0x45EDC4, "'+4'");
MakeDword(0x45EDC4);
MakeComm(0x45EDC8, "'+8'");
MakeDword(0x45EDC8);
MakeComm(0x45EDCC, "'+C'");
MakeDword(0x45EDCC);
MakeComm(0x45EDD0, "'+10'");
MakeDword(0x45EDD0);
MakeComm(0x45EDD4, "'+14'");
MakeDword(0x45EDD4);
MakeComm(0x45EDD8, "'+18'");
MakeDword(0x45EDD8);
MakeComm(0x45EDDC, "'+1C'");
MakeDword(0x45EDDC);
MakeComm(0x45EDE0, "'+20'");
MakeDword(0x45EDE0);
MakeComm(0x45EDE4, "'+24'");
MakeDword(0x45EDE4);
MakeComm(0x45EDE8, "'+28'");
MakeDword(0x45EDE8);
MakeComm(0x45EDEC, "'+2C'");
MakeDword(0x45EDEC);
MakeComm(0x45EDF0, "'+30'");
MakeDword(0x45EDF0);
MakeComm(0x45EDF4, "'+34'");
MakeDword(0x45EDF4);
MakeComm(0x45EDF8, "'+38'");
MakeDword(0x45EDF8);
MakeComm(0x45EDFC, "'+3C'");
MakeDword(0x45EDFC);
MakeComm(0x45EE00, "'+40'");
MakeDword(0x45EE00);
MakeComm(0x45EE04, "'+44'");
MakeDword(0x45EE04);
MakeComm(0x45EE08, "'+48'");
MakeDword(0x45EE08);
MakeComm(0x45EE0C, "'+4C'");
MakeDword(0x45EE0C);
MakeComm(0x45EE10, "'+50'");
MakeDword(0x45EE10);
MakeComm(0x45EE14, "'+54'");
MakeDword(0x45EE14);
MakeComm(0x45EE18, "'+58'");
MakeDword(0x45EE18);
MakeComm(0x45EE1C, "'+5C'");
MakeDword(0x45EE1C);
MakeComm(0x45EE20, "'+60'");
MakeDword(0x45EE20);
MakeComm(0x45EE24, "'+64'");
MakeDword(0x45EE24);
MakeComm(0x45EE28, "'+68'");
MakeDword(0x45EE28);
MakeComm(0x45EE2C, "'+6C'");
MakeDword(0x45EE2C);
MakeComm(0x45EE30, "'+70'");
MakeDword(0x45EE30);
MakeComm(0x45EE34, "'+74'");
MakeDword(0x45EE34);
MakeComm(0x45EE38, "'+78'");
MakeDword(0x45EE38);
MakeComm(0x45EE3C, "'+7C'");
MakeDword(0x45EE3C);
MakeComm(0x45EE40, "'+80'");
MakeDword(0x45EE40);
MakeComm(0x45EE44, "'+84'");
MakeDword(0x45EE44);
MakeComm(0x45EE48, "'+88'");
MakeDword(0x45EE48);
MakeComm(0x45EE4C, "'+8C'");
MakeDword(0x45EE4C);
MakeComm(0x45EE50, "'+90'");
MakeDword(0x45EE50);
MakeComm(0x45EE54, "'+94'");
MakeDword(0x45EE54);
MakeUnkn(0x45EE68, 1);
MakeNameEx(0x45EE68, "RTTI_45EE68_Class_TShortCutList", 0);
MakeDword(0x45EE68);
MakeUnkn(0x45EE6C, 1);
MakeNameEx(0x45EE6C, "", 0);
MakeByte(0x45EE6C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45EE6D, 0x45EE7B);
MakeDword(0x45EE7B);
MakeDword(0x45EE7F);
MakeWord(0x45EE83);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45EE85, 0x45EE8E);
MakeWord(0x45EE8E);
MakeUnkn(0x45EE90, 1);
MakeNameEx(0x45EE90, "RTTI_45EE90_Method_THintEvent", 0);
MakeDword(0x45EE90);
MakeUnkn(0x45EE94, 1);
MakeNameEx(0x45EE94, "", 0);
MakeByte(0x45EE94);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45EE95, 0x45EEA0);
MakeByte(0x45EEA0);
MakeByte(0x45EEA1);
MakeByte(0x45EEA2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45EEA3, 0x45EEAB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45EEAB, 0x45EEB2);
MakeByte(0x45EEB2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45EEB3, 0x45EEBB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45EEBB, 0x45EEC3);
MakeByte(0x45EEC3);
MakeDword(0x45EEC4);
MakeDword(0x45EEC8);
MakeUnkn(0x45EECC, 1);
MakeNameEx(0x45EECC, "VMT_45EECC_TCustomAction", 0);
MakeDword(0x45EECC);
MakeDword(0x45EED0);
MakeDword(0x45EED4);
MakeDword(0x45EED8);
MakeUnkn(0x45EF6C, 1);
MakeNameEx(0x45EF6C, "TCustomAction_InitTable", 0);
MakeByte(0x45EF6C);
MakeByte(0x45EF6D);
MakeDword(0x45EF6E);
MakeDword(0x45EF72);
MakeDword(0x45EF76);
MakeDword(0x45EF7A);
MakeDword(0x45EF7E);
MakeDword(0x45EF82);
MakeDword(0x45EF86);
MakeDword(0x45EF8A);
MakeDword(0x45EEDC);
MakeDword(0x45EEE0);
MakeDword(0x45EEE4);
MakeDword(0x45EEE8);
MakeUnkn(0x45EF8E, 1);
MakeNameEx(0x45EF8E, "TCustomAction_DynamicTable", 0);
MakeWord(0x45EF8E);
MakeWord(0x45EF90);
MakeWord(0x45EF92);
MakeDword(0x45EF94);
MakeDword(0x45EF98);
MakeDword(0x45EEEC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45EF9C, 0x45EFAA);
MakeDword(0x45EEF0);
MakeDword(0x45EEF4);
MakeDword(0x45EEF8);
MakeDword(0x45EEFC);
MakeDword(0x45EF00);
MakeDword(0x45EF04);
MakeDword(0x45EF08);
MakeDword(0x45EF0C);
MakeDword(0x45EF10);
MakeDword(0x45EF14);
MakeComm(0x45EF18, "'+0'");
MakeDword(0x45EF18);
MakeComm(0x45EF1C, "'+4'");
MakeDword(0x45EF1C);
MakeComm(0x45EF20, "'+8'");
MakeDword(0x45EF20);
MakeComm(0x45EF24, "'+C'");
MakeDword(0x45EF24);
MakeComm(0x45EF28, "'+10'");
MakeDword(0x45EF28);
MakeComm(0x45EF2C, "'+14'");
MakeDword(0x45EF2C);
MakeComm(0x45EF30, "'+18'");
MakeDword(0x45EF30);
MakeComm(0x45EF34, "'+1C'");
MakeDword(0x45EF34);
MakeComm(0x45EF38, "'+20'");
MakeDword(0x45EF38);
MakeComm(0x45EF3C, "'+24'");
MakeDword(0x45EF3C);
MakeComm(0x45EF40, "'+28'");
MakeDword(0x45EF40);
MakeComm(0x45EF44, "'+2C'");
MakeDword(0x45EF44);
MakeComm(0x45EF48, "'+30'");
MakeDword(0x45EF48);
MakeComm(0x45EF4C, "'+34'");
MakeDword(0x45EF4C);
MakeComm(0x45EF50, "'+38'");
MakeDword(0x45EF50);
MakeComm(0x45EF54, "'+3C'");
MakeDword(0x45EF54);
MakeComm(0x45EF58, "'+40'");
MakeDword(0x45EF58);
MakeComm(0x45EF5C, "'+44'");
MakeDword(0x45EF5C);
MakeComm(0x45EF60, "'+48'");
MakeDword(0x45EF60);
MakeComm(0x45EF64, "'+4C'");
MakeDword(0x45EF64);
MakeComm(0x45EF68, "'+50'");
MakeDword(0x45EF68);
MakeUnkn(0x45EFAC, 1);
MakeNameEx(0x45EFAC, "RTTI_45EFAC_Class_TCustomAction", 0);
MakeDword(0x45EFAC);
MakeUnkn(0x45EFB0, 1);
MakeNameEx(0x45EFB0, "", 0);
MakeByte(0x45EFB0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45EFB1, 0x45EFBF);
MakeDword(0x45EFBF);
MakeDword(0x45EFC3);
MakeWord(0x45EFC7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45EFC9, 0x45EFD2);
MakeWord(0x45EFD2);
MakeUnkn(0x45EFD4, 1);
MakeNameEx(0x45EFD4, "VMT_45EFD4_TAction", 0);
MakeDword(0x45EFD4);
MakeDword(0x45EFD8);
MakeDword(0x45EFDC);
MakeDword(0x45EFE0);
MakeDword(0x45EFE4);
MakeDword(0x45EFE8);
MakeDword(0x45EFEC);
MakeDword(0x45EFF0);
MakeDword(0x45EFF4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45F074, 0x45F07C);
MakeDword(0x45EFF8);
MakeDword(0x45EFFC);
MakeDword(0x45F000);
MakeDword(0x45F004);
MakeDword(0x45F008);
MakeDword(0x45F00C);
MakeDword(0x45F010);
MakeDword(0x45F014);
MakeDword(0x45F018);
MakeDword(0x45F01C);
MakeComm(0x45F020, "'+0'");
MakeDword(0x45F020);
MakeComm(0x45F024, "'+4'");
MakeDword(0x45F024);
MakeComm(0x45F028, "'+8'");
MakeDword(0x45F028);
MakeComm(0x45F02C, "'+C'");
MakeDword(0x45F02C);
MakeComm(0x45F030, "'+10'");
MakeDword(0x45F030);
MakeComm(0x45F034, "'+14'");
MakeDword(0x45F034);
MakeComm(0x45F038, "'+18'");
MakeDword(0x45F038);
MakeComm(0x45F03C, "'+1C'");
MakeDword(0x45F03C);
MakeComm(0x45F040, "'+20'");
MakeDword(0x45F040);
MakeComm(0x45F044, "'+24'");
MakeDword(0x45F044);
MakeComm(0x45F048, "'+28'");
MakeDword(0x45F048);
MakeComm(0x45F04C, "'+2C'");
MakeDword(0x45F04C);
MakeComm(0x45F050, "'+30'");
MakeDword(0x45F050);
MakeComm(0x45F054, "'+34'");
MakeDword(0x45F054);
MakeComm(0x45F058, "'+38'");
MakeDword(0x45F058);
MakeComm(0x45F05C, "'+3C'");
MakeDword(0x45F05C);
MakeComm(0x45F060, "'+40'");
MakeDword(0x45F060);
MakeComm(0x45F064, "'+44'");
MakeDword(0x45F064);
MakeComm(0x45F068, "'+48'");
MakeDword(0x45F068);
MakeComm(0x45F06C, "'+4C'");
MakeDword(0x45F06C);
MakeComm(0x45F070, "'+50'");
MakeDword(0x45F070);
MakeUnkn(0x45F07C, 1);
MakeNameEx(0x45F07C, "RTTI_45F07C_Class_TAction", 0);
MakeDword(0x45F07C);
MakeUnkn(0x45F080, 1);
MakeNameEx(0x45F080, "", 0);
MakeByte(0x45F080);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45F081, 0x45F089);
MakeDword(0x45F089);
MakeDword(0x45F08D);
MakeWord(0x45F091);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45F093, 0x45F09C);
MakeWord(0x45F09C);
MakeDword(0x45F09E);
MakeDword(0x45F0A2);
MakeDword(0x45F0A6);
MakeDword(0x45F0AA);
MakeDword(0x45F0AE);
MakeDword(0x45F0B2);
MakeWord(0x45F0B6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45F0B8, 0x45F0C2);
MakeDword(0x45F0C2);
MakeDword(0x45F0C6);
MakeDword(0x45F0CA);
MakeDword(0x45F0CE);
MakeDword(0x45F0D2);
MakeDword(0x45F0D6);
MakeWord(0x45F0DA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45F0DC, 0x45F0E4);
MakeDword(0x45F0E4);
MakeDword(0x45F0E8);
MakeDword(0x45F0EC);
MakeDword(0x45F0F0);
MakeDword(0x45F0F4);
MakeDword(0x45F0F8);
MakeWord(0x45F0FC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45F0FE, 0x45F106);
MakeDword(0x45F106);
MakeDword(0x45F10A);
MakeDword(0x45F10E);
MakeDword(0x45F112);
MakeDword(0x45F116);
MakeDword(0x45F11A);
MakeWord(0x45F11E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45F120, 0x45F128);
MakeDword(0x45F128);
MakeDword(0x45F12C);
MakeDword(0x45F130);
MakeDword(0x45F134);
MakeDword(0x45F138);
MakeDword(0x45F13C);
MakeWord(0x45F140);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45F142, 0x45F14D);
MakeDword(0x45F14D);
MakeDword(0x45F151);
MakeDword(0x45F155);
MakeDword(0x45F159);
MakeDword(0x45F15D);
MakeDword(0x45F161);
MakeWord(0x45F165);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45F167, 0x45F173);
MakeDword(0x45F173);
MakeDword(0x45F177);
MakeDword(0x45F17B);
MakeDword(0x45F17F);
MakeDword(0x45F183);
MakeDword(0x45F187);
MakeWord(0x45F18B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45F18D, 0x45F199);
MakeDword(0x45F199);
MakeDword(0x45F19D);
MakeDword(0x45F1A1);
MakeDword(0x45F1A5);
MakeDword(0x45F1A9);
MakeDword(0x45F1AD);
MakeWord(0x45F1B1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45F1B3, 0x45F1BC);
MakeDword(0x45F1BC);
MakeDword(0x45F1C0);
MakeDword(0x45F1C4);
MakeDword(0x45F1C8);
MakeDword(0x45F1CC);
MakeDword(0x45F1D0);
MakeWord(0x45F1D4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45F1D6, 0x45F1DB);
MakeDword(0x45F1DB);
MakeDword(0x45F1DF);
MakeDword(0x45F1E3);
MakeDword(0x45F1E7);
MakeDword(0x45F1EB);
MakeDword(0x45F1EF);
MakeWord(0x45F1F3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45F1F5, 0x45F200);
MakeDword(0x45F200);
MakeDword(0x45F204);
MakeDword(0x45F208);
MakeDword(0x45F20C);
MakeDword(0x45F210);
MakeDword(0x45F214);
MakeWord(0x45F218);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45F21A, 0x45F223);
MakeDword(0x45F223);
MakeDword(0x45F227);
MakeDword(0x45F22B);
MakeDword(0x45F22F);
MakeDword(0x45F233);
MakeDword(0x45F237);
MakeWord(0x45F23B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45F23D, 0x45F250);
MakeDword(0x45F250);
MakeDword(0x45F254);
MakeDword(0x45F258);
MakeDword(0x45F25C);
MakeDword(0x45F260);
MakeDword(0x45F264);
MakeWord(0x45F268);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45F26A, 0x45F272);
MakeDword(0x45F272);
MakeDword(0x45F276);
MakeDword(0x45F27A);
MakeDword(0x45F27E);
MakeDword(0x45F282);
MakeDword(0x45F286);
MakeWord(0x45F28A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45F28C, 0x45F296);
MakeDword(0x45F296);
MakeDword(0x45F29A);
MakeDword(0x45F29E);
MakeDword(0x45F2A2);
MakeDword(0x45F2A6);
MakeDword(0x45F2AA);
MakeWord(0x45F2AE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45F2B0, 0x45F2B7);
MakeDword(0x45F2B7);
MakeDword(0x45F2BB);
MakeDword(0x45F2BF);
MakeDword(0x45F2C3);
MakeDword(0x45F2C7);
MakeDword(0x45F2CB);
MakeWord(0x45F2CF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45F2D1, 0x45F2DA);
MakeUnkn(0x45F2DC, 1);
MakeNameEx(0x45F2DC, "VMT_45F2DC_TActionLink", 0);
MakeDword(0x45F2DC);
MakeDword(0x45F2E0);
MakeDword(0x45F2E4);
MakeDword(0x45F2E8);
MakeDword(0x45F2EC);
MakeDword(0x45F2F0);
MakeDword(0x45F2F4);
MakeDword(0x45F2F8);
MakeDword(0x45F2FC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x45F3A0, 0x45F3AC);
MakeDword(0x45F300);
MakeDword(0x45F304);
MakeDword(0x45F308);
MakeDword(0x45F30C);
MakeDword(0x45F310);
MakeDword(0x45F314);
MakeDword(0x45F318);
MakeDword(0x45F31C);
MakeDword(0x45F320);
MakeDword(0x45F324);
MakeComm(0x45F328, "'+0'");
MakeDword(0x45F328);
MakeComm(0x45F32C, "'+4'");
MakeDword(0x45F32C);
MakeComm(0x45F330, "'+8'");
MakeDword(0x45F330);
MakeComm(0x45F334, "'+C'");
MakeDword(0x45F334);
MakeComm(0x45F338, "'+10'");
MakeDword(0x45F338);
MakeComm(0x45F33C, "'+14'");
MakeDword(0x45F33C);
MakeComm(0x45F340, "'+18'");
MakeDword(0x45F340);
MakeComm(0x45F344, "'+1C'");
MakeDword(0x45F344);
MakeComm(0x45F348, "'+20'");
MakeDword(0x45F348);
MakeComm(0x45F34C, "'+24'");
MakeDword(0x45F34C);
MakeComm(0x45F350, "'+28'");
MakeDword(0x45F350);
MakeComm(0x45F354, "'+2C'");
MakeDword(0x45F354);
MakeComm(0x45F358, "'+30'");
MakeDword(0x45F358);
MakeComm(0x45F35C, "'+34'");
MakeDword(0x45F35C);
MakeComm(0x45F360, "'+38'");
MakeDword(0x45F360);
MakeComm(0x45F364, "'+3C'");
MakeDword(0x45F364);
MakeComm(0x45F368, "'+40'");
MakeDword(0x45F368);
MakeComm(0x45F36C, "'+44'");
MakeDword(0x45F36C);
MakeComm(0x45F370, "'+48'");
MakeDword(0x45F370);
MakeComm(0x45F374, "'+4C'");
MakeDword(0x45F374);
MakeComm(0x45F378, "'+50'");
MakeDword(0x45F378);
MakeComm(0x45F37C, "'+54'");
MakeDword(0x45F37C);
MakeComm(0x45F380, "'+58'");
MakeDword(0x45F380);
MakeComm(0x45F384, "'+5C'");
MakeDword(0x45F384);
MakeComm(0x45F388, "'+60'");
MakeDword(0x45F388);
MakeComm(0x45F38C, "'+64'");
MakeDword(0x45F38C);
MakeComm(0x45F390, "'+68'");
MakeDword(0x45F390);
MakeComm(0x45F394, "'+6C'");
MakeDword(0x45F394);
MakeComm(0x45F398, "'+70'");
MakeDword(0x45F398);
MakeComm(0x45F39C, "'+74'");
MakeDword(0x45F39C);
MakeUnkn(0x45F3AC, 1);
MakeNameEx(0x45F3AC, "TContainedAction.Destroy", 0x20);
MakeComm(0x45F3AC, "'destructor TContainedAction.Destroy;'");
MakeCode(0x45F3AC);
MakeCode(0x45F3C5);
MakeCode(0x45F3DC);
MakeFunction(0x45F3AC, 0x45F3DF);
MakeUnkn(0x45F3E0, 1);
MakeNameEx(0x45F3E0, "TContainedAction.GetIndex", 0x20);
MakeComm(0x45F3E0, "'function TContainedAction.GetIndex:Integer;'");
MakeCode(0x45F3E0);
MakeCode(0x45F3F1);
MakeFunction(0x45F3E0, 0x45F3F5);
MakeUnkn(0x45F3F8, 1);
MakeNameEx(0x45F3F8, "TContainedAction.IsStoredCategory", 0x20);
MakeComm(0x45F3F8, "'function TContainedAction.IsStoredCategory(Value:string):Boolean;'");
MakeCode(0x45F3F8);
MakeFunction(0x45F3F8, 0x45F3FB);
MakeUnkn(0x45F3FC, 1);
MakeNameEx(0x45F3FC, "TContainedAction.GetParentComponent", 0x20);
MakeComm(0x45F3FC, "'procedure TContainedAction.GetParentComponent;'");
MakeCode(0x45F3FC);
MakeCode(0x45F406);
MakeFunction(0x45F3FC, 0x45F40C);
MakeUnkn(0x45F40C, 1);
MakeNameEx(0x45F40C, "TContainedAction.HasParent", 0x20);
MakeComm(0x45F40C, "'procedure TContainedAction.HasParent;'");
MakeCode(0x45F40C);
MakeCode(0x45F415);
MakeFunction(0x45F40C, 0x45F41B);
MakeUnkn(0x45F41C, 1);
MakeNameEx(0x45F41C, "TContainedAction.ReadState", 0x20);
MakeComm(0x45F41C, "'procedure TContainedAction.ReadState(Reader:TReader);'");
MakeCode(0x45F41C);
MakeCode(0x45F449);
MakeFunction(0x45F41C, 0x45F44D);
MakeUnkn(0x45F450, 1);
MakeNameEx(0x45F450, "TContainedAction.SetIndex", 0x20);
MakeComm(0x45F450, "'procedure TContainedAction.SetIndex(Value:Integer);'");
MakeCode(0x45F450);
MakeCode(0x45F471);
MakeCode(0x45F478);
MakeCode(0x45F493);
MakeFunction(0x45F450, 0x45F497);
MakeUnkn(0x45F498, 1);
MakeNameEx(0x45F498, "TContainedAction.SetCategory", 0x20);
MakeComm(0x45F498, "'procedure TContainedAction.SetCategory(const Value:AnsiString);'");
MakeCode(0x45F498);
MakeCode(0x45F4C0);
MakeFunction(0x45F498, 0x45F4C3);
MakeUnkn(0x45F4C4, 1);
MakeNameEx(0x45F4C4, "TContainedAction.SetActionList", 0x20);
MakeComm(0x45F4C4, "'procedure TContainedAction.SetActionList(AActionList:TCustomActionList);'");
MakeCode(0x45F4C4);
MakeCode(0x45F4DC);
MakeCode(0x45F4E9);
MakeFunction(0x45F4C4, 0x45F4EC);
MakeUnkn(0x45F4EC, 1);
MakeNameEx(0x45F4EC, "TContainedAction.SetParentComponent", 0x20);
MakeComm(0x45F4EC, "'procedure TContainedAction.SetParentComponent(AParent:TComponent);'");
MakeCode(0x45F4EC);
MakeCode(0x45F512);
MakeFunction(0x45F4EC, 0x45F515);
MakeUnkn(0x45F518, 1);
MakeNameEx(0x45F518, "TContainedAction.Execute", 0x20);
MakeComm(0x45F518, "'procedure TContainedAction.Execute;'");
MakeCode(0x45F518);
MakeCode(0x45F535);
MakeCode(0x45F567);
MakeCode(0x45F569);
MakeFunction(0x45F518, 0x45F56D);
MakeUnkn(0x45F570, 1);
MakeNameEx(0x45F570, "TContainedAction.Update", 0x20);
MakeComm(0x45F570, "'function TContainedAction.Update:Boolean;'");
MakeCode(0x45F570);
MakeCode(0x45F58D);
MakeCode(0x45F5BF);
MakeCode(0x45F5C1);
MakeFunction(0x45F570, 0x45F5C5);
MakeUnkn(0x45F5C8, 1);
MakeNameEx(0x45F5C8, "TCustomActionList.Create", 0x20);
MakeComm(0x45F5C8, "'constructor TCustomActionList.Create(AOwner:TComponent);'");
MakeCode(0x45F5C8);
MakeCode(0x45F5DA);
MakeCode(0x45F62D);
MakeFunction(0x45F5C8, 0x45F634);
MakeUnkn(0x45F634, 1);
MakeNameEx(0x45F634, "TCustomActionList.Destroy", 0x20);
MakeComm(0x45F634, "'destructor TCustomActionList.Destroy;'");
MakeCode(0x45F634);
MakeCode(0x45F64A);
MakeCode(0x45F656);
MakeCode(0x45F67E);
MakeFunction(0x45F634, 0x45F682);
MakeUnkn(0x45F684, 1);
MakeNameEx(0x45F684, "TCustomActionList.GetChildren", 0x20);
MakeComm(0x45F684, "'procedure TCustomActionList.GetChildren(Proc:TGetChildProc; Root:TComponent);'");
MakeCode(0x45F684);
MakeCode(0x45F6A3);
MakeCode(0x45F6BF);
MakeCode(0x45F6C3);
MakeFunction(0x45F684, 0x45F6CB);
MakeUnkn(0x45F6CC, 1);
MakeNameEx(0x45F6CC, "TCustomActionList.SetChildOrder", 0x20);
MakeComm(0x45F6CC, "'procedure TCustomActionList.SetChildOrder(Component:TComponent; Order:Integer);'");
MakeCode(0x45F6CC);
MakeCode(0x45F6F7);
MakeFunction(0x45F6CC, 0x45F6FB);
MakeUnkn(0x45F6FC, 1);
MakeNameEx(0x45F6FC, "TCustomActionList.GetAction", 0x20);
MakeComm(0x45F6FC, "'function TCustomActionList.GetAction(Index:Integer):TContainedAction;'");
MakeCode(0x45F6FC);
MakeFunction(0x45F6FC, 0x45F70F);
MakeUnkn(0x45F710, 1);
MakeNameEx(0x45F710, "TCustomActionList.GetActionCount", 0x20);
MakeComm(0x45F710, "'function TCustomActionList.GetActionCount:Integer;'");
MakeCode(0x45F710);
MakeFunction(0x45F710, 0x45F717);
MakeUnkn(0x45F718, 1);
MakeNameEx(0x45F718, "TCustomActionList.SetImages", 0x20);
MakeComm(0x45F718, "'procedure TCustomActionList.SetImages(Value:TCustomImageList);'");
MakeCode(0x45F718);
MakeCode(0x45F72D);
MakeCode(0x45F748);
MakeFunction(0x45F718, 0x45F74B);
MakeUnkn(0x45F74C, 1);
MakeNameEx(0x45F74C, "TCustomActionList.ImageListChange", 0x20);
MakeComm(0x45F74C, "'procedure TCustomActionList.ImageListChange(Sender:TObject);'");
MakeCode(0x45F74C);
MakeFunction(0x45F74C, 0x45F757);
MakeUnkn(0x45F758, 1);
MakeNameEx(0x45F758, "TCustomActionList.Notification", 0x20);
MakeComm(0x45F758, "'procedure TCustomActionList.Notification(AComponent:TComponent; Operation:TOperation);'");
MakeCode(0x45F758);
MakeCode(0x45F781);
MakeCode(0x45F79B);
MakeFunction(0x45F758, 0x45F79F);
MakeUnkn(0x45F7A0, 1);
MakeNameEx(0x45F7A0, "TCustomActionList.AddAction", 0x20);
MakeComm(0x45F7A0, "'procedure TCustomActionList.AddAction(Action:TContainedAction);'");
MakeCode(0x45F7A0);
MakeFunction(0x45F7A0, 0x45F7BF);
MakeUnkn(0x45F7C0, 1);
MakeNameEx(0x45F7C0, "TCustomActionList.RemoveAction", 0x20);
MakeComm(0x45F7C0, "'procedure TCustomActionList.RemoveAction(Action:TContainedAction);'");
MakeCode(0x45F7C0);
MakeCode(0x45F7D9);
MakeFunction(0x45F7C0, 0x45F7DC);
MakeUnkn(0x45F7DC, 1);
MakeNameEx(0x45F7DC, "TCustomActionList.Change", 0x20);
MakeComm(0x45F7DC, "'procedure TCustomActionList.Change;'");
MakeCode(0x45F7DC);
MakeCode(0x45F7F0);
MakeCode(0x45F7FE);
MakeCode(0x45F810);
MakeCode(0x45F83E);
MakeFunction(0x45F7DC, 0x45F842);
MakeUnkn(0x45F844, 1);
MakeNameEx(0x45F844, "TCustomActionList.IsShortCut", 0x20);
MakeComm(0x45F844, "'function TCustomActionList.IsShortCut(var Message:TWMKey):Boolean;'");
MakeCode(0x45F844);
MakeCode(0x45F88B);
MakeCode(0x45F8CB);
MakeCode(0x45F8D8);
MakeCode(0x45F8DC);
MakeFunction(0x45F844, 0x45F8E8);
MakeUnkn(0x45F8E8, 1);
MakeNameEx(0x45F8E8, "TCustomActionList.ExecuteAction", 0x20);
MakeComm(0x45F8E8, "'procedure TCustomActionList.ExecuteAction(Action:TBasicAction);'");
MakeCode(0x45F8E8);
MakeCode(0x45F8FF);
MakeFunction(0x45F8E8, 0x45F906);
MakeUnkn(0x45F908, 1);
MakeNameEx(0x45F908, "TCustomActionList.UpdateAction", 0x20);
MakeComm(0x45F908, "'procedure TCustomActionList.UpdateAction(Action:TBasicAction);'");
MakeCode(0x45F908);
MakeCode(0x45F91F);
MakeFunction(0x45F908, 0x45F926);
MakeUnkn(0x45F928, 1);
MakeNameEx(0x45F928, "TCustomActionList.SetState", 0x20);
MakeComm(0x45F928, "'procedure TCustomActionList.SetState(const Value:TActionListState);'");
MakeCode(0x45F928);
MakeCode(0x45F95C);
MakeCode(0x45F973);
MakeCode(0x45F98C);
MakeCode(0x45F995);
MakeCode(0x45F9B2);
MakeCode(0x45F9B6);
MakeCode(0x45F9C5);
MakeFunction(0x45F928, 0x45F9CB);
MakeUnkn(0x45F9CC, 1);
MakeNameEx(0x45F9CC, "TActionLink.IsCaptionLinked", 0x20);
MakeComm(0x45F9CC, "'function TActionLink.IsCaptionLinked:Boolean;'");
MakeCode(0x45F9CC);
MakeFunction(0x45F9CC, 0x45F9DF);
MakeUnkn(0x45F9E0, 1);
MakeNameEx(0x45F9E0, "TActionLink.IsCheckedLinked", 0x20);
MakeComm(0x45F9E0, "'function TActionLink.IsCheckedLinked:Boolean;'");
MakeCode(0x45F9E0);
MakeFunction(0x45F9E0, 0x45F9F3);
MakeUnkn(0x45F9F4, 1);
MakeNameEx(0x45F9F4, "TActionLink.IsEnabledLinked", 0x20);
MakeComm(0x45F9F4, "'function TActionLink.IsEnabledLinked:Boolean;'");
MakeCode(0x45F9F4);
MakeFunction(0x45F9F4, 0x45FA07);
MakeUnkn(0x45FA08, 1);
MakeNameEx(0x45FA08, "TActionLink.IsGroupIndexLinked", 0x20);
MakeComm(0x45FA08, "'function TActionLink.IsGroupIndexLinked:Boolean;'");
MakeCode(0x45FA08);
MakeFunction(0x45FA08, 0x45FA1B);
MakeUnkn(0x45FA1C, 1);
MakeNameEx(0x45FA1C, "TActionLink.IsHelpContextLinked", 0x20);
MakeComm(0x45FA1C, "'function TActionLink.IsHelpContextLinked:Boolean;'");
MakeCode(0x45FA1C);
MakeFunction(0x45FA1C, 0x45FA2F);
MakeUnkn(0x45FA30, 1);
MakeNameEx(0x45FA30, "TActionLink.IsHelpLinked", 0x20);
MakeComm(0x45FA30, "'function TActionLink.IsHelpLinked:Boolean;'");
MakeCode(0x45FA30);
MakeFunction(0x45FA30, 0x45FA43);
MakeUnkn(0x45FA44, 1);
MakeNameEx(0x45FA44, "TActionLink.IsHintLinked", 0x20);
MakeComm(0x45FA44, "'function TActionLink.IsHintLinked:Boolean;'");
MakeCode(0x45FA44);
MakeFunction(0x45FA44, 0x45FA57);
MakeUnkn(0x45FA58, 1);
MakeNameEx(0x45FA58, "TActionLink.IsImageIndexLinked", 0x20);
MakeComm(0x45FA58, "'function TActionLink.IsImageIndexLinked:Boolean;'");
MakeCode(0x45FA58);
MakeFunction(0x45FA58, 0x45FA6B);
MakeUnkn(0x45FA6C, 1);
MakeNameEx(0x45FA6C, "TActionLink.IsShortCutLinked", 0x20);
MakeComm(0x45FA6C, "'function TActionLink.IsShortCutLinked:Boolean;'");
MakeCode(0x45FA6C);
MakeFunction(0x45FA6C, 0x45FA7F);
MakeUnkn(0x45FA80, 1);
MakeNameEx(0x45FA80, "TActionLink.IsVisibleLinked", 0x20);
MakeComm(0x45FA80, "'function TActionLink.IsVisibleLinked:Boolean;'");
MakeCode(0x45FA80);
MakeFunction(0x45FA80, 0x45FA93);
MakeCode(0x45FA94);
MakeFunction(0x45FA94, 0x45FA95);
MakeCode(0x45FA98);
MakeFunction(0x45FA98, 0x45FA99);
MakeCode(0x45FA9C);
MakeFunction(0x45FA9C, 0x45FA9D);
MakeCode(0x45FAA0);
MakeFunction(0x45FAA0, 0x45FAA1);
MakeCode(0x45FAA4);
MakeFunction(0x45FAA4, 0x45FAA5);
MakeCode(0x45FAA8);
MakeFunction(0x45FAA8, 0x45FAA9);
MakeCode(0x45FAAC);
MakeFunction(0x45FAAC, 0x45FAAD);
MakeCode(0x45FAB0);
MakeFunction(0x45FAB0, 0x45FAB1);
MakeCode(0x45FAB4);
MakeFunction(0x45FAB4, 0x45FAB5);
MakeCode(0x45FAB8);
MakeFunction(0x45FAB8, 0x45FAB9);
MakeCode(0x45FABC);
MakeFunction(0x45FABC, 0x45FABD);
MakeCode(0x45FAC0);
MakeFunction(0x45FAC0, 0x45FAC1);
MakeUnkn(0x45FAC4, 1);
MakeNameEx(0x45FAC4, "TCustomAction.Create", 0x20);
MakeComm(0x45FAC4, "'constructor TCustomAction.Create(AOwner:TComponent);'");
MakeCode(0x45FAC4);
MakeCode(0x45FAD2);
MakeCode(0x45FB11);
MakeFunction(0x45FAC4, 0x45FB16);
MakeUnkn(0x45FB18, 1);
MakeNameEx(0x45FB18, "TCustomAction.Destroy", 0x20);
MakeComm(0x45FB18, "'destructor TCustomAction.Destroy;'");
MakeCode(0x45FB18);
MakeCode(0x45FB4D);
MakeCode(0x45FB64);
MakeFunction(0x45FB18, 0x45FB67);
MakeUnkn(0x45FB68, 1);
MakeNameEx(0x45FB68, "TCustomAction.AssignTo", 0x20);
MakeComm(0x45FB68, "'procedure TCustomAction.AssignTo(Dest:TPersistent);'");
MakeCode(0x45FB68);
MakeCode(0x45FC0A);
MakeCode(0x45FC13);
MakeFunction(0x45FB68, 0x45FC17);
MakeUnkn(0x45FC18, 1);
MakeNameEx(0x45FC18, "TCustomAction.SetAutoCheck", 0x20);
MakeComm(0x45FC18, "'procedure TCustomAction.SetAutoCheck(Value:Boolean);'");
MakeCode(0x45FC18);
MakeCode(0x45FC36);
MakeCode(0x45FC60);
MakeCode(0x45FC64);
MakeCode(0x45FC71);
MakeFunction(0x45FC18, 0x45FC76);
MakeUnkn(0x45FC78, 1);
MakeNameEx(0x45FC78, "TCustomAction.SetCaption", 0x20);
MakeComm(0x45FC78, "'procedure TCustomAction.SetCaption(const Value:AnsiString);'");
MakeCode(0x45FC78);
MakeCode(0x45FC9C);
MakeCode(0x45FCBC);
MakeCode(0x45FCC0);
MakeCode(0x45FCD2);
MakeFunction(0x45FC78, 0x45FCD7);
MakeUnkn(0x45FCD8, 1);
MakeNameEx(0x45FCD8, "TCustomAction.SetChecked", 0x20);
MakeComm(0x45FCD8, "'procedure TCustomAction.SetChecked(Value:Boolean);'");
MakeCode(0x45FCD8);
MakeCode(0x45FD23);
MakeCode(0x45FD45);
MakeCode(0x45FD49);
MakeCode(0x45FD76);
MakeCode(0x45FDAF);
MakeCode(0x45FDB3);
MakeCode(0x45FDBB);
MakeCode(0x45FDD7);
MakeFunction(0x45FCD8, 0x45FDDD);
MakeUnkn(0x45FDE0, 1);
MakeNameEx(0x45FDE0, "TCustomAction.SetEnabled", 0x20);
MakeComm(0x45FDE0, "'procedure TCustomAction.SetEnabled(Value:Boolean);'");
MakeCode(0x45FDE0);
MakeCode(0x45FE0B);
MakeCode(0x45FE14);
MakeCode(0x45FE22);
MakeCode(0x45FE43);
MakeCode(0x45FE47);
MakeCode(0x45FE55);
MakeFunction(0x45FDE0, 0x45FE5A);
MakeUnkn(0x45FE5C, 1);
MakeNameEx(0x45FE5C, "TCustomAction.SetGroupIndex", 0x20);
MakeComm(0x45FE5C, "'procedure TCustomAction.SetGroupIndex(const Value:Integer);'");
MakeCode(0x45FE5C);
MakeCode(0x45FE81);
MakeCode(0x45FEA1);
MakeCode(0x45FEA5);
MakeCode(0x45FEAC);
MakeFunction(0x45FE5C, 0x45FEB1);
MakeUnkn(0x45FEB4, 1);
MakeNameEx(0x45FEB4, "TCustomAction.SetHelpType", 0x20);
MakeComm(0x45FEB4, "'procedure TCustomAction.SetHelpType(Value:THelpType);'");
MakeCode(0x45FEB4);
MakeCode(0x45FECF);
MakeCode(0x45FEF9);
MakeCode(0x45FEFD);
MakeCode(0x45FF07);
MakeFunction(0x45FEB4, 0x45FF0C);
MakeUnkn(0x45FF0C, 1);
MakeNameEx(0x45FF0C, "TCustomAction.SetHelpKeyword", 0x20);
MakeComm(0x45FF0C, "'procedure TCustomAction.SetHelpKeyword(const Value:AnsiString);'");
MakeCode(0x45FF0C);
MakeCode(0x45FF2E);
MakeCode(0x45FF58);
MakeCode(0x45FF5C);
MakeCode(0x45FF6D);
MakeFunction(0x45FF0C, 0x45FF72);
MakeUnkn(0x45FF74, 1);
MakeNameEx(0x45FF74, "TCustomAction.SetHelpContext", 0x20);
MakeComm(0x45FF74, "'procedure TCustomAction.SetHelpContext(Value:THelpContext);'");
MakeCode(0x45FF74);
MakeCode(0x45FF93);
MakeCode(0x45FFB3);
MakeCode(0x45FFB7);
MakeCode(0x45FFC4);
MakeFunction(0x45FF74, 0x45FFC9);
MakeUnkn(0x45FFCC, 1);
MakeNameEx(0x45FFCC, "TCustomAction.SetHint", 0x20);
MakeComm(0x45FFCC, "'procedure TCustomAction.SetHint(const Value:AnsiString);'");
MakeCode(0x45FFCC);
MakeCode(0x45FFF0);
MakeCode(0x460010);
MakeCode(0x460014);
MakeCode(0x460026);
MakeFunction(0x45FFCC, 0x46002B);
MakeUnkn(0x46002C, 1);
MakeNameEx(0x46002C, "TCustomAction.SetImageIndex", 0x20);
MakeComm(0x46002C, "'procedure TCustomAction.SetImageIndex(Value:TImageIndex);'");
MakeCode(0x46002C);
MakeCode(0x46004E);
MakeCode(0x46006E);
MakeCode(0x460072);
MakeCode(0x460082);
MakeFunction(0x46002C, 0x460087);
MakeUnkn(0x460088, 1);
MakeNameEx(0x460088, "TCustomAction.SetShortCut", 0x20);
MakeComm(0x460088, "'procedure TCustomAction.SetShortCut(Value:TShortCut);'");
MakeCode(0x460088);
MakeCode(0x4600AD);
MakeCode(0x4600CE);
MakeCode(0x4600D2);
MakeCode(0x4600E4);
MakeFunction(0x460088, 0x4600E9);
MakeUnkn(0x4600EC, 1);
MakeNameEx(0x4600EC, "TCustomAction.SetVisible", 0x20);
MakeComm(0x4600EC, "'procedure TCustomAction.SetVisible(Value:Boolean);'");
MakeCode(0x4600EC);
MakeCode(0x46010F);
MakeCode(0x460130);
MakeCode(0x460134);
MakeCode(0x460145);
MakeFunction(0x4600EC, 0x46014A);
MakeUnkn(0x46014C, 1);
MakeNameEx(0x46014C, "TCustomAction.SetName", 0x20);
MakeComm(0x46014C, "'procedure TCustomAction.SetName(const Value:TComponentName);'");
MakeCode(0x46014C);
MakeCode(0x46016D);
MakeCode(0x460171);
MakeCode(0x460173);
MakeCode(0x460194);
MakeFunction(0x46014C, 0x460198);
MakeUnkn(0x460198, 1);
MakeNameEx(0x460198, "TCustomAction.DoHint", 0x20);
MakeComm(0x460198, "'procedure TCustomAction.DoHint(var HintStr:AnsiString);'");
MakeCode(0x460198);
MakeCode(0x4601B8);
MakeFunction(0x460198, 0x4601BF);
MakeUnkn(0x4601C0, 1);
MakeNameEx(0x4601C0, "TCustomAction.Execute", 0x20);
MakeComm(0x4601C0, "'procedure TCustomAction.Execute;'");
MakeCode(0x4601C0);
MakeCode(0x4601D2);
MakeCode(0x4601FA);
MakeCode(0x460208);
MakeCode(0x460219);
MakeCode(0x46021D);
MakeCode(0x46021F);
MakeFunction(0x4601C0, 0x460221);
MakeUnkn(0x460224, 1);
MakeNameEx(0x460224, "TCustomAction.GetSecondaryShortCuts", 0x20);
MakeComm(0x460224, "'function TCustomAction.GetSecondaryShortCuts:TShortCutList;'");
MakeCode(0x460224);
MakeCode(0x460242);
MakeFunction(0x460224, 0x46024A);
MakeUnkn(0x46024C, 1);
MakeNameEx(0x46024C, "TCustomAction.SetSecondaryShortCuts", 0x20);
MakeComm(0x46024C, "'procedure TCustomAction.SetSecondaryShortCuts(const Value:TShortCutList);'");
MakeCode(0x46024C);
MakeCode(0x46026D);
MakeFunction(0x46024C, 0x46027D);
MakeUnkn(0x460280, 1);
MakeNameEx(0x460280, "TCustomAction.IsSecondaryShortCutsStored", 0x20);
MakeComm(0x460280, "'function TCustomAction.IsSecondaryShortCutsStored(Value:TShortCutList):Boolean;'");
MakeCode(0x460280);
MakeCode(0x460299);
MakeCode(0x46029E);
MakeFunction(0x460280, 0x4602A3);
MakeUnkn(0x4602A4, 1);
MakeNameEx(0x4602A4, "TCustomAction.HandleShortCut", 0x20);
MakeComm(0x4602A4, "'function TCustomAction.HandleShortCut:Boolean;'");
MakeCode(0x4602A4);
MakeFunction(0x4602A4, 0x4602B0);
MakeUnkn(0x4602B0, 1);
MakeNameEx(0x4602B0, "TShortCutList.Add", 0x20);
MakeComm(0x4602B0, "'function TShortCutList.Add(const S:AnsiString):Integer;'");
MakeCode(0x4602B0);
MakeFunction(0x4602B0, 0x4602DB);
MakeUnkn(0x4602DC, 1);
MakeNameEx(0x4602DC, "TAction.Create", 0x20);
MakeComm(0x4602DC, "'constructor TAction.Create(AOwner:TComponent);'");
MakeCode(0x4602DC);
MakeCode(0x4602EA);
MakeCode(0x460310);
MakeFunction(0x4602DC, 0x460315);
MakeUnkn(0x460318, 1);
MakeNameEx(0x460318, "TShortCutList.IndexOfShortCut", 0x20);
MakeComm(0x460318, "'function TShortCutList.IndexOfShortCut(const Shortcut:TShortCut):Integer;'");
MakeCode(0x460318);
MakeCode(0x460339);
MakeCode(0x46034C);
MakeCode(0x460350);
MakeFunction(0x460318, 0x460359);
MakeCode(0x46035C);
MakeCode(0x460373);
MakeCode(0x460380);
MakeCode(0x460381);
MakeCode(0x460386);
MakeFunction(0x46035C, 0x46038A);
MakeUnkn(0x46038C, 1);
MakeNameEx(0x46038C, "RTTI_46038C_Integer_TScrollBarInc", 0);
MakeDword(0x46038C);
MakeUnkn(0x460390, 1);
MakeNameEx(0x460390, "", 0);
MakeByte(0x460390);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460391, 0x46039F);
MakeByte(0x46039F);
MakeDword(0x4603A0);
MakeDword(0x4603A4);
MakeUnkn(0x4603A8, 1);
MakeNameEx(0x4603A8, "RTTI_4603A8_Enumeration_TScrollBarStyle", 0);
MakeDword(0x4603A8);
MakeUnkn(0x4603AC, 1);
MakeNameEx(0x4603AC, "", 0);
MakeByte(0x4603AC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4603AD, 0x4603BD);
MakeByte(0x4603BD);
MakeDword(0x4603BE);
MakeDword(0x4603C2);
MakeDword(0x4603C6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4603CA, 0x4603D4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4603D4, 0x4603DB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4603DB, 0x4603E6);
MakeUnkn(0x4603EC, 1);
MakeNameEx(0x4603EC, "VMT_4603EC_TControlScrollBar", 0);
MakeDword(0x4603EC);
MakeDword(0x4603F0);
MakeDword(0x4603F4);
MakeDword(0x4603F8);
MakeDword(0x4603FC);
MakeDword(0x460400);
MakeDword(0x460404);
MakeDword(0x460408);
MakeDword(0x46040C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460444, 0x460456);
MakeDword(0x460410);
MakeDword(0x460414);
MakeDword(0x460418);
MakeDword(0x46041C);
MakeDword(0x460420);
MakeDword(0x460424);
MakeDword(0x460428);
MakeDword(0x46042C);
MakeDword(0x460430);
MakeDword(0x460434);
MakeComm(0x460438, "'+0'");
MakeDword(0x460438);
MakeComm(0x46043C, "'+4'");
MakeDword(0x46043C);
MakeComm(0x460440, "'+8'");
MakeDword(0x460440);
MakeUnkn(0x460458, 1);
MakeNameEx(0x460458, "RTTI_460458_Class_TControlScrollBar", 0);
MakeDword(0x460458);
MakeUnkn(0x46045C, 1);
MakeNameEx(0x46045C, "", 0);
MakeByte(0x46045C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46045D, 0x46046F);
MakeDword(0x46046F);
MakeDword(0x460473);
MakeWord(0x460477);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460479, 0x46047F);
MakeWord(0x46047F);
MakeDword(0x460481);
MakeDword(0x460485);
MakeDword(0x460489);
MakeDword(0x46048D);
MakeDword(0x460491);
MakeDword(0x460495);
MakeWord(0x460499);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46049B, 0x4604A6);
MakeDword(0x4604A6);
MakeDword(0x4604AA);
MakeDword(0x4604AE);
MakeDword(0x4604B2);
MakeDword(0x4604B6);
MakeDword(0x4604BA);
MakeWord(0x4604BE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4604C0, 0x4604C6);
MakeDword(0x4604C6);
MakeDword(0x4604CA);
MakeDword(0x4604CE);
MakeDword(0x4604D2);
MakeDword(0x4604D6);
MakeDword(0x4604DA);
MakeWord(0x4604DE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4604E0, 0x4604EA);
MakeDword(0x4604EA);
MakeDword(0x4604EE);
MakeDword(0x4604F2);
MakeDword(0x4604F6);
MakeDword(0x4604FA);
MakeDword(0x4604FE);
MakeWord(0x460502);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460504, 0x46050B);
MakeDword(0x46050B);
MakeDword(0x46050F);
MakeDword(0x460513);
MakeDword(0x460517);
MakeDword(0x46051B);
MakeDword(0x46051F);
MakeWord(0x460523);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460525, 0x460531);
MakeDword(0x460531);
MakeDword(0x460535);
MakeDword(0x460539);
MakeDword(0x46053D);
MakeDword(0x460541);
MakeDword(0x460545);
MakeWord(0x460549);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46054B, 0x460554);
MakeDword(0x460554);
MakeDword(0x460558);
MakeDword(0x46055C);
MakeDword(0x460560);
MakeDword(0x460564);
MakeDword(0x460568);
MakeWord(0x46056C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46056E, 0x460574);
MakeDword(0x460574);
MakeDword(0x460578);
MakeDword(0x46057C);
MakeDword(0x460580);
MakeDword(0x460584);
MakeDword(0x460588);
MakeWord(0x46058C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46058E, 0x460595);
MakeDword(0x460595);
MakeDword(0x460599);
MakeDword(0x46059D);
MakeDword(0x4605A1);
MakeDword(0x4605A5);
MakeDword(0x4605A9);
MakeWord(0x4605AD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4605AF, 0x4605B4);
MakeDword(0x4605B4);
MakeDword(0x4605B8);
MakeDword(0x4605BC);
MakeDword(0x4605C0);
MakeDword(0x4605C4);
MakeDword(0x4605C8);
MakeWord(0x4605CC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4605CE, 0x4605D4);
MakeDword(0x4605D4);
MakeDword(0x4605D8);
MakeDword(0x4605DC);
MakeDword(0x4605E0);
MakeDword(0x4605E4);
MakeDword(0x4605E8);
MakeWord(0x4605EC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4605EE, 0x4605F8);
MakeDword(0x4605F8);
MakeDword(0x4605FC);
MakeDword(0x460600);
MakeDword(0x460604);
MakeDword(0x460608);
MakeDword(0x46060C);
MakeWord(0x460610);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460612, 0x46061B);
MakeDword(0x46061B);
MakeDword(0x46061F);
MakeDword(0x460623);
MakeDword(0x460627);
MakeDword(0x46062B);
MakeDword(0x46062F);
MakeWord(0x460633);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460635, 0x46063D);
MakeUnkn(0x460640, 1);
MakeNameEx(0x460640, "RTTI_460640_Enumeration_TWindowState", 0);
MakeDword(0x460640);
MakeUnkn(0x460644, 1);
MakeNameEx(0x460644, "", 0);
MakeByte(0x460644);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460645, 0x460652);
MakeByte(0x460652);
MakeDword(0x460653);
MakeDword(0x460657);
MakeDword(0x46065B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46065F, 0x460668);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460668, 0x460674);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460674, 0x460680);
MakeUnkn(0x460688, 1);
MakeNameEx(0x460688, "VMT_460688_TScrollingWinControl", 0);
MakeDword(0x460688);
MakeDword(0x46068C);
MakeDword(0x460690);
MakeDword(0x460694);
MakeDword(0x460698);
MakeDword(0x46069C);
MakeDword(0x4606A0);
MakeDword(0x4606A4);
MakeUnkn(0x4607B8, 1);
MakeNameEx(0x4607B8, "TScrollingWinControl_DynamicTable", 0);
MakeWord(0x4607B8);
MakeWord(0x4607BA);
MakeWord(0x4607BC);
MakeWord(0x4607BE);
MakeWord(0x4607C0);
MakeWord(0x4607C2);
MakeWord(0x4607C4);
MakeDword(0x4607C6);
MakeDword(0x4607CA);
MakeDword(0x4607CE);
MakeDword(0x4607D2);
MakeDword(0x4607D6);
MakeDword(0x4607DA);
MakeDword(0x4606A8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4607DE, 0x4607F3);
MakeDword(0x4606AC);
MakeDword(0x4606B0);
MakeDword(0x4606B4);
MakeDword(0x4606B8);
MakeDword(0x4606BC);
MakeDword(0x4606C0);
MakeDword(0x4606C4);
MakeDword(0x4606C8);
MakeDword(0x4606CC);
MakeDword(0x4606D0);
MakeComm(0x4606D4, "'+0'");
MakeDword(0x4606D4);
MakeComm(0x4606D8, "'+4'");
MakeDword(0x4606D8);
MakeComm(0x4606DC, "'+8'");
MakeDword(0x4606DC);
MakeComm(0x4606E0, "'+C'");
MakeDword(0x4606E0);
MakeComm(0x4606E4, "'+10'");
MakeDword(0x4606E4);
MakeComm(0x4606E8, "'+14'");
MakeDword(0x4606E8);
MakeComm(0x4606EC, "'+18'");
MakeDword(0x4606EC);
MakeComm(0x4606F0, "'+1C'");
MakeDword(0x4606F0);
MakeComm(0x4606F4, "'+20'");
MakeDword(0x4606F4);
MakeComm(0x4606F8, "'+24'");
MakeDword(0x4606F8);
MakeComm(0x4606FC, "'+28'");
MakeDword(0x4606FC);
MakeComm(0x460700, "'+2C'");
MakeDword(0x460700);
MakeComm(0x460704, "'+30'");
MakeDword(0x460704);
MakeComm(0x460708, "'+34'");
MakeDword(0x460708);
MakeComm(0x46070C, "'+38'");
MakeDword(0x46070C);
MakeComm(0x460710, "'+3C'");
MakeDword(0x460710);
MakeComm(0x460714, "'+40'");
MakeDword(0x460714);
MakeComm(0x460718, "'+44'");
MakeDword(0x460718);
MakeComm(0x46071C, "'+48'");
MakeDword(0x46071C);
MakeComm(0x460720, "'+4C'");
MakeDword(0x460720);
MakeComm(0x460724, "'+50'");
MakeDword(0x460724);
MakeComm(0x460728, "'+54'");
MakeDword(0x460728);
MakeComm(0x46072C, "'+58'");
MakeDword(0x46072C);
MakeComm(0x460730, "'+5C'");
MakeDword(0x460730);
MakeComm(0x460734, "'+60'");
MakeDword(0x460734);
MakeComm(0x460738, "'+64'");
MakeDword(0x460738);
MakeComm(0x46073C, "'+68'");
MakeDword(0x46073C);
MakeComm(0x460740, "'+6C'");
MakeDword(0x460740);
MakeComm(0x460744, "'+70'");
MakeDword(0x460744);
MakeComm(0x460748, "'+74'");
MakeDword(0x460748);
MakeComm(0x46074C, "'+78'");
MakeDword(0x46074C);
MakeComm(0x460750, "'+7C'");
MakeDword(0x460750);
MakeComm(0x460754, "'+80'");
MakeDword(0x460754);
MakeComm(0x460758, "'+84'");
MakeDword(0x460758);
MakeComm(0x46075C, "'+88'");
MakeDword(0x46075C);
MakeComm(0x460760, "'+8C'");
MakeDword(0x460760);
MakeComm(0x460764, "'+90'");
MakeDword(0x460764);
MakeComm(0x460768, "'+94'");
MakeDword(0x460768);
MakeComm(0x46076C, "'+98'");
MakeDword(0x46076C);
MakeComm(0x460770, "'+9C'");
MakeDword(0x460770);
MakeComm(0x460774, "'+A0'");
MakeDword(0x460774);
MakeComm(0x460778, "'+A4'");
MakeDword(0x460778);
MakeComm(0x46077C, "'+A8'");
MakeDword(0x46077C);
MakeComm(0x460780, "'+AC'");
MakeDword(0x460780);
MakeComm(0x460784, "'+B0'");
MakeDword(0x460784);
MakeComm(0x460788, "'+B4'");
MakeDword(0x460788);
MakeComm(0x46078C, "'+B8'");
MakeDword(0x46078C);
MakeComm(0x460790, "'+BC'");
MakeDword(0x460790);
MakeComm(0x460794, "'+C0'");
MakeDword(0x460794);
MakeComm(0x460798, "'+C4'");
MakeDword(0x460798);
MakeComm(0x46079C, "'+C8'");
MakeDword(0x46079C);
MakeComm(0x4607A0, "'+CC'");
MakeDword(0x4607A0);
MakeComm(0x4607A4, "'+D0'");
MakeDword(0x4607A4);
MakeComm(0x4607A8, "'+D4'");
MakeDword(0x4607A8);
MakeComm(0x4607AC, "'+D8'");
MakeDword(0x4607AC);
MakeComm(0x4607B0, "'+DC'");
MakeDword(0x4607B0);
MakeComm(0x4607B4, "'+E0'");
MakeDword(0x4607B4);
MakeUnkn(0x4607F4, 1);
MakeNameEx(0x4607F4, "RTTI_4607F4_Class_TScrollingWinControl", 0);
MakeDword(0x4607F4);
MakeUnkn(0x4607F8, 1);
MakeNameEx(0x4607F8, "", 0);
MakeByte(0x4607F8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4607F9, 0x46080E);
MakeDword(0x46080E);
MakeDword(0x460812);
MakeWord(0x460816);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460818, 0x46081E);
MakeWord(0x46081E);
MakeDword(0x460820);
MakeDword(0x460824);
MakeDword(0x460828);
MakeDword(0x46082C);
MakeDword(0x460830);
MakeDword(0x460834);
MakeWord(0x460838);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46083A, 0x46084E);
MakeDword(0x46084E);
MakeDword(0x460852);
MakeDword(0x460856);
MakeDword(0x46085A);
MakeDword(0x46085E);
MakeDword(0x460862);
MakeWord(0x460866);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460868, 0x460878);
MakeDword(0x460878);
MakeDword(0x46087C);
MakeDword(0x460880);
MakeDword(0x460884);
MakeDword(0x460888);
MakeDword(0x46088C);
MakeWord(0x460890);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460892, 0x4608A0);
MakeDword(0x4608A0);
MakeDword(0x4608A4);
MakeDword(0x4608A8);
MakeDword(0x4608AC);
MakeDword(0x4608B0);
MakeDword(0x4608B4);
MakeWord(0x4608B8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4608BA, 0x4608C8);
MakeUnkn(0x4608C8, 1);
MakeNameEx(0x4608C8, "RTTI_4608C8_Enumeration_TFormBorderStyle", 0);
MakeDword(0x4608C8);
MakeUnkn(0x4608CC, 1);
MakeNameEx(0x4608CC, "", 0);
MakeByte(0x4608CC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4608CD, 0x4608DE);
MakeByte(0x4608DE);
MakeDword(0x4608DF);
MakeDword(0x4608E3);
MakeDword(0x4608E7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4608EB, 0x4608F2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4608F2, 0x4608FB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4608FB, 0x460906);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460906, 0x46090F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46090F, 0x46091C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46091C, 0x46092A);
MakeUnkn(0x460930, 1);
MakeNameEx(0x460930, "RTTI_460930_Enumeration_TBorderStyle", 0);
MakeDword(0x460930);
MakeUnkn(0x460934, 1);
MakeNameEx(0x460934, "", 0);
MakeByte(0x460934);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460935, 0x460942);
MakeByte(0x460942);
MakeDword(0x460943);
MakeDword(0x460947);
MakeDword(0x46094B);
MakeUnkn(0x460958, 1);
MakeNameEx(0x460958, "VMT_460958_TScrollBox", 0);
MakeDword(0x460958);
MakeDword(0x46095C);
MakeDword(0x460960);
MakeDword(0x460964);
MakeDword(0x460968);
MakeDword(0x46096C);
MakeDword(0x460970);
MakeDword(0x460974);
MakeUnkn(0x460A88, 1);
MakeNameEx(0x460A88, "TScrollBox_DynamicTable", 0);
MakeWord(0x460A88);
MakeWord(0x460A8A);
MakeWord(0x460A8C);
MakeDword(0x460A8E);
MakeDword(0x460A92);
MakeDword(0x460978);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460A96, 0x460AA1);
MakeDword(0x46097C);
MakeDword(0x460980);
MakeDword(0x460984);
MakeDword(0x460988);
MakeDword(0x46098C);
MakeDword(0x460990);
MakeDword(0x460994);
MakeDword(0x460998);
MakeDword(0x46099C);
MakeDword(0x4609A0);
MakeComm(0x4609A4, "'+0'");
MakeDword(0x4609A4);
MakeComm(0x4609A8, "'+4'");
MakeDword(0x4609A8);
MakeComm(0x4609AC, "'+8'");
MakeDword(0x4609AC);
MakeComm(0x4609B0, "'+C'");
MakeDword(0x4609B0);
MakeComm(0x4609B4, "'+10'");
MakeDword(0x4609B4);
MakeComm(0x4609B8, "'+14'");
MakeDword(0x4609B8);
MakeComm(0x4609BC, "'+18'");
MakeDword(0x4609BC);
MakeComm(0x4609C0, "'+1C'");
MakeDword(0x4609C0);
MakeComm(0x4609C4, "'+20'");
MakeDword(0x4609C4);
MakeComm(0x4609C8, "'+24'");
MakeDword(0x4609C8);
MakeComm(0x4609CC, "'+28'");
MakeDword(0x4609CC);
MakeComm(0x4609D0, "'+2C'");
MakeDword(0x4609D0);
MakeComm(0x4609D4, "'+30'");
MakeDword(0x4609D4);
MakeComm(0x4609D8, "'+34'");
MakeDword(0x4609D8);
MakeComm(0x4609DC, "'+38'");
MakeDword(0x4609DC);
MakeComm(0x4609E0, "'+3C'");
MakeDword(0x4609E0);
MakeComm(0x4609E4, "'+40'");
MakeDword(0x4609E4);
MakeComm(0x4609E8, "'+44'");
MakeDword(0x4609E8);
MakeComm(0x4609EC, "'+48'");
MakeDword(0x4609EC);
MakeComm(0x4609F0, "'+4C'");
MakeDword(0x4609F0);
MakeComm(0x4609F4, "'+50'");
MakeDword(0x4609F4);
MakeComm(0x4609F8, "'+54'");
MakeDword(0x4609F8);
MakeComm(0x4609FC, "'+58'");
MakeDword(0x4609FC);
MakeComm(0x460A00, "'+5C'");
MakeDword(0x460A00);
MakeComm(0x460A04, "'+60'");
MakeDword(0x460A04);
MakeComm(0x460A08, "'+64'");
MakeDword(0x460A08);
MakeComm(0x460A0C, "'+68'");
MakeDword(0x460A0C);
MakeComm(0x460A10, "'+6C'");
MakeDword(0x460A10);
MakeComm(0x460A14, "'+70'");
MakeDword(0x460A14);
MakeComm(0x460A18, "'+74'");
MakeDword(0x460A18);
MakeComm(0x460A1C, "'+78'");
MakeDword(0x460A1C);
MakeComm(0x460A20, "'+7C'");
MakeDword(0x460A20);
MakeComm(0x460A24, "'+80'");
MakeDword(0x460A24);
MakeComm(0x460A28, "'+84'");
MakeDword(0x460A28);
MakeComm(0x460A2C, "'+88'");
MakeDword(0x460A2C);
MakeComm(0x460A30, "'+8C'");
MakeDword(0x460A30);
MakeComm(0x460A34, "'+90'");
MakeDword(0x460A34);
MakeComm(0x460A38, "'+94'");
MakeDword(0x460A38);
MakeComm(0x460A3C, "'+98'");
MakeDword(0x460A3C);
MakeComm(0x460A40, "'+9C'");
MakeDword(0x460A40);
MakeComm(0x460A44, "'+A0'");
MakeDword(0x460A44);
MakeComm(0x460A48, "'+A4'");
MakeDword(0x460A48);
MakeComm(0x460A4C, "'+A8'");
MakeDword(0x460A4C);
MakeComm(0x460A50, "'+AC'");
MakeDword(0x460A50);
MakeComm(0x460A54, "'+B0'");
MakeDword(0x460A54);
MakeComm(0x460A58, "'+B4'");
MakeDword(0x460A58);
MakeComm(0x460A5C, "'+B8'");
MakeDword(0x460A5C);
MakeComm(0x460A60, "'+BC'");
MakeDword(0x460A60);
MakeComm(0x460A64, "'+C0'");
MakeDword(0x460A64);
MakeComm(0x460A68, "'+C4'");
MakeDword(0x460A68);
MakeComm(0x460A6C, "'+C8'");
MakeDword(0x460A6C);
MakeComm(0x460A70, "'+CC'");
MakeDword(0x460A70);
MakeComm(0x460A74, "'+D0'");
MakeDword(0x460A74);
MakeComm(0x460A78, "'+D4'");
MakeDword(0x460A78);
MakeComm(0x460A7C, "'+D8'");
MakeDword(0x460A7C);
MakeComm(0x460A80, "'+DC'");
MakeDword(0x460A80);
MakeComm(0x460A84, "'+E0'");
MakeDword(0x460A84);
MakeUnkn(0x460AA4, 1);
MakeNameEx(0x460AA4, "RTTI_460AA4_Class_TScrollBox", 0);
MakeDword(0x460AA4);
MakeUnkn(0x460AA8, 1);
MakeNameEx(0x460AA8, "", 0);
MakeByte(0x460AA8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460AA9, 0x460AB4);
MakeDword(0x460AB4);
MakeDword(0x460AB8);
MakeWord(0x460ABC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460ABE, 0x460AC4);
MakeWord(0x460AC4);
MakeDword(0x460AC6);
MakeDword(0x460ACA);
MakeDword(0x460ACE);
MakeDword(0x460AD2);
MakeDword(0x460AD6);
MakeDword(0x460ADA);
MakeWord(0x460ADE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460AE0, 0x460AE6);
MakeDword(0x460AE6);
MakeDword(0x460AEA);
MakeDword(0x460AEE);
MakeDword(0x460AF2);
MakeDword(0x460AF6);
MakeDword(0x460AFA);
MakeWord(0x460AFE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460B00, 0x460B08);
MakeDword(0x460B08);
MakeDword(0x460B0C);
MakeDword(0x460B10);
MakeDword(0x460B14);
MakeDword(0x460B18);
MakeDword(0x460B1C);
MakeWord(0x460B20);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460B22, 0x460B2D);
MakeDword(0x460B2D);
MakeDword(0x460B31);
MakeDword(0x460B35);
MakeDword(0x460B39);
MakeDword(0x460B3D);
MakeDword(0x460B41);
MakeWord(0x460B45);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460B47, 0x460B50);
MakeDword(0x460B50);
MakeDword(0x460B54);
MakeDword(0x460B58);
MakeDword(0x460B5C);
MakeDword(0x460B60);
MakeDword(0x460B64);
MakeWord(0x460B68);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460B6A, 0x460B75);
MakeDword(0x460B75);
MakeDword(0x460B79);
MakeDword(0x460B7D);
MakeDword(0x460B81);
MakeDword(0x460B85);
MakeDword(0x460B89);
MakeWord(0x460B8D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460B8F, 0x460B9A);
MakeDword(0x460B9A);
MakeDword(0x460B9E);
MakeDword(0x460BA2);
MakeDword(0x460BA6);
MakeDword(0x460BAA);
MakeDword(0x460BAE);
MakeWord(0x460BB2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460BB4, 0x460BBF);
MakeDword(0x460BBF);
MakeDword(0x460BC3);
MakeDword(0x460BC7);
MakeDword(0x460BCB);
MakeDword(0x460BCF);
MakeDword(0x460BD3);
MakeWord(0x460BD7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460BD9, 0x460BE3);
MakeDword(0x460BE3);
MakeDword(0x460BE7);
MakeDword(0x460BEB);
MakeDword(0x460BEF);
MakeDword(0x460BF3);
MakeDword(0x460BF7);
MakeWord(0x460BFB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460BFD, 0x460C08);
MakeDword(0x460C08);
MakeDword(0x460C0C);
MakeDword(0x460C10);
MakeDword(0x460C14);
MakeDword(0x460C18);
MakeDword(0x460C1C);
MakeWord(0x460C20);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460C22, 0x460C2B);
MakeDword(0x460C2B);
MakeDword(0x460C2F);
MakeDword(0x460C33);
MakeDword(0x460C37);
MakeDword(0x460C3B);
MakeDword(0x460C3F);
MakeWord(0x460C43);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460C45, 0x460C51);
MakeDword(0x460C51);
MakeDword(0x460C55);
MakeDword(0x460C59);
MakeDword(0x460C5D);
MakeDword(0x460C61);
MakeDword(0x460C65);
MakeWord(0x460C69);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460C6B, 0x460C77);
MakeDword(0x460C77);
MakeDword(0x460C7B);
MakeDword(0x460C7F);
MakeDword(0x460C83);
MakeDword(0x460C87);
MakeDword(0x460C8B);
MakeWord(0x460C8F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460C91, 0x460C9A);
MakeDword(0x460C9A);
MakeDword(0x460C9E);
MakeDword(0x460CA2);
MakeDword(0x460CA6);
MakeDword(0x460CAA);
MakeDword(0x460CAE);
MakeWord(0x460CB2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460CB4, 0x460CBF);
MakeDword(0x460CBF);
MakeDword(0x460CC3);
MakeDword(0x460CC7);
MakeDword(0x460CCB);
MakeDword(0x460CCF);
MakeDword(0x460CD3);
MakeWord(0x460CD7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460CD9, 0x460CE2);
MakeDword(0x460CE2);
MakeDword(0x460CE6);
MakeDword(0x460CEA);
MakeDword(0x460CEE);
MakeDword(0x460CF2);
MakeDword(0x460CF6);
MakeWord(0x460CFA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460CFC, 0x460D05);
MakeDword(0x460D05);
MakeDword(0x460D09);
MakeDword(0x460D0D);
MakeDword(0x460D11);
MakeDword(0x460D15);
MakeDword(0x460D19);
MakeWord(0x460D1D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460D1F, 0x460D27);
MakeDword(0x460D27);
MakeDword(0x460D2B);
MakeDword(0x460D2F);
MakeDword(0x460D33);
MakeDword(0x460D37);
MakeDword(0x460D3B);
MakeWord(0x460D3F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460D41, 0x460D47);
MakeDword(0x460D47);
MakeDword(0x460D4B);
MakeDword(0x460D4F);
MakeDword(0x460D53);
MakeDword(0x460D57);
MakeDword(0x460D5B);
MakeWord(0x460D5F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460D61, 0x460D67);
MakeDword(0x460D67);
MakeDword(0x460D6B);
MakeDword(0x460D6F);
MakeDword(0x460D73);
MakeDword(0x460D77);
MakeDword(0x460D7B);
MakeWord(0x460D7F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460D81, 0x460D86);
MakeDword(0x460D86);
MakeDword(0x460D8A);
MakeDword(0x460D8E);
MakeDword(0x460D92);
MakeDword(0x460D96);
MakeDword(0x460D9A);
MakeWord(0x460D9E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460DA0, 0x460DA8);
MakeDword(0x460DA8);
MakeDword(0x460DAC);
MakeDword(0x460DB0);
MakeDword(0x460DB4);
MakeDword(0x460DB8);
MakeDword(0x460DBC);
MakeWord(0x460DC0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460DC2, 0x460DD1);
MakeDword(0x460DD1);
MakeDword(0x460DD5);
MakeDword(0x460DD9);
MakeDword(0x460DDD);
MakeDword(0x460DE1);
MakeDword(0x460DE5);
MakeWord(0x460DE9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460DEB, 0x460DFC);
MakeDword(0x460DFC);
MakeDword(0x460E00);
MakeDword(0x460E04);
MakeDword(0x460E08);
MakeDword(0x460E0C);
MakeDword(0x460E10);
MakeWord(0x460E14);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460E16, 0x460E22);
MakeDword(0x460E22);
MakeDword(0x460E26);
MakeDword(0x460E2A);
MakeDword(0x460E2E);
MakeDword(0x460E32);
MakeDword(0x460E36);
MakeWord(0x460E3A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460E3C, 0x460E48);
MakeDword(0x460E48);
MakeDword(0x460E4C);
MakeDword(0x460E50);
MakeDword(0x460E54);
MakeDword(0x460E58);
MakeDword(0x460E5C);
MakeWord(0x460E60);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460E62, 0x460E6D);
MakeDword(0x460E6D);
MakeDword(0x460E71);
MakeDword(0x460E75);
MakeDword(0x460E79);
MakeDword(0x460E7D);
MakeDword(0x460E81);
MakeWord(0x460E85);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460E87, 0x460E96);
MakeDword(0x460E96);
MakeDword(0x460E9A);
MakeDword(0x460E9E);
MakeDword(0x460EA2);
MakeDword(0x460EA6);
MakeDword(0x460EAA);
MakeWord(0x460EAE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460EB0, 0x460EBA);
MakeDword(0x460EBA);
MakeDword(0x460EBE);
MakeDword(0x460EC2);
MakeDword(0x460EC6);
MakeDword(0x460ECA);
MakeDword(0x460ECE);
MakeWord(0x460ED2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460ED4, 0x460EDD);
MakeDword(0x460EDD);
MakeDword(0x460EE1);
MakeDword(0x460EE5);
MakeDword(0x460EE9);
MakeDword(0x460EED);
MakeDword(0x460EF1);
MakeWord(0x460EF5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460EF7, 0x460F00);
MakeDword(0x460F00);
MakeDword(0x460F04);
MakeDword(0x460F08);
MakeDword(0x460F0C);
MakeDword(0x460F10);
MakeDword(0x460F14);
MakeWord(0x460F18);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460F1A, 0x460F22);
MakeDword(0x460F22);
MakeDword(0x460F26);
MakeDword(0x460F2A);
MakeDword(0x460F2E);
MakeDword(0x460F32);
MakeDword(0x460F36);
MakeWord(0x460F3A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460F3C, 0x460F44);
MakeDword(0x460F44);
MakeDword(0x460F48);
MakeDword(0x460F4C);
MakeDword(0x460F50);
MakeDword(0x460F54);
MakeDword(0x460F58);
MakeWord(0x460F5C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460F5E, 0x460F6A);
MakeDword(0x460F6A);
MakeDword(0x460F6E);
MakeDword(0x460F72);
MakeDword(0x460F76);
MakeDword(0x460F7A);
MakeDword(0x460F7E);
MakeWord(0x460F82);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460F84, 0x460F8C);
MakeDword(0x460F8C);
MakeDword(0x460F90);
MakeDword(0x460F94);
MakeDword(0x460F98);
MakeDword(0x460F9C);
MakeDword(0x460FA0);
MakeWord(0x460FA4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460FA6, 0x460FBA);
MakeDword(0x460FBA);
MakeDword(0x460FBE);
MakeDword(0x460FC2);
MakeDword(0x460FC6);
MakeDword(0x460FCA);
MakeDword(0x460FCE);
MakeWord(0x460FD2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460FD4, 0x460FE3);
MakeDword(0x460FE3);
MakeDword(0x460FE7);
MakeDword(0x460FEB);
MakeDword(0x460FEF);
MakeDword(0x460FF3);
MakeDword(0x460FF7);
MakeWord(0x460FFB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x460FFD, 0x461008);
MakeDword(0x461008);
MakeDword(0x46100C);
MakeDword(0x461010);
MakeDword(0x461014);
MakeDword(0x461018);
MakeDword(0x46101C);
MakeWord(0x461020);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461022, 0x46102D);
MakeDword(0x46102D);
MakeDword(0x461031);
MakeDword(0x461035);
MakeDword(0x461039);
MakeDword(0x46103D);
MakeDword(0x461041);
MakeWord(0x461045);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461047, 0x461052);
MakeDword(0x461052);
MakeDword(0x461056);
MakeDword(0x46105A);
MakeDword(0x46105E);
MakeDword(0x461062);
MakeDword(0x461066);
MakeWord(0x46106A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46106C, 0x461077);
MakeDword(0x461077);
MakeDword(0x46107B);
MakeDword(0x46107F);
MakeDword(0x461083);
MakeDword(0x461087);
MakeDword(0x46108B);
MakeWord(0x46108F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461091, 0x46109C);
MakeDword(0x46109C);
MakeDword(0x4610A0);
MakeDword(0x4610A4);
MakeDword(0x4610A8);
MakeDword(0x4610AC);
MakeDword(0x4610B0);
MakeWord(0x4610B4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4610B6, 0x4610C0);
MakeDword(0x4610C0);
MakeDword(0x4610C4);
MakeDword(0x4610C8);
MakeDword(0x4610CC);
MakeDword(0x4610D0);
MakeDword(0x4610D4);
MakeWord(0x4610D8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4610DA, 0x4610E4);
MakeDword(0x4610E4);
MakeDword(0x4610E8);
MakeDword(0x4610EC);
MakeDword(0x4610F0);
MakeDword(0x4610F4);
MakeDword(0x4610F8);
MakeWord(0x4610FC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4610FE, 0x461106);
MakeDword(0x461106);
MakeDword(0x46110A);
MakeDword(0x46110E);
MakeDword(0x461112);
MakeDword(0x461116);
MakeDword(0x46111A);
MakeWord(0x46111E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461120, 0x461127);
MakeDword(0x461127);
MakeDword(0x46112B);
MakeDword(0x46112F);
MakeDword(0x461133);
MakeDword(0x461137);
MakeDword(0x46113B);
MakeWord(0x46113F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461141, 0x46114F);
MakeDword(0x46114F);
MakeDword(0x461153);
MakeDword(0x461157);
MakeDword(0x46115B);
MakeDword(0x46115F);
MakeDword(0x461163);
MakeWord(0x461167);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461169, 0x461179);
MakeDword(0x461179);
MakeDword(0x46117D);
MakeDword(0x461181);
MakeDword(0x461185);
MakeDword(0x461189);
MakeDword(0x46118D);
MakeWord(0x461191);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461193, 0x46119F);
MakeDword(0x46119F);
MakeDword(0x4611A3);
MakeDword(0x4611A7);
MakeDword(0x4611AB);
MakeDword(0x4611AF);
MakeDword(0x4611B3);
MakeWord(0x4611B7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4611B9, 0x4611C6);
MakeDword(0x4611C6);
MakeDword(0x4611CA);
MakeDword(0x4611CE);
MakeDword(0x4611D2);
MakeDword(0x4611D6);
MakeDword(0x4611DA);
MakeWord(0x4611DE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4611E0, 0x4611ED);
MakeDword(0x4611ED);
MakeDword(0x4611F1);
MakeDword(0x4611F5);
MakeDword(0x4611F9);
MakeDword(0x4611FD);
MakeDword(0x461201);
MakeWord(0x461205);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461207, 0x461213);
MakeDword(0x461213);
MakeDword(0x461217);
MakeDword(0x46121B);
MakeDword(0x46121F);
MakeDword(0x461223);
MakeDword(0x461227);
MakeWord(0x46122B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46122D, 0x461237);
MakeDword(0x461237);
MakeDword(0x46123B);
MakeDword(0x46123F);
MakeDword(0x461243);
MakeDword(0x461247);
MakeDword(0x46124B);
MakeWord(0x46124F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461251, 0x46125E);
MakeDword(0x46125E);
MakeDword(0x461262);
MakeDword(0x461266);
MakeDword(0x46126A);
MakeDword(0x46126E);
MakeDword(0x461272);
MakeWord(0x461276);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461278, 0x461289);
MakeDword(0x461289);
MakeDword(0x46128D);
MakeDword(0x461291);
MakeDword(0x461295);
MakeDword(0x461299);
MakeDword(0x46129D);
MakeWord(0x4612A1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4612A3, 0x4612B2);
MakeDword(0x4612B2);
MakeDword(0x4612B6);
MakeDword(0x4612BA);
MakeDword(0x4612BE);
MakeDword(0x4612C2);
MakeDword(0x4612C6);
MakeWord(0x4612CA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4612CC, 0x4612D5);
MakeDword(0x4612D5);
MakeDword(0x4612D9);
MakeDword(0x4612DD);
MakeDword(0x4612E1);
MakeDword(0x4612E5);
MakeDword(0x4612E9);
MakeWord(0x4612ED);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4612EF, 0x4612FB);
MakeDword(0x4612FB);
MakeDword(0x4612FF);
MakeDword(0x461303);
MakeDword(0x461307);
MakeDword(0x46130B);
MakeDword(0x46130F);
MakeWord(0x461313);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461315, 0x461321);
MakeDword(0x461321);
MakeDword(0x461325);
MakeDword(0x461329);
MakeDword(0x46132D);
MakeDword(0x461331);
MakeDword(0x461335);
MakeWord(0x461339);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46133B, 0x461344);
MakeUnkn(0x461344, 1);
MakeNameEx(0x461344, "VMT_461344_TCustomFrame", 0);
MakeDword(0x461344);
MakeDword(0x461348);
MakeDword(0x46134C);
MakeDword(0x461350);
MakeDword(0x461354);
MakeDword(0x461358);
MakeDword(0x46135C);
MakeDword(0x461360);
MakeUnkn(0x461474, 1);
MakeNameEx(0x461474, "TCustomFrame_DynamicTable", 0);
MakeWord(0x461474);
MakeWord(0x461476);
MakeDword(0x461478);
MakeDword(0x461364);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46147C, 0x461489);
MakeDword(0x461368);
MakeDword(0x46136C);
MakeDword(0x461370);
MakeDword(0x461374);
MakeDword(0x461378);
MakeDword(0x46137C);
MakeDword(0x461380);
MakeDword(0x461384);
MakeDword(0x461388);
MakeDword(0x46138C);
MakeComm(0x461390, "'+0'");
MakeDword(0x461390);
MakeComm(0x461394, "'+4'");
MakeDword(0x461394);
MakeComm(0x461398, "'+8'");
MakeDword(0x461398);
MakeComm(0x46139C, "'+C'");
MakeDword(0x46139C);
MakeComm(0x4613A0, "'+10'");
MakeDword(0x4613A0);
MakeComm(0x4613A4, "'+14'");
MakeDword(0x4613A4);
MakeComm(0x4613A8, "'+18'");
MakeDword(0x4613A8);
MakeComm(0x4613AC, "'+1C'");
MakeDword(0x4613AC);
MakeComm(0x4613B0, "'+20'");
MakeDword(0x4613B0);
MakeComm(0x4613B4, "'+24'");
MakeDword(0x4613B4);
MakeComm(0x4613B8, "'+28'");
MakeDword(0x4613B8);
MakeComm(0x4613BC, "'+2C'");
MakeDword(0x4613BC);
MakeComm(0x4613C0, "'+30'");
MakeDword(0x4613C0);
MakeComm(0x4613C4, "'+34'");
MakeDword(0x4613C4);
MakeComm(0x4613C8, "'+38'");
MakeDword(0x4613C8);
MakeComm(0x4613CC, "'+3C'");
MakeDword(0x4613CC);
MakeComm(0x4613D0, "'+40'");
MakeDword(0x4613D0);
MakeComm(0x4613D4, "'+44'");
MakeDword(0x4613D4);
MakeComm(0x4613D8, "'+48'");
MakeDword(0x4613D8);
MakeComm(0x4613DC, "'+4C'");
MakeDword(0x4613DC);
MakeComm(0x4613E0, "'+50'");
MakeDword(0x4613E0);
MakeComm(0x4613E4, "'+54'");
MakeDword(0x4613E4);
MakeComm(0x4613E8, "'+58'");
MakeDword(0x4613E8);
MakeComm(0x4613EC, "'+5C'");
MakeDword(0x4613EC);
MakeComm(0x4613F0, "'+60'");
MakeDword(0x4613F0);
MakeComm(0x4613F4, "'+64'");
MakeDword(0x4613F4);
MakeComm(0x4613F8, "'+68'");
MakeDword(0x4613F8);
MakeComm(0x4613FC, "'+6C'");
MakeDword(0x4613FC);
MakeComm(0x461400, "'+70'");
MakeDword(0x461400);
MakeComm(0x461404, "'+74'");
MakeDword(0x461404);
MakeComm(0x461408, "'+78'");
MakeDword(0x461408);
MakeComm(0x46140C, "'+7C'");
MakeDword(0x46140C);
MakeComm(0x461410, "'+80'");
MakeDword(0x461410);
MakeComm(0x461414, "'+84'");
MakeDword(0x461414);
MakeComm(0x461418, "'+88'");
MakeDword(0x461418);
MakeComm(0x46141C, "'+8C'");
MakeDword(0x46141C);
MakeComm(0x461420, "'+90'");
MakeDword(0x461420);
MakeComm(0x461424, "'+94'");
MakeDword(0x461424);
MakeComm(0x461428, "'+98'");
MakeDword(0x461428);
MakeComm(0x46142C, "'+9C'");
MakeDword(0x46142C);
MakeComm(0x461430, "'+A0'");
MakeDword(0x461430);
MakeComm(0x461434, "'+A4'");
MakeDword(0x461434);
MakeComm(0x461438, "'+A8'");
MakeDword(0x461438);
MakeComm(0x46143C, "'+AC'");
MakeDword(0x46143C);
MakeComm(0x461440, "'+B0'");
MakeDword(0x461440);
MakeComm(0x461444, "'+B4'");
MakeDword(0x461444);
MakeComm(0x461448, "'+B8'");
MakeDword(0x461448);
MakeComm(0x46144C, "'+BC'");
MakeDword(0x46144C);
MakeComm(0x461450, "'+C0'");
MakeDword(0x461450);
MakeComm(0x461454, "'+C4'");
MakeDword(0x461454);
MakeComm(0x461458, "'+C8'");
MakeDword(0x461458);
MakeComm(0x46145C, "'+CC'");
MakeDword(0x46145C);
MakeComm(0x461460, "'+D0'");
MakeDword(0x461460);
MakeComm(0x461464, "'+D4'");
MakeDword(0x461464);
MakeComm(0x461468, "'+D8'");
MakeDword(0x461468);
MakeComm(0x46146C, "'+DC'");
MakeDword(0x46146C);
MakeComm(0x461470, "'+E0'");
MakeDword(0x461470);
MakeUnkn(0x46148C, 1);
MakeNameEx(0x46148C, "RTTI_46148C_Class_TCustomFrame", 0);
MakeDword(0x46148C);
MakeUnkn(0x461490, 1);
MakeNameEx(0x461490, "", 0);
MakeByte(0x461490);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461491, 0x46149E);
MakeDword(0x46149E);
MakeDword(0x4614A2);
MakeWord(0x4614A6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4614A8, 0x4614AE);
MakeWord(0x4614AE);
MakeUnkn(0x4614B0, 1);
MakeNameEx(0x4614B0, "VMT_4614B0_TFrame", 0);
MakeDword(0x4614B0);
MakeDword(0x4614B4);
MakeDword(0x4614B8);
MakeDword(0x4614BC);
MakeDword(0x4614C0);
MakeDword(0x4614C4);
MakeDword(0x4614C8);
MakeDword(0x4614CC);
MakeDword(0x4614D0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4615E0, 0x4615E7);
MakeDword(0x4614D4);
MakeDword(0x4614D8);
MakeDword(0x4614DC);
MakeDword(0x4614E0);
MakeDword(0x4614E4);
MakeDword(0x4614E8);
MakeDword(0x4614EC);
MakeDword(0x4614F0);
MakeDword(0x4614F4);
MakeDword(0x4614F8);
MakeComm(0x4614FC, "'+0'");
MakeDword(0x4614FC);
MakeComm(0x461500, "'+4'");
MakeDword(0x461500);
MakeComm(0x461504, "'+8'");
MakeDword(0x461504);
MakeComm(0x461508, "'+C'");
MakeDword(0x461508);
MakeComm(0x46150C, "'+10'");
MakeDword(0x46150C);
MakeComm(0x461510, "'+14'");
MakeDword(0x461510);
MakeComm(0x461514, "'+18'");
MakeDword(0x461514);
MakeComm(0x461518, "'+1C'");
MakeDword(0x461518);
MakeComm(0x46151C, "'+20'");
MakeDword(0x46151C);
MakeComm(0x461520, "'+24'");
MakeDword(0x461520);
MakeComm(0x461524, "'+28'");
MakeDword(0x461524);
MakeComm(0x461528, "'+2C'");
MakeDword(0x461528);
MakeComm(0x46152C, "'+30'");
MakeDword(0x46152C);
MakeComm(0x461530, "'+34'");
MakeDword(0x461530);
MakeComm(0x461534, "'+38'");
MakeDword(0x461534);
MakeComm(0x461538, "'+3C'");
MakeDword(0x461538);
MakeComm(0x46153C, "'+40'");
MakeDword(0x46153C);
MakeComm(0x461540, "'+44'");
MakeDword(0x461540);
MakeComm(0x461544, "'+48'");
MakeDword(0x461544);
MakeComm(0x461548, "'+4C'");
MakeDword(0x461548);
MakeComm(0x46154C, "'+50'");
MakeDword(0x46154C);
MakeComm(0x461550, "'+54'");
MakeDword(0x461550);
MakeComm(0x461554, "'+58'");
MakeDword(0x461554);
MakeComm(0x461558, "'+5C'");
MakeDword(0x461558);
MakeComm(0x46155C, "'+60'");
MakeDword(0x46155C);
MakeComm(0x461560, "'+64'");
MakeDword(0x461560);
MakeComm(0x461564, "'+68'");
MakeDword(0x461564);
MakeComm(0x461568, "'+6C'");
MakeDword(0x461568);
MakeComm(0x46156C, "'+70'");
MakeDword(0x46156C);
MakeComm(0x461570, "'+74'");
MakeDword(0x461570);
MakeComm(0x461574, "'+78'");
MakeDword(0x461574);
MakeComm(0x461578, "'+7C'");
MakeDword(0x461578);
MakeComm(0x46157C, "'+80'");
MakeDword(0x46157C);
MakeComm(0x461580, "'+84'");
MakeDword(0x461580);
MakeComm(0x461584, "'+88'");
MakeDword(0x461584);
MakeComm(0x461588, "'+8C'");
MakeDword(0x461588);
MakeComm(0x46158C, "'+90'");
MakeDword(0x46158C);
MakeComm(0x461590, "'+94'");
MakeDword(0x461590);
MakeComm(0x461594, "'+98'");
MakeDword(0x461594);
MakeComm(0x461598, "'+9C'");
MakeDword(0x461598);
MakeComm(0x46159C, "'+A0'");
MakeDword(0x46159C);
MakeComm(0x4615A0, "'+A4'");
MakeDword(0x4615A0);
MakeComm(0x4615A4, "'+A8'");
MakeDword(0x4615A4);
MakeComm(0x4615A8, "'+AC'");
MakeDword(0x4615A8);
MakeComm(0x4615AC, "'+B0'");
MakeDword(0x4615AC);
MakeComm(0x4615B0, "'+B4'");
MakeDword(0x4615B0);
MakeComm(0x4615B4, "'+B8'");
MakeDword(0x4615B4);
MakeComm(0x4615B8, "'+BC'");
MakeDword(0x4615B8);
MakeComm(0x4615BC, "'+C0'");
MakeDword(0x4615BC);
MakeComm(0x4615C0, "'+C4'");
MakeDword(0x4615C0);
MakeComm(0x4615C4, "'+C8'");
MakeDword(0x4615C4);
MakeComm(0x4615C8, "'+CC'");
MakeDword(0x4615C8);
MakeComm(0x4615CC, "'+D0'");
MakeDword(0x4615CC);
MakeComm(0x4615D0, "'+D4'");
MakeDword(0x4615D0);
MakeComm(0x4615D4, "'+D8'");
MakeDword(0x4615D4);
MakeComm(0x4615D8, "'+DC'");
MakeDword(0x4615D8);
MakeComm(0x4615DC, "'+E0'");
MakeDword(0x4615DC);
MakeUnkn(0x4615E8, 1);
MakeNameEx(0x4615E8, "RTTI_4615E8_Class_TFrame", 0);
MakeDword(0x4615E8);
MakeUnkn(0x4615EC, 1);
MakeNameEx(0x4615EC, "", 0);
MakeByte(0x4615EC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4615ED, 0x4615F4);
MakeDword(0x4615F4);
MakeDword(0x4615F8);
MakeWord(0x4615FC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4615FE, 0x461604);
MakeWord(0x461604);
MakeDword(0x461606);
MakeDword(0x46160A);
MakeDword(0x46160E);
MakeDword(0x461612);
MakeDword(0x461616);
MakeDword(0x46161A);
MakeWord(0x46161E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461620, 0x461626);
MakeDword(0x461626);
MakeDword(0x46162A);
MakeDword(0x46162E);
MakeDword(0x461632);
MakeDword(0x461636);
MakeDword(0x46163A);
MakeWord(0x46163E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461640, 0x461648);
MakeDword(0x461648);
MakeDword(0x46164C);
MakeDword(0x461650);
MakeDword(0x461654);
MakeDword(0x461658);
MakeDword(0x46165C);
MakeWord(0x461660);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461662, 0x46166D);
MakeDword(0x46166D);
MakeDword(0x461671);
MakeDword(0x461675);
MakeDword(0x461679);
MakeDword(0x46167D);
MakeDword(0x461681);
MakeWord(0x461685);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461687, 0x461690);
MakeDword(0x461690);
MakeDword(0x461694);
MakeDword(0x461698);
MakeDword(0x46169C);
MakeDword(0x4616A0);
MakeDword(0x4616A4);
MakeWord(0x4616A8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4616AA, 0x4616B3);
MakeDword(0x4616B3);
MakeDword(0x4616B7);
MakeDword(0x4616BB);
MakeDword(0x4616BF);
MakeDword(0x4616C3);
MakeDword(0x4616C7);
MakeWord(0x4616CB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4616CD, 0x4616D9);
MakeDword(0x4616D9);
MakeDword(0x4616DD);
MakeDword(0x4616E1);
MakeDword(0x4616E5);
MakeDword(0x4616E9);
MakeDword(0x4616ED);
MakeWord(0x4616F1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4616F3, 0x4616FC);
MakeDword(0x4616FC);
MakeDword(0x461700);
MakeDword(0x461704);
MakeDword(0x461708);
MakeDword(0x46170C);
MakeDword(0x461710);
MakeWord(0x461714);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461716, 0x461721);
MakeDword(0x461721);
MakeDword(0x461725);
MakeDword(0x461729);
MakeDword(0x46172D);
MakeDword(0x461731);
MakeDword(0x461735);
MakeWord(0x461739);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46173B, 0x461744);
MakeDword(0x461744);
MakeDword(0x461748);
MakeDword(0x46174C);
MakeDword(0x461750);
MakeDword(0x461754);
MakeDword(0x461758);
MakeWord(0x46175C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46175E, 0x461767);
MakeDword(0x461767);
MakeDword(0x46176B);
MakeDword(0x46176F);
MakeDword(0x461773);
MakeDword(0x461777);
MakeDword(0x46177B);
MakeWord(0x46177F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461781, 0x461789);
MakeDword(0x461789);
MakeDword(0x46178D);
MakeDword(0x461791);
MakeDword(0x461795);
MakeDword(0x461799);
MakeDword(0x46179D);
MakeWord(0x4617A1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4617A3, 0x4617A9);
MakeDword(0x4617A9);
MakeDword(0x4617AD);
MakeDword(0x4617B1);
MakeDword(0x4617B5);
MakeDword(0x4617B9);
MakeDword(0x4617BD);
MakeWord(0x4617C1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4617C3, 0x4617C9);
MakeDword(0x4617C9);
MakeDword(0x4617CD);
MakeDword(0x4617D1);
MakeDword(0x4617D5);
MakeDword(0x4617D9);
MakeDword(0x4617DD);
MakeWord(0x4617E1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4617E3, 0x4617E8);
MakeDword(0x4617E8);
MakeDword(0x4617EC);
MakeDword(0x4617F0);
MakeDword(0x4617F4);
MakeDword(0x4617F8);
MakeDword(0x4617FC);
MakeWord(0x461800);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461802, 0x46180A);
MakeDword(0x46180A);
MakeDword(0x46180E);
MakeDword(0x461812);
MakeDword(0x461816);
MakeDword(0x46181A);
MakeDword(0x46181E);
MakeWord(0x461822);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461824, 0x461835);
MakeDword(0x461835);
MakeDword(0x461839);
MakeDword(0x46183D);
MakeDword(0x461841);
MakeDword(0x461845);
MakeDword(0x461849);
MakeWord(0x46184D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46184F, 0x46185E);
MakeDword(0x46185E);
MakeDword(0x461862);
MakeDword(0x461866);
MakeDword(0x46186A);
MakeDword(0x46186E);
MakeDword(0x461872);
MakeWord(0x461876);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461878, 0x461884);
MakeDword(0x461884);
MakeDword(0x461888);
MakeDword(0x46188C);
MakeDword(0x461890);
MakeDword(0x461894);
MakeDword(0x461898);
MakeWord(0x46189C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46189E, 0x4618AA);
MakeDword(0x4618AA);
MakeDword(0x4618AE);
MakeDword(0x4618B2);
MakeDword(0x4618B6);
MakeDword(0x4618BA);
MakeDword(0x4618BE);
MakeWord(0x4618C2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4618C4, 0x4618CF);
MakeDword(0x4618CF);
MakeDword(0x4618D3);
MakeDword(0x4618D7);
MakeDword(0x4618DB);
MakeDword(0x4618DF);
MakeDword(0x4618E3);
MakeWord(0x4618E7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4618E9, 0x4618F8);
MakeDword(0x4618F8);
MakeDword(0x4618FC);
MakeDword(0x461900);
MakeDword(0x461904);
MakeDword(0x461908);
MakeDword(0x46190C);
MakeWord(0x461910);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461912, 0x46191C);
MakeDword(0x46191C);
MakeDword(0x461920);
MakeDword(0x461924);
MakeDword(0x461928);
MakeDword(0x46192C);
MakeDword(0x461930);
MakeWord(0x461934);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461936, 0x46193F);
MakeDword(0x46193F);
MakeDword(0x461943);
MakeDword(0x461947);
MakeDword(0x46194B);
MakeDword(0x46194F);
MakeDword(0x461953);
MakeWord(0x461957);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461959, 0x461962);
MakeDword(0x461962);
MakeDword(0x461966);
MakeDword(0x46196A);
MakeDword(0x46196E);
MakeDword(0x461972);
MakeDword(0x461976);
MakeWord(0x46197A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46197C, 0x461984);
MakeDword(0x461984);
MakeDword(0x461988);
MakeDword(0x46198C);
MakeDword(0x461990);
MakeDword(0x461994);
MakeDword(0x461998);
MakeWord(0x46199C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46199E, 0x4619A6);
MakeDword(0x4619A6);
MakeDword(0x4619AA);
MakeDword(0x4619AE);
MakeDword(0x4619B2);
MakeDword(0x4619B6);
MakeDword(0x4619BA);
MakeWord(0x4619BE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4619C0, 0x4619D4);
MakeDword(0x4619D4);
MakeDword(0x4619D8);
MakeDword(0x4619DC);
MakeDword(0x4619E0);
MakeDword(0x4619E4);
MakeDword(0x4619E8);
MakeWord(0x4619EC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4619EE, 0x4619FE);
MakeDword(0x4619FE);
MakeDword(0x461A02);
MakeDword(0x461A06);
MakeDword(0x461A0A);
MakeDword(0x461A0E);
MakeDword(0x461A12);
MakeWord(0x461A16);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461A18, 0x461A24);
MakeDword(0x461A24);
MakeDword(0x461A28);
MakeDword(0x461A2C);
MakeDword(0x461A30);
MakeDword(0x461A34);
MakeDword(0x461A38);
MakeWord(0x461A3C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461A3E, 0x461A46);
MakeDword(0x461A46);
MakeDword(0x461A4A);
MakeDword(0x461A4E);
MakeDword(0x461A52);
MakeDword(0x461A56);
MakeDword(0x461A5A);
MakeWord(0x461A5E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461A60, 0x461A74);
MakeDword(0x461A74);
MakeDword(0x461A78);
MakeDword(0x461A7C);
MakeDword(0x461A80);
MakeDword(0x461A84);
MakeDword(0x461A88);
MakeWord(0x461A8C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461A8E, 0x461A9D);
MakeDword(0x461A9D);
MakeDword(0x461AA1);
MakeDword(0x461AA5);
MakeDword(0x461AA9);
MakeDword(0x461AAD);
MakeDword(0x461AB1);
MakeWord(0x461AB5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461AB7, 0x461AC2);
MakeDword(0x461AC2);
MakeDword(0x461AC6);
MakeDword(0x461ACA);
MakeDword(0x461ACE);
MakeDword(0x461AD2);
MakeDword(0x461AD6);
MakeWord(0x461ADA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461ADC, 0x461AE7);
MakeDword(0x461AE7);
MakeDword(0x461AEB);
MakeDword(0x461AEF);
MakeDword(0x461AF3);
MakeDword(0x461AF7);
MakeDword(0x461AFB);
MakeWord(0x461AFF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461B01, 0x461B0C);
MakeDword(0x461B0C);
MakeDword(0x461B10);
MakeDword(0x461B14);
MakeDword(0x461B18);
MakeDword(0x461B1C);
MakeDword(0x461B20);
MakeWord(0x461B24);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461B26, 0x461B31);
MakeDword(0x461B31);
MakeDword(0x461B35);
MakeDword(0x461B39);
MakeDword(0x461B3D);
MakeDword(0x461B41);
MakeDword(0x461B45);
MakeWord(0x461B49);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461B4B, 0x461B56);
MakeDword(0x461B56);
MakeDword(0x461B5A);
MakeDword(0x461B5E);
MakeDword(0x461B62);
MakeDword(0x461B66);
MakeDword(0x461B6A);
MakeWord(0x461B6E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461B70, 0x461B7A);
MakeDword(0x461B7A);
MakeDword(0x461B7E);
MakeDword(0x461B82);
MakeDword(0x461B86);
MakeDword(0x461B8A);
MakeDword(0x461B8E);
MakeWord(0x461B92);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461B94, 0x461B9E);
MakeDword(0x461B9E);
MakeDword(0x461BA2);
MakeDword(0x461BA6);
MakeDword(0x461BAA);
MakeDword(0x461BAE);
MakeDword(0x461BB2);
MakeWord(0x461BB6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461BB8, 0x461BC0);
MakeDword(0x461BC0);
MakeDword(0x461BC4);
MakeDword(0x461BC8);
MakeDword(0x461BCC);
MakeDword(0x461BD0);
MakeDword(0x461BD4);
MakeWord(0x461BD8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461BDA, 0x461BE1);
MakeDword(0x461BE1);
MakeDword(0x461BE5);
MakeDword(0x461BE9);
MakeDword(0x461BED);
MakeDword(0x461BF1);
MakeDword(0x461BF5);
MakeWord(0x461BF9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461BFB, 0x461C09);
MakeDword(0x461C09);
MakeDword(0x461C0D);
MakeDword(0x461C11);
MakeDword(0x461C15);
MakeDword(0x461C19);
MakeDword(0x461C1D);
MakeWord(0x461C21);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461C23, 0x461C33);
MakeDword(0x461C33);
MakeDword(0x461C37);
MakeDword(0x461C3B);
MakeDword(0x461C3F);
MakeDword(0x461C43);
MakeDword(0x461C47);
MakeWord(0x461C4B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461C4D, 0x461C59);
MakeDword(0x461C59);
MakeDword(0x461C5D);
MakeDword(0x461C61);
MakeDword(0x461C65);
MakeDword(0x461C69);
MakeDword(0x461C6D);
MakeWord(0x461C71);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461C73, 0x461C80);
MakeDword(0x461C80);
MakeDword(0x461C84);
MakeDword(0x461C88);
MakeDword(0x461C8C);
MakeDword(0x461C90);
MakeDword(0x461C94);
MakeWord(0x461C98);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461C9A, 0x461CA7);
MakeDword(0x461CA7);
MakeDword(0x461CAB);
MakeDword(0x461CAF);
MakeDword(0x461CB3);
MakeDword(0x461CB7);
MakeDword(0x461CBB);
MakeWord(0x461CBF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461CC1, 0x461CCD);
MakeDword(0x461CCD);
MakeDword(0x461CD1);
MakeDword(0x461CD5);
MakeDword(0x461CD9);
MakeDword(0x461CDD);
MakeDword(0x461CE1);
MakeWord(0x461CE5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461CE7, 0x461CF1);
MakeDword(0x461CF1);
MakeDword(0x461CF5);
MakeDword(0x461CF9);
MakeDword(0x461CFD);
MakeDword(0x461D01);
MakeDword(0x461D05);
MakeWord(0x461D09);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461D0B, 0x461D18);
MakeDword(0x461D18);
MakeDword(0x461D1C);
MakeDword(0x461D20);
MakeDword(0x461D24);
MakeDword(0x461D28);
MakeDword(0x461D2C);
MakeWord(0x461D30);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461D32, 0x461D43);
MakeDword(0x461D43);
MakeDword(0x461D47);
MakeDword(0x461D4B);
MakeDword(0x461D4F);
MakeDword(0x461D53);
MakeDword(0x461D57);
MakeWord(0x461D5B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461D5D, 0x461D6C);
MakeDword(0x461D6C);
MakeDword(0x461D70);
MakeDword(0x461D74);
MakeDword(0x461D78);
MakeDword(0x461D7C);
MakeDword(0x461D80);
MakeWord(0x461D84);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461D86, 0x461D8F);
MakeDword(0x461D8F);
MakeDword(0x461D93);
MakeDword(0x461D97);
MakeDword(0x461D9B);
MakeDword(0x461D9F);
MakeDword(0x461DA3);
MakeWord(0x461DA7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461DA9, 0x461DB5);
MakeDword(0x461DB5);
MakeDword(0x461DB9);
MakeDword(0x461DBD);
MakeDword(0x461DC1);
MakeDword(0x461DC5);
MakeDword(0x461DC9);
MakeWord(0x461DCD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461DCF, 0x461DDB);
MakeDword(0x461DDB);
MakeDword(0x461DDF);
MakeDword(0x461DE3);
MakeDword(0x461DE7);
MakeDword(0x461DEB);
MakeDword(0x461DEF);
MakeWord(0x461DF3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461DF5, 0x461DFE);
MakeUnkn(0x461E00, 1);
MakeNameEx(0x461E00, "RTTI_461E00_Interface_IDesignerHook", 0);
MakeDword(0x461E00);
MakeUnkn(0x461E04, 1);
MakeNameEx(0x461E04, "", 0);
MakeByte(0x461E04);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461E05, 0x461E13);
MakeDword(0x461E13);
MakeByte(0x461E17);
MakeByte(0x461E18);
MakeArray(0x461E18, 16);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461E28, 0x461E2E);
MakeWord(0x461E2E);
MakeWord(0x461E30);
MakeUnkn(0x461E34, 1);
MakeNameEx(0x461E34, "RTTI_461E34_Interface_IOleForm", 0);
MakeDword(0x461E34);
MakeUnkn(0x461E38, 1);
MakeNameEx(0x461E38, "", 0);
MakeByte(0x461E38);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461E39, 0x461E42);
MakeDword(0x461E42);
MakeByte(0x461E46);
MakeByte(0x461E47);
MakeArray(0x461E47, 16);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461E57, 0x461E5D);
MakeWord(0x461E5D);
MakeWord(0x461E5F);
MakeUnkn(0x461E64, 1);
MakeNameEx(0x461E64, "RTTI_461E64_DynArray_TPopupWndArray", 0);
MakeDword(0x461E64);
MakeUnkn(0x461E68, 1);
MakeNameEx(0x461E68, "", 0);
MakeByte(0x461E68);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461E69, 0x461E78);
MakeDword(0x461E78);
MakeDword(0x461E7C);
MakeDword(0x461E80);
MakeDword(0x461E84);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461E88, 0x461E8E);
MakeUnkn(0x461E90, 1);
MakeNameEx(0x461E90, "RTTI_461E90_Enumeration_TFormStyle", 0);
MakeDword(0x461E90);
MakeUnkn(0x461E94, 1);
MakeNameEx(0x461E94, "", 0);
MakeByte(0x461E94);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461E95, 0x461EA0);
MakeByte(0x461EA0);
MakeDword(0x461EA1);
MakeDword(0x461EA5);
MakeDword(0x461EA9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461EAD, 0x461EB6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461EB6, 0x461EC1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461EC1, 0x461ECB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461ECB, 0x461ED7);
MakeUnkn(0x461EE0, 1);
MakeNameEx(0x461EE0, "RTTI_461EE0_Enumeration_TBorderIcon", 0);
MakeDword(0x461EE0);
MakeUnkn(0x461EE4, 1);
MakeNameEx(0x461EE4, "", 0);
MakeByte(0x461EE4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461EE5, 0x461EF1);
MakeByte(0x461EF1);
MakeDword(0x461EF2);
MakeDword(0x461EF6);
MakeDword(0x461EFA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461EFE, 0x461F0B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461F0B, 0x461F16);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461F16, 0x461F21);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461F21, 0x461F28);
MakeUnkn(0x461F30, 1);
MakeNameEx(0x461F30, "RTTI_461F30_Set_TBorderIcons", 0);
MakeDword(0x461F30);
MakeUnkn(0x461F34, 1);
MakeNameEx(0x461F34, "", 0);
MakeByte(0x461F34);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461F35, 0x461F42);
MakeByte(0x461F42);
MakeDword(0x461F43);
MakeUnkn(0x461F48, 1);
MakeNameEx(0x461F48, "RTTI_461F48_Enumeration_TPosition", 0);
MakeDword(0x461F48);
MakeUnkn(0x461F4C, 1);
MakeNameEx(0x461F4C, "", 0);
MakeByte(0x461F4C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461F4D, 0x461F57);
MakeByte(0x461F57);
MakeDword(0x461F58);
MakeDword(0x461F5C);
MakeDword(0x461F60);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461F64, 0x461F6F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461F6F, 0x461F79);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461F79, 0x461F8A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461F8A, 0x461F9C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461F9C, 0x461FAB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461FAB, 0x461FBB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461FBB, 0x461FCC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461FCC, 0x461FDE);
MakeUnkn(0x461FE4, 1);
MakeNameEx(0x461FE4, "RTTI_461FE4_Enumeration_TDefaultMonitor", 0);
MakeDword(0x461FE4);
MakeUnkn(0x461FE8, 1);
MakeNameEx(0x461FE8, "", 0);
MakeByte(0x461FE8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x461FE9, 0x461FF9);
MakeByte(0x461FF9);
MakeDword(0x461FFA);
MakeDword(0x461FFE);
MakeDword(0x462002);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462006, 0x462010);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462010, 0x46201A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46201A, 0x462025);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462025, 0x462032);
MakeUnkn(0x462038, 1);
MakeNameEx(0x462038, "RTTI_462038_Enumeration_TPrintScale", 0);
MakeDword(0x462038);
MakeUnkn(0x46203C, 1);
MakeNameEx(0x46203C, "", 0);
MakeByte(0x46203C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46203D, 0x462049);
MakeByte(0x462049);
MakeDword(0x46204A);
MakeDword(0x46204E);
MakeDword(0x462052);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462056, 0x46205D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46205D, 0x46206C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46206C, 0x462079);
MakeUnkn(0x462080, 1);
MakeNameEx(0x462080, "RTTI_462080_Enumeration_TCloseAction", 0);
MakeDword(0x462080);
MakeUnkn(0x462084, 1);
MakeNameEx(0x462084, "", 0);
MakeByte(0x462084);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462085, 0x462092);
MakeByte(0x462092);
MakeDword(0x462093);
MakeDword(0x462097);
MakeDword(0x46209B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46209F, 0x4620A6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4620A6, 0x4620AD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4620AD, 0x4620B4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4620B4, 0x4620BF);
MakeUnkn(0x4620C8, 1);
MakeNameEx(0x4620C8, "RTTI_4620C8_Method_TCloseEvent", 0);
MakeDword(0x4620C8);
MakeUnkn(0x4620CC, 1);
MakeNameEx(0x4620CC, "", 0);
MakeByte(0x4620CC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4620CD, 0x4620D9);
MakeByte(0x4620D9);
MakeByte(0x4620DA);
MakeByte(0x4620DB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4620DC, 0x4620E3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4620E3, 0x4620EB);
MakeByte(0x4620EB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4620EC, 0x4620F3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4620F3, 0x462100);
MakeByte(0x462100);
MakeDword(0x462101);
MakeDword(0x462105);
MakeUnkn(0x46210C, 1);
MakeNameEx(0x46210C, "RTTI_46210C_Method_TCloseQueryEvent", 0);
MakeDword(0x46210C);
MakeUnkn(0x462110, 1);
MakeNameEx(0x462110, "", 0);
MakeByte(0x462110);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462111, 0x462122);
MakeByte(0x462122);
MakeByte(0x462123);
MakeByte(0x462124);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462125, 0x46212C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46212C, 0x462134);
MakeByte(0x462134);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462135, 0x46213E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46213E, 0x462146);
MakeByte(0x462146);
MakeDword(0x462147);
MakeDword(0x46214B);
MakeUnkn(0x462150, 1);
MakeNameEx(0x462150, "RTTI_462150_Method_TShortCutEvent", 0);
MakeDword(0x462150);
MakeUnkn(0x462154, 1);
MakeNameEx(0x462154, "", 0);
MakeByte(0x462154);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462155, 0x462164);
MakeByte(0x462164);
MakeByte(0x462165);
MakeByte(0x462166);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462167, 0x46216B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46216B, 0x462172);
MakeByte(0x462172);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462173, 0x46217B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46217B, 0x462183);
MakeByte(0x462183);
MakeDword(0x462184);
MakeDword(0x462188);
MakeUnkn(0x46218C, 1);
MakeNameEx(0x46218C, "RTTI_46218C_Method_THelpEvent", 0);
MakeDword(0x46218C);
MakeUnkn(0x462190, 1);
MakeNameEx(0x462190, "", 0);
MakeByte(0x462190);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462191, 0x46219C);
MakeByte(0x46219C);
MakeByte(0x46219D);
MakeByte(0x46219E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46219F, 0x4621A7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4621A7, 0x4621AC);
MakeByte(0x4621AC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4621AD, 0x4621B2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4621B2, 0x4621BA);
MakeByte(0x4621BA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4621BB, 0x4621C4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4621C4, 0x4621CC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4621CC, 0x4621D4);
MakeDword(0x4621D4);
MakeByte(0x4621D8);
MakeDword(0x4621D9);
MakeDword(0x4621DD);
MakeDword(0x4621E1);
MakeUnkn(0x4621E8, 1);
MakeNameEx(0x4621E8, "RTTI_4621E8_Enumeration_TPopupMode", 0);
MakeDword(0x4621E8);
MakeUnkn(0x4621EC, 1);
MakeNameEx(0x4621EC, "", 0);
MakeByte(0x4621EC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4621ED, 0x4621F8);
MakeByte(0x4621F8);
MakeDword(0x4621F9);
MakeDword(0x4621FD);
MakeDword(0x462201);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462205, 0x46220C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46220C, 0x462213);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462213, 0x46221E);
MakeUnkn(0x462224, 1);
MakeNameEx(0x462224, "VMT_462224_TCustomForm", 0);
MakeDword(0x462224);
MakeDword(0x462228);
MakeDword(0x46222C);
MakeDword(0x462230);
MakeUnkn(0x462374, 1);
MakeNameEx(0x462374, "TCustomForm_InitTable", 0);
MakeByte(0x462374);
MakeByte(0x462375);
MakeDword(0x462376);
MakeDword(0x46237A);
MakeDword(0x46237E);
MakeDword(0x462382);
MakeDword(0x462386);
MakeDword(0x46238A);
MakeDword(0x46238E);
MakeDword(0x462392);
MakeDword(0x462396);
MakeDword(0x46239A);
MakeDword(0x462234);
MakeDword(0x462238);
MakeDword(0x46223C);
MakeDword(0x462240);
MakeUnkn(0x46239E, 1);
MakeNameEx(0x46239E, "TCustomForm_DynamicTable", 0);
MakeWord(0x46239E);
MakeWord(0x4623A0);
MakeWord(0x4623A2);
MakeWord(0x4623A4);
MakeWord(0x4623A6);
MakeWord(0x4623A8);
MakeWord(0x4623AA);
MakeWord(0x4623AC);
MakeWord(0x4623AE);
MakeWord(0x4623B0);
MakeWord(0x4623B2);
MakeWord(0x4623B4);
MakeWord(0x4623B6);
MakeWord(0x4623B8);
MakeWord(0x4623BA);
MakeWord(0x4623BC);
MakeWord(0x4623BE);
MakeWord(0x4623C0);
MakeWord(0x4623C2);
MakeWord(0x4623C4);
MakeWord(0x4623C6);
MakeWord(0x4623C8);
MakeWord(0x4623CA);
MakeWord(0x4623CC);
MakeWord(0x4623CE);
MakeWord(0x4623D0);
MakeWord(0x4623D2);
MakeWord(0x4623D4);
MakeWord(0x4623D6);
MakeWord(0x4623D8);
MakeWord(0x4623DA);
MakeWord(0x4623DC);
MakeWord(0x4623DE);
MakeWord(0x4623E0);
MakeWord(0x4623E2);
MakeWord(0x4623E4);
MakeWord(0x4623E6);
MakeWord(0x4623E8);
MakeWord(0x4623EA);
MakeWord(0x4623EC);
MakeWord(0x4623EE);
MakeWord(0x4623F0);
MakeWord(0x4623F2);
MakeWord(0x4623F4);
MakeWord(0x4623F6);
MakeWord(0x4623F8);
MakeWord(0x4623FA);
MakeWord(0x4623FC);
MakeWord(0x4623FE);
MakeWord(0x462400);
MakeWord(0x462402);
MakeWord(0x462404);
MakeWord(0x462406);
MakeWord(0x462408);
MakeWord(0x46240A);
MakeWord(0x46240C);
MakeWord(0x46240E);
MakeWord(0x462410);
MakeWord(0x462412);
MakeWord(0x462414);
MakeWord(0x462416);
MakeWord(0x462418);
MakeWord(0x46241A);
MakeWord(0x46241C);
MakeWord(0x46241E);
MakeWord(0x462420);
MakeWord(0x462422);
MakeWord(0x462424);
MakeDword(0x462426);
MakeDword(0x46242A);
MakeDword(0x46242E);
MakeDword(0x462432);
MakeDword(0x462436);
MakeDword(0x46243A);
MakeDword(0x46243E);
MakeDword(0x462442);
MakeDword(0x462446);
MakeDword(0x46244A);
MakeDword(0x46244E);
MakeDword(0x462452);
MakeDword(0x462456);
MakeDword(0x46245A);
MakeDword(0x46245E);
MakeDword(0x462462);
MakeDword(0x462466);
MakeDword(0x46246A);
MakeDword(0x46246E);
MakeDword(0x462472);
MakeDword(0x462476);
MakeDword(0x46247A);
MakeDword(0x46247E);
MakeDword(0x462482);
MakeDword(0x462486);
MakeDword(0x46248A);
MakeDword(0x46248E);
MakeDword(0x462492);
MakeDword(0x462496);
MakeDword(0x46249A);
MakeDword(0x46249E);
MakeDword(0x4624A2);
MakeDword(0x4624A6);
MakeDword(0x4624AA);
MakeDword(0x4624AE);
MakeDword(0x4624B2);
MakeDword(0x4624B6);
MakeDword(0x4624BA);
MakeDword(0x4624BE);
MakeDword(0x4624C2);
MakeDword(0x4624C6);
MakeDword(0x4624CA);
MakeDword(0x4624CE);
MakeDword(0x4624D2);
MakeDword(0x4624D6);
MakeDword(0x4624DA);
MakeDword(0x4624DE);
MakeDword(0x4624E2);
MakeDword(0x4624E6);
MakeDword(0x4624EA);
MakeDword(0x4624EE);
MakeDword(0x4624F2);
MakeDword(0x4624F6);
MakeDword(0x4624FA);
MakeDword(0x4624FE);
MakeDword(0x462502);
MakeDword(0x462506);
MakeDword(0x46250A);
MakeDword(0x46250E);
MakeDword(0x462512);
MakeDword(0x462516);
MakeDword(0x46251A);
MakeDword(0x46251E);
MakeDword(0x462522);
MakeDword(0x462526);
MakeDword(0x46252A);
MakeDword(0x46252E);
MakeDword(0x462244);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462532, 0x46253E);
MakeDword(0x462248);
MakeDword(0x46224C);
MakeDword(0x462250);
MakeDword(0x462254);
MakeDword(0x462258);
MakeDword(0x46225C);
MakeDword(0x462260);
MakeDword(0x462264);
MakeDword(0x462268);
MakeDword(0x46226C);
MakeComm(0x462270, "'+0'");
MakeDword(0x462270);
MakeComm(0x462274, "'+4'");
MakeDword(0x462274);
MakeComm(0x462278, "'+8'");
MakeDword(0x462278);
MakeComm(0x46227C, "'+C'");
MakeDword(0x46227C);
MakeComm(0x462280, "'+10'");
MakeDword(0x462280);
MakeComm(0x462284, "'+14'");
MakeDword(0x462284);
MakeComm(0x462288, "'+18'");
MakeDword(0x462288);
MakeComm(0x46228C, "'+1C'");
MakeDword(0x46228C);
MakeComm(0x462290, "'+20'");
MakeDword(0x462290);
MakeComm(0x462294, "'+24'");
MakeDword(0x462294);
MakeComm(0x462298, "'+28'");
MakeDword(0x462298);
MakeComm(0x46229C, "'+2C'");
MakeDword(0x46229C);
MakeComm(0x4622A0, "'+30'");
MakeDword(0x4622A0);
MakeComm(0x4622A4, "'+34'");
MakeDword(0x4622A4);
MakeComm(0x4622A8, "'+38'");
MakeDword(0x4622A8);
MakeComm(0x4622AC, "'+3C'");
MakeDword(0x4622AC);
MakeComm(0x4622B0, "'+40'");
MakeDword(0x4622B0);
MakeComm(0x4622B4, "'+44'");
MakeDword(0x4622B4);
MakeComm(0x4622B8, "'+48'");
MakeDword(0x4622B8);
MakeComm(0x4622BC, "'+4C'");
MakeDword(0x4622BC);
MakeComm(0x4622C0, "'+50'");
MakeDword(0x4622C0);
MakeComm(0x4622C4, "'+54'");
MakeDword(0x4622C4);
MakeComm(0x4622C8, "'+58'");
MakeDword(0x4622C8);
MakeComm(0x4622CC, "'+5C'");
MakeDword(0x4622CC);
MakeComm(0x4622D0, "'+60'");
MakeDword(0x4622D0);
MakeComm(0x4622D4, "'+64'");
MakeDword(0x4622D4);
MakeComm(0x4622D8, "'+68'");
MakeDword(0x4622D8);
MakeComm(0x4622DC, "'+6C'");
MakeDword(0x4622DC);
MakeComm(0x4622E0, "'+70'");
MakeDword(0x4622E0);
MakeComm(0x4622E4, "'+74'");
MakeDword(0x4622E4);
MakeComm(0x4622E8, "'+78'");
MakeDword(0x4622E8);
MakeComm(0x4622EC, "'+7C'");
MakeDword(0x4622EC);
MakeComm(0x4622F0, "'+80'");
MakeDword(0x4622F0);
MakeComm(0x4622F4, "'+84'");
MakeDword(0x4622F4);
MakeComm(0x4622F8, "'+88'");
MakeDword(0x4622F8);
MakeComm(0x4622FC, "'+8C'");
MakeDword(0x4622FC);
MakeComm(0x462300, "'+90'");
MakeDword(0x462300);
MakeComm(0x462304, "'+94'");
MakeDword(0x462304);
MakeComm(0x462308, "'+98'");
MakeDword(0x462308);
MakeComm(0x46230C, "'+9C'");
MakeDword(0x46230C);
MakeComm(0x462310, "'+A0'");
MakeDword(0x462310);
MakeComm(0x462314, "'+A4'");
MakeDword(0x462314);
MakeComm(0x462318, "'+A8'");
MakeDword(0x462318);
MakeComm(0x46231C, "'+AC'");
MakeDword(0x46231C);
MakeComm(0x462320, "'+B0'");
MakeDword(0x462320);
MakeComm(0x462324, "'+B4'");
MakeDword(0x462324);
MakeComm(0x462328, "'+B8'");
MakeDword(0x462328);
MakeComm(0x46232C, "'+BC'");
MakeDword(0x46232C);
MakeComm(0x462330, "'+C0'");
MakeDword(0x462330);
MakeComm(0x462334, "'+C4'");
MakeDword(0x462334);
MakeComm(0x462338, "'+C8'");
MakeDword(0x462338);
MakeComm(0x46233C, "'+CC'");
MakeDword(0x46233C);
MakeComm(0x462340, "'+D0'");
MakeDword(0x462340);
MakeComm(0x462344, "'+D4'");
MakeDword(0x462344);
MakeComm(0x462348, "'+D8'");
MakeDword(0x462348);
MakeComm(0x46234C, "'+DC'");
MakeDword(0x46234C);
MakeComm(0x462350, "'+E0'");
MakeDword(0x462350);
MakeComm(0x462354, "'+E4'");
MakeDword(0x462354);
MakeComm(0x462358, "'+E8'");
MakeDword(0x462358);
MakeComm(0x46235C, "'+EC'");
MakeDword(0x46235C);
MakeComm(0x462360, "'+F0'");
MakeDword(0x462360);
MakeComm(0x462364, "'+F4'");
MakeDword(0x462364);
MakeComm(0x462368, "'+F8'");
MakeDword(0x462368);
MakeComm(0x46236C, "'+FC'");
MakeDword(0x46236C);
MakeComm(0x462370, "'+100'");
MakeDword(0x462370);
MakeUnkn(0x462540, 1);
MakeNameEx(0x462540, "RTTI_462540_Class_TCustomForm", 0);
MakeDword(0x462540);
MakeUnkn(0x462544, 1);
MakeNameEx(0x462544, "", 0);
MakeByte(0x462544);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462545, 0x462551);
MakeDword(0x462551);
MakeDword(0x462555);
MakeWord(0x462559);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46255B, 0x462561);
MakeWord(0x462561);
MakeDword(0x462563);
MakeDword(0x462567);
MakeDword(0x46256B);
MakeDword(0x46256F);
MakeDword(0x462573);
MakeDword(0x462577);
MakeWord(0x46257B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46257D, 0x462582);
MakeDword(0x462582);
MakeDword(0x462586);
MakeDword(0x46258A);
MakeDword(0x46258E);
MakeDword(0x462592);
MakeDword(0x462596);
MakeWord(0x46259A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46259C, 0x4625A0);
MakeUnkn(0x4625A0, 1);
MakeNameEx(0x4625A0, "VMT_4625A0_TForm", 0);
MakeDword(0x4625A0);
MakeDword(0x4625A4);
MakeDword(0x4625A8);
MakeDword(0x4625AC);
MakeDword(0x4625B0);
MakeDword(0x4625B4);
MakeDword(0x4625B8);
MakeDword(0x4625BC);
MakeDword(0x4625C0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4626F0, 0x4626F6);
MakeDword(0x4625C4);
MakeDword(0x4625C8);
MakeDword(0x4625CC);
MakeDword(0x4625D0);
MakeDword(0x4625D4);
MakeDword(0x4625D8);
MakeDword(0x4625DC);
MakeDword(0x4625E0);
MakeDword(0x4625E4);
MakeDword(0x4625E8);
MakeComm(0x4625EC, "'+0'");
MakeDword(0x4625EC);
MakeComm(0x4625F0, "'+4'");
MakeDword(0x4625F0);
MakeComm(0x4625F4, "'+8'");
MakeDword(0x4625F4);
MakeComm(0x4625F8, "'+C'");
MakeDword(0x4625F8);
MakeComm(0x4625FC, "'+10'");
MakeDword(0x4625FC);
MakeComm(0x462600, "'+14'");
MakeDword(0x462600);
MakeComm(0x462604, "'+18'");
MakeDword(0x462604);
MakeComm(0x462608, "'+1C'");
MakeDword(0x462608);
MakeComm(0x46260C, "'+20'");
MakeDword(0x46260C);
MakeComm(0x462610, "'+24'");
MakeDword(0x462610);
MakeComm(0x462614, "'+28'");
MakeDword(0x462614);
MakeComm(0x462618, "'+2C'");
MakeDword(0x462618);
MakeComm(0x46261C, "'+30'");
MakeDword(0x46261C);
MakeComm(0x462620, "'+34'");
MakeDword(0x462620);
MakeComm(0x462624, "'+38'");
MakeDword(0x462624);
MakeComm(0x462628, "'+3C'");
MakeDword(0x462628);
MakeComm(0x46262C, "'+40'");
MakeDword(0x46262C);
MakeComm(0x462630, "'+44'");
MakeDword(0x462630);
MakeComm(0x462634, "'+48'");
MakeDword(0x462634);
MakeComm(0x462638, "'+4C'");
MakeDword(0x462638);
MakeComm(0x46263C, "'+50'");
MakeDword(0x46263C);
MakeComm(0x462640, "'+54'");
MakeDword(0x462640);
MakeComm(0x462644, "'+58'");
MakeDword(0x462644);
MakeComm(0x462648, "'+5C'");
MakeDword(0x462648);
MakeComm(0x46264C, "'+60'");
MakeDword(0x46264C);
MakeComm(0x462650, "'+64'");
MakeDword(0x462650);
MakeComm(0x462654, "'+68'");
MakeDword(0x462654);
MakeComm(0x462658, "'+6C'");
MakeDword(0x462658);
MakeComm(0x46265C, "'+70'");
MakeDword(0x46265C);
MakeComm(0x462660, "'+74'");
MakeDword(0x462660);
MakeComm(0x462664, "'+78'");
MakeDword(0x462664);
MakeComm(0x462668, "'+7C'");
MakeDword(0x462668);
MakeComm(0x46266C, "'+80'");
MakeDword(0x46266C);
MakeComm(0x462670, "'+84'");
MakeDword(0x462670);
MakeComm(0x462674, "'+88'");
MakeDword(0x462674);
MakeComm(0x462678, "'+8C'");
MakeDword(0x462678);
MakeComm(0x46267C, "'+90'");
MakeDword(0x46267C);
MakeComm(0x462680, "'+94'");
MakeDword(0x462680);
MakeComm(0x462684, "'+98'");
MakeDword(0x462684);
MakeComm(0x462688, "'+9C'");
MakeDword(0x462688);
MakeComm(0x46268C, "'+A0'");
MakeDword(0x46268C);
MakeComm(0x462690, "'+A4'");
MakeDword(0x462690);
MakeComm(0x462694, "'+A8'");
MakeDword(0x462694);
MakeComm(0x462698, "'+AC'");
MakeDword(0x462698);
MakeComm(0x46269C, "'+B0'");
MakeDword(0x46269C);
MakeComm(0x4626A0, "'+B4'");
MakeDword(0x4626A0);
MakeComm(0x4626A4, "'+B8'");
MakeDword(0x4626A4);
MakeComm(0x4626A8, "'+BC'");
MakeDword(0x4626A8);
MakeComm(0x4626AC, "'+C0'");
MakeDword(0x4626AC);
MakeComm(0x4626B0, "'+C4'");
MakeDword(0x4626B0);
MakeComm(0x4626B4, "'+C8'");
MakeDword(0x4626B4);
MakeComm(0x4626B8, "'+CC'");
MakeDword(0x4626B8);
MakeComm(0x4626BC, "'+D0'");
MakeDword(0x4626BC);
MakeComm(0x4626C0, "'+D4'");
MakeDword(0x4626C0);
MakeComm(0x4626C4, "'+D8'");
MakeDword(0x4626C4);
MakeComm(0x4626C8, "'+DC'");
MakeDword(0x4626C8);
MakeComm(0x4626CC, "'+E0'");
MakeDword(0x4626CC);
MakeComm(0x4626D0, "'+E4'");
MakeDword(0x4626D0);
MakeComm(0x4626D4, "'+E8'");
MakeDword(0x4626D4);
MakeComm(0x4626D8, "'+EC'");
MakeDword(0x4626D8);
MakeComm(0x4626DC, "'+F0'");
MakeDword(0x4626DC);
MakeComm(0x4626E0, "'+F4'");
MakeDword(0x4626E0);
MakeComm(0x4626E4, "'+F8'");
MakeDword(0x4626E4);
MakeComm(0x4626E8, "'+FC'");
MakeDword(0x4626E8);
MakeComm(0x4626EC, "'+100'");
MakeDword(0x4626EC);
MakeUnkn(0x4626F8, 1);
MakeNameEx(0x4626F8, "RTTI_4626F8_Class_TForm", 0);
MakeDword(0x4626F8);
MakeUnkn(0x4626FC, 1);
MakeNameEx(0x4626FC, "", 0);
MakeByte(0x4626FC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4626FD, 0x462703);
MakeDword(0x462703);
MakeDword(0x462707);
MakeWord(0x46270B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46270D, 0x462713);
MakeWord(0x462713);
MakeDword(0x462715);
MakeDword(0x462719);
MakeDword(0x46271D);
MakeDword(0x462721);
MakeDword(0x462725);
MakeDword(0x462729);
MakeWord(0x46272D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46272F, 0x462736);
MakeDword(0x462736);
MakeDword(0x46273A);
MakeDword(0x46273E);
MakeDword(0x462742);
MakeDword(0x462746);
MakeDword(0x46274A);
MakeWord(0x46274E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462750, 0x46275E);
MakeDword(0x46275E);
MakeDword(0x462762);
MakeDword(0x462766);
MakeDword(0x46276A);
MakeDword(0x46276E);
MakeDword(0x462772);
MakeWord(0x462776);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462778, 0x46277E);
MakeDword(0x46277E);
MakeDword(0x462782);
MakeDword(0x462786);
MakeDword(0x46278A);
MakeDword(0x46278E);
MakeDword(0x462792);
MakeWord(0x462796);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462798, 0x4627A3);
MakeDword(0x4627A3);
MakeDword(0x4627A7);
MakeDword(0x4627AB);
MakeDword(0x4627AF);
MakeDword(0x4627B3);
MakeDword(0x4627B7);
MakeWord(0x4627BB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4627BD, 0x4627CD);
MakeDword(0x4627CD);
MakeDword(0x4627D1);
MakeDword(0x4627D5);
MakeDword(0x4627D9);
MakeDword(0x4627DD);
MakeDword(0x4627E1);
MakeWord(0x4627E5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4627E7, 0x4627EF);
MakeDword(0x4627EF);
MakeDword(0x4627F3);
MakeDword(0x4627F7);
MakeDword(0x4627FB);
MakeDword(0x4627FF);
MakeDword(0x462803);
MakeWord(0x462807);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462809, 0x462814);
MakeDword(0x462814);
MakeDword(0x462818);
MakeDword(0x46281C);
MakeDword(0x462820);
MakeDword(0x462824);
MakeDword(0x462828);
MakeWord(0x46282C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46282E, 0x462837);
MakeDword(0x462837);
MakeDword(0x46283B);
MakeDword(0x46283F);
MakeDword(0x462843);
MakeDword(0x462847);
MakeDword(0x46284B);
MakeWord(0x46284F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462851, 0x46285A);
MakeDword(0x46285A);
MakeDword(0x46285E);
MakeDword(0x462862);
MakeDword(0x462866);
MakeDword(0x46286A);
MakeDword(0x46286E);
MakeWord(0x462872);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462874, 0x462880);
MakeDword(0x462880);
MakeDword(0x462884);
MakeDword(0x462888);
MakeDword(0x46288C);
MakeDword(0x462890);
MakeDword(0x462894);
MakeWord(0x462898);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46289A, 0x4628A6);
MakeDword(0x4628A6);
MakeDword(0x4628AA);
MakeDword(0x4628AE);
MakeDword(0x4628B2);
MakeDword(0x4628B6);
MakeDword(0x4628BA);
MakeWord(0x4628BE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4628C0, 0x4628CC);
MakeDword(0x4628CC);
MakeDword(0x4628D0);
MakeDword(0x4628D4);
MakeDword(0x4628D8);
MakeDword(0x4628DC);
MakeDword(0x4628E0);
MakeWord(0x4628E4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4628E6, 0x4628EE);
MakeDword(0x4628EE);
MakeDword(0x4628F2);
MakeDword(0x4628F6);
MakeDword(0x4628FA);
MakeDword(0x4628FE);
MakeDword(0x462902);
MakeWord(0x462906);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462908, 0x462915);
MakeDword(0x462915);
MakeDword(0x462919);
MakeDword(0x46291D);
MakeDword(0x462921);
MakeDword(0x462925);
MakeDword(0x462929);
MakeWord(0x46292D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46292F, 0x46293B);
MakeDword(0x46293B);
MakeDword(0x46293F);
MakeDword(0x462943);
MakeDword(0x462947);
MakeDword(0x46294B);
MakeDword(0x46294F);
MakeWord(0x462953);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462955, 0x46295B);
MakeDword(0x46295B);
MakeDword(0x46295F);
MakeDword(0x462963);
MakeDword(0x462967);
MakeDword(0x46296B);
MakeDword(0x46296F);
MakeWord(0x462973);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462975, 0x462986);
MakeDword(0x462986);
MakeDword(0x46298A);
MakeDword(0x46298E);
MakeDword(0x462992);
MakeDword(0x462996);
MakeDword(0x46299A);
MakeWord(0x46299E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4629A0, 0x4629B6);
MakeDword(0x4629B6);
MakeDword(0x4629BA);
MakeDword(0x4629BE);
MakeDword(0x4629C2);
MakeDword(0x4629C6);
MakeDword(0x4629CA);
MakeWord(0x4629CE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4629D0, 0x4629DC);
MakeDword(0x4629DC);
MakeDword(0x4629E0);
MakeDword(0x4629E4);
MakeDword(0x4629E8);
MakeDword(0x4629EC);
MakeDword(0x4629F0);
MakeWord(0x4629F4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4629F6, 0x4629FC);
MakeDword(0x4629FC);
MakeDword(0x462A00);
MakeDword(0x462A04);
MakeDword(0x462A08);
MakeDword(0x462A0C);
MakeDword(0x462A10);
MakeWord(0x462A14);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462A16, 0x462A25);
MakeDword(0x462A25);
MakeDword(0x462A29);
MakeDword(0x462A2D);
MakeDword(0x462A31);
MakeDword(0x462A35);
MakeDword(0x462A39);
MakeWord(0x462A3D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462A3F, 0x462A4E);
MakeDword(0x462A4E);
MakeDword(0x462A52);
MakeDword(0x462A56);
MakeDword(0x462A5A);
MakeDword(0x462A5E);
MakeDword(0x462A62);
MakeWord(0x462A66);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462A68, 0x462A71);
MakeDword(0x462A71);
MakeDword(0x462A75);
MakeDword(0x462A79);
MakeDword(0x462A7D);
MakeDword(0x462A81);
MakeDword(0x462A85);
MakeWord(0x462A89);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462A8B, 0x462A94);
MakeDword(0x462A94);
MakeDword(0x462A98);
MakeDword(0x462A9C);
MakeDword(0x462AA0);
MakeDword(0x462AA4);
MakeDword(0x462AA8);
MakeWord(0x462AAC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462AAE, 0x462AB7);
MakeDword(0x462AB7);
MakeDword(0x462ABB);
MakeDword(0x462ABF);
MakeDword(0x462AC3);
MakeDword(0x462AC7);
MakeDword(0x462ACB);
MakeWord(0x462ACF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462AD1, 0x462AD9);
MakeDword(0x462AD9);
MakeDword(0x462ADD);
MakeDword(0x462AE1);
MakeDword(0x462AE5);
MakeDword(0x462AE9);
MakeDword(0x462AED);
MakeWord(0x462AF1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462AF3, 0x462AFE);
MakeDword(0x462AFE);
MakeDword(0x462B02);
MakeDword(0x462B06);
MakeDword(0x462B0A);
MakeDword(0x462B0E);
MakeDword(0x462B12);
MakeWord(0x462B16);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462B18, 0x462B1D);
MakeDword(0x462B1D);
MakeDword(0x462B21);
MakeDword(0x462B25);
MakeDword(0x462B29);
MakeDword(0x462B2D);
MakeDword(0x462B31);
MakeWord(0x462B35);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462B37, 0x462B41);
MakeDword(0x462B41);
MakeDword(0x462B45);
MakeDword(0x462B49);
MakeDword(0x462B4D);
MakeDword(0x462B51);
MakeDword(0x462B55);
MakeWord(0x462B59);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462B5B, 0x462B62);
MakeDword(0x462B62);
MakeDword(0x462B66);
MakeDword(0x462B6A);
MakeDword(0x462B6E);
MakeDword(0x462B72);
MakeDword(0x462B76);
MakeWord(0x462B7A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462B7C, 0x462B85);
MakeDword(0x462B85);
MakeDword(0x462B89);
MakeDword(0x462B8D);
MakeDword(0x462B91);
MakeDword(0x462B95);
MakeDword(0x462B99);
MakeWord(0x462B9D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462B9F, 0x462BAD);
MakeDword(0x462BAD);
MakeDword(0x462BB1);
MakeDword(0x462BB5);
MakeDword(0x462BB9);
MakeDword(0x462BBD);
MakeDword(0x462BC1);
MakeWord(0x462BC5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462BC7, 0x462BCC);
MakeDword(0x462BCC);
MakeDword(0x462BD0);
MakeDword(0x462BD4);
MakeDword(0x462BD8);
MakeDword(0x462BDC);
MakeDword(0x462BE0);
MakeWord(0x462BE4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462BE6, 0x462BF1);
MakeDword(0x462BF1);
MakeDword(0x462BF5);
MakeDword(0x462BF9);
MakeDword(0x462BFD);
MakeDword(0x462C01);
MakeDword(0x462C05);
MakeWord(0x462C09);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462C0B, 0x462C13);
MakeDword(0x462C13);
MakeDword(0x462C17);
MakeDword(0x462C1B);
MakeDword(0x462C1F);
MakeDword(0x462C23);
MakeDword(0x462C27);
MakeWord(0x462C2B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462C2D, 0x462C32);
MakeDword(0x462C32);
MakeDword(0x462C36);
MakeDword(0x462C3A);
MakeDword(0x462C3E);
MakeDword(0x462C42);
MakeDword(0x462C46);
MakeWord(0x462C4A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462C4C, 0x462C5B);
MakeDword(0x462C5B);
MakeDword(0x462C5F);
MakeDword(0x462C63);
MakeDword(0x462C67);
MakeDword(0x462C6B);
MakeDword(0x462C6F);
MakeWord(0x462C73);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462C75, 0x462C84);
MakeDword(0x462C84);
MakeDword(0x462C88);
MakeDword(0x462C8C);
MakeDword(0x462C90);
MakeDword(0x462C94);
MakeDword(0x462C98);
MakeWord(0x462C9C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462C9E, 0x462CAD);
MakeDword(0x462CAD);
MakeDword(0x462CB1);
MakeDword(0x462CB5);
MakeDword(0x462CB9);
MakeDword(0x462CBD);
MakeDword(0x462CC1);
MakeWord(0x462CC5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462CC7, 0x462CD5);
MakeDword(0x462CD5);
MakeDword(0x462CD9);
MakeDword(0x462CDD);
MakeDword(0x462CE1);
MakeDword(0x462CE5);
MakeDword(0x462CE9);
MakeWord(0x462CED);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462CEF, 0x462CF9);
MakeDword(0x462CF9);
MakeDword(0x462CFD);
MakeDword(0x462D01);
MakeDword(0x462D05);
MakeDword(0x462D09);
MakeDword(0x462D0D);
MakeWord(0x462D11);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462D13, 0x462D1D);
MakeDword(0x462D1D);
MakeDword(0x462D21);
MakeDword(0x462D25);
MakeDword(0x462D29);
MakeDword(0x462D2D);
MakeDword(0x462D31);
MakeWord(0x462D35);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462D37, 0x462D43);
MakeDword(0x462D43);
MakeDword(0x462D47);
MakeDword(0x462D4B);
MakeDword(0x462D4F);
MakeDword(0x462D53);
MakeDword(0x462D57);
MakeWord(0x462D5B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462D5D, 0x462D66);
MakeDword(0x462D66);
MakeDword(0x462D6A);
MakeDword(0x462D6E);
MakeDword(0x462D72);
MakeDword(0x462D76);
MakeDword(0x462D7A);
MakeWord(0x462D7E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462D80, 0x462D8B);
MakeDword(0x462D8B);
MakeDword(0x462D8F);
MakeDword(0x462D93);
MakeDword(0x462D97);
MakeDword(0x462D9B);
MakeDword(0x462D9F);
MakeWord(0x462DA3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462DA5, 0x462DAC);
MakeDword(0x462DAC);
MakeDword(0x462DB0);
MakeDword(0x462DB4);
MakeDword(0x462DB8);
MakeDword(0x462DBC);
MakeDword(0x462DC0);
MakeWord(0x462DC4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462DC6, 0x462DD1);
MakeDword(0x462DD1);
MakeDword(0x462DD5);
MakeDword(0x462DD9);
MakeDword(0x462DDD);
MakeDword(0x462DE1);
MakeDword(0x462DE5);
MakeWord(0x462DE9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462DEB, 0x462DF4);
MakeDword(0x462DF4);
MakeDword(0x462DF8);
MakeDword(0x462DFC);
MakeDword(0x462E00);
MakeDword(0x462E04);
MakeDword(0x462E08);
MakeWord(0x462E0C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462E0E, 0x462E19);
MakeDword(0x462E19);
MakeDword(0x462E1D);
MakeDword(0x462E21);
MakeDword(0x462E25);
MakeDword(0x462E29);
MakeDword(0x462E2D);
MakeWord(0x462E31);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462E33, 0x462E41);
MakeDword(0x462E41);
MakeDword(0x462E45);
MakeDword(0x462E49);
MakeDword(0x462E4D);
MakeDword(0x462E51);
MakeDword(0x462E55);
MakeWord(0x462E59);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462E5B, 0x462E63);
MakeDword(0x462E63);
MakeDword(0x462E67);
MakeDword(0x462E6B);
MakeDword(0x462E6F);
MakeDword(0x462E73);
MakeDword(0x462E77);
MakeWord(0x462E7B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462E7D, 0x462E83);
MakeDword(0x462E83);
MakeDword(0x462E87);
MakeDword(0x462E8B);
MakeDword(0x462E8F);
MakeDword(0x462E93);
MakeDword(0x462E97);
MakeWord(0x462E9B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462E9D, 0x462EA9);
MakeDword(0x462EA9);
MakeDword(0x462EAD);
MakeDword(0x462EB1);
MakeDword(0x462EB5);
MakeDword(0x462EB9);
MakeDword(0x462EBD);
MakeWord(0x462EC1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462EC3, 0x462ECE);
MakeDword(0x462ECE);
MakeDword(0x462ED2);
MakeDword(0x462ED6);
MakeDword(0x462EDA);
MakeDword(0x462EDE);
MakeDword(0x462EE2);
MakeWord(0x462EE6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462EE8, 0x462EF3);
MakeDword(0x462EF3);
MakeDword(0x462EF7);
MakeDword(0x462EFB);
MakeDword(0x462EFF);
MakeDword(0x462F03);
MakeDword(0x462F07);
MakeWord(0x462F0B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462F0D, 0x462F21);
MakeDword(0x462F21);
MakeDword(0x462F25);
MakeDword(0x462F29);
MakeDword(0x462F2D);
MakeDword(0x462F31);
MakeDword(0x462F35);
MakeWord(0x462F39);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462F3B, 0x462F4B);
MakeDword(0x462F4B);
MakeDword(0x462F4F);
MakeDword(0x462F53);
MakeDword(0x462F57);
MakeDword(0x462F5B);
MakeDword(0x462F5F);
MakeWord(0x462F63);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462F65, 0x462F71);
MakeDword(0x462F71);
MakeDword(0x462F75);
MakeDword(0x462F79);
MakeDword(0x462F7D);
MakeDword(0x462F81);
MakeDword(0x462F85);
MakeWord(0x462F89);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462F8B, 0x462F93);
MakeDword(0x462F93);
MakeDword(0x462F97);
MakeDword(0x462F9B);
MakeDword(0x462F9F);
MakeDword(0x462FA3);
MakeDword(0x462FA7);
MakeWord(0x462FAB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462FAD, 0x462FB5);
MakeDword(0x462FB5);
MakeDword(0x462FB9);
MakeDword(0x462FBD);
MakeDword(0x462FC1);
MakeDword(0x462FC5);
MakeDword(0x462FC9);
MakeWord(0x462FCD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462FCF, 0x462FDC);
MakeDword(0x462FDC);
MakeDword(0x462FE0);
MakeDword(0x462FE4);
MakeDword(0x462FE8);
MakeDword(0x462FEC);
MakeDword(0x462FF0);
MakeWord(0x462FF4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x462FF6, 0x46300A);
MakeDword(0x46300A);
MakeDword(0x46300E);
MakeDword(0x463012);
MakeDword(0x463016);
MakeDword(0x46301A);
MakeDword(0x46301E);
MakeWord(0x463022);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x463024, 0x463033);
MakeDword(0x463033);
MakeDword(0x463037);
MakeDword(0x46303B);
MakeDword(0x46303F);
MakeDword(0x463043);
MakeDword(0x463047);
MakeWord(0x46304B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46304D, 0x463056);
MakeDword(0x463056);
MakeDword(0x46305A);
MakeDword(0x46305E);
MakeDword(0x463062);
MakeDword(0x463066);
MakeDword(0x46306A);
MakeWord(0x46306E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x463070, 0x46307B);
MakeDword(0x46307B);
MakeDword(0x46307F);
MakeDword(0x463083);
MakeDword(0x463087);
MakeDword(0x46308B);
MakeDword(0x46308F);
MakeWord(0x463093);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x463095, 0x46309F);
MakeDword(0x46309F);
MakeDword(0x4630A3);
MakeDword(0x4630A7);
MakeDword(0x4630AB);
MakeDword(0x4630AF);
MakeDword(0x4630B3);
MakeWord(0x4630B7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4630B9, 0x4630C6);
MakeDword(0x4630C6);
MakeDword(0x4630CA);
MakeDword(0x4630CE);
MakeDword(0x4630D2);
MakeDword(0x4630D6);
MakeDword(0x4630DA);
MakeWord(0x4630DE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4630E0, 0x4630EB);
MakeDword(0x4630EB);
MakeDword(0x4630EF);
MakeDword(0x4630F3);
MakeDword(0x4630F7);
MakeDword(0x4630FB);
MakeDword(0x4630FF);
MakeWord(0x463103);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x463105, 0x463110);
MakeDword(0x463110);
MakeDword(0x463114);
MakeDword(0x463118);
MakeDword(0x46311C);
MakeDword(0x463120);
MakeDword(0x463124);
MakeWord(0x463128);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46312A, 0x463135);
MakeDword(0x463135);
MakeDword(0x463139);
MakeDword(0x46313D);
MakeDword(0x463141);
MakeDword(0x463145);
MakeDword(0x463149);
MakeWord(0x46314D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46314F, 0x46315A);
MakeDword(0x46315A);
MakeDword(0x46315E);
MakeDword(0x463162);
MakeDword(0x463166);
MakeDword(0x46316A);
MakeDword(0x46316E);
MakeWord(0x463172);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x463174, 0x46317E);
MakeDword(0x46317E);
MakeDword(0x463182);
MakeDword(0x463186);
MakeDword(0x46318A);
MakeDword(0x46318E);
MakeDword(0x463192);
MakeWord(0x463196);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x463198, 0x4631A6);
MakeDword(0x4631A6);
MakeDword(0x4631AA);
MakeDword(0x4631AE);
MakeDword(0x4631B2);
MakeDword(0x4631B6);
MakeDword(0x4631BA);
MakeWord(0x4631BE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4631C0, 0x4631C7);
MakeDword(0x4631C7);
MakeDword(0x4631CB);
MakeDword(0x4631CF);
MakeDword(0x4631D3);
MakeDword(0x4631D7);
MakeDword(0x4631DB);
MakeWord(0x4631DF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4631E1, 0x4631E8);
MakeDword(0x4631E8);
MakeDword(0x4631EC);
MakeDword(0x4631F0);
MakeDword(0x4631F4);
MakeDword(0x4631F8);
MakeDword(0x4631FC);
MakeWord(0x463200);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x463202, 0x46320C);
MakeDword(0x46320C);
MakeDword(0x463210);
MakeDword(0x463214);
MakeDword(0x463218);
MakeDword(0x46321C);
MakeDword(0x463220);
MakeWord(0x463224);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x463226, 0x463231);
MakeDword(0x463231);
MakeDword(0x463235);
MakeDword(0x463239);
MakeDword(0x46323D);
MakeDword(0x463241);
MakeDword(0x463245);
MakeWord(0x463249);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46324B, 0x463253);
MakeDword(0x463253);
MakeDword(0x463257);
MakeDword(0x46325B);
MakeDword(0x46325F);
MakeDword(0x463263);
MakeDword(0x463267);
MakeWord(0x46326B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46326D, 0x46327D);
MakeDword(0x46327D);
MakeDword(0x463281);
MakeDword(0x463285);
MakeDword(0x463289);
MakeDword(0x46328D);
MakeDword(0x463291);
MakeWord(0x463295);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x463297, 0x4632A3);
MakeDword(0x4632A3);
MakeDword(0x4632A7);
MakeDword(0x4632AB);
MakeDword(0x4632AF);
MakeDword(0x4632B3);
MakeDword(0x4632B7);
MakeWord(0x4632BB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4632BD, 0x4632CA);
MakeDword(0x4632CA);
MakeDword(0x4632CE);
MakeDword(0x4632D2);
MakeDword(0x4632D6);
MakeDword(0x4632DA);
MakeDword(0x4632DE);
MakeWord(0x4632E2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4632E4, 0x4632F1);
MakeDword(0x4632F1);
MakeDword(0x4632F5);
MakeDword(0x4632F9);
MakeDword(0x4632FD);
MakeDword(0x463301);
MakeDword(0x463305);
MakeWord(0x463309);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46330B, 0x463317);
MakeDword(0x463317);
MakeDword(0x46331B);
MakeDword(0x46331F);
MakeDword(0x463323);
MakeDword(0x463327);
MakeDword(0x46332B);
MakeWord(0x46332F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x463331, 0x46333B);
MakeDword(0x46333B);
MakeDword(0x46333F);
MakeDword(0x463343);
MakeDword(0x463347);
MakeDword(0x46334B);
MakeDword(0x46334F);
MakeWord(0x463353);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x463355, 0x463362);
MakeDword(0x463362);
MakeDword(0x463366);
MakeDword(0x46336A);
MakeDword(0x46336E);
MakeDword(0x463372);
MakeDword(0x463376);
MakeWord(0x46337A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46337C, 0x46338D);
MakeDword(0x46338D);
MakeDword(0x463391);
MakeDword(0x463395);
MakeDword(0x463399);
MakeDword(0x46339D);
MakeDword(0x4633A1);
MakeWord(0x4633A5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4633A7, 0x4633B6);
MakeDword(0x4633B6);
MakeDword(0x4633BA);
MakeDword(0x4633BE);
MakeDword(0x4633C2);
MakeDword(0x4633C6);
MakeDword(0x4633CA);
MakeWord(0x4633CE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4633D0, 0x4633D8);
MakeDword(0x4633D8);
MakeDword(0x4633DC);
MakeDword(0x4633E0);
MakeDword(0x4633E4);
MakeDword(0x4633E8);
MakeDword(0x4633EC);
MakeWord(0x4633F0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4633F2, 0x4633FB);
MakeDword(0x4633FB);
MakeDword(0x4633FF);
MakeDword(0x463403);
MakeDword(0x463407);
MakeDword(0x46340B);
MakeDword(0x46340F);
MakeWord(0x463413);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x463415, 0x463420);
MakeDword(0x463420);
MakeDword(0x463424);
MakeDword(0x463428);
MakeDword(0x46342C);
MakeDword(0x463430);
MakeDword(0x463434);
MakeWord(0x463438);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46343A, 0x463441);
MakeDword(0x463441);
MakeDword(0x463445);
MakeDword(0x463449);
MakeDword(0x46344D);
MakeDword(0x463451);
MakeDword(0x463455);
MakeWord(0x463459);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46345B, 0x463467);
MakeDword(0x463467);
MakeDword(0x46346B);
MakeDword(0x46346F);
MakeDword(0x463473);
MakeDword(0x463477);
MakeDword(0x46347B);
MakeWord(0x46347F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x463481, 0x46348A);
MakeUnkn(0x46348C, 1);
MakeNameEx(0x46348C, "VMT_46348C_TCustomDockForm", 0);
MakeDword(0x46348C);
MakeDword(0x463490);
MakeDword(0x463494);
MakeDword(0x463498);
MakeDword(0x46349C);
MakeDword(0x4634A0);
MakeDword(0x4634A4);
MakeDword(0x4634A8);
MakeUnkn(0x4635DC, 1);
MakeNameEx(0x4635DC, "TCustomDockForm_DynamicTable", 0);
MakeWord(0x4635DC);
MakeWord(0x4635DE);
MakeWord(0x4635E0);
MakeWord(0x4635E2);
MakeWord(0x4635E4);
MakeWord(0x4635E6);
MakeWord(0x4635E8);
MakeWord(0x4635EA);
MakeWord(0x4635EC);
MakeWord(0x4635EE);
MakeDword(0x4635F0);
MakeDword(0x4635F4);
MakeDword(0x4635F8);
MakeDword(0x4635FC);
MakeDword(0x463600);
MakeDword(0x463604);
MakeDword(0x463608);
MakeDword(0x46360C);
MakeDword(0x463610);
MakeDword(0x4634AC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x463614, 0x463624);
MakeDword(0x4634B0);
MakeDword(0x4634B4);
MakeDword(0x4634B8);
MakeDword(0x4634BC);
MakeDword(0x4634C0);
MakeDword(0x4634C4);
MakeDword(0x4634C8);
MakeDword(0x4634CC);
MakeDword(0x4634D0);
MakeDword(0x4634D4);
MakeComm(0x4634D8, "'+0'");
MakeDword(0x4634D8);
MakeComm(0x4634DC, "'+4'");
MakeDword(0x4634DC);
MakeComm(0x4634E0, "'+8'");
MakeDword(0x4634E0);
MakeComm(0x4634E4, "'+C'");
MakeDword(0x4634E4);
MakeComm(0x4634E8, "'+10'");
MakeDword(0x4634E8);
MakeComm(0x4634EC, "'+14'");
MakeDword(0x4634EC);
MakeComm(0x4634F0, "'+18'");
MakeDword(0x4634F0);
MakeComm(0x4634F4, "'+1C'");
MakeDword(0x4634F4);
MakeComm(0x4634F8, "'+20'");
MakeDword(0x4634F8);
MakeComm(0x4634FC, "'+24'");
MakeDword(0x4634FC);
MakeComm(0x463500, "'+28'");
MakeDword(0x463500);
MakeComm(0x463504, "'+2C'");
MakeDword(0x463504);
MakeComm(0x463508, "'+30'");
MakeDword(0x463508);
MakeComm(0x46350C, "'+34'");
MakeDword(0x46350C);
MakeComm(0x463510, "'+38'");
MakeDword(0x463510);
MakeComm(0x463514, "'+3C'");
MakeDword(0x463514);
MakeComm(0x463518, "'+40'");
MakeDword(0x463518);
MakeComm(0x46351C, "'+44'");
MakeDword(0x46351C);
MakeComm(0x463520, "'+48'");
MakeDword(0x463520);
MakeComm(0x463524, "'+4C'");
MakeDword(0x463524);
MakeComm(0x463528, "'+50'");
MakeDword(0x463528);
MakeComm(0x46352C, "'+54'");
MakeDword(0x46352C);
MakeComm(0x463530, "'+58'");
MakeDword(0x463530);
MakeComm(0x463534, "'+5C'");
MakeDword(0x463534);
MakeComm(0x463538, "'+60'");
MakeDword(0x463538);
MakeComm(0x46353C, "'+64'");
MakeDword(0x46353C);
MakeComm(0x463540, "'+68'");
MakeDword(0x463540);
MakeComm(0x463544, "'+6C'");
MakeDword(0x463544);
MakeComm(0x463548, "'+70'");
MakeDword(0x463548);
MakeComm(0x46354C, "'+74'");
MakeDword(0x46354C);
MakeComm(0x463550, "'+78'");
MakeDword(0x463550);
MakeComm(0x463554, "'+7C'");
MakeDword(0x463554);
MakeComm(0x463558, "'+80'");
MakeDword(0x463558);
MakeComm(0x46355C, "'+84'");
MakeDword(0x46355C);
MakeComm(0x463560, "'+88'");
MakeDword(0x463560);
MakeComm(0x463564, "'+8C'");
MakeDword(0x463564);
MakeComm(0x463568, "'+90'");
MakeDword(0x463568);
MakeComm(0x46356C, "'+94'");
MakeDword(0x46356C);
MakeComm(0x463570, "'+98'");
MakeDword(0x463570);
MakeComm(0x463574, "'+9C'");
MakeDword(0x463574);
MakeComm(0x463578, "'+A0'");
MakeDword(0x463578);
MakeComm(0x46357C, "'+A4'");
MakeDword(0x46357C);
MakeComm(0x463580, "'+A8'");
MakeDword(0x463580);
MakeComm(0x463584, "'+AC'");
MakeDword(0x463584);
MakeComm(0x463588, "'+B0'");
MakeDword(0x463588);
MakeComm(0x46358C, "'+B4'");
MakeDword(0x46358C);
MakeComm(0x463590, "'+B8'");
MakeDword(0x463590);
MakeComm(0x463594, "'+BC'");
MakeDword(0x463594);
MakeComm(0x463598, "'+C0'");
MakeDword(0x463598);
MakeComm(0x46359C, "'+C4'");
MakeDword(0x46359C);
MakeComm(0x4635A0, "'+C8'");
MakeDword(0x4635A0);
MakeComm(0x4635A4, "'+CC'");
MakeDword(0x4635A4);
MakeComm(0x4635A8, "'+D0'");
MakeDword(0x4635A8);
MakeComm(0x4635AC, "'+D4'");
MakeDword(0x4635AC);
MakeComm(0x4635B0, "'+D8'");
MakeDword(0x4635B0);
MakeComm(0x4635B4, "'+DC'");
MakeDword(0x4635B4);
MakeComm(0x4635B8, "'+E0'");
MakeDword(0x4635B8);
MakeComm(0x4635BC, "'+E4'");
MakeDword(0x4635BC);
MakeComm(0x4635C0, "'+E8'");
MakeDword(0x4635C0);
MakeComm(0x4635C4, "'+EC'");
MakeDword(0x4635C4);
MakeComm(0x4635C8, "'+F0'");
MakeDword(0x4635C8);
MakeComm(0x4635CC, "'+F4'");
MakeDword(0x4635CC);
MakeComm(0x4635D0, "'+F8'");
MakeDword(0x4635D0);
MakeComm(0x4635D4, "'+FC'");
MakeDword(0x4635D4);
MakeComm(0x4635D8, "'+100'");
MakeDword(0x4635D8);
MakeUnkn(0x463624, 1);
MakeNameEx(0x463624, "RTTI_463624_Class_TCustomDockForm", 0);
MakeDword(0x463624);
MakeUnkn(0x463628, 1);
MakeNameEx(0x463628, "", 0);
MakeByte(0x463628);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x463629, 0x463639);
MakeDword(0x463639);
MakeDword(0x46363D);
MakeWord(0x463641);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x463643, 0x463649);
MakeWord(0x463649);
MakeDword(0x46364B);
MakeDword(0x46364F);
MakeDword(0x463653);
MakeDword(0x463657);
MakeDword(0x46365B);
MakeDword(0x46365F);
MakeWord(0x463663);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x463665, 0x463673);
MakeUnkn(0x463674, 1);
MakeNameEx(0x463674, "VMT_463674_TMonitor", 0);
MakeDword(0x463674);
MakeDword(0x463678);
MakeDword(0x46367C);
MakeDword(0x463680);
MakeDword(0x463684);
MakeDword(0x463688);
MakeDword(0x46368C);
MakeDword(0x463690);
MakeDword(0x463694);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4636C0, 0x4636C9);
MakeDword(0x463698);
MakeDword(0x46369C);
MakeDword(0x4636A0);
MakeDword(0x4636A4);
MakeDword(0x4636A8);
MakeDword(0x4636AC);
MakeDword(0x4636B0);
MakeDword(0x4636B4);
MakeDword(0x4636B8);
MakeDword(0x4636BC);
MakeUnkn(0x4636CC, 1);
MakeNameEx(0x4636CC, "VMT_4636CC_TScreen", 0);
MakeDword(0x4636CC);
MakeDword(0x4636D0);
MakeDword(0x4636D4);
MakeDword(0x4636D8);
MakeUnkn(0x463748, 1);
MakeNameEx(0x463748, "TScreen_InitTable", 0);
MakeByte(0x463748);
MakeByte(0x463749);
MakeDword(0x46374A);
MakeDword(0x46374E);
MakeDword(0x463752);
MakeDword(0x463756);
MakeDword(0x4636DC);
MakeDword(0x4636E0);
MakeDword(0x4636E4);
MakeDword(0x4636E8);
MakeDword(0x4636EC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46375A, 0x463762);
MakeDword(0x4636F0);
MakeDword(0x4636F4);
MakeDword(0x4636F8);
MakeDword(0x4636FC);
MakeDword(0x463700);
MakeDword(0x463704);
MakeDword(0x463708);
MakeDword(0x46370C);
MakeDword(0x463710);
MakeDword(0x463714);
MakeComm(0x463718, "'+0'");
MakeDword(0x463718);
MakeComm(0x46371C, "'+4'");
MakeDword(0x46371C);
MakeComm(0x463720, "'+8'");
MakeDword(0x463720);
MakeComm(0x463724, "'+C'");
MakeDword(0x463724);
MakeComm(0x463728, "'+10'");
MakeDword(0x463728);
MakeComm(0x46372C, "'+14'");
MakeDword(0x46372C);
MakeComm(0x463730, "'+18'");
MakeDword(0x463730);
MakeComm(0x463734, "'+1C'");
MakeDword(0x463734);
MakeComm(0x463738, "'+20'");
MakeDword(0x463738);
MakeComm(0x46373C, "'+24'");
MakeDword(0x46373C);
MakeComm(0x463740, "'+28'");
MakeDword(0x463740);
MakeComm(0x463744, "'+2C'");
MakeDword(0x463744);
MakeUnkn(0x463764, 1);
MakeNameEx(0x463764, "RTTI_463764_Class_TScreen", 0);
MakeDword(0x463764);
MakeUnkn(0x463768, 1);
MakeNameEx(0x463768, "", 0);
MakeByte(0x463768);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x463769, 0x463771);
MakeDword(0x463771);
MakeDword(0x463775);
MakeWord(0x463779);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46377B, 0x463781);
MakeWord(0x463781);
MakeUnkn(0x463784, 1);
MakeNameEx(0x463784, "RTTI_463784_Record_THintInfo", 0);
MakeDword(0x463784);
MakeUnkn(0x463788, 1);
MakeNameEx(0x463788, "", 0);
MakeByte(0x463788);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x463789, 0x463793);
MakeDword(0x463793);
MakeDword(0x463797);
MakeDword(0x46379B);
MakeDword(0x46379F);
MakeUnkn(0x4637A4, 1);
MakeNameEx(0x4637A4, "RTTI_4637A4_DynArray_TPopupFormArray", 0);
MakeDword(0x4637A4);
MakeUnkn(0x4637A8, 1);
MakeNameEx(0x4637A8, "", 0);
MakeByte(0x4637A8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4637A9, 0x4637B9);
MakeDword(0x4637B9);
MakeDword(0x4637BD);
MakeDword(0x4637C1);
MakeDword(0x4637C5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4637C9, 0x4637CF);
MakeUnkn(0x4637D0, 1);
MakeNameEx(0x4637D0, "VMT_4637D0_TApplication", 0);
MakeDword(0x4637D0);
MakeDword(0x4637D4);
MakeDword(0x4637D8);
MakeDword(0x4637DC);
MakeUnkn(0x46384C, 1);
MakeNameEx(0x46384C, "TApplication_InitTable", 0);
MakeByte(0x46384C);
MakeByte(0x46384D);
MakeDword(0x46384E);
MakeDword(0x463852);
MakeDword(0x463856);
MakeDword(0x46385A);
MakeDword(0x46385E);
MakeDword(0x463862);
MakeDword(0x463866);
MakeDword(0x46386A);
MakeDword(0x46386E);
MakeDword(0x463872);
MakeDword(0x463876);
MakeDword(0x46387A);
MakeDword(0x46387E);
MakeDword(0x463882);
MakeDword(0x463886);
MakeDword(0x46388A);
MakeDword(0x4637E0);
MakeDword(0x4637E4);
MakeDword(0x4637E8);
MakeDword(0x4637EC);
MakeDword(0x4637F0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x46388E, 0x46389B);
MakeDword(0x4637F4);
MakeDword(0x4637F8);
MakeDword(0x4637FC);
MakeDword(0x463800);
MakeDword(0x463804);
MakeDword(0x463808);
MakeDword(0x46380C);
MakeDword(0x463810);
MakeDword(0x463814);
MakeDword(0x463818);
MakeComm(0x46381C, "'+0'");
MakeDword(0x46381C);
MakeComm(0x463820, "'+4'");
MakeDword(0x463820);
MakeComm(0x463824, "'+8'");
MakeDword(0x463824);
MakeComm(0x463828, "'+C'");
MakeDword(0x463828);
MakeComm(0x46382C, "'+10'");
MakeDword(0x46382C);
MakeComm(0x463830, "'+14'");
MakeDword(0x463830);
MakeComm(0x463834, "'+18'");
MakeDword(0x463834);
MakeComm(0x463838, "'+1C'");
MakeDword(0x463838);
MakeComm(0x46383C, "'+20'");
MakeDword(0x46383C);
MakeComm(0x463840, "'+24'");
MakeDword(0x463840);
MakeComm(0x463844, "'+28'");
MakeDword(0x463844);
MakeComm(0x463848, "'+2C'");
MakeDword(0x463848);
MakeUnkn(0x46389C, 1);
MakeNameEx(0x46389C, "RTTI_46389C_Class_TApplication", 0);
MakeDword(0x46389C);
MakeUnkn(0x4638A0, 1);
MakeNameEx(0x4638A0, "", 0);
MakeByte(0x4638A0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4638A1, 0x4638AE);
MakeDword(0x4638AE);
MakeDword(0x4638B2);
MakeWord(0x4638B6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4638B8, 0x4638BE);
MakeWord(0x4638BE);
MakeUnkn(0x4638C0, 1);
MakeNameEx(0x4638C0, "SaveFocusState", 0x20);
MakeComm(0x4638C0, "'function SaveFocusState:TFocusState;'");
MakeCode(0x4638C0);
MakeFunction(0x4638C0, 0x4638C6);
MakeUnkn(0x4638C8, 1);
MakeNameEx(0x4638C8, "RestoreFocusState", 0x20);
MakeComm(0x4638C8, "'procedure RestoreFocusState(FocusState:TFocusState);'");
MakeCode(0x4638C8);
MakeFunction(0x4638C8, 0x4638CE);
MakeUnkn(0x4638D0, 1);
MakeNameEx(0x4638D0, "ShowMDIClientEdge", 0x20);
MakeComm(0x4638D0, "'procedure ShowMDIClientEdge(ClientHandle:THandle; ShowEdge:Boolean);'");
MakeCode(0x4638D0);
MakeCode(0x4638F2);
MakeCode(0x4638FC);
MakeCode(0x463917);
MakeFunction(0x4638D0, 0x46391A);
MakeUnkn(0x46391C, 1);
MakeNameEx(0x46391C, "DoneApplication", 0x20);
MakeComm(0x46391C, "'procedure DoneApplication;'");
MakeCode(0x46391C);
MakeCode(0x463933);
MakeFunction(0x46391C, 0x463954);
MakeUnkn(0x463954, 1);
MakeNameEx(0x463954, "DoDisableWindow", 0x20);
MakeComm(0x463954, "'function DoDisableWindow(Window:HWND; Data:Longint):BOOL; stdcall;'");
MakeCode(0x463954);
MakeCode(0x463999);
MakeFunction(0x463954, 0x4639A1);
MakeUnkn(0x4639A4, 1);
MakeNameEx(0x4639A4, "DisableTaskWindows", 0x20);
MakeComm(0x4639A4, "'function DisableTaskWindows(ActiveWindow:HWND):Pointer;'");
MakeCode(0x4639A4);
MakeCode(0x463A0D);
MakeCode(0x463A17);
MakeCode(0x463A30);
MakeCode(0x463A3D);
MakeCode(0x463A55);
MakeCode(0x463A5A);
MakeFunction(0x4639A4, 0x463A66);
MakeUnkn(0x463A68, 1);
MakeNameEx(0x463A68, "EnableTaskWindows", 0x20);
MakeComm(0x463A68, "'procedure EnableTaskWindows(WindowList:Pointer);'");
MakeCode(0x463A68);
MakeCode(0x463A70);
MakeCode(0x463A8A);
MakeCode(0x463A9C);
MakeFunction(0x463A68, 0x463A9F);
MakeUnkn(0x463AA0, 1);
MakeNameEx(0x463AA0, "DoFindWindow", 0x20);
MakeComm(0x463AA0, "'function DoFindWindow(Window:HWND; Param:Longint):BOOL; stdcall;'");
MakeCode(0x463AA0);
MakeCode(0x463AEA);
MakeCode(0x463AF9);
MakeFunction(0x463AA0, 0x463B01);
MakeUnkn(0x463B04, 1);
MakeNameEx(0x463B04, "FindTopMostWindow", 0x20);
MakeComm(0x463B04, "'function FindTopMostWindow(ActiveWindow:HWND):HWND;'");
MakeCode(0x463B04);
MakeCode(0x463B38);
MakeFunction(0x463B04, 0x463B3E);
MakeUnkn(0x463B40, 1);
MakeNameEx(0x463B40, "SendFocusMessage", 0x20);
MakeComm(0x463B40, "'function SendFocusMessage(Window:HWND; Msg:Word):Boolean;'");
MakeCode(0x463B40);
MakeFunction(0x463B40, 0x463B60);
MakeUnkn(0x463B60, 1);
MakeNameEx(0x463B60, "CheckTaskWindow", 0x20);
MakeComm(0x463B60, "'function CheckTaskWindow(Window:HWND; Data:Longint):BOOL; stdcall;'");
MakeCode(0x463B60);
MakeCode(0x463B79);
MakeFunction(0x463B60, 0x463B80);
MakeUnkn(0x463B80, 1);
MakeNameEx(0x463B80, "ForegroundTask", 0x20);
MakeComm(0x463B80, "'function ForegroundTask:Boolean;'");
MakeCode(0x463B80);
MakeFunction(0x463B80, 0x463BAB);
MakeUnkn(0x463BAC, 1);
MakeNameEx(0x463BAC, "FindGlobalComponent_0", 0x20);
MakeComm(0x463BAC, "'function FindGlobalComponent(const Name:AnsiString):TComponent;'");
MakeCode(0x463BAC);
MakeCode(0x463BC6);
MakeCode(0x463BE8);
MakeCode(0x463BEC);
MakeCode(0x463C00);
MakeCode(0x463C20);
MakeCode(0x463C22);
MakeFunction(0x463BAC, 0x463C29);
MakeUnkn(0x463C2C, 1);
MakeNameEx(0x463C2C, "KeysToShiftState", 0x20);
MakeComm(0x463C2C, "'function KeysToShiftState(Keys:Word):TShiftState;'");
MakeCode(0x463C2C);
MakeCode(0x463C41);
MakeCode(0x463C4B);
MakeCode(0x463C55);
MakeCode(0x463C5F);
MakeCode(0x463C69);
MakeCode(0x463C78);
MakeFunction(0x463C2C, 0x463C7D);
MakeUnkn(0x463C84, 1);
MakeNameEx(0x463C84, "KeyDataToShiftState", 0x20);
MakeComm(0x463C84, "'function KeyDataToShiftState(KeyData:Longint):TShiftState;'");
MakeCode(0x463C84);
MakeCode(0x463C9E);
MakeCode(0x463CAD);
MakeCode(0x463CB8);
MakeFunction(0x463C84, 0x463CBD);
MakeUnkn(0x463CC4, 1);
MakeNameEx(0x463CC4, "KeyboardStateToShiftState", 0x20);
MakeComm(0x463CC4, "'function KeyboardStateToShiftState(const KeyboardState:TKeyboardState):TShiftState;'");
MakeCode(0x463CC4);
MakeCode(0x463CD8);
MakeCode(0x463CE1);
MakeCode(0x463CEA);
MakeCode(0x463CF3);
MakeCode(0x463CFC);
MakeCode(0x463D05);
MakeFunction(0x463CC4, 0x463D0A);
MakeUnkn(0x463D10, 1);
MakeNameEx(0x463D10, "IsAccel", 0x20);
MakeComm(0x463D10, "'function IsAccel(VK:Word; const Str:AnsiString):Boolean;'");
MakeCode(0x463D10);
MakeCode(0x463D53);
MakeCode(0x463D60);
MakeCode(0x463D6E);
MakeCode(0x463D73);
MakeFunction(0x463D10, 0x463D7D);
MakeUnkn(0x463D80, 1);
MakeNameEx(0x463D80, "GetRealParentForm", 0x20);
MakeComm(0x463D80, "'function GetRealParentForm(Control:TControl; TopForm:Boolean):TCustomForm;'");
MakeCode(0x463D80);
MakeCode(0x463D88);
MakeCode(0x463D8B);
MakeCode(0x463DA0);
MakeCode(0x463DA6);
MakeCode(0x463DBC);
MakeFunction(0x463D80, 0x463DC1);
MakeUnkn(0x463DC4, 1);
MakeNameEx(0x463DC4, "GetParentForm", 0x20);
MakeComm(0x463DC4, "'function GetParentForm(Control:TControl; TopForm:Boolean):TCustomForm;'");
MakeCode(0x463DC4);
MakeCode(0x463DCC);
MakeFunction(0x463DC4, 0x463DD2);
MakeUnkn(0x463DD4, 1);
MakeNameEx(0x463DD4, "ValidParentForm", 0x20);
MakeComm(0x463DD4, "'function ValidParentForm(Control:TControl; TopForm:Boolean):TCustomForm;'");
MakeCode(0x463DD4);
MakeCode(0x463E2F);
MakeCode(0x463E3C);
MakeCode(0x463E45);
MakeCode(0x463E4A);
MakeFunction(0x463DD4, 0x463E54);
MakeUnkn(0x463E54, 1);
MakeNameEx(0x463E54, "TControlScrollBar.Create", 0x20);
MakeComm(0x463E54, "'constructor TControlScrollBar.Create(AControl:TScrollingWinControl; AKind:TScrollBarKind);'");
MakeCode(0x463E54);
MakeCode(0x463E66);
MakeCode(0x463ED4);
MakeFunction(0x463E54, 0x463EDD);
MakeUnkn(0x463EE0, 1);
MakeNameEx(0x463EE0, "TControlScrollBar.IsStoredIncrement", 0x20);
MakeComm(0x463EE0, "'procedure TControlScrollBar.IsStoredIncrement(Value:TScrollBarInc);'");
MakeCode(0x463EE0);
MakeComm(0x463EE0, "'TControlScrollBar.Smooth:Boolean'");
MakeFunction(0x463EE0, 0x463EE7);
MakeUnkn(0x463EE8, 1);
MakeNameEx(0x463EE8, "TControlScrollBar.Assign", 0x20);
MakeComm(0x463EE8, "'procedure TControlScrollBar.Assign(Source:TPersistent);'");
MakeCode(0x463EE8);
MakeCode(0x463F2B);
MakeCode(0x463F34);
MakeFunction(0x463EE8, 0x463F38);
MakeUnkn(0x463F38, 1);
MakeNameEx(0x463F38, "TControlScrollBar.ChangeBiDiPosition", 0x20);
MakeComm(0x463F38, "'procedure TControlScrollBar.ChangeBiDiPosition;'");
MakeCode(0x463F38);
MakeCode(0x463F63);
MakeCode(0x463F6D);
MakeFunction(0x463F38, 0x463F6F);
MakeUnkn(0x463F70, 1);
MakeNameEx(0x463F70, "ProcessHorz", 0x20);
MakeComm(0x463F70, "'procedure ProcessHorz(Control:TControl);'");
MakeCode(0x463F70);
MakeCode(0x463F8E);
MakeCode(0x463FA9);
MakeCode(0x463FC4);
MakeCode(0x463FCC);
MakeCode(0x463FD5);
MakeFunction(0x463F70, 0x463FD8);
MakeUnkn(0x463FE0, 1);
MakeNameEx(0x463FE0, "ProcessVert", 0x20);
MakeComm(0x463FE0, "'procedure ProcessVert(Control:TControl);'");
MakeCode(0x463FE0);
MakeCode(0x463FF8);
MakeCode(0x464013);
MakeCode(0x46402E);
MakeCode(0x464036);
MakeCode(0x46403F);
MakeFunction(0x463FE0, 0x464042);
MakeUnkn(0x46404C, 1);
MakeNameEx(0x46404C, "TControlScrollBar.CalcAutoRange", 0x20);
MakeComm(0x46404C, "'procedure TControlScrollBar.CalcAutoRange;'");
MakeCode(0x46404C);
MakeCode(0x464097);
MakeCode(0x4640B6);
MakeCode(0x4640CA);
MakeCode(0x4640CE);
MakeCode(0x4640E7);
MakeCode(0x4640F1);
MakeFunction(0x46404C, 0x4640F7);
MakeUnkn(0x4640F8, 1);
MakeNameEx(0x4640F8, "TControlScrollBar.IsScrollBarVisible", 0x20);
MakeComm(0x4640F8, "'function TControlScrollBar.IsScrollBarVisible:Boolean;'");
MakeCode(0x4640F8);
MakeCode(0x46410C);
MakeCode(0x464126);
MakeCode(0x46412B);
MakeFunction(0x4640F8, 0x464130);
MakeUnkn(0x464130, 1);
MakeNameEx(0x464130, "ScrollBarVisible", 0x20);
MakeComm(0x464130, "'function ScrollBarVisible(Code:Word):Boolean;'");
MakeCode(0x464130);
MakeCode(0x464144);
MakeFunction(0x464130, 0x464162);
MakeUnkn(0x464164, 1);
MakeNameEx(0x464164, "Adjustment", 0x20);
MakeComm(0x464164, "'function Adjustment(Code:Word; Metric:Word):Integer;'");
MakeCode(0x464164);
MakeCode(0x4641AB);
MakeCode(0x4641D9);
MakeFunction(0x464164, 0x4641E0);
MakeUnkn(0x4641E0, 1);
MakeNameEx(0x4641E0, "TControlScrollBar.ControlSize", 0x20);
MakeComm(0x4641E0, "'function TControlScrollBar.ControlSize(ControlSB:Boolean; AssumeSB:Boolean):Integer;'");
MakeCode(0x4641E0);
MakeCode(0x46423A);
MakeCode(0x46425A);
MakeFunction(0x4641E0, 0x46425F);
MakeUnkn(0x464260, 1);
MakeNameEx(0x464260, "TControlScrollBar.NeedsScrollBarVisible", 0x20);
MakeComm(0x464260, "'function TControlScrollBar.NeedsScrollBarVisible:Boolean;'");
MakeCode(0x464260);
MakeFunction(0x464260, 0x464276);
MakeUnkn(0x464278, 1);
MakeNameEx(0x464278, "GetRealScrollPosition", 0x20);
MakeComm(0x464278, "'function GetRealScrollPosition:Integer;'");
MakeCode(0x464278);
MakeCode(0x4642A1);
MakeCode(0x4642CF);
MakeFunction(0x464278, 0x4642D7);
MakeUnkn(0x4642D8, 1);
MakeNameEx(0x4642D8, "TControlScrollBar.ScrollMessage", 0x20);
MakeComm(0x4642D8, "'procedure TControlScrollBar.ScrollMessage(var Msg:TWMScroll);'");
MakeCode(0x4642D8);
MakeCode(0x46431A);
MakeCode(0x46433B);
MakeCode(0x464361);
MakeCode(0x46436D);
MakeCode(0x46437A);
MakeCode(0x4643A2);
MakeCode(0x4643A6);
MakeCode(0x4643B4);
MakeCode(0x4643D2);
MakeCode(0x4643E5);
MakeCode(0x4643F8);
MakeCode(0x46440B);
MakeCode(0x46441C);
MakeCode(0x464433);
MakeCode(0x46445B);
MakeCode(0x464471);
MakeCode(0x464487);
MakeCode(0x46449D);
MakeCode(0x4644B3);
MakeCode(0x4644EA);
MakeCode(0x464506);
MakeCode(0x464522);
MakeCode(0x464543);
MakeCode(0x464564);
MakeCode(0x464583);
MakeCode(0x464594);
MakeCode(0x4645BC);
MakeCode(0x4645CD);
MakeCode(0x4645D9);
MakeCode(0x4645E7);
MakeFunction(0x4642D8, 0x4645EE);
MakeUnkn(0x4645F0, 1);
MakeNameEx(0x4645F0, "TControlScrollBar.SetButtonSize", 0x20);
MakeComm(0x4645F0, "'procedure TControlScrollBar.SetButtonSize(Value:Integer);'");
MakeCode(0x4645F0);
MakeCode(0x464616);
MakeCode(0x46462E);
MakeFunction(0x4645F0, 0x464631);
MakeUnkn(0x464634, 1);
MakeNameEx(0x464634, "TControlScrollBar.SetColor", 0x20);
MakeComm(0x464634, "'procedure TControlScrollBar.SetColor(Value:TColor);'");
MakeCode(0x464634);
MakeFunction(0x464634, 0x46464D);
MakeUnkn(0x464650, 1);
MakeNameEx(0x464650, "TControlScrollBar.SetParentColor", 0x20);
MakeComm(0x464650, "'procedure TControlScrollBar.SetParentColor(Value:Boolean);'");
MakeCode(0x464650);
MakeFunction(0x464650, 0x464667);
MakeUnkn(0x464668, 1);
MakeNameEx(0x464668, "TControlScrollBar.SetPosition", 0x20);
MakeComm(0x464668, "'procedure TControlScrollBar.SetPosition(Value:Integer);'");
MakeCode(0x464668);
MakeCode(0x46467E);
MakeCode(0x464689);
MakeCode(0x46468F);
MakeCode(0x464699);
MakeCode(0x46469D);
MakeCode(0x4646BD);
MakeCode(0x4646CB);
MakeCode(0x4646F3);
MakeCode(0x464727);
MakeFunction(0x464668, 0x46472B);
MakeUnkn(0x46472C, 1);
MakeNameEx(0x46472C, "TControlScrollBar.SetSize", 0x20);
MakeComm(0x46472C, "'procedure TControlScrollBar.SetSize(Value:Integer);'");
MakeCode(0x46472C);
MakeCode(0x464752);
MakeCode(0x46476A);
MakeFunction(0x46472C, 0x46476D);
MakeUnkn(0x464770, 1);
MakeNameEx(0x464770, "TControlScrollBar.SetStyle", 0x20);
MakeComm(0x464770, "'procedure TControlScrollBar.SetStyle(Value:TScrollBarStyle);'");
MakeCode(0x464770);
MakeFunction(0x464770, 0x464785);
MakeUnkn(0x464788, 1);
MakeNameEx(0x464788, "TControlScrollBar.SetThumbSize", 0x20);
MakeComm(0x464788, "'procedure TControlScrollBar.SetThumbSize(Value:Integer);'");
MakeCode(0x464788);
MakeFunction(0x464788, 0x46479D);
MakeUnkn(0x4647A0, 1);
MakeNameEx(0x4647A0, "TControlScrollBar.DoSetRange", 0x20);
MakeComm(0x4647A0, "'procedure TControlScrollBar.DoSetRange(Value:Integer);'");
MakeCode(0x4647A0);
MakeCode(0x4647AE);
MakeFunction(0x4647A0, 0x4647B7);
MakeUnkn(0x4647B8, 1);
MakeNameEx(0x4647B8, "TControlScrollBar.SetRange", 0x20);
MakeComm(0x4647B8, "'procedure TControlScrollBar.SetRange(Value:Integer);'");
MakeCode(0x4647B8);
MakeFunction(0x4647B8, 0x4647CC);
MakeUnkn(0x4647CC, 1);
MakeNameEx(0x4647CC, "TControlScrollBar.IsRangeStored", 0x20);
MakeComm(0x4647CC, "'function TControlScrollBar.IsRangeStored(Value:Integer):Boolean;'");
MakeCode(0x4647CC);
MakeFunction(0x4647CC, 0x4647D9);
MakeUnkn(0x4647DC, 1);
MakeNameEx(0x4647DC, "TControlScrollBar.SetVisible", 0x20);
MakeComm(0x4647DC, "'procedure TControlScrollBar.SetVisible(Value:Boolean);'");
MakeCode(0x4647DC);
MakeFunction(0x4647DC, 0x4647E8);
MakeUnkn(0x4647E8, 1);
MakeNameEx(0x4647E8, "UpdateScrollProperties", 0x20);
MakeComm(0x4647E8, "'procedure UpdateScrollProperties(Redraw:Boolean);'");
MakeCode(0x4647E8);
MakeCode(0x46485C);
MakeCode(0x46488D);
MakeCode(0x4648BE);
MakeFunction(0x4647E8, 0x4648F0);
MakeUnkn(0x4648F0, 1);
MakeNameEx(0x4648F0, "TControlScrollBar.Update", 0x20);
MakeComm(0x4648F0, "'procedure TControlScrollBar.Update(ControlSB:Boolean; AssumeSB:Boolean);'");
MakeCode(0x4648F0);
MakeCode(0x46491A);
MakeCode(0x464948);
MakeCode(0x46496D);
MakeCode(0x464972);
MakeCode(0x464A05);
MakeFunction(0x4648F0, 0x464A0C);
MakeUnkn(0x464A0C, 1);
MakeNameEx(0x464A0C, "TScrollingWinControl.Create", 0x20);
MakeComm(0x464A0C, "'constructor TScrollingWinControl.Create(AOwner:TComponent);'");
MakeCode(0x464A0C);
MakeCode(0x464A1A);
MakeCode(0x464A7B);
MakeFunction(0x464A0C, 0x464A80);
MakeUnkn(0x464A84, 1);
MakeNameEx(0x464A84, "TScrollingWinControl.Destroy", 0x20);
MakeComm(0x464A84, "'destructor TScrollingWinControl.Destroy;'");
MakeCode(0x464A84);
MakeCode(0x464ABC);
MakeFunction(0x464A84, 0x464ABF);
MakeUnkn(0x464AC0, 1);
MakeNameEx(0x464AC0, "TScrollingWinControl.CreateParams", 0x20);
MakeComm(0x464AC0, "'procedure TScrollingWinControl.CreateParams(var Params:TCreateParams);'");
MakeCode(0x464AC0);
MakeFunction(0x464AC0, 0x464AD0);
MakeUnkn(0x464AD0, 1);
MakeNameEx(0x464AD0, "TScrollingWinControl.CreateWnd", 0x20);
MakeComm(0x464AD0, "'procedure TScrollingWinControl.CreateWnd;'");
MakeCode(0x464AD0);
MakeCode(0x464B05);
MakeFunction(0x464AD0, 0x464B0E);
MakeUnkn(0x464B10, 1);
MakeNameEx(0x464B10, "TScrollingWinControl.AlignControls", 0x20);
MakeComm(0x464B10, "'procedure TScrollingWinControl.AlignControls(AControl:TControl; var ARect:TRect);'");
MakeCode(0x464B10);
MakeFunction(0x464B10, 0x464B2F);
MakeUnkn(0x464B30, 1);
MakeNameEx(0x464B30, "TScrollingWinControl.AutoScrollEnabled", 0x20);
MakeComm(0x464B30, "'function TScrollingWinControl.AutoScrollEnabled:Boolean;'");
MakeCode(0x464B30);
MakeCode(0x464B48);
MakeCode(0x464B4B);
MakeFunction(0x464B30, 0x464B4E);
MakeUnkn(0x464B50, 1);
MakeNameEx(0x464B50, "TScrollingWinControl.DoFlipChildren", 0x20);
MakeComm(0x464B50, "'procedure TScrollingWinControl.DoFlipChildren;'");
MakeCode(0x464B50);
MakeCode(0x464BA0);
MakeCode(0x464BA4);
MakeCode(0x464BA6);
MakeCode(0x464BBE);
MakeCode(0x464BD0);
MakeCode(0x464C04);
MakeCode(0x464C12);
MakeCode(0x464C2E);
MakeCode(0x464C42);
MakeCode(0x464C4F);
MakeCode(0x464C58);
MakeCode(0x464C5D);
MakeFunction(0x464B50, 0x464C66);
MakeUnkn(0x464C68, 1);
MakeNameEx(0x464C68, "TScrollingWinControl.CalcAutoRange", 0x20);
MakeComm(0x464C68, "'procedure TScrollingWinControl.CalcAutoRange;'");
MakeCode(0x464C68);
MakeCode(0x464C8A);
MakeFunction(0x464C68, 0x464C8C);
MakeUnkn(0x464C8C, 1);
MakeNameEx(0x464C8C, "TScrollingWinControl.SetAutoScroll", 0x20);
MakeComm(0x464C8C, "'procedure TScrollingWinControl.SetAutoScroll(Value:Boolean);'");
MakeCode(0x464C8C);
MakeCode(0x464CAA);
MakeCode(0x464CC4);
MakeFunction(0x464C8C, 0x464CC6);
MakeUnkn(0x464CC8, 1);
MakeNameEx(0x464CC8, "TScrollingWinControl.SetHorzScrollBar", 0x20);
MakeComm(0x464CC8, "'procedure TScrollingWinControl.SetHorzScrollBar(Value:TControlScrollBar);'");
MakeCode(0x464CC8);
MakeFunction(0x464CC8, 0x464CD8);
MakeUnkn(0x464CD8, 1);
MakeNameEx(0x464CD8, "TScrollingWinControl.SetVertScrollBar", 0x20);
MakeComm(0x464CD8, "'procedure TScrollingWinControl.SetVertScrollBar(Value:TControlScrollBar);'");
MakeCode(0x464CD8);
MakeFunction(0x464CD8, 0x464CE8);
MakeUnkn(0x464CE8, 1);
MakeNameEx(0x464CE8, "TScrollingWinControl.UpdateScrollBars", 0x20);
MakeComm(0x464CE8, "'procedure TScrollingWinControl.UpdateScrollBars;'");
MakeCode(0x464CE8);
MakeCode(0x464D5F);
MakeCode(0x464D97);
MakeCode(0x464DBB);
MakeCode(0x464DC8);
MakeCode(0x464DD3);
MakeCode(0x464DD8);
MakeCode(0x464DDA);
MakeFunction(0x464CE8, 0x464DDD);
MakeUnkn(0x464DE0, 1);
MakeNameEx(0x464DE0, "TScrollingWinControl.AutoScrollInView", 0x20);
MakeComm(0x464DE0, "'procedure TScrollingWinControl.AutoScrollInView(AControl:TControl);'");
MakeCode(0x464DE0);
MakeFunction(0x464DE0, 0x464DF6);
MakeCode(0x464DF8);
MakeFunction(0x464DF8, 0x464DFF);
MakeUnkn(0x464E00, 1);
MakeNameEx(0x464E00, "TScrollingWinControl.EnableAutoRange", 0x20);
MakeComm(0x464E00, "'procedure TScrollingWinControl.EnableAutoRange;'");
MakeCode(0x464E00);
MakeCode(0x464E30);
MakeFunction(0x464E00, 0x464E36);
MakeUnkn(0x464E38, 1);
MakeNameEx(0x464E38, "TScrollingWinControl.ScrollInView", 0x20);
MakeComm(0x464E38, "'procedure TScrollingWinControl.ScrollInView(AControl:TControl);'");
MakeCode(0x464E38);
MakeCode(0x464EE1);
MakeCode(0x464F08);
MakeCode(0x464F24);
MakeCode(0x464F3D);
MakeCode(0x464F65);
MakeCode(0x464F81);
MakeFunction(0x464E38, 0x464F89);
MakeUnkn(0x464F8C, 1);
MakeNameEx(0x464F8C, "TScrollingWinControl.ScaleScrollBars", 0x20);
MakeComm(0x464F8C, "'procedure TScrollingWinControl.ScaleScrollBars(M:Integer; D:Integer);'");
MakeCode(0x464F8C);
MakeCode(0x464FB4);
MakeCode(0x464FF7);
MakeCode(0x465017);
MakeFunction(0x464F8C, 0x465030);
MakeUnkn(0x465030, 1);
MakeNameEx(0x465030, "TScrollingWinControl.ChangeScale", 0x20);
MakeComm(0x465030, "'procedure TScrollingWinControl.ChangeScale(M:Integer; D:Integer);'");
MakeCode(0x465030);
MakeFunction(0x465030, 0x465053);
MakeCode(0x465054);
MakeFunction(0x465054, 0x465055);
MakeUnkn(0x465058, 1);
MakeNameEx(0x465058, "TScrollingWinControl.WMSize", 0x20);
MakeComm(0x465058, "'procedure TScrollingWinControl.WMSize(var Message:TWMSize);'");
MakeCode(0x465058);
MakeCode(0x465096);
MakeCode(0x46509A);
MakeCode(0x46509E);
MakeCode(0x4650A0);
MakeCode(0x4650AD);
MakeCode(0x4650BA);
MakeCode(0x4650C4);
MakeCode(0x4650C9);
MakeCode(0x4650F8);
MakeCode(0x465105);
MakeCode(0x465113);
MakeCode(0x465118);
MakeCode(0x465138);
MakeCode(0x465140);
MakeFunction(0x465058, 0x465145);
MakeUnkn(0x465148, 1);
MakeNameEx(0x465148, "TScrollingWinControl.WMHScroll", 0x20);
MakeComm(0x465148, "'procedure TScrollingWinControl.WMHScroll(Message:TWMCommand);'");
MakeCode(0x465148);
MakeComm(0x46514E, "'TScrollingWinControl.HorzScrollBar:TControlScrollBar'");
MakeComm(0x465154, "'TControlScrollBar.Visible:Boolean'");
MakeComm(0x46515A, "'TScrollingWinControl.HorzScrollBar:TControlScrollBar'");
MakeCode(0x465166);
MakeFunction(0x465148, 0x46516C);
MakeUnkn(0x46516C, 1);
MakeNameEx(0x46516C, "TScrollingWinControl.WMVScroll", 0x20);
MakeComm(0x46516C, "'procedure TScrollingWinControl.WMVScroll(Message:TWMHScroll);'");
MakeCode(0x46516C);
MakeComm(0x465172, "'TScrollingWinControl.VertScrollBar:TControlScrollBar'");
MakeComm(0x465178, "'TControlScrollBar.Visible:Boolean'");
MakeComm(0x46517E, "'TScrollingWinControl.VertScrollBar:TControlScrollBar'");
MakeCode(0x46518A);
MakeFunction(0x46516C, 0x465190);
MakeUnkn(0x465190, 1);
MakeNameEx(0x465190, "TScrollingWinControl.AdjustClientRect", 0x20);
MakeComm(0x465190, "'procedure TScrollingWinControl.AdjustClientRect(var Rect:TRect);'");
MakeCode(0x465190);
MakeComm(0x4651A2, "'TScrollingWinControl.HorzScrollBar:TControlScrollBar'");
MakeComm(0x4651A8, "'TControlScrollBar.Range:Integer'");
MakeCode(0x4651B3);
MakeCode(0x4651B5);
MakeComm(0x4651BC, "'TScrollingWinControl.VertScrollBar:TControlScrollBar'");
MakeComm(0x4651C2, "'TControlScrollBar.Range:Integer'");
MakeCode(0x4651CD);
MakeCode(0x4651CF);
MakeComm(0x4651D5, "'TScrollingWinControl.VertScrollBar:TControlScrollBar'");
MakeComm(0x4651DB, "'TControlScrollBar.Position:Integer'");
MakeComm(0x4651E0, "'TScrollingWinControl.HorzScrollBar:TControlScrollBar'");
MakeComm(0x4651E6, "'TControlScrollBar.Position:Integer'");
MakeFunction(0x465190, 0x465210);
MakeUnkn(0x465210, 1);
MakeNameEx(0x465210, "TScrollingWinControl.CMBiDiModeChanged", 0x20);
MakeComm(0x465210, "'procedure TScrollingWinControl.CMBiDiModeChanged(var Message:TMessage);'");
MakeCode(0x465210);
MakeCode(0x46524F);
MakeCode(0x46525A);
MakeCode(0x465267);
MakeCode(0x465271);
MakeCode(0x465276);
MakeCode(0x46529A);
MakeFunction(0x465210, 0x46529E);
MakeUnkn(0x4652A0, 1);
MakeNameEx(0x4652A0, "TScrollBox.Create", 0x20);
MakeComm(0x4652A0, "'constructor TScrollBox.Create(AOwner:TComponent);'");
MakeCode(0x4652A0);
MakeCode(0x4652AE);
MakeCode(0x465300);
MakeFunction(0x4652A0, 0x465305);
MakeUnkn(0x46530C, 1);
MakeNameEx(0x46530C, "TScrollBox.CreateParams", 0x20);
MakeComm(0x46530C, "'procedure TScrollBox.CreateParams(var Params:TCreateParams);'");
MakeCode(0x46530C);
MakeCode(0x465356);
MakeFunction(0x46530C, 0x465359);
MakeUnkn(0x46535C, 1);
MakeNameEx(0x46535C, "TScrollBox.SetBorderStyle", 0x20);
MakeComm(0x46535C, "'procedure TScrollBox.SetBorderStyle(Value:TBorderStyle);'");
MakeCode(0x46535C);
MakeFunction(0x46535C, 0x465370);
MakeUnkn(0x465370, 1);
MakeNameEx(0x465370, "TScrollBox.WMNCHitTest", 0x20);
MakeComm(0x465370, "'procedure TScrollBox.WMNCHitTest(var Message:TWMNCHitTest);'");
MakeCode(0x465370);
MakeComm(0x465372, "'TWinControl.DefaultHandler'");
MakeFunction(0x465370, 0x465376);
MakeUnkn(0x465378, 1);
MakeNameEx(0x465378, "TScrollBox.CMCtl3DChanged", 0x20);
MakeComm(0x465378, "'procedure TScrollBox.CMCtl3DChanged(var Message:TMessage);'");
MakeCode(0x465378);
MakeCode(0x465398);
MakeFunction(0x465378, 0x4653A4);
MakeUnkn(0x4653A4, 1);
MakeNameEx(0x4653A4, "TScrollBox.PaintWindow", 0x20);
MakeComm(0x4653A4, "'procedure TScrollBox.PaintWindow(DC:HDC);'");
MakeCode(0x4653A4);
MakeFunction(0x4653A4, 0x4653A5);
MakeUnkn(0x4653A8, 1);
MakeNameEx(0x4653A8, "TCustomFrame.Create", 0x20);
MakeComm(0x4653A8, "'constructor TCustomFrame.Create(AOwner:TComponent);'");
MakeCode(0x4653A8);
MakeCode(0x4653C7);
MakeCode(0x465459);
MakeCode(0x465471);
MakeCode(0x46547E);
MakeCode(0x46548A);
MakeCode(0x46548F);
MakeCode(0x4654A6);
MakeFunction(0x4653A8, 0x4654AE);
MakeUnkn(0x4654B4, 1);
MakeNameEx(0x4654B4, "TCustomFrame.CreateParams", 0x20);
MakeComm(0x4654B4, "'procedure TCustomFrame.CreateParams(var Params:TCreateParams);'");
MakeCode(0x4654B4);
MakeCode(0x4654D4);
MakeFunction(0x4654B4, 0x4654D7);
MakeUnkn(0x4654D8, 1);
MakeNameEx(0x4654D8, "TCustomForm.GetChildren", 0x20);
MakeComm(0x4654D8, "'procedure TCustomForm.GetChildren(Proc:TGetChildProc; Root:TComponent);'");
MakeCode(0x4654D8);
MakeCode(0x46550F);
MakeCode(0x465532);
MakeCode(0x46553A);
MakeFunction(0x4654D8, 0x465543);
MakeUnkn(0x465544, 1);
MakeNameEx(0x465544, "TCustomFrame.PaintWindow", 0x20);
MakeComm(0x465544, "'procedure TCustomFrame.PaintWindow(DC:HDC);'");
MakeCode(0x465544);
MakeFunction(0x465544, 0x465545);
MakeUnkn(0x465548, 1);
MakeNameEx(0x465548, "TCustomFrame.SetParent", 0x20);
MakeComm(0x465548, "'procedure TCustomFrame.SetParent(AParent:TWinControl);'");
MakeCode(0x465548);
MakeCode(0x46556F);
MakeCode(0x465597);
MakeCode(0x4655A1);
MakeCode(0x4655AE);
MakeCode(0x4655BE);
MakeCode(0x4655BF);
MakeCode(0x4655C4);
MakeFunction(0x465548, 0x4655CB);
MakeUnkn(0x4655CC, 1);
MakeNameEx(0x4655CC, "TCustomForm.Create", 0x20);
MakeComm(0x4655CC, "'constructor TCustomForm.Create(AOwner:TComponent);'");
MakeCode(0x4655CC);
MakeCode(0x4655EA);
MakeCode(0x4656C0);
MakeCode(0x4656CD);
MakeCode(0x4656D8);
MakeCode(0x4656DD);
MakeCode(0x4656F6);
MakeCode(0x465703);
MakeCode(0x465710);
MakeCode(0x465715);
MakeCode(0x465717);
MakeCode(0x465724);
MakeCode(0x465730);
MakeCode(0x465735);
MakeCode(0x46574F);
MakeFunction(0x4655CC, 0x465757);
MakeUnkn(0x465758, 1);
MakeNameEx(0x465758, "TCustomForm.AfterConstruction", 0x20);
MakeComm(0x465758, "'procedure TCustomForm.AfterConstruction;'");
MakeCode(0x465758);
MakeCode(0x46576F);
MakeCode(0x46578A);
MakeFunction(0x465758, 0x46578D);
MakeUnkn(0x465790, 1);
MakeNameEx(0x465790, "TCustomForm.CreateNew", 0x20);
MakeComm(0x465790, "'constructor TCustomForm.CreateNew(AOwner:TComponent; Dummy:Integer);'");
MakeCode(0x465790);
MakeCode(0x4657A2);
MakeCode(0x465901);
MakeFunction(0x465790, 0x46590A);
MakeUnkn(0x465914, 1);
MakeNameEx(0x465914, "TCustomForm.BeforeDestruction", 0x20);
MakeComm(0x465914, "'procedure TCustomForm.BeforeDestruction;'");
MakeCode(0x465914);
MakeCode(0x465956);
MakeCode(0x465966);
MakeCode(0x465979);
MakeFunction(0x465914, 0x46597B);
MakeUnkn(0x46597C, 1);
MakeNameEx(0x46597C, "TCustomForm.Destroy", 0x20);
MakeComm(0x46597C, "'destructor TCustomForm.Destroy;'");
MakeCode(0x46597C);
MakeCode(0x4659AF);
MakeCode(0x4659D4);
MakeCode(0x4659F5);
MakeCode(0x465A47);
MakeCode(0x465A54);
MakeCode(0x465A61);
MakeCode(0x465A66);
MakeCode(0x465A76);
MakeFunction(0x46597C, 0x465A7A);
MakeUnkn(0x465A7C, 1);
MakeNameEx(0x465A7C, "TCustomForm.DoCreate", 0x20);
MakeComm(0x465A7C, "'procedure TCustomForm.DoCreate;'");
MakeCode(0x465A7C);
MakeCode(0x465AB3);
MakeCode(0x465ABD);
MakeCode(0x465AD7);
MakeCode(0x465ADC);
MakeCode(0x465AF2);
MakeFunction(0x465A7C, 0x465AF8);
MakeUnkn(0x465AF8, 1);
MakeNameEx(0x465AF8, "TCustomForm.DoDestroy", 0x20);
MakeComm(0x465AF8, "'procedure TCustomForm.DoDestroy;'");
MakeCode(0x465AF8);
MakeCode(0x465B2F);
MakeCode(0x465B39);
MakeCode(0x465B50);
MakeFunction(0x465AF8, 0x465B56);
MakeUnkn(0x465B58, 1);
MakeNameEx(0x465B58, "TCustomForm.Loaded", 0x20);
MakeComm(0x465B58, "'procedure TCustomForm.Loaded;'");
MakeCode(0x465B58);
MakeCode(0x465B79);
MakeCode(0x465B9F);
MakeFunction(0x465B58, 0x465BA3);
MakeUnkn(0x465BA4, 1);
MakeNameEx(0x465BA4, "TCustomForm.Notification", 0x20);
MakeComm(0x465BA4, "'procedure TCustomForm.Notification(AComponent:TComponent; Operation:TOperation);'");
MakeCode(0x465BA4);
MakeCode(0x465BC5);
MakeCode(0x465C08);
MakeCode(0x465C19);
MakeCode(0x465C2A);
MakeCode(0x465C3B);
MakeCode(0x465C4C);
MakeCode(0x465C77);
MakeCode(0x465CA2);
MakeCode(0x465CB2);
MakeCode(0x465CC2);
MakeCode(0x465CDA);
MakeFunction(0x465BA4, 0x465CDE);
MakeUnkn(0x465CE0, 1);
MakeNameEx(0x465CE0, "TCustomForm.ReadState", 0x20);
MakeComm(0x465CE0, "'procedure TCustomForm.ReadState(Reader:TReader);'");
MakeCode(0x465CE0);
MakeCode(0x465D48);
MakeCode(0x465DC1);
MakeCode(0x465E50);
MakeCode(0x465E7F);
MakeCode(0x465ED1);
MakeCode(0x465EE8);
MakeCode(0x465EFF);
MakeCode(0x465F37);
MakeCode(0x465F48);
MakeCode(0x465F55);
MakeCode(0x465F5E);
MakeCode(0x465F63);
MakeFunction(0x465CE0, 0x465F6A);
MakeUnkn(0x465F70, 1);
MakeNameEx(0x465F70, "TCustomForm.DefineProperties", 0x20);
MakeComm(0x465F70, "'procedure TCustomForm.DefineProperties(Filer:TFiler);'");
MakeCode(0x465F70);
MakeFunction(0x465F70, 0x465FD8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x465FE0, -1);
MakeDword(0x465FDC);
MakeDword(0x465FD8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x465FF8, -1);
MakeDword(0x465FF4);
MakeDword(0x465FF0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x46600C, -1);
MakeDword(0x466008);
MakeDword(0x466004);
MakeUnkn(0x466020, 1);
MakeNameEx(0x466020, "TCustomForm.ReadIgnoreFontProperty", 0x20);
MakeComm(0x466020, "'procedure TCustomForm.ReadIgnoreFontProperty(Reader:TReader);'");
MakeCode(0x466020);
MakeCode(0x46603A);
MakeFunction(0x466020, 0x46603D);
MakeUnkn(0x466040, 1);
MakeNameEx(0x466040, "TCustomForm.ReadTextHeight", 0x20);
MakeComm(0x466040, "'procedure TCustomForm.ReadTextHeight(Reader:TReader);'");
MakeCode(0x466040);
MakeFunction(0x466040, 0x466056);
MakeUnkn(0x466058, 1);
MakeNameEx(0x466058, "TCustomForm.WriteTextHeight", 0x20);
MakeComm(0x466058, "'procedure TCustomForm.WriteTextHeight(Writer:TWriter);'");
MakeCode(0x466058);
MakeFunction(0x466058, 0x466071);
MakeUnkn(0x466074, 1);
MakeNameEx(0x466074, "TCustomForm.WritePixelsPerInch", 0x20);
MakeComm(0x466074, "'procedure TCustomForm.WritePixelsPerInch(Writer:TWriter);'");
MakeCode(0x466074);
MakeFunction(0x466074, 0x46608D);
MakeUnkn(0x466090, 1);
MakeNameEx(0x466090, "TCustomForm.GetLeft", 0x20);
MakeComm(0x466090, "'function TCustomForm.GetLeft:Integer;'");
MakeCode(0x466090);
MakeCode(0x4660AB);
MakeFunction(0x466090, 0x4660AF);
MakeUnkn(0x4660B0, 1);
MakeNameEx(0x4660B0, "TCustomForm.GetTop", 0x20);
MakeComm(0x4660B0, "'function TCustomForm.GetTop:Integer;'");
MakeCode(0x4660B0);
MakeCode(0x4660C8);
MakeFunction(0x4660B0, 0x4660CC);
MakeUnkn(0x4660CC, 1);
MakeNameEx(0x4660CC, "TCustomForm.GetTextHeight", 0x20);
MakeComm(0x4660CC, "'function TCustomForm.GetTextHeight:Integer;'");
MakeCode(0x4660CC);
MakeFunction(0x4660CC, 0x4660E2);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4660EC, -1);
MakeDword(0x4660E8);
MakeDword(0x4660E4);
MakeUnkn(0x4660F0, 1);
MakeNameEx(0x4660F0, "TCustomForm.BeginAutoDrag", 0x20);
MakeComm(0x4660F0, "'procedure TCustomForm.BeginAutoDrag;'");
MakeCode(0x4660F0);
MakeFunction(0x4660F0, 0x4660F1);
MakeUnkn(0x4660F4, 1);
MakeNameEx(0x4660F4, "TCustomForm.ChangeScale", 0x20);
MakeComm(0x4660F4, "'procedure TCustomForm.ChangeScale(M:Integer; D:Integer);'");
MakeCode(0x4660F4);
MakeCode(0x46615C);
MakeFunction(0x4660F4, 0x46617C);
MakeUnkn(0x46617C, 1);
MakeNameEx(0x46617C, "TCustomForm.IconChanged", 0x20);
MakeComm(0x46617C, "'procedure TCustomForm.IconChanged(Sender:TObject);'");
MakeCode(0x46617C);
MakeCode(0x4661BB);
MakeCode(0x4661D6);
MakeFunction(0x46617C, 0x4661D8);
MakeUnkn(0x4661D8, 1);
MakeNameEx(0x4661D8, "TCustomForm.IsClientSizeStored", 0x20);
MakeComm(0x4661D8, "'function TCustomForm.IsClientSizeStored(Value:Integer):Boolean;'");
MakeCode(0x4661D8);
MakeFunction(0x4661D8, 0x4661E6);
MakeUnkn(0x4661E8, 1);
MakeNameEx(0x4661E8, "TCustomForm.IsFormSizeStored", 0x20);
MakeComm(0x4661E8, "'function TCustomForm.IsFormSizeStored(Value:Integer):Boolean;'");
MakeCode(0x4661E8);
MakeCode(0x46620C);
MakeFunction(0x4661E8, 0x46620F);
MakeUnkn(0x466210, 1);
MakeNameEx(0x466210, "TCustomForm.IsAutoScrollStored", 0x20);
MakeComm(0x466210, "'function TCustomForm.IsAutoScrollStored(Value:Boolean):Boolean;'");
MakeCode(0x466210);
MakeCode(0x466231);
MakeCode(0x466233);
MakeCode(0x46623B);
MakeCode(0x46623F);
MakeFunction(0x466210, 0x466243);
MakeUnkn(0x466244, 1);
MakeNameEx(0x466244, "TCustomForm.DoClose", 0x20);
MakeComm(0x466244, "'procedure TCustomForm.DoClose(var Action:TCloseAction);'");
MakeCode(0x466244);
MakeCode(0x466261);
MakeFunction(0x466244, 0x466263);
MakeUnkn(0x466264, 1);
MakeNameEx(0x466264, "TCustomForm.DoHide", 0x20);
MakeComm(0x466264, "'procedure TCustomForm.DoHide;'");
MakeCode(0x466264);
MakeCode(0x46627F);
MakeFunction(0x466264, 0x466281);
MakeUnkn(0x466284, 1);
MakeNameEx(0x466284, "TCustomForm.DoShow", 0x20);
MakeComm(0x466284, "'procedure TCustomForm.DoShow;'");
MakeCode(0x466284);
MakeCode(0x46629F);
MakeFunction(0x466284, 0x4662A1);
MakeUnkn(0x4662A4, 1);
MakeNameEx(0x4662A4, "TCustomForm.GetClientRect", 0x20);
MakeComm(0x4662A4, "'function TCustomForm.GetClientRect:TRect;'");
MakeCode(0x4662A4);
MakeCode(0x46631E);
MakeFunction(0x4662A4, 0x46632A);
MakeUnkn(0x46632C, 1);
MakeNameEx(0x46632C, "TCustomFrame.GetChildren", 0x20);
MakeComm(0x46632C, "'procedure TCustomFrame.GetChildren(Proc:TGetChildProc; Root:TComponent);'");
MakeCode(0x46632C);
MakeCode(0x466363);
MakeCode(0x466386);
MakeCode(0x46638E);
MakeFunction(0x46632C, 0x466397);
MakeUnkn(0x466398, 1);
MakeNameEx(0x466398, "TCustomForm.GetFloating", 0x20);
MakeComm(0x466398, "'function TCustomForm.GetFloating:Boolean;'");
MakeCode(0x466398);
MakeCode(0x4663B9);
MakeCode(0x4663BE);
MakeFunction(0x466398, 0x4663C3);
MakeUnkn(0x4663C4, 1);
MakeNameEx(0x4663C4, "TCustomForm.GetOwnerWindow", 0x20);
MakeComm(0x4663C4, "'procedure TCustomForm.GetOwnerWindow;'");
MakeCode(0x4663C4);
MakeCode(0x4663D7);
MakeFunction(0x4663C4, 0x4663DA);
MakeUnkn(0x4663DC, 1);
MakeNameEx(0x4663DC, "TCustomForm.SetChildOrder", 0x20);
MakeComm(0x4663DC, "'procedure TCustomForm.SetChildOrder(Child:TComponent; Order:Integer);'");
MakeCode(0x4663DC);
MakeCode(0x46640E);
MakeCode(0x466432);
MakeCode(0x466462);
MakeCode(0x466466);
MakeFunction(0x4663DC, 0x46646E);
MakeUnkn(0x466470, 1);
MakeNameEx(0x466470, "TCustomForm.SetParentBiDiMode", 0x20);
MakeComm(0x466470, "'procedure TCustomForm.SetParentBiDiMode(Value:Boolean);'");
MakeCode(0x466470);
MakeCode(0x466495);
MakeFunction(0x466470, 0x466497);
MakeUnkn(0x466498, 1);
MakeNameEx(0x466498, "TCustomForm.SetClientWidth", 0x20);
MakeComm(0x466498, "'procedure TCustomForm.SetClientWidth(Value:Integer);'");
MakeCode(0x466498);
MakeCode(0x4664BC);
MakeFunction(0x466498, 0x4664C5);
MakeUnkn(0x4664CC, 1);
MakeNameEx(0x4664CC, "TCustomForm.SetClientHeight", 0x20);
MakeComm(0x4664CC, "'procedure TCustomForm.SetClientHeight(Value:Integer);'");
MakeCode(0x4664CC);
MakeCode(0x4664F0);
MakeFunction(0x4664CC, 0x4664F9);
MakeUnkn(0x466500, 1);
MakeNameEx(0x466500, "TCustomForm.SetVisible", 0x20);
MakeComm(0x466500, "'procedure TCustomForm.SetVisible(Value:Boolean);'");
MakeCode(0x466500);
MakeCode(0x46651C);
MakeCode(0x466526);
MakeCode(0x466536);
MakeCode(0x46653F);
MakeFunction(0x466500, 0x466542);
MakeUnkn(0x466544, 1);
MakeNameEx(0x466544, "TCustomForm.VisibleChanging", 0x20);
MakeComm(0x466544, "'procedure TCustomForm.VisibleChanging;'");
MakeCode(0x466544);
MakeCode(0x46658D);
MakeCode(0x46659A);
MakeCode(0x4665A3);
MakeCode(0x4665A8);
MakeFunction(0x466544, 0x4665AD);
MakeCode(0x4665B0);
MakeFunction(0x4665B0, 0x4665B3);
MakeUnkn(0x4665B4, 1);
MakeNameEx(0x4665B4, "TCustomForm.SetParent", 0x20);
MakeComm(0x4665B4, "'procedure TCustomForm.SetParent(AParent:TWinControl);'");
MakeCode(0x4665B4);
MakeCode(0x4665ED);
MakeCode(0x46660C);
MakeCode(0x466620);
MakeCode(0x466646);
MakeCode(0x466653);
MakeCode(0x466663);
MakeCode(0x466664);
MakeCode(0x466669);
MakeCode(0x46666B);
MakeFunction(0x4665B4, 0x466670);
MakeUnkn(0x466670, 1);
MakeNameEx(0x466670, "TCustomForm.ValidateRename", 0x20);
MakeComm(0x466670, "'procedure TCustomForm.ValidateRename(AComponent:TComponent; const CurName:AnsiString; const NewName:AnsiString);'");
MakeCode(0x466670);
MakeCode(0x4666A7);
MakeFunction(0x466670, 0x4666AE);
MakeUnkn(0x4666B0, 1);
MakeNameEx(0x4666B0, "TCustomForm.WndProc", 0x20);
MakeComm(0x4666B0, "'procedure TCustomForm.WndProc(var Message:TMessage);'");
MakeCode(0x4666B0);
MakeCode(0x4666EA);
MakeCode(0x466707);
MakeCode(0x466755);
MakeCode(0x46676E);
MakeCode(0x466781);
MakeCode(0x466788);
MakeCode(0x466799);
MakeCode(0x4667A1);
MakeCode(0x4667CD);
MakeCode(0x4667E8);
MakeCode(0x466804);
MakeCode(0x466815);
MakeCode(0x466836);
MakeCode(0x466857);
MakeCode(0x466897);
MakeCode(0x4668AD);
MakeCode(0x4668C3);
MakeCode(0x4668CF);
MakeCode(0x466984);
MakeCode(0x466991);
MakeCode(0x4669AC);
MakeCode(0x4669B1);
MakeCode(0x4669B3);
MakeCode(0x4669C0);
MakeCode(0x4669C9);
MakeCode(0x4669CE);
MakeCode(0x4669D0);
MakeCode(0x466A8E);
MakeCode(0x466A9B);
MakeCode(0x466AB3);
MakeCode(0x466AB8);
MakeCode(0x466ABA);
MakeCode(0x466AC7);
MakeCode(0x466AD0);
MakeCode(0x466AD5);
MakeCode(0x466AD7);
MakeCode(0x466AE4);
MakeCode(0x466AF7);
MakeCode(0x466AFC);
MakeCode(0x466AFE);
MakeCode(0x466B6C);
MakeCode(0x466B76);
MakeFunction(0x4666B0, 0x466B7D);
MakeUnkn(0x466B88, 1);
MakeNameEx(0x466B88, "Default", 0x20);
MakeComm(0x466B88, "'procedure Default;'");
MakeCode(0x466B88);
MakeFunction(0x466B88, 0x466BD2);
MakeUnkn(0x466BD4, 1);
MakeNameEx(0x466BD4, "MaximizedChildren", 0x20);
MakeComm(0x466BD4, "'function MaximizedChildren:Boolean;'");
MakeCode(0x466BD4);
MakeCode(0x466BEE);
MakeCode(0x466C08);
MakeCode(0x466C0C);
MakeCode(0x466C0E);
MakeFunction(0x466BD4, 0x466C12);
MakeUnkn(0x466C14, 1);
MakeNameEx(0x466C14, "TCustomForm.ClientWndProc", 0x20);
MakeComm(0x466C14, "'procedure TCustomForm.ClientWndProc(var Message:TMessage);'");
MakeCode(0x466C14);
MakeCode(0x466C68);
MakeCode(0x466CDC);
MakeCode(0x466CEB);
MakeCode(0x466D1D);
MakeCode(0x466D1F);
MakeCode(0x466D32);
MakeCode(0x466D5A);
MakeCode(0x466DB0);
MakeCode(0x466DBB);
MakeCode(0x466DC8);
MakeCode(0x466DE1);
MakeCode(0x466DE2);
MakeCode(0x466DE7);
MakeCode(0x466DE9);
MakeCode(0x466DF0);
MakeFunction(0x466C14, 0x466DF4);
MakeUnkn(0x466DF4, 1);
MakeNameEx(0x466DF4, "TCustomForm.AlignControls", 0x20);
MakeComm(0x466DF4, "'procedure TCustomForm.AlignControls(AControl:TControl; var Rect:TRect);'");
MakeCode(0x466DF4);
MakeCode(0x466E58);
MakeFunction(0x466DF4, 0x466E5F);
MakeUnkn(0x466E60, 1);
MakeNameEx(0x466E60, "TCustomForm.CMBiDiModeChanged", 0x20);
MakeComm(0x466E60, "'procedure TCustomForm.CMBiDiModeChanged(var Message:TMessage);'");
MakeCode(0x466E60);
MakeCode(0x466EB5);
MakeCode(0x466EC6);
MakeCode(0x466EEC);
MakeCode(0x466EF0);
MakeFunction(0x466E60, 0x466EF5);
MakeUnkn(0x466EF8, 1);
MakeNameEx(0x466EF8, "TCustomForm.CMParentBiDiModeChanged", 0x20);
MakeComm(0x466EF8, "'procedure TCustomForm.CMParentBiDiModeChanged(var Message:TMessage);'");
MakeCode(0x466EF8);
MakeCode(0x466F4A);
MakeCode(0x466F56);
MakeCode(0x466F60);
MakeCode(0x466F6D);
MakeCode(0x466F78);
MakeCode(0x466F7D);
MakeCode(0x466F7F);
MakeFunction(0x466EF8, 0x466F83);
MakeUnkn(0x466F84, 1);
MakeNameEx(0x466F84, "TCustomForm.CMPopupHwndDestroy", 0x20);
MakeComm(0x466F84, "'procedure TCustomForm.CMPopupHwndDestroy(var Message:TCMPopupHWndDestroy);'");
MakeCode(0x466F84);
MakeCode(0x466FA3);
MakeCode(0x466FE8);
MakeFunction(0x466F84, 0x466FEC);
MakeUnkn(0x466FEC, 1);
MakeNameEx(0x466FEC, "TCustomForm.GetBorderIconStyles", 0x20);
MakeComm(0x466FEC, "'procedure TCustomForm.GetBorderIconStyles(var Style:Cardinal; var ExStyle:Cardinal);'");
MakeCode(0x466FEC);
MakeCode(0x467023);
MakeCode(0x467027);
MakeCode(0x467041);
MakeCode(0x46704A);
MakeCode(0x467057);
MakeCode(0x467062);
MakeCode(0x467078);
MakeCode(0x467083);
MakeCode(0x46708E);
MakeCode(0x467099);
MakeCode(0x4670A5);
MakeFunction(0x466FEC, 0x4670AB);
MakeUnkn(0x4670B8, 1);
MakeNameEx(0x4670B8, "TForm.SetBorderIcons", 0x20);
MakeComm(0x4670B8, "'procedure TForm.SetBorderIcons(Value:TBorderIcons);'");
MakeCode(0x4670B8);
MakeComm(0x4670C6, "'TForm.FBorderIcons:TBorderIcons'");
MakeComm(0x4670D6, "'TForm.FBorderIcons:TBorderIcons'");
MakeComm(0x4670EB, "'TForm.FComponentState:TComponentState'");
MakeComm(0x4670F1, "'TForm.FComponentState:TComponentState'");
MakeComm(0x4670FB, "'TForm.FParent:TWinControl'");
MakeComm(0x467105, "'TForm.FFormStyle:TFormStyle'");
MakeCode(0x467105);
MakeComm(0x46710E, "'TForm.FWindowState:TWindowState'");
MakeCode(0x467117);
MakeComm(0x46714B, "'TCustomForm.GetBorderIconStyles'");
MakeCode(0x467196);
MakeCode(0x46719D);
MakeFunction(0x4670B8, 0x4671A3);
MakeUnkn(0x4671A4, 1);
MakeNameEx(0x4671A4, "TCustomForm.GetBorderStyles", 0x20);
MakeComm(0x4671A4, "'procedure TCustomForm.GetBorderStyles(var Style:Cardinal; var ExStyle:Cardinal; var ClassStyle:Cardinal);'");
MakeCode(0x4671A4);
MakeCode(0x4671DD);
MakeCode(0x4671DF);
MakeCode(0x46720A);
MakeCode(0x467225);
MakeCode(0x46722D);
MakeCode(0x467235);
MakeCode(0x467249);
MakeCode(0x467259);
MakeCode(0x467281);
MakeCode(0x46729A);
MakeCode(0x4672AF);
MakeFunction(0x4671A4, 0x4672B5);
MakeUnkn(0x4672B8, 1);
MakeNameEx(0x4672B8, "TCustomForm.SetBorderStyle", 0x20);
MakeComm(0x4672B8, "'procedure TCustomForm.SetBorderStyle(Value:TFormBorderStyle);'");
MakeCode(0x4672B8);
MakeCode(0x4672E9);
MakeCode(0x4672ED);
MakeCode(0x4672EF);
MakeCode(0x46731F);
MakeCode(0x4673F7);
MakeCode(0x46740D);
MakeCode(0x46742C);
MakeCode(0x467452);
MakeFunction(0x4672B8, 0x467458);
MakeUnkn(0x467458, 1);
MakeNameEx(0x467458, "TCustomForm.Dock", 0x20);
MakeComm(0x467458, "'procedure TCustomForm.Dock(NewDockSite:TWinControl; ARect:TRect);'");
MakeCode(0x467458);
MakeCode(0x467495);
MakeFunction(0x467458, 0x46749C);
MakeUnkn(0x46749C, 1);
MakeNameEx(0x46749C, "TCustomForm.DoDock", 0x20);
MakeComm(0x46749C, "'procedure TCustomForm.DoDock(NewDockSite:TWinControl; var ARect:TRect);'");
MakeCode(0x46749C);
MakeCode(0x4674BC);
MakeCode(0x4674CF);
MakeCode(0x4674E3);
MakeFunction(0x46749C, 0x4674F2);
MakeUnkn(0x4674F4, 1);
MakeNameEx(0x4674F4, "TCustomForm.GetActiveMDIChild", 0x20);
MakeComm(0x4674F4, "'function TCustomForm.GetActiveMDIChild:TForm;'");
MakeCode(0x4674F4);
MakeCode(0x467525);
MakeFunction(0x4674F4, 0x467527);
MakeUnkn(0x467528, 1);
MakeNameEx(0x467528, "TCustomForm.GetMDIChildCount", 0x20);
MakeComm(0x467528, "'function TCustomForm.GetMDIChildCount:Integer;'");
MakeCode(0x467528);
MakeCode(0x467553);
MakeCode(0x467569);
MakeCode(0x46756D);
MakeFunction(0x467528, 0x467573);
MakeUnkn(0x467574, 1);
MakeNameEx(0x467574, "TCustomForm.GetMDIChildren", 0x20);
MakeComm(0x467574, "'function TCustomForm.GetMDIChildren(I:Integer):TForm;'");
MakeCode(0x467574);
MakeCode(0x46759F);
MakeCode(0x4675B9);
MakeCode(0x4675BD);
MakeCode(0x4675BF);
MakeFunction(0x467574, 0x4675C3);
MakeUnkn(0x4675C4, 1);
MakeNameEx(0x4675C4, "EnumMonitorsProc", 0x20);
MakeComm(0x4675C4, "'function EnumMonitorsProc(hm:HMONITOR; dc:HDC; r:PRect; Data:Pointer):Boolean; stdcall;'");
MakeCode(0x4675C4);
MakeFunction(0x4675C4, 0x4675F3);
MakeUnkn(0x4675F4, 1);
MakeNameEx(0x4675F4, "TCustomForm.GetMonitor", 0x20);
MakeComm(0x4675F4, "'function TCustomForm.GetMonitor:TMonitor;'");
MakeCode(0x4675F4);
MakeCode(0x467625);
MakeCode(0x467646);
MakeCode(0x46764A);
MakeCode(0x467668);
MakeCode(0x467689);
MakeCode(0x46768D);
MakeFunction(0x4675F4, 0x467694);
MakeUnkn(0x467694, 1);
MakeNameEx(0x467694, "TCustomForm.GetCanvas", 0x20);
MakeComm(0x467694, "'function TCustomForm.GetCanvas:TCanvas;'");
MakeCode(0x467694);
MakeFunction(0x467694, 0x46769B);
MakeUnkn(0x46769C, 1);
MakeNameEx(0x46769C, "TCustomForm.SetIcon", 0x20);
MakeComm(0x46769C, "'procedure TCustomForm.SetIcon(Value:TIcon);'");
MakeCode(0x46769C);
MakeFunction(0x46769C, 0x4676A8);
MakeUnkn(0x4676A8, 1);
MakeNameEx(0x4676A8, "TCustomForm.IsForm", 0x20);
MakeComm(0x4676A8, "'function TCustomForm.IsForm(Value:TWinControl):Boolean;'");
MakeCode(0x4676A8);
MakeFunction(0x4676A8, 0x4676AF);
MakeUnkn(0x4676B0, 1);
MakeNameEx(0x4676B0, "TCustomForm.IsIconStored", 0x20);
MakeComm(0x4676B0, "'function TCustomForm.IsIconStored(Value:TIcon):Boolean;'");
MakeCode(0x4676B0);
MakeCode(0x4676CD);
MakeCode(0x4676D1);
MakeFunction(0x4676B0, 0x4676D5);
MakeUnkn(0x4676D8, 1);
MakeNameEx(0x4676D8, "TCustomForm.SetFormStyle", 0x20);
MakeComm(0x4676D8, "'procedure TCustomForm.SetFormStyle(Value:TFormStyle);'");
MakeCode(0x4676D8);
MakeCode(0x467703);
MakeCode(0x467714);
MakeCode(0x467772);
MakeCode(0x46778D);
MakeCode(0x4677AC);
MakeCode(0x4677CB);
MakeCode(0x4677E7);
MakeCode(0x467805);
MakeCode(0x467813);
MakeCode(0x467822);
MakeCode(0x46782F);
MakeCode(0x46783F);
MakeCode(0x467840);
MakeCode(0x467845);
MakeCode(0x467847);
MakeFunction(0x4676D8, 0x46784C);
MakeUnkn(0x46784C, 1);
MakeNameEx(0x46784C, "TCustomForm.RefreshMDIMenu", 0x20);
MakeComm(0x46784C, "'procedure TCustomForm.RefreshMDIMenu;'");
MakeCode(0x46784C);
MakeCode(0x467877);
MakeCode(0x46788A);
MakeCode(0x4678C0);
MakeFunction(0x46784C, 0x4678C5);
MakeUnkn(0x4678C8, 1);
MakeNameEx(0x4678C8, "TCustomForm.SetObjectMenuItem", 0x20);
MakeComm(0x4678C8, "'procedure TCustomForm.SetObjectMenuItem(Value:TMenuItem);'");
MakeCode(0x4678C8);
MakeCode(0x4678E7);
MakeFunction(0x4678C8, 0x4678E9);
MakeUnkn(0x4678EC, 1);
MakeNameEx(0x4678EC, "TCustomForm.SetWindowMenu", 0x20);
MakeComm(0x4678EC, "'procedure TCustomForm.SetWindowMenu(Value:TMenuItem);'");
MakeCode(0x4678EC);
MakeCode(0x46790A);
MakeCode(0x467911);
MakeFunction(0x4678EC, 0x467913);
MakeUnkn(0x467914, 1);
MakeNameEx(0x467914, "TCustomForm.SetMenu", 0x20);
MakeComm(0x467914, "'procedure TCustomForm.SetMenu(Value:TMainMenu);'");
MakeCode(0x467914);
MakeCode(0x46794D);
MakeCode(0x4679A2);
MakeCode(0x4679A8);
MakeCode(0x4679B9);
MakeCode(0x4679C9);
MakeCode(0x4679CB);
MakeCode(0x4679DE);
MakeCode(0x4679F9);
MakeCode(0x467A0E);
MakeCode(0x467A14);
MakeCode(0x467A5A);
MakeCode(0x467A6C);
MakeCode(0x467A91);
MakeCode(0x467AAB);
MakeCode(0x467ABD);
MakeCode(0x467B12);
MakeCode(0x467B1F);
MakeCode(0x467B28);
MakeCode(0x467B2D);
MakeFunction(0x467914, 0x467B36);
MakeUnkn(0x467B38, 1);
MakeNameEx(0x467B38, "TCustomForm.GetPixelsPerInch", 0x20);
MakeComm(0x467B38, "'function TCustomForm.GetPixelsPerInch:Integer;'");
MakeCode(0x467B38);
MakeFunction(0x467B38, 0x467B4B);
MakeUnkn(0x467B4C, 1);
MakeNameEx(0x467B4C, "TCustomForm.GetPopupChildren", 0x20);
MakeComm(0x467B4C, "'function TCustomForm.GetPopupChildren:TList;'");
MakeCode(0x467B4C);
MakeCode(0x467B6A);
MakeFunction(0x467B4C, 0x467B72);
MakeUnkn(0x467B74, 1);
MakeNameEx(0x467B74, "TCustomForm.GetRecreateChildren", 0x20);
MakeComm(0x467B74, "'function TCustomForm.GetRecreateChildren:TList;'");
MakeCode(0x467B74);
MakeCode(0x467B92);
MakeFunction(0x467B74, 0x467B9A);
MakeUnkn(0x467B9C, 1);
MakeNameEx(0x467B9C, "TCustomForm.SetPixelsPerInch", 0x20);
MakeComm(0x467B9C, "'procedure TCustomForm.SetPixelsPerInch(Value:Integer);'");
MakeCode(0x467B9C);
MakeCode(0x467BB6);
MakeCode(0x467BC5);
MakeCode(0x467BCB);
MakeFunction(0x467B9C, 0x467BCE);
MakeUnkn(0x467BD0, 1);
MakeNameEx(0x467BD0, "TCustomForm.SetPosition", 0x20);
MakeComm(0x467BD0, "'procedure TCustomForm.SetPosition(Value:TPosition);'");
MakeCode(0x467BD0);
MakeFunction(0x467BD0, 0x467BEA);
MakeUnkn(0x467BEC, 1);
MakeNameEx(0x467BEC, "TCustomForm.SetPopupMode", 0x20);
MakeComm(0x467BEC, "'procedure TCustomForm.SetPopupMode(Value:TPopupMode);'");
MakeCode(0x467BEC);
MakeCode(0x467C14);
MakeCode(0x467C3C);
MakeFunction(0x467BEC, 0x467C3E);
MakeUnkn(0x467C40, 1);
MakeNameEx(0x467C40, "TCustomForm.SetPopupParent", 0x20);
MakeComm(0x467C40, "'procedure TCustomForm.SetPopupParent(Value:TCustomForm);'");
MakeCode(0x467C40);
MakeCode(0x467C5B);
MakeCode(0x467C75);
MakeCode(0x467C9D);
MakeFunction(0x467C40, 0x467CA0);
MakeUnkn(0x467CA0, 1);
MakeNameEx(0x467CA0, "TCustomForm.GetScaled", 0x20);
MakeComm(0x467CA0, "'function TCustomForm.GetScaled:Boolean;'");
MakeCode(0x467CA0);
MakeFunction(0x467CA0, 0x467CAB);
MakeUnkn(0x467CAC, 1);
MakeNameEx(0x467CAC, "TCustomForm.SetScaled", 0x20);
MakeComm(0x467CAC, "'procedure TCustomForm.SetScaled(Value:Boolean);'");
MakeCode(0x467CAC);
MakeCode(0x467CD7);
MakeFunction(0x467CAC, 0x467CDA);
MakeUnkn(0x467CDC, 1);
MakeNameEx(0x467CDC, "TCustomForm.CMColorChanged", 0x20);
MakeComm(0x467CDC, "'procedure TCustomForm.CMColorChanged(var Message:TMessage);'");
MakeCode(0x467CDC);
MakeCode(0x467CFB);
MakeFunction(0x467CDC, 0x467CFD);
MakeUnkn(0x467D00, 1);
MakeNameEx(0x467D00, "TCustomForm.NormalColor", 0x20);
MakeComm(0x467D00, "'function TCustomForm.NormalColor:TColor;'");
MakeCode(0x467D00);
MakeCode(0x467D13);
MakeFunction(0x467D00, 0x467D16);
MakeUnkn(0x467D18, 1);
MakeNameEx(0x467D18, "TCustomForm.CMCtl3DChanged", 0x20);
MakeComm(0x467D18, "'procedure TCustomForm.CMCtl3DChanged(var Message:TMessage);'");
MakeCode(0x467D18);
MakeCode(0x467D45);
MakeCode(0x467D5E);
MakeFunction(0x467D18, 0x467D60);
MakeUnkn(0x467D60, 1);
MakeNameEx(0x467D60, "TCustomForm.CMFontChanged", 0x20);
MakeComm(0x467D60, "'procedure TCustomForm.CMFontChanged(var Message:TMessage);'");
MakeCode(0x467D60);
MakeCode(0x467D7C);
MakeFunction(0x467D60, 0x467D7E);
MakeUnkn(0x467D80, 1);
MakeNameEx(0x467D80, "TCustomForm.CMMenuChanged", 0x20);
MakeComm(0x467D80, "'procedure TCustomForm.CMMenuChanged(var Message:TMessage);'");
MakeCode(0x467D80);
MakeFunction(0x467D80, 0x467D99);
MakeUnkn(0x467D9C, 1);
MakeNameEx(0x467D9C, "TCustomForm.SetWindowState", 0x20);
MakeComm(0x467D9C, "'procedure TCustomForm.SetWindowState(Value:TWindowState);'");
MakeCode(0x467D9C);
MakeCode(0x467DD7);
MakeFunction(0x467D9C, 0x467DDA);
MakeUnkn(0x467DDC, 1);
MakeNameEx(0x467DDC, "TCustomForm.SetWindowToMonitor", 0x20);
MakeComm(0x467DDC, "'procedure TCustomForm.SetWindowToMonitor;'");
MakeCode(0x467DDC);
MakeCode(0x467E22);
MakeCode(0x467E4E);
MakeCode(0x467E62);
MakeCode(0x467E8A);
MakeCode(0x467ECD);
MakeCode(0x467F27);
MakeCode(0x467F59);
MakeCode(0x467F6D);
MakeCode(0x467FA5);
MakeCode(0x467FD7);
MakeCode(0x467FEB);
MakeCode(0x468074);
MakeCode(0x468109);
MakeCode(0x468121);
MakeCode(0x46812C);
MakeCode(0x468137);
MakeFunction(0x467DDC, 0x46813F);
MakeUnkn(0x468140, 1);
MakeNameEx(0x468140, "GetNonToolWindowPopupParent", 0x20);
MakeComm(0x468140, "'function GetNonToolWindowPopupParent(WndParent:HWND):HWND;'");
MakeCode(0x468140);
MakeCode(0x46814E);
MakeCode(0x468156);
MakeCode(0x46816E);
MakeCode(0x4681A2);
MakeCode(0x4681AA);
MakeFunction(0x468140, 0x4681AF);
MakeUnkn(0x4681B0, 1);
MakeNameEx(0x4681B0, "TCustomForm.CreateParams", 0x20);
MakeComm(0x4681B0, "'procedure TCustomForm.CreateParams(var Params:TCreateParams);'");
MakeCode(0x4681B0);
MakeCode(0x4681ED);
MakeCode(0x468203);
MakeCode(0x468215);
MakeCode(0x468217);
MakeCode(0x468245);
MakeCode(0x468255);
MakeCode(0x46828F);
MakeCode(0x468294);
MakeCode(0x4682BA);
MakeCode(0x4682EB);
MakeCode(0x468303);
MakeCode(0x468325);
MakeCode(0x468332);
MakeCode(0x468360);
MakeCode(0x468371);
MakeCode(0x468380);
MakeCode(0x46838C);
MakeCode(0x4683B0);
MakeCode(0x4683C1);
MakeCode(0x4683D5);
MakeCode(0x4683DC);
MakeCode(0x4683FB);
MakeCode(0x468407);
MakeCode(0x468421);
MakeCode(0x468451);
MakeCode(0x468453);
MakeCode(0x46845F);
MakeCode(0x46846B);
MakeCode(0x46847C);
MakeCode(0x46848A);
MakeCode(0x4684A8);
MakeCode(0x4684B5);
MakeCode(0x4684BC);
MakeCode(0x4684C9);
MakeCode(0x4684DA);
MakeCode(0x4684EB);
MakeFunction(0x4681B0, 0x4684F0);
MakeUnkn(0x4684F0, 1);
MakeNameEx(0x4684F0, "TCustomForm.CreateWnd", 0x20);
MakeComm(0x4684F0, "'procedure TCustomForm.CreateWnd;'");
MakeCode(0x4684F0);
MakeCode(0x468530);
MakeCode(0x468546);
MakeCode(0x468568);
MakeCode(0x468589);
MakeCode(0x46860A);
MakeCode(0x468623);
MakeCode(0x468638);
MakeCode(0x46864E);
MakeCode(0x468659);
MakeCode(0x46866D);
MakeCode(0x468697);
MakeFunction(0x4684F0, 0x4686B8);
MakeUnkn(0x4686C4, 1);
MakeNameEx(0x4686C4, "TCustomForm.CreateWindowHandle", 0x20);
MakeComm(0x4686C4, "'procedure TCustomForm.CreateWindowHandle(const Params:TCreateParams);'");
MakeCode(0x4686C4);
MakeCode(0x468714);
MakeCode(0x46873B);
MakeCode(0x4687A0);
MakeCode(0x4687CD);
MakeCode(0x4687D4);
MakeCode(0x4687E1);
MakeCode(0x4687ED);
MakeCode(0x4687F2);
MakeFunction(0x4686C4, 0x4687FB);
MakeUnkn(0x4687FC, 1);
MakeNameEx(0x4687FC, "DestroyPopupWindow", 0x20);
MakeComm(0x4687FC, "'function DestroyPopupWindow(Window:HWND; Data:PDestroyPopupData):BOOL; stdcall;'");
MakeCode(0x4687FC);
MakeCode(0x468834);
MakeFunction(0x4687FC, 0x46883D);
MakeUnkn(0x468840, 1);
MakeNameEx(0x468840, "TCustomForm.DestroyHandle", 0x20);
MakeComm(0x468840, "'procedure TCustomForm.DestroyHandle;'");
MakeCode(0x468840);
MakeCode(0x468881);
MakeCode(0x4688A2);
MakeCode(0x4688C9);
MakeCode(0x4688D6);
MakeCode(0x4688F7);
MakeCode(0x4688F8);
MakeCode(0x4688FD);
MakeCode(0x46890B);
MakeCode(0x468938);
MakeFunction(0x468840, 0x468944);
MakeUnkn(0x468944, 1);
MakeNameEx(0x468944, "TCustomForm.DestroyWindowHandle", 0x20);
MakeComm(0x468944, "'procedure TCustomForm.DestroyWindowHandle;'");
MakeCode(0x468944);
MakeCode(0x468975);
MakeCode(0x46897C);
MakeFunction(0x468944, 0x468986);
MakeUnkn(0x468988, 1);
MakeNameEx(0x468988, "TCustomForm.DefaultHandler", 0x20);
MakeComm(0x468988, "'procedure TCustomForm.DefaultHandler(var Message:void );'");
MakeCode(0x468988);
MakeCode(0x4689B9);
MakeCode(0x4689DE);
MakeCode(0x4689E7);
MakeFunction(0x468988, 0x4689EA);
MakeUnkn(0x4689EC, 1);
MakeNameEx(0x4689EC, "TCustomForm.SetActiveControl", 0x20);
MakeComm(0x4689EC, "'procedure TCustomForm.SetActiveControl(Control:TWinControl);'");
MakeCode(0x4689EC);
MakeCode(0x468A3E);
MakeCode(0x468A5F);
MakeCode(0x468A7B);
MakeCode(0x468A86);
MakeCode(0x468A93);
MakeCode(0x468A9C);
MakeCode(0x468AA1);
MakeFunction(0x4689EC, 0x468AA9);
MakeUnkn(0x468AAC, 1);
MakeNameEx(0x468AAC, "TCustomForm.DefocusControl", 0x20);
MakeComm(0x468AAC, "'procedure TCustomForm.DefocusControl(Control:TWinControl; Removing:Boolean);'");
MakeCode(0x468AAC);
MakeCode(0x468AD3);
MakeCode(0x468AED);
MakeFunction(0x468AAC, 0x468AF1);
MakeUnkn(0x468AF4, 1);
MakeNameEx(0x468AF4, "TCustomForm.FocusControl", 0x20);
MakeComm(0x468AF4, "'procedure TCustomForm.FocusControl(Control:TWinControl);'");
MakeCode(0x468AF4);
MakeCode(0x468B14);
MakeFunction(0x468AF4, 0x468B17);
MakeUnkn(0x468B18, 1);
MakeNameEx(0x468B18, "TCustomForm.SetFocusedControl", 0x20);
MakeComm(0x468B18, "'function TCustomForm.SetFocusedControl(Control:TWinControl):Boolean;'");
MakeCode(0x468B18);
MakeCode(0x468B49);
MakeCode(0x468B51);
MakeCode(0x468BBF);
MakeCode(0x468BC9);
MakeCode(0x468C33);
MakeCode(0x468C59);
MakeCode(0x468C68);
MakeCode(0x468C79);
MakeCode(0x468CAE);
MakeCode(0x468CC8);
MakeCode(0x468CCD);
MakeCode(0x468CCF);
MakeCode(0x468CFE);
MakeCode(0x468D1C);
MakeCode(0x468D3A);
MakeCode(0x468D41);
MakeCode(0x468D70);
MakeCode(0x468D7D);
MakeCode(0x468D95);
MakeCode(0x468D9A);
MakeCode(0x468DAA);
MakeFunction(0x468B18, 0x468DB5);
MakeUnkn(0x468DBC, 1);
MakeNameEx(0x468DBC, "TCustomForm.sub_00468DBC", 0x20);
MakeComm(0x468DBC, "'procedure TCustomForm.sub_00468DBC;'");
MakeCode(0x468DBC);
MakeFunction(0x468DBC, 0x468DBD);
MakeUnkn(0x468DC0, 1);
MakeNameEx(0x468DC0, "TCustomForm.SetWindowFocus", 0x20);
MakeComm(0x468DC0, "'procedure TCustomForm.SetWindowFocus;'");
MakeCode(0x468DC0);
MakeCode(0x468DDB);
MakeCode(0x468E03);
MakeCode(0x468E05);
MakeCode(0x468E34);
MakeFunction(0x468DC0, 0x468E37);
MakeUnkn(0x468E38, 1);
MakeNameEx(0x468E38, "TCustomForm.SetActive", 0x20);
MakeComm(0x468E38, "'procedure TCustomForm.SetActive(Value:Boolean);'");
MakeCode(0x468E38);
MakeCode(0x468E5D);
MakeCode(0x468E88);
MakeCode(0x468E98);
MakeFunction(0x468E38, 0x468E9B);
MakeUnkn(0x468E9C, 1);
MakeNameEx(0x468E9C, "TCustomForm.SendCancelMode", 0x20);
MakeComm(0x468E9C, "'procedure TCustomForm.SendCancelMode(Sender:TControl);'");
MakeCode(0x468E9C);
MakeCode(0x468EC7);
MakeCode(0x468EE9);
MakeFunction(0x468E9C, 0x468EEC);
MakeUnkn(0x468EEC, 1);
MakeNameEx(0x468EEC, "TCustomForm.MergeMenu", 0x20);
MakeComm(0x468EEC, "'procedure TCustomForm.MergeMenu(MergeState:Boolean);'");
MakeCode(0x468EEC);
MakeCode(0x468F42);
MakeCode(0x468F68);
MakeCode(0x468F6E);
MakeCode(0x468F89);
MakeCode(0x468F90);
MakeFunction(0x468EEC, 0x468F92);
MakeUnkn(0x468F94, 1);
MakeNameEx(0x468F94, "DoNestedActivation", 0x20);
MakeComm(0x468F94, "'procedure DoNestedActivation(Msg:Cardinal; Control:TWinControl; Form:TCustomForm);'");
MakeCode(0x468F94);
MakeCode(0x468FA4);
MakeCode(0x468FA6);
MakeCode(0x468FBE);
MakeCode(0x468FD8);
MakeFunction(0x468F94, 0x468FDD);
MakeUnkn(0x468FE0, 1);
MakeNameEx(0x468FE0, "TCustomForm.Activate", 0x20);
MakeComm(0x468FE0, "'procedure TCustomForm.Activate;'");
MakeCode(0x468FE0);
MakeCode(0x46900D);
MakeFunction(0x468FE0, 0x46900F);
MakeUnkn(0x469010, 1);
MakeNameEx(0x469010, "TCustomForm.Deactivate", 0x20);
MakeComm(0x469010, "'procedure TCustomForm.Deactivate;'");
MakeCode(0x469010);
MakeCode(0x46903D);
MakeFunction(0x469010, 0x46903F);
MakeUnkn(0x469040, 1);
MakeNameEx(0x469040, "TCustomForm.Paint", 0x20);
MakeComm(0x469040, "'procedure TCustomForm.Paint;'");
MakeCode(0x469040);
MakeCode(0x46905B);
MakeFunction(0x469040, 0x46905D);
MakeUnkn(0x469060, 1);
MakeNameEx(0x469060, "TCustomForm.GetIconHandle", 0x20);
MakeComm(0x469060, "'function TCustomForm.GetIconHandle:HICON;'");
MakeCode(0x469060);
MakeFunction(0x469060, 0x46907A);
MakeUnkn(0x46907C, 1);
MakeNameEx(0x46907C, "TCustomForm.PaintWindow", 0x20);
MakeComm(0x46907C, "'procedure TCustomForm.PaintWindow(DC:HDC);'");
MakeCode(0x46907C);
MakeCode(0x4690DD);
MakeCode(0x4690E9);
MakeCode(0x4690F6);
MakeCode(0x469107);
MakeCode(0x46910C);
MakeCode(0x46910E);
MakeCode(0x46911B);
MakeCode(0x46912A);
MakeCode(0x46912F);
MakeFunction(0x46907C, 0x469136);
MakeUnkn(0x469138, 1);
MakeNameEx(0x469138, "TCustomForm.PaletteChanged", 0x20);
MakeComm(0x469138, "'procedure TCustomForm.PaletteChanged(Foreground:Boolean);'");
MakeCode(0x469138);
MakeCode(0x46916F);
MakeCode(0x469187);
MakeCode(0x4691B3);
MakeCode(0x4691BA);
MakeCode(0x4691CF);
MakeFunction(0x469138, 0x4691D9);
MakeUnkn(0x4691DC, 1);
MakeNameEx(0x4691DC, "TCustomForm.WMPaint", 0x20);
MakeComm(0x4691DC, "'procedure TCustomForm.WMPaint(var Message:TWMPaint);'");
MakeCode(0x4691DC);
MakeCode(0x469221);
MakeCode(0x469251);
MakeFunction(0x4691DC, 0x469257);
MakeUnkn(0x46925C, 1);
MakeNameEx(0x46925C, "TCustomForm.WMNCPaint", 0x20);
MakeComm(0x46925C, "'procedure TCustomForm.WMNCPaint(var Message:TWMNCPaint);'");
MakeCode(0x46925C);
MakeCode(0x469280);
MakeFunction(0x46925C, 0x469282);
MakeUnkn(0x469284, 1);
MakeNameEx(0x469284, "TCustomForm.WMIconEraseBkgnd", 0x20);
MakeComm(0x469284, "'procedure TCustomForm.WMIconEraseBkgnd(var Message:TWMEraseBkgnd);'");
MakeCode(0x469284);
MakeCode(0x4692D4);
MakeCode(0x4692DD);
MakeFunction(0x469284, 0x4692E3);
MakeUnkn(0x4692E4, 1);
MakeNameEx(0x4692E4, "TCustomForm.WMEraseBkgnd", 0x20);
MakeComm(0x4692E4, "'procedure TCustomForm.WMEraseBkgnd(var Message:TWMEraseBkgnd);'");
MakeCode(0x4692E4);
MakeCode(0x469307);
MakeFunction(0x4692E4, 0x469319);
MakeUnkn(0x46931C, 1);
MakeNameEx(0x46931C, "TCustomForm.WMQueryDragIcon", 0x20);
MakeComm(0x46931C, "'procedure TCustomForm.WMQueryDragIcon(var Message:TWMQueryDragIcon);'");
MakeCode(0x46931C);
MakeFunction(0x46931C, 0x46932F);
MakeUnkn(0x469330, 1);
MakeNameEx(0x469330, "ModifySystemMenu", 0x20);
MakeComm(0x469330, "'procedure ModifySystemMenu;'");
MakeCode(0x469330);
MakeCode(0x4693EE);
MakeCode(0x46940A);
MakeCode(0x469426);
MakeFunction(0x469330, 0x469429);
MakeUnkn(0x46942C, 1);
MakeNameEx(0x46942C, "TCustomForm.WMNCCreate", 0x20);
MakeComm(0x46942C, "'procedure TCustomForm.WMNCCreate(var Message:TWMNCCreate);'");
MakeCode(0x46942C);
MakeCode(0x46945C);
MakeFunction(0x46942C, 0x46945F);
MakeUnkn(0x469460, 1);
MakeNameEx(0x469460, "TCustomForm.WMNCHitTest", 0x20);
MakeComm(0x469460, "'procedure TCustomForm.WMNCHitTest(var Message:TWMNCHitTest);'");
MakeCode(0x469460);
MakeCode(0x469472);
MakeFunction(0x469460, 0x469478);
MakeUnkn(0x469478, 1);
MakeNameEx(0x469478, "TCustomForm.WMNCLButtonDown", 0x20);
MakeComm(0x469478, "'procedure TCustomForm.WMNCLButtonDown(var Message:TWMNCLButtonDown);'");
MakeCode(0x469478);
MakeCode(0x4694F9);
MakeCode(0x469502);
MakeFunction(0x469478, 0x469505);
MakeUnkn(0x469508, 1);
MakeNameEx(0x469508, "TCustomForm.WMDestroy", 0x20);
MakeComm(0x469508, "'procedure TCustomForm.WMDestroy(var Message:TWMDestroy);'");
MakeCode(0x469508);
MakeCode(0x469528);
MakeCode(0x469559);
MakeCode(0x46955D);
MakeCode(0x4695A9);
MakeCode(0x469607);
MakeCode(0x46960F);
MakeCode(0x46962F);
MakeCode(0x46965D);
MakeFunction(0x469508, 0x46966E);
MakeUnkn(0x469670, 1);
MakeNameEx(0x469670, "TCustomForm.WMCommand", 0x20);
MakeComm(0x469670, "'procedure TCustomForm.WMCommand(Message:TWMCharToItem);'");
MakeCode(0x469670);
MakeComm(0x46967C, "'TCustomForm.FMenu:TMainMenu'");
MakeComm(0x469689, "'TCustomForm.FMenu:TMainMenu'");
MakeCode(0x469698);
MakeCode(0x4696A1);
MakeFunction(0x469670, 0x4696A4);
MakeUnkn(0x4696A4, 1);
MakeNameEx(0x4696A4, "TCustomForm.WMInitMenuPopup", 0x20);
MakeComm(0x4696A4, "'procedure TCustomForm.WMInitMenuPopup(var Message:TWMInitMenuPopup);'");
MakeCode(0x4696A4);
MakeFunction(0x4696A4, 0x4696B9);
MakeUnkn(0x4696BC, 1);
MakeNameEx(0x4696BC, "TCustomForm.WMMenuChar", 0x20);
MakeComm(0x4696BC, "'procedure TCustomForm.WMMenuChar(var Message:TWMMenuChar);'");
MakeCode(0x4696BC);
MakeCode(0x4696E5);
MakeCode(0x4696EE);
MakeFunction(0x4696BC, 0x4696F1);
MakeUnkn(0x4696F4, 1);
MakeNameEx(0x4696F4, "TCustomForm.WMMenuSelect", 0x20);
MakeComm(0x4696F4, "'procedure TCustomForm.WMMenuSelect(var Message:TWMMenuSelect);'");
MakeCode(0x4696F4);
MakeCode(0x469726);
MakeCode(0x46973E);
MakeCode(0x46974F);
MakeCode(0x46976D);
MakeCode(0x469779);
MakeCode(0x469786);
MakeCode(0x46978F);
MakeCode(0x469794);
MakeFunction(0x4696F4, 0x46979C);
MakeUnkn(0x46979C, 1);
MakeNameEx(0x46979C, "TCustomForm.WMActivate", 0x20);
MakeComm(0x46979C, "'procedure TCustomForm.WMActivate(var Message:TWMActivate);'");
MakeCode(0x46979C);
MakeCode(0x4697AB);
MakeFunction(0x46979C, 0x4697B9);
MakeUnkn(0x4697BC, 1);
MakeNameEx(0x4697BC, "TCustomForm.Resizing", 0x20);
MakeComm(0x4697BC, "'procedure TCustomForm.Resizing(State:TWindowState);'");
MakeCode(0x4697BC);
MakeCode(0x4697D1);
MakeCode(0x4697DD);
MakeCode(0x4697F1);
MakeFunction(0x4697BC, 0x4697F3);
MakeUnkn(0x4697F4, 1);
MakeNameEx(0x4697F4, "TCustomForm.WMClose", 0x20);
MakeComm(0x4697F4, "'procedure TCustomForm.WMClose;'");
MakeCode(0x4697F4);
MakeFunction(0x4697F4, 0x4697FA);
MakeUnkn(0x4697FC, 1);
MakeNameEx(0x4697FC, "TCustomForm.WMQueryEndSession", 0x20);
MakeComm(0x4697FC, "'procedure TCustomForm.WMQueryEndSession(var Message:TWMQueryEndSession);'");
MakeCode(0x4697FC);
MakeFunction(0x4697FC, 0x469815);
MakeUnkn(0x469818, 1);
MakeNameEx(0x469818, "TCustomForm.CMAppSysCommand", 0x20);
MakeComm(0x469818, "'procedure TCustomForm.CMAppSysCommand(var Message:TMessage);'");
MakeCode(0x469818);
MakeCode(0x469845);
MakeCode(0x46986B);
MakeFunction(0x469818, 0x46986E);
MakeUnkn(0x469870, 1);
MakeNameEx(0x469870, "TCustomForm.WMSysCommand", 0x20);
MakeComm(0x469870, "'procedure TCustomForm.WMSysCommand(var Message:TWMSysCommand);'");
MakeCode(0x469870);
MakeCode(0x46989D);
MakeCode(0x4698C1);
MakeCode(0x4698CA);
MakeCode(0x4698E0);
MakeCode(0x4698F3);
MakeFunction(0x469870, 0x4698F6);
MakeUnkn(0x4698F8, 1);
MakeNameEx(0x4698F8, "TCustomForm.WMShowWindow", 0x20);
MakeComm(0x4698F8, "'procedure TCustomForm.WMShowWindow(var Message:TWMShowWindow);'");
MakeCode(0x4698F8);
MakeCode(0x46990B);
MakeCode(0x469925);
MakeCode(0x46993F);
MakeCode(0x469946);
MakeCode(0x469952);
MakeCode(0x469981);
MakeCode(0x46998A);
MakeFunction(0x4698F8, 0x46998D);
MakeUnkn(0x469990, 1);
MakeNameEx(0x469990, "TCustomForm.WMMDIActivate", 0x20);
MakeComm(0x469990, "'procedure TCustomForm.WMMDIActivate(var Message:TWMMDIActivate);'");
MakeCode(0x469990);
MakeCode(0x4699E5);
MakeFunction(0x469990, 0x4699E8);
MakeUnkn(0x4699E8, 1);
MakeNameEx(0x4699E8, "TCustomForm.WMNextDlgCtl", 0x20);
MakeComm(0x4699E8, "'procedure TCustomForm.WMNextDlgCtl(var Message:TWMNextDlgCtl);'");
MakeCode(0x4699E8);
MakeCode(0x4699F9);
MakeFunction(0x4699E8, 0x469A11);
MakeUnkn(0x469A14, 1);
MakeNameEx(0x469A14, "TCustomForm.WMEnterMenuLoop", 0x20);
MakeComm(0x469A14, "'procedure TCustomForm.WMEnterMenuLoop(var Message:TMessage);'");
MakeCode(0x469A14);
MakeFunction(0x469A14, 0x469A2F);
MakeUnkn(0x469A30, 1);
MakeNameEx(0x469A30, "GetMenuHelpContext", 0x20);
MakeComm(0x469A30, "'function GetMenuHelpContext(Menu:TMenu):Integer;'");
MakeCode(0x469A30);
MakeCode(0x469A6A);
MakeFunction(0x469A30, 0x469A6D);
MakeUnkn(0x469A70, 1);
MakeNameEx(0x469A70, "ControlHasHelp", 0x20);
MakeComm(0x469A70, "'function ControlHasHelp(const Control:TWinControl):Boolean;'");
MakeCode(0x469A70);
MakeCode(0x469A8C);
MakeCode(0x469AA0);
MakeFunction(0x469A70, 0x469AA5);
MakeUnkn(0x469AA8, 1);
MakeNameEx(0x469AA8, "GetHelpInfo", 0x20);
MakeComm(0x469AA8, "'procedure GetHelpInfo(const Control:TWinControl; var HType:THelpType; var ContextID:Integer; var Keyword:AnsiString);'");
MakeCode(0x469AA8);
MakeCode(0x469AC4);
MakeCode(0x469AD5);
MakeFunction(0x469AA8, 0x469ADA);
MakeUnkn(0x469ADC, 1);
MakeNameEx(0x469ADC, "TCustomForm.WMHelp", 0x20);
MakeComm(0x469ADC, "'procedure TCustomForm.WMHelp(var Message:TWMHelp);'");
MakeCode(0x469ADC);
MakeCode(0x469B1E);
MakeCode(0x469B21);
MakeCode(0x469B30);
MakeCode(0x469B7A);
MakeCode(0x469BA4);
MakeCode(0x469BD3);
MakeCode(0x469C08);
MakeCode(0x469C1D);
MakeCode(0x469C30);
MakeCode(0x469C3D);
MakeCode(0x469C46);
MakeCode(0x469C4B);
MakeFunction(0x469ADC, 0x469C53);
MakeUnkn(0x469C54, 1);
MakeNameEx(0x469C54, "TCustomForm.WMGetMinMaxInfo", 0x20);
MakeComm(0x469C54, "'procedure TCustomForm.WMGetMinMaxInfo(var Message:TWMGetMinMaxInfo);'");
MakeCode(0x469C54);
MakeCode(0x469C81);
MakeCode(0x469C8B);
MakeCode(0x469C97);
MakeCode(0x469CA1);
MakeCode(0x469CB6);
MakeFunction(0x469C54, 0x469CC5);
MakeUnkn(0x469CC8, 1);
MakeNameEx(0x469CC8, "HandleEdge", 0x20);
MakeComm(0x469CC8, "'procedure HandleEdge(var Edge:Integer; SnapToEdge:Integer; SnapDistance:Integer);'");
MakeCode(0x469CC8);
MakeCode(0x469CEE);
MakeFunction(0x469CC8, 0x469CF2);
MakeUnkn(0x469CF4, 1);
MakeNameEx(0x469CF4, "TCustomForm.WMWindowPosChanging", 0x20);
MakeComm(0x469CF4, "'procedure TCustomForm.WMWindowPosChanging(var Message:TWMWindowPosChanging);'");
MakeCode(0x469CF4);
MakeCode(0x469D27);
MakeCode(0x469D3A);
MakeCode(0x469DD0);
MakeFunction(0x469CF4, 0x469DE0);
MakeUnkn(0x469DE0, 1);
MakeNameEx(0x469DE0, "TCustomForm.WMNCCalcSize", 0x20);
MakeComm(0x469DE0, "'procedure TCustomForm.WMNCCalcSize(var Message:TWMNCCalcSize);'");
MakeCode(0x469DE0);
MakeCode(0x469E27);
MakeFunction(0x469DE0, 0x469E2A);
MakeUnkn(0x469E2C, 1);
MakeNameEx(0x469E2C, "TCustomForm.CMActivate", 0x20);
MakeComm(0x469E2C, "'procedure TCustomForm.CMActivate(var Message:TCMActivate);'");
MakeCode(0x469E2C);
MakeCode(0x469E44);
MakeFunction(0x469E2C, 0x469E4E);
MakeUnkn(0x469E50, 1);
MakeNameEx(0x469E50, "TCustomForm.CMDeactivate", 0x20);
MakeComm(0x469E50, "'procedure TCustomForm.CMDeactivate(var Message:TCMDeactivate);'");
MakeCode(0x469E50);
MakeCode(0x469E68);
MakeFunction(0x469E50, 0x469E72);
MakeUnkn(0x469E74, 1);
MakeNameEx(0x469E74, "TCustomForm.CMDialogKey", 0x20);
MakeComm(0x469E74, "'procedure TCustomForm.CMDialogKey(var Message:TCMDialogKey);'");
MakeCode(0x469E74);
MakeCode(0x469E9B);
MakeCode(0x469ECD);
MakeCode(0x469EED);
MakeCode(0x469EEF);
MakeCode(0x469F02);
MakeCode(0x469F0B);
MakeFunction(0x469E74, 0x469F0E);
MakeUnkn(0x469F10, 1);
MakeNameEx(0x469F10, "TCustomForm.CMShowingChanged", 0x20);
MakeComm(0x469F10, "'procedure TCustomForm.CMShowingChanged(var Message:TMessage);'");
MakeCode(0x469F10);
MakeCode(0x469F65);
MakeCode(0x469FBE);
MakeCode(0x469FC8);
MakeCode(0x469FDF);
MakeCode(0x46A00B);
MakeCode(0x46A033);
MakeCode(0x46A051);
MakeCode(0x46A06A);
MakeCode(0x46A083);
MakeCode(0x46A09D);
MakeCode(0x46A0B7);
MakeCode(0x46A0EE);
MakeCode(0x46A135);
MakeCode(0x46A152);
MakeCode(0x46A16B);
MakeCode(0x46A171);
MakeCode(0x46A18A);
MakeCode(0x46A1A3);
MakeCode(0x46A1BD);
MakeCode(0x46A1D7);
MakeCode(0x46A20E);
MakeCode(0x46A23E);
MakeCode(0x46A25C);
MakeCode(0x46A275);
MakeCode(0x46A28E);
MakeCode(0x46A294);
MakeCode(0x46A29A);
MakeCode(0x46A2B7);
MakeCode(0x46A313);
MakeCode(0x46A364);
MakeCode(0x46A386);
MakeCode(0x46A3AB);
MakeCode(0x46A3C5);
MakeCode(0x46A3CF);
MakeCode(0x46A3E6);
MakeCode(0x46A3FD);
MakeCode(0x46A419);
MakeCode(0x46A447);
MakeCode(0x46A47D);
MakeCode(0x46A4A6);
MakeCode(0x46A4B8);
MakeCode(0x46A4E6);
MakeCode(0x46A4F3);
MakeCode(0x46A4FE);
MakeCode(0x46A503);
MakeCode(0x46A505);
MakeCode(0x46A512);
MakeCode(0x46A51B);
MakeCode(0x46A520);
MakeFunction(0x469F10, 0x46A529);
MakeUnkn(0x46A52C, 1);
MakeNameEx(0x46A52C, "TCustomForm.CMIconChanged", 0x20);
MakeComm(0x46A52C, "'procedure TCustomForm.CMIconChanged(var Message:TMessage);'");
MakeCode(0x46A52C);
MakeCode(0x46A547);
MakeFunction(0x46A52C, 0x46A549);
MakeUnkn(0x46A54C, 1);
MakeNameEx(0x46A54C, "TCustomForm.CMRelease", 0x20);
MakeComm(0x46A54C, "'procedure TCustomForm.CMRelease;'");
MakeCode(0x46A54C);
MakeFunction(0x46A54C, 0x46A552);
MakeUnkn(0x46A554, 1);
MakeNameEx(0x46A554, "TCustomForm.CMTextChanged", 0x20);
MakeComm(0x46A554, "'procedure TCustomForm.CMTextChanged(var Message:TMessage);'");
MakeCode(0x46A554);
MakeCode(0x46A5A0);
MakeFunction(0x46A554, 0x46A5A2);
MakeUnkn(0x46A5A4, 1);
MakeNameEx(0x46A5A4, "TCustomForm.CMUIActivate", 0x20);
MakeComm(0x46A5A4, "'procedure TCustomForm.CMUIActivate;'");
MakeCode(0x46A5A4);
MakeComm(0x46A5A6, "'TCustomForm.DefaultHandler'");
MakeFunction(0x46A5A4, 0x46A5AA);
MakeUnkn(0x46A5AC, 1);
MakeNameEx(0x46A5AC, "TCustomForm.CMParentFontChanged", 0x20);
MakeComm(0x46A5AC, "'procedure TCustomForm.CMParentFontChanged(var Message:TMessage);'");
MakeCode(0x46A5AC);
MakeCode(0x46A5CC);
MakeCode(0x46A5F4);
MakeCode(0x46A601);
MakeCode(0x46A60A);
MakeCode(0x46A60F);
MakeCode(0x46A611);
MakeFunction(0x46A5AC, 0x46A615);
MakeUnkn(0x46A618, 1);
MakeNameEx(0x46A618, "TCustomForm.CMIsShortCut", 0x20);
MakeComm(0x46A618, "'procedure TCustomForm.CMIsShortCut(var Message:TWMKey);'");
MakeCode(0x46A618);
MakeCode(0x46A639);
MakeCode(0x46A63E);
MakeFunction(0x46A618, 0x46A642);
MakeUnkn(0x46A644, 1);
MakeNameEx(0x46A644, "TCustomForm.Close", 0x20);
MakeComm(0x46A644, "'procedure TCustomForm.Close;'");
MakeCode(0x46A644);
MakeCode(0x46A661);
MakeCode(0x46A687);
MakeCode(0x46A68D);
MakeCode(0x46A691);
MakeCode(0x46A6BA);
MakeCode(0x46A6C9);
MakeCode(0x46A6DA);
MakeCode(0x46A6E1);
MakeFunction(0x46A644, 0x46A6E5);
MakeUnkn(0x46A6E8, 1);
MakeNameEx(0x46A6E8, "TCustomForm.CloseQuery", 0x20);
MakeComm(0x46A6E8, "'function TCustomForm.CloseQuery:Boolean;'");
MakeCode(0x46A6E8);
MakeCode(0x46A70C);
MakeCode(0x46A725);
MakeCode(0x46A743);
MakeFunction(0x46A6E8, 0x46A74C);
MakeUnkn(0x46A74C, 1);
MakeNameEx(0x46A74C, "TCustomForm.CloseModal", 0x20);
MakeComm(0x46A74C, "'procedure TCustomForm.CloseModal;'");
MakeCode(0x46A74C);
MakeCode(0x46A78C);
MakeCode(0x46A79A);
MakeCode(0x46A7A7);
MakeCode(0x46A7AF);
MakeCode(0x46A7B9);
MakeCode(0x46A7DB);
MakeFunction(0x46A74C, 0x46A7E2);
MakeUnkn(0x46A7E4, 1);
MakeNameEx(0x46A7E4, "TCustomForm.Hide", 0x20);
MakeComm(0x46A7E4, "'procedure TCustomForm.Hide;'");
MakeCode(0x46A7E4);
MakeFunction(0x46A7E4, 0x46A7EC);
MakeUnkn(0x46A7EC, 1);
MakeNameEx(0x46A7EC, "TCustomForm.Show", 0x20);
MakeComm(0x46A7EC, "'procedure TCustomForm.Show;'");
MakeCode(0x46A7EC);
MakeFunction(0x46A7EC, 0x46A801);
MakeUnkn(0x46A804, 1);
MakeNameEx(0x46A804, "TCustomForm.SetFocus", 0x20);
MakeComm(0x46A804, "'procedure TCustomForm.SetFocus;'");
MakeCode(0x46A804);
MakeCode(0x46A834);
MakeCode(0x46A845);
MakeCode(0x46A866);
MakeCode(0x46A86D);
MakeCode(0x46A87A);
MakeCode(0x46A883);
MakeCode(0x46A888);
MakeFunction(0x46A804, 0x46A88E);
MakeUnkn(0x46A890, 1);
MakeNameEx(0x46A890, "TCustomForm.RecreateAsPopup", 0x20);
MakeComm(0x46A890, "'procedure TCustomForm.RecreateAsPopup(AWindowHandle:HWND);'");
MakeCode(0x46A890);
MakeCode(0x46A8B5);
MakeFunction(0x46A890, 0x46A8BE);
MakeUnkn(0x46A8C0, 1);
MakeNameEx(0x46A8C0, "TCustomForm.Release", 0x20);
MakeComm(0x46A8C0, "'procedure TCustomForm.Release;'");
MakeCode(0x46A8C0);
MakeFunction(0x46A8C0, 0x46A8DB);
MakeUnkn(0x46A8DC, 1);
MakeNameEx(0x46A8DC, "TCustomForm.ShowModal", 0x20);
MakeComm(0x46A8DC, "'function TCustomForm.ShowModal:Integer;'");
MakeCode(0x46A8DC);
MakeCode(0x46A92C);
MakeCode(0x46A94D);
MakeCode(0x46A967);
MakeCode(0x46A9B8);
MakeCode(0x46AA5E);
MakeCode(0x46AA85);
MakeCode(0x46AA99);
MakeCode(0x46AAD8);
MakeCode(0x46AAE5);
MakeCode(0x46AAEE);
MakeCode(0x46AAF3);
MakeCode(0x46AAF5);
MakeCode(0x46AB02);
MakeCode(0x46AB1F);
MakeCode(0x46AB2B);
MakeCode(0x46AB63);
MakeCode(0x46AB6D);
MakeCode(0x46AB7C);
MakeCode(0x46AB8F);
MakeCode(0x46AB94);
MakeCode(0x46AB99);
MakeCode(0x46ABA6);
MakeCode(0x46ABB1);
MakeCode(0x46ABB6);
MakeCode(0x46ABB8);
MakeCode(0x46ABC5);
MakeCode(0x46ABCE);
MakeCode(0x46ABD3);
MakeFunction(0x46A8DC, 0x46ABDE);
MakeUnkn(0x46ABE0, 1);
MakeNameEx(0x46ABE0, "TraverseClients", 0x20);
MakeComm(0x46ABE0, "'procedure TraverseClients(Container:TWinControl);'");
MakeCode(0x46ABE0);
MakeCode(0x46AC08);
MakeCode(0x46AC27);
MakeCode(0x46AC44);
MakeCode(0x46AC48);
MakeFunction(0x46ABE0, 0x46AC4E);
MakeUnkn(0x46AC50, 1);
MakeNameEx(0x46AC50, "TCustomForm.UpdateActions", 0x20);
MakeComm(0x46AC50, "'procedure TCustomForm.UpdateActions;'");
MakeCode(0x46AC50);
MakeCode(0x46AC8A);
MakeCode(0x46ACA5);
MakeCode(0x46ACA9);
MakeCode(0x46ACB2);
MakeFunction(0x46AC50, 0x46ACB7);
MakeUnkn(0x46ACB8, 1);
MakeNameEx(0x46ACB8, "TCustomForm.RequestAlign", 0x20);
MakeComm(0x46ACB8, "'procedure TCustomForm.RequestAlign;'");
MakeCode(0x46ACB8);
MakeCode(0x46ACCB);
MakeFunction(0x46ACB8, 0x46ACD7);
MakeUnkn(0x46ACD8, 1);
MakeNameEx(0x46ACD8, "TCustomForm.WMSettingChange", 0x20);
MakeComm(0x46ACD8, "'procedure TCustomForm.WMSettingChange(var Message:TMessage);'");
MakeCode(0x46ACD8);
MakeCode(0x46ACF4);
MakeFunction(0x46ACD8, 0x46ACF7);
MakeUnkn(0x46ACF8, 1);
MakeNameEx(0x46ACF8, "ProcessExecute", 0x20);
MakeComm(0x46ACF8, "'function ProcessExecute(Control:TControl):Boolean;'");
MakeCode(0x46ACF8);
MakeCode(0x46AD1B);
MakeCode(0x46AD1F);
MakeCode(0x46AD21);
MakeFunction(0x46ACF8, 0x46AD25);
MakeUnkn(0x46AD28, 1);
MakeNameEx(0x46AD28, "TraverseClients_0", 0x20);
MakeComm(0x46AD28, "'function TraverseClients(Container:TWinControl):Boolean;'");
MakeCode(0x46AD28);
MakeCode(0x46AD50);
MakeCode(0x46AD72);
MakeCode(0x46AD93);
MakeCode(0x46AD97);
MakeCode(0x46AD9B);
MakeCode(0x46AD9D);
MakeFunction(0x46AD28, 0x46ADA3);
MakeUnkn(0x46ADA4, 1);
MakeNameEx(0x46ADA4, "TCustomForm.CMActionExecute", 0x20);
MakeComm(0x46ADA4, "'procedure TCustomForm.CMActionExecute(var Message:TMessage);'");
MakeCode(0x46ADA4);
MakeCode(0x46ADE8);
MakeCode(0x46ADF2);
MakeFunction(0x46ADA4, 0x46ADF6);
MakeUnkn(0x46ADF8, 1);
MakeNameEx(0x46ADF8, "ProcessUpdate", 0x20);
MakeComm(0x46ADF8, "'function ProcessUpdate(Control:TControl):Boolean;'");
MakeCode(0x46ADF8);
MakeCode(0x46AE1B);
MakeCode(0x46AE1F);
MakeCode(0x46AE21);
MakeFunction(0x46ADF8, 0x46AE25);
MakeUnkn(0x46AE28, 1);
MakeNameEx(0x46AE28, "TraverseClients_1", 0x20);
MakeComm(0x46AE28, "'function TraverseClients(Container:TWinControl):Boolean;'");
MakeCode(0x46AE28);
MakeCode(0x46AE50);
MakeCode(0x46AE72);
MakeCode(0x46AE93);
MakeCode(0x46AE97);
MakeCode(0x46AE9B);
MakeCode(0x46AE9D);
MakeFunction(0x46AE28, 0x46AEA3);
MakeUnkn(0x46AEA4, 1);
MakeNameEx(0x46AEA4, "TCustomForm.CMActionUpdate", 0x20);
MakeComm(0x46AEA4, "'procedure TCustomForm.CMActionUpdate(var Message:TMessage);'");
MakeCode(0x46AEA4);
MakeCode(0x46AEE8);
MakeCode(0x46AEF2);
MakeFunction(0x46AEA4, 0x46AEF6);
MakeUnkn(0x46AEF8, 1);
MakeNameEx(0x46AEF8, "DispatchShortCut", 0x20);
MakeComm(0x46AEF8, "'function DispatchShortCut(const Owner:TComponent):Boolean;'");
MakeCode(0x46AEF8);
MakeCode(0x46AF1A);
MakeCode(0x46AF4E);
MakeCode(0x46AF63);
MakeCode(0x46AF67);
MakeFunction(0x46AEF8, 0x46AF72);
MakeUnkn(0x46AF74, 1);
MakeNameEx(0x46AF74, "TCustomForm.IsShortCut", 0x20);
MakeComm(0x46AF74, "'procedure TCustomForm.IsShortCut(var Message:TWMKey);'");
MakeCode(0x46AF74);
MakeCode(0x46AFA2);
MakeCode(0x46AFCA);
MakeCode(0x46AFDB);
MakeCode(0x46AFDD);
MakeFunction(0x46AF74, 0x46AFEB);
MakeUnkn(0x46AFEC, 1);
MakeNameEx(0x46AFEC, "TCustomForm.QueryInterface", 0x20);
MakeComm(0x46AFEC, "'function TCustomForm.QueryInterface(const IID:TGUID; var Obj:Pointer):HRESULT; stdcall;'");
MakeCode(0x46AFEC);
MakeCode(0x46B015);
MakeCode(0x46B01F);
MakeCode(0x46B021);
MakeFunction(0x46AFEC, 0x46B028);
MakeUnkn(0x46B028, 1);
MakeNameEx(0x46B028, "TCustomForm.MouseWheelHandler", 0x20);
MakeComm(0x46B028, "'procedure TCustomForm.MouseWheelHandler(var Message:TMessage);'");
MakeCode(0x46B028);
MakeCode(0x46B051);
MakeCode(0x46B05A);
MakeFunction(0x46B028, 0x46B05E);
MakeUnkn(0x46B060, 1);
MakeNameEx(0x46B060, "TCustomForm.HandleCreateException", 0x20);
MakeComm(0x46B060, "'procedure TCustomForm.HandleCreateException;'");
MakeCode(0x46B060);
MakeFunction(0x46B060, 0x46B06F);
MakeUnkn(0x46B070, 1);
MakeNameEx(0x46B070, "TCustomForm.SetLayeredAttribs", 0x20);
MakeComm(0x46B070, "'procedure TCustomForm.SetLayeredAttribs;'");
MakeCode(0x46B070);
MakeCode(0x46B0BD);
MakeCode(0x46B0DB);
MakeCode(0x46B117);
MakeCode(0x46B143);
MakeFunction(0x46B070, 0x46B146);
MakeUnkn(0x46B148, 1);
MakeNameEx(0x46B148, "TCustomForm.SetAlphaBlend", 0x20);
MakeComm(0x46B148, "'procedure TCustomForm.SetAlphaBlend(const Value:Boolean);'");
MakeCode(0x46B148);
MakeFunction(0x46B148, 0x46B15C);
MakeUnkn(0x46B15C, 1);
MakeNameEx(0x46B15C, "TCustomForm.SetAlphaBlendValue", 0x20);
MakeComm(0x46B15C, "'procedure TCustomForm.SetAlphaBlendValue(const Value:Byte);'");
MakeCode(0x46B15C);
MakeFunction(0x46B15C, 0x46B170);
MakeUnkn(0x46B170, 1);
MakeNameEx(0x46B170, "TCustomForm.SetTransparentColorValue", 0x20);
MakeComm(0x46B170, "'procedure TCustomForm.SetTransparentColorValue(const Value:TColor);'");
MakeCode(0x46B170);
MakeFunction(0x46B170, 0x46B184);
MakeUnkn(0x46B184, 1);
MakeNameEx(0x46B184, "TCustomForm.SetTransparentColor", 0x20);
MakeComm(0x46B184, "'procedure TCustomForm.SetTransparentColor(const Value:Boolean);'");
MakeCode(0x46B184);
MakeFunction(0x46B184, 0x46B198);
MakeUnkn(0x46B198, 1);
MakeNameEx(0x46B198, "TCustomForm.InitAlphaBlending", 0x20);
MakeComm(0x46B198, "'procedure TCustomForm.InitAlphaBlending(var Params:TCreateParams);'");
MakeCode(0x46B198);
MakeCode(0x46B1B9);
MakeFunction(0x46B198, 0x46B1C1);
MakeUnkn(0x46B1C4, 1);
MakeNameEx(0x46B1C4, "TCustomForm.SetLeft", 0x20);
MakeComm(0x46B1C4, "'procedure TCustomForm.SetLeft(Value:Integer);'");
MakeCode(0x46B1C4);
MakeCode(0x46B1F8);
MakeFunction(0x46B1C4, 0x46B1FE);
MakeUnkn(0x46B200, 1);
MakeNameEx(0x46B200, "TCustomForm.SetTop", 0x20);
MakeComm(0x46B200, "'procedure TCustomForm.SetTop(Value:Integer);'");
MakeCode(0x46B200);
MakeCode(0x46B237);
MakeFunction(0x46B200, 0x46B23D);
MakeUnkn(0x46B240, 1);
MakeNameEx(0x46B240, "TCustomDockForm.Create", 0x20);
MakeComm(0x46B240, "'constructor TCustomDockForm.Create(AOwner:TComponent);'");
MakeCode(0x46B240);
MakeCode(0x46B252);
MakeCode(0x46B2A0);
MakeFunction(0x46B240, 0x46B2A7);
MakeUnkn(0x46B2A8, 1);
MakeNameEx(0x46B2A8, "TCustomDockForm.DoAddDockClient", 0x20);
MakeComm(0x46B2A8, "'procedure TCustomDockForm.DoAddDockClient(Client:TControl; const ARect:TRect);'");
MakeCode(0x46B2A8);
MakeCode(0x46B2F6);
MakeCode(0x46B316);
MakeCode(0x46B31F);
MakeCode(0x46B331);
MakeCode(0x46B33E);
MakeCode(0x46B342);
MakeCode(0x46B34C);
MakeCode(0x46B372);
MakeCode(0x46B37F);
MakeCode(0x46B388);
MakeCode(0x46B38D);
MakeFunction(0x46B2A8, 0x46B395);
MakeUnkn(0x46B398, 1);
MakeNameEx(0x46B398, "TCustomDockForm.DoRemoveDockClient", 0x20);
MakeComm(0x46B398, "'procedure TCustomDockForm.DoRemoveDockClient(Client:TControl);'");
MakeCode(0x46B398);
MakeCode(0x46B3B4);
MakeFunction(0x46B398, 0x46B3B6);
MakeUnkn(0x46B3B8, 1);
MakeNameEx(0x46B3B8, "TCustomDockForm.Loaded", 0x20);
MakeComm(0x46B3B8, "'procedure TCustomDockForm.Loaded;'");
MakeCode(0x46B3B8);
MakeCode(0x46B3D2);
MakeCode(0x46B3F5);
MakeFunction(0x46B3B8, 0x46B404);
MakeUnkn(0x46B404, 1);
MakeNameEx(0x46B404, "TCustomDockForm.GetSiteInfo", 0x20);
MakeComm(0x46B404, "'procedure TCustomDockForm.GetSiteInfo(Client:TControl; var InfluenceRect:TRect; MousePos:TPoint; var CanDock:Boolean);'");
MakeCode(0x46B404);
MakeFunction(0x46B404, 0x46B42F);
MakeUnkn(0x46B430, 1);
MakeNameEx(0x46B430, "TCustomDockForm.WMNCHitTest", 0x20);
MakeComm(0x46B430, "'procedure TCustomDockForm.WMNCHitTest(var Message:TWMNCHitTest);'");
MakeCode(0x46B430);
MakeCode(0x46B452);
MakeFunction(0x46B430, 0x46B455);
MakeUnkn(0x46B458, 1);
MakeNameEx(0x46B458, "TCustomDockForm.WMNCLButtonDown", 0x20);
MakeComm(0x46B458, "'procedure TCustomDockForm.WMNCLButtonDown(var Message:TWMNCLButtonDown);'");
MakeCode(0x46B458);
MakeCode(0x46B4E1);
MakeCode(0x46B4EA);
MakeFunction(0x46B458, 0x46B4ED);
MakeUnkn(0x46B4F0, 1);
MakeNameEx(0x46B4F0, "TCustomDockForm.CMControlListChange", 0x20);
MakeComm(0x46B4F0, "'procedure TCustomDockForm.CMControlListChange(var Message:TMessage);'");
MakeCode(0x46B4F0);
MakeCode(0x46B53F);
MakeFunction(0x46B4F0, 0x46B546);
MakeUnkn(0x46B548, 1);
MakeNameEx(0x46B548, "TCustomDockForm.CMDockNotification", 0x20);
MakeComm(0x46B548, "'procedure TCustomDockForm.CMDockNotification(var Message:TCMDockNotification);'");
MakeCode(0x46B548);
MakeCode(0x46B590);
MakeCode(0x46B5B1);
MakeCode(0x46B5D1);
MakeCode(0x46B5DA);
MakeCode(0x46B5EC);
MakeCode(0x46B5F9);
MakeCode(0x46B5FD);
MakeCode(0x46B607);
MakeCode(0x46B614);
MakeCode(0x46B61D);
MakeCode(0x46B622);
MakeFunction(0x46B548, 0x46B62A);
MakeUnkn(0x46B62C, 1);
MakeNameEx(0x46B62C, "TCustomDockForm.CMUnDockClient", 0x20);
MakeComm(0x46B62C, "'procedure TCustomDockForm.CMUnDockClient(var Message:TCMUnDockClient);'");
MakeCode(0x46B62C);
MakeFunction(0x46B62C, 0x46B642);
MakeUnkn(0x46B644, 1);
MakeNameEx(0x46B644, "TCustomDockForm.CMVisibleChanged", 0x20);
MakeComm(0x46B644, "'procedure TCustomDockForm.CMVisibleChanged(var Message:TMessage);'");
MakeCode(0x46B644);
MakeCode(0x46B667);
MakeCode(0x46B67D);
MakeFunction(0x46B644, 0x46B681);
MakeUnkn(0x46B684, 1);
MakeNameEx(0x46B684, "TMonitor.GetLeft", 0x20);
MakeComm(0x46B684, "'function TMonitor.GetLeft:Integer;'");
MakeCode(0x46B684);
MakeFunction(0x46B684, 0x46B69B);
MakeUnkn(0x46B69C, 1);
MakeNameEx(0x46B69C, "TMonitor.GetHeight", 0x20);
MakeComm(0x46B69C, "'function TMonitor.GetHeight:Integer;'");
MakeCode(0x46B69C);
MakeFunction(0x46B69C, 0x46B6B8);
MakeUnkn(0x46B6B8, 1);
MakeNameEx(0x46B6B8, "TMonitor.GetTop", 0x20);
MakeComm(0x46B6B8, "'function TMonitor.GetTop:Integer;'");
MakeCode(0x46B6B8);
MakeFunction(0x46B6B8, 0x46B6D0);
MakeUnkn(0x46B6D0, 1);
MakeNameEx(0x46B6D0, "TMonitor.GetWidth", 0x20);
MakeComm(0x46B6D0, "'function TMonitor.GetWidth:Integer;'");
MakeCode(0x46B6D0);
MakeFunction(0x46B6D0, 0x46B6EB);
MakeUnkn(0x46B6EC, 1);
MakeNameEx(0x46B6EC, "TMonitor.GetBoundsRect", 0x20);
MakeComm(0x46B6EC, "'function TMonitor.GetBoundsRect:TRect;'");
MakeCode(0x46B6EC);
MakeFunction(0x46B6EC, 0x46B71A);
MakeUnkn(0x46B71C, 1);
MakeNameEx(0x46B71C, "TMonitor.GetWorkareaRect", 0x20);
MakeComm(0x46B71C, "'function TMonitor.GetWorkareaRect:TRect;'");
MakeCode(0x46B71C);
MakeFunction(0x46B71C, 0x46B74A);
MakeUnkn(0x46B74C, 1);
MakeNameEx(0x46B74C, "TMonitor.GetPrimary", 0x20);
MakeComm(0x46B74C, "'function TMonitor.GetPrimary:Boolean;'");
MakeCode(0x46B74C);
MakeFunction(0x46B74C, 0x46B770);
MakeUnkn(0x46B770, 1);
MakeNameEx(0x46B770, "EnumFontsProc", 0x20);
MakeComm(0x46B770, "'function EnumFontsProc(var LogFont:TLogFont; var TextMetric:TTextMetric; FontType:Integer; Data:Pointer):Integer; stdcall;'");
MakeCode(0x46B770);
MakeCode(0x46B7AF);
MakeCode(0x46B7D5);
MakeCode(0x46B7E1);
MakeCode(0x46B809);
MakeCode(0x46B817);
MakeCode(0x46B81C);
MakeCode(0x46B829);
MakeCode(0x46B83A);
MakeCode(0x46B83F);
MakeFunction(0x46B770, 0x46B84C);
MakeUnkn(0x46B84C, 1);
MakeNameEx(0x46B84C, "TScreen.Create", 0x20);
MakeComm(0x46B84C, "'constructor TScreen.Create(AOwner:TComponent);'");
MakeCode(0x46B84C);
MakeCode(0x46B85E);
MakeCode(0x46B99B);
MakeFunction(0x46B84C, 0x46B9A2);
MakeUnkn(0x46B9A4, 1);
MakeNameEx(0x46B9A4, "TScreen.Destroy", 0x20);
MakeComm(0x46B9A4, "'destructor TScreen.Destroy;'");
MakeCode(0x46B9A4);
MakeCode(0x46BA14);
MakeCode(0x46BA27);
MakeCode(0x46BA65);
MakeFunction(0x46B9A4, 0x46BA6A);
MakeUnkn(0x46BA6C, 1);
MakeNameEx(0x46BA6C, "TScreen.GetHeight", 0x20);
MakeComm(0x46BA6C, "'function TScreen.GetHeight:Integer;'");
MakeCode(0x46BA6C);
MakeFunction(0x46BA6C, 0x46BA78);
MakeUnkn(0x46BA78, 1);
MakeNameEx(0x46BA78, "TScreen.GetWidth", 0x20);
MakeComm(0x46BA78, "'function TScreen.GetWidth:Integer;'");
MakeCode(0x46BA78);
MakeFunction(0x46BA78, 0x46BA84);
MakeUnkn(0x46BA84, 1);
MakeNameEx(0x46BA84, "TScreen.GetDesktopTop", 0x20);
MakeComm(0x46BA84, "'function TScreen.GetDesktopTop:Integer;'");
MakeCode(0x46BA84);
MakeFunction(0x46BA84, 0x46BA90);
MakeUnkn(0x46BA90, 1);
MakeNameEx(0x46BA90, "TScreen.GetDesktopLeft", 0x20);
MakeComm(0x46BA90, "'function TScreen.GetDesktopLeft:Integer;'");
MakeCode(0x46BA90);
MakeFunction(0x46BA90, 0x46BA9C);
MakeUnkn(0x46BA9C, 1);
MakeNameEx(0x46BA9C, "TScreen.GetDesktopHeight", 0x20);
MakeComm(0x46BA9C, "'function TScreen.GetDesktopHeight:Integer;'");
MakeCode(0x46BA9C);
MakeFunction(0x46BA9C, 0x46BAA8);
MakeUnkn(0x46BAA8, 1);
MakeNameEx(0x46BAA8, "TScreen.GetDesktopWidth", 0x20);
MakeComm(0x46BAA8, "'function TScreen.GetDesktopWidth:Integer;'");
MakeCode(0x46BAA8);
MakeFunction(0x46BAA8, 0x46BAB4);
MakeUnkn(0x46BAB4, 1);
MakeNameEx(0x46BAB4, "TScreen.GetMonitor", 0x20);
MakeComm(0x46BAB4, "'function TScreen.GetMonitor(Index:Integer):TMonitor;'");
MakeCode(0x46BAB4);
MakeFunction(0x46BAB4, 0x46BAC7);
MakeUnkn(0x46BAC8, 1);
MakeNameEx(0x46BAC8, "TScreen.GetMonitorCount", 0x20);
MakeComm(0x46BAC8, "'function TScreen.GetMonitorCount:Integer;'");
MakeCode(0x46BAC8);
MakeCode(0x46BADE);
MakeFunction(0x46BAC8, 0x46BAE1);
MakeUnkn(0x46BAE4, 1);
MakeNameEx(0x46BAE4, "TScreen.GetForm", 0x20);
MakeComm(0x46BAE4, "'function TScreen.GetForm(Index:Integer):TForm;'");
MakeCode(0x46BAE4);
MakeFunction(0x46BAE4, 0x46BAF7);
MakeUnkn(0x46BAF8, 1);
MakeNameEx(0x46BAF8, "TScreen.GetFormCount", 0x20);
MakeComm(0x46BAF8, "'function TScreen.GetFormCount:Integer;'");
MakeCode(0x46BAF8);
MakeFunction(0x46BAF8, 0x46BAFF);
MakeUnkn(0x46BB00, 1);
MakeNameEx(0x46BB00, "TScreen.GetCustomForms", 0x20);
MakeComm(0x46BB00, "'function TScreen.GetCustomForms(Index:Integer):TCustomForm;'");
MakeCode(0x46BB00);
MakeFunction(0x46BB00, 0x46BB13);
MakeUnkn(0x46BB14, 1);
MakeNameEx(0x46BB14, "TScreen.GetCustomFormCount", 0x20);
MakeComm(0x46BB14, "'function TScreen.GetCustomFormCount:Integer;'");
MakeCode(0x46BB14);
MakeFunction(0x46BB14, 0x46BB1B);
MakeUnkn(0x46BB1C, 1);
MakeNameEx(0x46BB1C, "TScreen.UpdateLastActive", 0x20);
MakeComm(0x46BB1C, "'procedure TScreen.UpdateLastActive;'");
MakeCode(0x46BB1C);
MakeCode(0x46BB42);
MakeCode(0x46BB65);
MakeFunction(0x46BB1C, 0x46BB67);
MakeUnkn(0x46BB68, 1);
MakeNameEx(0x46BB68, "TScreen.AddForm", 0x20);
MakeComm(0x46BB68, "'procedure TScreen.AddForm(AForm:TCustomForm);'");
MakeCode(0x46BB68);
MakeCode(0x46BB9D);
MakeFunction(0x46BB68, 0x46BBA0);
MakeUnkn(0x46BBA0, 1);
MakeNameEx(0x46BBA0, "TScreen.RemoveForm", 0x20);
MakeComm(0x46BBA0, "'procedure TScreen.RemoveForm(AForm:TCustomForm);'");
MakeCode(0x46BBA0);
MakeCode(0x46BBEB);
MakeFunction(0x46BBA0, 0x46BBEE);
MakeUnkn(0x46BBF0, 1);
MakeNameEx(0x46BBF0, "TScreen.AddDataModule", 0x20);
MakeComm(0x46BBF0, "'procedure TScreen.AddDataModule(DataModule:TDataModule);'");
MakeCode(0x46BBF0);
MakeFunction(0x46BBF0, 0x46BBF9);
MakeUnkn(0x46BBFC, 1);
MakeNameEx(0x46BBFC, "TScreen.RemoveDataModule", 0x20);
MakeComm(0x46BBFC, "'procedure TScreen.RemoveDataModule(DataModule:TDataModule);'");
MakeCode(0x46BBFC);
MakeFunction(0x46BBFC, 0x46BC05);
MakeUnkn(0x46BC08, 1);
MakeNameEx(0x46BC08, "TScreen.CreateCursors", 0x20);
MakeComm(0x46BC08, "'procedure TScreen.CreateCursors;'");
MakeCode(0x46BC08);
MakeCode(0x46BC27);
MakeCode(0x46BC31);
MakeCode(0x46BC36);
MakeCode(0x46BC3E);
MakeCode(0x46BC40);
MakeFunction(0x46BC08, 0x46BC62);
MakeUnkn(0x46BC64, 1);
MakeNameEx(0x46BC64, "TScreen.DestroyCursors", 0x20);
MakeComm(0x46BC64, "'procedure TScreen.DestroyCursors;'");
MakeCode(0x46BC64);
MakeCode(0x46BC71);
MakeCode(0x46BC7E);
MakeCode(0x46BC87);
MakeCode(0x46BC90);
MakeCode(0x46BCA4);
MakeCode(0x46BCBD);
MakeFunction(0x46BC64, 0x46BCC2);
MakeUnkn(0x46BCC4, 1);
MakeNameEx(0x46BCC4, "TScreen.FindMonitor", 0x20);
MakeComm(0x46BCC4, "'function TScreen.FindMonitor(Handle:HMONITOR):TMonitor;'");
MakeCode(0x46BCC4);
MakeCode(0x46BCE3);
MakeCode(0x46BCFF);
MakeCode(0x46BD03);
MakeFunction(0x46BCC4, 0x46BD0C);
MakeUnkn(0x46BD0C, 1);
MakeNameEx(0x46BD0C, "TScreen.InsertCursor", 0x20);
MakeComm(0x46BD0C, "'procedure TScreen.InsertCursor(Index:Integer; Handle:HCURSOR);'");
MakeCode(0x46BD0C);
MakeFunction(0x46BD0C, 0x46BD31);
MakeUnkn(0x46BD34, 1);
MakeNameEx(0x46BD34, "TScreen.GetImes", 0x20);
MakeComm(0x46BD34, "'function TScreen.GetImes:TStrings;'");
MakeCode(0x46BD34);
MakeCode(0x46BDA5);
MakeCode(0x46BE84);
MakeCode(0x46BE91);
MakeCode(0x46BE9B);
MakeCode(0x46BEA0);
MakeCode(0x46BEA2);
MakeCode(0x46BEAF);
MakeCode(0x46BEC0);
MakeCode(0x46BEC6);
MakeCode(0x46BED3);
MakeCode(0x46BEDF);
MakeCode(0x46BEE4);
MakeFunction(0x46BD34, 0x46BEED);
MakeUnkn(0x46BF34, 1);
MakeNameEx(0x46BF34, "TScreen.GetDefaultIME", 0x20);
MakeComm(0x46BF34, "'function TScreen.GetDefaultIME:AnsiString;'");
MakeCode(0x46BF34);
MakeFunction(0x46BF34, 0x46BF4E);
MakeUnkn(0x46BF50, 1);
MakeNameEx(0x46BF50, "TScreen.IconFontChanged", 0x20);
MakeComm(0x46BF50, "'procedure TScreen.IconFontChanged(Sender:TObject);'");
MakeCode(0x46BF50);
MakeCode(0x46BF9B);
MakeFunction(0x46BF50, 0x46BF9E);
MakeUnkn(0x46BFA0, 1);
MakeNameEx(0x46BFA0, "TScreen.GetDataModule", 0x20);
MakeComm(0x46BFA0, "'function TScreen.GetDataModule(Index:Integer):TDataModule;'");
MakeCode(0x46BFA0);
MakeFunction(0x46BFA0, 0x46BFB3);
MakeUnkn(0x46BFB4, 1);
MakeNameEx(0x46BFB4, "TScreen.GetDataModuleCount", 0x20);
MakeComm(0x46BFB4, "'function TScreen.GetDataModuleCount:Integer;'");
MakeCode(0x46BFB4);
MakeFunction(0x46BFB4, 0x46BFBB);
MakeUnkn(0x46BFBC, 1);
MakeNameEx(0x46BFBC, "TScreen.GetCursors", 0x20);
MakeComm(0x46BFBC, "'function TScreen.GetCursors(Index:Integer):HCURSOR;'");
MakeCode(0x46BFBC);
MakeCode(0x46BFC8);
MakeCode(0x46BFCA);
MakeCode(0x46BFD3);
MakeCode(0x46BFDC);
MakeCode(0x46BFDF);
MakeFunction(0x46BFBC, 0x46BFE2);
MakeUnkn(0x46BFE4, 1);
MakeNameEx(0x46BFE4, "TScreen.SetCursor", 0x20);
MakeComm(0x46BFE4, "'procedure TScreen.SetCursor(Value:TCursor);'");
MakeCode(0x46BFE4);
MakeCode(0x46C063);
MakeCode(0x46C073);
MakeCode(0x46C076);
MakeFunction(0x46BFE4, 0x46C07E);
MakeUnkn(0x46C080, 1);
MakeNameEx(0x46C080, "TScreen.GetMetricSettings", 0x20);
MakeComm(0x46C080, "'procedure TScreen.GetMetricSettings;'");
MakeCode(0x46C080);
MakeCode(0x46C0A8);
MakeCode(0x46C0CB);
MakeCode(0x46C0F6);
MakeCode(0x46C10A);
MakeCode(0x46C15E);
MakeCode(0x46C182);
MakeCode(0x46C1A2);
MakeCode(0x46C1AF);
MakeCode(0x46C1C6);
MakeCode(0x46C1C7);
MakeCode(0x46C1CC);
MakeFunction(0x46C080, 0x46C1D3);
MakeUnkn(0x46C1D4, 1);
MakeNameEx(0x46C1D4, "TScreen.DisableAlign", 0x20);
MakeComm(0x46C1D4, "'procedure TScreen.DisableAlign;'");
MakeCode(0x46C1D4);
MakeFunction(0x46C1D4, 0x46C1DC);
MakeUnkn(0x46C1DC, 1);
MakeNameEx(0x46C1DC, "TScreen.EnableAlign", 0x20);
MakeComm(0x46C1DC, "'procedure TScreen.EnableAlign;'");
MakeCode(0x46C1DC);
MakeFunction(0x46C1DC, 0x46C1FC);
MakeUnkn(0x46C1FC, 1);
MakeNameEx(0x46C1FC, "TScreen.Realign", 0x20);
MakeComm(0x46C1FC, "'procedure TScreen.Realign;'");
MakeCode(0x46C1FC);
MakeFunction(0x46C1FC, 0x46C204);
MakeUnkn(0x46C204, 1);
MakeNameEx(0x46C204, "InsertBefore_0", 0x20);
MakeComm(0x46C204, "'function InsertBefore(C1:TCustomForm; C2:TCustomForm; AAlign:TAlign):Boolean;'");
MakeCode(0x46C204);
MakeCode(0x46C21F);
MakeCode(0x46C236);
MakeCode(0x46C253);
MakeCode(0x46C26A);
MakeCode(0x46C285);
MakeFunction(0x46C204, 0x46C289);
MakeUnkn(0x46C28C, 1);
MakeNameEx(0x46C28C, "DoPosition_0", 0x20);
MakeComm(0x46C28C, "'procedure DoPosition(Form:TCustomForm; AAlign:TAlign);'");
MakeCode(0x46C28C);
MakeCode(0x46C2B9);
MakeCode(0x46C2BC);
MakeCode(0x46C2E0);
MakeCode(0x46C2E6);
MakeCode(0x46C318);
MakeCode(0x46C32F);
MakeCode(0x46C345);
MakeCode(0x46C353);
MakeCode(0x46C36D);
MakeCode(0x46C377);
MakeCode(0x46C38C);
MakeCode(0x46C3B3);
MakeCode(0x46C3C2);
MakeCode(0x46C3EA);
MakeCode(0x46C3FB);
MakeCode(0x46C40C);
MakeCode(0x46C418);
MakeCode(0x46C425);
MakeCode(0x46C43F);
MakeFunction(0x46C28C, 0x46C446);
MakeUnkn(0x46C448, 1);
MakeNameEx(0x46C448, "DoAlign_0", 0x20);
MakeComm(0x46C448, "'procedure DoAlign(AAlign:TAlign);'");
MakeCode(0x46C448);
MakeCode(0x46C4BB);
MakeCode(0x46C4D9);
MakeCode(0x46C519);
MakeCode(0x46C51A);
MakeCode(0x46C543);
MakeCode(0x46C552);
MakeCode(0x46C558);
MakeCode(0x46C56E);
MakeCode(0x46C590);
MakeFunction(0x46C448, 0x46C597);
MakeUnkn(0x46C598, 1);
MakeNameEx(0x46C598, "AlignWork_0", 0x20);
MakeComm(0x46C598, "'function AlignWork:Boolean;'");
MakeCode(0x46C598);
MakeCode(0x46C5B2);
MakeCode(0x46C5E0);
MakeCode(0x46C5E6);
MakeCode(0x46C5E8);
MakeFunction(0x46C598, 0x46C5EE);
MakeUnkn(0x46C5F0, 1);
MakeNameEx(0x46C5F0, "TScreen.AlignForms", 0x20);
MakeComm(0x46C5F0, "'procedure TScreen.AlignForms(AForm:TCustomForm; var Rect:TRect);'");
MakeCode(0x46C5F0);
MakeCode(0x46C654);
MakeCode(0x46C661);
MakeCode(0x46C66A);
MakeCode(0x46C66F);
MakeCode(0x46C671);
MakeFunction(0x46C5F0, 0x46C675);
MakeUnkn(0x46C678, 1);
MakeNameEx(0x46C678, "TScreen.AlignForm", 0x20);
MakeComm(0x46C678, "'procedure TScreen.AlignForm(AForm:TCustomForm);'");
MakeCode(0x46C678);
MakeCode(0x46C69E);
MakeCode(0x46C6D0);
MakeCode(0x46C6DD);
MakeCode(0x46C6F1);
MakeCode(0x46C6F6);
MakeCode(0x46C6F8);
MakeFunction(0x46C678, 0x46C6FD);
MakeUnkn(0x46C700, 1);
MakeNameEx(0x46C700, "TScreen.GetFonts", 0x20);
MakeComm(0x46C700, "'function TScreen.GetFonts:TStrings;'");
MakeCode(0x46C700);
MakeCode(0x46C78B);
MakeCode(0x46C798);
MakeCode(0x46C7A4);
MakeCode(0x46C7A9);
MakeCode(0x46C7AB);
MakeFunction(0x46C700, 0x46C7B5);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x46C7C0, -1);
MakeDword(0x46C7BC);
MakeDword(0x46C7B8);
MakeUnkn(0x46C7C8, 1);
MakeNameEx(0x46C7C8, "TScreen.ResetFonts", 0x20);
MakeComm(0x46C7C8, "'procedure TScreen.ResetFonts;'");
MakeCode(0x46C7C8);
MakeFunction(0x46C7C8, 0x46C7D1);
MakeUnkn(0x46C7D4, 1);
MakeNameEx(0x46C7D4, "GetHint", 0x20);
MakeComm(0x46C7D4, "'function GetHint(Control:TControl):AnsiString;'");
MakeCode(0x46C7D4);
MakeCode(0x46C7DE);
MakeCode(0x46C7EC);
MakeCode(0x46C7FC);
MakeCode(0x46C800);
MakeFunction(0x46C7D4, 0x46C80A);
MakeUnkn(0x46C80C, 1);
MakeNameEx(0x46C80C, "GetHintControl", 0x20);
MakeComm(0x46C80C, "'function GetHintControl(Control:TControl):TControl;'");
MakeCode(0x46C80C);
MakeFunction(0x46C80C, 0x46C82B);
MakeUnkn(0x46C82C, 1);
MakeNameEx(0x46C82C, "HintTimerProc", 0x20);
MakeComm(0x46C82C, "'procedure HintTimerProc(Wnd:HWND; Msg:Longint; TimerID:Longint; SysTime:Longint); stdcall;'");
MakeCode(0x46C82C);
MakeCode(0x46C853);
MakeCode(0x46C85D);
MakeCode(0x46C877);
MakeFunction(0x46C82C, 0x46C87E);
MakeUnkn(0x46C880, 1);
MakeNameEx(0x46C880, "HintMouseThread", 0x20);
MakeComm(0x46C880, "'procedure HintMouseThread(Param:Integer); stdcall;'");
MakeCode(0x46C880);
MakeCode(0x46C898);
MakeCode(0x46C8C1);
MakeFunction(0x46C880, 0x46C8DC);
MakeUnkn(0x46C8DC, 1);
MakeNameEx(0x46C8DC, "HintGetMsgHook", 0x20);
MakeComm(0x46C8DC, "'function HintGetMsgHook(nCode:Integer; wParam:Longint; var Msg:TMsg):Longint; stdcall;'");
MakeCode(0x46C8DC);
MakeCode(0x46C914);
MakeFunction(0x46C8DC, 0x46C91D);
MakeUnkn(0x46C920, 1);
MakeNameEx(0x46C920, "HookHintHooks", 0x20);
MakeComm(0x46C920, "'procedure HookHintHooks;'");
MakeCode(0x46C920);
MakeCode(0x46C952);
MakeCode(0x46C96D);
MakeCode(0x46C991);
MakeFunction(0x46C920, 0x46C993);
MakeUnkn(0x46C994, 1);
MakeNameEx(0x46C994, "UnhookHintHooks", 0x20);
MakeComm(0x46C994, "'procedure UnhookHintHooks;'");
MakeCode(0x46C994);
MakeCode(0x46C9A8);
MakeCode(0x46C9DD);
MakeFunction(0x46C994, 0x46C9F0);
MakeUnkn(0x46C9F0, 1);
MakeNameEx(0x46C9F0, "GetAnimation", 0x20);
MakeComm(0x46C9F0, "'function GetAnimation:Boolean;'");
MakeCode(0x46C9F0);
MakeCode(0x46CA19);
MakeFunction(0x46C9F0, 0x46CA1E);
MakeUnkn(0x46CA20, 1);
MakeNameEx(0x46CA20, "SetAnimation", 0x20);
MakeComm(0x46CA20, "'procedure SetAnimation(Value:Boolean);'");
MakeCode(0x46CA20);
MakeFunction(0x46CA20, 0x46CA46);
MakeUnkn(0x46CA48, 1);
MakeNameEx(0x46CA48, "ShowWinNoAnimate", 0x20);
MakeComm(0x46CA48, "'procedure ShowWinNoAnimate(Handle:HWND; CmdShow:Integer);'");
MakeCode(0x46CA48);
MakeCode(0x46CA61);
MakeCode(0x46CA73);
MakeFunction(0x46CA48, 0x46CA77);
MakeUnkn(0x46CA78, 1);
MakeNameEx(0x46CA78, "TScreen.MonitorFromWindow", 0x20);
MakeComm(0x46CA78, "'function TScreen.MonitorFromWindow(const Handle:THandle; MonitorDefault:TMonitorDefaultTo):TMonitor;'");
MakeCode(0x46CA78);
MakeFunction(0x46CA78, 0x46CAA3);
MakeUnkn(0x46CAA4, 1);
MakeNameEx(0x46CAA4, "TScreen.ClearMonitors", 0x20);
MakeComm(0x46CAA4, "'procedure TScreen.ClearMonitors;'");
MakeCode(0x46CAA4);
MakeCode(0x46CAB7);
MakeCode(0x46CACA);
MakeFunction(0x46CAA4, 0x46CADB);
MakeUnkn(0x46CADC, 1);
MakeNameEx(0x46CADC, "TScreen.GetMonitors", 0x20);
MakeComm(0x46CADC, "'procedure TScreen.GetMonitors;'");
MakeCode(0x46CADC);
MakeFunction(0x46CADC, 0x46CAFE);
MakeUnkn(0x46CB00, 1);
MakeNameEx(0x46CB00, "TScreen.GetPrimaryMonitor", 0x20);
MakeComm(0x46CB00, "'function TScreen.GetPrimaryMonitor:TMonitor;'");
MakeCode(0x46CB00);
MakeCode(0x46CB19);
MakeCode(0x46CB38);
MakeCode(0x46CB3C);
MakeCode(0x46CB54);
MakeCode(0x46CB73);
MakeCode(0x46CB77);
MakeFunction(0x46CB00, 0x46CB7E);
MakeUnkn(0x46CB90, 1);
MakeNameEx(0x46CB90, "TApplication.Create", 0x20);
MakeComm(0x46CB90, "'constructor TApplication.Create(AOwner:TComponent);'");
MakeCode(0x46CB90);
MakeCode(0x46CBA7);
MakeCode(0x46CBCF);
MakeCode(0x46CBE9);
MakeCode(0x46CCF0);
MakeCode(0x46CD04);
MakeCode(0x46CD55);
MakeCode(0x46CD95);
MakeFunction(0x46CB90, 0x46CD9D);
MakeUnkn(0x46CDAC, 1);
MakeNameEx(0x46CDAC, "TApplication.Destroy", 0x20);
MakeComm(0x46CDAC, "'destructor TApplication.Destroy;'");
MakeCode(0x46CDAC);
MakeCode(0x46CDE4);
MakeCode(0x46CE09);
MakeCode(0x46CE19);
MakeCode(0x46CE4B);
MakeCode(0x46CE82);
MakeCode(0x46CE8B);
MakeCode(0x46CE99);
MakeCode(0x46CEA5);
MakeCode(0x46CEDC);
MakeFunction(0x46CDAC, 0x46CEE2);
MakeUnkn(0x46CEE4, 1);
MakeNameEx(0x46CEE4, "TApplication.CreateHandle", 0x20);
MakeComm(0x46CEE4, "'procedure TApplication.CreateHandle;'");
MakeCode(0x46CEE4);
MakeCode(0x46CF86);
MakeCode(0x46CF98);
MakeCode(0x46CFAB);
MakeCode(0x46D031);
MakeCode(0x46D06F);
MakeCode(0x46D07C);
MakeCode(0x46D085);
MakeCode(0x46D08A);
MakeFunction(0x46CEE4, 0x46D091);
MakeUnkn(0x46D094, 1);
MakeNameEx(0x46D094, "TApplication.ControlDestroyed", 0x20);
MakeComm(0x46D094, "'procedure TApplication.ControlDestroyed(Control:TControl);'");
MakeCode(0x46D094);
MakeCode(0x46D0A5);
MakeCode(0x46D0AF);
MakeCode(0x46D0BD);
MakeCode(0x46D0D2);
MakeCode(0x46D0E0);
MakeCode(0x46D0EA);
MakeFunction(0x46D094, 0x46D0F4);
MakeUnkn(0x46D0F4, 1);
MakeNameEx(0x46D0F4, "GetTopMostWindows", 0x20);
MakeComm(0x46D0F4, "'function GetTopMostWindows(Handle:HWND; Info:Pointer):BOOL; stdcall;'");
MakeCode(0x46D0F4);
MakeCode(0x46D13F);
MakeCode(0x46D153);
MakeCode(0x46D15A);
MakeFunction(0x46D0F4, 0x46D163);
MakeUnkn(0x46D164, 1);
MakeNameEx(0x46D164, "TApplication.DoNormalizeTopMosts", 0x20);
MakeComm(0x46D164, "'procedure TApplication.DoNormalizeTopMosts(IncludeMain:Boolean);'");
MakeCode(0x46D164);
MakeCode(0x46D1CE);
MakeCode(0x46D1DD);
MakeCode(0x46D208);
MakeCode(0x46D20E);
MakeFunction(0x46D164, 0x46D213);
MakeUnkn(0x46D214, 1);
MakeNameEx(0x46D214, "TApplication.ModalStarted", 0x20);
MakeComm(0x46D214, "'procedure TApplication.ModalStarted;'");
MakeCode(0x46D214);
MakeCode(0x46D23E);
MakeFunction(0x46D214, 0x46D240);
MakeUnkn(0x46D240, 1);
MakeNameEx(0x46D240, "TApplication.ModalFinished", 0x20);
MakeComm(0x46D240, "'procedure TApplication.ModalFinished;'");
MakeCode(0x46D240);
MakeCode(0x46D26A);
MakeFunction(0x46D240, 0x46D26C);
MakeUnkn(0x46D26C, 1);
MakeNameEx(0x46D26C, "TApplication.NormalizeTopMosts", 0x20);
MakeComm(0x46D26C, "'procedure TApplication.NormalizeTopMosts;'");
MakeCode(0x46D26C);
MakeFunction(0x46D26C, 0x46D274);
MakeUnkn(0x46D274, 1);
MakeNameEx(0x46D274, "TApplication.NormalizeAllTopMosts", 0x20);
MakeComm(0x46D274, "'procedure TApplication.NormalizeAllTopMosts;'");
MakeCode(0x46D274);
MakeFunction(0x46D274, 0x46D27C);
MakeUnkn(0x46D27C, 1);
MakeNameEx(0x46D27C, "TApplication.RemovePopupForm", 0x20);
MakeComm(0x46D27C, "'procedure TApplication.RemovePopupForm(APopupForm:TCustomForm);'");
MakeCode(0x46D27C);
MakeCode(0x46D297);
MakeCode(0x46D2C1);
MakeCode(0x46D2C5);
MakeFunction(0x46D27C, 0x46D2C9);
MakeUnkn(0x46D2CC, 1);
MakeNameEx(0x46D2CC, "TApplication.RestoreTopMosts", 0x20);
MakeComm(0x46D2CC, "'procedure TApplication.RestoreTopMosts;'");
MakeCode(0x46D2CC);
MakeCode(0x46D302);
MakeCode(0x46D32A);
MakeCode(0x46D335);
MakeFunction(0x46D2CC, 0x46D338);
MakeUnkn(0x46D338, 1);
MakeNameEx(0x46D338, "GetPopupOwnerWindows", 0x20);
MakeComm(0x46D338, "'function GetPopupOwnerWindows(Handle:HWND; Info:Pointer):BOOL; stdcall;'");
MakeCode(0x46D338);
MakeCode(0x46D368);
MakeCode(0x46D36D);
MakeCode(0x46D39F);
MakeFunction(0x46D338, 0x46D3A8);
MakeUnkn(0x46D3A8, 1);
MakeNameEx(0x46D3A8, "TApplication.DoShowOwnedPopups", 0x20);
MakeComm(0x46D3A8, "'procedure TApplication.DoShowOwnedPopups(Show:Boolean);'");
MakeCode(0x46D3A8);
MakeCode(0x46D3EC);
MakeCode(0x46D40C);
MakeCode(0x46D414);
MakeCode(0x46D441);
MakeCode(0x46D461);
MakeCode(0x46D46C);
MakeFunction(0x46D3A8, 0x46D470);
MakeUnkn(0x46D470, 1);
MakeNameEx(0x46D470, "TApplication.UseRightToLeftReading", 0x20);
MakeComm(0x46D470, "'function TApplication.UseRightToLeftReading:Boolean;'");
MakeCode(0x46D470);
MakeCode(0x46D482);
MakeCode(0x46D485);
MakeFunction(0x46D470, 0x46D488);
MakeUnkn(0x46D488, 1);
MakeNameEx(0x46D488, "TApplication.UseRightToLeftAlignment", 0x20);
MakeComm(0x46D488, "'function TApplication.UseRightToLeftAlignment:Boolean;'");
MakeCode(0x46D488);
MakeCode(0x46D49A);
MakeCode(0x46D49D);
MakeFunction(0x46D488, 0x46D4A0);
MakeUnkn(0x46D4A0, 1);
MakeNameEx(0x46D4A0, "TApplication.CheckIniChange", 0x20);
MakeComm(0x46D4A0, "'function TApplication.CheckIniChange(var Message:TMessage):Boolean;'");
MakeCode(0x46D4A0);
MakeCode(0x46D4B8);
MakeCode(0x46D4CD);
MakeCode(0x46D4DD);
MakeCode(0x46D4F1);
MakeFunction(0x46D4A0, 0x46D4F7);
MakeUnkn(0x46D4F8, 1);
MakeNameEx(0x46D4F8, "TApplication.SettingChange", 0x20);
MakeComm(0x46D4F8, "'procedure TApplication.SettingChange(var Message:TWMSettingChange);'");
MakeCode(0x46D4F8);
MakeCode(0x46D53F);
MakeCode(0x46D54C);
MakeCode(0x46D555);
MakeCode(0x46D55A);
MakeFunction(0x46D4F8, 0x46D561);
MakeUnkn(0x46D564, 1);
MakeNameEx(0x46D564, "Default_0", 0x20);
MakeComm(0x46D564, "'procedure Default;'");
MakeCode(0x46D564);
MakeFunction(0x46D564, 0x46D59E);
MakeUnkn(0x46D5A0, 1);
MakeNameEx(0x46D5A0, "DrawAppIcon", 0x20);
MakeComm(0x46D5A0, "'procedure DrawAppIcon;'");
MakeCode(0x46D5A0);
MakeFunction(0x46D5A0, 0x46D5EA);
MakeUnkn(0x46D5EC, 1);
MakeNameEx(0x46D5EC, "TApplication.WndProc", 0x20);
MakeComm(0x46D5EC, "'procedure TApplication.WndProc(var Message:TMessage);'");
MakeCode(0x46D5EC);
MakeCode(0x46D625);
MakeCode(0x46D643);
MakeCode(0x46D650);
MakeCode(0x46D654);
MakeCode(0x46D6D8);
MakeCode(0x46D703);
MakeCode(0x46D71A);
MakeCode(0x46D757);
MakeCode(0x46D770);
MakeCode(0x46D796);
MakeCode(0x46D7B2);
MakeCode(0x46D7CD);
MakeCode(0x46D7DA);
MakeCode(0x46D7E7);
MakeCode(0x46D7F3);
MakeCode(0x46D80B);
MakeCode(0x46D827);
MakeCode(0x46D833);
MakeCode(0x46D848);
MakeCode(0x46D85B);
MakeCode(0x46D87C);
MakeCode(0x46D8C1);
MakeCode(0x46D8E3);
MakeCode(0x46D91A);
MakeCode(0x46D926);
MakeCode(0x46D956);
MakeCode(0x46D963);
MakeCode(0x46D98F);
MakeCode(0x46D9AB);
MakeCode(0x46D9BA);
MakeCode(0x46DA46);
MakeCode(0x46DA61);
MakeCode(0x46DA6E);
MakeCode(0x46DA8F);
MakeCode(0x46DAB1);
MakeCode(0x46DB4A);
MakeCode(0x46DB72);
MakeCode(0x46DB9A);
MakeCode(0x46DBD9);
MakeCode(0x46DBF3);
MakeCode(0x46DC14);
MakeCode(0x46DC2C);
MakeCode(0x46DC46);
MakeCode(0x46DC57);
MakeCode(0x46DC7D);
MakeCode(0x46DC90);
MakeCode(0x46DC9C);
MakeCode(0x46DCA5);
MakeCode(0x46DCAC);
MakeCode(0x46DCB6);
MakeCode(0x46DCCB);
MakeFunction(0x46D5EC, 0x46DCD2);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x46DCDC, -1);
MakeDword(0x46DCD8);
MakeDword(0x46DCD4);
MakeUnkn(0x46DD00, 1);
MakeNameEx(0x46DD00, "TApplication.GetIconHandle", 0x20);
MakeComm(0x46DD00, "'function TApplication.GetIconHandle:HICON;'");
MakeCode(0x46DD00);
MakeFunction(0x46DD00, 0x46DD1C);
MakeUnkn(0x46DD1C, 1);
MakeNameEx(0x46DD1C, "TApplication.Minimize", 0x20);
MakeComm(0x46DD1C, "'procedure TApplication.Minimize;'");
MakeCode(0x46DD1C);
MakeCode(0x46DD5E);
MakeCode(0x46DDB6);
MakeCode(0x46DDC3);
MakeCode(0x46DDDB);
MakeFunction(0x46DD1C, 0x46DDDD);
MakeUnkn(0x46DDE0, 1);
MakeNameEx(0x46DDE0, "TApplication.Restore", 0x20);
MakeComm(0x46DDE0, "'procedure TApplication.Restore;'");
MakeCode(0x46DDE0);
MakeCode(0x46DE13);
MakeCode(0x46DE3C);
MakeCode(0x46DE49);
MakeCode(0x46DE61);
MakeCode(0x46DE74);
MakeCode(0x46DEA5);
MakeCode(0x46DECE);
MakeCode(0x46DEE6);
MakeFunction(0x46DDE0, 0x46DEE9);
MakeUnkn(0x46DEEC, 1);
MakeNameEx(0x46DEEC, "TApplication.BringToFront", 0x20);
MakeComm(0x46DEEC, "'procedure TApplication.BringToFront;'");
MakeCode(0x46DEEC);
MakeCode(0x46DF22);
MakeFunction(0x46DEEC, 0x46DF25);
MakeUnkn(0x46DF28, 1);
MakeNameEx(0x46DF28, "TApplication.GetTitle", 0x20);
MakeComm(0x46DF28, "'function TApplication.GetTitle:AnsiString;'");
MakeCode(0x46DF28);
MakeCode(0x46DF5D);
MakeCode(0x46DF6A);
MakeFunction(0x46DF28, 0x46DF73);
MakeUnkn(0x46DF74, 1);
MakeNameEx(0x46DF74, "TApplication.SetTitle", 0x20);
MakeComm(0x46DF74, "'procedure TApplication.SetTitle(const Value:AnsiString);'");
MakeCode(0x46DF74);
MakeCode(0x46DFB5);
MakeCode(0x46DFD3);
MakeCode(0x46DFE0);
MakeCode(0x46DFED);
MakeCode(0x46DFF6);
MakeCode(0x46DFFB);
MakeFunction(0x46DF74, 0x46E002);
MakeUnkn(0x46E004, 1);
MakeNameEx(0x46E004, "TApplication.IsDlgMsg", 0x20);
MakeComm(0x46E004, "'function TApplication.IsDlgMsg(var Msg:TMsg):Boolean;'");
MakeCode(0x46E004);
MakeCode(0x46E036);
MakeCode(0x46E049);
MakeFunction(0x46E004, 0x46E04C);
MakeUnkn(0x46E04C, 1);
MakeNameEx(0x46E04C, "TApplication.IsMDIMsg", 0x20);
MakeComm(0x46E04C, "'function TApplication.IsMDIMsg(var Msg:TMsg):Boolean;'");
MakeCode(0x46E04C);
MakeCode(0x46E096);
MakeFunction(0x46E04C, 0x46E09A);
MakeUnkn(0x46E09C, 1);
MakeNameEx(0x46E09C, "TApplication.IsKeyMsg", 0x20);
MakeComm(0x46E09C, "'function TApplication.IsKeyMsg(var Msg:TMsg):Boolean;'");
MakeCode(0x46E09C);
MakeCode(0x46E0E7);
MakeCode(0x46E0EF);
MakeCode(0x46E0FE);
MakeCode(0x46E104);
MakeCode(0x46E12D);
MakeCode(0x46E14C);
MakeCode(0x46E187);
MakeFunction(0x46E09C, 0x46E190);
MakeUnkn(0x46E190, 1);
MakeNameEx(0x46E190, "TApplication.IsHintMsg", 0x20);
MakeComm(0x46E190, "'function TApplication.IsHintMsg(var Msg:TMsg):Boolean;'");
MakeCode(0x46E190);
MakeCode(0x46E1BB);
MakeFunction(0x46E190, 0x46E1C2);
MakeUnkn(0x46E1C4, 1);
MakeNameEx(0x46E1C4, "TApplication.IsShortCut", 0x20);
MakeComm(0x46E1C4, "'function TApplication.IsShortCut(var Message:TWMKey):Boolean;'");
MakeCode(0x46E1C4);
MakeCode(0x46E1EB);
MakeCode(0x46E21B);
MakeCode(0x46E21F);
MakeCode(0x46E221);
MakeFunction(0x46E1C4, 0x46E22E);
MakeUnkn(0x46E230, 1);
MakeNameEx(0x46E230, "TApplication.PopupControlProc", 0x20);
MakeComm(0x46E230, "'procedure TApplication.PopupControlProc(var Message:TMessage);'");
MakeCode(0x46E230);
MakeCode(0x46E259);
MakeCode(0x46E298);
MakeCode(0x46E2B8);
MakeCode(0x46E2BE);
MakeCode(0x46E2C5);
MakeFunction(0x46E230, 0x46E2CA);
MakeUnkn(0x46E2CC, 1);
MakeNameEx(0x46E2CC, "TApplication.ProcessMessage", 0x20);
MakeComm(0x46E2CC, "'function TApplication.ProcessMessage(var Msg:TMsg):Boolean;'");
MakeCode(0x46E2CC);
MakeCode(0x46E2FD);
MakeCode(0x46E301);
MakeCode(0x46E303);
MakeCode(0x46E322);
MakeCode(0x46E336);
MakeCode(0x46E36B);
MakeCode(0x46E3C7);
MakeCode(0x46E3CF);
MakeCode(0x46E3D6);
MakeFunction(0x46E2CC, 0x46E3DE);
MakeUnkn(0x46E3E0, 1);
MakeNameEx(0x46E3E0, "TApplication.ProcessMessages", 0x20);
MakeComm(0x46E3E0, "'procedure TApplication.ProcessMessages;'");
MakeCode(0x46E3E0);
MakeCode(0x46E3E6);
MakeFunction(0x46E3E0, 0x46E3F8);
MakeUnkn(0x46E3F8, 1);
MakeNameEx(0x46E3F8, "TApplication.HandleMessage", 0x20);
MakeComm(0x46E3F8, "'procedure TApplication.HandleMessage;'");
MakeCode(0x46E3F8);
MakeCode(0x46E414);
MakeFunction(0x46E3F8, 0x46E419);
MakeUnkn(0x46E41C, 1);
MakeNameEx(0x46E41C, "TApplication.HookMainWindow", 0x20);
MakeComm(0x46E41C, "'procedure TApplication.HookMainWindow(Hook:TWindowHook);'");
MakeCode(0x46E41C);
MakeCode(0x46E445);
MakeCode(0x46E472);
MakeFunction(0x46E41C, 0x46E477);
MakeUnkn(0x46E478, 1);
MakeNameEx(0x46E478, "TApplication.UnhookMainWindow", 0x20);
MakeComm(0x46E478, "'procedure TApplication.UnhookMainWindow(Hook:TWindowHook);'");
MakeCode(0x46E478);
MakeCode(0x46E4A3);
MakeCode(0x46E4B4);
MakeCode(0x46E4E9);
MakeCode(0x46E4ED);
MakeFunction(0x46E478, 0x46E4F4);
MakeUnkn(0x46E4F4, 1);
MakeNameEx(0x46E4F4, "TApplication.Initialize", 0x20);
MakeComm(0x46E4F4, "'procedure TApplication.Initialize;'");
MakeCode(0x46E4F4);
MakeCode(0x46E509);
MakeFunction(0x46E4F4, 0x46E50B);
MakeUnkn(0x46E50C, 1);
MakeNameEx(0x46E50C, "TApplication.CreateForm", 0x20);
MakeComm(0x46E50C, "'procedure TApplication.CreateForm(InstanceClass:TComponentClass; var Reference:void );'");
MakeCode(0x46E50C);
MakeCode(0x46E540);
MakeCode(0x46E54A);
MakeCode(0x46E560);
MakeCode(0x46E583);
MakeFunction(0x46E50C, 0x46E589);
MakeUnkn(0x46E58C, 1);
MakeNameEx(0x46E58C, "TApplication.Run", 0x20);
MakeComm(0x46E58C, "'procedure TApplication.Run;'");
MakeCode(0x46E58C);
MakeCode(0x46E5E1);
MakeCode(0x46E5E8);
MakeCode(0x46E60A);
MakeCode(0x46E611);
MakeCode(0x46E627);
MakeCode(0x46E631);
MakeCode(0x46E646);
MakeCode(0x46E652);
MakeCode(0x46E65F);
MakeCode(0x46E66A);
MakeCode(0x46E66F);
MakeFunction(0x46E58C, 0x46E677);
MakeUnkn(0x46E678, 1);
MakeNameEx(0x46E678, "TApplication.Terminate", 0x20);
MakeComm(0x46E678, "'procedure TApplication.Terminate;'");
MakeCode(0x46E678);
MakeFunction(0x46E678, 0x46E689);
MakeUnkn(0x46E68C, 1);
MakeNameEx(0x46E68C, "IsClass", 0x20);
MakeComm(0x46E68C, "'function IsClass(Obj:TObject; Cls:TClass):Boolean;'");
MakeCode(0x46E68C);
MakeCode(0x46E69F);
MakeCode(0x46E6A8);
MakeCode(0x46E6D9);
MakeFunction(0x46E68C, 0x46E6E7);
MakeUnkn(0x46E6E8, 1);
MakeNameEx(0x46E6E8, "TApplication.HandleException", 0x20);
MakeComm(0x46E6E8, "'procedure TApplication.HandleException(Sender:TObject);'");
MakeCode(0x46E6E8);
MakeCode(0x46E708);
MakeCode(0x46E751);
MakeCode(0x46E762);
MakeCode(0x46E773);
MakeFunction(0x46E6E8, 0x46E776);
MakeUnkn(0x46E778, 1);
MakeNameEx(0x46E778, "TApplication.MessageBox", 0x20);
MakeComm(0x46E778, "'function TApplication.MessageBox(const Text:PChar; const Caption:PChar; Flags:Longint):Integer;'");
MakeCode(0x46E778);
MakeCode(0x46E7A5);
MakeCode(0x46E7A8);
MakeCode(0x46E814);
MakeCode(0x46E826);
MakeCode(0x46E837);
MakeCode(0x46E85C);
MakeCode(0x46E879);
MakeCode(0x46E886);
MakeCode(0x46E8A3);
MakeCode(0x46E8B5);
MakeCode(0x46E8C6);
MakeCode(0x46E8E0);
MakeCode(0x46E8E5);
MakeFunction(0x46E778, 0x46E8F3);
MakeUnkn(0x46E8F4, 1);
MakeNameEx(0x46E8F4, "TApplication.ShowException", 0x20);
MakeComm(0x46E8F4, "'procedure TApplication.ShowException(E:Exception);'");
MakeCode(0x46E8F4);
MakeCode(0x46E961);
MakeCode(0x46E98E);
MakeCode(0x46E99B);
MakeCode(0x46E9AF);
MakeCode(0x46E9B4);
MakeFunction(0x46E8F4, 0x46E9BC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x46E9C8, -1);
MakeDword(0x46E9C4);
MakeDword(0x46E9C0);
MakeUnkn(0x46E9CC, 1);
MakeNameEx(0x46E9CC, "TApplication.InvokeHelp", 0x20);
MakeComm(0x46E9CC, "'function TApplication.InvokeHelp(Command:Word; Data:Longint):Boolean;'");
MakeCode(0x46E9CC);
MakeCode(0x46EA0C);
MakeCode(0x46EA31);
MakeCode(0x46EA86);
MakeCode(0x46EAA3);
MakeCode(0x46EAC7);
MakeCode(0x46EAE6);
MakeFunction(0x46E9CC, 0x46EAF0);
MakeUnkn(0x46EAF0, 1);
MakeNameEx(0x46EAF0, "TApplication.DoOnHelp", 0x20);
MakeComm(0x46EAF0, "'function TApplication.DoOnHelp(Command:Word; Data:Integer; var CallHelp:Boolean):Boolean;'");
MakeCode(0x46EAF0);
MakeCode(0x46EB48);
MakeCode(0x46EB85);
MakeCode(0x46EBB2);
MakeFunction(0x46EAF0, 0x46EBBC);
MakeUnkn(0x46EBBC, 1);
MakeNameEx(0x46EBBC, "TApplication.HelpKeyword", 0x20);
MakeComm(0x46EBBC, "'function TApplication.HelpKeyword(const Keyword:AnsiString):Boolean;'");
MakeCode(0x46EBBC);
MakeCode(0x46EC22);
MakeCode(0x46EC24);
MakeCode(0x46EC31);
MakeCode(0x46EC3A);
MakeCode(0x46EC3F);
MakeFunction(0x46EBBC, 0x46EC4A);
MakeUnkn(0x46EC4C, 1);
MakeNameEx(0x46EC4C, "TApplication.HelpContext", 0x20);
MakeComm(0x46EC4C, "'function TApplication.HelpContext(Context:THelpContext):Boolean;'");
MakeCode(0x46EC4C);
MakeCode(0x46ECAB);
MakeCode(0x46ECAD);
MakeCode(0x46ECBA);
MakeCode(0x46ECC3);
MakeCode(0x46ECC8);
MakeFunction(0x46EC4C, 0x46ECD3);
MakeUnkn(0x46ECD4, 1);
MakeNameEx(0x46ECD4, "TApplication.HelpCommand", 0x20);
MakeComm(0x46ECD4, "'function TApplication.HelpCommand(Command:Integer; Data:Longint):Boolean;'");
MakeCode(0x46ECD4);
MakeFunction(0x46ECD4, 0x46ECDA);
MakeUnkn(0x46ECDC, 1);
MakeNameEx(0x46ECDC, "TApplication.SetShowHint", 0x20);
MakeComm(0x46ECDC, "'procedure TApplication.SetShowHint(Value:Boolean);'");
MakeCode(0x46ECDC);
MakeCode(0x46ED14);
MakeCode(0x46ED27);
MakeFunction(0x46ECDC, 0x46ED2A);
MakeUnkn(0x46ED2C, 1);
MakeNameEx(0x46ED2C, "TApplication.DoActionIdle", 0x20);
MakeComm(0x46ED2C, "'procedure TApplication.DoActionIdle;'");
MakeCode(0x46ED2C);
MakeCode(0x46ED43);
MakeCode(0x46ED88);
MakeCode(0x46ED8C);
MakeFunction(0x46ED2C, 0x46ED90);
MakeUnkn(0x46ED90, 1);
MakeNameEx(0x46ED90, "TApplication.DoMouseIdle", 0x20);
MakeComm(0x46ED90, "'function TApplication.DoMouseIdle:TControl;'");
MakeCode(0x46ED90);
MakeCode(0x46EDAD);
MakeFunction(0x46ED90, 0x46EDB1);
MakeUnkn(0x46EDB4, 1);
MakeNameEx(0x46EDB4, "IdleTimerProc", 0x20);
MakeComm(0x46EDB4, "'procedure IdleTimerProc(Wnd:HWND; Msg:Longint; TimerID:Longint; SysTime:Longint); stdcall;'");
MakeCode(0x46EDB4);
MakeCode(0x46EDEF);
MakeCode(0x46EDF9);
MakeCode(0x46EE13);
MakeFunction(0x46EDB4, 0x46EE1A);
MakeUnkn(0x46EE1C, 1);
MakeNameEx(0x46EE1C, "TApplication.Idle", 0x20);
MakeComm(0x46EE1C, "'procedure TApplication.Idle(const Msg:TMsg);'");
MakeCode(0x46EE1C);
MakeCode(0x46EE65);
MakeCode(0x46EEBB);
MakeCode(0x46EED8);
MakeCode(0x46EF06);
MakeCode(0x46EF10);
MakeCode(0x46EF25);
MakeCode(0x46EF43);
MakeCode(0x46EF4E);
MakeCode(0x46EF5B);
MakeCode(0x46EF69);
MakeCode(0x46EF6E);
MakeFunction(0x46EE1C, 0x46EF77);
MakeUnkn(0x46EF78, 1);
MakeNameEx(0x46EF78, "TApplication.NotifyForms", 0x20);
MakeComm(0x46EF78, "'procedure TApplication.NotifyForms(Msg:Word);'");
MakeCode(0x46EF78);
MakeCode(0x46EF91);
MakeCode(0x46EFAD);
MakeFunction(0x46EF78, 0x46EFB1);
MakeUnkn(0x46EFB4, 1);
MakeNameEx(0x46EFB4, "TApplication.IconChanged", 0x20);
MakeComm(0x46EFB4, "'procedure TApplication.IconChanged(Sender:TObject);'");
MakeCode(0x46EFB4);
MakeCode(0x46EFEE);
MakeCode(0x46F008);
MakeFunction(0x46EFB4, 0x46F015);
MakeUnkn(0x46F018, 1);
MakeNameEx(0x46F018, "TApplication.SetHint", 0x20);
MakeComm(0x46F018, "'procedure TApplication.SetHint(const Value:AnsiString);'");
MakeCode(0x46F018);
MakeCode(0x46F052);
MakeCode(0x46F087);
MakeCode(0x46F094);
MakeCode(0x46F09D);
MakeCode(0x46F0A2);
MakeCode(0x46F0A4);
MakeFunction(0x46F018, 0x46F0A9);
MakeUnkn(0x46F0AC, 1);
MakeNameEx(0x46F0AC, "SetVisible", 0x20);
MakeComm(0x46F0AC, "'procedure SetVisible(Value:Boolean);'");
MakeCode(0x46F0AC);
MakeCode(0x46F102);
MakeFunction(0x46F0AC, 0x46F105);
MakeUnkn(0x46F108, 1);
MakeNameEx(0x46F108, "TApplication.UpdateVisible", 0x20);
MakeComm(0x46F108, "'procedure TApplication.UpdateVisible;'");
MakeCode(0x46F108);
MakeCode(0x46F12F);
MakeCode(0x46F16F);
MakeCode(0x46F17A);
MakeCode(0x46F17E);
MakeCode(0x46F187);
MakeFunction(0x46F108, 0x46F18D);
MakeUnkn(0x46F190, 1);
MakeNameEx(0x46F190, "TApplication.ValidateHelpSystem", 0x20);
MakeComm(0x46F190, "'function TApplication.ValidateHelpSystem:Boolean;'");
MakeCode(0x46F190);
MakeCode(0x46F1A6);
MakeFunction(0x46F190, 0x46F1AF);
MakeUnkn(0x46F1B0, 1);
MakeNameEx(0x46F1B0, "TApplication.StartHintTimer", 0x20);
MakeComm(0x46F1B0, "'procedure TApplication.StartHintTimer(Value:Integer; TimerMode:TTimerMode);'");
MakeCode(0x46F1B0);
MakeCode(0x46F1ED);
MakeFunction(0x46F1B0, 0x46F1F1);
MakeUnkn(0x46F1F4, 1);
MakeNameEx(0x46F1F4, "TApplication.StopHintTimer", 0x20);
MakeComm(0x46F1F4, "'procedure TApplication.StopHintTimer;'");
MakeCode(0x46F1F4);
MakeCode(0x46F217);
MakeFunction(0x46F1F4, 0x46F219);
MakeUnkn(0x46F21C, 1);
MakeNameEx(0x46F21C, "TApplication.HintMouseMessage", 0x20);
MakeComm(0x46F21C, "'procedure TApplication.HintMouseMessage(Control:TControl; var Message:TMessage);'");
MakeCode(0x46F21C);
MakeCode(0x46F270);
MakeCode(0x46F27C);
MakeCode(0x46F285);
MakeCode(0x46F2C5);
MakeCode(0x46F2DC);
MakeCode(0x46F2E2);
MakeCode(0x46F31B);
MakeCode(0x46F334);
MakeFunction(0x46F21C, 0x46F33C);
MakeUnkn(0x46F33C, 1);
MakeNameEx(0x46F33C, "TApplication.HintTimerExpired", 0x20);
MakeComm(0x46F33C, "'procedure TApplication.HintTimerExpired;'");
MakeCode(0x46F33C);
MakeCode(0x46F35F);
MakeCode(0x46F36E);
MakeFunction(0x46F33C, 0x46F372);
MakeUnkn(0x46F374, 1);
MakeNameEx(0x46F374, "TApplication.HideHint", 0x20);
MakeComm(0x46F374, "'procedure TApplication.HideHint;'");
MakeCode(0x46F374);
MakeCode(0x46F3D6);
MakeCode(0x46F3E2);
MakeFunction(0x46F374, 0x46F3E5);
MakeUnkn(0x46F3E8, 1);
MakeNameEx(0x46F3E8, "TApplication.CancelHint", 0x20);
MakeComm(0x46F3E8, "'procedure TApplication.CancelHint;'");
MakeCode(0x46F3E8);
MakeCode(0x46F40D);
MakeFunction(0x46F3E8, 0x46F40F);
MakeUnkn(0x46F410, 1);
MakeNameEx(0x46F410, "FindScanline", 0x20);
MakeComm(0x46F410, "'function FindScanline(Source:Pointer; MaxLen:Cardinal; Value:Cardinal):Cardinal;'");
MakeCode(0x46F410);
MakeFunction(0x46F410, 0x46F41F);
MakeUnkn(0x46F420, 1);
MakeNameEx(0x46F420, "GetCursorHeightMargin", 0x20);
MakeComm(0x46F420, "'function GetCursorHeightMargin:Integer;'");
MakeCode(0x46F420);
MakeCode(0x46F4C3);
MakeCode(0x46F507);
MakeCode(0x46F519);
MakeCode(0x46F526);
MakeCode(0x46F535);
MakeCode(0x46F53A);
MakeCode(0x46F53C);
MakeCode(0x46F549);
MakeCode(0x46F556);
MakeCode(0x46F563);
MakeCode(0x46F564);
MakeCode(0x46F569);
MakeCode(0x46F56B);
MakeFunction(0x46F420, 0x46F575);
MakeUnkn(0x46F578, 1);
MakeNameEx(0x46F578, "ValidateHintWindow", 0x20);
MakeComm(0x46F578, "'procedure ValidateHintWindow(HintClass:THintWindowClass);'");
MakeCode(0x46F578);
MakeCode(0x46F589);
MakeCode(0x46F5A7);
MakeCode(0x46F5D1);
MakeFunction(0x46F578, 0x46F5D5);
MakeUnkn(0x46F5D8, 1);
MakeNameEx(0x46F5D8, "MultiLineWidth", 0x20);
MakeComm(0x46F5D8, "'function MultiLineWidth(const Value:AnsiString):Integer;'");
MakeCode(0x46F5D8);
MakeCode(0x46F601);
MakeCode(0x46F605);
MakeCode(0x46F60E);
MakeCode(0x46F61D);
MakeCode(0x46F64F);
MakeCode(0x46F655);
MakeCode(0x46F65B);
MakeCode(0x46F660);
MakeCode(0x46F66D);
MakeCode(0x46F676);
MakeCode(0x46F67B);
MakeFunction(0x46F5D8, 0x46F687);
MakeUnkn(0x46F688, 1);
MakeNameEx(0x46F688, "TApplication.ActivateHint", 0x20);
MakeComm(0x46F688, "'procedure TApplication.ActivateHint(CursorPos:TPoint);'");
MakeCode(0x46F688);
MakeCode(0x46F78F);
MakeCode(0x46F7BE);
MakeCode(0x46F883);
MakeCode(0x46F891);
MakeCode(0x46F895);
MakeCode(0x46F897);
MakeCode(0x46F929);
MakeCode(0x46F9BA);
MakeCode(0x46F9C8);
MakeCode(0x46F9DC);
MakeCode(0x46F9E3);
MakeCode(0x46F9F0);
MakeCode(0x46FA0F);
MakeCode(0x46FA14);
MakeFunction(0x46F688, 0x46FA1D);
MakeUnkn(0x46FA20, 1);
MakeNameEx(0x46FA20, "TApplication.AddPopupForm", 0x20);
MakeComm(0x46FA20, "'function TApplication.AddPopupForm(APopupForm:TCustomForm):Integer;'");
MakeCode(0x46FA20);
MakeCode(0x46FA2D);
MakeCode(0x46FA4D);
MakeCode(0x46FA5A);
MakeCode(0x46FA69);
MakeCode(0x46FAB1);
MakeCode(0x46FADE);
MakeFunction(0x46FA20, 0x46FAE7);
MakeUnkn(0x46FAE8, 1);
MakeNameEx(0x46FAE8, "TApplication.GetCurrentHelpFile", 0x20);
MakeComm(0x46FAE8, "'function TApplication.GetCurrentHelpFile:AnsiString;'");
MakeCode(0x46FAE8);
MakeCode(0x46FB13);
MakeCode(0x46FB1D);
MakeFunction(0x46FAE8, 0x46FB21);
MakeUnkn(0x46FB24, 1);
MakeNameEx(0x46FB24, "TApplication.GetActiveFormHandle", 0x20);
MakeComm(0x46FB24, "'function TApplication.GetActiveFormHandle:HWND;'");
MakeCode(0x46FB24);
MakeCode(0x46FB45);
MakeCode(0x46FB53);
MakeCode(0x46FB65);
MakeFunction(0x46FB24, 0x46FB6B);
MakeUnkn(0x46FB6C, 1);
MakeNameEx(0x46FB6C, "TApplication.GetMainFormHandle", 0x20);
MakeComm(0x46FB6C, "'function TApplication.GetMainFormHandle:HWND;'");
MakeCode(0x46FB6C);
MakeCode(0x46FB8D);
MakeCode(0x46FBA4);
MakeFunction(0x46FB6C, 0x46FBAA);
MakeUnkn(0x46FBAC, 1);
MakeNameEx(0x46FBAC, "TApplication.DispatchAction", 0x20);
MakeComm(0x46FBAC, "'function TApplication.DispatchAction(Msg:Longint; Action:TBasicAction):Boolean;'");
MakeCode(0x46FBAC);
MakeCode(0x46FBD7);
MakeCode(0x46FBF3);
MakeCode(0x46FBF7);
MakeCode(0x46FBF9);
MakeCode(0x46FC36);
MakeFunction(0x46FBAC, 0x46FC42);
MakeUnkn(0x46FC44, 1);
MakeNameEx(0x46FC44, "TApplication.ExecuteAction", 0x20);
MakeComm(0x46FC44, "'function TApplication.ExecuteAction(Action:TBasicAction):Boolean;'");
MakeCode(0x46FC44);
MakeCode(0x46FC64);
MakeFunction(0x46FC44, 0x46FC6B);
MakeUnkn(0x46FC6C, 1);
MakeNameEx(0x46FC6C, "TApplication.UpdateAction", 0x20);
MakeComm(0x46FC6C, "'function TApplication.UpdateAction(Action:TBasicAction):Boolean;'");
MakeCode(0x46FC6C);
MakeCode(0x46FC8C);
MakeFunction(0x46FC6C, 0x46FC93);
MakeUnkn(0x46FC94, 1);
MakeNameEx(0x46FC94, "InitProcs", 0x20);
MakeComm(0x46FC94, "'procedure InitProcs;'");
MakeCode(0x46FC94);
MakeCode(0x46FCB5);
MakeFunction(0x46FC94, 0x46FCB7);
MakeUnkn(0x46FCE0, 1);
MakeNameEx(0x46FCE0, "TApplication.WakeMainThread", 0x20);
MakeComm(0x46FCE0, "'procedure TApplication.WakeMainThread(Sender:TObject);'");
MakeCode(0x46FCE0);
MakeFunction(0x46FCE0, 0x46FCF0);
MakeUnkn(0x46FCF0, 1);
MakeNameEx(0x46FCF0, "TApplication.HookSynchronizeWakeup", 0x20);
MakeComm(0x46FCF0, "'procedure TApplication.HookSynchronizeWakeup;'");
MakeCode(0x46FCF0);
MakeFunction(0x46FCF0, 0x46FD00);
MakeUnkn(0x46FD00, 1);
MakeNameEx(0x46FD00, "TApplication.UnhookSynchronizeWakeup", 0x20);
MakeComm(0x46FD00, "'procedure TApplication.UnhookSynchronizeWakeup;'");
MakeCode(0x46FD00);
MakeFunction(0x46FD00, 0x46FD0D);
MakeUnkn(0x46FD10, 1);
MakeNameEx(0x46FD10, "TApplication.IsPreProcessMessage", 0x20);
MakeComm(0x46FD10, "'function TApplication.IsPreProcessMessage(var Msg:TMsg):Boolean;'");
MakeCode(0x46FD10);
MakeCode(0x46FD3A);
MakeCode(0x46FD47);
MakeCode(0x46FD60);
MakeCode(0x46FD73);
MakeFunction(0x46FD10, 0x46FD7A);
MakeUnkn(0x46FD8C, 1);
MakeNameEx(0x46FD8C, "Finalization_6", 0x20);
MakeComm(0x46FD8C, "'procedure Finalization;'");
MakeCode(0x46FD8C);
MakeCode(0x46FDB3);
MakeCode(0x46FDC7);
MakeCode(0x46FDD1);
MakeCode(0x46FDDE);
MakeCode(0x46FDDF);
MakeCode(0x46FDE4);
MakeFunction(0x46FD8C, 0x46FDE8);
MakeCode(0x46FDE8);
MakeCode(0x46FE15);
MakeFunction(0x46FDE8, 0x46FE21);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x46FE2C, -1);
MakeDword(0x46FE28);
MakeDword(0x46FE24);
MakeCode(0x46FE30);
MakeCode(0x46FE50);
MakeCode(0x46FE57);
MakeCode(0x46FE59);
MakeCode(0x46FE65);
MakeFunction(0x46FE30, 0x46FE6D);
MakeCode(0x46FE70);
MakeCode(0x46FE81);
MakeCode(0x46FE89);
MakeCode(0x46FE98);
MakeCode(0x46FE9A);
MakeFunction(0x46FE70, 0x46FEA1);
MakeCode(0x46FEA4);
MakeCode(0x46FEE2);
MakeCode(0x46FF02);
MakeCode(0x46FF0F);
MakeCode(0x46FF18);
MakeCode(0x46FF1D);
MakeFunction(0x46FEA4, 0x46FF26);
MakeCode(0x46FF28);
MakeCode(0x46FF77);
MakeCode(0x46FF83);
MakeCode(0x46FFAB);
MakeCode(0x46FFB8);
MakeCode(0x46FFC6);
MakeCode(0x46FFCB);
MakeFunction(0x46FF28, 0x46FFD6);
MakeCode(0x46FFD8);
MakeCode(0x46FFED);
MakeCode(0x46FFFF);
MakeCode(0x47000B);
MakeCode(0x470016);
MakeCode(0x470023);
MakeCode(0x470029);
MakeCode(0x47003D);
MakeCode(0x470048);
MakeCode(0x47004C);
MakeCode(0x470051);
MakeCode(0x470061);
MakeCode(0x47006E);
MakeCode(0x470072);
MakeCode(0x4700A6);
MakeCode(0x4700AB);
MakeCode(0x4700AF);
MakeCode(0x4700B1);
MakeFunction(0x46FFD8, 0x4700B7);
MakeCode(0x4700B8);
MakeCode(0x4700DE);
MakeCode(0x4700E7);
MakeCode(0x4700F4);
MakeCode(0x4700FE);
MakeCode(0x470102);
MakeCode(0x470105);
MakeCode(0x470117);
MakeCode(0x47011B);
MakeFunction(0x4700B8, 0x470124);
MakeCode(0x470124);
MakeCode(0x47016A);
MakeCode(0x470173);
MakeFunction(0x470124, 0x47017D);
MakeCode(0x470180);
MakeCode(0x470193);
MakeCode(0x4701A5);
MakeCode(0x4701B1);
MakeCode(0x4701BC);
MakeCode(0x4701C0);
MakeFunction(0x470180, 0x4701C7);
MakeCode(0x4701C8);
MakeFunction(0x4701C8, 0x4701ED);
MakeCode(0x4701F0);
MakeFunction(0x4701F0, 0x470216);
MakeCode(0x470218);
MakeFunction(0x470218, 0x47023D);
MakeCode(0x470240);
MakeCode(0x47024B);
MakeCode(0x470256);
MakeFunction(0x470240, 0x470262);
MakeCode(0x470264);
MakeCode(0x47029B);
MakeCode(0x4702A6);
MakeCode(0x4702C2);
MakeCode(0x4702CD);
MakeCode(0x4702D3);
MakeCode(0x4702DC);
MakeFunction(0x470264, 0x4702E1);
MakeCode(0x4702E4);
MakeCode(0x4702F8);
MakeCode(0x470303);
MakeCode(0x47030E);
MakeCode(0x47031D);
MakeCode(0x470322);
MakeFunction(0x4702E4, 0x47032B);
MakeCode(0x47032C);
MakeCode(0x47034A);
MakeCode(0x47034E);
MakeCode(0x47034F);
MakeCode(0x470368);
MakeCode(0x470373);
MakeCode(0x470382);
MakeCode(0x470391);
MakeFunction(0x47032C, 0x470396);
MakeCode(0x470398);
MakeCode(0x4703C8);
MakeCode(0x4703D5);
MakeCode(0x4703DE);
MakeCode(0x4703E3);
MakeFunction(0x470398, 0x4703EB);
MakeCode(0x4703EC);
MakeCode(0x470405);
MakeCode(0x470409);
MakeFunction(0x4703EC, 0x47040D);
MakeCode(0x470410);
MakeCode(0x47041E);
MakeCode(0x470421);
MakeFunction(0x470410, 0x470424);
MakeCode(0x470424);
MakeCode(0x470438);
MakeCode(0x470449);
MakeCode(0x47046E);
MakeCode(0x47047B);
MakeFunction(0x470424, 0x470480);
MakeCode(0x470480);
MakeCode(0x470493);
MakeFunction(0x470480, 0x4704A2);
MakeCode(0x4704A4);
MakeCode(0x4704EA);
MakeCode(0x470528);
MakeCode(0x47053B);
MakeCode(0x470548);
MakeCode(0x470551);
MakeCode(0x470556);
MakeFunction(0x4704A4, 0x47055E);
MakeCode(0x470574);
MakeCode(0x4705B3);
MakeCode(0x4705C0);
MakeCode(0x4705CC);
MakeCode(0x4705D1);
MakeFunction(0x470574, 0x4705DC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x470614, -1);
MakeDword(0x470610);
MakeDword(0x47060C);
MakeCode(0x470618);
MakeCode(0x470637);
MakeFunction(0x470618, 0x470645);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x470650, -1);
MakeDword(0x47064C);
MakeDword(0x470648);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x470670, -1);
MakeDword(0x47066C);
MakeDword(0x470668);
MakeUnkn(0x470680, 1);
MakeNameEx(0x470680, "VMT_470680_TStdForm", 0);
MakeDword(0x470680);
MakeDword(0x470684);
MakeDword(0x470688);
MakeDword(0x47068C);
MakeDword(0x470690);
MakeDword(0x470694);
MakeDword(0x470698);
MakeDword(0x47069C);
MakeDword(0x4706A0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4707D0, 0x4707D9);
MakeDword(0x4706A4);
MakeDword(0x4706A8);
MakeDword(0x4706AC);
MakeDword(0x4706B0);
MakeDword(0x4706B4);
MakeDword(0x4706B8);
MakeDword(0x4706BC);
MakeDword(0x4706C0);
MakeDword(0x4706C4);
MakeDword(0x4706C8);
MakeComm(0x4706CC, "'+0'");
MakeDword(0x4706CC);
MakeComm(0x4706D0, "'+4'");
MakeDword(0x4706D0);
MakeComm(0x4706D4, "'+8'");
MakeDword(0x4706D4);
MakeComm(0x4706D8, "'+C'");
MakeDword(0x4706D8);
MakeComm(0x4706DC, "'+10'");
MakeDword(0x4706DC);
MakeComm(0x4706E0, "'+14'");
MakeDword(0x4706E0);
MakeComm(0x4706E4, "'+18'");
MakeDword(0x4706E4);
MakeComm(0x4706E8, "'+1C'");
MakeDword(0x4706E8);
MakeComm(0x4706EC, "'+20'");
MakeDword(0x4706EC);
MakeComm(0x4706F0, "'+24'");
MakeDword(0x4706F0);
MakeComm(0x4706F4, "'+28'");
MakeDword(0x4706F4);
MakeComm(0x4706F8, "'+2C'");
MakeDword(0x4706F8);
MakeComm(0x4706FC, "'+30'");
MakeDword(0x4706FC);
MakeComm(0x470700, "'+34'");
MakeDword(0x470700);
MakeComm(0x470704, "'+38'");
MakeDword(0x470704);
MakeComm(0x470708, "'+3C'");
MakeDword(0x470708);
MakeComm(0x47070C, "'+40'");
MakeDword(0x47070C);
MakeComm(0x470710, "'+44'");
MakeDword(0x470710);
MakeComm(0x470714, "'+48'");
MakeDword(0x470714);
MakeComm(0x470718, "'+4C'");
MakeDword(0x470718);
MakeComm(0x47071C, "'+50'");
MakeDword(0x47071C);
MakeComm(0x470720, "'+54'");
MakeDword(0x470720);
MakeComm(0x470724, "'+58'");
MakeDword(0x470724);
MakeComm(0x470728, "'+5C'");
MakeDword(0x470728);
MakeComm(0x47072C, "'+60'");
MakeDword(0x47072C);
MakeComm(0x470730, "'+64'");
MakeDword(0x470730);
MakeComm(0x470734, "'+68'");
MakeDword(0x470734);
MakeComm(0x470738, "'+6C'");
MakeDword(0x470738);
MakeComm(0x47073C, "'+70'");
MakeDword(0x47073C);
MakeComm(0x470740, "'+74'");
MakeDword(0x470740);
MakeComm(0x470744, "'+78'");
MakeDword(0x470744);
MakeComm(0x470748, "'+7C'");
MakeDword(0x470748);
MakeComm(0x47074C, "'+80'");
MakeDword(0x47074C);
MakeComm(0x470750, "'+84'");
MakeDword(0x470750);
MakeComm(0x470754, "'+88'");
MakeDword(0x470754);
MakeComm(0x470758, "'+8C'");
MakeDword(0x470758);
MakeComm(0x47075C, "'+90'");
MakeDword(0x47075C);
MakeComm(0x470760, "'+94'");
MakeDword(0x470760);
MakeComm(0x470764, "'+98'");
MakeDword(0x470764);
MakeComm(0x470768, "'+9C'");
MakeDword(0x470768);
MakeComm(0x47076C, "'+A0'");
MakeDword(0x47076C);
MakeComm(0x470770, "'+A4'");
MakeDword(0x470770);
MakeComm(0x470774, "'+A8'");
MakeDword(0x470774);
MakeComm(0x470778, "'+AC'");
MakeDword(0x470778);
MakeComm(0x47077C, "'+B0'");
MakeDword(0x47077C);
MakeComm(0x470780, "'+B4'");
MakeDword(0x470780);
MakeComm(0x470784, "'+B8'");
MakeDword(0x470784);
MakeComm(0x470788, "'+BC'");
MakeDword(0x470788);
MakeComm(0x47078C, "'+C0'");
MakeDword(0x47078C);
MakeComm(0x470790, "'+C4'");
MakeDword(0x470790);
MakeComm(0x470794, "'+C8'");
MakeDword(0x470794);
MakeComm(0x470798, "'+CC'");
MakeDword(0x470798);
MakeComm(0x47079C, "'+D0'");
MakeDword(0x47079C);
MakeComm(0x4707A0, "'+D4'");
MakeDword(0x4707A0);
MakeComm(0x4707A4, "'+D8'");
MakeDword(0x4707A4);
MakeComm(0x4707A8, "'+DC'");
MakeDword(0x4707A8);
MakeComm(0x4707AC, "'+E0'");
MakeDword(0x4707AC);
MakeComm(0x4707B0, "'+E4'");
MakeDword(0x4707B0);
MakeComm(0x4707B4, "'+E8'");
MakeDword(0x4707B4);
MakeComm(0x4707B8, "'+EC'");
MakeDword(0x4707B8);
MakeComm(0x4707BC, "'+F0'");
MakeDword(0x4707BC);
MakeComm(0x4707C0, "'+F4'");
MakeDword(0x4707C0);
MakeComm(0x4707C4, "'+F8'");
MakeDword(0x4707C4);
MakeComm(0x4707C8, "'+FC'");
MakeDword(0x4707C8);
MakeComm(0x4707CC, "'+100'");
MakeDword(0x4707CC);
MakeUnkn(0x4707DC, 1);
MakeNameEx(0x4707DC, "RTTI_4707DC_Class_TStdForm", 0);
MakeDword(0x4707DC);
MakeUnkn(0x4707E0, 1);
MakeNameEx(0x4707E0, "", 0);
MakeByte(0x4707E0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4707E1, 0x4707EA);
MakeDword(0x4707EA);
MakeDword(0x4707EE);
MakeWord(0x4707F2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4707F4, 0x4707FC);
MakeWord(0x4707FC);
MakeUnkn(0x470800, 1);
MakeNameEx(0x470800, "TStdForm.Loaded", 0x20);
MakeComm(0x470800, "'procedure TStdForm.Loaded;'");
MakeCode(0x470800);
MakeComm(0x470828, "'TStdForm.FFont:TFont'");
MakeCode(0x470830);
MakeCode(0x47083D);
MakeCode(0x470846);
MakeCode(0x47084B);
MakeFunction(0x470800, 0x470851);
MakeUnkn(0x470854, 1);
MakeNameEx(0x470854, "RTTI_470854_Enumeration_TButtonStyle", 0);
MakeDword(0x470854);
MakeUnkn(0x470858, 1);
MakeNameEx(0x470858, "", 0);
MakeByte(0x470858);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x470859, 0x470866);
MakeByte(0x470866);
MakeDword(0x470867);
MakeDword(0x47086B);
MakeDword(0x47086F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x470873, 0x470880);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x470880, 0x470888);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x470888, 0x47088E);
MakeCode(0x470898);
MakeCode(0x4708A1);
MakeFunction(0x470898, 0x4708B2);
MakeCode(0x470930);
MakeCode(0x47094E);
MakeCode(0x47095B);
MakeCode(0x47095C);
MakeCode(0x470961);
MakeFunction(0x470930, 0x470965);
MakeCode(0x470968);
MakeCode(0x470996);
MakeCode(0x4709A3);
MakeCode(0x4709A4);
MakeCode(0x4709A9);
MakeFunction(0x470968, 0x4709AD);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4709EC, -1);
MakeDword(0x4709E8);
MakeDword(0x4709E4);
MakeCode(0x4709F8);
MakeComm(0x470A1A, "'0x0'");
MakeCode(0x470A25);
MakeCode(0x470A2F);
MakeCode(0x470A3C);
MakeCode(0x470A3D);
MakeCode(0x470A42);
MakeFunction(0x4709F8, 0x470A46);
MakeCode(0x470A48);
MakeCode(0x470A7E);
MakeCode(0x470A8B);
MakeCode(0x470A8C);
MakeCode(0x470A91);
MakeFunction(0x470A48, 0x470A95);
MakeComm(0x470A98, "'SResString131'");
MakeDword(0x470A98);
MakeDword(0x470A9C);
MakeComm(0x470AA0, "'SResString132'");
MakeDword(0x470AA0);
MakeDword(0x470AA4);
MakeComm(0x470AA8, "'SResString133'");
MakeDword(0x470AA8);
MakeDword(0x470AAC);
MakeComm(0x470AB0, "'SResString134'");
MakeDword(0x470AB0);
MakeDword(0x470AB4);
MakeComm(0x470AB8, "'SResString135'");
MakeDword(0x470AB8);
MakeDword(0x470ABC);
MakeComm(0x470AC0, "'SResString136'");
MakeDword(0x470AC0);
MakeDword(0x470AC4);
MakeComm(0x470AC8, "'SResString137'");
MakeDword(0x470AC8);
MakeDword(0x470ACC);
MakeComm(0x470AD0, "'SResString138'");
MakeDword(0x470AD0);
MakeDword(0x470AD4);
MakeUnkn(0x470AD8, 1);
MakeNameEx(0x470AD8, "RTTI_470AD8_Method_TTabChangingEvent", 0);
MakeDword(0x470AD8);
MakeUnkn(0x470ADC, 1);
MakeNameEx(0x470ADC, "", 0);
MakeByte(0x470ADC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x470ADD, 0x470AEF);
MakeByte(0x470AEF);
MakeByte(0x470AF0);
MakeByte(0x470AF1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x470AF2, 0x470AF9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x470AF9, 0x470B01);
MakeByte(0x470B01);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x470B02, 0x470B0E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x470B0E, 0x470B16);
MakeByte(0x470B16);
MakeDword(0x470B17);
MakeDword(0x470B1B);
MakeUnkn(0x470B20, 1);
MakeNameEx(0x470B20, "RTTI_470B20_Enumeration_TTabPosition", 0);
MakeDword(0x470B20);
MakeUnkn(0x470B24, 1);
MakeNameEx(0x470B24, "", 0);
MakeByte(0x470B24);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x470B25, 0x470B32);
MakeByte(0x470B32);
MakeDword(0x470B33);
MakeDword(0x470B37);
MakeDword(0x470B3B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x470B3F, 0x470B45);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x470B45, 0x470B4E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x470B4E, 0x470B55);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x470B55, 0x470B5D);
MakeUnkn(0x470B68, 1);
MakeNameEx(0x470B68, "RTTI_470B68_Enumeration_TTabStyle", 0);
MakeDword(0x470B68);
MakeUnkn(0x470B6C, 1);
MakeNameEx(0x470B6C, "", 0);
MakeByte(0x470B6C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x470B6D, 0x470B77);
MakeByte(0x470B77);
MakeDword(0x470B78);
MakeDword(0x470B7C);
MakeDword(0x470B80);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x470B84, 0x470B8B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x470B8B, 0x470B95);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x470B95, 0x470BA3);
MakeUnkn(0x470BAC, 1);
MakeNameEx(0x470BAC, "RTTI_470BAC_Method_TDrawTabEvent", 0);
MakeDword(0x470BAC);
MakeUnkn(0x470BB0, 1);
MakeNameEx(0x470BB0, "", 0);
MakeByte(0x470BB0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x470BB1, 0x470BBF);
MakeByte(0x470BBF);
MakeByte(0x470BC0);
MakeByte(0x470BC1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x470BC2, 0x470BCA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x470BCA, 0x470BDC);
MakeByte(0x470BDC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x470BDD, 0x470BE6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x470BE6, 0x470BEE);
MakeByte(0x470BEE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x470BEF, 0x470BF4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x470BF4, 0x470BFA);
MakeByte(0x470BFA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x470BFB, 0x470C02);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x470C02, 0x470C0A);
MakeByte(0x470C0A);
MakeDword(0x470C0B);
MakeDword(0x470C0F);
MakeDword(0x470C13);
MakeDword(0x470C17);
MakeUnkn(0x470C1C, 1);
MakeNameEx(0x470C1C, "RTTI_470C1C_Method_TTabGetImageEvent", 0);
MakeDword(0x470C1C);
MakeUnkn(0x470C20, 1);
MakeNameEx(0x470C20, "", 0);
MakeByte(0x470C20);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x470C21, 0x470C33);
MakeByte(0x470C33);
MakeByte(0x470C34);
MakeByte(0x470C35);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x470C36, 0x470C3D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x470C3D, 0x470C45);
MakeByte(0x470C45);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x470C46, 0x470C4F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x470C4F, 0x470C57);
MakeByte(0x470C57);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x470C58, 0x470C63);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x470C63, 0x470C6B);
MakeByte(0x470C6B);
MakeDword(0x470C6C);
MakeDword(0x470C70);
MakeDword(0x470C74);
MakeUnkn(0x470C78, 1);
MakeNameEx(0x470C78, "VMT_470C78_TCustomTabControl", 0);
MakeDword(0x470C78);
MakeDword(0x470C7C);
MakeDword(0x470C80);
MakeDword(0x470C84);
MakeDword(0x470C88);
MakeDword(0x470C8C);
MakeDword(0x470C90);
MakeDword(0x470C94);
MakeUnkn(0x470DAC, 1);
MakeNameEx(0x470DAC, "TCustomTabControl_DynamicTable", 0);
MakeWord(0x470DAC);
MakeWord(0x470DAE);
MakeWord(0x470DB0);
MakeWord(0x470DB2);
MakeWord(0x470DB4);
MakeWord(0x470DB6);
MakeWord(0x470DB8);
MakeWord(0x470DBA);
MakeWord(0x470DBC);
MakeWord(0x470DBE);
MakeWord(0x470DC0);
MakeWord(0x470DC2);
MakeWord(0x470DC4);
MakeDword(0x470DC6);
MakeDword(0x470DCA);
MakeDword(0x470DCE);
MakeDword(0x470DD2);
MakeDword(0x470DD6);
MakeDword(0x470DDA);
MakeDword(0x470DDE);
MakeDword(0x470DE2);
MakeDword(0x470DE6);
MakeDword(0x470DEA);
MakeDword(0x470DEE);
MakeDword(0x470DF2);
MakeDword(0x470C98);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x470DF6, 0x470E08);
MakeDword(0x470C9C);
MakeDword(0x470CA0);
MakeDword(0x470CA4);
MakeDword(0x470CA8);
MakeDword(0x470CAC);
MakeDword(0x470CB0);
MakeDword(0x470CB4);
MakeDword(0x470CB8);
MakeDword(0x470CBC);
MakeDword(0x470CC0);
MakeComm(0x470CC4, "'+0'");
MakeDword(0x470CC4);
MakeComm(0x470CC8, "'+4'");
MakeDword(0x470CC8);
MakeComm(0x470CCC, "'+8'");
MakeDword(0x470CCC);
MakeComm(0x470CD0, "'+C'");
MakeDword(0x470CD0);
MakeComm(0x470CD4, "'+10'");
MakeDword(0x470CD4);
MakeComm(0x470CD8, "'+14'");
MakeDword(0x470CD8);
MakeComm(0x470CDC, "'+18'");
MakeDword(0x470CDC);
MakeComm(0x470CE0, "'+1C'");
MakeDword(0x470CE0);
MakeComm(0x470CE4, "'+20'");
MakeDword(0x470CE4);
MakeComm(0x470CE8, "'+24'");
MakeDword(0x470CE8);
MakeComm(0x470CEC, "'+28'");
MakeDword(0x470CEC);
MakeComm(0x470CF0, "'+2C'");
MakeDword(0x470CF0);
MakeComm(0x470CF4, "'+30'");
MakeDword(0x470CF4);
MakeComm(0x470CF8, "'+34'");
MakeDword(0x470CF8);
MakeComm(0x470CFC, "'+38'");
MakeDword(0x470CFC);
MakeComm(0x470D00, "'+3C'");
MakeDword(0x470D00);
MakeComm(0x470D04, "'+40'");
MakeDword(0x470D04);
MakeComm(0x470D08, "'+44'");
MakeDword(0x470D08);
MakeComm(0x470D0C, "'+48'");
MakeDword(0x470D0C);
MakeComm(0x470D10, "'+4C'");
MakeDword(0x470D10);
MakeComm(0x470D14, "'+50'");
MakeDword(0x470D14);
MakeComm(0x470D18, "'+54'");
MakeDword(0x470D18);
MakeComm(0x470D1C, "'+58'");
MakeDword(0x470D1C);
MakeComm(0x470D20, "'+5C'");
MakeDword(0x470D20);
MakeComm(0x470D24, "'+60'");
MakeDword(0x470D24);
MakeComm(0x470D28, "'+64'");
MakeDword(0x470D28);
MakeComm(0x470D2C, "'+68'");
MakeDword(0x470D2C);
MakeComm(0x470D30, "'+6C'");
MakeDword(0x470D30);
MakeComm(0x470D34, "'+70'");
MakeDword(0x470D34);
MakeComm(0x470D38, "'+74'");
MakeDword(0x470D38);
MakeComm(0x470D3C, "'+78'");
MakeDword(0x470D3C);
MakeComm(0x470D40, "'+7C'");
MakeDword(0x470D40);
MakeComm(0x470D44, "'+80'");
MakeDword(0x470D44);
MakeComm(0x470D48, "'+84'");
MakeDword(0x470D48);
MakeComm(0x470D4C, "'+88'");
MakeDword(0x470D4C);
MakeComm(0x470D50, "'+8C'");
MakeDword(0x470D50);
MakeComm(0x470D54, "'+90'");
MakeDword(0x470D54);
MakeComm(0x470D58, "'+94'");
MakeDword(0x470D58);
MakeComm(0x470D5C, "'+98'");
MakeDword(0x470D5C);
MakeComm(0x470D60, "'+9C'");
MakeDword(0x470D60);
MakeComm(0x470D64, "'+A0'");
MakeDword(0x470D64);
MakeComm(0x470D68, "'+A4'");
MakeDword(0x470D68);
MakeComm(0x470D6C, "'+A8'");
MakeDword(0x470D6C);
MakeComm(0x470D70, "'+AC'");
MakeDword(0x470D70);
MakeComm(0x470D74, "'+B0'");
MakeDword(0x470D74);
MakeComm(0x470D78, "'+B4'");
MakeDword(0x470D78);
MakeComm(0x470D7C, "'+B8'");
MakeDword(0x470D7C);
MakeComm(0x470D80, "'+BC'");
MakeDword(0x470D80);
MakeComm(0x470D84, "'+C0'");
MakeDword(0x470D84);
MakeComm(0x470D88, "'+C4'");
MakeDword(0x470D88);
MakeComm(0x470D8C, "'+C8'");
MakeDword(0x470D8C);
MakeComm(0x470D90, "'+CC'");
MakeDword(0x470D90);
MakeComm(0x470D94, "'+D0'");
MakeDword(0x470D94);
MakeComm(0x470D98, "'+D4'");
MakeDword(0x470D98);
MakeComm(0x470D9C, "'+D8'");
MakeDword(0x470D9C);
MakeComm(0x470DA0, "'+DC'");
MakeDword(0x470DA0);
MakeComm(0x470DA4, "'+E0'");
MakeDword(0x470DA4);
MakeComm(0x470DA8, "'+E4'");
MakeDword(0x470DA8);
MakeUnkn(0x470E08, 1);
MakeNameEx(0x470E08, "RTTI_470E08_Class_TCustomTabControl", 0);
MakeDword(0x470E08);
MakeUnkn(0x470E0C, 1);
MakeNameEx(0x470E0C, "", 0);
MakeByte(0x470E0C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x470E0D, 0x470E1F);
MakeDword(0x470E1F);
MakeDword(0x470E23);
MakeWord(0x470E27);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x470E29, 0x470E32);
MakeWord(0x470E32);
MakeUnkn(0x470E34, 1);
MakeNameEx(0x470E34, "VMT_470E34_TTabSheet", 0);
MakeDword(0x470E34);
MakeDword(0x470E38);
MakeDword(0x470E3C);
MakeDword(0x470E40);
MakeDword(0x470E44);
MakeDword(0x470E48);
MakeDword(0x470E4C);
MakeDword(0x470E50);
MakeUnkn(0x470F58, 1);
MakeNameEx(0x470F58, "TTabSheet_DynamicTable", 0);
MakeWord(0x470F58);
MakeWord(0x470F5A);
MakeWord(0x470F5C);
MakeWord(0x470F5E);
MakeWord(0x470F60);
MakeWord(0x470F62);
MakeWord(0x470F64);
MakeDword(0x470F66);
MakeDword(0x470F6A);
MakeDword(0x470F6E);
MakeDword(0x470F72);
MakeDword(0x470F76);
MakeDword(0x470F7A);
MakeDword(0x470E54);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x470F7E, 0x470F88);
MakeDword(0x470E58);
MakeDword(0x470E5C);
MakeDword(0x470E60);
MakeDword(0x470E64);
MakeDword(0x470E68);
MakeDword(0x470E6C);
MakeDword(0x470E70);
MakeDword(0x470E74);
MakeDword(0x470E78);
MakeDword(0x470E7C);
MakeComm(0x470E80, "'+0'");
MakeDword(0x470E80);
MakeComm(0x470E84, "'+4'");
MakeDword(0x470E84);
MakeComm(0x470E88, "'+8'");
MakeDword(0x470E88);
MakeComm(0x470E8C, "'+C'");
MakeDword(0x470E8C);
MakeComm(0x470E90, "'+10'");
MakeDword(0x470E90);
MakeComm(0x470E94, "'+14'");
MakeDword(0x470E94);
MakeComm(0x470E98, "'+18'");
MakeDword(0x470E98);
MakeComm(0x470E9C, "'+1C'");
MakeDword(0x470E9C);
MakeComm(0x470EA0, "'+20'");
MakeDword(0x470EA0);
MakeComm(0x470EA4, "'+24'");
MakeDword(0x470EA4);
MakeComm(0x470EA8, "'+28'");
MakeDword(0x470EA8);
MakeComm(0x470EAC, "'+2C'");
MakeDword(0x470EAC);
MakeComm(0x470EB0, "'+30'");
MakeDword(0x470EB0);
MakeComm(0x470EB4, "'+34'");
MakeDword(0x470EB4);
MakeComm(0x470EB8, "'+38'");
MakeDword(0x470EB8);
MakeComm(0x470EBC, "'+3C'");
MakeDword(0x470EBC);
MakeComm(0x470EC0, "'+40'");
MakeDword(0x470EC0);
MakeComm(0x470EC4, "'+44'");
MakeDword(0x470EC4);
MakeComm(0x470EC8, "'+48'");
MakeDword(0x470EC8);
MakeComm(0x470ECC, "'+4C'");
MakeDword(0x470ECC);
MakeComm(0x470ED0, "'+50'");
MakeDword(0x470ED0);
MakeComm(0x470ED4, "'+54'");
MakeDword(0x470ED4);
MakeComm(0x470ED8, "'+58'");
MakeDword(0x470ED8);
MakeComm(0x470EDC, "'+5C'");
MakeDword(0x470EDC);
MakeComm(0x470EE0, "'+60'");
MakeDword(0x470EE0);
MakeComm(0x470EE4, "'+64'");
MakeDword(0x470EE4);
MakeComm(0x470EE8, "'+68'");
MakeDword(0x470EE8);
MakeComm(0x470EEC, "'+6C'");
MakeDword(0x470EEC);
MakeComm(0x470EF0, "'+70'");
MakeDword(0x470EF0);
MakeComm(0x470EF4, "'+74'");
MakeDword(0x470EF4);
MakeComm(0x470EF8, "'+78'");
MakeDword(0x470EF8);
MakeComm(0x470EFC, "'+7C'");
MakeDword(0x470EFC);
MakeComm(0x470F00, "'+80'");
MakeDword(0x470F00);
MakeComm(0x470F04, "'+84'");
MakeDword(0x470F04);
MakeComm(0x470F08, "'+88'");
MakeDword(0x470F08);
MakeComm(0x470F0C, "'+8C'");
MakeDword(0x470F0C);
MakeComm(0x470F10, "'+90'");
MakeDword(0x470F10);
MakeComm(0x470F14, "'+94'");
MakeDword(0x470F14);
MakeComm(0x470F18, "'+98'");
MakeDword(0x470F18);
MakeComm(0x470F1C, "'+9C'");
MakeDword(0x470F1C);
MakeComm(0x470F20, "'+A0'");
MakeDword(0x470F20);
MakeComm(0x470F24, "'+A4'");
MakeDword(0x470F24);
MakeComm(0x470F28, "'+A8'");
MakeDword(0x470F28);
MakeComm(0x470F2C, "'+AC'");
MakeDword(0x470F2C);
MakeComm(0x470F30, "'+B0'");
MakeDword(0x470F30);
MakeComm(0x470F34, "'+B4'");
MakeDword(0x470F34);
MakeComm(0x470F38, "'+B8'");
MakeDword(0x470F38);
MakeComm(0x470F3C, "'+BC'");
MakeDword(0x470F3C);
MakeComm(0x470F40, "'+C0'");
MakeDword(0x470F40);
MakeComm(0x470F44, "'+C4'");
MakeDword(0x470F44);
MakeComm(0x470F48, "'+C8'");
MakeDword(0x470F48);
MakeComm(0x470F4C, "'+CC'");
MakeDword(0x470F4C);
MakeComm(0x470F50, "'+D0'");
MakeDword(0x470F50);
MakeComm(0x470F54, "'+D4'");
MakeDword(0x470F54);
MakeUnkn(0x470F88, 1);
MakeNameEx(0x470F88, "RTTI_470F88_Class_TTabSheet", 0);
MakeDword(0x470F88);
MakeUnkn(0x470F8C, 1);
MakeNameEx(0x470F8C, "", 0);
MakeByte(0x470F8C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x470F8D, 0x470F97);
MakeDword(0x470F97);
MakeDword(0x470F9B);
MakeWord(0x470F9F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x470FA1, 0x470FAA);
MakeWord(0x470FAA);
MakeDword(0x470FAC);
MakeDword(0x470FB0);
MakeDword(0x470FB4);
MakeDword(0x470FB8);
MakeDword(0x470FBC);
MakeDword(0x470FC0);
MakeWord(0x470FC4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x470FC6, 0x470FD2);
MakeDword(0x470FD2);
MakeDword(0x470FD6);
MakeDword(0x470FDA);
MakeDword(0x470FDE);
MakeDword(0x470FE2);
MakeDword(0x470FE6);
MakeWord(0x470FEA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x470FEC, 0x470FF4);
MakeDword(0x470FF4);
MakeDword(0x470FF8);
MakeDword(0x470FFC);
MakeDword(0x471000);
MakeDword(0x471004);
MakeDword(0x471008);
MakeWord(0x47100C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x47100E, 0x471017);
MakeDword(0x471017);
MakeDword(0x47101B);
MakeDword(0x47101F);
MakeDword(0x471023);
MakeDword(0x471027);
MakeDword(0x47102B);
MakeWord(0x47102F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471031, 0x471039);
MakeDword(0x471039);
MakeDword(0x47103D);
MakeDword(0x471041);
MakeDword(0x471045);
MakeDword(0x471049);
MakeDword(0x47104D);
MakeWord(0x471051);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471053, 0x471058);
MakeDword(0x471058);
MakeDword(0x47105C);
MakeDword(0x471060);
MakeDword(0x471064);
MakeDword(0x471068);
MakeDword(0x47106C);
MakeWord(0x471070);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471072, 0x471079);
MakeDword(0x471079);
MakeDword(0x47107D);
MakeDword(0x471081);
MakeDword(0x471085);
MakeDword(0x471089);
MakeDword(0x47108D);
MakeWord(0x471091);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471093, 0x47109F);
MakeDword(0x47109F);
MakeDword(0x4710A3);
MakeDword(0x4710A7);
MakeDword(0x4710AB);
MakeDword(0x4710AF);
MakeDword(0x4710B3);
MakeWord(0x4710B7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4710B9, 0x4710C4);
MakeDword(0x4710C4);
MakeDword(0x4710C8);
MakeDword(0x4710CC);
MakeDword(0x4710D0);
MakeDword(0x4710D4);
MakeDword(0x4710D8);
MakeWord(0x4710DC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4710DE, 0x4710E3);
MakeDword(0x4710E3);
MakeDword(0x4710E7);
MakeDword(0x4710EB);
MakeDword(0x4710EF);
MakeDword(0x4710F3);
MakeDword(0x4710F7);
MakeWord(0x4710FB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4710FD, 0x471109);
MakeDword(0x471109);
MakeDword(0x47110D);
MakeDword(0x471111);
MakeDword(0x471115);
MakeDword(0x471119);
MakeDword(0x47111D);
MakeWord(0x471121);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471123, 0x47112D);
MakeDword(0x47112D);
MakeDword(0x471131);
MakeDword(0x471135);
MakeDword(0x471139);
MakeDword(0x47113D);
MakeDword(0x471141);
MakeWord(0x471145);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471147, 0x471152);
MakeDword(0x471152);
MakeDword(0x471156);
MakeDword(0x47115A);
MakeDword(0x47115E);
MakeDword(0x471162);
MakeDword(0x471166);
MakeWord(0x47116A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x47116C, 0x47117B);
MakeDword(0x47117B);
MakeDword(0x47117F);
MakeDword(0x471183);
MakeDword(0x471187);
MakeDword(0x47118B);
MakeDword(0x47118F);
MakeWord(0x471193);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471195, 0x47119F);
MakeDword(0x47119F);
MakeDword(0x4711A3);
MakeDword(0x4711A7);
MakeDword(0x4711AB);
MakeDword(0x4711AF);
MakeDword(0x4711B3);
MakeWord(0x4711B7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4711B9, 0x4711C2);
MakeDword(0x4711C2);
MakeDword(0x4711C6);
MakeDword(0x4711CA);
MakeDword(0x4711CE);
MakeDword(0x4711D2);
MakeDword(0x4711D6);
MakeWord(0x4711DA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4711DC, 0x4711E7);
MakeDword(0x4711E7);
MakeDword(0x4711EB);
MakeDword(0x4711EF);
MakeDword(0x4711F3);
MakeDword(0x4711F7);
MakeDword(0x4711FB);
MakeWord(0x4711FF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471201, 0x471205);
MakeDword(0x471205);
MakeDword(0x471209);
MakeDword(0x47120D);
MakeDword(0x471211);
MakeDword(0x471215);
MakeDword(0x471219);
MakeWord(0x47121D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x47121F, 0x471227);
MakeDword(0x471227);
MakeDword(0x47122B);
MakeDword(0x47122F);
MakeDword(0x471233);
MakeDword(0x471237);
MakeDword(0x47123B);
MakeWord(0x47123F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471241, 0x471247);
MakeDword(0x471247);
MakeDword(0x47124B);
MakeDword(0x47124F);
MakeDword(0x471253);
MakeDword(0x471257);
MakeDword(0x47125B);
MakeWord(0x47125F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471261, 0x471270);
MakeDword(0x471270);
MakeDword(0x471274);
MakeDword(0x471278);
MakeDword(0x47127C);
MakeDword(0x471280);
MakeDword(0x471284);
MakeWord(0x471288);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x47128A, 0x471295);
MakeDword(0x471295);
MakeDword(0x471299);
MakeDword(0x47129D);
MakeDword(0x4712A1);
MakeDword(0x4712A5);
MakeDword(0x4712A9);
MakeWord(0x4712AD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4712AF, 0x4712BA);
MakeDword(0x4712BA);
MakeDword(0x4712BE);
MakeDword(0x4712C2);
MakeDword(0x4712C6);
MakeDword(0x4712CA);
MakeDword(0x4712CE);
MakeWord(0x4712D2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4712D4, 0x4712DE);
MakeDword(0x4712DE);
MakeDword(0x4712E2);
MakeDword(0x4712E6);
MakeDword(0x4712EA);
MakeDword(0x4712EE);
MakeDword(0x4712F2);
MakeWord(0x4712F6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4712F8, 0x471300);
MakeDword(0x471300);
MakeDword(0x471304);
MakeDword(0x471308);
MakeDword(0x47130C);
MakeDword(0x471310);
MakeDword(0x471314);
MakeWord(0x471318);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x47131A, 0x471321);
MakeDword(0x471321);
MakeDword(0x471325);
MakeDword(0x471329);
MakeDword(0x47132D);
MakeDword(0x471331);
MakeDword(0x471335);
MakeWord(0x471339);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x47133B, 0x471342);
MakeDword(0x471342);
MakeDword(0x471346);
MakeDword(0x47134A);
MakeDword(0x47134E);
MakeDword(0x471352);
MakeDword(0x471356);
MakeWord(0x47135A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x47135C, 0x47136C);
MakeDword(0x47136C);
MakeDword(0x471370);
MakeDword(0x471374);
MakeDword(0x471378);
MakeDword(0x47137C);
MakeDword(0x471380);
MakeWord(0x471384);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471386, 0x471392);
MakeDword(0x471392);
MakeDword(0x471396);
MakeDword(0x47139A);
MakeDword(0x47139E);
MakeDword(0x4713A2);
MakeDword(0x4713A6);
MakeWord(0x4713AA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4713AC, 0x4713B9);
MakeDword(0x4713B9);
MakeDword(0x4713BD);
MakeDword(0x4713C1);
MakeDword(0x4713C5);
MakeDword(0x4713C9);
MakeDword(0x4713CD);
MakeWord(0x4713D1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4713D3, 0x4713E0);
MakeDword(0x4713E0);
MakeDword(0x4713E4);
MakeDword(0x4713E8);
MakeDword(0x4713EC);
MakeDword(0x4713F0);
MakeDword(0x4713F4);
MakeWord(0x4713F8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4713FA, 0x471406);
MakeDword(0x471406);
MakeDword(0x47140A);
MakeDword(0x47140E);
MakeDword(0x471412);
MakeDword(0x471416);
MakeDword(0x47141A);
MakeWord(0x47141E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471420, 0x47142A);
MakeDword(0x47142A);
MakeDword(0x47142E);
MakeDword(0x471432);
MakeDword(0x471436);
MakeDword(0x47143A);
MakeDword(0x47143E);
MakeWord(0x471442);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471444, 0x47144D);
MakeDword(0x47144D);
MakeDword(0x471451);
MakeDword(0x471455);
MakeDword(0x471459);
MakeDword(0x47145D);
MakeDword(0x471461);
MakeWord(0x471465);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471467, 0x47146E);
MakeDword(0x47146E);
MakeDword(0x471472);
MakeDword(0x471476);
MakeDword(0x47147A);
MakeDword(0x47147E);
MakeDword(0x471482);
MakeWord(0x471486);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471488, 0x471494);
MakeUnkn(0x471494, 1);
MakeNameEx(0x471494, "VMT_471494_TPageControl", 0);
MakeDword(0x471494);
MakeDword(0x471498);
MakeDword(0x47149C);
MakeDword(0x4714A0);
MakeDword(0x4714A4);
MakeDword(0x4714A8);
MakeDword(0x4714AC);
MakeDword(0x4714B0);
MakeUnkn(0x4715CC, 1);
MakeNameEx(0x4715CC, "TPageControl_DynamicTable", 0);
MakeWord(0x4715CC);
MakeWord(0x4715CE);
MakeWord(0x4715D0);
MakeWord(0x4715D2);
MakeWord(0x4715D4);
MakeWord(0x4715D6);
MakeWord(0x4715D8);
MakeWord(0x4715DA);
MakeWord(0x4715DC);
MakeWord(0x4715DE);
MakeWord(0x4715E0);
MakeWord(0x4715E2);
MakeWord(0x4715E4);
MakeWord(0x4715E6);
MakeWord(0x4715E8);
MakeWord(0x4715EA);
MakeDword(0x4715EC);
MakeDword(0x4715F0);
MakeDword(0x4715F4);
MakeDword(0x4715F8);
MakeDword(0x4715FC);
MakeDword(0x471600);
MakeDword(0x471604);
MakeDword(0x471608);
MakeDword(0x47160C);
MakeDword(0x471610);
MakeDword(0x471614);
MakeDword(0x471618);
MakeDword(0x47161C);
MakeDword(0x471620);
MakeDword(0x471624);
MakeDword(0x4714B4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471628, 0x471635);
MakeDword(0x4714B8);
MakeDword(0x4714BC);
MakeDword(0x4714C0);
MakeDword(0x4714C4);
MakeDword(0x4714C8);
MakeDword(0x4714CC);
MakeDword(0x4714D0);
MakeDword(0x4714D4);
MakeDword(0x4714D8);
MakeDword(0x4714DC);
MakeComm(0x4714E0, "'+0'");
MakeDword(0x4714E0);
MakeComm(0x4714E4, "'+4'");
MakeDword(0x4714E4);
MakeComm(0x4714E8, "'+8'");
MakeDword(0x4714E8);
MakeComm(0x4714EC, "'+C'");
MakeDword(0x4714EC);
MakeComm(0x4714F0, "'+10'");
MakeDword(0x4714F0);
MakeComm(0x4714F4, "'+14'");
MakeDword(0x4714F4);
MakeComm(0x4714F8, "'+18'");
MakeDword(0x4714F8);
MakeComm(0x4714FC, "'+1C'");
MakeDword(0x4714FC);
MakeComm(0x471500, "'+20'");
MakeDword(0x471500);
MakeComm(0x471504, "'+24'");
MakeDword(0x471504);
MakeComm(0x471508, "'+28'");
MakeDword(0x471508);
MakeComm(0x47150C, "'+2C'");
MakeDword(0x47150C);
MakeComm(0x471510, "'+30'");
MakeDword(0x471510);
MakeComm(0x471514, "'+34'");
MakeDword(0x471514);
MakeComm(0x471518, "'+38'");
MakeDword(0x471518);
MakeComm(0x47151C, "'+3C'");
MakeDword(0x47151C);
MakeComm(0x471520, "'+40'");
MakeDword(0x471520);
MakeComm(0x471524, "'+44'");
MakeDword(0x471524);
MakeComm(0x471528, "'+48'");
MakeDword(0x471528);
MakeComm(0x47152C, "'+4C'");
MakeDword(0x47152C);
MakeComm(0x471530, "'+50'");
MakeDword(0x471530);
MakeComm(0x471534, "'+54'");
MakeDword(0x471534);
MakeComm(0x471538, "'+58'");
MakeDword(0x471538);
MakeComm(0x47153C, "'+5C'");
MakeDword(0x47153C);
MakeComm(0x471540, "'+60'");
MakeDword(0x471540);
MakeComm(0x471544, "'+64'");
MakeDword(0x471544);
MakeComm(0x471548, "'+68'");
MakeDword(0x471548);
MakeComm(0x47154C, "'+6C'");
MakeDword(0x47154C);
MakeComm(0x471550, "'+70'");
MakeDword(0x471550);
MakeComm(0x471554, "'+74'");
MakeDword(0x471554);
MakeComm(0x471558, "'+78'");
MakeDword(0x471558);
MakeComm(0x47155C, "'+7C'");
MakeDword(0x47155C);
MakeComm(0x471560, "'+80'");
MakeDword(0x471560);
MakeComm(0x471564, "'+84'");
MakeDword(0x471564);
MakeComm(0x471568, "'+88'");
MakeDword(0x471568);
MakeComm(0x47156C, "'+8C'");
MakeDword(0x47156C);
MakeComm(0x471570, "'+90'");
MakeDword(0x471570);
MakeComm(0x471574, "'+94'");
MakeDword(0x471574);
MakeComm(0x471578, "'+98'");
MakeDword(0x471578);
MakeComm(0x47157C, "'+9C'");
MakeDword(0x47157C);
MakeComm(0x471580, "'+A0'");
MakeDword(0x471580);
MakeComm(0x471584, "'+A4'");
MakeDword(0x471584);
MakeComm(0x471588, "'+A8'");
MakeDword(0x471588);
MakeComm(0x47158C, "'+AC'");
MakeDword(0x47158C);
MakeComm(0x471590, "'+B0'");
MakeDword(0x471590);
MakeComm(0x471594, "'+B4'");
MakeDword(0x471594);
MakeComm(0x471598, "'+B8'");
MakeDword(0x471598);
MakeComm(0x47159C, "'+BC'");
MakeDword(0x47159C);
MakeComm(0x4715A0, "'+C0'");
MakeDword(0x4715A0);
MakeComm(0x4715A4, "'+C4'");
MakeDword(0x4715A4);
MakeComm(0x4715A8, "'+C8'");
MakeDword(0x4715A8);
MakeComm(0x4715AC, "'+CC'");
MakeDword(0x4715AC);
MakeComm(0x4715B0, "'+D0'");
MakeDword(0x4715B0);
MakeComm(0x4715B4, "'+D4'");
MakeDword(0x4715B4);
MakeComm(0x4715B8, "'+D8'");
MakeDword(0x4715B8);
MakeComm(0x4715BC, "'+DC'");
MakeDword(0x4715BC);
MakeComm(0x4715C0, "'+E0'");
MakeDword(0x4715C0);
MakeComm(0x4715C4, "'+E4'");
MakeDword(0x4715C4);
MakeComm(0x4715C8, "'+E8'");
MakeDword(0x4715C8);
MakeUnkn(0x471638, 1);
MakeNameEx(0x471638, "RTTI_471638_Class_TPageControl", 0);
MakeDword(0x471638);
MakeUnkn(0x47163C, 1);
MakeNameEx(0x47163C, "", 0);
MakeByte(0x47163C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x47163D, 0x47164A);
MakeDword(0x47164A);
MakeDword(0x47164E);
MakeWord(0x471652);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471654, 0x47165D);
MakeWord(0x47165D);
MakeDword(0x47165F);
MakeDword(0x471663);
MakeDword(0x471667);
MakeDword(0x47166B);
MakeDword(0x47166F);
MakeDword(0x471673);
MakeWord(0x471677);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471679, 0x471684);
MakeDword(0x471684);
MakeDword(0x471688);
MakeDword(0x47168C);
MakeDword(0x471690);
MakeDword(0x471694);
MakeDword(0x471698);
MakeWord(0x47169C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x47169E, 0x4716A4);
MakeDword(0x4716A4);
MakeDword(0x4716A8);
MakeDword(0x4716AC);
MakeDword(0x4716B0);
MakeDword(0x4716B4);
MakeDword(0x4716B8);
MakeWord(0x4716BC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4716BE, 0x4716C6);
MakeDword(0x4716C6);
MakeDword(0x4716CA);
MakeDword(0x4716CE);
MakeDword(0x4716D2);
MakeDword(0x4716D6);
MakeDword(0x4716DA);
MakeWord(0x4716DE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4716E0, 0x4716E9);
MakeDword(0x4716E9);
MakeDword(0x4716ED);
MakeDword(0x4716F1);
MakeDword(0x4716F5);
MakeDword(0x4716F9);
MakeDword(0x4716FD);
MakeWord(0x471701);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471703, 0x47170F);
MakeDword(0x47170F);
MakeDword(0x471713);
MakeDword(0x471717);
MakeDword(0x47171B);
MakeDword(0x47171F);
MakeDword(0x471723);
MakeWord(0x471727);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471729, 0x471732);
MakeDword(0x471732);
MakeDword(0x471736);
MakeDword(0x47173A);
MakeDword(0x47173E);
MakeDword(0x471742);
MakeDword(0x471746);
MakeWord(0x47174A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x47174C, 0x471757);
MakeDword(0x471757);
MakeDword(0x47175B);
MakeDword(0x47175F);
MakeDword(0x471763);
MakeDword(0x471767);
MakeDword(0x47176B);
MakeWord(0x47176F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471771, 0x47177A);
MakeDword(0x47177A);
MakeDword(0x47177E);
MakeDword(0x471782);
MakeDword(0x471786);
MakeDword(0x47178A);
MakeDword(0x47178E);
MakeWord(0x471792);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471794, 0x47179D);
MakeDword(0x47179D);
MakeDword(0x4717A1);
MakeDword(0x4717A5);
MakeDword(0x4717A9);
MakeDword(0x4717AD);
MakeDword(0x4717B1);
MakeWord(0x4717B5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4717B7, 0x4717BF);
MakeDword(0x4717BF);
MakeDword(0x4717C3);
MakeDword(0x4717C7);
MakeDword(0x4717CB);
MakeDword(0x4717CF);
MakeDword(0x4717D3);
MakeWord(0x4717D7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4717D9, 0x4717DE);
MakeDword(0x4717DE);
MakeDword(0x4717E2);
MakeDword(0x4717E6);
MakeDword(0x4717EA);
MakeDword(0x4717EE);
MakeDword(0x4717F2);
MakeWord(0x4717F6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4717F8, 0x471801);
MakeDword(0x471801);
MakeDword(0x471805);
MakeDword(0x471809);
MakeDword(0x47180D);
MakeDword(0x471811);
MakeDword(0x471815);
MakeWord(0x471819);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x47181B, 0x471822);
MakeDword(0x471822);
MakeDword(0x471826);
MakeDword(0x47182A);
MakeDword(0x47182E);
MakeDword(0x471832);
MakeDword(0x471836);
MakeWord(0x47183A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x47183C, 0x471846);
MakeDword(0x471846);
MakeDword(0x47184A);
MakeDword(0x47184E);
MakeDword(0x471852);
MakeDword(0x471856);
MakeDword(0x47185A);
MakeWord(0x47185E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471860, 0x47186A);
MakeDword(0x47186A);
MakeDword(0x47186E);
MakeDword(0x471872);
MakeDword(0x471876);
MakeDword(0x47187A);
MakeDword(0x47187E);
MakeWord(0x471882);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471884, 0x471893);
MakeDword(0x471893);
MakeDword(0x471897);
MakeDword(0x47189B);
MakeDword(0x47189F);
MakeDword(0x4718A3);
MakeDword(0x4718A7);
MakeWord(0x4718AB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4718AD, 0x4718B8);
MakeDword(0x4718B8);
MakeDword(0x4718BC);
MakeDword(0x4718C0);
MakeDword(0x4718C4);
MakeDword(0x4718C8);
MakeDword(0x4718CC);
MakeWord(0x4718D0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4718D2, 0x4718E1);
MakeDword(0x4718E1);
MakeDword(0x4718E5);
MakeDword(0x4718E9);
MakeDword(0x4718ED);
MakeDword(0x4718F1);
MakeDword(0x4718F5);
MakeWord(0x4718F9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4718FB, 0x471905);
MakeDword(0x471905);
MakeDword(0x471909);
MakeDword(0x47190D);
MakeDword(0x471911);
MakeDword(0x471915);
MakeDword(0x471919);
MakeWord(0x47191D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x47191F, 0x47192B);
MakeDword(0x47192B);
MakeDword(0x47192F);
MakeDword(0x471933);
MakeDword(0x471937);
MakeDword(0x47193B);
MakeDword(0x47193F);
MakeWord(0x471943);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471945, 0x471954);
MakeDword(0x471954);
MakeDword(0x471958);
MakeDword(0x47195C);
MakeDword(0x471960);
MakeDword(0x471964);
MakeDword(0x471968);
MakeWord(0x47196C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x47196E, 0x471977);
MakeDword(0x471977);
MakeDword(0x47197B);
MakeDword(0x47197F);
MakeDword(0x471983);
MakeDword(0x471987);
MakeDword(0x47198B);
MakeWord(0x47198F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471991, 0x471997);
MakeDword(0x471997);
MakeDword(0x47199B);
MakeDword(0x47199F);
MakeDword(0x4719A3);
MakeDword(0x4719A7);
MakeDword(0x4719AB);
MakeWord(0x4719AF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4719B1, 0x4719BB);
MakeDword(0x4719BB);
MakeDword(0x4719BF);
MakeDword(0x4719C3);
MakeDword(0x4719C7);
MakeDword(0x4719CB);
MakeDword(0x4719CF);
MakeWord(0x4719D3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4719D5, 0x4719DE);
MakeDword(0x4719DE);
MakeDword(0x4719E2);
MakeDword(0x4719E6);
MakeDword(0x4719EA);
MakeDword(0x4719EE);
MakeDword(0x4719F2);
MakeWord(0x4719F6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4719F8, 0x471A01);
MakeDword(0x471A01);
MakeDword(0x471A05);
MakeDword(0x471A09);
MakeDword(0x471A0D);
MakeDword(0x471A11);
MakeDword(0x471A15);
MakeWord(0x471A19);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471A1B, 0x471A27);
MakeDword(0x471A27);
MakeDword(0x471A2B);
MakeDword(0x471A2F);
MakeDword(0x471A33);
MakeDword(0x471A37);
MakeDword(0x471A3B);
MakeWord(0x471A3F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471A41, 0x471A49);
MakeDword(0x471A49);
MakeDword(0x471A4D);
MakeDword(0x471A51);
MakeDword(0x471A55);
MakeDword(0x471A59);
MakeDword(0x471A5D);
MakeWord(0x471A61);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471A63, 0x471A6C);
MakeDword(0x471A6C);
MakeDword(0x471A70);
MakeDword(0x471A74);
MakeDword(0x471A78);
MakeDword(0x471A7C);
MakeDword(0x471A80);
MakeWord(0x471A84);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471A86, 0x471A8E);
MakeDword(0x471A8E);
MakeDword(0x471A92);
MakeDword(0x471A96);
MakeDword(0x471A9A);
MakeDword(0x471A9E);
MakeDword(0x471AA2);
MakeWord(0x471AA6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471AA8, 0x471AB1);
MakeDword(0x471AB1);
MakeDword(0x471AB5);
MakeDword(0x471AB9);
MakeDword(0x471ABD);
MakeDword(0x471AC1);
MakeDword(0x471AC5);
MakeWord(0x471AC9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471ACB, 0x471AD6);
MakeDword(0x471AD6);
MakeDword(0x471ADA);
MakeDword(0x471ADE);
MakeDword(0x471AE2);
MakeDword(0x471AE6);
MakeDword(0x471AEA);
MakeWord(0x471AEE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471AF0, 0x471AFF);
MakeDword(0x471AFF);
MakeDword(0x471B03);
MakeDword(0x471B07);
MakeDword(0x471B0B);
MakeDword(0x471B0F);
MakeDword(0x471B13);
MakeWord(0x471B17);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471B19, 0x471B24);
MakeDword(0x471B24);
MakeDword(0x471B28);
MakeDword(0x471B2C);
MakeDword(0x471B30);
MakeDword(0x471B34);
MakeDword(0x471B38);
MakeWord(0x471B3C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471B3E, 0x471B49);
MakeDword(0x471B49);
MakeDword(0x471B4D);
MakeDword(0x471B51);
MakeDword(0x471B55);
MakeDword(0x471B59);
MakeDword(0x471B5D);
MakeWord(0x471B61);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471B63, 0x471B6E);
MakeDword(0x471B6E);
MakeDword(0x471B72);
MakeDword(0x471B76);
MakeDword(0x471B7A);
MakeDword(0x471B7E);
MakeDword(0x471B82);
MakeWord(0x471B86);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471B88, 0x471B93);
MakeDword(0x471B93);
MakeDword(0x471B97);
MakeDword(0x471B9B);
MakeDword(0x471B9F);
MakeDword(0x471BA3);
MakeDword(0x471BA7);
MakeWord(0x471BAB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471BAD, 0x471BB7);
MakeDword(0x471BB7);
MakeDword(0x471BBB);
MakeDword(0x471BBF);
MakeDword(0x471BC3);
MakeDword(0x471BC7);
MakeDword(0x471BCB);
MakeWord(0x471BCF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471BD1, 0x471BDB);
MakeDword(0x471BDB);
MakeDword(0x471BDF);
MakeDword(0x471BE3);
MakeDword(0x471BE7);
MakeDword(0x471BEB);
MakeDword(0x471BEF);
MakeWord(0x471BF3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471BF5, 0x471BFF);
MakeDword(0x471BFF);
MakeDword(0x471C03);
MakeDword(0x471C07);
MakeDword(0x471C0B);
MakeDword(0x471C0F);
MakeDword(0x471C13);
MakeWord(0x471C17);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471C19, 0x471C21);
MakeDword(0x471C21);
MakeDword(0x471C25);
MakeDword(0x471C29);
MakeDword(0x471C2D);
MakeDword(0x471C31);
MakeDword(0x471C35);
MakeWord(0x471C39);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471C3B, 0x471C42);
MakeDword(0x471C42);
MakeDword(0x471C46);
MakeDword(0x471C4A);
MakeDword(0x471C4E);
MakeDword(0x471C52);
MakeDword(0x471C56);
MakeWord(0x471C5A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471C5C, 0x471C6C);
MakeDword(0x471C6C);
MakeDword(0x471C70);
MakeDword(0x471C74);
MakeDword(0x471C78);
MakeDword(0x471C7C);
MakeDword(0x471C80);
MakeWord(0x471C84);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471C86, 0x471C94);
MakeDword(0x471C94);
MakeDword(0x471C98);
MakeDword(0x471C9C);
MakeDword(0x471CA0);
MakeDword(0x471CA4);
MakeDword(0x471CA8);
MakeWord(0x471CAC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471CAE, 0x471CBE);
MakeDword(0x471CBE);
MakeDword(0x471CC2);
MakeDword(0x471CC6);
MakeDword(0x471CCA);
MakeDword(0x471CCE);
MakeDword(0x471CD2);
MakeWord(0x471CD6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471CD8, 0x471CE4);
MakeDword(0x471CE4);
MakeDword(0x471CE8);
MakeDword(0x471CEC);
MakeDword(0x471CF0);
MakeDword(0x471CF4);
MakeDword(0x471CF8);
MakeWord(0x471CFC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471CFE, 0x471D0B);
MakeDword(0x471D0B);
MakeDword(0x471D0F);
MakeDword(0x471D13);
MakeDword(0x471D17);
MakeDword(0x471D1B);
MakeDword(0x471D1F);
MakeWord(0x471D23);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471D25, 0x471D32);
MakeDword(0x471D32);
MakeDword(0x471D36);
MakeDword(0x471D3A);
MakeDword(0x471D3E);
MakeDword(0x471D42);
MakeDword(0x471D46);
MakeWord(0x471D4A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471D4C, 0x471D58);
MakeDword(0x471D58);
MakeDword(0x471D5C);
MakeDword(0x471D60);
MakeDword(0x471D64);
MakeDword(0x471D68);
MakeDword(0x471D6C);
MakeWord(0x471D70);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471D72, 0x471D7C);
MakeDword(0x471D7C);
MakeDword(0x471D80);
MakeDword(0x471D84);
MakeDword(0x471D88);
MakeDword(0x471D8C);
MakeDword(0x471D90);
MakeWord(0x471D94);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471D96, 0x471D9F);
MakeDword(0x471D9F);
MakeDword(0x471DA3);
MakeDword(0x471DA7);
MakeDword(0x471DAB);
MakeDword(0x471DAF);
MakeDword(0x471DB3);
MakeWord(0x471DB7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471DB9, 0x471DC5);
MakeDword(0x471DC5);
MakeDword(0x471DC9);
MakeDword(0x471DCD);
MakeDword(0x471DD1);
MakeDword(0x471DD5);
MakeDword(0x471DD9);
MakeWord(0x471DDD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471DDF, 0x471DEB);
MakeDword(0x471DEB);
MakeDword(0x471DEF);
MakeDword(0x471DF3);
MakeDword(0x471DF7);
MakeDword(0x471DFB);
MakeDword(0x471DFF);
MakeWord(0x471E03);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471E05, 0x471E0E);
MakeUnkn(0x471E10, 1);
MakeNameEx(0x471E10, "RTTI_471E10_Enumeration_TStatusPanelStyle", 0);
MakeDword(0x471E10);
MakeUnkn(0x471E14, 1);
MakeNameEx(0x471E14, "", 0);
MakeByte(0x471E14);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471E15, 0x471E27);
MakeByte(0x471E27);
MakeDword(0x471E28);
MakeDword(0x471E2C);
MakeDword(0x471E30);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471E34, 0x471E3B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471E3B, 0x471E47);
MakeUnkn(0x471E50, 1);
MakeNameEx(0x471E50, "RTTI_471E50_Enumeration_TStatusPanelBevel", 0);
MakeDword(0x471E50);
MakeUnkn(0x471E54, 1);
MakeNameEx(0x471E54, "", 0);
MakeByte(0x471E54);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471E55, 0x471E67);
MakeByte(0x471E67);
MakeDword(0x471E68);
MakeDword(0x471E6C);
MakeDword(0x471E70);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471E74, 0x471E7B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471E7B, 0x471E85);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471E85, 0x471E8E);
MakeUnkn(0x471E98, 1);
MakeNameEx(0x471E98, "VMT_471E98_TStatusPanel", 0);
MakeDword(0x471E98);
MakeDword(0x471E9C);
MakeDword(0x471EA0);
MakeDword(0x471EA4);
MakeUnkn(0x471F04, 1);
MakeNameEx(0x471F04, "TStatusPanel_InitTable", 0);
MakeByte(0x471F04);
MakeByte(0x471F05);
MakeDword(0x471F06);
MakeDword(0x471F0A);
MakeDword(0x471F0E);
MakeDword(0x471F12);
MakeDword(0x471EA8);
MakeDword(0x471EAC);
MakeDword(0x471EB0);
MakeDword(0x471EB4);
MakeDword(0x471EB8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471F16, 0x471F23);
MakeDword(0x471EBC);
MakeDword(0x471EC0);
MakeDword(0x471EC4);
MakeDword(0x471EC8);
MakeDword(0x471ECC);
MakeDword(0x471ED0);
MakeDword(0x471ED4);
MakeDword(0x471ED8);
MakeDword(0x471EDC);
MakeDword(0x471EE0);
MakeComm(0x471EE4, "'+0'");
MakeDword(0x471EE4);
MakeComm(0x471EE8, "'+4'");
MakeDword(0x471EE8);
MakeComm(0x471EEC, "'+8'");
MakeDword(0x471EEC);
MakeComm(0x471EF0, "'+C'");
MakeDword(0x471EF0);
MakeComm(0x471EF4, "'+10'");
MakeDword(0x471EF4);
MakeComm(0x471EF8, "'+14'");
MakeDword(0x471EF8);
MakeComm(0x471EFC, "'+18'");
MakeDword(0x471EFC);
MakeComm(0x471F00, "'+1C'");
MakeDword(0x471F00);
MakeUnkn(0x471F24, 1);
MakeNameEx(0x471F24, "RTTI_471F24_Class_TStatusPanel", 0);
MakeDword(0x471F24);
MakeUnkn(0x471F28, 1);
MakeNameEx(0x471F28, "", 0);
MakeByte(0x471F28);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471F29, 0x471F36);
MakeDword(0x471F36);
MakeDword(0x471F3A);
MakeWord(0x471F3E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471F40, 0x471F49);
MakeWord(0x471F49);
MakeDword(0x471F4B);
MakeDword(0x471F4F);
MakeDword(0x471F53);
MakeDword(0x471F57);
MakeDword(0x471F5B);
MakeDword(0x471F5F);
MakeWord(0x471F63);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471F65, 0x471F6F);
MakeDword(0x471F6F);
MakeDword(0x471F73);
MakeDword(0x471F77);
MakeDword(0x471F7B);
MakeDword(0x471F7F);
MakeDword(0x471F83);
MakeWord(0x471F87);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471F89, 0x471F8F);
MakeDword(0x471F8F);
MakeDword(0x471F93);
MakeDword(0x471F97);
MakeDword(0x471F9B);
MakeDword(0x471F9F);
MakeDword(0x471FA3);
MakeWord(0x471FA7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471FA9, 0x471FB2);
MakeDword(0x471FB2);
MakeDword(0x471FB6);
MakeDword(0x471FBA);
MakeDword(0x471FBE);
MakeDword(0x471FC2);
MakeDword(0x471FC6);
MakeWord(0x471FCA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471FCC, 0x471FDB);
MakeDword(0x471FDB);
MakeDword(0x471FDF);
MakeDword(0x471FE3);
MakeDword(0x471FE7);
MakeDword(0x471FEB);
MakeDword(0x471FEF);
MakeWord(0x471FF3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x471FF5, 0x471FFB);
MakeDword(0x471FFB);
MakeDword(0x471FFF);
MakeDword(0x472003);
MakeDword(0x472007);
MakeDword(0x47200B);
MakeDword(0x47200F);
MakeWord(0x472013);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472015, 0x47201A);
MakeDword(0x47201A);
MakeDword(0x47201E);
MakeDword(0x472022);
MakeDword(0x472026);
MakeDword(0x47202A);
MakeDword(0x47202E);
MakeWord(0x472032);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472034, 0x47203A);
MakeUnkn(0x47203C, 1);
MakeNameEx(0x47203C, "VMT_47203C_TStatusPanels", 0);
MakeDword(0x47203C);
MakeDword(0x472040);
MakeDword(0x472044);
MakeDword(0x472048);
MakeDword(0x47204C);
MakeDword(0x472050);
MakeDword(0x472054);
MakeDword(0x472058);
MakeUnkn(0x4720B0, 1);
MakeNameEx(0x4720B0, "TStatusPanels_DynamicTable", 0);
MakeWord(0x4720B0);
MakeWord(0x4720B2);
MakeDword(0x4720B4);
MakeDword(0x47205C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4720B8, 0x4720C6);
MakeDword(0x472060);
MakeDword(0x472064);
MakeDword(0x472068);
MakeDword(0x47206C);
MakeDword(0x472070);
MakeDword(0x472074);
MakeDword(0x472078);
MakeDword(0x47207C);
MakeDword(0x472080);
MakeDword(0x472084);
MakeComm(0x472088, "'+0'");
MakeDword(0x472088);
MakeComm(0x47208C, "'+4'");
MakeDword(0x47208C);
MakeComm(0x472090, "'+8'");
MakeDword(0x472090);
MakeComm(0x472094, "'+C'");
MakeDword(0x472094);
MakeComm(0x472098, "'+10'");
MakeDword(0x472098);
MakeComm(0x47209C, "'+14'");
MakeDword(0x47209C);
MakeComm(0x4720A0, "'+18'");
MakeDword(0x4720A0);
MakeComm(0x4720A4, "'+1C'");
MakeDword(0x4720A4);
MakeComm(0x4720A8, "'+20'");
MakeDword(0x4720A8);
MakeComm(0x4720AC, "'+24'");
MakeDword(0x4720AC);
MakeUnkn(0x4720C8, 1);
MakeNameEx(0x4720C8, "RTTI_4720C8_Class_TStatusPanels", 0);
MakeDword(0x4720C8);
MakeUnkn(0x4720CC, 1);
MakeNameEx(0x4720CC, "", 0);
MakeByte(0x4720CC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4720CD, 0x4720DB);
MakeDword(0x4720DB);
MakeDword(0x4720DF);
MakeWord(0x4720E3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4720E5, 0x4720EE);
MakeWord(0x4720EE);
MakeUnkn(0x4720F0, 1);
MakeNameEx(0x4720F0, "RTTI_4720F0_Method_TSBCreatePanelClassEvent", 0);
MakeDword(0x4720F0);
MakeUnkn(0x4720F4, 1);
MakeNameEx(0x4720F4, "", 0);
MakeByte(0x4720F4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4720F5, 0x47210E);
MakeByte(0x47210E);
MakeByte(0x47210F);
MakeByte(0x472110);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472111, 0x472118);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472118, 0x472129);
MakeByte(0x472129);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x47212A, 0x472135);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472135, 0x472147);
MakeByte(0x472147);
MakeDword(0x472148);
MakeDword(0x47214C);
MakeUnkn(0x472150, 1);
MakeNameEx(0x472150, "VMT_472150_TCustomStatusBar", 0);
MakeDword(0x472150);
MakeDword(0x472154);
MakeDword(0x472158);
MakeDword(0x47215C);
MakeUnkn(0x472284, 1);
MakeNameEx(0x472284, "TCustomStatusBar_InitTable", 0);
MakeByte(0x472284);
MakeByte(0x472285);
MakeDword(0x472286);
MakeDword(0x47228A);
MakeDword(0x47228E);
MakeDword(0x472292);
MakeDword(0x472160);
MakeDword(0x472164);
MakeDword(0x472168);
MakeDword(0x47216C);
MakeUnkn(0x472296, 1);
MakeNameEx(0x472296, "TCustomStatusBar_DynamicTable", 0);
MakeWord(0x472296);
MakeWord(0x472298);
MakeWord(0x47229A);
MakeWord(0x47229C);
MakeWord(0x47229E);
MakeWord(0x4722A0);
MakeWord(0x4722A2);
MakeWord(0x4722A4);
MakeWord(0x4722A6);
MakeWord(0x4722A8);
MakeWord(0x4722AA);
MakeWord(0x4722AC);
MakeWord(0x4722AE);
MakeWord(0x4722B0);
MakeWord(0x4722B2);
MakeWord(0x4722B4);
MakeDword(0x4722B6);
MakeDword(0x4722BA);
MakeDword(0x4722BE);
MakeDword(0x4722C2);
MakeDword(0x4722C6);
MakeDword(0x4722CA);
MakeDword(0x4722CE);
MakeDword(0x4722D2);
MakeDword(0x4722D6);
MakeDword(0x4722DA);
MakeDword(0x4722DE);
MakeDword(0x4722E2);
MakeDword(0x4722E6);
MakeDword(0x4722EA);
MakeDword(0x4722EE);
MakeDword(0x472170);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4722F2, 0x472303);
MakeDword(0x472174);
MakeDword(0x472178);
MakeDword(0x47217C);
MakeDword(0x472180);
MakeDword(0x472184);
MakeDword(0x472188);
MakeDword(0x47218C);
MakeDword(0x472190);
MakeDword(0x472194);
MakeDword(0x472198);
MakeComm(0x47219C, "'+0'");
MakeDword(0x47219C);
MakeComm(0x4721A0, "'+4'");
MakeDword(0x4721A0);
MakeComm(0x4721A4, "'+8'");
MakeDword(0x4721A4);
MakeComm(0x4721A8, "'+C'");
MakeDword(0x4721A8);
MakeComm(0x4721AC, "'+10'");
MakeDword(0x4721AC);
MakeComm(0x4721B0, "'+14'");
MakeDword(0x4721B0);
MakeComm(0x4721B4, "'+18'");
MakeDword(0x4721B4);
MakeComm(0x4721B8, "'+1C'");
MakeDword(0x4721B8);
MakeComm(0x4721BC, "'+20'");
MakeDword(0x4721BC);
MakeComm(0x4721C0, "'+24'");
MakeDword(0x4721C0);
MakeComm(0x4721C4, "'+28'");
MakeDword(0x4721C4);
MakeComm(0x4721C8, "'+2C'");
MakeDword(0x4721C8);
MakeComm(0x4721CC, "'+30'");
MakeDword(0x4721CC);
MakeComm(0x4721D0, "'+34'");
MakeDword(0x4721D0);
MakeComm(0x4721D4, "'+38'");
MakeDword(0x4721D4);
MakeComm(0x4721D8, "'+3C'");
MakeDword(0x4721D8);
MakeComm(0x4721DC, "'+40'");
MakeDword(0x4721DC);
MakeComm(0x4721E0, "'+44'");
MakeDword(0x4721E0);
MakeComm(0x4721E4, "'+48'");
MakeDword(0x4721E4);
MakeComm(0x4721E8, "'+4C'");
MakeDword(0x4721E8);
MakeComm(0x4721EC, "'+50'");
MakeDword(0x4721EC);
MakeComm(0x4721F0, "'+54'");
MakeDword(0x4721F0);
MakeComm(0x4721F4, "'+58'");
MakeDword(0x4721F4);
MakeComm(0x4721F8, "'+5C'");
MakeDword(0x4721F8);
MakeComm(0x4721FC, "'+60'");
MakeDword(0x4721FC);
MakeComm(0x472200, "'+64'");
MakeDword(0x472200);
MakeComm(0x472204, "'+68'");
MakeDword(0x472204);
MakeComm(0x472208, "'+6C'");
MakeDword(0x472208);
MakeComm(0x47220C, "'+70'");
MakeDword(0x47220C);
MakeComm(0x472210, "'+74'");
MakeDword(0x472210);
MakeComm(0x472214, "'+78'");
MakeDword(0x472214);
MakeComm(0x472218, "'+7C'");
MakeDword(0x472218);
MakeComm(0x47221C, "'+80'");
MakeDword(0x47221C);
MakeComm(0x472220, "'+84'");
MakeDword(0x472220);
MakeComm(0x472224, "'+88'");
MakeDword(0x472224);
MakeComm(0x472228, "'+8C'");
MakeDword(0x472228);
MakeComm(0x47222C, "'+90'");
MakeDword(0x47222C);
MakeComm(0x472230, "'+94'");
MakeDword(0x472230);
MakeComm(0x472234, "'+98'");
MakeDword(0x472234);
MakeComm(0x472238, "'+9C'");
MakeDword(0x472238);
MakeComm(0x47223C, "'+A0'");
MakeDword(0x47223C);
MakeComm(0x472240, "'+A4'");
MakeDword(0x472240);
MakeComm(0x472244, "'+A8'");
MakeDword(0x472244);
MakeComm(0x472248, "'+AC'");
MakeDword(0x472248);
MakeComm(0x47224C, "'+B0'");
MakeDword(0x47224C);
MakeComm(0x472250, "'+B4'");
MakeDword(0x472250);
MakeComm(0x472254, "'+B8'");
MakeDword(0x472254);
MakeComm(0x472258, "'+BC'");
MakeDword(0x472258);
MakeComm(0x47225C, "'+C0'");
MakeDword(0x47225C);
MakeComm(0x472260, "'+C4'");
MakeDword(0x472260);
MakeComm(0x472264, "'+C8'");
MakeDword(0x472264);
MakeComm(0x472268, "'+CC'");
MakeDword(0x472268);
MakeComm(0x47226C, "'+D0'");
MakeDword(0x47226C);
MakeComm(0x472270, "'+D4'");
MakeDword(0x472270);
MakeComm(0x472274, "'+D8'");
MakeDword(0x472274);
MakeComm(0x472278, "'+DC'");
MakeDword(0x472278);
MakeComm(0x47227C, "'+E0'");
MakeDword(0x47227C);
MakeComm(0x472280, "'+E4'");
MakeDword(0x472280);
MakeUnkn(0x472304, 1);
MakeNameEx(0x472304, "RTTI_472304_Class_TCustomStatusBar", 0);
MakeDword(0x472304);
MakeUnkn(0x472308, 1);
MakeNameEx(0x472308, "", 0);
MakeByte(0x472308);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472309, 0x47231A);
MakeDword(0x47231A);
MakeDword(0x47231E);
MakeWord(0x472322);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472324, 0x47232D);
MakeWord(0x47232D);
MakeUnkn(0x472330, 1);
MakeNameEx(0x472330, "RTTI_472330_Method_TDrawPanelEvent", 0);
MakeDword(0x472330);
MakeUnkn(0x472334, 1);
MakeNameEx(0x472334, "", 0);
MakeByte(0x472334);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472335, 0x472345);
MakeByte(0x472345);
MakeByte(0x472346);
MakeByte(0x472347);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472348, 0x472352);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472352, 0x47235D);
MakeByte(0x47235D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x47235E, 0x472364);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472364, 0x472371);
MakeByte(0x472371);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472372, 0x472377);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472377, 0x47237D);
MakeByte(0x47237D);
MakeDword(0x47237E);
MakeDword(0x472382);
MakeDword(0x472386);
MakeUnkn(0x47238C, 1);
MakeNameEx(0x47238C, "VMT_47238C_TStatusBar", 0);
MakeDword(0x47238C);
MakeDword(0x472390);
MakeDword(0x472394);
MakeDword(0x472398);
MakeDword(0x47239C);
MakeDword(0x4723A0);
MakeDword(0x4723A4);
MakeDword(0x4723A8);
MakeDword(0x4723AC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4724C0, 0x4724CB);
MakeDword(0x4723B0);
MakeDword(0x4723B4);
MakeDword(0x4723B8);
MakeDword(0x4723BC);
MakeDword(0x4723C0);
MakeDword(0x4723C4);
MakeDword(0x4723C8);
MakeDword(0x4723CC);
MakeDword(0x4723D0);
MakeDword(0x4723D4);
MakeComm(0x4723D8, "'+0'");
MakeDword(0x4723D8);
MakeComm(0x4723DC, "'+4'");
MakeDword(0x4723DC);
MakeComm(0x4723E0, "'+8'");
MakeDword(0x4723E0);
MakeComm(0x4723E4, "'+C'");
MakeDword(0x4723E4);
MakeComm(0x4723E8, "'+10'");
MakeDword(0x4723E8);
MakeComm(0x4723EC, "'+14'");
MakeDword(0x4723EC);
MakeComm(0x4723F0, "'+18'");
MakeDword(0x4723F0);
MakeComm(0x4723F4, "'+1C'");
MakeDword(0x4723F4);
MakeComm(0x4723F8, "'+20'");
MakeDword(0x4723F8);
MakeComm(0x4723FC, "'+24'");
MakeDword(0x4723FC);
MakeComm(0x472400, "'+28'");
MakeDword(0x472400);
MakeComm(0x472404, "'+2C'");
MakeDword(0x472404);
MakeComm(0x472408, "'+30'");
MakeDword(0x472408);
MakeComm(0x47240C, "'+34'");
MakeDword(0x47240C);
MakeComm(0x472410, "'+38'");
MakeDword(0x472410);
MakeComm(0x472414, "'+3C'");
MakeDword(0x472414);
MakeComm(0x472418, "'+40'");
MakeDword(0x472418);
MakeComm(0x47241C, "'+44'");
MakeDword(0x47241C);
MakeComm(0x472420, "'+48'");
MakeDword(0x472420);
MakeComm(0x472424, "'+4C'");
MakeDword(0x472424);
MakeComm(0x472428, "'+50'");
MakeDword(0x472428);
MakeComm(0x47242C, "'+54'");
MakeDword(0x47242C);
MakeComm(0x472430, "'+58'");
MakeDword(0x472430);
MakeComm(0x472434, "'+5C'");
MakeDword(0x472434);
MakeComm(0x472438, "'+60'");
MakeDword(0x472438);
MakeComm(0x47243C, "'+64'");
MakeDword(0x47243C);
MakeComm(0x472440, "'+68'");
MakeDword(0x472440);
MakeComm(0x472444, "'+6C'");
MakeDword(0x472444);
MakeComm(0x472448, "'+70'");
MakeDword(0x472448);
MakeComm(0x47244C, "'+74'");
MakeDword(0x47244C);
MakeComm(0x472450, "'+78'");
MakeDword(0x472450);
MakeComm(0x472454, "'+7C'");
MakeDword(0x472454);
MakeComm(0x472458, "'+80'");
MakeDword(0x472458);
MakeComm(0x47245C, "'+84'");
MakeDword(0x47245C);
MakeComm(0x472460, "'+88'");
MakeDword(0x472460);
MakeComm(0x472464, "'+8C'");
MakeDword(0x472464);
MakeComm(0x472468, "'+90'");
MakeDword(0x472468);
MakeComm(0x47246C, "'+94'");
MakeDword(0x47246C);
MakeComm(0x472470, "'+98'");
MakeDword(0x472470);
MakeComm(0x472474, "'+9C'");
MakeDword(0x472474);
MakeComm(0x472478, "'+A0'");
MakeDword(0x472478);
MakeComm(0x47247C, "'+A4'");
MakeDword(0x47247C);
MakeComm(0x472480, "'+A8'");
MakeDword(0x472480);
MakeComm(0x472484, "'+AC'");
MakeDword(0x472484);
MakeComm(0x472488, "'+B0'");
MakeDword(0x472488);
MakeComm(0x47248C, "'+B4'");
MakeDword(0x47248C);
MakeComm(0x472490, "'+B8'");
MakeDword(0x472490);
MakeComm(0x472494, "'+BC'");
MakeDword(0x472494);
MakeComm(0x472498, "'+C0'");
MakeDword(0x472498);
MakeComm(0x47249C, "'+C4'");
MakeDword(0x47249C);
MakeComm(0x4724A0, "'+C8'");
MakeDword(0x4724A0);
MakeComm(0x4724A4, "'+CC'");
MakeDword(0x4724A4);
MakeComm(0x4724A8, "'+D0'");
MakeDword(0x4724A8);
MakeComm(0x4724AC, "'+D4'");
MakeDword(0x4724AC);
MakeComm(0x4724B0, "'+D8'");
MakeDword(0x4724B0);
MakeComm(0x4724B4, "'+DC'");
MakeDword(0x4724B4);
MakeComm(0x4724B8, "'+E0'");
MakeDword(0x4724B8);
MakeComm(0x4724BC, "'+E4'");
MakeDword(0x4724BC);
MakeUnkn(0x4724CC, 1);
MakeNameEx(0x4724CC, "RTTI_4724CC_Class_TStatusBar", 0);
MakeDword(0x4724CC);
MakeUnkn(0x4724D0, 1);
MakeNameEx(0x4724D0, "", 0);
MakeByte(0x4724D0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4724D1, 0x4724DC);
MakeDword(0x4724DC);
MakeDword(0x4724E0);
MakeWord(0x4724E4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4724E6, 0x4724EF);
MakeWord(0x4724EF);
MakeDword(0x4724F1);
MakeDword(0x4724F5);
MakeDword(0x4724F9);
MakeDword(0x4724FD);
MakeDword(0x472501);
MakeDword(0x472505);
MakeWord(0x472509);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x47250B, 0x472512);
MakeDword(0x472512);
MakeDword(0x472516);
MakeDword(0x47251A);
MakeDword(0x47251E);
MakeDword(0x472522);
MakeDword(0x472526);
MakeWord(0x47252A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x47252C, 0x472535);
MakeDword(0x472535);
MakeDword(0x472539);
MakeDword(0x47253D);
MakeDword(0x472541);
MakeDword(0x472545);
MakeDword(0x472549);
MakeWord(0x47254D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x47254F, 0x472555);
MakeDword(0x472555);
MakeDword(0x472559);
MakeDword(0x47255D);
MakeDword(0x472561);
MakeDword(0x472565);
MakeDword(0x472569);
MakeWord(0x47256D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x47256F, 0x472577);
MakeDword(0x472577);
MakeDword(0x47257B);
MakeDword(0x47257F);
MakeDword(0x472583);
MakeDword(0x472587);
MakeDword(0x47258B);
MakeWord(0x47258F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472591, 0x47259A);
MakeDword(0x47259A);
MakeDword(0x47259E);
MakeDword(0x4725A2);
MakeDword(0x4725A6);
MakeDword(0x4725AA);
MakeDword(0x4725AE);
MakeWord(0x4725B2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4725B4, 0x4725C0);
MakeDword(0x4725C0);
MakeDword(0x4725C4);
MakeDword(0x4725C8);
MakeDword(0x4725CC);
MakeDword(0x4725D0);
MakeDword(0x4725D4);
MakeWord(0x4725D8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4725DA, 0x4725E0);
MakeDword(0x4725E0);
MakeDword(0x4725E4);
MakeDword(0x4725E8);
MakeDword(0x4725EC);
MakeDword(0x4725F0);
MakeDword(0x4725F4);
MakeWord(0x4725F8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4725FA, 0x472605);
MakeDword(0x472605);
MakeDword(0x472609);
MakeDword(0x47260D);
MakeDword(0x472611);
MakeDword(0x472615);
MakeDword(0x472619);
MakeWord(0x47261D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x47261F, 0x472628);
MakeDword(0x472628);
MakeDword(0x47262C);
MakeDword(0x472630);
MakeDword(0x472634);
MakeDword(0x472638);
MakeDword(0x47263C);
MakeWord(0x472640);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472642, 0x47264B);
MakeDword(0x47264B);
MakeDword(0x47264F);
MakeDword(0x472653);
MakeDword(0x472657);
MakeDword(0x47265B);
MakeDword(0x47265F);
MakeWord(0x472663);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472665, 0x47266D);
MakeDword(0x47266D);
MakeDword(0x472671);
MakeDword(0x472675);
MakeDword(0x472679);
MakeDword(0x47267D);
MakeDword(0x472681);
MakeWord(0x472685);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472687, 0x47268C);
MakeDword(0x47268C);
MakeDword(0x472690);
MakeDword(0x472694);
MakeDword(0x472698);
MakeDword(0x47269C);
MakeDword(0x4726A0);
MakeWord(0x4726A4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4726A6, 0x4726B2);
MakeDword(0x4726B2);
MakeDword(0x4726B6);
MakeDword(0x4726BA);
MakeDword(0x4726BE);
MakeDword(0x4726C2);
MakeDword(0x4726C6);
MakeWord(0x4726CA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4726CC, 0x4726D3);
MakeDword(0x4726D3);
MakeDword(0x4726D7);
MakeDword(0x4726DB);
MakeDword(0x4726DF);
MakeDword(0x4726E3);
MakeDword(0x4726E7);
MakeWord(0x4726EB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4726ED, 0x4726FC);
MakeDword(0x4726FC);
MakeDword(0x472700);
MakeDword(0x472704);
MakeDword(0x472708);
MakeDword(0x47270C);
MakeDword(0x472710);
MakeWord(0x472714);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472716, 0x472722);
MakeDword(0x472722);
MakeDword(0x472726);
MakeDword(0x47272A);
MakeDword(0x47272E);
MakeDword(0x472732);
MakeDword(0x472736);
MakeWord(0x47273A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x47273C, 0x472747);
MakeDword(0x472747);
MakeDword(0x47274B);
MakeDword(0x47274F);
MakeDword(0x472753);
MakeDword(0x472757);
MakeDword(0x47275B);
MakeWord(0x47275F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472761, 0x472770);
MakeDword(0x472770);
MakeDword(0x472774);
MakeDword(0x472778);
MakeDword(0x47277C);
MakeDword(0x472780);
MakeDword(0x472784);
MakeWord(0x472788);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x47278A, 0x472794);
MakeDword(0x472794);
MakeDword(0x472798);
MakeDword(0x47279C);
MakeDword(0x4727A0);
MakeDword(0x4727A4);
MakeDword(0x4727A8);
MakeWord(0x4727AC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4727AE, 0x4727B7);
MakeDword(0x4727B7);
MakeDword(0x4727BB);
MakeDword(0x4727BF);
MakeDword(0x4727C3);
MakeDword(0x4727C7);
MakeDword(0x4727CB);
MakeWord(0x4727CF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4727D1, 0x4727DD);
MakeDword(0x4727DD);
MakeDword(0x4727E1);
MakeDword(0x4727E5);
MakeDword(0x4727E9);
MakeDword(0x4727ED);
MakeDword(0x4727F1);
MakeWord(0x4727F5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4727F7, 0x472802);
MakeDword(0x472802);
MakeDword(0x472806);
MakeDword(0x47280A);
MakeDword(0x47280E);
MakeDword(0x472812);
MakeDword(0x472816);
MakeWord(0x47281A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x47281C, 0x472825);
MakeDword(0x472825);
MakeDword(0x472829);
MakeDword(0x47282D);
MakeDword(0x472831);
MakeDword(0x472835);
MakeDword(0x472839);
MakeWord(0x47283D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x47283F, 0x47284D);
MakeDword(0x47284D);
MakeDword(0x472851);
MakeDword(0x472855);
MakeDword(0x472859);
MakeDword(0x47285D);
MakeDword(0x472861);
MakeWord(0x472865);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472867, 0x47286F);
MakeDword(0x47286F);
MakeDword(0x472873);
MakeDword(0x472877);
MakeDword(0x47287B);
MakeDword(0x47287F);
MakeDword(0x472883);
MakeWord(0x472887);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472889, 0x472891);
MakeDword(0x472891);
MakeDword(0x472895);
MakeDword(0x472899);
MakeDword(0x47289D);
MakeDword(0x4728A1);
MakeDword(0x4728A5);
MakeWord(0x4728A9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4728AB, 0x4728BA);
MakeDword(0x4728BA);
MakeDword(0x4728BE);
MakeDword(0x4728C2);
MakeDword(0x4728C6);
MakeDword(0x4728CA);
MakeDword(0x4728CE);
MakeWord(0x4728D2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4728D4, 0x4728E7);
MakeDword(0x4728E7);
MakeDword(0x4728EB);
MakeDword(0x4728EF);
MakeDword(0x4728F3);
MakeDword(0x4728F7);
MakeDword(0x4728FB);
MakeWord(0x4728FF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472901, 0x47290C);
MakeDword(0x47290C);
MakeDword(0x472910);
MakeDword(0x472914);
MakeDword(0x472918);
MakeDword(0x47291C);
MakeDword(0x472920);
MakeWord(0x472924);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472926, 0x472931);
MakeDword(0x472931);
MakeDword(0x472935);
MakeDword(0x472939);
MakeDword(0x47293D);
MakeDword(0x472941);
MakeDword(0x472945);
MakeWord(0x472949);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x47294B, 0x472956);
MakeDword(0x472956);
MakeDword(0x47295A);
MakeDword(0x47295E);
MakeDword(0x472962);
MakeDword(0x472966);
MakeDword(0x47296A);
MakeWord(0x47296E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472970, 0x47297A);
MakeDword(0x47297A);
MakeDword(0x47297E);
MakeDword(0x472982);
MakeDword(0x472986);
MakeDword(0x47298A);
MakeDword(0x47298E);
MakeWord(0x472992);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472994, 0x47299E);
MakeDword(0x47299E);
MakeDword(0x4729A2);
MakeDword(0x4729A6);
MakeDword(0x4729AA);
MakeDword(0x4729AE);
MakeDword(0x4729B2);
MakeWord(0x4729B6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4729B8, 0x4729BF);
MakeDword(0x4729BF);
MakeDword(0x4729C3);
MakeDword(0x4729C7);
MakeDword(0x4729CB);
MakeDword(0x4729CF);
MakeDword(0x4729D3);
MakeWord(0x4729D7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4729D9, 0x4729E9);
MakeDword(0x4729E9);
MakeDword(0x4729ED);
MakeDword(0x4729F1);
MakeDword(0x4729F5);
MakeDword(0x4729F9);
MakeDword(0x4729FD);
MakeWord(0x472A01);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472A03, 0x472A0F);
MakeDword(0x472A0F);
MakeDword(0x472A13);
MakeDword(0x472A17);
MakeDword(0x472A1B);
MakeDword(0x472A1F);
MakeDword(0x472A23);
MakeWord(0x472A27);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472A29, 0x472A36);
MakeDword(0x472A36);
MakeDword(0x472A3A);
MakeDword(0x472A3E);
MakeDword(0x472A42);
MakeDword(0x472A46);
MakeDword(0x472A4A);
MakeWord(0x472A4E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472A50, 0x472A5D);
MakeDword(0x472A5D);
MakeDword(0x472A61);
MakeDword(0x472A65);
MakeDword(0x472A69);
MakeDword(0x472A6D);
MakeDword(0x472A71);
MakeWord(0x472A75);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472A77, 0x472A83);
MakeDword(0x472A83);
MakeDword(0x472A87);
MakeDword(0x472A8B);
MakeDword(0x472A8F);
MakeDword(0x472A93);
MakeDword(0x472A97);
MakeWord(0x472A9B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472A9D, 0x472AA7);
MakeDword(0x472AA7);
MakeDword(0x472AAB);
MakeDword(0x472AAF);
MakeDword(0x472AB3);
MakeDword(0x472AB7);
MakeDword(0x472ABB);
MakeWord(0x472ABF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472AC1, 0x472ACD);
MakeDword(0x472ACD);
MakeDword(0x472AD1);
MakeDword(0x472AD5);
MakeDword(0x472AD9);
MakeDword(0x472ADD);
MakeDword(0x472AE1);
MakeWord(0x472AE5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472AE7, 0x472AF0);
MakeDword(0x472AF0);
MakeDword(0x472AF4);
MakeDword(0x472AF8);
MakeDword(0x472AFC);
MakeDword(0x472B00);
MakeDword(0x472B04);
MakeWord(0x472B08);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472B0A, 0x472B16);
MakeDword(0x472B16);
MakeDword(0x472B1A);
MakeDword(0x472B1E);
MakeDword(0x472B22);
MakeDword(0x472B26);
MakeDword(0x472B2A);
MakeWord(0x472B2E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472B30, 0x472B3C);
MakeUnkn(0x472B3C, 1);
MakeNameEx(0x472B3C, "RTTI_472B3C_Enumeration_TTrackBarOrientation", 0);
MakeDword(0x472B3C);
MakeUnkn(0x472B40, 1);
MakeNameEx(0x472B40, "", 0);
MakeByte(0x472B40);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472B41, 0x472B56);
MakeByte(0x472B56);
MakeDword(0x472B57);
MakeDword(0x472B5B);
MakeDword(0x472B5F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472B63, 0x472B70);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472B70, 0x472B7B);
MakeUnkn(0x472B84, 1);
MakeNameEx(0x472B84, "RTTI_472B84_Enumeration_TTickMark", 0);
MakeDword(0x472B84);
MakeUnkn(0x472B88, 1);
MakeNameEx(0x472B88, "", 0);
MakeByte(0x472B88);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472B89, 0x472B93);
MakeByte(0x472B93);
MakeDword(0x472B94);
MakeDword(0x472B98);
MakeDword(0x472B9C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472BA0, 0x472BAE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472BAE, 0x472BB8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472BB8, 0x472BBF);
MakeUnkn(0x472BC8, 1);
MakeNameEx(0x472BC8, "RTTI_472BC8_Enumeration_TTickStyle", 0);
MakeDword(0x472BC8);
MakeUnkn(0x472BCC, 1);
MakeNameEx(0x472BCC, "", 0);
MakeByte(0x472BCC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472BCD, 0x472BD8);
MakeByte(0x472BD8);
MakeDword(0x472BD9);
MakeDword(0x472BDD);
MakeDword(0x472BE1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472BE5, 0x472BEC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472BEC, 0x472BF3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472BF3, 0x472BFC);
MakeUnkn(0x472C08, 1);
MakeNameEx(0x472C08, "RTTI_472C08_Enumeration_TPositionToolTip", 0);
MakeDword(0x472C08);
MakeUnkn(0x472C0C, 1);
MakeNameEx(0x472C0C, "", 0);
MakeByte(0x472C0C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472C0D, 0x472C1E);
MakeByte(0x472C1E);
MakeDword(0x472C1F);
MakeDword(0x472C23);
MakeDword(0x472C27);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472C2B, 0x472C32);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472C32, 0x472C38);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472C38, 0x472C3F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472C3F, 0x472C48);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472C48, 0x472C50);
MakeUnkn(0x472C5C, 1);
MakeNameEx(0x472C5C, "VMT_472C5C_TTrackBar", 0);
MakeDword(0x472C5C);
MakeDword(0x472C60);
MakeDword(0x472C64);
MakeDword(0x472C68);
MakeDword(0x472C6C);
MakeDword(0x472C70);
MakeDword(0x472C74);
MakeDword(0x472C78);
MakeUnkn(0x472D80, 1);
MakeNameEx(0x472D80, "TTrackBar_DynamicTable", 0);
MakeWord(0x472D80);
MakeWord(0x472D82);
MakeWord(0x472D84);
MakeWord(0x472D86);
MakeWord(0x472D88);
MakeWord(0x472D8A);
MakeDword(0x472D8C);
MakeDword(0x472D90);
MakeDword(0x472D94);
MakeDword(0x472D98);
MakeDword(0x472D9C);
MakeDword(0x472C7C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472DA0, 0x472DAA);
MakeDword(0x472C80);
MakeDword(0x472C84);
MakeDword(0x472C88);
MakeDword(0x472C8C);
MakeDword(0x472C90);
MakeDword(0x472C94);
MakeDword(0x472C98);
MakeDword(0x472C9C);
MakeDword(0x472CA0);
MakeDword(0x472CA4);
MakeComm(0x472CA8, "'+0'");
MakeDword(0x472CA8);
MakeComm(0x472CAC, "'+4'");
MakeDword(0x472CAC);
MakeComm(0x472CB0, "'+8'");
MakeDword(0x472CB0);
MakeComm(0x472CB4, "'+C'");
MakeDword(0x472CB4);
MakeComm(0x472CB8, "'+10'");
MakeDword(0x472CB8);
MakeComm(0x472CBC, "'+14'");
MakeDword(0x472CBC);
MakeComm(0x472CC0, "'+18'");
MakeDword(0x472CC0);
MakeComm(0x472CC4, "'+1C'");
MakeDword(0x472CC4);
MakeComm(0x472CC8, "'+20'");
MakeDword(0x472CC8);
MakeComm(0x472CCC, "'+24'");
MakeDword(0x472CCC);
MakeComm(0x472CD0, "'+28'");
MakeDword(0x472CD0);
MakeComm(0x472CD4, "'+2C'");
MakeDword(0x472CD4);
MakeComm(0x472CD8, "'+30'");
MakeDword(0x472CD8);
MakeComm(0x472CDC, "'+34'");
MakeDword(0x472CDC);
MakeComm(0x472CE0, "'+38'");
MakeDword(0x472CE0);
MakeComm(0x472CE4, "'+3C'");
MakeDword(0x472CE4);
MakeComm(0x472CE8, "'+40'");
MakeDword(0x472CE8);
MakeComm(0x472CEC, "'+44'");
MakeDword(0x472CEC);
MakeComm(0x472CF0, "'+48'");
MakeDword(0x472CF0);
MakeComm(0x472CF4, "'+4C'");
MakeDword(0x472CF4);
MakeComm(0x472CF8, "'+50'");
MakeDword(0x472CF8);
MakeComm(0x472CFC, "'+54'");
MakeDword(0x472CFC);
MakeComm(0x472D00, "'+58'");
MakeDword(0x472D00);
MakeComm(0x472D04, "'+5C'");
MakeDword(0x472D04);
MakeComm(0x472D08, "'+60'");
MakeDword(0x472D08);
MakeComm(0x472D0C, "'+64'");
MakeDword(0x472D0C);
MakeComm(0x472D10, "'+68'");
MakeDword(0x472D10);
MakeComm(0x472D14, "'+6C'");
MakeDword(0x472D14);
MakeComm(0x472D18, "'+70'");
MakeDword(0x472D18);
MakeComm(0x472D1C, "'+74'");
MakeDword(0x472D1C);
MakeComm(0x472D20, "'+78'");
MakeDword(0x472D20);
MakeComm(0x472D24, "'+7C'");
MakeDword(0x472D24);
MakeComm(0x472D28, "'+80'");
MakeDword(0x472D28);
MakeComm(0x472D2C, "'+84'");
MakeDword(0x472D2C);
MakeComm(0x472D30, "'+88'");
MakeDword(0x472D30);
MakeComm(0x472D34, "'+8C'");
MakeDword(0x472D34);
MakeComm(0x472D38, "'+90'");
MakeDword(0x472D38);
MakeComm(0x472D3C, "'+94'");
MakeDword(0x472D3C);
MakeComm(0x472D40, "'+98'");
MakeDword(0x472D40);
MakeComm(0x472D44, "'+9C'");
MakeDword(0x472D44);
MakeComm(0x472D48, "'+A0'");
MakeDword(0x472D48);
MakeComm(0x472D4C, "'+A4'");
MakeDword(0x472D4C);
MakeComm(0x472D50, "'+A8'");
MakeDword(0x472D50);
MakeComm(0x472D54, "'+AC'");
MakeDword(0x472D54);
MakeComm(0x472D58, "'+B0'");
MakeDword(0x472D58);
MakeComm(0x472D5C, "'+B4'");
MakeDword(0x472D5C);
MakeComm(0x472D60, "'+B8'");
MakeDword(0x472D60);
MakeComm(0x472D64, "'+BC'");
MakeDword(0x472D64);
MakeComm(0x472D68, "'+C0'");
MakeDword(0x472D68);
MakeComm(0x472D6C, "'+C4'");
MakeDword(0x472D6C);
MakeComm(0x472D70, "'+C8'");
MakeDword(0x472D70);
MakeComm(0x472D74, "'+CC'");
MakeDword(0x472D74);
MakeComm(0x472D78, "'+D0'");
MakeDword(0x472D78);
MakeComm(0x472D7C, "'+D4'");
MakeDword(0x472D7C);
MakeUnkn(0x472DAC, 1);
MakeNameEx(0x472DAC, "RTTI_472DAC_Class_TTrackBar", 0);
MakeDword(0x472DAC);
MakeUnkn(0x472DB0, 1);
MakeNameEx(0x472DB0, "", 0);
MakeByte(0x472DB0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472DB1, 0x472DBB);
MakeDword(0x472DBB);
MakeDword(0x472DBF);
MakeWord(0x472DC3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472DC5, 0x472DCE);
MakeWord(0x472DCE);
MakeDword(0x472DD0);
MakeDword(0x472DD4);
MakeDword(0x472DD8);
MakeDword(0x472DDC);
MakeDword(0x472DE0);
MakeDword(0x472DE4);
MakeWord(0x472DE8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472DEA, 0x472DF0);
MakeDword(0x472DF0);
MakeDword(0x472DF4);
MakeDword(0x472DF8);
MakeDword(0x472DFC);
MakeDword(0x472E00);
MakeDword(0x472E04);
MakeWord(0x472E08);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472E0A, 0x472E12);
MakeDword(0x472E12);
MakeDword(0x472E16);
MakeDword(0x472E1A);
MakeDword(0x472E1E);
MakeDword(0x472E22);
MakeDword(0x472E26);
MakeWord(0x472E2A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472E2C, 0x472E38);
MakeDword(0x472E38);
MakeDword(0x472E3C);
MakeDword(0x472E40);
MakeDword(0x472E44);
MakeDword(0x472E48);
MakeDword(0x472E4C);
MakeWord(0x472E50);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472E52, 0x472E58);
MakeDword(0x472E58);
MakeDword(0x472E5C);
MakeDword(0x472E60);
MakeDword(0x472E64);
MakeDword(0x472E68);
MakeDword(0x472E6C);
MakeWord(0x472E70);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472E72, 0x472E7D);
MakeDword(0x472E7D);
MakeDword(0x472E81);
MakeDword(0x472E85);
MakeDword(0x472E89);
MakeDword(0x472E8D);
MakeDword(0x472E91);
MakeWord(0x472E95);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472E97, 0x472EA0);
MakeDword(0x472EA0);
MakeDword(0x472EA4);
MakeDword(0x472EA8);
MakeDword(0x472EAC);
MakeDword(0x472EB0);
MakeDword(0x472EB4);
MakeWord(0x472EB8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472EBA, 0x472EC3);
MakeDword(0x472EC3);
MakeDword(0x472EC7);
MakeDword(0x472ECB);
MakeDword(0x472ECF);
MakeDword(0x472ED3);
MakeDword(0x472ED7);
MakeWord(0x472EDB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472EDD, 0x472EE5);
MakeDword(0x472EE5);
MakeDword(0x472EE9);
MakeDword(0x472EED);
MakeDword(0x472EF1);
MakeDword(0x472EF5);
MakeDword(0x472EF9);
MakeWord(0x472EFD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472EFF, 0x472F0B);
MakeDword(0x472F0B);
MakeDword(0x472F0F);
MakeDword(0x472F13);
MakeDword(0x472F17);
MakeDword(0x472F1B);
MakeDword(0x472F1F);
MakeWord(0x472F23);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472F25, 0x472F2E);
MakeDword(0x472F2E);
MakeDword(0x472F32);
MakeDword(0x472F36);
MakeDword(0x472F3A);
MakeDword(0x472F3E);
MakeDword(0x472F42);
MakeWord(0x472F46);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472F48, 0x472F4C);
MakeDword(0x472F4C);
MakeDword(0x472F50);
MakeDword(0x472F54);
MakeDword(0x472F58);
MakeDword(0x472F5C);
MakeDword(0x472F60);
MakeWord(0x472F64);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472F66, 0x472F6A);
MakeDword(0x472F6A);
MakeDword(0x472F6E);
MakeDword(0x472F72);
MakeDword(0x472F76);
MakeDword(0x472F7A);
MakeDword(0x472F7E);
MakeWord(0x472F82);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472F84, 0x472F90);
MakeDword(0x472F90);
MakeDword(0x472F94);
MakeDword(0x472F98);
MakeDword(0x472F9C);
MakeDword(0x472FA0);
MakeDword(0x472FA4);
MakeWord(0x472FA8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472FAA, 0x472FB6);
MakeDword(0x472FB6);
MakeDword(0x472FBA);
MakeDword(0x472FBE);
MakeDword(0x472FC2);
MakeDword(0x472FC6);
MakeDword(0x472FCA);
MakeWord(0x472FCE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472FD0, 0x472FDF);
MakeDword(0x472FDF);
MakeDword(0x472FE3);
MakeDword(0x472FE7);
MakeDword(0x472FEB);
MakeDword(0x472FEF);
MakeDword(0x472FF3);
MakeWord(0x472FF7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x472FF9, 0x473002);
MakeDword(0x473002);
MakeDword(0x473006);
MakeDword(0x47300A);
MakeDword(0x47300E);
MakeDword(0x473012);
MakeDword(0x473016);
MakeWord(0x47301A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x47301C, 0x473026);
MakeDword(0x473026);
MakeDword(0x47302A);
MakeDword(0x47302E);
MakeDword(0x473032);
MakeDword(0x473036);
MakeDword(0x47303A);
MakeWord(0x47303E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x473040, 0x47304A);
MakeDword(0x47304A);
MakeDword(0x47304E);
MakeDword(0x473052);
MakeDword(0x473056);
MakeDword(0x47305A);
MakeDword(0x47305E);
MakeWord(0x473062);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x473064, 0x47306D);
MakeDword(0x47306D);
MakeDword(0x473071);
MakeDword(0x473075);
MakeDword(0x473079);
MakeDword(0x47307D);
MakeDword(0x473081);
MakeWord(0x473085);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x473087, 0x473097);
MakeDword(0x473097);
MakeDword(0x47309B);
MakeDword(0x47309F);
MakeDword(0x4730A3);
MakeDword(0x4730A7);
MakeDword(0x4730AB);
MakeWord(0x4730AF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4730B1, 0x4730BF);
MakeDword(0x4730BF);
MakeDword(0x4730C3);
MakeDword(0x4730C7);
MakeDword(0x4730CB);
MakeDword(0x4730CF);
MakeDword(0x4730D3);
MakeWord(0x4730D7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4730D9, 0x4730E0);
MakeDword(0x4730E0);
MakeDword(0x4730E4);
MakeDword(0x4730E8);
MakeDword(0x4730EC);
MakeDword(0x4730F0);
MakeDword(0x4730F4);
MakeWord(0x4730F8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4730FA, 0x473103);
MakeDword(0x473103);
MakeDword(0x473107);
MakeDword(0x47310B);
MakeDword(0x47310F);
MakeDword(0x473113);
MakeDword(0x473117);
MakeWord(0x47311B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x47311D, 0x473126);
MakeDword(0x473126);
MakeDword(0x47312A);
MakeDword(0x47312E);
MakeDword(0x473132);
MakeDword(0x473136);
MakeDword(0x47313A);
MakeWord(0x47313E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x473140, 0x47314D);
MakeDword(0x47314D);
MakeDword(0x473151);
MakeDword(0x473155);
MakeDword(0x473159);
MakeDword(0x47315D);
MakeDword(0x473161);
MakeWord(0x473165);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x473167, 0x473170);
MakeDword(0x473170);
MakeDword(0x473174);
MakeDword(0x473178);
MakeDword(0x47317C);
MakeDword(0x473180);
MakeDword(0x473184);
MakeWord(0x473188);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x47318A, 0x473192);
MakeDword(0x473192);
MakeDword(0x473196);
MakeDword(0x47319A);
MakeDword(0x47319E);
MakeDword(0x4731A2);
MakeDword(0x4731A6);
MakeWord(0x4731AA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4731AC, 0x4731B8);
MakeDword(0x4731B8);
MakeDword(0x4731BC);
MakeDword(0x4731C0);
MakeDword(0x4731C4);
MakeDword(0x4731C8);
MakeDword(0x4731CC);
MakeWord(0x4731D0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4731D2, 0x4731DC);
MakeDword(0x4731DC);
MakeDword(0x4731E0);
MakeDword(0x4731E4);
MakeDword(0x4731E8);
MakeDword(0x4731EC);
MakeDword(0x4731F0);
MakeWord(0x4731F4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4731F6, 0x473200);
MakeDword(0x473200);
MakeDword(0x473204);
MakeDword(0x473208);
MakeDword(0x47320C);
MakeDword(0x473210);
MakeDword(0x473214);
MakeWord(0x473218);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x47321A, 0x473222);
MakeDword(0x473222);
MakeDword(0x473226);
MakeDword(0x47322A);
MakeDword(0x47322E);
MakeDword(0x473232);
MakeDword(0x473236);
MakeWord(0x47323A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x47323C, 0x47324B);
MakeDword(0x47324B);
MakeDword(0x47324F);
MakeDword(0x473253);
MakeDword(0x473257);
MakeDword(0x47325B);
MakeDword(0x47325F);
MakeWord(0x473263);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x473265, 0x47326E);
MakeDword(0x47326E);
MakeDword(0x473272);
MakeDword(0x473276);
MakeDword(0x47327A);
MakeDword(0x47327E);
MakeDword(0x473282);
MakeWord(0x473286);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x473288, 0x473293);
MakeDword(0x473293);
MakeDword(0x473297);
MakeDword(0x47329B);
MakeDword(0x47329F);
MakeDword(0x4732A3);
MakeDword(0x4732A7);
MakeWord(0x4732AB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4732AD, 0x4732B8);
MakeDword(0x4732B8);
MakeDword(0x4732BC);
MakeDword(0x4732C0);
MakeDword(0x4732C4);
MakeDword(0x4732C8);
MakeDword(0x4732CC);
MakeWord(0x4732D0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4732D2, 0x4732DC);
MakeDword(0x4732DC);
MakeDword(0x4732E0);
MakeDword(0x4732E4);
MakeDword(0x4732E8);
MakeDword(0x4732EC);
MakeDword(0x4732F0);
MakeWord(0x4732F4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4732F6, 0x473300);
MakeDword(0x473300);
MakeDword(0x473304);
MakeDword(0x473308);
MakeDword(0x47330C);
MakeDword(0x473310);
MakeDword(0x473314);
MakeWord(0x473318);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x47331A, 0x473322);
MakeDword(0x473322);
MakeDword(0x473326);
MakeDword(0x47332A);
MakeDword(0x47332E);
MakeDword(0x473332);
MakeDword(0x473336);
MakeWord(0x47333A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x47333C, 0x473343);
MakeDword(0x473343);
MakeDword(0x473347);
MakeDword(0x47334B);
MakeDword(0x47334F);
MakeDword(0x473353);
MakeDword(0x473357);
MakeWord(0x47335B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x47335D, 0x473367);
MakeDword(0x473367);
MakeDword(0x47336B);
MakeDword(0x47336F);
MakeDword(0x473373);
MakeDword(0x473377);
MakeDword(0x47337B);
MakeWord(0x47337F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x473381, 0x47338C);
MakeDword(0x47338C);
MakeDword(0x473390);
MakeDword(0x473394);
MakeDword(0x473398);
MakeDword(0x47339C);
MakeDword(0x4733A0);
MakeWord(0x4733A4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4733A6, 0x4733AE);
MakeDword(0x4733AE);
MakeDword(0x4733B2);
MakeDword(0x4733B6);
MakeDword(0x4733BA);
MakeDword(0x4733BE);
MakeDword(0x4733C2);
MakeWord(0x4733C6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4733C8, 0x4733D4);
MakeDword(0x4733D4);
MakeDword(0x4733D8);
MakeDword(0x4733DC);
MakeDword(0x4733E0);
MakeDword(0x4733E4);
MakeDword(0x4733E8);
MakeWord(0x4733EC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4733EE, 0x4733FA);
MakeUnkn(0x4733FC, 1);
MakeNameEx(0x4733FC, "RTTI_4733FC_Enumeration_TProgressBarOrientation", 0);
MakeDword(0x4733FC);
MakeUnkn(0x473400, 1);
MakeNameEx(0x473400, "", 0);
MakeByte(0x473400);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x473401, 0x473419);
MakeByte(0x473419);
MakeDword(0x47341A);
MakeDword(0x47341E);
MakeDword(0x473422);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x473426, 0x473433);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x473433, 0x47343E);
MakeUnkn(0x473448, 1);
MakeNameEx(0x473448, "VMT_473448_TProgressBar", 0);
MakeDword(0x473448);
MakeDword(0x47344C);
MakeDword(0x473450);
MakeDword(0x473454);
MakeDword(0x473458);
MakeDword(0x47345C);
MakeDword(0x473460);
MakeDword(0x473464);
MakeDword(0x473468);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x47356C, 0x473579);
MakeDword(0x47346C);
MakeDword(0x473470);
MakeDword(0x473474);
MakeDword(0x473478);
MakeDword(0x47347C);
MakeDword(0x473480);
MakeDword(0x473484);
MakeDword(0x473488);
MakeDword(0x47348C);
MakeDword(0x473490);
MakeComm(0x473494, "'+0'");
MakeDword(0x473494);
MakeComm(0x473498, "'+4'");
MakeDword(0x473498);
MakeComm(0x47349C, "'+8'");
MakeDword(0x47349C);
MakeComm(0x4734A0, "'+C'");
MakeDword(0x4734A0);
MakeComm(0x4734A4, "'+10'");
MakeDword(0x4734A4);
MakeComm(0x4734A8, "'+14'");
MakeDword(0x4734A8);
MakeComm(0x4734AC, "'+18'");
MakeDword(0x4734AC);
MakeComm(0x4734B0, "'+1C'");
MakeDword(0x4734B0);
MakeComm(0x4734B4, "'+20'");
MakeDword(0x4734B4);
MakeComm(0x4734B8, "'+24'");
MakeDword(0x4734B8);
MakeComm(0x4734BC, "'+28'");
MakeDword(0x4734BC);
MakeComm(0x4734C0, "'+2C'");
MakeDword(0x4734C0);
MakeComm(0x4734C4, "'+30'");
MakeDword(0x4734C4);
MakeComm(0x4734C8, "'+34'");
MakeDword(0x4734C8);
MakeComm(0x4734CC, "'+38'");
MakeDword(0x4734CC);
MakeComm(0x4734D0, "'+3C'");
MakeDword(0x4734D0);
MakeComm(0x4734D4, "'+40'");
MakeDword(0x4734D4);
MakeComm(0x4734D8, "'+44'");
MakeDword(0x4734D8);
MakeComm(0x4734DC, "'+48'");
MakeDword(0x4734DC);
MakeComm(0x4734E0, "'+4C'");
MakeDword(0x4734E0);
MakeComm(0x4734E4, "'+50'");
MakeDword(0x4734E4);
MakeComm(0x4734E8, "'+54'");
MakeDword(0x4734E8);
MakeComm(0x4734EC, "'+58'");
MakeDword(0x4734EC);
MakeComm(0x4734F0, "'+5C'");
MakeDword(0x4734F0);
MakeComm(0x4734F4, "'+60'");
MakeDword(0x4734F4);
MakeComm(0x4734F8, "'+64'");
MakeDword(0x4734F8);
MakeComm(0x4734FC, "'+68'");
MakeDword(0x4734FC);
MakeComm(0x473500, "'+6C'");
MakeDword(0x473500);
MakeComm(0x473504, "'+70'");
MakeDword(0x473504);
MakeComm(0x473508, "'+74'");
MakeDword(0x473508);
MakeComm(0x47350C, "'+78'");
MakeDword(0x47350C);
MakeComm(0x473510, "'+7C'");
MakeDword(0x473510);
MakeComm(0x473514, "'+80'");
MakeDword(0x473514);
MakeComm(0x473518, "'+84'");
MakeDword(0x473518);
MakeComm(0x47351C, "'+88'");
MakeDword(0x47351C);
MakeComm(0x473520, "'+8C'");
MakeDword(0x473520);
MakeComm(0x473524, "'+90'");
MakeDword(0x473524);
MakeComm(0x473528, "'+94'");
MakeDword(0x473528);
MakeComm(0x47352C, "'+98'");
MakeDword(0x47352C);
MakeComm(0x473530, "'+9C'");
MakeDword(0x473530);
MakeComm(0x473534, "'+A0'");
MakeDword(0x473534);
MakeComm(0x473538, "'+A4'");
MakeDword(0x473538);
MakeComm(0x47353C, "'+A8'");
MakeDword(0x47353C);
MakeComm(0x473540, "'+AC'");
MakeDword(0x473540);
MakeComm(0x473544, "'+B0'");
MakeDword(0x473544);
MakeComm(0x473548, "'+B4'");
MakeDword(0x473548);
MakeComm(0x47354C, "'+B8'");
MakeDword(0x47354C);
MakeComm(0x473550, "'+BC'");
MakeDword(0x473550);
MakeComm(0x473554, "'+C0'");
MakeDword(0x473554);
MakeComm(0x473558, "'+C4'");
MakeDword(0x473558);
MakeComm(0x47355C, "'+C8'");
MakeDword(0x47355C);
MakeComm(0x473560, "'+CC'");
MakeDword(0x473560);
MakeComm(0x473564, "'+D0'");
MakeDword(0x473564);
MakeComm(0x473568, "'+D4'");
MakeDword(0x473568);
MakeUnkn(0x47357C, 1);
MakeNameEx(0x47357C, "RTTI_47357C_Class_TProgressBar", 0);
MakeDword(0x47357C);
MakeUnkn(0x473580, 1);
MakeNameEx(0x473580, "", 0);
MakeByte(0x473580);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x473581, 0x47358E);
MakeDword(0x47358E);
MakeDword(0x473592);
MakeWord(0x473596);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x473598, 0x4735A1);
MakeWord(0x4735A1);
MakeDword(0x4735A3);
MakeDword(0x4735A7);
MakeDword(0x4735AB);
MakeDword(0x4735AF);
MakeDword(0x4735B3);
MakeDword(0x4735B7);
MakeWord(0x4735BB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4735BD, 0x4735C3);
MakeDword(0x4735C3);
MakeDword(0x4735C7);
MakeDword(0x4735CB);
MakeDword(0x4735CF);
MakeDword(0x4735D3);
MakeDword(0x4735D7);
MakeWord(0x4735DB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4735DD, 0x4735E5);
MakeDword(0x4735E5);
MakeDword(0x4735E9);
MakeDword(0x4735ED);
MakeDword(0x4735F1);
MakeDword(0x4735F5);
MakeDword(0x4735F9);
MakeWord(0x4735FD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4735FF, 0x47360B);
MakeDword(0x47360B);
MakeDword(0x47360F);
MakeDword(0x473613);
MakeDword(0x473617);
MakeDword(0x47361B);
MakeDword(0x47361F);
MakeWord(0x473623);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x473625, 0x473630);
MakeDword(0x473630);
MakeDword(0x473634);
MakeDword(0x473638);
MakeDword(0x47363C);
MakeDword(0x473640);
MakeDword(0x473644);
MakeWord(0x473648);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x47364A, 0x473653);
MakeDword(0x473653);
MakeDword(0x473657);
MakeDword(0x47365B);
MakeDword(0x47365F);
MakeDword(0x473663);
MakeDword(0x473667);
MakeWord(0x47366B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x47366D, 0x473676);
MakeDword(0x473676);
MakeDword(0x47367A);
MakeDword(0x47367E);
MakeDword(0x473682);
MakeDword(0x473686);
MakeDword(0x47368A);
MakeWord(0x47368E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x473690, 0x473698);
MakeDword(0x473698);
MakeDword(0x47369C);
MakeDword(0x4736A0);
MakeDword(0x4736A4);
MakeDword(0x4736A8);
MakeDword(0x4736AC);
MakeWord(0x4736B0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4736B2, 0x4736B7);
MakeDword(0x4736B7);
MakeDword(0x4736BB);
MakeDword(0x4736BF);
MakeDword(0x4736C3);
MakeDword(0x4736C7);
MakeDword(0x4736CB);
MakeWord(0x4736CF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4736D1, 0x4736DD);
MakeDword(0x4736DD);
MakeDword(0x4736E1);
MakeDword(0x4736E5);
MakeDword(0x4736E9);
MakeDword(0x4736ED);
MakeDword(0x4736F1);
MakeWord(0x4736F5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4736F7, 0x4736FB);
MakeDword(0x4736FB);
MakeDword(0x4736FF);
MakeDword(0x473703);
MakeDword(0x473707);
MakeDword(0x47370B);
MakeDword(0x47370F);
MakeWord(0x473713);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x473715, 0x473719);
MakeDword(0x473719);
MakeDword(0x47371D);
MakeDword(0x473721);
MakeDword(0x473725);
MakeDword(0x473729);
MakeDword(0x47372D);
MakeWord(0x473731);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x473733, 0x47373F);
MakeDword(0x47373F);
MakeDword(0x473743);
MakeDword(0x473747);
MakeDword(0x47374B);
MakeDword(0x47374F);
MakeDword(0x473753);
MakeWord(0x473757);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x473759, 0x473768);
MakeDword(0x473768);
MakeDword(0x47376C);
MakeDword(0x473770);
MakeDword(0x473774);
MakeDword(0x473778);
MakeDword(0x47377C);
MakeWord(0x473780);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x473782, 0x47378C);
MakeDword(0x47378C);
MakeDword(0x473790);
MakeDword(0x473794);
MakeDword(0x473798);
MakeDword(0x47379C);
MakeDword(0x4737A0);
MakeWord(0x4737A4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4737A6, 0x4737AF);
MakeDword(0x4737AF);
MakeDword(0x4737B3);
MakeDword(0x4737B7);
MakeDword(0x4737BB);
MakeDword(0x4737BF);
MakeDword(0x4737C3);
MakeWord(0x4737C7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4737C9, 0x4737D0);
MakeDword(0x4737D0);
MakeDword(0x4737D4);
MakeDword(0x4737D8);
MakeDword(0x4737DC);
MakeDword(0x4737E0);
MakeDword(0x4737E4);
MakeWord(0x4737E8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4737EA, 0x4737EF);
MakeDword(0x4737EF);
MakeDword(0x4737F3);
MakeDword(0x4737F7);
MakeDword(0x4737FB);
MakeDword(0x4737FF);
MakeDword(0x473803);
MakeWord(0x473807);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x473809, 0x473812);
MakeDword(0x473812);
MakeDword(0x473816);
MakeDword(0x47381A);
MakeDword(0x47381E);
MakeDword(0x473822);
MakeDword(0x473826);
MakeWord(0x47382A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x47382C, 0x473835);
MakeDword(0x473835);
MakeDword(0x473839);
MakeDword(0x47383D);
MakeDword(0x473841);
MakeDword(0x473845);
MakeDword(0x473849);
MakeWord(0x47384D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x47384F, 0x473857);
MakeDword(0x473857);
MakeDword(0x47385B);
MakeDword(0x47385F);
MakeDword(0x473863);
MakeDword(0x473867);
MakeDword(0x47386B);
MakeWord(0x47386F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x473871, 0x473879);
MakeDword(0x473879);
MakeDword(0x47387D);
MakeDword(0x473881);
MakeDword(0x473885);
MakeDword(0x473889);
MakeDword(0x47388D);
MakeWord(0x473891);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x473893, 0x4738A2);
MakeDword(0x4738A2);
MakeDword(0x4738A6);
MakeDword(0x4738AA);
MakeDword(0x4738AE);
MakeDword(0x4738B2);
MakeDword(0x4738B6);
MakeWord(0x4738BA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4738BC, 0x4738C7);
MakeDword(0x4738C7);
MakeDword(0x4738CB);
MakeDword(0x4738CF);
MakeDword(0x4738D3);
MakeDword(0x4738D7);
MakeDword(0x4738DB);
MakeWord(0x4738DF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4738E1, 0x4738EC);
MakeDword(0x4738EC);
MakeDword(0x4738F0);
MakeDword(0x4738F4);
MakeDword(0x4738F8);
MakeDword(0x4738FC);
MakeDword(0x473900);
MakeWord(0x473904);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x473906, 0x473910);
MakeDword(0x473910);
MakeDword(0x473914);
MakeDword(0x473918);
MakeDword(0x47391C);
MakeDword(0x473920);
MakeDword(0x473924);
MakeWord(0x473928);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x47392A, 0x473934);
MakeDword(0x473934);
MakeDword(0x473938);
MakeDword(0x47393C);
MakeDword(0x473940);
MakeDword(0x473944);
MakeDword(0x473948);
MakeWord(0x47394C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x47394E, 0x473956);
MakeDword(0x473956);
MakeDword(0x47395A);
MakeDword(0x47395E);
MakeDword(0x473962);
MakeDword(0x473966);
MakeDword(0x47396A);
MakeWord(0x47396E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x473970, 0x473977);
MakeDword(0x473977);
MakeDword(0x47397B);
MakeDword(0x47397F);
MakeDword(0x473983);
MakeDword(0x473987);
MakeDword(0x47398B);
MakeWord(0x47398F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x473991, 0x4739A1);
MakeDword(0x4739A1);
MakeDword(0x4739A5);
MakeDword(0x4739A9);
MakeDword(0x4739AD);
MakeDword(0x4739B1);
MakeDword(0x4739B5);
MakeWord(0x4739B9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4739BB, 0x4739C7);
MakeDword(0x4739C7);
MakeDword(0x4739CB);
MakeDword(0x4739CF);
MakeDword(0x4739D3);
MakeDword(0x4739D7);
MakeDword(0x4739DB);
MakeWord(0x4739DF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4739E1, 0x4739EE);
MakeDword(0x4739EE);
MakeDword(0x4739F2);
MakeDword(0x4739F6);
MakeDword(0x4739FA);
MakeDword(0x4739FE);
MakeDword(0x473A02);
MakeWord(0x473A06);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x473A08, 0x473A15);
MakeDword(0x473A15);
MakeDword(0x473A19);
MakeDword(0x473A1D);
MakeDword(0x473A21);
MakeDword(0x473A25);
MakeDword(0x473A29);
MakeWord(0x473A2D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x473A2F, 0x473A3B);
MakeDword(0x473A3B);
MakeDword(0x473A3F);
MakeDword(0x473A43);
MakeDword(0x473A47);
MakeDword(0x473A4B);
MakeDword(0x473A4F);
MakeWord(0x473A53);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x473A55, 0x473A5F);
MakeDword(0x473A5F);
MakeDword(0x473A63);
MakeDword(0x473A67);
MakeDword(0x473A6B);
MakeDword(0x473A6F);
MakeDword(0x473A73);
MakeWord(0x473A77);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x473A79, 0x473A85);
MakeDword(0x473A85);
MakeDword(0x473A89);
MakeDword(0x473A8D);
MakeDword(0x473A91);
MakeDword(0x473A95);
MakeDword(0x473A99);
MakeWord(0x473A9D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x473A9F, 0x473AAB);
MakeUnkn(0x473AAC, 1);
MakeNameEx(0x473AAC, "VMT_473AAC_TConversion", 0);
MakeDword(0x473AAC);
MakeDword(0x473AB0);
MakeDword(0x473AB4);
MakeDword(0x473AB8);
MakeDword(0x473ABC);
MakeDword(0x473AC0);
MakeDword(0x473AC4);
MakeDword(0x473AC8);
MakeDword(0x473ACC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x473B00, 0x473B0C);
MakeDword(0x473AD0);
MakeDword(0x473AD4);
MakeDword(0x473AD8);
MakeDword(0x473ADC);
MakeDword(0x473AE0);
MakeDword(0x473AE4);
MakeDword(0x473AE8);
MakeDword(0x473AEC);
MakeDword(0x473AF0);
MakeDword(0x473AF4);
MakeComm(0x473AF8, "'+0'");
MakeDword(0x473AF8);
MakeComm(0x473AFC, "'+4'");
MakeDword(0x473AFC);
MakeUnkn(0x473B0C, 1);
MakeNameEx(0x473B0C, "RTTI_473B0C_Record_TConversionFormat", 0);
MakeDword(0x473B0C);
MakeUnkn(0x473B10, 1);
MakeNameEx(0x473B10, "", 0);
MakeByte(0x473B10);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x473B11, 0x473B23);
MakeDword(0x473B23);
MakeDword(0x473B27);
MakeDword(0x473B2B);
MakeDword(0x473B2F);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x473B3C, -1);
MakeDword(0x473B38);
MakeDword(0x473B34);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x473B48, -1);
MakeDword(0x473B44);
MakeDword(0x473B40);
MakeUnkn(0x473B4C, 1);
MakeNameEx(0x473B4C, "InitCommonControl", 0x20);
MakeComm(0x473B4C, "'function InitCommonControl(CC:Integer):Boolean;'");
MakeCode(0x473B4C);
MakeCode(0x473B71);
MakeFunction(0x473B4C, 0x473B77);
MakeUnkn(0x473B78, 1);
MakeNameEx(0x473B78, "SetComCtlStyle", 0x20);
MakeComm(0x473B78, "'procedure SetComCtlStyle(Ctl:TWinControl; Value:Integer; UseStyle:Boolean);'");
MakeCode(0x473B78);
MakeCode(0x473BA8);
MakeCode(0x473BAA);
MakeCode(0x473BBA);
MakeFunction(0x473B78, 0x473BBF);
MakeUnkn(0x473BC0, 1);
MakeNameEx(0x473BC0, "VMT_473BC0_TTabStrings", 0);
MakeDword(0x473BC0);
MakeDword(0x473BC4);
MakeDword(0x473BC8);
MakeDword(0x473BCC);
MakeDword(0x473BD0);
MakeDword(0x473BD4);
MakeDword(0x473BD8);
MakeDword(0x473BDC);
MakeDword(0x473BE0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x473C8C, 0x473C98);
MakeDword(0x473BE4);
MakeDword(0x473BE8);
MakeDword(0x473BEC);
MakeDword(0x473BF0);
MakeDword(0x473BF4);
MakeDword(0x473BF8);
MakeDword(0x473BFC);
MakeDword(0x473C00);
MakeDword(0x473C04);
MakeDword(0x473C08);
MakeComm(0x473C0C, "'+0'");
MakeDword(0x473C0C);
MakeComm(0x473C10, "'+4'");
MakeDword(0x473C10);
MakeComm(0x473C14, "'+8'");
MakeDword(0x473C14);
MakeComm(0x473C18, "'+C'");
MakeDword(0x473C18);
MakeComm(0x473C1C, "'+10'");
MakeDword(0x473C1C);
MakeComm(0x473C20, "'+14'");
MakeDword(0x473C20);
MakeComm(0x473C24, "'+18'");
MakeDword(0x473C24);
MakeComm(0x473C28, "'+1C'");
MakeDword(0x473C28);
MakeComm(0x473C2C, "'+20'");
MakeDword(0x473C2C);
MakeComm(0x473C30, "'+24'");
MakeDword(0x473C30);
MakeComm(0x473C34, "'+28'");
MakeDword(0x473C34);
MakeComm(0x473C38, "'+2C'");
MakeDword(0x473C38);
MakeComm(0x473C3C, "'+30'");
MakeDword(0x473C3C);
MakeComm(0x473C40, "'+34'");
MakeDword(0x473C40);
MakeComm(0x473C44, "'+38'");
MakeDword(0x473C44);
MakeComm(0x473C48, "'+3C'");
MakeDword(0x473C48);
MakeComm(0x473C4C, "'+40'");
MakeDword(0x473C4C);
MakeComm(0x473C50, "'+44'");
MakeDword(0x473C50);
MakeComm(0x473C54, "'+48'");
MakeDword(0x473C54);
MakeComm(0x473C58, "'+4C'");
MakeDword(0x473C58);
MakeComm(0x473C5C, "'+50'");
MakeDword(0x473C5C);
MakeComm(0x473C60, "'+54'");
MakeDword(0x473C60);
MakeComm(0x473C64, "'+58'");
MakeDword(0x473C64);
MakeComm(0x473C68, "'+5C'");
MakeDword(0x473C68);
MakeComm(0x473C6C, "'+60'");
MakeDword(0x473C6C);
MakeComm(0x473C70, "'+64'");
MakeDword(0x473C70);
MakeComm(0x473C74, "'+68'");
MakeDword(0x473C74);
MakeComm(0x473C78, "'+6C'");
MakeDword(0x473C78);
MakeComm(0x473C7C, "'+70'");
MakeDword(0x473C7C);
MakeComm(0x473C80, "'+74'");
MakeDword(0x473C80);
MakeComm(0x473C84, "'+78'");
MakeDword(0x473C84);
MakeComm(0x473C88, "'+7C'");
MakeDword(0x473C88);
MakeUnkn(0x473C98, 1);
MakeNameEx(0x473C98, "RTTI_473C98_Class_TTabStrings", 0);
MakeDword(0x473C98);
MakeUnkn(0x473C9C, 1);
MakeNameEx(0x473C9C, "", 0);
MakeByte(0x473C9C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x473C9D, 0x473CA9);
MakeDword(0x473CA9);
MakeDword(0x473CAD);
MakeWord(0x473CB1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x473CB3, 0x473CBC);
MakeWord(0x473CBC);
MakeUnkn(0x473CC0, 1);
MakeNameEx(0x473CC0, "TabControlError", 0x20);
MakeComm(0x473CC0, "'procedure TabControlError(const S:AnsiString);'");
MakeCode(0x473CC0);
MakeFunction(0x473CC0, 0x473CD8);
MakeUnkn(0x473CD8, 1);
MakeNameEx(0x473CD8, "TTabStrings.Clear", 0x20);
MakeComm(0x473CD8, "'procedure TTabStrings.Clear;'");
MakeCode(0x473CD8);
MakeCode(0x473D1E);
MakeCode(0x473D26);
MakeCode(0x473D33);
MakeCode(0x473D3C);
MakeCode(0x473D41);
MakeFunction(0x473CD8, 0x473D47);
MakeUnkn(0x473D48, 1);
MakeNameEx(0x473D48, "TTabStrings.Delete", 0x20);
MakeComm(0x473D48, "'procedure TTabStrings.Delete(Index:Integer);'");
MakeCode(0x473D48);
MakeCode(0x473DB1);
MakeCode(0x473DB9);
MakeCode(0x473DC6);
MakeCode(0x473DD4);
MakeCode(0x473DD9);
MakeFunction(0x473D48, 0x473DE1);
MakeUnkn(0x473DE4, 1);
MakeNameEx(0x473DE4, "TTabStrings.Get", 0x20);
MakeComm(0x473DE4, "'function TTabStrings.Get(Index:Integer):AnsiString;'");
MakeCode(0x473DE4);
MakeCode(0x473E9C);
MakeCode(0x473EAE);
MakeCode(0x473EBB);
MakeCode(0x473ECC);
MakeCode(0x473ED1);
MakeFunction(0x473DE4, 0x473EDA);
MakeUnkn(0x473EDC, 1);
MakeNameEx(0x473EDC, "TTabStrings.GetCount", 0x20);
MakeComm(0x473EDC, "'function TTabStrings.GetCount:Integer;'");
MakeCode(0x473EDC);
MakeFunction(0x473EDC, 0x473EF8);
MakeUnkn(0x473EF8, 1);
MakeNameEx(0x473EF8, "TTabStrings.GetObject", 0x20);
MakeComm(0x473EF8, "'function TTabStrings.GetObject(Index:Integer):TObject;'");
MakeCode(0x473EF8);
MakeCode(0x473F6A);
MakeCode(0x473F6D);
MakeCode(0x473F7A);
MakeCode(0x473F88);
MakeCode(0x473F8D);
MakeFunction(0x473EF8, 0x473F97);
MakeUnkn(0x473F98, 1);
MakeNameEx(0x473F98, "TTabStrings.Put", 0x20);
MakeComm(0x473F98, "'procedure TTabStrings.Put(Index:Integer; const S:AnsiString);'");
MakeCode(0x473F98);
MakeCode(0x474047);
MakeCode(0x47404F);
MakeCode(0x47405C);
MakeCode(0x47406A);
MakeCode(0x47406F);
MakeFunction(0x473F98, 0x474078);
MakeUnkn(0x474078, 1);
MakeNameEx(0x474078, "TTabStrings.PutObject", 0x20);
MakeComm(0x474078, "'procedure TTabStrings.PutObject(Index:Integer; AObject:TObject);'");
MakeCode(0x474078);
MakeCode(0x4740ED);
MakeCode(0x4740FA);
MakeCode(0x474108);
MakeCode(0x47410D);
MakeFunction(0x474078, 0x474115);
MakeUnkn(0x474118, 1);
MakeNameEx(0x474118, "TTabStrings.Insert", 0x20);
MakeComm(0x474118, "'procedure TTabStrings.Insert(Index:Integer; const S:AnsiString);'");
MakeCode(0x474118);
MakeCode(0x4741C7);
MakeCode(0x4741CF);
MakeCode(0x4741DC);
MakeCode(0x4741EA);
MakeCode(0x4741EF);
MakeFunction(0x474118, 0x4741F8);
MakeUnkn(0x4741F8, 1);
MakeNameEx(0x4741F8, "TTabStrings.SetUpdateState", 0x20);
MakeComm(0x4741F8, "'procedure TTabStrings.SetUpdateState(Updating:Boolean);'");
MakeCode(0x4741F8);
MakeCode(0x47423B);
MakeFunction(0x4741F8, 0x47423F);
MakeUnkn(0x474240, 1);
MakeNameEx(0x474240, "TCustomTabControl.Create", 0x20);
MakeComm(0x474240, "'constructor TCustomTabControl.Create(AOwner:TComponent);'");
MakeCode(0x474240);
MakeCode(0x474252);
MakeCode(0x4742F2);
MakeFunction(0x474240, 0x4742F9);
MakeUnkn(0x474300, 1);
MakeNameEx(0x474300, "TCustomTabControl.Destroy", 0x20);
MakeComm(0x474300, "'destructor TCustomTabControl.Destroy;'");
MakeCode(0x474300);
MakeCode(0x47434E);
MakeFunction(0x474300, 0x474351);
MakeUnkn(0x474354, 1);
MakeNameEx(0x474354, "TCustomTabControl.CanChange", 0x20);
MakeComm(0x474354, "'procedure TCustomTabControl.CanChange;'");
MakeCode(0x474354);
MakeCode(0x474376);
MakeFunction(0x474354, 0x47437D);
MakeCode(0x474380);
MakeFunction(0x474380, 0x474383);
MakeUnkn(0x474384, 1);
MakeNameEx(0x474384, "TAnimate.DoClose", 0x20);
MakeComm(0x474384, "'procedure TAnimate.DoClose;'");
MakeCode(0x474384);
MakeCode(0x47439F);
MakeFunction(0x474384, 0x4743A1);
MakeUnkn(0x4743A4, 1);
MakeNameEx(0x4743A4, "TCustomTabControl.CreateParams", 0x20);
MakeComm(0x4743A4, "'procedure TCustomTabControl.CreateParams(var Params:TCreateParams);'");
MakeCode(0x4743A4);
MakeCode(0x474427);
MakeCode(0x474437);
MakeCode(0x474444);
MakeCode(0x47445A);
MakeCode(0x47446B);
MakeCode(0x47447E);
MakeCode(0x47448B);
MakeFunction(0x4743A4, 0x47449B);
MakeUnkn(0x4744AC, 1);
MakeNameEx(0x4744AC, "TCustomTabControl.CreateWnd", 0x20);
MakeComm(0x4744AC, "'procedure TCustomTabControl.CreateWnd;'");
MakeCode(0x4744AC);
MakeCode(0x4744E6);
MakeCode(0x4744F6);
MakeCode(0x474530);
MakeFunction(0x4744AC, 0x474533);
MakeUnkn(0x474534, 1);
MakeNameEx(0x474534, "TCustomTabControl.DrawTab", 0x20);
MakeComm(0x474534, "'procedure TCustomTabControl.DrawTab(TabIndex:Integer; const Rect:TRect; Active:Boolean);'");
MakeCode(0x474534);
MakeCode(0x47455C);
MakeCode(0x474569);
MakeFunction(0x474534, 0x47456E);
MakeUnkn(0x474570, 1);
MakeNameEx(0x474570, "TCustomTabControl.GetDisplayRect", 0x20);
MakeComm(0x474570, "'function TCustomTabControl.GetDisplayRect:TRect;'");
MakeCode(0x474570);
MakeCode(0x4745A1);
MakeFunction(0x474570, 0x4745A4);
MakeUnkn(0x4745A4, 1);
MakeNameEx(0x4745A4, "TCustomTabControl.GetImageIndex", 0x20);
MakeComm(0x4745A4, "'function TCustomTabControl.GetImageIndex(TabIndex:Integer):Integer;'");
MakeCode(0x4745A4);
MakeCode(0x4745C6);
MakeFunction(0x4745A4, 0x4745CC);
MakeUnkn(0x4745CC, 1);
MakeNameEx(0x4745CC, "TCustomTabControl.GetTabIndex", 0x20);
MakeComm(0x4745CC, "'function TCustomTabControl.GetTabIndex:Integer;'");
MakeCode(0x4745CC);
MakeFunction(0x4745CC, 0x4745E7);
MakeUnkn(0x4745E8, 1);
MakeNameEx(0x4745E8, "TCustomTabControl.Loaded", 0x20);
MakeComm(0x4745E8, "'procedure TCustomTabControl.Loaded;'");
MakeCode(0x4745E8);
MakeCode(0x474602);
MakeFunction(0x4745E8, 0x474604);
MakeUnkn(0x474604, 1);
MakeNameEx(0x474604, "TCustomTabControl.SetHotTrack", 0x20);
MakeComm(0x474604, "'procedure TCustomTabControl.SetHotTrack(Value:Boolean);'");
MakeCode(0x474604);
MakeFunction(0x474604, 0x474618);
MakeUnkn(0x474618, 1);
MakeNameEx(0x474618, "TCustomTabControl.Notification", 0x20);
MakeComm(0x474618, "'procedure TCustomTabControl.Notification(AComponent:TComponent; Operation:TOperation);'");
MakeCode(0x474618);
MakeCode(0x474642);
MakeFunction(0x474618, 0x474646);
MakeUnkn(0x474648, 1);
MakeNameEx(0x474648, "TCustomTabControl.SetImages", 0x20);
MakeComm(0x474648, "'procedure TCustomTabControl.SetImages(Value:TCustomImageList);'");
MakeCode(0x474648);
MakeCode(0x474663);
MakeCode(0x4746A4);
MakeFunction(0x474648, 0x4746B7);
MakeUnkn(0x4746B8, 1);
MakeNameEx(0x4746B8, "TCustomTabControl.ImageListChange", 0x20);
MakeComm(0x4746B8, "'procedure TCustomTabControl.ImageListChange(Sender:TObject);'");
MakeCode(0x4746B8);
MakeFunction(0x4746B8, 0x4746D7);
MakeUnkn(0x4746D8, 1);
MakeNameEx(0x4746D8, "TCustomTabControl.InternalSetMultiLine", 0x20);
MakeComm(0x4746D8, "'function TCustomTabControl.InternalSetMultiLine(Value:Boolean):Boolean;'");
MakeCode(0x4746D8);
MakeCode(0x47471A);
MakeCode(0x47472F);
MakeCode(0x474740);
MakeCode(0x47474D);
MakeCode(0x474756);
MakeCode(0x47475B);
MakeFunction(0x4746D8, 0x474767);
MakeUnkn(0x474768, 1);
MakeNameEx(0x474768, "TCustomTabControl.SetMultiLine", 0x20);
MakeComm(0x474768, "'procedure TCustomTabControl.SetMultiLine(Value:Boolean);'");
MakeCode(0x474768);
MakeCode(0x474782);
MakeFunction(0x474768, 0x474785);
MakeUnkn(0x474788, 1);
MakeNameEx(0x474788, "TCustomTabControl.SetOwnerDraw", 0x20);
MakeComm(0x474788, "'procedure TCustomTabControl.SetOwnerDraw(Value:Boolean);'");
MakeCode(0x474788);
MakeFunction(0x474788, 0x47479C);
MakeUnkn(0x47479C, 1);
MakeNameEx(0x47479C, "TCustomTabControl.SetRaggedRight", 0x20);
MakeComm(0x47479C, "'procedure TCustomTabControl.SetRaggedRight(Value:Boolean);'");
MakeCode(0x47479C);
MakeFunction(0x47479C, 0x4747B7);
MakeUnkn(0x4747B8, 1);
MakeNameEx(0x4747B8, "TCustomTabControl.SetScrollOpposite", 0x20);
MakeComm(0x4747B8, "'procedure TCustomTabControl.SetScrollOpposite(Value:Boolean);'");
MakeCode(0x4747B8);
MakeCode(0x4747D0);
MakeFunction(0x4747B8, 0x4747D6);
MakeUnkn(0x4747D8, 1);
MakeNameEx(0x4747D8, "TCustomTabControl.SetStyle", 0x20);
MakeComm(0x4747D8, "'procedure TCustomTabControl.SetStyle(Value:TTabStyle);'");
MakeCode(0x4747D8);
MakeCode(0x474827);
MakeCode(0x474843);
MakeCode(0x474850);
MakeCode(0x474859);
MakeCode(0x47485E);
MakeFunction(0x4747D8, 0x474865);
MakeUnkn(0x474868, 1);
MakeNameEx(0x474868, "TCustomTabControl.SetTabHeight", 0x20);
MakeComm(0x474868, "'procedure TCustomTabControl.SetTabHeight(Value:Smallint);'");
MakeCode(0x474868);
MakeCode(0x4748DF);
MakeCode(0x4748ED);
MakeCode(0x4748FA);
MakeCode(0x474906);
MakeCode(0x47490B);
MakeFunction(0x474868, 0x474912);
MakeUnkn(0x474914, 1);
MakeNameEx(0x474914, "TCustomTabControl.SetTabIndex", 0x20);
MakeComm(0x474914, "'procedure TCustomTabControl.SetTabIndex(Value:Integer);'");
MakeCode(0x474914);
MakeCode(0x474935);
MakeFunction(0x474914, 0x474938);
MakeUnkn(0x474938, 1);
MakeNameEx(0x474938, "TCustomTabControl.SetTabPosition", 0x20);
MakeComm(0x474938, "'procedure TCustomTabControl.SetTabPosition(Value:TTabPosition);'");
MakeCode(0x474938);
MakeCode(0x474984);
MakeCode(0x47499D);
MakeCode(0x4749A6);
MakeCode(0x4749AD);
MakeCode(0x4749BA);
MakeCode(0x4749C3);
MakeCode(0x4749C8);
MakeFunction(0x474938, 0x4749CE);
MakeUnkn(0x4749D0, 1);
MakeNameEx(0x4749D0, "TCustomTabControl.SetTabWidth", 0x20);
MakeComm(0x4749D0, "'procedure TCustomTabControl.SetTabWidth(Value:Smallint);'");
MakeCode(0x4749D0);
MakeCode(0x474A47);
MakeCode(0x474A5F);
MakeCode(0x474A68);
MakeCode(0x474A6F);
MakeCode(0x474A7C);
MakeCode(0x474A88);
MakeCode(0x474A8D);
MakeFunction(0x4749D0, 0x474A94);
MakeUnkn(0x474A94, 1);
MakeNameEx(0x474A94, "TCustomTabControl.TabsChanged", 0x20);
MakeComm(0x474A94, "'procedure TCustomTabControl.TabsChanged;'");
MakeCode(0x474A94);
MakeCode(0x474ACA);
MakeCode(0x474AD1);
MakeFunction(0x474A94, 0x474AD3);
MakeUnkn(0x474AD4, 1);
MakeNameEx(0x474AD4, "TCustomTabControl.UpdateTabSize", 0x20);
MakeComm(0x474AD4, "'procedure TCustomTabControl.UpdateTabSize;'");
MakeCode(0x474AD4);
MakeFunction(0x474AD4, 0x474AFB);
MakeUnkn(0x474AFC, 1);
MakeNameEx(0x474AFC, "TCustomTabControl.UpdateTabImages", 0x20);
MakeComm(0x474AFC, "'procedure TCustomTabControl.UpdateTabImages;'");
MakeCode(0x474AFC);
MakeCode(0x474B41);
MakeCode(0x474BB7);
MakeCode(0x474BBD);
MakeCode(0x474BC4);
MakeCode(0x474BD1);
MakeCode(0x474BE7);
MakeCode(0x474BEC);
MakeFunction(0x474AFC, 0x474BF5);
MakeUnkn(0x474BF8, 1);
MakeNameEx(0x474BF8, "TCustomTabControl.CNDrawItem", 0x20);
MakeComm(0x474BF8, "'procedure TCustomTabControl.CNDrawItem(var Message:TWMDrawItem);'");
MakeCode(0x474BF8);
MakeCode(0x474C9A);
MakeCode(0x474CA7);
MakeCode(0x474CD6);
MakeCode(0x474CDB);
MakeFunction(0x474BF8, 0x474CEC);
MakeUnkn(0x474CEC, 1);
MakeNameEx(0x474CEC, "TCustomTabControl.WMDestroy", 0x20);
MakeComm(0x474CEC, "'procedure TCustomTabControl.WMDestroy(var Message:TWMDestroy);'");
MakeCode(0x474CEC);
MakeCode(0x474D36);
MakeCode(0x474D5E);
MakeCode(0x474D65);
MakeFunction(0x474CEC, 0x474D7A);
MakeUnkn(0x474D7C, 1);
MakeNameEx(0x474D7C, "TCoolBar.WMNotifyFormat", 0x20);
MakeComm(0x474D7C, "'procedure TCoolBar.WMNotifyFormat(var Message:TMessage);'");
MakeCode(0x474D7C);
MakeFunction(0x474D7C, 0x474DA0);
MakeUnkn(0x474DA0, 1);
MakeNameEx(0x474DA0, "TCustomTabControl.WMSize", 0x20);
MakeComm(0x474DA0, "'procedure TCustomTabControl.WMSize(var Message:TMessage);'");
MakeCode(0x474DA0);
MakeFunction(0x474DA0, 0x474DBF);
MakeUnkn(0x474DC0, 1);
MakeNameEx(0x474DC0, "TCustomTabControl.CMFontChanged", 0x20);
MakeComm(0x474DC0, "'procedure TCustomTabControl.CMFontChanged(var Message:void );'");
MakeCode(0x474DC0);
MakeCode(0x474DE5);
MakeFunction(0x474DC0, 0x474DE7);
MakeUnkn(0x474DE8, 1);
MakeNameEx(0x474DE8, "TCoolBar.CMSysColorChange", 0x20);
MakeComm(0x474DE8, "'procedure TCoolBar.CMSysColorChange(var Message:TMessage);'");
MakeCode(0x474DE8);
MakeCode(0x474E0C);
MakeFunction(0x474DE8, 0x474E0F);
MakeUnkn(0x474E10, 1);
MakeNameEx(0x474E10, "TCustomTabControl.CMTabStopChanged", 0x20);
MakeComm(0x474E10, "'procedure TCustomTabControl.CMTabStopChanged(var Message:TMessage);'");
MakeCode(0x474E10);
MakeFunction(0x474E10, 0x474E1C);
MakeUnkn(0x474E1C, 1);
MakeNameEx(0x474E1C, "TCustomTabControl.CNNotify", 0x20);
MakeComm(0x474E1C, "'procedure TCustomTabControl.CNNotify(var Message:TWMNotify);'");
MakeCode(0x474E1C);
MakeCode(0x474E40);
MakeCode(0x474E5B);
MakeFunction(0x474E1C, 0x474E5F);
MakeUnkn(0x474E60, 1);
MakeNameEx(0x474E60, "TCustomTabControl.CMDialogChar", 0x20);
MakeComm(0x474E60, "'procedure TCustomTabControl.CMDialogChar(var Message:TCMDialogChar);'");
MakeCode(0x474E60);
MakeCode(0x474E9B);
MakeCode(0x474F0F);
MakeCode(0x474F15);
MakeCode(0x474F1F);
MakeCode(0x474F2C);
MakeCode(0x474F35);
MakeCode(0x474F3A);
MakeFunction(0x474E60, 0x474F43);
MakeUnkn(0x474F44, 1);
MakeNameEx(0x474F44, "TCustomTabControl.AdjustClientRect", 0x20);
MakeComm(0x474F44, "'procedure TCustomTabControl.AdjustClientRect(var Rect:TRect);'");
MakeCode(0x474F44);
MakeFunction(0x474F44, 0x474F73);
MakeUnkn(0x474F74, 1);
MakeNameEx(0x474F74, "TCustomTabControl.TCMAdjustRect", 0x20);
MakeComm(0x474F74, "'procedure TCustomTabControl.TCMAdjustRect(var Message:TMessage);'");
MakeCode(0x474F74);
MakeCode(0x474FC6);
MakeCode(0x474FD0);
MakeCode(0x474FEF);
MakeFunction(0x474F74, 0x474FF6);
MakeUnkn(0x474FF8, 1);
MakeNameEx(0x474FF8, "TCustomTabControl.GetTabs", 0x20);
MakeComm(0x474FF8, "'function TCustomTabControl.GetTabs:TStrings;'");
MakeCode(0x474FF8);
MakeCode(0x475005);
MakeFunction(0x474FF8, 0x47500C);
MakeUnkn(0x47500C, 1);
MakeNameEx(0x47500C, "TTabSheet.Create", 0x20);
MakeComm(0x47500C, "'constructor TTabSheet.Create(AOwner:TComponent);'");
MakeCode(0x47500C);
MakeCode(0x47501A);
MakeCode(0x475068);
MakeFunction(0x47500C, 0x47506D);
MakeUnkn(0x475074, 1);
MakeNameEx(0x475074, "TTabSheet.Destroy", 0x20);
MakeComm(0x475074, "'destructor TTabSheet.Destroy;'");
MakeCode(0x475074);
MakeCode(0x475099);
MakeCode(0x4750A6);
MakeCode(0x4750BD);
MakeFunction(0x475074, 0x4750C0);
MakeUnkn(0x4750C0, 1);
MakeNameEx(0x4750C0, "TTabSheet.DoHide", 0x20);
MakeComm(0x4750C0, "'procedure TTabSheet.DoHide;'");
MakeCode(0x4750C0);
MakeCode(0x4750DB);
MakeFunction(0x4750C0, 0x4750DD);
MakeUnkn(0x4750E0, 1);
MakeNameEx(0x4750E0, "TTabSheet.DoShow", 0x20);
MakeComm(0x4750E0, "'procedure TTabSheet.DoShow;'");
MakeCode(0x4750E0);
MakeCode(0x4750FB);
MakeFunction(0x4750E0, 0x4750FD);
MakeUnkn(0x475100, 1);
MakeNameEx(0x475100, "TTabSheet.GetPageIndex", 0x20);
MakeComm(0x475100, "'function TTabSheet.GetPageIndex:Integer;'");
MakeCode(0x475100);
MakeCode(0x475117);
MakeFunction(0x475100, 0x47511B);
MakeUnkn(0x47511C, 1);
MakeNameEx(0x47511C, "TTabSheet.GetTabIndex", 0x20);
MakeComm(0x47511C, "'function TTabSheet.GetTabIndex:Integer;'");
MakeCode(0x47511C);
MakeCode(0x475130);
MakeCode(0x475141);
MakeCode(0x47515E);
MakeCode(0x475162);
MakeFunction(0x47511C, 0x475169);
MakeUnkn(0x47516C, 1);
MakeNameEx(0x47516C, "TTabSheet.CreateParams", 0x20);
MakeComm(0x47516C, "'procedure TTabSheet.CreateParams(var Params:TCreateParams);'");
MakeCode(0x47516C);
MakeCode(0x475185);
MakeFunction(0x47516C, 0x475187);
MakeUnkn(0x475188, 1);
MakeNameEx(0x475188, "TTabSheet.ReadState", 0x20);
MakeComm(0x475188, "'procedure TTabSheet.ReadState(Reader:TReader);'");
MakeCode(0x475188);
MakeCode(0x4751B5);
MakeFunction(0x475188, 0x4751B9);
MakeUnkn(0x4751BC, 1);
MakeNameEx(0x4751BC, "TTabSheet.SetImageIndex", 0x20);
MakeComm(0x4751BC, "'procedure TTabSheet.SetImageIndex(Value:TImageIndex);'");
MakeCode(0x4751BC);
MakeFunction(0x4751BC, 0x4751E1);
MakeUnkn(0x4751E4, 1);
MakeNameEx(0x4751E4, "TTabSheet.SetPageControl", 0x20);
MakeComm(0x4751E4, "'procedure TTabSheet.SetPageControl(APageControl:TPageControl);'");
MakeCode(0x4751E4);
MakeCode(0x4751FF);
MakeCode(0x475215);
MakeFunction(0x4751E4, 0x475218);
MakeUnkn(0x475218, 1);
MakeNameEx(0x475218, "TTabSheet.SetPageIndex", 0x20);
MakeComm(0x475218, "'procedure TTabSheet.SetPageIndex(Value:Integer);'");
MakeCode(0x475218);
MakeCode(0x475265);
MakeCode(0x4752A4);
MakeFunction(0x475218, 0x4752AB);
MakeUnkn(0x4752AC, 1);
MakeNameEx(0x4752AC, "TTabSheet.SetTabShowing", 0x20);
MakeComm(0x4752AC, "'procedure TTabSheet.SetTabShowing(Value:Boolean);'");
MakeCode(0x4752AC);
MakeCode(0x4752D1);
MakeCode(0x4752EE);
MakeFunction(0x4752AC, 0x4752F0);
MakeUnkn(0x4752F0, 1);
MakeNameEx(0x4752F0, "TTabSheet.SetTabVisible", 0x20);
MakeComm(0x4752F0, "'procedure TTabSheet.SetTabVisible(Value:Boolean);'");
MakeCode(0x4752F0);
MakeFunction(0x4752F0, 0x475304);
MakeUnkn(0x475304, 1);
MakeNameEx(0x475304, "TTabSheet.UpdateControlOriginalParentSize", 0x20);
MakeComm(0x475304, "'procedure TTabSheet.UpdateControlOriginalParentSize(AControl:TControl; var AOriginalParentSize:TPoint);'");
MakeCode(0x475304);
MakeCode(0x47532E);
MakeFunction(0x475304, 0x475331);
MakeUnkn(0x475334, 1);
MakeNameEx(0x475334, "TTabSheet.UpdateTabShowing", 0x20);
MakeComm(0x475334, "'procedure TTabSheet.UpdateTabShowing;'");
MakeCode(0x475334);
MakeCode(0x475346);
MakeCode(0x47534A);
MakeCode(0x47534C);
MakeFunction(0x475334, 0x475352);
MakeUnkn(0x475354, 1);
MakeNameEx(0x475354, "TTabSheet.CMTextChanged", 0x20);
MakeComm(0x475354, "'procedure TTabSheet.CMTextChanged(var Message:TMessage);'");
MakeCode(0x475354);
MakeFunction(0x475354, 0x47536B);
MakeUnkn(0x47536C, 1);
MakeNameEx(0x47536C, "TTabSheet.CMShowingChanged", 0x20);
MakeComm(0x47536C, "'procedure TTabSheet.CMShowingChanged(var Message:TMessage);'");
MakeCode(0x47536C);
MakeCode(0x4753A6);
MakeCode(0x4753B0);
MakeCode(0x4753CB);
MakeCode(0x4753E9);
MakeCode(0x4753F3);
MakeCode(0x47540C);
MakeFunction(0x47536C, 0x475412);
MakeUnkn(0x475414, 1);
MakeNameEx(0x475414, "TTabSheet.SetHighlighted", 0x20);
MakeComm(0x475414, "'procedure TTabSheet.SetHighlighted(Value:Boolean);'");
MakeCode(0x475414);
MakeCode(0x475464);
MakeCode(0x475485);
MakeCode(0x47548B);
MakeCode(0x475498);
MakeCode(0x4754A1);
MakeCode(0x4754A6);
MakeFunction(0x475414, 0x4754AE);
MakeUnkn(0x4754B0, 1);
MakeNameEx(0x4754B0, "TTabSheet.WMNCPaint", 0x20);
MakeComm(0x4754B0, "'procedure TTabSheet.WMNCPaint(var Message:TWMNCPaint);'");
MakeCode(0x4754B0);
MakeCode(0x475586);
MakeCode(0x475593);
MakeCode(0x4755A6);
MakeCode(0x4755AB);
MakeCode(0x4755B7);
MakeCode(0x4755C2);
MakeFunction(0x4754B0, 0x4755C7);
MakeUnkn(0x4755C8, 1);
MakeNameEx(0x4755C8, "TTabSheet.WMPrintClient", 0x20);
MakeComm(0x4755C8, "'procedure TTabSheet.WMPrintClient(var Message:TWMPrintClient);'");
MakeCode(0x4755C8);
MakeCode(0x475603);
MakeCode(0x47560C);
MakeFunction(0x4755C8, 0x475610);
MakeUnkn(0x475610, 1);
MakeNameEx(0x475610, "TPageControl.Create", 0x20);
MakeComm(0x475610, "'constructor TPageControl.Create(AOwner:TComponent);'");
MakeCode(0x475610);
MakeCode(0x47561E);
MakeCode(0x47565A);
MakeFunction(0x475610, 0x47565F);
MakeUnkn(0x475664, 1);
MakeNameEx(0x475664, "TPageControl.Destroy", 0x20);
MakeComm(0x475664, "'destructor TPageControl.Destroy;'");
MakeCode(0x475664);
MakeCode(0x475682);
MakeCode(0x47569B);
MakeCode(0x4756BD);
MakeFunction(0x475664, 0x4756C2);
MakeUnkn(0x4756C4, 1);
MakeNameEx(0x4756C4, "TPageControl.UpdateTabHighlights", 0x20);
MakeComm(0x4756C4, "'procedure TPageControl.UpdateTabHighlights;'");
MakeCode(0x4756C4);
MakeCode(0x4756DA);
MakeCode(0x4756FE);
MakeFunction(0x4756C4, 0x475702);
MakeUnkn(0x475704, 1);
MakeNameEx(0x475704, "TPageControl.Loaded", 0x20);
MakeComm(0x475704, "'procedure TPageControl.Loaded;'");
MakeCode(0x475704);
MakeFunction(0x475704, 0x475717);
MakeUnkn(0x475718, 1);
MakeNameEx(0x475718, "TPageControl.CanShowTab", 0x20);
MakeComm(0x475718, "'function TPageControl.CanShowTab(TabIndex:Integer):Boolean;'");
MakeCode(0x475718);
MakeFunction(0x475718, 0x47573C);
MakeUnkn(0x47573C, 1);
MakeNameEx(0x47573C, "TPageControl.DoClose", 0x20);
MakeComm(0x47573C, "'procedure TPageControl.DoClose;'");
MakeCode(0x47573C);
MakeComm(0x47574E, "'TPageControl.UpdateActivePage'");
MakeComm(0x475754, "'TPageControl.FComponentState:TComponentState'");
MakeCode(0x475754);
MakeComm(0x475767, "'TCustomForm.FDesigner:IDesignerHook'");
MakeComm(0x475770, "'TCustomForm.FDesigner:IDesignerHook'");
MakeCode(0x47577B);
MakeFunction(0x47573C, 0x475784);
MakeUnkn(0x475784, 1);
MakeNameEx(0x475784, "TPageControl.ChangeActivePage", 0x20);
MakeComm(0x475784, "'procedure TPageControl.ChangeActivePage(Page:TTabSheet);'");
MakeCode(0x475784);
MakeCode(0x4757F8);
MakeCode(0x475841);
MakeCode(0x47584A);
MakeCode(0x47585B);
MakeCode(0x475887);
MakeFunction(0x475784, 0x47588C);
MakeUnkn(0x47588C, 1);
MakeNameEx(0x47588C, "TPageControl.DeleteTab", 0x20);
MakeComm(0x47588C, "'procedure TPageControl.DeleteTab(Page:TTabSheet; Index:Integer);'");
MakeCode(0x47588C);
MakeCode(0x4758CD);
MakeCode(0x4758D9);
MakeFunction(0x47588C, 0x4758E7);
MakeUnkn(0x4758E8, 1);
MakeNameEx(0x4758E8, "TPageControl.DoAddDockClient", 0x20);
MakeComm(0x4758E8, "'procedure TPageControl.DoAddDockClient(Client:TControl; const ARect:TRect);'");
MakeCode(0x4758E8);
MakeCode(0x4758FF);
MakeFunction(0x4758E8, 0x475902);
MakeUnkn(0x475904, 1);
MakeNameEx(0x475904, "TPageControl.DockOver", 0x20);
MakeComm(0x475904, "'procedure TPageControl.DockOver(Source:TDragDockObject; X:Integer; Y:Integer; State:TDragState; var Accept:Boolean);'");
MakeCode(0x475904);
MakeFunction(0x475904, 0x475957);
MakeUnkn(0x475958, 1);
MakeNameEx(0x475958, "TPageControl.DoRemoveDockClient", 0x20);
MakeComm(0x475958, "'procedure TPageControl.DoRemoveDockClient(Client:TControl);'");
MakeCode(0x475958);
MakeCode(0x475988);
MakeFunction(0x475958, 0x47598A);
MakeUnkn(0x47598C, 1);
MakeNameEx(0x47598C, "TPageControl.FindNextPage", 0x20);
MakeComm(0x47598C, "'function TPageControl.FindNextPage(CurPage:TTabSheet; GoForward:Boolean; CheckTabVisible:Boolean):TTabSheet;'");
MakeCode(0x47598C);
MakeCode(0x4759C2);
MakeCode(0x4759C4);
MakeCode(0x4759C6);
MakeCode(0x4759DC);
MakeCode(0x4759E9);
MakeCode(0x4759EA);
MakeCode(0x475A0A);
MakeCode(0x475A0C);
MakeFunction(0x47598C, 0x475A14);
MakeUnkn(0x475A14, 1);
MakeNameEx(0x475A14, "TPageControl.GetChildren", 0x20);
MakeComm(0x475A14, "'procedure TPageControl.GetChildren(Proc:TGetChildProc; Root:TComponent);'");
MakeCode(0x475A14);
MakeCode(0x475A31);
MakeCode(0x475A4D);
MakeFunction(0x475A14, 0x475A54);
MakeUnkn(0x475A54, 1);
MakeNameEx(0x475A54, "TPageControl.GetImageIndex", 0x20);
MakeComm(0x475A54, "'function TPageControl.GetImageIndex(TabIndex:Integer):Integer;'");
MakeCode(0x475A54);
MakeCode(0x475A76);
MakeCode(0x475A8F);
MakeCode(0x475AA7);
MakeCode(0x475AA8);
MakeCode(0x475AB4);
MakeCode(0x475AC8);
MakeFunction(0x475A54, 0x475ACF);
MakeUnkn(0x475AD0, 1);
MakeNameEx(0x475AD0, "TPageControl.GetPageFromDockClient", 0x20);
MakeComm(0x475AD0, "'function TPageControl.GetPageFromDockClient(Client:TControl):TTabSheet;'");
MakeCode(0x475AD0);
MakeCode(0x475AEF);
MakeCode(0x475B13);
MakeCode(0x475B17);
MakeFunction(0x475AD0, 0x475B20);
MakeUnkn(0x475B20, 1);
MakeNameEx(0x475B20, "TPageControl.GetPage", 0x20);
MakeComm(0x475B20, "'function TPageControl.GetPage(Index:Integer):TTabSheet;'");
MakeCode(0x475B20);
MakeFunction(0x475B20, 0x475B36);
MakeUnkn(0x475B38, 1);
MakeNameEx(0x475B38, "TPageControl.GetPageCount", 0x20);
MakeComm(0x475B38, "'function TPageControl.GetPageCount:Integer;'");
MakeCode(0x475B38);
MakeFunction(0x475B38, 0x475B42);
MakeUnkn(0x475B44, 1);
MakeNameEx(0x475B44, "TPageControl.GetSiteInfo", 0x20);
MakeComm(0x475B44, "'procedure TPageControl.GetSiteInfo(Client:TControl; var InfluenceRect:TRect; MousePos:TPoint; var CanDock:Boolean);'");
MakeCode(0x475B44);
MakeFunction(0x475B44, 0x475B87);
MakeUnkn(0x475B88, 1);
MakeNameEx(0x475B88, "TPageControl.InsertPage", 0x20);
MakeComm(0x475B88, "'procedure TPageControl.InsertPage(Page:TTabSheet);'");
MakeCode(0x475B88);
MakeFunction(0x475B88, 0x475BAB);
MakeUnkn(0x475BAC, 1);
MakeNameEx(0x475BAC, "TPageControl.InsertTab", 0x20);
MakeComm(0x475BAC, "'procedure TPageControl.InsertTab(Page:TTabSheet);'");
MakeCode(0x475BAC);
MakeCode(0x475BF4);
MakeCode(0x475C01);
MakeCode(0x475C0A);
MakeCode(0x475C0F);
MakeFunction(0x475BAC, 0x475C16);
MakeUnkn(0x475C18, 1);
MakeNameEx(0x475C18, "TPageControl.MoveTab", 0x20);
MakeComm(0x475C18, "'procedure TPageControl.MoveTab(CurIndex:Integer; NewIndex:Integer);'");
MakeCode(0x475C18);
MakeFunction(0x475C18, 0x475C35);
MakeUnkn(0x475C38, 1);
MakeNameEx(0x475C38, "TPageControl.RemovePage", 0x20);
MakeComm(0x475C38, "'procedure TPageControl.RemovePage(Page:TTabSheet);'");
MakeCode(0x475C38);
MakeCode(0x475C5C);
MakeFunction(0x475C38, 0x475C87);
MakeUnkn(0x475C88, 1);
MakeNameEx(0x475C88, "TPageControl.SelectNextPage", 0x20);
MakeComm(0x475C88, "'procedure TPageControl.SelectNextPage(GoForward:Boolean; CheckTabVisible:Boolean);'");
MakeCode(0x475C88);
MakeCode(0x475CCE);
MakeFunction(0x475C88, 0x475CD2);
MakeUnkn(0x475CD4, 1);
MakeNameEx(0x475CD4, "TPageControl.SetActivePage", 0x20);
MakeComm(0x475CD4, "'procedure TPageControl.SetActivePage(Page:TTabSheet);'");
MakeCode(0x475CD4);
MakeCode(0x475CED);
MakeCode(0x475D23);
MakeCode(0x475D42);
MakeCode(0x475D4F);
MakeCode(0x475D5A);
MakeCode(0x475D5F);
MakeCode(0x475D61);
MakeFunction(0x475CD4, 0x475D65);
MakeUnkn(0x475D68, 1);
MakeNameEx(0x475D68, "TPageControl.SetChildOrder", 0x20);
MakeComm(0x475D68, "'procedure TPageControl.SetChildOrder(Child:TComponent; Order:Integer);'");
MakeCode(0x475D68);
MakeFunction(0x475D68, 0x475D72);
MakeUnkn(0x475D74, 1);
MakeNameEx(0x475D74, "TPageControl.ShowControl", 0x20);
MakeComm(0x475D74, "'procedure TPageControl.ShowControl(AControl:TControl);'");
MakeCode(0x475D74);
MakeCode(0x475D9C);
MakeFunction(0x475D74, 0x475DA8);
MakeUnkn(0x475DA8, 1);
MakeNameEx(0x475DA8, "TPageControl.UpdateTab", 0x20);
MakeComm(0x475DA8, "'procedure TPageControl.UpdateTab(Page:TTabSheet);'");
MakeCode(0x475DA8);
MakeCode(0x475DE5);
MakeCode(0x475DF2);
MakeCode(0x475DFB);
MakeCode(0x475E00);
MakeFunction(0x475DA8, 0x475E07);
MakeUnkn(0x475E08, 1);
MakeNameEx(0x475E08, "TPageControl.UpdateActivePage", 0x20);
MakeComm(0x475E08, "'procedure TPageControl.UpdateActivePage;'");
MakeCode(0x475E08);
MakeCode(0x475E36);
MakeFunction(0x475E08, 0x475E41);
MakeUnkn(0x475E44, 1);
MakeNameEx(0x475E44, "TPageControl.CMDesignHitTest", 0x20);
MakeComm(0x475E44, "'procedure TPageControl.CMDesignHitTest(var Message:TCMDesignHitTest);'");
MakeCode(0x475E44);
MakeCode(0x475EA6);
MakeFunction(0x475E44, 0x475EAD);
MakeUnkn(0x475EB0, 1);
MakeNameEx(0x475EB0, "TPageControl.CMDialogKey", 0x20);
MakeComm(0x475EB0, "'procedure TPageControl.CMDialogKey(var Message:TCMDialogKey);'");
MakeCode(0x475EB0);
MakeCode(0x475EDD);
MakeCode(0x475F0F);
MakeCode(0x475F18);
MakeFunction(0x475EB0, 0x475F1C);
MakeUnkn(0x475F1C, 1);
MakeNameEx(0x475F1C, "TPageControl.CMDockClient", 0x20);
MakeComm(0x475F1C, "'procedure TPageControl.CMDockClient(var Message:TCMDockClient);'");
MakeCode(0x475F1C);
MakeCode(0x475F5D);
MakeCode(0x475F90);
MakeCode(0x475F94);
MakeCode(0x475FF1);
MakeCode(0x476017);
MakeCode(0x476021);
MakeCode(0x47603E);
MakeCode(0x47606A);
MakeCode(0x476074);
MakeCode(0x476081);
MakeCode(0x47608D);
MakeCode(0x476092);
MakeCode(0x476094);
MakeCode(0x4760A1);
MakeCode(0x4760AA);
MakeCode(0x4760AF);
MakeFunction(0x475F1C, 0x4760B8);
MakeUnkn(0x4760B8, 1);
MakeNameEx(0x4760B8, "TPageControl.CMDockNotification", 0x20);
MakeComm(0x4760B8, "'procedure TPageControl.CMDockNotification(var Message:TCMDockNotification);'");
MakeCode(0x4760B8);
MakeCode(0x4760FB);
MakeCode(0x476115);
MakeCode(0x476120);
MakeCode(0x476135);
MakeCode(0x476143);
MakeCode(0x476149);
MakeCode(0x476155);
MakeCode(0x476162);
MakeCode(0x47616B);
MakeCode(0x476178);
MakeCode(0x476181);
MakeCode(0x476186);
MakeFunction(0x4760B8, 0x47618F);
MakeUnkn(0x476190, 1);
MakeNameEx(0x476190, "TPageControl.CMUnDockClient", 0x20);
MakeComm(0x476190, "'procedure TPageControl.CMUnDockClient(var Message:TCMUnDockClient);'");
MakeCode(0x476190);
MakeCode(0x4761B9);
MakeFunction(0x476190, 0x4761BC);
MakeUnkn(0x4761BC, 1);
MakeNameEx(0x4761BC, "TPageControl.GetDockClientFromMousePos", 0x20);
MakeComm(0x4761BC, "'function TPageControl.GetDockClientFromMousePos(MousePos:TPoint):TControl;'");
MakeCode(0x4761BC);
MakeCode(0x47620C);
MakeCode(0x47621E);
MakeCode(0x476242);
MakeFunction(0x4761BC, 0x47624C);
MakeUnkn(0x47624C, 1);
MakeNameEx(0x47624C, "TPageControl.WMLButtonDown", 0x20);
MakeComm(0x47624C, "'procedure TPageControl.WMLButtonDown(var Message:TWMLButtonDown);'");
MakeCode(0x47624C);
MakeCode(0x476297);
MakeFunction(0x47624C, 0x47629D);
MakeUnkn(0x4762A0, 1);
MakeNameEx(0x4762A0, "TPageControl.WMLButtonDblClk", 0x20);
MakeComm(0x4762A0, "'procedure TPageControl.WMLButtonDblClk(var Message:TWMLButtonDblClk);'");
MakeCode(0x4762A0);
MakeCode(0x4762E3);
MakeFunction(0x4762A0, 0x4762E9);
MakeUnkn(0x4762EC, 1);
MakeNameEx(0x4762EC, "TPageControl.SetTabIndex", 0x20);
MakeComm(0x4762EC, "'procedure TPageControl.SetTabIndex(Value:Integer);'");
MakeCode(0x4762EC);
MakeCode(0x476340);
MakeFunction(0x4762EC, 0x476343);
MakeUnkn(0x476344, 1);
MakeNameEx(0x476344, "TPageControl.WMEraseBkGnd", 0x20);
MakeComm(0x476344, "'procedure TPageControl.WMEraseBkGnd(var Message:TWMEraseBkgnd);'");
MakeCode(0x476344);
MakeCode(0x476363);
MakeCode(0x47636F);
MakeFunction(0x476344, 0x476379);
MakeUnkn(0x47637C, 1);
MakeNameEx(0x47637C, "TPageControl.PageIndexFromTabIndex", 0x20);
MakeComm(0x47637C, "'function TPageControl.PageIndexFromTabIndex(TabIndex:Integer):Integer;'");
MakeCode(0x47637C);
MakeCode(0x47638D);
MakeCode(0x4763A0);
MakeCode(0x4763A4);
MakeFunction(0x47637C, 0x4763AB);
MakeUnkn(0x4763AC, 1);
MakeNameEx(0x4763AC, "TStatusPanel.Create", 0x20);
MakeComm(0x4763AC, "'constructor TStatusPanel.Create(Collection:TCollection);'");
MakeCode(0x4763AC);
MakeCode(0x4763BA);
MakeCode(0x4763F2);
MakeFunction(0x4763AC, 0x4763F7);
MakeUnkn(0x4763F8, 1);
MakeNameEx(0x4763F8, "TStatusPanel.Assign", 0x20);
MakeComm(0x4763F8, "'procedure TStatusPanel.Assign(Source:TPersistent);'");
MakeCode(0x4763F8);
MakeCode(0x476449);
MakeCode(0x476452);
MakeFunction(0x4763F8, 0x476456);
MakeUnkn(0x476458, 1);
MakeNameEx(0x476458, "TStatusPanel.SetBiDiMode", 0x20);
MakeComm(0x476458, "'procedure TStatusPanel.SetBiDiMode(Value:TBiDiMode);'");
MakeCode(0x476458);
MakeFunction(0x476458, 0x47646C);
MakeUnkn(0x47646C, 1);
MakeNameEx(0x47646C, "TStatusPanel.IsStoredBiDiMode", 0x20);
MakeComm(0x47646C, "'procedure TStatusPanel.IsStoredBiDiMode(Value:TBiDiMode);'");
MakeCode(0x47646C);
MakeComm(0x47646C, "'TStatusPanel.ParentBiDiMode:Boolean'");
MakeFunction(0x47646C, 0x476473);
MakeUnkn(0x476474, 1);
MakeNameEx(0x476474, "TStatusPanel.SetParentBiDiMode", 0x20);
MakeComm(0x476474, "'procedure TStatusPanel.SetParentBiDiMode(Value:Boolean);'");
MakeCode(0x476474);
MakeFunction(0x476474, 0x476482);
MakeUnkn(0x476484, 1);
MakeNameEx(0x476484, "TStatusPanel.ParentBiDiModeChanged", 0x20);
MakeComm(0x476484, "'procedure TStatusPanel.ParentBiDiModeChanged;'");
MakeCode(0x476484);
MakeCode(0x4764BA);
MakeFunction(0x476484, 0x4764BD);
MakeUnkn(0x4764C0, 1);
MakeNameEx(0x4764C0, "TStatusPanel.UseRightToLeftReading", 0x20);
MakeComm(0x4764C0, "'function TStatusPanel.UseRightToLeftReading:Boolean;'");
MakeCode(0x4764C0);
MakeCode(0x4764D2);
MakeCode(0x4764D5);
MakeFunction(0x4764C0, 0x4764D8);
MakeUnkn(0x4764D8, 1);
MakeNameEx(0x4764D8, "TStatusPanel.UseRightToLeftAlignment", 0x20);
MakeComm(0x4764D8, "'function TStatusPanel.UseRightToLeftAlignment:Boolean;'");
MakeCode(0x4764D8);
MakeCode(0x4764EA);
MakeCode(0x4764ED);
MakeFunction(0x4764D8, 0x4764F0);
MakeUnkn(0x4764F0, 1);
MakeNameEx(0x4764F0, "THeaderSection.GetDisplayName", 0x20);
MakeComm(0x4764F0, "'function THeaderSection.GetDisplayName:AnsiString;'");
MakeCode(0x4764F0);
MakeCode(0x47650E);
MakeFunction(0x4764F0, 0x476511);
MakeUnkn(0x476514, 1);
MakeNameEx(0x476514, "TStatusPanel.SetAlignment", 0x20);
MakeComm(0x476514, "'procedure TStatusPanel.SetAlignment(Value:TAlignment);'");
MakeCode(0x476514);
MakeFunction(0x476514, 0x476524);
MakeUnkn(0x476524, 1);
MakeNameEx(0x476524, "TStatusPanel.SetBevel", 0x20);
MakeComm(0x476524, "'procedure TStatusPanel.SetBevel(Value:TStatusPanelBevel);'");
MakeCode(0x476524);
MakeFunction(0x476524, 0x476534);
MakeUnkn(0x476534, 1);
MakeNameEx(0x476534, "TStatusPanel.SetStyle", 0x20);
MakeComm(0x476534, "'procedure TStatusPanel.SetStyle(Value:TStatusPanelStyle);'");
MakeCode(0x476534);
MakeFunction(0x476534, 0x476544);
MakeUnkn(0x476544, 1);
MakeNameEx(0x476544, "TStatusPanel.SetText", 0x20);
MakeComm(0x476544, "'procedure TStatusPanel.SetText(const Value:AnsiString);'");
MakeCode(0x476544);
MakeCode(0x476569);
MakeFunction(0x476544, 0x47656C);
MakeUnkn(0x47656C, 1);
MakeNameEx(0x47656C, "TStatusPanel.SetWidth", 0x20);
MakeComm(0x47656C, "'procedure TStatusPanel.SetWidth(Value:Integer);'");
MakeCode(0x47656C);
MakeFunction(0x47656C, 0x47657C);
MakeUnkn(0x47657C, 1);
MakeNameEx(0x47657C, "TStatusPanels.Create", 0x20);
MakeComm(0x47657C, "'constructor TStatusPanels.Create(StatusBar:TCustomStatusBar);'");
MakeCode(0x47657C);
MakeCode(0x47658B);
MakeCode(0x4765AC);
MakeCode(0x4765BB);
MakeCode(0x4765D3);
MakeFunction(0x47657C, 0x4765D9);
MakeUnkn(0x4765DC, 1);
MakeNameEx(0x4765DC, "TCoolBands.Add", 0x20);
MakeComm(0x4765DC, "'function TCoolBands.Add:TCoolBand;'");
MakeCode(0x4765DC);
MakeFunction(0x4765DC, 0x4765E8);
MakeUnkn(0x4765E8, 1);
MakeNameEx(0x4765E8, "TCoolBands.GetItem", 0x20);
MakeComm(0x4765E8, "'function TCoolBands.GetItem(Index:Integer):TCoolBand;'");
MakeCode(0x4765E8);
MakeFunction(0x4765E8, 0x4765FA);
MakeUnkn(0x4765FC, 1);
MakeNameEx(0x4765FC, "TStatusPanels.sub_00416E6C", 0x20);
MakeComm(0x4765FC, "'procedure TStatusPanels.sub_00416E6C;'");
MakeCode(0x4765FC);
MakeComm(0x4765FC, "'TStatusPanels...FStatusBar:TCustomStatusBar'");
MakeFunction(0x4765FC, 0x476600);
MakeUnkn(0x476600, 1);
MakeNameEx(0x476600, "TStatusPanels.Update", 0x20);
MakeComm(0x476600, "'procedure TStatusPanels.Update(Item:TCollectionItem);'");
MakeCode(0x476600);
MakeCode(0x476620);
MakeFunction(0x476600, 0x47662F);
MakeUnkn(0x476630, 1);
MakeNameEx(0x476630, "TCustomStatusBar.Create", 0x20);
MakeComm(0x476630, "'constructor TCustomStatusBar.Create(AOwner:TComponent);'");
MakeCode(0x476630);
MakeCode(0x476642);
MakeCode(0x4766DB);
MakeFunction(0x476630, 0x4766E2);
MakeUnkn(0x4766E8, 1);
MakeNameEx(0x4766E8, "TCustomStatusBar.Destroy", 0x20);
MakeComm(0x4766E8, "'destructor TCustomStatusBar.Destroy;'");
MakeCode(0x4766E8);
MakeCode(0x476720);
MakeFunction(0x4766E8, 0x476723);
MakeUnkn(0x476724, 1);
MakeNameEx(0x476724, "TCustomStatusBar.CreateParams", 0x20);
MakeComm(0x476724, "'procedure TCustomStatusBar.CreateParams(var Params:TCreateParams);'");
MakeCode(0x476724);
MakeCode(0x47675D);
MakeCode(0x476761);
MakeCode(0x476763);
MakeCode(0x47678D);
MakeFunction(0x476724, 0x476794);
MakeUnkn(0x4767A8, 1);
MakeNameEx(0x4767A8, "TCustomStatusBar.CreateWnd", 0x20);
MakeComm(0x4767A8, "'procedure TCustomStatusBar.CreateWnd;'");
MakeCode(0x4767A8);
MakeCode(0x47680F);
MakeCode(0x47682E);
MakeFunction(0x4767A8, 0x476830);
MakeUnkn(0x476830, 1);
MakeNameEx(0x476830, "TCustomStatusBar.DoHint", 0x20);
MakeComm(0x476830, "'function TCustomStatusBar.DoHint:Boolean;'");
MakeCode(0x476830);
MakeCode(0x47684F);
MakeFunction(0x476830, 0x476853);
MakeUnkn(0x476854, 1);
MakeNameEx(0x476854, "TCustomStatusBar.DrawPanel", 0x20);
MakeComm(0x476854, "'procedure TCustomStatusBar.DrawPanel(Panel:TStatusPanel; const Rect:TRect);'");
MakeCode(0x476854);
MakeCode(0x476874);
MakeFunction(0x476854, 0x476883);
MakeUnkn(0x476884, 1);
MakeNameEx(0x476884, "TCustomHeaderControl.SetSections", 0x20);
MakeComm(0x476884, "'procedure TCustomHeaderControl.SetSections(Value:THeaderSections);'");
MakeCode(0x476884);
MakeFunction(0x476884, 0x476894);
MakeUnkn(0x476894, 1);
MakeNameEx(0x476894, "TCustomStatusBar.SetSimplePanel", 0x20);
MakeComm(0x476894, "'procedure TCustomStatusBar.SetSimplePanel(Value:Boolean);'");
MakeCode(0x476894);
MakeCode(0x4768CC);
MakeFunction(0x476894, 0x4768CE);
MakeUnkn(0x4768D0, 1);
MakeNameEx(0x4768D0, "TCustomStatusBar.DoRightToLeftAlignment", 0x20);
MakeComm(0x4768D0, "'procedure TCustomStatusBar.DoRightToLeftAlignment(var Str:AnsiString; AAlignment:TAlignment; ARTLAlignment:Boolean);'");
MakeCode(0x4768D0);
MakeCode(0x4768E8);
MakeCode(0x476907);
MakeCode(0x476918);
MakeFunction(0x4768D0, 0x47691E);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x476928, -1);
MakeDword(0x476924);
MakeDword(0x476920);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x476934, -1);
MakeDword(0x476930);
MakeDword(0x47692C);
MakeUnkn(0x476938, 1);
MakeNameEx(0x476938, "TCustomStatusBar.UpdateSimpleText", 0x20);
MakeComm(0x476938, "'procedure TCustomStatusBar.UpdateSimpleText;'");
MakeCode(0x476938);
MakeCode(0x476997);
MakeFunction(0x476938, 0x47699A);
MakeUnkn(0x47699C, 1);
MakeNameEx(0x47699C, "TCustomStatusBar.SetSimpleText", 0x20);
MakeComm(0x47699C, "'procedure TCustomStatusBar.SetSimpleText(const Value:AnsiString);'");
MakeCode(0x47699C);
MakeCode(0x4769C5);
MakeFunction(0x47699C, 0x4769C8);
MakeUnkn(0x4769C8, 1);
MakeNameEx(0x4769C8, "TCustomStatusBar.CMBiDiModeChanged", 0x20);
MakeComm(0x4769C8, "'procedure TCustomStatusBar.CMBiDiModeChanged(var Message:TMessage);'");
MakeCode(0x4769C8);
MakeComm(0x4769DF, "'TCustomStatusBar.FSimplePanel:Boolean'");
MakeComm(0x4769E8, "'TCustomStatusBar.FPanels:TStatusPanels'");
MakeCode(0x4769FD);
MakeComm(0x4769FF, "'TCustomStatusBar.FPanels:TStatusPanels'");
MakeComm(0x476A0A, "'TCoolBand.FImageIndex:TImageIndex'");
MakeComm(0x476A12, "'TCustomStatusBar.FPanels:TStatusPanels'");
MakeCode(0x476A22);
MakeCode(0x476A26);
MakeCode(0x476A33);
MakeCode(0x476A3A);
MakeFunction(0x4769C8, 0x476A3E);
MakeUnkn(0x476A40, 1);
MakeNameEx(0x476A40, "TCustomStatusBar.FlipChildren", 0x20);
MakeComm(0x476A40, "'procedure TCustomStatusBar.FlipChildren(AllLevels:Boolean);'");
MakeCode(0x476A40);
MakeComm(0x476A5F, "'TCustomStatusBar.FSimplePanel:Boolean'");
MakeComm(0x476A6F, "'TCustomStatusBar.FPanels:TStatusPanels'");
MakeComm(0x476A90, "'TCustomStatusBar.FPanels:TStatusPanels'");
MakeComm(0x476A9D, "'TCoolBand.FHorizontalOnly:Boolean'");
MakeComm(0x476AA6, "'TCustomStatusBar.FPanels:TStatusPanels'");
MakeCode(0x476ABD);
MakeComm(0x476AC0, "'TCustomStatusBar.FPanels:TStatusPanels'");
MakeComm(0x476ACD, "'TCoolBand.FHorizontalOnly:Boolean'");
MakeCode(0x476AD7);
MakeComm(0x476AE1, "'TStatusPanels.Create'");
MakeComm(0x476AFA, "'TCustomStatusBar.FPanels:TStatusPanels'");
MakeCode(0x476B0F);
MakeComm(0x476B1C, "'TCustomStatusBar.FPanels:TStatusPanels'");
MakeCode(0x476B36);
MakeComm(0x476B39, "'TCustomStatusBar.FPanels:TStatusPanels'");
MakeCode(0x476B4E);
MakeComm(0x476B51, "'TCustomStatusBar.FPanels:TStatusPanels'");
MakeComm(0x476B6D, "'TCustomStatusBar.FPanels:TStatusPanels'");
MakeCode(0x476B84);
MakeCode(0x476B91);
MakeCode(0x476B9A);
MakeCode(0x476B9F);
MakeComm(0x476BA4, "'TCustomStatusBar.FPanels:TStatusPanels'");
MakeComm(0x476BB5, "'TCustomStatusBar.FPanels:TStatusPanels'");
MakeComm(0x476BD7, "'TCustomStatusBar.FPanels:TStatusPanels'");
MakeCode(0x476BEC);
MakeCode(0x476BF8);
MakeFunction(0x476A40, 0x476BFF);
MakeUnkn(0x476C00, 1);
MakeNameEx(0x476C00, "TCustomStatusBar.SetSizeGrip", 0x20);
MakeComm(0x476C00, "'procedure TCustomStatusBar.SetSizeGrip(Value:Boolean);'");
MakeCode(0x476C00);
MakeFunction(0x476C00, 0x476C16);
MakeUnkn(0x476C18, 1);
MakeNameEx(0x476C18, "TCustomStatusBar.SyncToSystemFont", 0x20);
MakeComm(0x476C18, "'procedure TCustomStatusBar.SyncToSystemFont;'");
MakeCode(0x476C18);
MakeCode(0x476C45);
MakeFunction(0x476C18, 0x476C47);
MakeUnkn(0x476C48, 1);
MakeNameEx(0x476C48, "TCustomStatusBar.UpdatePanel", 0x20);
MakeComm(0x476C48, "'procedure TCustomStatusBar.UpdatePanel(Index:Integer; Repaint:Boolean);'");
MakeCode(0x476C48);
MakeCode(0x476CC9);
MakeCode(0x476CE7);
MakeCode(0x476CEE);
MakeCode(0x476CF3);
MakeCode(0x476D04);
MakeCode(0x476D10);
MakeCode(0x476D3E);
MakeCode(0x476D5E);
MakeCode(0x476D70);
MakeCode(0x476D95);
MakeCode(0x476DA2);
MakeCode(0x476DAB);
MakeCode(0x476DB0);
MakeFunction(0x476C48, 0x476DB9);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x476DC4, -1);
MakeDword(0x476DC0);
MakeDword(0x476DBC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x476DD0, -1);
MakeDword(0x476DCC);
MakeDword(0x476DC8);
MakeUnkn(0x476DD4, 1);
MakeNameEx(0x476DD4, "TCustomStatusBar.UpdatePanels", 0x20);
MakeComm(0x476DD4, "'procedure TCustomStatusBar.UpdatePanels(UpdateRects:Boolean; UpdateText:Boolean);'");
MakeCode(0x476DD4);
MakeCode(0x476E1D);
MakeCode(0x476E60);
MakeCode(0x476E78);
MakeCode(0x476E99);
MakeCode(0x476EC1);
MakeCode(0x476ECD);
MakeCode(0x476EDE);
MakeFunction(0x476DD4, 0x476EE9);
MakeUnkn(0x476EF0, 1);
MakeNameEx(0x476EF0, "TCustomStatusBar.CMWinIniChange", 0x20);
MakeComm(0x476EF0, "'procedure TCustomStatusBar.CMWinIniChange(var Message:TMessage);'");
MakeCode(0x476EF0);
MakeCode(0x476F0B);
MakeCode(0x476F12);
MakeFunction(0x476EF0, 0x476F15);
MakeUnkn(0x476F18, 1);
MakeNameEx(0x476F18, "TCustomStatusBar.sub_00476F18", 0x20);
MakeComm(0x476F18, "'procedure TCustomStatusBar.sub_00476F18(?:?);'");
MakeCode(0x476F18);
MakeComm(0x476F40, "'TCustomStatusBar.FCanvas:TCanvas'");
MakeComm(0x476F62, "'TCustomStatusBar.FCanvas:TCanvas'");
MakeComm(0x476F70, "'TCustomStatusBar.FFont:TFont'");
MakeComm(0x476F76, "'TCustomStatusBar.FCanvas:TCanvas'");
MakeComm(0x476F84, "'TCustomStatusBar.FCanvas:TCanvas'");
MakeComm(0x476F8A, "'TCanvas.Brush:TBrush'");
MakeComm(0x476F9A, "'TCustomStatusBar.FCanvas:TCanvas'");
MakeComm(0x476FA0, "'TCanvas.Brush:TBrush'");
MakeComm(0x476FB3, "'TCustomStatusBar.FPanels:TStatusPanels'");
MakeComm(0x476FCD, "'TCustomStatusBar.DrawPanel'");
MakeCode(0x476FD2);
MakeCode(0x476FDF);
MakeComm(0x476FE2, "'TCustomStatusBar.FCanvas:TCanvas'");
MakeComm(0x476FF2, "'TCustomStatusBar.FCanvas:TCanvas'");
MakeCode(0x47700E);
MakeCode(0x477013);
MakeFunction(0x476F18, 0x477024);
MakeUnkn(0x477024, 1);
MakeNameEx(0x477024, "TCustomStatusBar.WMGetTextLength", 0x20);
MakeComm(0x477024, "'procedure TCustomStatusBar.WMGetTextLength(var Message:TWMGetTextLength);'");
MakeCode(0x477024);
MakeCode(0x477033);
MakeFunction(0x477024, 0x477037);
MakeUnkn(0x477038, 1);
MakeNameEx(0x477038, "TCustomStatusBar.WMPaint", 0x20);
MakeComm(0x477038, "'procedure TCustomStatusBar.WMPaint(var Message:TWMPaint);'");
MakeCode(0x477038);
MakeFunction(0x477038, 0x477055);
MakeUnkn(0x477058, 1);
MakeNameEx(0x477058, "TCustomStatusBar.WMSize", 0x20);
MakeComm(0x477058, "'procedure TCustomStatusBar.WMSize(var Message:TWMSize);'");
MakeCode(0x477058);
MakeCode(0x47706D);
MakeFunction(0x477058, 0x47707A);
MakeUnkn(0x47707C, 1);
MakeNameEx(0x47707C, "TCustomStatusBar.IsFontStored", 0x20);
MakeComm(0x47707C, "'function TCustomStatusBar.IsFontStored(Value:TFont):Boolean;'");
MakeCode(0x47707C);
MakeCode(0x477091);
MakeCode(0x477094);
MakeFunction(0x47707C, 0x477097);
MakeUnkn(0x477098, 1);
MakeNameEx(0x477098, "TCustomStatusBar.SetUseSystemFont", 0x20);
MakeComm(0x477098, "'procedure TCustomStatusBar.SetUseSystemFont(const Value:Boolean);'");
MakeCode(0x477098);
MakeCode(0x4770BC);
MakeCode(0x4770C3);
MakeFunction(0x477098, 0x4770C5);
MakeUnkn(0x4770C8, 1);
MakeNameEx(0x4770C8, "TCustomStatusBar.CMColorChanged", 0x20);
MakeComm(0x4770C8, "'procedure TCustomStatusBar.CMColorChanged(var Message:TMessage);'");
MakeCode(0x4770C8);
MakeFunction(0x4770C8, 0x4770DB);
MakeUnkn(0x4770DC, 1);
MakeNameEx(0x4770DC, "TCustomStatusBar.CMParentFontChanged", 0x20);
MakeComm(0x4770DC, "'procedure TCustomStatusBar.CMParentFontChanged(var Message:TMessage);'");
MakeCode(0x4770DC);
MakeCode(0x4770FC);
MakeFunction(0x4770DC, 0x4770FE);
MakeUnkn(0x477100, 1);
MakeNameEx(0x477100, "TCustomStatusBar.ExecuteAction", 0x20);
MakeComm(0x477100, "'procedure TCustomStatusBar.ExecuteAction(Action:TBasicAction);'");
MakeCode(0x477100);
MakeComm(0x477106, "'TCustomStatusBar.FAutoHint:Boolean'");
MakeComm(0x47710F, "'TCustomStatusBar.FComponentState:TComponentState'");
MakeComm(0x47712A, "'TCustomStatusBar.DoHint'");
MakeComm(0x477134, "'TCustomStatusBar.FSimplePanel:Boolean'");
MakeComm(0x47713D, "'TCustomStatusBar.FPanels:TStatusPanels'");
MakeCode(0x47714C);
MakeCode(0x477158);
MakeComm(0x47715A, "'TCustomStatusBar.FPanels:TStatusPanels'");
MakeCode(0x47716D);
MakeCode(0x477172);
MakeFunction(0x477100, 0x47717E);
MakeUnkn(0x477180, 1);
MakeNameEx(0x477180, "TCustomStatusBar.CMSysColorChange", 0x20);
MakeComm(0x477180, "'procedure TCustomStatusBar.CMSysColorChange(var Message:TMessage);'");
MakeCode(0x477180);
MakeFunction(0x477180, 0x477193);
MakeUnkn(0x477194, 1);
MakeNameEx(0x477194, "TCustomStatusBar.CMSysFontChanged", 0x20);
MakeComm(0x477194, "'procedure TCustomStatusBar.CMSysFontChanged(var Message:TMessage);'");
MakeCode(0x477194);
MakeFunction(0x477194, 0x4771A7);
MakeUnkn(0x4771A8, 1);
MakeNameEx(0x4771A8, "TCustomStatusBar.ChangeScale", 0x20);
MakeComm(0x4771A8, "'procedure TCustomStatusBar.ChangeScale(M:Integer; D:Integer);'");
MakeCode(0x4771A8);
MakeCode(0x4771C1);
MakeFunction(0x4771A8, 0x4771CA);
MakeUnkn(0x4771D0, 1);
MakeNameEx(0x4771D0, "TCustomStatusBar.SetBounds", 0x20);
MakeComm(0x4771D0, "'procedure TCustomStatusBar.SetBounds(ALeft:Integer; ATop:Integer; AWidth:Integer; AHeight:Integer);'");
MakeCode(0x4771D0);
MakeFunction(0x4771D0, 0x4771F3);
MakeUnkn(0x4771F4, 1);
MakeNameEx(0x4771F4, "TCustomStatusBar.SetParent", 0x20);
MakeComm(0x4771F4, "'procedure TCustomStatusBar.SetParent(AParent:TWinControl);'");
MakeCode(0x4771F4);
MakeFunction(0x4771F4, 0x4771FA);
MakeUnkn(0x4771FC, 1);
MakeNameEx(0x4771FC, "TCustomStatusBar.ValidateSizeGrip", 0x20);
MakeComm(0x4771FC, "'procedure TCustomStatusBar.ValidateSizeGrip(ARecreate:Boolean);'");
MakeCode(0x4771FC);
MakeCode(0x477227);
MakeCode(0x477262);
MakeCode(0x477266);
MakeCode(0x477268);
MakeCode(0x477283);
MakeFunction(0x4771FC, 0x47728A);
MakeUnkn(0x47728C, 1);
MakeNameEx(0x47728C, "TCustomStatusBar.CreatePanel", 0x20);
MakeComm(0x47728C, "'function TCustomStatusBar.CreatePanel:TStatusPanel;'");
MakeCode(0x47728C);
MakeCode(0x4772B7);
MakeFunction(0x47728C, 0x4772C8);
MakeUnkn(0x4772C8, 1);
MakeNameEx(0x4772C8, "TCustomStatusBar.CreatePanels", 0x20);
MakeComm(0x4772C8, "'function TCustomStatusBar.CreatePanels:TStatusPanels;'");
MakeCode(0x4772C8);
MakeFunction(0x4772C8, 0x4772D7);
MakeUnkn(0x4772D8, 1);
MakeNameEx(0x4772D8, "TStatusPanel.Create_0", 0x20);
MakeComm(0x4772D8, "'constructor TStatusPanel.Create;'");
MakeCode(0x4772D8);
MakeFunction(0x4772D8, 0x4772DE);
MakeUnkn(0x4772E0, 1);
MakeNameEx(0x4772E0, "TCustomStatusBar.WMEraseBkGnd", 0x20);
MakeComm(0x4772E0, "'procedure TCustomStatusBar.WMEraseBkGnd(var Message:TWMEraseBkgnd);'");
MakeCode(0x4772E0);
MakeCode(0x477331);
MakeCode(0x47733A);
MakeFunction(0x4772E0, 0x477340);
MakeUnkn(0x477340, 1);
MakeNameEx(0x477340, "TTrackBar.Create", 0x20);
MakeComm(0x477340, "'constructor TTrackBar.Create(AOwner:TComponent);'");
MakeCode(0x477340);
MakeCode(0x47734E);
MakeCode(0x47741A);
MakeFunction(0x477340, 0x47741F);
MakeUnkn(0x477424, 1);
MakeNameEx(0x477424, "TTrackBar.CreateParams", 0x20);
MakeComm(0x477424, "'procedure TTrackBar.CreateParams(var Params:TCreateParams);'");
MakeCode(0x477424);
MakeCode(0x477485);
MakeCode(0x4774B0);
MakeCode(0x4774F3);
MakeCode(0x477500);
MakeCode(0x477510);
MakeFunction(0x477424, 0x477513);
MakeUnkn(0x477528, 1);
MakeNameEx(0x477528, "TTrackBar.CreateWnd", 0x20);
MakeComm(0x477528, "'procedure TTrackBar.CreateWnd;'");
MakeCode(0x477528);
MakeCode(0x477631);
MakeFunction(0x477528, 0x477633);
MakeUnkn(0x477634, 1);
MakeNameEx(0x477634, "TTrackBar.DestroyWnd", 0x20);
MakeComm(0x477634, "'procedure TTrackBar.DestroyWnd;'");
MakeCode(0x477634);
MakeFunction(0x477634, 0x47763A);
MakeUnkn(0x47763C, 1);
MakeNameEx(0x47763C, "TTrackBar.CNHScroll", 0x20);
MakeComm(0x47763C, "'procedure TTrackBar.CNHScroll(var Message:TWMHScroll);'");
MakeCode(0x47763C);
MakeFunction(0x47763C, 0x47767C);
MakeUnkn(0x47767C, 1);
MakeNameEx(0x47767C, "TTrackBar.CNVScroll", 0x20);
MakeComm(0x47767C, "'procedure TTrackBar.CNVScroll(var Message:TWMVScroll);'");
MakeCode(0x47767C);
MakeFunction(0x47767C, 0x4776BC);
MakeUnkn(0x4776BC, 1);
MakeNameEx(0x4776BC, "TTrackBar.GetThumbLength", 0x20);
MakeComm(0x4776BC, "'function TTrackBar.GetThumbLength:Integer;'");
MakeCode(0x4776BC);
MakeCode(0x4776E2);
MakeFunction(0x4776BC, 0x4776EA);
MakeUnkn(0x4776EC, 1);
MakeNameEx(0x4776EC, "TTrackBar.SetOrientation", 0x20);
MakeComm(0x4776EC, "'procedure TTrackBar.SetOrientation(Value:TTrackBarOrientation);'");
MakeCode(0x4776EC);
MakeCode(0x47772D);
MakeCode(0x477734);
MakeFunction(0x4776EC, 0x477737);
MakeUnkn(0x477740, 1);
MakeNameEx(0x477740, "TTrackBar.SetParams", 0x20);
MakeComm(0x477740, "'procedure TTrackBar.SetParams(APosition:Integer; AMin:Integer; AMax:Integer);'");
MakeCode(0x477740);
MakeCode(0x4777B7);
MakeCode(0x4777BF);
MakeCode(0x4777C7);
MakeCode(0x4777FF);
MakeCode(0x47782D);
MakeCode(0x47785B);
MakeCode(0x477892);
MakeCode(0x47789D);
MakeCode(0x4778AA);
MakeCode(0x4778B6);
MakeCode(0x4778BB);
MakeFunction(0x477740, 0x4778C6);
MakeUnkn(0x4778C8, 1);
MakeNameEx(0x4778C8, "TTrackBar.SetPosition", 0x20);
MakeComm(0x4778C8, "'procedure TTrackBar.SetPosition(Value:Integer);'");
MakeCode(0x4778C8);
MakeFunction(0x4778C8, 0x4778DB);
MakeUnkn(0x4778DC, 1);
MakeNameEx(0x4778DC, "TTrackBar.SetMin", 0x20);
MakeComm(0x4778DC, "'procedure TTrackBar.SetMin(Value:Integer);'");
MakeCode(0x4778DC);
MakeFunction(0x4778DC, 0x4778F5);
MakeUnkn(0x4778F8, 1);
MakeNameEx(0x4778F8, "TTrackBar.SetMax", 0x20);
MakeComm(0x4778F8, "'procedure TTrackBar.SetMax(Value:Integer);'");
MakeCode(0x4778F8);
MakeFunction(0x4778F8, 0x47790F);
MakeUnkn(0x477910, 1);
MakeNameEx(0x477910, "TTrackBar.SetFrequency", 0x20);
MakeComm(0x477910, "'procedure TTrackBar.SetFrequency(Value:Integer);'");
MakeCode(0x477910);
MakeCode(0x477947);
MakeFunction(0x477910, 0x477949);
MakeUnkn(0x47794C, 1);
MakeNameEx(0x47794C, "TTrackBar.SetTickStyle", 0x20);
MakeComm(0x47794C, "'procedure TTrackBar.SetTickStyle(Value:TTickStyle);'");
MakeCode(0x47794C);
MakeFunction(0x47794C, 0x477960);
MakeUnkn(0x477960, 1);
MakeNameEx(0x477960, "TCustomTreeView.SetBorderStyle", 0x20);
MakeComm(0x477960, "'procedure TCustomTreeView.SetBorderStyle(Value:TBorderStyle);'");
MakeCode(0x477960);
MakeFunction(0x477960, 0x477974);
MakeUnkn(0x477974, 1);
MakeNameEx(0x477974, "TTrackBar.SetLineSize", 0x20);
MakeComm(0x477974, "'procedure TTrackBar.SetLineSize(Value:Integer);'");
MakeCode(0x477974);
MakeCode(0x4779AB);
MakeFunction(0x477974, 0x4779AD);
MakeUnkn(0x4779B0, 1);
MakeNameEx(0x4779B0, "TTrackBar.SetPageSize", 0x20);
MakeComm(0x4779B0, "'procedure TTrackBar.SetPageSize(Value:Integer);'");
MakeCode(0x4779B0);
MakeCode(0x4779E7);
MakeFunction(0x4779B0, 0x4779E9);
MakeUnkn(0x4779EC, 1);
MakeNameEx(0x4779EC, "TTrackBar.SetPositionToolTip", 0x20);
MakeComm(0x4779EC, "'procedure TTrackBar.SetPositionToolTip(const Value:TPositionToolTip);'");
MakeCode(0x4779EC);
MakeFunction(0x4779EC, 0x477A06);
MakeUnkn(0x477A08, 1);
MakeNameEx(0x477A08, "TTrackBar.SetThumbLength", 0x20);
MakeComm(0x477A08, "'procedure TTrackBar.SetThumbLength(Value:Integer);'");
MakeCode(0x477A08);
MakeCode(0x477A3C);
MakeFunction(0x477A08, 0x477A3F);
MakeUnkn(0x477A40, 1);
MakeNameEx(0x477A40, "TTrackBar.SetSliderVisible", 0x20);
MakeComm(0x477A40, "'procedure TTrackBar.SetSliderVisible(Value:Boolean);'");
MakeCode(0x477A40);
MakeFunction(0x477A40, 0x477A54);
MakeUnkn(0x477A54, 1);
MakeNameEx(0x477A54, "TCustomRichEdit.SetHideScrollBars", 0x20);
MakeComm(0x477A54, "'procedure TCustomRichEdit.SetHideScrollBars(Value:Boolean);'");
MakeCode(0x477A54);
MakeFunction(0x477A54, 0x477A68);
MakeUnkn(0x477A68, 1);
MakeNameEx(0x477A68, "TTrackBar.UpdateSelection", 0x20);
MakeComm(0x477A68, "'procedure TTrackBar.UpdateSelection;'");
MakeCode(0x477A68);
MakeCode(0x477AA0);
MakeCode(0x477AC8);
MakeFunction(0x477A68, 0x477ACA);
MakeUnkn(0x477ACC, 1);
MakeNameEx(0x477ACC, "TTrackBar.SetSelStart", 0x20);
MakeComm(0x477ACC, "'procedure TTrackBar.SetSelStart(Value:Integer);'");
MakeCode(0x477ACC);
MakeFunction(0x477ACC, 0x477AE0);
MakeUnkn(0x477AE0, 1);
MakeNameEx(0x477AE0, "TTrackBar.SetSelEnd", 0x20);
MakeComm(0x477AE0, "'procedure TTrackBar.SetSelEnd(Value:Integer);'");
MakeCode(0x477AE0);
MakeFunction(0x477AE0, 0x477AF4);
MakeUnkn(0x477AF4, 1);
MakeNameEx(0x477AF4, "TAnimate.DoOpen", 0x20);
MakeComm(0x477AF4, "'procedure TAnimate.DoOpen;'");
MakeCode(0x477AF4);
MakeCode(0x477B0F);
MakeFunction(0x477AF4, 0x477B11);
MakeUnkn(0x477B14, 1);
MakeNameEx(0x477B14, "TTrackBar.CNNotify", 0x20);
MakeComm(0x477B14, "'procedure TTrackBar.CNNotify(var Message:TWMNotify);'");
MakeCode(0x477B14);
MakeCode(0x477B52);
MakeCode(0x477B5E);
MakeCode(0x477B6E);
MakeCode(0x477BAA);
MakeCode(0x477BCE);
MakeCode(0x477BFE);
MakeCode(0x477C35);
MakeCode(0x477C61);
MakeCode(0x477CC6);
MakeCode(0x477CCD);
MakeCode(0x477CD4);
MakeCode(0x477CDD);
MakeFunction(0x477B14, 0x477CE5);
MakeUnkn(0x477CE8, 1);
MakeNameEx(0x477CE8, "TTrackBar.WMEraseBkGnd", 0x20);
MakeComm(0x477CE8, "'procedure TTrackBar.WMEraseBkGnd(var Message:TWMEraseBkgnd);'");
MakeCode(0x477CE8);
MakeCode(0x477D3A);
MakeCode(0x477D62);
MakeCode(0x477D6B);
MakeFunction(0x477CE8, 0x477D72);
MakeUnkn(0x477D74, 1);
MakeNameEx(0x477D74, "ProgressLimitError", 0x20);
MakeComm(0x477D74, "'procedure ProgressLimitError;'");
MakeCode(0x477D74);
MakeFunction(0x477D74, 0x477DAC);
MakeUnkn(0x477DAC, 1);
MakeNameEx(0x477DAC, "TProgressBar.Create", 0x20);
MakeComm(0x477DAC, "'constructor TProgressBar.Create(AOwner:TComponent);'");
MakeCode(0x477DAC);
MakeCode(0x477DBB);
MakeCode(0x477E30);
MakeFunction(0x477DAC, 0x477E36);
MakeUnkn(0x477E38, 1);
MakeNameEx(0x477E38, "TProgressBar.CreateParams", 0x20);
MakeComm(0x477E38, "'procedure TProgressBar.CreateParams(var Params:TCreateParams);'");
MakeCode(0x477E38);
MakeCode(0x477E4C);
MakeCode(0x477E70);
MakeCode(0x477E7D);
MakeFunction(0x477E38, 0x477E80);
MakeUnkn(0x477E94, 1);
MakeNameEx(0x477E94, "TProgressBar.CreateWnd", 0x20);
MakeComm(0x477E94, "'procedure TProgressBar.CreateWnd;'");
MakeCode(0x477E94);
MakeCode(0x477EC9);
MakeCode(0x477EF1);
MakeFunction(0x477E94, 0x477F1B);
MakeUnkn(0x477F1C, 1);
MakeNameEx(0x477F1C, "TProgressBar.DestroyWnd", 0x20);
MakeComm(0x477F1C, "'procedure TProgressBar.DestroyWnd;'");
MakeCode(0x477F1C);
MakeFunction(0x477F1C, 0x477F35);
MakeUnkn(0x477F38, 1);
MakeNameEx(0x477F38, "TProgressBar.GetMin", 0x20);
MakeComm(0x477F38, "'function TProgressBar.GetMin:Integer;'");
MakeCode(0x477F38);
MakeCode(0x477F67);
MakeFunction(0x477F38, 0x477F6F);
MakeUnkn(0x477F70, 1);
MakeNameEx(0x477F70, "TProgressBar.GetMax", 0x20);
MakeComm(0x477F70, "'function TProgressBar.GetMax:Integer;'");
MakeCode(0x477F70);
MakeCode(0x477F9F);
MakeFunction(0x477F70, 0x477FA7);
MakeUnkn(0x477FA8, 1);
MakeNameEx(0x477FA8, "TProgressBar.GetPosition", 0x20);
MakeComm(0x477FA8, "'function TProgressBar.GetPosition:Integer;'");
MakeCode(0x477FA8);
MakeCode(0x477FD7);
MakeCode(0x477FEF);
MakeCode(0x477FF5);
MakeFunction(0x477FA8, 0x477FF7);
MakeUnkn(0x477FF8, 1);
MakeNameEx(0x477FF8, "TProgressBar.SetParams", 0x20);
MakeComm(0x477FF8, "'procedure TProgressBar.SetParams(AMin:Integer; AMax:Integer);'");
MakeCode(0x477FF8);
MakeCode(0x47806B);
MakeCode(0x47808C);
MakeCode(0x478091);
MakeCode(0x4780A1);
MakeCode(0x4780CB);
MakeCode(0x4780EB);
MakeCode(0x478108);
MakeCode(0x478114);
MakeCode(0x478121);
MakeCode(0x47812D);
MakeCode(0x478132);
MakeFunction(0x477FF8, 0x47813B);
MakeUnkn(0x47813C, 1);
MakeNameEx(0x47813C, "TProgressBar.SetMin", 0x20);
MakeComm(0x47813C, "'procedure TProgressBar.SetMin(Value:Integer);'");
MakeCode(0x47813C);
MakeFunction(0x47813C, 0x478148);
MakeUnkn(0x478148, 1);
MakeNameEx(0x478148, "TProgressBar.SetMax", 0x20);
MakeComm(0x478148, "'procedure TProgressBar.SetMax(Value:Integer);'");
MakeCode(0x478148);
MakeFunction(0x478148, 0x478156);
MakeUnkn(0x478158, 1);
MakeNameEx(0x478158, "TProgressBar.SetPosition", 0x20);
MakeComm(0x478158, "'procedure TProgressBar.SetPosition(Value:Integer);'");
MakeCode(0x478158);
MakeCode(0x478173);
MakeCode(0x478178);
MakeCode(0x47819B);
MakeFunction(0x478158, 0x4781A4);
MakeUnkn(0x4781A4, 1);
MakeNameEx(0x4781A4, "TProgressBar.SetStep", 0x20);
MakeComm(0x4781A4, "'procedure TProgressBar.SetStep(Value:Integer);'");
MakeCode(0x4781A4);
MakeCode(0x4781DB);
MakeFunction(0x4781A4, 0x4781DD);
MakeUnkn(0x4781E0, 1);
MakeNameEx(0x4781E0, "TProgressBar.StepBy", 0x20);
MakeComm(0x4781E0, "'procedure TProgressBar.StepBy(Delta:Integer);'");
MakeCode(0x4781E0);
MakeCode(0x478206);
MakeFunction(0x4781E0, 0x478209);
MakeUnkn(0x47820C, 1);
MakeNameEx(0x47820C, "TPageScroller.SetOrientation", 0x20);
MakeComm(0x47820C, "'procedure TPageScroller.SetOrientation(Value:TPageScrollerOrientation);'");
MakeCode(0x47820C);
MakeFunction(0x47820C, 0x478220);
MakeUnkn(0x478220, 1);
MakeNameEx(0x478220, "TProgressBar.SetSmooth", 0x20);
MakeComm(0x478220, "'procedure TProgressBar.SetSmooth(Value:Boolean);'");
MakeCode(0x478220);
MakeFunction(0x478220, 0x478234);
MakeUnkn(0x478234, 1);
MakeNameEx(0x478234, "TConversion.ConvertReadStream", 0x20);
MakeComm(0x478234, "'function TConversion.ConvertReadStream(Stream:TStream; Buffer:PChar; BufSize:Integer):Integer;'");
MakeCode(0x478234);
MakeFunction(0x478234, 0x478248);
MakeUnkn(0x478248, 1);
MakeNameEx(0x478248, "TConversion.ConvertWriteStream", 0x20);
MakeComm(0x478248, "'function TConversion.ConvertWriteStream(Stream:TStream; Buffer:PChar; BufSize:Integer):Integer;'");
MakeCode(0x478248);
MakeFunction(0x478248, 0x47825C);
MakeUnkn(0x47825C, 1);
MakeNameEx(0x47825C, "TStatusBar.GetOnDrawPanel", 0x20);
MakeComm(0x47825C, "'function TStatusBar.GetOnDrawPanel:TDrawPanelEvent;'");
MakeCode(0x47825C);
MakeFunction(0x47825C, 0x47826E);
MakeUnkn(0x478270, 1);
MakeNameEx(0x478270, "TStatusBar.SetOnDrawPanel", 0x20);
MakeComm(0x478270, "'procedure TStatusBar.SetOnDrawPanel(Value:TDrawPanelEvent);'");
MakeCode(0x478270);
MakeFunction(0x478270, 0x478289);
MakeUnkn(0x47828C, 1);
MakeNameEx(0x47828C, "Finalization_7", 0x20);
MakeComm(0x47828C, "'procedure Finalization;'");
MakeCode(0x47828C);
MakeCode(0x4782B9);
MakeCode(0x4782CD);
MakeCode(0x4782ED);
MakeCode(0x4782FA);
MakeCode(0x4782FB);
MakeCode(0x478300);
MakeFunction(0x47828C, 0x478304);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x47830C, -1);
MakeDword(0x478308);
MakeDword(0x478304);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x478318, -1);
MakeDword(0x478314);
MakeDword(0x478310);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x478324, -1);
MakeDword(0x478320);
MakeDword(0x47831C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x478330, -1);
MakeDword(0x47832C);
MakeDword(0x478328);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x47833C, -1);
MakeDword(0x478338);
MakeDword(0x478334);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x478348, -1);
MakeDword(0x478344);
MakeDword(0x478340);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x478354, -1);
MakeDword(0x478350);
MakeDword(0x47834C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x478360, -1);
MakeDword(0x47835C);
MakeDword(0x478358);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x47836C, -1);
MakeDword(0x478368);
MakeDword(0x478364);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x478378, -1);
MakeDword(0x478374);
MakeDword(0x478370);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x478384, -1);
MakeDword(0x478380);
MakeDword(0x47837C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x478390, -1);
MakeDword(0x47838C);
MakeDword(0x478388);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x47839C, -1);
MakeDword(0x478398);
MakeDword(0x478394);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4783A8, -1);
MakeDword(0x4783A4);
MakeDword(0x4783A0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4783B4, -1);
MakeDword(0x4783B0);
MakeDword(0x4783AC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4783C0, -1);
MakeDword(0x4783BC);
MakeDword(0x4783B8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4783CC, -1);
MakeDword(0x4783C8);
MakeDword(0x4783C4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4783D8, -1);
MakeDword(0x4783D4);
MakeDword(0x4783D0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4783E4, -1);
MakeDword(0x4783E0);
MakeDword(0x4783DC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4783F0, -1);
MakeDword(0x4783EC);
MakeDword(0x4783E8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4783FC, -1);
MakeDword(0x4783F8);
MakeDword(0x4783F4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x478408, -1);
MakeDword(0x478404);
MakeDword(0x478400);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x478414, -1);
MakeDword(0x478410);
MakeDword(0x47840C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x478420, -1);
MakeDword(0x47841C);
MakeDword(0x478418);
MakeUnkn(0x478E40, 1);
MakeNameEx(0x478E40, "RTTI_478E40_Record_TTabFontSetting", 0);
MakeDword(0x478E40);
MakeUnkn(0x478E44, 1);
MakeNameEx(0x478E44, "", 0);
MakeByte(0x478E44);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x478E45, 0x478E55);
MakeDword(0x478E55);
MakeDword(0x478E59);
MakeDword(0x478E5D);
MakeDword(0x478E61);
MakeUnkn(0x478E68, 1);
MakeNameEx(0x478E68, "RTTI_478E68_Record_TTabFontSettings", 0);
MakeDword(0x478E68);
MakeUnkn(0x478E6C, 1);
MakeNameEx(0x478E6C, "", 0);
MakeByte(0x478E6C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x478E6D, 0x478E7E);
MakeDword(0x478E7E);
MakeDword(0x478E82);
MakeDword(0x478E86);
MakeDword(0x478E8A);
MakeDword(0x478E8E);
MakeDword(0x478E92);
MakeDword(0x478E96);
MakeDword(0x478E9A);
MakeDword(0x478E9E);
MakeDword(0x478EA2);
MakeDword(0x478EA6);
MakeDword(0x478EAA);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x478EB8, -1);
MakeDword(0x478EB4);
MakeDword(0x478EB0);
MakeCode(0x478EC0);
MakeFunction(0x478EC0, 0x478EDE);
MakeCode(0x478EE0);
MakeFunction(0x478EE0, 0x478F19);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x478F24, -1);
MakeDword(0x478F20);
MakeDword(0x478F1C);
MakeCode(0x478F54);
MakeCode(0x478F8D);
MakeCode(0x478F96);
MakeFunction(0x478F54, 0x478F9F);
MakeCode(0x478FA0);
MakeFunction(0x478FA0, 0x478FA8);
MakeCode(0x478FA8);
MakeCode(0x478FCA);
MakeFunction(0x478FA8, 0x478FD6);
MakeCode(0x478FD8);
MakeCode(0x47904A);
MakeCode(0x479057);
MakeCode(0x479064);
MakeCode(0x479072);
MakeCode(0x479077);
MakeFunction(0x478FD8, 0x47907E);
MakeCode(0x479080);
MakeCode(0x4790B4);
MakeCode(0x479114);
MakeCode(0x47911D);
MakeCode(0x47912A);
MakeCode(0x479138);
MakeCode(0x47913D);
MakeFunction(0x479080, 0x479145);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x479150, -1);
MakeDword(0x47914C);
MakeDword(0x479148);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x479160, -1);
MakeDword(0x47915C);
MakeDword(0x479158);
MakeCode(0x479168);
MakeCode(0x4791C0);
MakeCode(0x4791E2);
MakeCode(0x4791F0);
MakeCode(0x4791F9);
MakeCode(0x479206);
MakeCode(0x47924F);
MakeCode(0x47925C);
MakeCode(0x479272);
MakeCode(0x479277);
MakeFunction(0x479168, 0x47927F);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x479288, -1);
MakeDword(0x479284);
MakeDword(0x479280);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x479298, -1);
MakeDword(0x479294);
MakeDword(0x479290);
MakeCode(0x4792A0);
MakeCode(0x4792FD);
MakeCode(0x47930A);
MakeCode(0x47930B);
MakeCode(0x479310);
MakeFunction(0x4792A0, 0x479314);
MakeUnkn(0x479314, 1);
MakeNameEx(0x479314, "RTTI_479314_Enumeration_TMyPageSetupFlags", 0);
MakeDword(0x479314);
MakeUnkn(0x479318, 1);
MakeNameEx(0x479318, "", 0);
MakeByte(0x479318);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x479319, 0x47932B);
MakeByte(0x47932B);
MakeDword(0x47932C);
MakeDword(0x479330);
MakeDword(0x479334);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x479338, 0x47934C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x47934C, 0x47935D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x47935D, 0x479367);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x479367, 0x479374);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x479374, 0x479389);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x479389, 0x479398);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x479398, 0x4793A9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4793A9, 0x4793C3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4793C3, 0x4793D9);
MakeUnkn(0x4793E8, 1);
MakeNameEx(0x4793E8, "RTTI_4793E8_Set_TMyPageSetupOptions", 0);
MakeDword(0x4793E8);
MakeUnkn(0x4793EC, 1);
MakeNameEx(0x4793EC, "", 0);
MakeByte(0x4793EC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4793ED, 0x479401);
MakeByte(0x479401);
MakeDword(0x479402);
MakeUnkn(0x479408, 1);
MakeNameEx(0x479408, "VMT_479408_TMyPageSetupDialog", 0);
MakeDword(0x479408);
MakeDword(0x47940C);
MakeDword(0x479410);
MakeDword(0x479414);
MakeDword(0x479418);
MakeDword(0x47941C);
MakeDword(0x479420);
MakeDword(0x479424);
MakeDword(0x479428);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x479498, 0x4794AB);
MakeDword(0x47942C);
MakeDword(0x479430);
MakeDword(0x479434);
MakeDword(0x479438);
MakeDword(0x47943C);
MakeDword(0x479440);
MakeDword(0x479444);
MakeDword(0x479448);
MakeDword(0x47944C);
MakeDword(0x479450);
MakeComm(0x479454, "'+0'");
MakeDword(0x479454);
MakeComm(0x479458, "'+4'");
MakeDword(0x479458);
MakeComm(0x47945C, "'+8'");
MakeDword(0x47945C);
MakeComm(0x479460, "'+C'");
MakeDword(0x479460);
MakeComm(0x479464, "'+10'");
MakeDword(0x479464);
MakeComm(0x479468, "'+14'");
MakeDword(0x479468);
MakeComm(0x47946C, "'+18'");
MakeDword(0x47946C);
MakeComm(0x479470, "'+1C'");
MakeDword(0x479470);
MakeComm(0x479474, "'+20'");
MakeDword(0x479474);
MakeComm(0x479478, "'+24'");
MakeDword(0x479478);
MakeComm(0x47947C, "'+28'");
MakeDword(0x47947C);
MakeComm(0x479480, "'+2C'");
MakeDword(0x479480);
MakeComm(0x479484, "'+30'");
MakeDword(0x479484);
MakeComm(0x479488, "'+34'");
MakeDword(0x479488);
MakeComm(0x47948C, "'+38'");
MakeDword(0x47948C);
MakeComm(0x479490, "'+3C'");
MakeDword(0x479490);
MakeComm(0x479494, "'+40'");
MakeDword(0x479494);
MakeUnkn(0x4794AC, 1);
MakeNameEx(0x4794AC, "RTTI_4794AC_Class_TMyPageSetupDialog", 0);
MakeDword(0x4794AC);
MakeUnkn(0x4794B0, 1);
MakeNameEx(0x4794B0, "", 0);
MakeByte(0x4794B0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4794B1, 0x4794C4);
MakeDword(0x4794C4);
MakeDword(0x4794C8);
MakeWord(0x4794CC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4794CE, 0x4794DA);
MakeWord(0x4794DA);
MakeDword(0x4794DC);
MakeDword(0x4794E0);
MakeDword(0x4794E4);
MakeDword(0x4794E8);
MakeDword(0x4794EC);
MakeDword(0x4794F0);
MakeWord(0x4794F4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4794F6, 0x4794FE);
MakeDword(0x4794FE);
MakeDword(0x479502);
MakeDword(0x479506);
MakeDword(0x47950A);
MakeDword(0x47950E);
MakeDword(0x479512);
MakeWord(0x479516);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x479518, 0x479523);
MakeDword(0x479523);
MakeDword(0x479527);
MakeDword(0x47952B);
MakeDword(0x47952F);
MakeDword(0x479533);
MakeDword(0x479537);
MakeWord(0x47953B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x47953D, 0x479549);
MakeDword(0x479549);
MakeDword(0x47954D);
MakeDword(0x479551);
MakeDword(0x479555);
MakeDword(0x479559);
MakeDword(0x47955D);
MakeWord(0x479561);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x479563, 0x47956D);
MakeDword(0x47956D);
MakeDword(0x479571);
MakeDword(0x479575);
MakeDword(0x479579);
MakeDword(0x47957D);
MakeDword(0x479581);
MakeWord(0x479585);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x479587, 0x479594);
MakeDword(0x479594);
MakeDword(0x479598);
MakeDword(0x47959C);
MakeDword(0x4795A0);
MakeDword(0x4795A4);
MakeDword(0x4795A8);
MakeWord(0x4795AC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4795AE, 0x4795BC);
MakeDword(0x4795BC);
MakeDword(0x4795C0);
MakeDword(0x4795C4);
MakeDword(0x4795C8);
MakeDword(0x4795CC);
MakeDword(0x4795D0);
MakeWord(0x4795D4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4795D6, 0x4795E5);
MakeDword(0x4795E5);
MakeDword(0x4795E9);
MakeDword(0x4795ED);
MakeDword(0x4795F1);
MakeDword(0x4795F5);
MakeDword(0x4795F9);
MakeWord(0x4795FD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4795FF, 0x47960C);
MakeDword(0x47960C);
MakeDword(0x479610);
MakeDword(0x479614);
MakeDword(0x479618);
MakeDword(0x47961C);
MakeDword(0x479620);
MakeWord(0x479624);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x479626, 0x479636);
MakeCode(0x479638);
MakeComm(0x47964E, "'TApplication.FMainForm:TForm'");
MakeCode(0x479664);
MakeCode(0x479674);
MakeCode(0x4796BC);
MakeFunction(0x479638, 0x4796CE);
MakeCode(0x4796D0);
MakeCode(0x4796E7);
MakeFunction(0x4796D0, 0x4796EE);
MakeCode(0x4796F0);
MakeCode(0x4797C2);
MakeCode(0x4797CF);
MakeCode(0x4797DB);
MakeCode(0x4797E0);
MakeCode(0x4797E2);
MakeFunction(0x4796F0, 0x4797E9);
MakeCode(0x4797EC);
MakeCode(0x479838);
MakeCode(0x479845);
MakeCode(0x479858);
MakeCode(0x47985D);
MakeFunction(0x4797EC, 0x479866);
MakeCode(0x479868);
MakeCode(0x4798CA);
MakeCode(0x4798D7);
MakeCode(0x4798EA);
MakeCode(0x4798EF);
MakeCode(0x4798F1);
MakeCode(0x4798F6);
MakeFunction(0x479868, 0x4798FF);
MakeUnkn(0x479900, 1);
MakeNameEx(0x479900, "TMyPageSetupDialog.Create", 0x20);
MakeComm(0x479900, "'constructor TMyPageSetupDialog.Create(AOwner:TComponent);'");
MakeCode(0x479900);
MakeCode(0x47990E);
MakeComm(0x47991B, "'0x81'");
MakeCode(0x47993E);
MakeFunction(0x479900, 0x479943);
MakeByte(0x479944);
MakeUnkn(0x479944, 1);
MakeNameEx(0x479944, "gvar_00479944", 0);
MakeUnkn(0x479948, 1);
MakeNameEx(0x479948, "TMyPageSetupDialog.Execute", 0x20);
MakeComm(0x479948, "'procedure TMyPageSetupDialog.Execute;'");
MakeCode(0x479948);
MakeComm(0x47996F, "'TApplication.FHandle:HWND'");
MakeComm(0x47998A, "'TMyPageSetupDialog.?f64:dword'");
MakeComm(0x479995, "'TMyPageSetupDialog.MinMarginBottom:Integer'");
MakeComm(0x4799A1, "'TMyPageSetupDialog.MinMarginRight:Integer'");
MakeComm(0x4799A4, "'TMyPageSetupDialog.MinMarginTop:Integer'");
MakeComm(0x4799AA, "'TMyPageSetupDialog.MinMarginLeft:Integer'");
MakeComm(0x4799C1, "'TMyPageSetupDialog.MarginBottom:Integer'");
MakeComm(0x4799CA, "'TMyPageSetupDialog.MarginRight:Integer'");
MakeComm(0x4799CD, "'TMyPageSetupDialog.MarginTop:Integer'");
MakeComm(0x4799D0, "'TMyPageSetupDialog.MarginLeft:Integer'");
MakeComm(0x4799F9, "'TCommonDialog.TaskModalDialog'");
MakeComm(0x479A14, "'TMyPageSetupDialog.MarginLeft:Integer'");
MakeComm(0x479A1A, "'TMyPageSetupDialog.MarginRight:Integer'");
MakeComm(0x479A20, "'TMyPageSetupDialog.MarginTop:Integer'");
MakeComm(0x479A26, "'TMyPageSetupDialog.MarginBottom:Integer'");
MakeComm(0x479A2C, "'TMyPageSetupDialog.MinMarginLeft:Integer'");
MakeComm(0x479A32, "'TMyPageSetupDialog.MinMarginRight:Integer'");
MakeComm(0x479A38, "'TMyPageSetupDialog.MinMarginTop:Integer'");
MakeComm(0x479A41, "'TMyPageSetupDialog.MinMarginBottom:Integer'");
MakeCode(0x479A49);
MakeCode(0x479A56);
MakeCode(0x479A63);
MakeFunction(0x479948, 0x479A6C);
MakeUnkn(0x479A6C, 1);
MakeNameEx(0x479A6C, "TMyPageSetupDialog.SetOptions", 0x20);
MakeComm(0x479A6C, "'procedure TMyPageSetupDialog.SetOptions(Value:TMyPageSetupOptions);'");
MakeCode(0x479A6C);
MakeComm(0x479A7B, "'TMyPageSetupDialog.Options:TMyPageSetupOptions'");
MakeComm(0x479A81, "'0x8'");
MakeCode(0x479A92);
MakeComm(0x479A98, "'TMyPageSetupDialog.Options:TMyPageSetupOptions'");
MakeComm(0x479A9E, "'0x1'");
MakeCode(0x479AAF);
MakeComm(0x479AB5, "'TMyPageSetupDialog.Options:TMyPageSetupOptions'");
MakeComm(0x479ABB, "'0x100'");
MakeCode(0x479ACC);
MakeComm(0x479AD3, "'TMyPageSetupDialog.?f61:byte'");
MakeComm(0x479AD9, "'0x80'");
MakeCode(0x479AEA);
MakeComm(0x479AEE, "'TMyPageSetupDialog.Options:TMyPageSetupOptions'");
MakeComm(0x479AF4, "'TMyPageSetupDialog.?f64:dword'");
MakeCode(0x479AFE);
MakeComm(0x479B08, "'TMyPageSetupDialog.Options:TMyPageSetupOptions'");
MakeCode(0x479B0C);
MakeComm(0x479B10, "'TMyPageSetupDialog.?f64:dword'");
MakeCode(0x479B13);
MakeFunction(0x479A6C, 0x479B1F);
MakeByte(0x479B20);
MakeUnkn(0x479B20, 1);
MakeNameEx(0x479B20, "gvar_00479B20", 0);
MakeByte(0x479B24);
MakeUnkn(0x479B24, 1);
MakeNameEx(0x479B24, "gvar_00479B24", 0);
MakeByte(0x479B28);
MakeUnkn(0x479B28, 1);
MakeNameEx(0x479B28, "gvar_00479B28", 0);
MakeByte(0x479B2C);
MakeUnkn(0x479B2C, 1);
MakeNameEx(0x479B2C, "gvar_00479B2C", 0);
MakeUnkn(0x479B30, 1);
MakeNameEx(0x479B30, "VMT_479B30_TVirtualMemory", 0);
MakeDword(0x479B30);
MakeDword(0x479B34);
MakeDword(0x479B38);
MakeDword(0x479B3C);
MakeDword(0x479B40);
MakeDword(0x479B44);
MakeDword(0x479B48);
MakeDword(0x479B4C);
MakeDword(0x479B50);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x479B7C, 0x479B8B);
MakeDword(0x479B54);
MakeDword(0x479B58);
MakeDword(0x479B5C);
MakeDword(0x479B60);
MakeDword(0x479B64);
MakeDword(0x479B68);
MakeDword(0x479B6C);
MakeDword(0x479B70);
MakeDword(0x479B74);
MakeDword(0x479B78);
MakeUnkn(0x479B8C, 1);
MakeNameEx(0x479B8C, "TVirtualMemory.Create", 0x20);
MakeComm(0x479B8C, "'constructor TVirtualMemory.Create;'");
MakeCode(0x479B8C);
MakeCode(0x479BA1);
MakeCode(0x479BEB);
MakeCode(0x479C12);
MakeFunction(0x479B8C, 0x479C1B);
MakeCode(0x479C78);
MakeFunction(0x479C78, 0x479C90);
MakeCode(0x479C90);
MakeComm(0x479CC2, "'Exception.Create'");
MakeCode(0x479CCC);
MakeCode(0x479D09);
MakeCode(0x479D22);
MakeFunction(0x479C90, 0x479D35);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x479D40, -1);
MakeDword(0x479D3C);
MakeDword(0x479D38);
MakeUnkn(0x479D88, 1);
MakeNameEx(0x479D88, "VMT_479D88_EZlibError", 0);
MakeDword(0x479D88);
MakeDword(0x479D8C);
MakeDword(0x479D90);
MakeDword(0x479D94);
MakeDword(0x479D98);
MakeDword(0x479D9C);
MakeDword(0x479DA0);
MakeDword(0x479DA4);
MakeDword(0x479DA8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x479DD4, 0x479DDF);
MakeDword(0x479DAC);
MakeDword(0x479DB0);
MakeDword(0x479DB4);
MakeDword(0x479DB8);
MakeDword(0x479DBC);
MakeDword(0x479DC0);
MakeDword(0x479DC4);
MakeDword(0x479DC8);
MakeDword(0x479DCC);
MakeDword(0x479DD0);
MakeUnkn(0x479DE0, 1);
MakeNameEx(0x479DE0, "VMT_479DE0_EZlibDataError", 0);
MakeDword(0x479DE0);
MakeDword(0x479DE4);
MakeDword(0x479DE8);
MakeDword(0x479DEC);
MakeDword(0x479DF0);
MakeDword(0x479DF4);
MakeDword(0x479DF8);
MakeDword(0x479DFC);
MakeDword(0x479E00);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x479E2C, 0x479E3B);
MakeDword(0x479E04);
MakeDword(0x479E08);
MakeDword(0x479E0C);
MakeDword(0x479E10);
MakeDword(0x479E14);
MakeDword(0x479E18);
MakeDword(0x479E1C);
MakeDword(0x479E20);
MakeDword(0x479E24);
MakeDword(0x479E28);
MakeUnkn(0x479E3C, 1);
MakeNameEx(0x479E3C, "VMT_479E3C_EZlibInternalError", 0);
MakeDword(0x479E3C);
MakeDword(0x479E40);
MakeDword(0x479E44);
MakeDword(0x479E48);
MakeDword(0x479E4C);
MakeDword(0x479E50);
MakeDword(0x479E54);
MakeDword(0x479E58);
MakeDword(0x479E5C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x479E88, 0x479E9B);
MakeDword(0x479E60);
MakeDword(0x479E64);
MakeDword(0x479E68);
MakeDword(0x479E6C);
MakeDword(0x479E70);
MakeDword(0x479E74);
MakeDword(0x479E78);
MakeDword(0x479E7C);
MakeDword(0x479E80);
MakeDword(0x479E84);
MakeCode(0x479E9C);
MakeFunction(0x479E9C, 0x479EB0);
MakeCode(0x479EB0);
MakeFunction(0x479EB0, 0x479EC3);
MakeCode(0x479EC4);
MakeCode(0x479EE3);
MakeCode(0x479EED);
MakeCode(0x479EF9);
MakeFunction(0x479EC4, 0x479F00);
MakeCode(0x479F08);
MakeCode(0x479F15);
MakeFunction(0x479F08, 0x479F19);
MakeCode(0x479F1C);
MakeFunction(0x479F1C, 0x479F3D);
MakeCode(0x479F40);
MakeComm(0x479F9E, "'EZlibInternalError.Create'");
MakeCode(0x479FA8);
MakeFunction(0x479F40, 0x479FC1);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x479FD4, -1);
MakeDword(0x479FD0);
MakeDword(0x479FCC);
MakeCode(0x479FF4);
MakeCode(0x47A004);
MakeCode(0x47A014);
MakeCode(0x47A03C);
MakeFunction(0x479FF4, 0x47A03E);
MakeCode(0x47A040);
MakeCode(0x47A057);
MakeComm(0x47A086, "'EZlibInternalError.Create'");
MakeCode(0x47A090);
MakeCode(0x47A0A2);
MakeFunction(0x47A040, 0x47A0A7);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x47A0B0, -1);
MakeDword(0x47A0AC);
MakeDword(0x47A0A8);
MakeCode(0x47A0D0);
MakeCode(0x47A0D7);
MakeComm(0x47A10E, "'EZlibInternalError.Create'");
MakeCode(0x47A118);
MakeComm(0x47A15A, "'EZlibInternalError.Create'");
MakeCode(0x47A164);
MakeFunction(0x47A0D0, 0x47A169);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x47A174, -1);
MakeDword(0x47A170);
MakeDword(0x47A16C);
MakeCode(0x47A194);
MakeFunction(0x47A194, 0x47A19F);
MakeCode(0x47A1A0);
MakeComm(0x47A201, "'EZlibInternalError.Create'");
MakeCode(0x47A20B);
MakeFunction(0x47A1A0, 0x47A211);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x47A224, -1);
MakeDword(0x47A220);
MakeDword(0x47A21C);
MakeCode(0x47A244);
MakeCode(0x47A263);
MakeCode(0x47A282);
MakeComm(0x47A29E, "'EZlibDataError.Create'");
MakeCode(0x47A2A8);
MakeCode(0x47A2BA);
MakeCode(0x47A2E4);
MakeCode(0x47A2ED);
MakeComm(0x47A2F9, "'EZlibDataError.Create'");
MakeCode(0x47A305);
MakeComm(0x47A321, "'EZlibInternalError.Create'");
MakeCode(0x47A32B);
MakeCode(0x47A341);
MakeFunction(0x47A244, 0x47A351);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x47A35C, -1);
MakeDword(0x47A358);
MakeDword(0x47A354);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x47A388, -1);
MakeDword(0x47A384);
MakeDword(0x47A380);
MakeCode(0x47A3A8);
MakeComm(0x47A3CC, "'EZlibDataError.Create'");
MakeCode(0x47A3D6);
MakeFunction(0x47A3A8, 0x47A3DA);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x47A3E4, -1);
MakeDword(0x47A3E0);
MakeDword(0x47A3DC);
MakeCode(0x47A408);
MakeComm(0x47A42A, "'EZlibDataError.Create'");
MakeCode(0x47A434);
MakeFunction(0x47A408, 0x47A437);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x47A440, -1);
MakeDword(0x47A43C);
MakeDword(0x47A438);
MakeCode(0x47A464);
MakeFunction(0x47A464, 0x47A484);
MakeCode(0x47A484);
MakeCode(0x47A4B8);
MakeCode(0x47A4C8);
MakeCode(0x47A4D4);
MakeCode(0x47A4E2);
MakeCode(0x47A4E9);
MakeCode(0x47A4F2);
MakeCode(0x47A509);
MakeCode(0x47A522);
MakeCode(0x47A52E);
MakeCode(0x47A539);
MakeCode(0x47A5F8);
MakeCode(0x47A609);
MakeCode(0x47A6A9);
MakeCode(0x47A6B2);
MakeCode(0x47A6D5);
MakeCode(0x47A6DC);
MakeFunction(0x47A484, 0x47A6E1);
MakeCode(0x47A78C);
MakeFunction(0x47A78C, 0x47A7A8);
MakeCode(0x47A7A8);
MakeComm(0x47A7C8, "'0x31'");
MakeCode(0x47A7D6);
MakeCode(0x47A7E0);
MakeCode(0x47A7EE);
MakeCode(0x47A803);
MakeCode(0x47A813);
MakeCode(0x47A820);
MakeCode(0x47A82E);
MakeCode(0x47A864);
MakeCode(0x47A86E);
MakeCode(0x47A87B);
MakeCode(0x47A89B);
MakeCode(0x47A967);
MakeCode(0x47A984);
MakeCode(0x47A9C7);
MakeFunction(0x47A7A8, 0x47A9CF);
MakeCode(0x47AADC);
MakeCode(0x47AAF6);
MakeCode(0x47AAFE);
MakeCode(0x47AB2C);
MakeCode(0x47AB39);
MakeCode(0x47AB3E);
MakeFunction(0x47AADC, 0x47AB67);
MakeCode(0x47AD10);
MakeFunction(0x47AD10, 0x47AD37);
MakeCode(0x47AD38);
MakeCode(0x47AD4B);
MakeCode(0x47AD86);
MakeFunction(0x47AD38, 0x47AD89);
MakeCode(0x47AD8C);
MakeCode(0x47ADA8);
MakeCode(0x47ADB2);
MakeCode(0x47ADC6);
MakeCode(0x47ADD4);
MakeCode(0x47ADE6);
MakeCode(0x47ADFF);
MakeCode(0x47AE32);
MakeCode(0x47AE36);
MakeCode(0x47AE48);
MakeCode(0x47AE54);
MakeCode(0x47AE59);
MakeCode(0x47AE67);
MakeCode(0x47AEB0);
MakeCode(0x47AEBE);
MakeCode(0x47AEDF);
MakeCode(0x47AF01);
MakeCode(0x47AF23);
MakeCode(0x47AF44);
MakeCode(0x47AF69);
MakeCode(0x47AF70);
MakeCode(0x47AF7C);
MakeCode(0x47AF89);
MakeCode(0x47AF90);
MakeCode(0x47AFA4);
MakeCode(0x47AFD8);
MakeCode(0x47AFF0);
MakeCode(0x47AFF9);
MakeCode(0x47B006);
MakeCode(0x47B036);
MakeCode(0x47B040);
MakeCode(0x47B045);
MakeFunction(0x47AD8C, 0x47B04B);
MakeCode(0x47B04C);
MakeCode(0x47B05A);
MakeCode(0x47B062);
MakeCode(0x47B096);
MakeCode(0x47B0A8);
MakeCode(0x47B0BA);
MakeCode(0x47B0CC);
MakeCode(0x47B0DE);
MakeCode(0x47B0F8);
MakeCode(0x47B0FA);
MakeFunction(0x47B04C, 0x47B0FD);
MakeCode(0x47B2E4);
MakeFunction(0x47B2E4, 0x47B390);
MakeCode(0x47BF0C);
MakeCode(0x47BF16);
MakeCode(0x47BF1C);
MakeFunction(0x47BF0C, 0x47BF7B);
MakeCode(0x47BFC8);
MakeComm(0x47BFD8, "'0x31'");
MakeCode(0x47BFE6);
MakeCode(0x47BFF0);
MakeCode(0x47BFFE);
MakeCode(0x47C010);
MakeCode(0x47C01D);
MakeCode(0x47C038);
MakeCode(0x47C04B);
MakeCode(0x47C055);
MakeCode(0x47C061);
MakeCode(0x47C075);
MakeCode(0x47C087);
MakeFunction(0x47BFC8, 0x47C08D);
MakeCode(0x47C090);
MakeFunction(0x47C090, 0x47C09E);
MakeCode(0x47C0A0);
MakeFunction(0x47C0A0, 0x47C0BD);
MakeCode(0x47C0C0);
MakeCode(0x47C103);
MakeCode(0x47C120);
MakeCode(0x47C153);
MakeCode(0x47C161);
MakeCode(0x47C1A2);
MakeCode(0x47C1B2);
MakeCode(0x47C1BD);
MakeCode(0x47C1BF);
MakeFunction(0x47C0C0, 0x47C1C4);
MakeCode(0x47C1C4);
MakeCode(0x47C1FB);
MakeCode(0x47C205);
MakeCode(0x47C216);
MakeCode(0x47C251);
MakeCode(0x47C2DB);
MakeCode(0x47C2EC);
MakeCode(0x47C2F1);
MakeCode(0x47C310);
MakeCode(0x47C347);
MakeCode(0x47C368);
MakeCode(0x47C394);
MakeCode(0x47C3C2);
MakeCode(0x47C3C7);
MakeCode(0x47C3D6);
MakeCode(0x47C3DB);
MakeCode(0x47C3FA);
MakeCode(0x47C449);
MakeCode(0x47C482);
MakeCode(0x47C49C);
MakeCode(0x47C4A7);
MakeCode(0x47C4C8);
MakeCode(0x47C4CD);
MakeCode(0x47C4EC);
MakeCode(0x47C511);
MakeCode(0x47C519);
MakeCode(0x47C528);
MakeCode(0x47C530);
MakeCode(0x47C540);
MakeCode(0x47C54D);
MakeCode(0x47C55F);
MakeCode(0x47C57E);
MakeCode(0x47C5AD);
MakeCode(0x47C5BE);
MakeCode(0x47C5D6);
MakeCode(0x47C5E8);
MakeCode(0x47C62A);
MakeCode(0x47C635);
MakeCode(0x47C63A);
MakeCode(0x47C659);
MakeCode(0x47C6A8);
MakeCode(0x47C6BD);
MakeCode(0x47C6CA);
MakeCode(0x47C6CF);
MakeCode(0x47C6EE);
MakeCode(0x47C712);
MakeCode(0x47C71C);
MakeCode(0x47C731);
MakeCode(0x47C788);
MakeCode(0x47C798);
MakeCode(0x47C7D7);
MakeCode(0x47C7E1);
MakeCode(0x47C7FB);
MakeCode(0x47C82A);
MakeCode(0x47C834);
MakeCode(0x47C84E);
MakeCode(0x47C886);
MakeCode(0x47C8A9);
MakeCode(0x47C8B3);
MakeCode(0x47C8CD);
MakeCode(0x47C904);
MakeCode(0x47C91E);
MakeCode(0x47C953);
MakeCode(0x47C976);
MakeCode(0x47C981);
MakeCode(0x47C98E);
MakeCode(0x47C99D);
MakeCode(0x47C9F8);
MakeCode(0x47CA4B);
MakeCode(0x47CA51);
MakeCode(0x47CAC3);
MakeCode(0x47CB02);
MakeCode(0x47CB18);
MakeCode(0x47CB77);
MakeCode(0x47CB87);
MakeCode(0x47CBB1);
MakeCode(0x47CBC3);
MakeCode(0x47CBDF);
MakeCode(0x47CBF1);
MakeCode(0x47CBF9);
MakeCode(0x47CC13);
MakeCode(0x47CC34);
MakeCode(0x47CC3A);
MakeCode(0x47CC79);
MakeCode(0x47CC88);
MakeCode(0x47CCE7);
MakeCode(0x47CCF7);
MakeCode(0x47CD23);
MakeCode(0x47CD3D);
MakeCode(0x47CD45);
MakeCode(0x47CD5F);
MakeCode(0x47CD80);
MakeCode(0x47CDA5);
MakeCode(0x47CDAB);
MakeCode(0x47CDEF);
MakeCode(0x47CDF6);
MakeCode(0x47CE08);
MakeCode(0x47CE16);
MakeCode(0x47CE28);
MakeCode(0x47CE37);
MakeCode(0x47CE5F);
MakeCode(0x47CE86);
MakeCode(0x47CE95);
MakeCode(0x47CEB4);
MakeCode(0x47CEF1);
MakeCode(0x47CF4C);
MakeCode(0x47CF54);
MakeCode(0x47CF5A);
MakeCode(0x47CF64);
MakeCode(0x47CF6E);
MakeCode(0x47CF78);
MakeCode(0x47CF82);
MakeCode(0x47CFC2);
MakeCode(0x47CFE2);
MakeCode(0x47D03D);
MakeCode(0x47D04A);
MakeCode(0x47D04C);
MakeCode(0x47D05B);
MakeCode(0x47D05D);
MakeCode(0x47D073);
MakeCode(0x47D07A);
MakeCode(0x47D089);
MakeCode(0x47D08D);
MakeFunction(0x47C1C4, 0x47D095);
MakeCode(0x47D098);
MakeCode(0x47D0AB);
MakeCode(0x47D0B2);
MakeCode(0x47D0C4);
MakeFunction(0x47D098, 0x47D0D6);
MakeCode(0x47D434);
MakeCode(0x47D44E);
MakeCode(0x47D468);
MakeCode(0x47D478);
MakeCode(0x47D48A);
MakeCode(0x47D49C);
MakeCode(0x47D4AA);
MakeCode(0x47D4E8);
MakeCode(0x47D4F5);
MakeCode(0x47D50B);
MakeCode(0x47D519);
MakeCode(0x47D528);
MakeCode(0x47D53B);
MakeCode(0x47D557);
MakeCode(0x47D55F);
MakeCode(0x47D57B);
MakeCode(0x47D5A4);
MakeCode(0x47D5CC);
MakeCode(0x47D5D5);
MakeCode(0x47D5E1);
MakeCode(0x47D5F3);
MakeCode(0x47D618);
MakeCode(0x47D62D);
MakeCode(0x47D67B);
MakeCode(0x47D684);
MakeCode(0x47D6A5);
MakeCode(0x47D6C0);
MakeCode(0x47D6CA);
MakeCode(0x47D6E9);
MakeCode(0x47D712);
MakeCode(0x47D714);
MakeCode(0x47D725);
MakeCode(0x47D727);
MakeCode(0x47D759);
MakeCode(0x47D77F);
MakeCode(0x47D799);
MakeCode(0x47D7A7);
MakeCode(0x47D7B1);
MakeCode(0x47D7D6);
MakeCode(0x47D7FF);
MakeCode(0x47D80F);
MakeCode(0x47D826);
MakeCode(0x47D84F);
MakeCode(0x47D86C);
MakeCode(0x47D86E);
MakeCode(0x47D87F);
MakeCode(0x47D881);
MakeCode(0x47D885);
MakeCode(0x47D89A);
MakeFunction(0x47D434, 0x47D8A3);
MakeCode(0x47D8A4);
MakeFunction(0x47D8A4, 0x47D8A5);
MakeCode(0x47D8A8);
MakeFunction(0x47D8A8, 0x47D916);
MakeCode(0x47D918);
MakeCode(0x47D920);
MakeCode(0x47D939);
MakeCode(0x47D94F);
MakeFunction(0x47D918, 0x47D983);
MakeCode(0x47E9E0);
MakeCode(0x47EA70);
MakeCode(0x47EA86);
MakeFunction(0x47E9E0, 0x47EA9B);
MakeCode(0x47EA9C);
MakeCode(0x47EB27);
MakeCode(0x47EB41);
MakeCode(0x47EBCD);
MakeCode(0x47EBEB);
MakeCode(0x47EC8C);
MakeCode(0x47ECA6);
MakeCode(0x47ED32);
MakeCode(0x47ED50);
MakeCode(0x47ED57);
MakeFunction(0x47EA9C, 0x47ED65);
MakeCode(0x47F568);
MakeCode(0x47F5B0);
MakeCode(0x47F5DA);
MakeFunction(0x47F568, 0x47F5DC);
MakeCode(0x47F5DC);
MakeCode(0x47F613);
MakeCode(0x47F62E);
MakeFunction(0x47F5DC, 0x47F641);
MakeCode(0x47F644);
MakeCode(0x47F6C1);
MakeCode(0x47F6D0);
MakeFunction(0x47F644, 0x47F6E0);
MakeCode(0x47F7A8);
MakeCode(0x47F876);
MakeCode(0x47F8B3);
MakeCode(0x47F8C6);
MakeCode(0x47F8EA);
MakeCode(0x47F922);
MakeCode(0x47F93C);
MakeCode(0x47F977);
MakeCode(0x47F98A);
MakeCode(0x47F9F2);
MakeCode(0x47FA3F);
MakeCode(0x47FA59);
MakeCode(0x47FA68);
MakeCode(0x47FA84);
MakeCode(0x47FA9E);
MakeCode(0x47FAAD);
MakeCode(0x47FABB);
MakeCode(0x47FAC8);
MakeCode(0x47FACD);
MakeCode(0x47FAE7);
MakeCode(0x47FB09);
MakeCode(0x47FB0D);
MakeCode(0x47FB49);
MakeCode(0x47FB76);
MakeCode(0x47FB8C);
MakeCode(0x47FBB9);
MakeCode(0x47FBCD);
MakeCode(0x47FBE3);
MakeCode(0x47FBF7);
MakeCode(0x47FC43);
MakeCode(0x47FC52);
MakeCode(0x47FC6B);
MakeCode(0x47FC76);
MakeFunction(0x47F7A8, 0x47FC99);
MakeCode(0x47FC9C);
MakeCode(0x47FCA4);
MakeCode(0x47FCAB);
MakeCode(0x47FCB8);
MakeCode(0x47FCBA);
MakeFunction(0x47FC9C, 0x47FCCD);
MakeCode(0x47FCD0);
MakeCode(0x47FCD8);
MakeCode(0x47FCFD);
MakeFunction(0x47FCD0, 0x47FD00);
MakeCode(0x47FD00);
MakeFunction(0x47FD00, 0x47FD18);
MakeCode(0x47FD18);
MakeCode(0x47FD2F);
MakeCode(0x47FD3C);
MakeCode(0x47FD3D);
MakeCode(0x47FD42);
MakeFunction(0x47FD18, 0x47FD46);
MakeCode(0x47FD48);
MakeCode(0x47FD52);
MakeCode(0x47FD73);
MakeComm(0x47FDA8, "'Exception.Create'");
MakeCode(0x47FDB2);
MakeCode(0x47FDC7);
MakeCode(0x47FDDB);
MakeComm(0x47FDF4, "'Exception.Create'");
MakeCode(0x47FDFE);
MakeCode(0x47FE19);
MakeFunction(0x47FD48, 0x47FE37);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x47FE40, -1);
MakeDword(0x47FE3C);
MakeDword(0x47FE38);
MakeCode(0x47FE54);
MakeCode(0x47FE5E);
MakeCode(0x47FE7F);
MakeComm(0x47FEB4, "'Exception.Create'");
MakeCode(0x47FEBE);
MakeCode(0x47FED3);
MakeCode(0x47FEE7);
MakeComm(0x47FF00, "'Exception.Create'");
MakeCode(0x47FF0A);
MakeCode(0x47FF25);
MakeFunction(0x47FE54, 0x47FF43);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x47FF4C, -1);
MakeDword(0x47FF48);
MakeDword(0x47FF44);
MakeCode(0x47FF60);
MakeCode(0x47FF6A);
MakeCode(0x47FF9F);
MakeCode(0x47FFD1);
MakeCode(0x47FFE6);
MakeCode(0x47FFF7);
MakeCode(0x47FFFF);
MakeCode(0x480036);
MakeCode(0x48004E);
MakeCode(0x480063);
MakeCode(0x48007C);
MakeCode(0x4800A8);
MakeFunction(0x47FF60, 0x4800B3);
MakeUnkn(0x4800B4, 1);
MakeNameEx(0x4800B4, "winmm.midiOutClose", 0x20);
MakeComm(0x4800B4, "'function winmm.midiOutClose:UINT; stdcall;'");
MakeCode(0x4800B4);
MakeFunction(0x4800B4, 0x4800BA);
MakeUnkn(0x4800BC, 1);
MakeNameEx(0x4800BC, "winmm.midiOutGetDevCapsA", 0x20);
MakeComm(0x4800BC, "'function winmm.midiOutGetDevCapsA(lpCaps:PMidiOutCapsA; uSize:UINT):UINT; stdcall;'");
MakeCode(0x4800BC);
MakeFunction(0x4800BC, 0x4800C2);
MakeUnkn(0x4800C4, 1);
MakeNameEx(0x4800C4, "winmm.midiOutGetErrorTextA", 0x20);
MakeComm(0x4800C4, "'function winmm.midiOutGetErrorTextA(pszText:PAnsiChar; uSize:UINT):UINT; stdcall;'");
MakeCode(0x4800C4);
MakeFunction(0x4800C4, 0x4800CA);
MakeUnkn(0x4800CC, 1);
MakeNameEx(0x4800CC, "winmm.midiOutGetNumDevs", 0x20);
MakeComm(0x4800CC, "'function winmm.midiOutGetNumDevs:UINT;'");
MakeCode(0x4800CC);
MakeFunction(0x4800CC, 0x4800D2);
MakeUnkn(0x4800D4, 1);
MakeNameEx(0x4800D4, "winmm.midiOutOpen", 0x20);
MakeComm(0x4800D4, "'function winmm.midiOutOpen(uDeviceID:UINT; dwCallback:DWORD; dwInstance:DWORD; dwFlags:DWORD):UINT; stdcall;'");
MakeCode(0x4800D4);
MakeFunction(0x4800D4, 0x4800DA);
MakeUnkn(0x4800DC, 1);
MakeNameEx(0x4800DC, "winmm.midiOutShortMsg", 0x20);
MakeComm(0x4800DC, "'function winmm.midiOutShortMsg(dwMsg:DWORD):UINT; stdcall;'");
MakeCode(0x4800DC);
MakeFunction(0x4800DC, 0x4800E2);
MakeUnkn(0x4800E4, 1);
MakeNameEx(0x4800E4, "winmm.PlaySoundA", 0x20);
MakeComm(0x4800E4, "'function winmm.PlaySoundA(hmod:HMODULE; fdwSound:DWORD):BOOL; stdcall;'");
MakeCode(0x4800E4);
MakeFunction(0x4800E4, 0x4800EA);
MakeUnkn(0x4800EC, 1);
MakeNameEx(0x4800EC, "winmm.timeBeginPeriod", 0x20);
MakeComm(0x4800EC, "'function winmm.timeBeginPeriod:UINT; stdcall;'");
MakeCode(0x4800EC);
MakeFunction(0x4800EC, 0x4800F2);
MakeUnkn(0x4800F4, 1);
MakeNameEx(0x4800F4, "winmm.timeEndPeriod", 0x20);
MakeComm(0x4800F4, "'function winmm.timeEndPeriod:UINT; stdcall;'");
MakeCode(0x4800F4);
MakeFunction(0x4800F4, 0x4800FA);
MakeUnkn(0x4800FC, 1);
MakeNameEx(0x4800FC, "winmm.timeGetDevCaps", 0x20);
MakeComm(0x4800FC, "'function winmm.timeGetDevCaps(uSize:UINT):UINT; stdcall;'");
MakeCode(0x4800FC);
MakeFunction(0x4800FC, 0x480102);
MakeUnkn(0x480104, 1);
MakeNameEx(0x480104, "winmm.timeGetTime", 0x20);
MakeComm(0x480104, "'function winmm.timeGetTime:DWORD;'");
MakeCode(0x480104);
MakeFunction(0x480104, 0x48010A);
MakeUnkn(0x48010C, 1);
MakeNameEx(0x48010C, "winmm.timeKillEvent", 0x20);
MakeComm(0x48010C, "'function winmm.timeKillEvent:UINT; stdcall;'");
MakeCode(0x48010C);
MakeFunction(0x48010C, 0x480112);
MakeUnkn(0x480114, 1);
MakeNameEx(0x480114, "winmm.timeSetEvent", 0x20);
MakeComm(0x480114, "'function winmm.timeSetEvent(uResolution:UINT; lpFunction:TFNTimeCallBack; dwUser:DWORD; uFlags:UINT):UINT; stdcall;'");
MakeCode(0x480114);
MakeFunction(0x480114, 0x48011A);
MakeByte(0x48011C);
MakeUnkn(0x48011C, 1);
MakeNameEx(0x48011C, "gvar_0048011C", 0);
MakeCode(0x48016C);
MakeCode(0x480183);
MakeCode(0x480190);
MakeCode(0x480191);
MakeCode(0x480196);
MakeFunction(0x48016C, 0x48019A);
MakeCode(0x48019C);
MakeFunction(0x48019C, 0x4801A7);
MakeCode(0x48026C);
MakeCode(0x480293);
MakeCode(0x4802D8);
MakeCode(0x4802E2);
MakeCode(0x480343);
MakeCode(0x48035E);
MakeCode(0x480380);
MakeCode(0x4803DE);
MakeCode(0x480400);
MakeCode(0x48040D);
MakeCode(0x48041B);
MakeCode(0x480420);
MakeCode(0x48042E);
MakeCode(0x480436);
MakeFunction(0x48026C, 0x48043F);
MakeCode(0x480440);
MakeCode(0x480486);
MakeCode(0x480493);
MakeCode(0x4804A1);
MakeCode(0x4804A6);
MakeFunction(0x480440, 0x4804AE);
MakeCode(0x4804B0);
MakeCode(0x4804C7);
MakeCode(0x4804F0);
MakeCode(0x4804F3);
MakeCode(0x4804F6);
MakeFunction(0x4804B0, 0x480505);
MakeCode(0x480508);
MakeCode(0x48051F);
MakeCode(0x480549);
MakeCode(0x48054C);
MakeCode(0x48054F);
MakeFunction(0x480508, 0x48055E);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x480568, -1);
MakeDword(0x480564);
MakeDword(0x480560);
MakeCode(0x48056C);
MakeCode(0x48058D);
MakeCode(0x4805B6);
MakeCode(0x4805F2);
MakeFunction(0x48056C, 0x4805F6);
MakeCode(0x4805F8);
MakeCode(0x48063C);
MakeCode(0x48064C);
MakeCode(0x480659);
MakeCode(0x48066A);
MakeCode(0x48066F);
MakeFunction(0x4805F8, 0x480679);
MakeCode(0x48067C);
MakeCode(0x480684);
MakeCode(0x48069A);
MakeCode(0x4806A5);
MakeCode(0x4806AB);
MakeCode(0x4806BD);
MakeFunction(0x48067C, 0x4806C2);
MakeCode(0x4806C4);
MakeCode(0x4806CF);
MakeCode(0x4806E2);
MakeCode(0x4806F6);
MakeFunction(0x4806C4, 0x4806FC);
MakeCode(0x4806FC);
MakeCode(0x480735);
MakeCode(0x480749);
MakeFunction(0x4806FC, 0x48074F);
MakeCode(0x480750);
MakeComm(0x480763, "'TList.Create'");
MakeCode(0x48076A);
MakeCode(0x480784);
MakeFunction(0x480750, 0x48078A);
MakeCode(0x48078C);
MakeComm(0x48079F, "'TList.Create'");
MakeCode(0x4807A6);
MakeCode(0x4807C2);
MakeFunction(0x48078C, 0x4807C8);
MakeCode(0x4807C8);
MakeCode(0x4807EA);
MakeFunction(0x4807C8, 0x4807EC);
MakeCode(0x4807EC);
MakeCode(0x480864);
MakeCode(0x480868);
MakeCode(0x48088D);
MakeCode(0x48089A);
MakeCode(0x4808A3);
MakeCode(0x4808A8);
MakeFunction(0x4807EC, 0x4808B2);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4808B4, 0x4808CA);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4808CC, 0x4808DA);
MakeCode(0x4808DC);
MakeCode(0x480920);
MakeCode(0x480928);
MakeCode(0x480935);
MakeCode(0x48093C);
MakeFunction(0x4808DC, 0x480941);
MakeCode(0x480944);
MakeCode(0x48095D);
MakeCode(0x480960);
MakeFunction(0x480944, 0x480963);
MakeCode(0x480964);
MakeCode(0x480982);
MakeFunction(0x480964, 0x480985);
MakeCode(0x480988);
MakeCode(0x4809AC);
MakeCode(0x480A01);
MakeFunction(0x480988, 0x480A0A);
MakeCode(0x480A0C);
MakeCode(0x480A55);
MakeCode(0x480AB8);
MakeCode(0x480AC5);
MakeCode(0x480AD3);
MakeCode(0x480AD8);
MakeCode(0x480AE3);
MakeFunction(0x480A0C, 0x480AEA);
MakeCode(0x480AEC);
MakeFunction(0x480AEC, 0x480AFF);
MakeCode(0x480B00);
MakeFunction(0x480B00, 0x480B2D);
MakeCode(0x480B30);
MakeCode(0x480B6A);
MakeCode(0x480B77);
MakeCode(0x480B81);
MakeCode(0x480B86);
MakeFunction(0x480B30, 0x480B90);
MakeCode(0x480B90);
MakeCode(0x480B9E);
MakeCode(0x480BA1);
MakeFunction(0x480B90, 0x480BA4);
MakeCode(0x480BA4);
MakeCode(0x480BBE);
MakeCode(0x480BE3);
MakeFunction(0x480BA4, 0x480BE6);
MakeCode(0x480BE8);
MakeCode(0x480C49);
MakeCode(0x480C4D);
MakeCode(0x480C4F);
MakeFunction(0x480BE8, 0x480C57);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x480C58, 0x480C63);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x480C64, 0x480C74);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x480C74, 0x480C85);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x480C88, 0x480C9A);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x480C9C, 0x480CAC);
MakeCode(0x480CAC);
MakeCode(0x480CBF);
MakeCode(0x480CC2);
MakeFunction(0x480CAC, 0x480CC5);
MakeCode(0x480CC8);
MakeCode(0x480CFD);
MakeCode(0x480D07);
MakeFunction(0x480CC8, 0x480D0E);
MakeCode(0x480D10);
MakeCode(0x480D3C);
MakeCode(0x480D45);
MakeFunction(0x480D10, 0x480D49);
MakeCode(0x480D4C);
MakeCode(0x480D7C);
MakeCode(0x480D85);
MakeFunction(0x480D4C, 0x480D89);
MakeCode(0x480D8C);
MakeCode(0x480DDE);
MakeCode(0x480DEA);
MakeFunction(0x480D8C, 0x480DEC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x480DFC, 0x480E07);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x480E10, -1);
MakeDword(0x480E0C);
MakeDword(0x480E08);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x480E20, 0x480E31);
MakeCode(0x480E34);
MakeCode(0x480E64);
MakeFunction(0x480E34, 0x480E6A);
MakeCode(0x480E6C);
MakeCode(0x480E83);
MakeFunction(0x480E6C, 0x480E8C);
MakeCode(0x480E8C);
MakeCode(0x480EA5);
MakeFunction(0x480E8C, 0x480EC4);
MakeCode(0x480EC4);
MakeCode(0x480ED9);
MakeFunction(0x480EC4, 0x480EEE);
MakeCode(0x480EF0);
MakeCode(0x480F0F);
MakeFunction(0x480EF0, 0x480F2F);
MakeCode(0x480F48);
MakeFunction(0x480F48, 0x480F7E);
MakeCode(0x480F80);
MakeCode(0x480FBE);
MakeCode(0x480FF2);
MakeCode(0x48100B);
MakeCode(0x481018);
MakeCode(0x481039);
MakeCode(0x48103F);
MakeCode(0x48107D);
MakeCode(0x481088);
MakeCode(0x481095);
MakeCode(0x4810A6);
MakeCode(0x4810AB);
MakeFunction(0x480F80, 0x4810B4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4810E4, -1);
MakeDword(0x4810E0);
MakeDword(0x4810DC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4810F4, -1);
MakeDword(0x4810F0);
MakeDword(0x4810EC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x481104, -1);
MakeDword(0x481100);
MakeDword(0x4810FC);
MakeCode(0x481108);
MakeCode(0x481168);
MakeCode(0x48118A);
MakeCode(0x48119B);
MakeCode(0x4811B4);
MakeCode(0x4811D9);
MakeCode(0x4811E4);
MakeCode(0x4811F1);
MakeCode(0x4811F2);
MakeCode(0x4812D1);
MakeCode(0x4812E4);
MakeCode(0x4812F1);
MakeCode(0x481307);
MakeCode(0x48130C);
MakeFunction(0x481108, 0x481317);
MakeCode(0x481318);
MakeCode(0x481348);
MakeCode(0x481351);
MakeCode(0x4813C3);
MakeCode(0x4813CA);
MakeCode(0x4813CE);
MakeCode(0x4813DB);
MakeCode(0x4813E5);
MakeCode(0x4813EA);
MakeCode(0x4813EC);
MakeCode(0x4813F9);
MakeCode(0x481402);
MakeCode(0x481407);
MakeFunction(0x481318, 0x481412);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x48141C, -1);
MakeDword(0x481418);
MakeDword(0x481414);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x481448, -1);
MakeDword(0x481444);
MakeDword(0x481440);
MakeCode(0x481454);
MakeFunction(0x481454, 0x48145B);
MakeCode(0x48145C);
MakeCode(0x48146E);
MakeCode(0x48148D);
MakeCode(0x481490);
MakeFunction(0x48145C, 0x481498);
MakeCode(0x481498);
MakeCode(0x4814C0);
MakeCode(0x4814C3);
MakeFunction(0x481498, 0x4814C6);
MakeCode(0x4814C8);
MakeCode(0x481534);
MakeCode(0x481538);
MakeCode(0x48153A);
MakeCode(0x481547);
MakeCode(0x481550);
MakeCode(0x481555);
MakeFunction(0x4814C8, 0x48155E);
MakeCode(0x481560);
MakeFunction(0x481560, 0x48157E);
MakeCode(0x481580);
MakeCode(0x48159D);
MakeFunction(0x481580, 0x4815A4);
MakeCode(0x4815A4);
MakeFunction(0x4815A4, 0x4815B2);
MakeCode(0x4815B4);
MakeCode(0x4815CB);
MakeCode(0x4815D8);
MakeCode(0x4815D9);
MakeCode(0x4815DE);
MakeFunction(0x4815B4, 0x4815E2);
MakeCode(0x4815E4);
MakeCode(0x48161B);
MakeCode(0x481628);
MakeCode(0x481658);
MakeCode(0x48166A);
MakeCode(0x481680);
MakeCode(0x48169B);
MakeFunction(0x4815E4, 0x48169E);
MakeCode(0x4816A0);
MakeFunction(0x4816A0, 0x4816AD);
MakeCode(0x4816B0);
MakeCode(0x4816D2);
MakeCode(0x4816D7);
MakeFunction(0x4816B0, 0x4816D9);
MakeCode(0x4816DC);
MakeCode(0x481727);
MakeCode(0x48172B);
MakeCode(0x48172D);
MakeCode(0x481786);
MakeCode(0x4817B4);
MakeCode(0x4817CB);
MakeCode(0x481857);
MakeCode(0x481888);
MakeCode(0x4818B6);
MakeCode(0x4818C0);
MakeCode(0x4818D4);
MakeFunction(0x4816DC, 0x4818DB);
MakeCode(0x4818DC);
MakeCode(0x48191B);
MakeCode(0x481925);
MakeCode(0x481941);
MakeCode(0x48194B);
MakeCode(0x481962);
MakeCode(0x481981);
MakeCode(0x48198E);
MakeCode(0x4819D7);
MakeCode(0x4819F3);
MakeCode(0x481A0C);
MakeCode(0x481A0E);
MakeCode(0x481A2A);
MakeCode(0x481A45);
MakeCode(0x481A47);
MakeCode(0x481A72);
MakeCode(0x481A92);
MakeFunction(0x4818DC, 0x481A9A);
MakeCode(0x481A9C);
MakeCode(0x481ABA);
MakeCode(0x481AC7);
MakeCode(0x481AC8);
MakeCode(0x481ACD);
MakeFunction(0x481A9C, 0x481AD1);
MakeComm(0x481AD4, "'SResString139'");
MakeDword(0x481AD4);
MakeDword(0x481AD8);
MakeComm(0x481ADC, "'SResString140'");
MakeDword(0x481ADC);
MakeDword(0x481AE0);
MakeComm(0x481AE4, "'SResString141'");
MakeDword(0x481AE4);
MakeDword(0x481AE8);
MakeComm(0x481AEC, "'SResString142'");
MakeDword(0x481AEC);
MakeDword(0x481AF0);
MakeComm(0x481AF4, "'SResString143'");
MakeDword(0x481AF4);
MakeDword(0x481AF8);
MakeComm(0x481AFC, "'SResString144'");
MakeDword(0x481AFC);
MakeDword(0x481B00);
MakeComm(0x481B04, "'SResString145'");
MakeDword(0x481B04);
MakeDword(0x481B08);
MakeUnkn(0x481B0C, 1);
MakeNameEx(0x481B0C, "VMT_481B0C_TTBCustomAccObject", 0);
MakeDword(0x481B0C);
MakeDword(0x481B10);
MakeDword(0x481B14);
MakeDword(0x481B18);
MakeDword(0x481B1C);
MakeDword(0x481B20);
MakeDword(0x481B24);
MakeDword(0x481B28);
MakeDword(0x481B2C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x481B5C, 0x481B6F);
MakeDword(0x481B30);
MakeDword(0x481B34);
MakeDword(0x481B38);
MakeDword(0x481B3C);
MakeDword(0x481B40);
MakeDword(0x481B44);
MakeDword(0x481B48);
MakeDword(0x481B4C);
MakeDword(0x481B50);
MakeDword(0x481B54);
MakeComm(0x481B58, "'+0'");
MakeDword(0x481B58);
MakeUnkn(0x481D1C, 1);
MakeNameEx(0x481D1C, "VMT_481D1C_TTBViewAccObject", 0);
MakeDword(0x481D1C);
MakeDword(0x481D20);
MakeUnkn(0x481CFB, 1);
MakeNameEx(0x481CFB, "TTBViewAccObject_IntfTable", 0);
MakeDword(0x481CFB);
MakeByte(0x481CFF);
MakeArray(0x481CFF, 16);
MakeDword(0x481D0F);
MakeDword(0x481C8B);
MakeFunction(0x481C6B, -1);
MakeCode(0x481C6B);
MakeDword(0x481C8F);
MakeFunction(0x481C75, -1);
MakeCode(0x481C75);
MakeDword(0x481C93);
MakeFunction(0x481C7F, -1);
MakeCode(0x481C7F);
MakeDword(0x481C97);
MakeFunction(0x481C43, -1);
MakeCode(0x481C43);
MakeDword(0x481C9B);
MakeFunction(0x481C4D, -1);
MakeCode(0x481C4D);
MakeDword(0x481C9F);
MakeFunction(0x481C57, -1);
MakeCode(0x481C57);
MakeDword(0x481CA3);
MakeFunction(0x481C61, -1);
MakeCode(0x481C61);
MakeDword(0x481CA7);
MakeFunction(0x481B71, -1);
MakeCode(0x481B71);
MakeDword(0x481CAB);
MakeFunction(0x481B7B, -1);
MakeCode(0x481B7B);
MakeDword(0x481CAF);
MakeFunction(0x481B85, -1);
MakeCode(0x481B85);
MakeDword(0x481CB3);
MakeFunction(0x481B8F, -1);
MakeCode(0x481B8F);
MakeDword(0x481CB7);
MakeFunction(0x481B99, -1);
MakeCode(0x481B99);
MakeDword(0x481CBB);
MakeFunction(0x481BA3, -1);
MakeCode(0x481BA3);
MakeDword(0x481CBF);
MakeFunction(0x481BAD, -1);
MakeCode(0x481BAD);
MakeDword(0x481CC3);
MakeFunction(0x481BB7, -1);
MakeCode(0x481BB7);
MakeDword(0x481CC7);
MakeFunction(0x481BC1, -1);
MakeCode(0x481BC1);
MakeDword(0x481CCB);
MakeFunction(0x481BCB, -1);
MakeCode(0x481BCB);
MakeDword(0x481CCF);
MakeFunction(0x481BD5, -1);
MakeCode(0x481BD5);
MakeDword(0x481CD3);
MakeFunction(0x481BDF, -1);
MakeCode(0x481BDF);
MakeDword(0x481CD7);
MakeFunction(0x481BE9, -1);
MakeCode(0x481BE9);
MakeDword(0x481CDB);
MakeFunction(0x481BF3, -1);
MakeCode(0x481BF3);
MakeDword(0x481CDF);
MakeFunction(0x481BFD, -1);
MakeCode(0x481BFD);
MakeDword(0x481CE3);
MakeFunction(0x481C07, -1);
MakeCode(0x481C07);
MakeDword(0x481CE7);
MakeFunction(0x481C11, -1);
MakeCode(0x481C11);
MakeDword(0x481CEB);
MakeFunction(0x481C1B, -1);
MakeCode(0x481C1B);
MakeDword(0x481CEF);
MakeFunction(0x481C25, -1);
MakeCode(0x481C25);
MakeDword(0x481CF3);
MakeFunction(0x481C2F, -1);
MakeCode(0x481C2F);
MakeDword(0x481CF7);
MakeFunction(0x481C39, -1);
MakeCode(0x481C39);
MakeByte(0x481B70);
MakeDword(0x481D13);
MakeDword(0x481D17);
MakeDword(0x481D24);
MakeDword(0x481D28);
MakeDword(0x481D2C);
MakeDword(0x481D30);
MakeDword(0x481D34);
MakeDword(0x481D38);
MakeDword(0x481D3C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x481D6C, 0x481D7D);
MakeDword(0x481D40);
MakeDword(0x481D44);
MakeDword(0x481D48);
MakeDword(0x481D4C);
MakeDword(0x481D50);
MakeDword(0x481D54);
MakeDword(0x481D58);
MakeDword(0x481D5C);
MakeDword(0x481D60);
MakeDword(0x481D64);
MakeComm(0x481D68, "'+0'");
MakeDword(0x481D68);
MakeUnkn(0x481F2C, 1);
MakeNameEx(0x481F2C, "VMT_481F2C_TTBItemViewerAccObject", 0);
MakeDword(0x481F2C);
MakeDword(0x481F30);
MakeUnkn(0x481F0A, 1);
MakeNameEx(0x481F0A, "TTBItemViewerAccObject_IntfTable", 0);
MakeDword(0x481F0A);
MakeByte(0x481F0E);
MakeArray(0x481F0E, 16);
MakeDword(0x481F1E);
MakeDword(0x481E9A);
MakeFunction(0x481E7B, -1);
MakeCode(0x481E7B);
MakeDword(0x481E9E);
MakeFunction(0x481E85, -1);
MakeCode(0x481E85);
MakeDword(0x481EA2);
MakeFunction(0x481E8F, -1);
MakeCode(0x481E8F);
MakeDword(0x481EA6);
MakeFunction(0x481E53, -1);
MakeCode(0x481E53);
MakeDword(0x481EAA);
MakeFunction(0x481E5D, -1);
MakeCode(0x481E5D);
MakeDword(0x481EAE);
MakeFunction(0x481E67, -1);
MakeCode(0x481E67);
MakeDword(0x481EB2);
MakeFunction(0x481E71, -1);
MakeCode(0x481E71);
MakeDword(0x481EB6);
MakeFunction(0x481D81, -1);
MakeCode(0x481D81);
MakeDword(0x481EBA);
MakeFunction(0x481D8B, -1);
MakeCode(0x481D8B);
MakeDword(0x481EBE);
MakeFunction(0x481D95, -1);
MakeCode(0x481D95);
MakeDword(0x481EC2);
MakeFunction(0x481D9F, -1);
MakeCode(0x481D9F);
MakeDword(0x481EC6);
MakeFunction(0x481DA9, -1);
MakeCode(0x481DA9);
MakeDword(0x481ECA);
MakeFunction(0x481DB3, -1);
MakeCode(0x481DB3);
MakeDword(0x481ECE);
MakeFunction(0x481DBD, -1);
MakeCode(0x481DBD);
MakeDword(0x481ED2);
MakeFunction(0x481DC7, -1);
MakeCode(0x481DC7);
MakeDword(0x481ED6);
MakeFunction(0x481DD1, -1);
MakeCode(0x481DD1);
MakeDword(0x481EDA);
MakeFunction(0x481DDB, -1);
MakeCode(0x481DDB);
MakeDword(0x481EDE);
MakeFunction(0x481DE5, -1);
MakeCode(0x481DE5);
MakeDword(0x481EE2);
MakeFunction(0x481DEF, -1);
MakeCode(0x481DEF);
MakeDword(0x481EE6);
MakeFunction(0x481DF9, -1);
MakeCode(0x481DF9);
MakeDword(0x481EEA);
MakeFunction(0x481E03, -1);
MakeCode(0x481E03);
MakeDword(0x481EEE);
MakeFunction(0x481E0D, -1);
MakeCode(0x481E0D);
MakeDword(0x481EF2);
MakeFunction(0x481E17, -1);
MakeCode(0x481E17);
MakeDword(0x481EF6);
MakeFunction(0x481E21, -1);
MakeCode(0x481E21);
MakeDword(0x481EFA);
MakeFunction(0x481E2B, -1);
MakeCode(0x481E2B);
MakeDword(0x481EFE);
MakeFunction(0x481E35, -1);
MakeCode(0x481E35);
MakeDword(0x481F02);
MakeFunction(0x481E3F, -1);
MakeCode(0x481E3F);
MakeDword(0x481F06);
MakeFunction(0x481E49, -1);
MakeCode(0x481E49);
MakeByte(0x481D80);
MakeDword(0x481F22);
MakeDword(0x481F26);
MakeDword(0x481F34);
MakeDword(0x481F38);
MakeDword(0x481F3C);
MakeDword(0x481F40);
MakeDword(0x481F44);
MakeDword(0x481F48);
MakeDword(0x481F4C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x481F7C, 0x481F93);
MakeDword(0x481F50);
MakeDword(0x481F54);
MakeDword(0x481F58);
MakeDword(0x481F5C);
MakeDword(0x481F60);
MakeDword(0x481F64);
MakeDword(0x481F68);
MakeDword(0x481F6C);
MakeDword(0x481F70);
MakeDword(0x481F74);
MakeComm(0x481F78, "'+0'");
MakeDword(0x481F78);
MakeCode(0x481F94);
MakeCode(0x481FCF);
MakeCode(0x481FE5);
MakeFunction(0x481F94, 0x481FEC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x481FFC, 0x482007);
MakeCode(0x482008);
MakeCode(0x482063);
MakeCode(0x48206F);
MakeFunction(0x482008, 0x48207B);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x482084, -1);
MakeDword(0x482080);
MakeDword(0x48207C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x482090, 0x4820A2);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4820A4, 0x4820BF);
MakeCode(0x4820C0);
MakeCode(0x4820D1);
MakeCode(0x4820F4);
MakeFunction(0x4820C0, 0x4820FA);
MakeCode(0x48210C);
MakeCode(0x482118);
MakeCode(0x482124);
MakeCode(0x482130);
MakeFunction(0x48210C, 0x482133);
MakeCode(0x482134);
MakeCode(0x482174);
MakeCode(0x482180);
MakeFunction(0x482134, 0x482189);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x482194, -1);
MakeDword(0x482190);
MakeDword(0x48218C);
MakeCode(0x482198);
MakeFunction(0x482198, 0x4821AB);
MakeCode(0x4821AC);
MakeCode(0x4821BD);
MakeFunction(0x4821AC, 0x4821C5);
MakeCode(0x4821C8);
MakeCode(0x4821DA);
MakeCode(0x482217);
MakeCode(0x48221F);
MakeCode(0x48222C);
MakeCode(0x482237);
MakeCode(0x48223C);
MakeCode(0x482256);
MakeFunction(0x4821C8, 0x48225D);
MakeUnkn(0x482260, 1);
MakeNameEx(0x482260, "TTBCustomAccObject.Destroy", 0x20);
MakeComm(0x482260, "'destructor TTBCustomAccObject.Destroy;'");
MakeCode(0x482260);
MakeComm(0x482296, "'TTBCustomAccObject..:dword'");
MakeCode(0x48229E);
MakeComm(0x4822A1, "'TTBCustomAccObject..:dword'");
MakeComm(0x4822AB, "'TTBCustomAccObject.?f14:dword'");
MakeCode(0x4822B1);
MakeComm(0x4822B4, "'TTBCustomAccObject.?f14:dword'");
MakeComm(0x4822BE, "'TTBCustomAccObject..:dword'");
MakeCode(0x4822C4);
MakeCode(0x4822D1);
MakeCode(0x4822DC);
MakeCode(0x4822E1);
MakeCode(0x482300);
MakeFunction(0x482260, 0x482304);
MakeUnkn(0x482304, 1);
MakeNameEx(0x482304, "TTBViewAccObject.Create", 0x20);
MakeComm(0x482304, "'constructor TTBViewAccObject.Create;'");
MakeCode(0x482304);
MakeCode(0x482313);
MakeCode(0x482344);
MakeFunction(0x482304, 0x48234A);
MakeUnkn(0x48234C, 1);
MakeNameEx(0x48234C, "TTBViewAccObject.Destroy", 0x20);
MakeComm(0x48234C, "'destructor TTBViewAccObject.Destroy;'");
MakeCode(0x48234C);
MakeComm(0x482361, "'TTBViewAccObject....:dword'");
MakeComm(0x482372, "'TTBViewAccObject.....:dword'");
MakeCode(0x482375);
MakeCode(0x48238C);
MakeFunction(0x48234C, 0x48238F);
MakeCode(0x482390);
MakeComm(0x482392, "'TTBViewAccObject......:dword'");
MakeFunction(0x482390, 0x482396);
MakeCode(0x482398);
MakeCode(0x4823AF);
MakeCode(0x4823C5);
MakeCode(0x4823CF);
MakeCode(0x4823D1);
MakeFunction(0x482398, 0x4823D4);
MakeCode(0x4823D4);
MakeCode(0x4823F3);
MakeCode(0x482400);
MakeCode(0x482409);
MakeCode(0x48240E);
MakeFunction(0x4823D4, 0x482417);
MakeCode(0x482418);
MakeCode(0x482440);
MakeCode(0x482468);
MakeCode(0x482475);
MakeCode(0x482507);
MakeCode(0x48252B);
MakeCode(0x482537);
MakeCode(0x48253B);
MakeCode(0x482540);
MakeCode(0x48254A);
MakeCode(0x482559);
MakeCode(0x482566);
MakeCode(0x48256F);
MakeCode(0x482574);
MakeFunction(0x482418, 0x482581);
MakeCode(0x482584);
MakeCode(0x4825C5);
MakeCode(0x4825CF);
MakeCode(0x482610);
MakeCode(0x48261A);
MakeCode(0x48262B);
MakeCode(0x482638);
MakeCode(0x482641);
MakeCode(0x482646);
MakeFunction(0x482584, 0x482654);
MakeCode(0x482654);
MakeCode(0x48267D);
MakeCode(0x4826AA);
MakeCode(0x4826B7);
MakeCode(0x4826CE);
MakeCode(0x4826E4);
MakeCode(0x482717);
MakeCode(0x48271D);
MakeCode(0x48272D);
MakeCode(0x482760);
MakeCode(0x482766);
MakeCode(0x482770);
MakeCode(0x482781);
MakeCode(0x48278E);
MakeCode(0x482797);
MakeCode(0x48279C);
MakeFunction(0x482654, 0x4827A9);
MakeCode(0x4827AC);
MakeCode(0x4827CB);
MakeCode(0x4827D8);
MakeCode(0x4827E1);
MakeCode(0x4827E6);
MakeFunction(0x4827AC, 0x4827EF);
MakeCode(0x4827F0);
MakeCode(0x48280C);
MakeCode(0x482833);
MakeCode(0x482840);
MakeCode(0x482851);
MakeCode(0x48285E);
MakeCode(0x482878);
MakeCode(0x482884);
MakeCode(0x482888);
MakeCode(0x4828A1);
MakeCode(0x4828A2);
MakeCode(0x4828AE);
MakeCode(0x4828BF);
MakeCode(0x4828CC);
MakeCode(0x482928);
MakeCode(0x482932);
MakeCode(0x482942);
MakeCode(0x48294C);
MakeCode(0x482956);
MakeCode(0x482965);
MakeCode(0x482972);
MakeCode(0x48297B);
MakeCode(0x482980);
MakeFunction(0x4827F0, 0x48298B);
MakeCode(0x48298C);
MakeCode(0x4829C1);
MakeCode(0x4829D7);
MakeCode(0x4829DB);
MakeCode(0x4829E7);
MakeCode(0x4829EC);
MakeCode(0x4829F6);
MakeCode(0x482A05);
MakeFunction(0x48298C, 0x482A0F);
MakeCode(0x482A10);
MakeCode(0x482A27);
MakeCode(0x482A3A);
MakeCode(0x482A47);
MakeCode(0x482A50);
MakeCode(0x482A55);
MakeFunction(0x482A10, 0x482A5E);
MakeCode(0x482A60);
MakeCode(0x482A77);
MakeCode(0x482A8A);
MakeCode(0x482A97);
MakeCode(0x482AA0);
MakeCode(0x482AA5);
MakeFunction(0x482A60, 0x482AAE);
MakeCode(0x482AB0);
MakeCode(0x482ACA);
MakeFunction(0x482AB0, 0x482AD3);
MakeCode(0x482AD4);
MakeCode(0x482AEB);
MakeCode(0x482AFE);
MakeCode(0x482B0B);
MakeCode(0x482B14);
MakeCode(0x482B19);
MakeFunction(0x482AD4, 0x482B22);
MakeCode(0x482B24);
MakeCode(0x482B33);
MakeCode(0x482B55);
MakeCode(0x482B62);
MakeCode(0x482B6B);
MakeCode(0x482B70);
MakeFunction(0x482B24, 0x482B79);
MakeCode(0x482B7C);
MakeCode(0x482BA0);
MakeCode(0x482BCD);
MakeCode(0x482BD7);
MakeCode(0x482BFD);
MakeCode(0x482C04);
MakeCode(0x482C0E);
MakeCode(0x482C1F);
MakeCode(0x482C2C);
MakeCode(0x482C3D);
MakeCode(0x482C42);
MakeFunction(0x482B7C, 0x482C50);
MakeCode(0x482C50);
MakeCode(0x482C72);
MakeCode(0x482C9F);
MakeCode(0x482CA9);
MakeCode(0x482CD8);
MakeCode(0x482CEF);
MakeCode(0x482CFF);
MakeCode(0x482D09);
MakeCode(0x482D1A);
MakeCode(0x482D27);
MakeCode(0x482D40);
MakeCode(0x482D45);
MakeFunction(0x482C50, 0x482D53);
MakeCode(0x482D54);
MakeCode(0x482D68);
MakeCode(0x482DA6);
MakeCode(0x482DB2);
MakeCode(0x482DD2);
MakeCode(0x482DD7);
MakeCode(0x482DE1);
MakeCode(0x482DF0);
MakeFunction(0x482D54, 0x482DF9);
MakeCode(0x482DFC);
MakeCode(0x482E25);
MakeCode(0x482E52);
MakeCode(0x482E5C);
MakeCode(0x482E6F);
MakeCode(0x482E7F);
MakeCode(0x482E84);
MakeCode(0x482E95);
MakeCode(0x482E9F);
MakeCode(0x482EB0);
MakeCode(0x482EBD);
MakeCode(0x482EC6);
MakeCode(0x482ECB);
MakeFunction(0x482DFC, 0x482ED8);
MakeCode(0x482ED8);
MakeCode(0x482EF2);
MakeFunction(0x482ED8, 0x482EFB);
MakeCode(0x482EFC);
MakeCode(0x482F25);
MakeCode(0x482F52);
MakeCode(0x482F5C);
MakeCode(0x482F6D);
MakeCode(0x482F77);
MakeCode(0x482F88);
MakeCode(0x482F95);
MakeCode(0x482F9E);
MakeCode(0x482FA3);
MakeFunction(0x482EFC, 0x482FB0);
MakeCode(0x482FB0);
MakeCode(0x482FC7);
MakeCode(0x482FDA);
MakeCode(0x482FE7);
MakeCode(0x482FF0);
MakeCode(0x482FF5);
MakeFunction(0x482FB0, 0x482FFE);
MakeCode(0x483000);
MakeCode(0x48301F);
MakeCode(0x48302C);
MakeCode(0x483035);
MakeCode(0x48303A);
MakeFunction(0x483000, 0x483043);
MakeCode(0x483044);
MakeCode(0x483063);
MakeCode(0x483070);
MakeCode(0x483079);
MakeCode(0x48307E);
MakeFunction(0x483044, 0x483087);
MakeUnkn(0x483088, 1);
MakeNameEx(0x483088, "TTBItemViewerAccObject.Create", 0x20);
MakeComm(0x483088, "'constructor TTBItemViewerAccObject.Create;'");
MakeCode(0x483088);
MakeCode(0x483097);
MakeCode(0x4830C8);
MakeFunction(0x483088, 0x4830CE);
MakeUnkn(0x4830D0, 1);
MakeNameEx(0x4830D0, "TTBItemViewerAccObject.Destroy", 0x20);
MakeComm(0x4830D0, "'destructor TTBItemViewerAccObject.Destroy;'");
MakeCode(0x4830D0);
MakeComm(0x4830E5, "'TTBItemViewerAccObject....:dword'");
MakeComm(0x4830F3, "'TTBItemViewerAccObject.....:dword'");
MakeCode(0x4830F6);
MakeCode(0x48310D);
MakeFunction(0x4830D0, 0x483110);
MakeCode(0x483110);
MakeComm(0x483112, "'TTBItemViewerAccObject......:dword'");
MakeFunction(0x483110, 0x483116);
MakeCode(0x483118);
MakeCode(0x48312F);
MakeCode(0x483145);
MakeCode(0x48314F);
MakeCode(0x483151);
MakeFunction(0x483118, 0x483154);
MakeCode(0x483154);
MakeCode(0x483179);
MakeCode(0x48317D);
MakeFunction(0x483154, 0x483181);
MakeCode(0x483184);
MakeCode(0x483196);
MakeCode(0x483199);
MakeFunction(0x483184, 0x48319C);
MakeCode(0x48319C);
MakeCode(0x4831A2);
MakeCode(0x4831B0);
MakeCode(0x4831BC);
MakeFunction(0x48319C, 0x4831C1);
MakeCode(0x4831C4);
MakeCode(0x48320C);
MakeCode(0x483226);
MakeCode(0x483228);
MakeFunction(0x4831C4, 0x48322E);
MakeCode(0x4832E4);
MakeCode(0x483323);
MakeCode(0x483330);
MakeCode(0x483374);
MakeCode(0x483391);
MakeCode(0x483398);
MakeCode(0x4833A2);
MakeCode(0x4833B3);
MakeCode(0x4833C0);
MakeCode(0x4833C9);
MakeCode(0x4833CE);
MakeFunction(0x4832E4, 0x4833DB);
MakeCode(0x4833DC);
MakeCode(0x4833FF);
MakeCode(0x483419);
MakeCode(0x483423);
MakeCode(0x48346B);
MakeCode(0x483470);
MakeCode(0x48347A);
MakeCode(0x483489);
MakeFunction(0x4833DC, 0x483494);
MakeCode(0x483494);
MakeCode(0x4834D5);
MakeCode(0x4834E2);
MakeCode(0x48354C);
MakeCode(0x483556);
MakeCode(0x483567);
MakeCode(0x483574);
MakeCode(0x48357D);
MakeCode(0x483582);
MakeFunction(0x483494, 0x483590);
MakeCode(0x483590);
MakeCode(0x4835BC);
MakeCode(0x4835E9);
MakeCode(0x4835F6);
MakeCode(0x483607);
MakeCode(0x483636);
MakeCode(0x483677);
MakeCode(0x483683);
MakeCode(0x4836BC);
MakeCode(0x4836C4);
MakeCode(0x4836DA);
MakeCode(0x483713);
MakeCode(0x483717);
MakeCode(0x483721);
MakeCode(0x483732);
MakeCode(0x48373F);
MakeCode(0x483748);
MakeCode(0x48374D);
MakeFunction(0x483590, 0x48375A);
MakeCode(0x48375C);
MakeCode(0x48379B);
MakeCode(0x4837A8);
MakeCode(0x4837B5);
MakeCode(0x4837BF);
MakeCode(0x4837D9);
MakeCode(0x483814);
MakeCode(0x48381B);
MakeCode(0x483825);
MakeCode(0x483836);
MakeCode(0x483843);
MakeCode(0x48384C);
MakeCode(0x483851);
MakeFunction(0x48375C, 0x48385E);
MakeCode(0x483860);
MakeCode(0x48387C);
MakeCode(0x4838A3);
MakeCode(0x4838AD);
MakeCode(0x4838D8);
MakeCode(0x4838E1);
MakeCode(0x483904);
MakeCode(0x48390E);
MakeCode(0x483918);
MakeCode(0x483927);
MakeCode(0x483934);
MakeCode(0x48393D);
MakeCode(0x483942);
MakeFunction(0x483860, 0x48394D);
MakeCode(0x483950);
MakeCode(0x483976);
MakeCode(0x483980);
MakeCode(0x483993);
MakeCode(0x483997);
MakeCode(0x483999);
MakeCode(0x4839A3);
MakeCode(0x4839B2);
MakeFunction(0x483950, 0x4839BB);
MakeCode(0x4839BC);
MakeCode(0x4839D9);
MakeCode(0x483A06);
MakeCode(0x483A13);
MakeCode(0x483A3B);
MakeCode(0x483A53);
MakeCode(0x483A6B);
MakeCode(0x483A7A);
MakeCode(0x483A87);
MakeCode(0x483A8E);
MakeCode(0x483A95);
MakeCode(0x483A9F);
MakeCode(0x483AB0);
MakeCode(0x483ABD);
MakeCode(0x483AC6);
MakeCode(0x483ACB);
MakeFunction(0x4839BC, 0x483AD8);
SetLongPrm(INF_STRTYPE, ASCSTR_UNICODE);
MakeStr(0x483ADC, -1);
MakeDword(0x483AD8);
SetLongPrm(INF_STRTYPE, ASCSTR_UNICODE);
MakeStr(0x483AEC, -1);
MakeDword(0x483AE8);
SetLongPrm(INF_STRTYPE, ASCSTR_UNICODE);
MakeStr(0x483AFC, -1);
MakeDword(0x483AF8);
SetLongPrm(INF_STRTYPE, ASCSTR_UNICODE);
MakeStr(0x483B10, -1);
MakeDword(0x483B0C);
MakeCode(0x483B1C);
MakeCode(0x483B33);
MakeCode(0x483B46);
MakeCode(0x483B53);
MakeCode(0x483B5C);
MakeCode(0x483B61);
MakeFunction(0x483B1C, 0x483B6A);
MakeCode(0x483B6C);
MakeCode(0x483B8C);
MakeCode(0x483BA5);
MakeCode(0x483BAF);
MakeCode(0x483BD6);
MakeCode(0x483BDB);
MakeCode(0x483BE5);
MakeCode(0x483BF4);
MakeFunction(0x483B6C, 0x483BFD);
MakeCode(0x483C00);
MakeCode(0x483C17);
MakeCode(0x483C2A);
MakeCode(0x483C37);
MakeCode(0x483C40);
MakeCode(0x483C45);
MakeFunction(0x483C00, 0x483C4E);
MakeCode(0x483C50);
MakeCode(0x483C5F);
MakeCode(0x483C81);
MakeCode(0x483C8E);
MakeCode(0x483C97);
MakeCode(0x483C9C);
MakeFunction(0x483C50, 0x483CA5);
MakeCode(0x483CA8);
MakeCode(0x483CCB);
MakeCode(0x483CF8);
MakeCode(0x483D05);
MakeCode(0x483D59);
MakeCode(0x483D8E);
MakeCode(0x483D93);
MakeCode(0x483D9D);
MakeCode(0x483DAE);
MakeCode(0x483DBB);
MakeCode(0x483DD1);
MakeCode(0x483DD6);
MakeFunction(0x483CA8, 0x483DE4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x483DEC, -1);
MakeDword(0x483DE8);
MakeDword(0x483DE4);
MakeCode(0x483DF0);
MakeCode(0x483E13);
MakeCode(0x483E40);
MakeCode(0x483E4D);
MakeCode(0x483E7D);
MakeCode(0x483E90);
MakeCode(0x483EB3);
MakeCode(0x483EB8);
MakeCode(0x483EC2);
MakeCode(0x483ED3);
MakeCode(0x483EE0);
MakeCode(0x483F03);
MakeCode(0x483F08);
MakeFunction(0x483DF0, 0x483F16);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x483F20, -1);
MakeDword(0x483F1C);
MakeDword(0x483F18);
MakeCode(0x483F24);
MakeCode(0x483F38);
MakeCode(0x483F5E);
MakeCode(0x483F6A);
MakeCode(0x483F6F);
MakeCode(0x483F79);
MakeCode(0x483F88);
MakeFunction(0x483F24, 0x483F91);
MakeCode(0x483F94);
MakeCode(0x483FBD);
MakeCode(0x483FEA);
MakeCode(0x483FF4);
MakeCode(0x48400D);
MakeCode(0x484017);
MakeCode(0x484028);
MakeCode(0x484035);
MakeCode(0x48403E);
MakeCode(0x484043);
MakeFunction(0x483F94, 0x484050);
MakeCode(0x484050);
MakeCode(0x48406A);
MakeFunction(0x484050, 0x484073);
MakeCode(0x484074);
MakeCode(0x48409D);
MakeCode(0x4840CA);
MakeCode(0x4840D7);
MakeCode(0x4840F9);
MakeCode(0x484111);
MakeCode(0x484123);
MakeCode(0x484132);
MakeCode(0x484145);
MakeCode(0x48414B);
MakeCode(0x484159);
MakeCode(0x484168);
MakeCode(0x484179);
MakeCode(0x484183);
MakeCode(0x484194);
MakeCode(0x4841A1);
MakeCode(0x4841AA);
MakeCode(0x4841AF);
MakeFunction(0x484074, 0x4841BC);
MakeCode(0x4841BC);
MakeCode(0x4841D9);
MakeCode(0x484206);
MakeCode(0x484210);
MakeCode(0x484226);
MakeCode(0x484235);
MakeCode(0x48423F);
MakeCode(0x484250);
MakeCode(0x48425D);
MakeCode(0x484266);
MakeCode(0x48426B);
MakeFunction(0x4841BC, 0x484278);
MakeCode(0x484278);
MakeCode(0x484297);
MakeCode(0x4842A4);
MakeCode(0x4842AD);
MakeCode(0x4842B2);
MakeFunction(0x484278, 0x4842BB);
MakeCode(0x4842BC);
MakeCode(0x4842DB);
MakeCode(0x4842E8);
MakeCode(0x4842F1);
MakeCode(0x4842F6);
MakeFunction(0x4842BC, 0x4842FF);
MakeCode(0x484324);
MakeCode(0x484350);
MakeCode(0x48435A);
MakeCode(0x484367);
MakeCode(0x484368);
MakeCode(0x48436D);
MakeFunction(0x484324, 0x484371);
MakeUnkn(0x484374, 1);
MakeNameEx(0x484374, "RTTI_484374_Enumeration_TTBItemDisplayMode", 0);
MakeDword(0x484374);
MakeUnkn(0x484378, 1);
MakeNameEx(0x484378, "", 0);
MakeByte(0x484378);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484379, 0x48438C);
MakeByte(0x48438C);
MakeDword(0x48438D);
MakeDword(0x484391);
MakeDword(0x484395);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484399, 0x4843A5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4843A5, 0x4843B2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4843B2, 0x4843C6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4843C6, 0x4843D7);
MakeUnkn(0x4843E0, 1);
MakeNameEx(0x4843E0, "RTTI_4843E0_Enumeration_TTBItemOption", 0);
MakeDword(0x4843E0);
MakeUnkn(0x4843E4, 1);
MakeNameEx(0x4843E4, "", 0);
MakeByte(0x4843E4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4843E5, 0x4843F3);
MakeByte(0x4843F3);
MakeDword(0x4843F4);
MakeDword(0x4843F8);
MakeDword(0x4843FC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484400, 0x48440B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48440B, 0x48441C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48441C, 0x484431);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484431, 0x484447);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484447, 0x484455);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484455, 0x484463);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484463, 0x484470);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484470, 0x48447C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48447C, 0x48448C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48448C, 0x48449B);
MakeUnkn(0x4844A4, 1);
MakeNameEx(0x4844A4, "RTTI_4844A4_Set_TTBItemOptions", 0);
MakeDword(0x4844A4);
MakeUnkn(0x4844A8, 1);
MakeNameEx(0x4844A8, "", 0);
MakeByte(0x4844A8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4844A9, 0x4844B8);
MakeByte(0x4844B8);
MakeDword(0x4844B9);
MakeUnkn(0x4844C0, 1);
MakeNameEx(0x4844C0, "RTTI_4844C0_Method_TTBPopupEvent", 0);
MakeDword(0x4844C0);
MakeUnkn(0x4844C4, 1);
MakeNameEx(0x4844C4, "", 0);
MakeByte(0x4844C4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4844C5, 0x4844D3);
MakeByte(0x4844D3);
MakeByte(0x4844D4);
MakeByte(0x4844D5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4844D6, 0x4844DD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4844DD, 0x4844EB);
MakeByte(0x4844EB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4844EC, 0x4844F5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4844F5, 0x4844FD);
MakeByte(0x4844FD);
MakeDword(0x4844FE);
MakeDword(0x484502);
MakeUnkn(0x484508, 1);
MakeNameEx(0x484508, "RTTI_484508_Method_TTBSelectEvent", 0);
MakeDword(0x484508);
MakeUnkn(0x48450C, 1);
MakeNameEx(0x48450C, "", 0);
MakeByte(0x48450C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48450D, 0x48451C);
MakeByte(0x48451C);
MakeByte(0x48451D);
MakeByte(0x48451E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48451F, 0x484526);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484526, 0x484534);
MakeByte(0x484534);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484535, 0x48453C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48453C, 0x48454A);
MakeByte(0x48454A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48454B, 0x484555);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484555, 0x48455D);
MakeByte(0x48455D);
MakeDword(0x48455E);
MakeDword(0x484562);
MakeDword(0x484566);
MakeUnkn(0x48456C, 1);
MakeNameEx(0x48456C, "VMT_48456C_ETBItemError", 0);
MakeDword(0x48456C);
MakeDword(0x484570);
MakeDword(0x484574);
MakeDword(0x484578);
MakeDword(0x48457C);
MakeDword(0x484580);
MakeDword(0x484584);
MakeDword(0x484588);
MakeDword(0x48458C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4845B8, 0x4845C5);
MakeDword(0x484590);
MakeDword(0x484594);
MakeDword(0x484598);
MakeDword(0x48459C);
MakeDword(0x4845A0);
MakeDword(0x4845A4);
MakeDword(0x4845A8);
MakeDword(0x4845AC);
MakeDword(0x4845B0);
MakeDword(0x4845B4);
MakeUnkn(0x4845C8, 1);
MakeNameEx(0x4845C8, "VMT_4845C8_TTBImageChangeLink", 0);
MakeDword(0x4845C8);
MakeDword(0x4845CC);
MakeDword(0x4845D0);
MakeDword(0x4845D4);
MakeDword(0x4845D8);
MakeDword(0x4845DC);
MakeDword(0x4845E0);
MakeDword(0x4845E4);
MakeDword(0x4845E8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484614, 0x484627);
MakeDword(0x4845EC);
MakeDword(0x4845F0);
MakeDword(0x4845F4);
MakeDword(0x4845F8);
MakeDword(0x4845FC);
MakeDword(0x484600);
MakeDword(0x484604);
MakeDword(0x484608);
MakeDword(0x48460C);
MakeDword(0x484610);
MakeUnkn(0x484628, 1);
MakeNameEx(0x484628, "VMT_484628_TTBCustomItem", 0);
MakeDword(0x484628);
MakeDword(0x48462C);
MakeDword(0x484630);
MakeDword(0x484634);
MakeUnkn(0x4846CC, 1);
MakeNameEx(0x4846CC, "TTBCustomItem_InitTable", 0);
MakeByte(0x4846CC);
MakeByte(0x4846CD);
MakeDword(0x4846CE);
MakeDword(0x4846D2);
MakeDword(0x4846D6);
MakeDword(0x4846DA);
MakeDword(0x4846DE);
MakeDword(0x4846E2);
MakeDword(0x484638);
MakeDword(0x48463C);
MakeDword(0x484640);
MakeDword(0x484644);
MakeUnkn(0x4846E6, 1);
MakeNameEx(0x4846E6, "TTBCustomItem_DynamicTable", 0);
MakeWord(0x4846E6);
MakeWord(0x4846E8);
MakeWord(0x4846EA);
MakeWord(0x4846EC);
MakeWord(0x4846EE);
MakeWord(0x4846F0);
MakeWord(0x4846F2);
MakeWord(0x4846F4);
MakeDword(0x4846F6);
MakeDword(0x4846FA);
MakeDword(0x4846FE);
MakeDword(0x484702);
MakeDword(0x484706);
MakeDword(0x48470A);
MakeDword(0x48470E);
MakeDword(0x484648);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484712, 0x484720);
MakeDword(0x48464C);
MakeDword(0x484650);
MakeDword(0x484654);
MakeDword(0x484658);
MakeDword(0x48465C);
MakeDword(0x484660);
MakeDword(0x484664);
MakeDword(0x484668);
MakeDword(0x48466C);
MakeDword(0x484670);
MakeComm(0x484674, "'+0'");
MakeDword(0x484674);
MakeComm(0x484678, "'+4'");
MakeDword(0x484678);
MakeComm(0x48467C, "'+8'");
MakeDword(0x48467C);
MakeComm(0x484680, "'+C'");
MakeDword(0x484680);
MakeComm(0x484684, "'+10'");
MakeDword(0x484684);
MakeComm(0x484688, "'+14'");
MakeDword(0x484688);
MakeComm(0x48468C, "'+18'");
MakeDword(0x48468C);
MakeComm(0x484690, "'+1C'");
MakeDword(0x484690);
MakeComm(0x484694, "'+20'");
MakeDword(0x484694);
MakeComm(0x484698, "'+24'");
MakeDword(0x484698);
MakeComm(0x48469C, "'+28'");
MakeDword(0x48469C);
MakeComm(0x4846A0, "'+2C'");
MakeDword(0x4846A0);
MakeComm(0x4846A4, "'+30'");
MakeDword(0x4846A4);
MakeComm(0x4846A8, "'+34'");
MakeDword(0x4846A8);
MakeComm(0x4846AC, "'+38'");
MakeDword(0x4846AC);
MakeComm(0x4846B0, "'+3C'");
MakeDword(0x4846B0);
MakeComm(0x4846B4, "'+40'");
MakeDword(0x4846B4);
MakeComm(0x4846B8, "'+44'");
MakeDword(0x4846B8);
MakeComm(0x4846BC, "'+48'");
MakeDword(0x4846BC);
MakeComm(0x4846C0, "'+4C'");
MakeDword(0x4846C0);
MakeComm(0x4846C4, "'+50'");
MakeDword(0x4846C4);
MakeComm(0x4846C8, "'+54'");
MakeDword(0x4846C8);
MakeUnkn(0x484720, 1);
MakeNameEx(0x484720, "RTTI_484720_Class_TTBCustomItem", 0);
MakeDword(0x484720);
MakeUnkn(0x484724, 1);
MakeNameEx(0x484724, "", 0);
MakeByte(0x484724);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484725, 0x484733);
MakeDword(0x484733);
MakeDword(0x484737);
MakeWord(0x48473B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48473D, 0x484745);
MakeWord(0x484745);
MakeUnkn(0x484748, 1);
MakeNameEx(0x484748, "VMT_484748_TTBCustomItemActionLink", 0);
MakeDword(0x484748);
MakeDword(0x48474C);
MakeDword(0x484750);
MakeDword(0x484754);
MakeDword(0x484758);
MakeDword(0x48475C);
MakeDword(0x484760);
MakeDword(0x484764);
MakeDword(0x484768);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484810, 0x484828);
MakeDword(0x48476C);
MakeDword(0x484770);
MakeDword(0x484774);
MakeDword(0x484778);
MakeDword(0x48477C);
MakeDword(0x484780);
MakeDword(0x484784);
MakeDword(0x484788);
MakeDword(0x48478C);
MakeDword(0x484790);
MakeComm(0x484794, "'+0'");
MakeDword(0x484794);
MakeComm(0x484798, "'+4'");
MakeDword(0x484798);
MakeComm(0x48479C, "'+8'");
MakeDword(0x48479C);
MakeComm(0x4847A0, "'+C'");
MakeDword(0x4847A0);
MakeComm(0x4847A4, "'+10'");
MakeDword(0x4847A4);
MakeComm(0x4847A8, "'+14'");
MakeDword(0x4847A8);
MakeComm(0x4847AC, "'+18'");
MakeDword(0x4847AC);
MakeComm(0x4847B0, "'+1C'");
MakeDword(0x4847B0);
MakeComm(0x4847B4, "'+20'");
MakeDword(0x4847B4);
MakeComm(0x4847B8, "'+24'");
MakeDword(0x4847B8);
MakeComm(0x4847BC, "'+28'");
MakeDword(0x4847BC);
MakeComm(0x4847C0, "'+2C'");
MakeDword(0x4847C0);
MakeComm(0x4847C4, "'+30'");
MakeDword(0x4847C4);
MakeComm(0x4847C8, "'+34'");
MakeDword(0x4847C8);
MakeComm(0x4847CC, "'+38'");
MakeDword(0x4847CC);
MakeComm(0x4847D0, "'+3C'");
MakeDword(0x4847D0);
MakeComm(0x4847D4, "'+40'");
MakeDword(0x4847D4);
MakeComm(0x4847D8, "'+44'");
MakeDword(0x4847D8);
MakeComm(0x4847DC, "'+48'");
MakeDword(0x4847DC);
MakeComm(0x4847E0, "'+4C'");
MakeDword(0x4847E0);
MakeComm(0x4847E4, "'+50'");
MakeDword(0x4847E4);
MakeComm(0x4847E8, "'+54'");
MakeDword(0x4847E8);
MakeComm(0x4847EC, "'+58'");
MakeDword(0x4847EC);
MakeComm(0x4847F0, "'+5C'");
MakeDword(0x4847F0);
MakeComm(0x4847F4, "'+60'");
MakeDword(0x4847F4);
MakeComm(0x4847F8, "'+64'");
MakeDword(0x4847F8);
MakeComm(0x4847FC, "'+68'");
MakeDword(0x4847FC);
MakeComm(0x484800, "'+6C'");
MakeDword(0x484800);
MakeComm(0x484804, "'+70'");
MakeDword(0x484804);
MakeComm(0x484808, "'+74'");
MakeDword(0x484808);
MakeComm(0x48480C, "'+78'");
MakeDword(0x48480C);
MakeUnkn(0x4848AC, 1);
MakeNameEx(0x4848AC, "VMT_4848AC_TTBBaseAccObject", 0);
MakeDword(0x4848AC);
MakeDword(0x4848B0);
MakeUnkn(0x48488C, 1);
MakeNameEx(0x48488C, "TTBBaseAccObject_IntfTable", 0);
MakeDword(0x48488C);
MakeByte(0x484890);
MakeArray(0x484890, 16);
MakeDword(0x4848A0);
MakeDword(0x484870);
MakeFunction(0x484851, -1);
MakeCode(0x484851);
MakeDword(0x484874);
MakeFunction(0x48485B, -1);
MakeCode(0x48485B);
MakeDword(0x484878);
MakeFunction(0x484865, -1);
MakeCode(0x484865);
MakeDword(0x48487C);
MakeFunction(0x484829, -1);
MakeCode(0x484829);
MakeDword(0x484880);
MakeFunction(0x484833, -1);
MakeCode(0x484833);
MakeDword(0x484884);
MakeFunction(0x48483D, -1);
MakeCode(0x48483D);
MakeDword(0x484888);
MakeFunction(0x484847, -1);
MakeCode(0x484847);
MakeByte(0x484828);
MakeDword(0x4848A4);
MakeDword(0x4848A8);
MakeDword(0x4848B4);
MakeDword(0x4848B8);
MakeDword(0x4848BC);
MakeDword(0x4848C0);
MakeDword(0x4848C4);
MakeDword(0x4848C8);
MakeDword(0x4848CC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4848FC, 0x48490D);
MakeDword(0x4848D0);
MakeDword(0x4848D4);
MakeDword(0x4848D8);
MakeDword(0x4848DC);
MakeDword(0x4848E0);
MakeDword(0x4848E4);
MakeDword(0x4848E8);
MakeDword(0x4848EC);
MakeDword(0x4848F0);
MakeDword(0x4848F4);
MakeComm(0x4848F8, "'+0'");
MakeDword(0x4848F8);
MakeUnkn(0x484910, 1);
MakeNameEx(0x484910, "VMT_484910_TTBItemViewer", 0);
MakeDword(0x484910);
MakeDword(0x484914);
MakeDword(0x484918);
MakeDword(0x48491C);
MakeDword(0x484920);
MakeDword(0x484924);
MakeDword(0x484928);
MakeDword(0x48492C);
MakeUnkn(0x4849A8, 1);
MakeNameEx(0x4849A8, "TTBItemViewer_DynamicTable", 0);
MakeWord(0x4849A8);
MakeWord(0x4849AA);
MakeDword(0x4849AC);
MakeDword(0x484930);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4849B0, 0x4849BE);
MakeDword(0x484934);
MakeDword(0x484938);
MakeDword(0x48493C);
MakeDword(0x484940);
MakeDword(0x484944);
MakeDword(0x484948);
MakeDword(0x48494C);
MakeDword(0x484950);
MakeDword(0x484954);
MakeDword(0x484958);
MakeComm(0x48495C, "'+0'");
MakeDword(0x48495C);
MakeComm(0x484960, "'+4'");
MakeDword(0x484960);
MakeComm(0x484964, "'+8'");
MakeDword(0x484964);
MakeComm(0x484968, "'+C'");
MakeDword(0x484968);
MakeComm(0x48496C, "'+10'");
MakeDword(0x48496C);
MakeComm(0x484970, "'+14'");
MakeDword(0x484970);
MakeComm(0x484974, "'+18'");
MakeDword(0x484974);
MakeComm(0x484978, "'+1C'");
MakeDword(0x484978);
MakeComm(0x48497C, "'+20'");
MakeDword(0x48497C);
MakeComm(0x484980, "'+24'");
MakeDword(0x484980);
MakeComm(0x484984, "'+28'");
MakeDword(0x484984);
MakeComm(0x484988, "'+2C'");
MakeDword(0x484988);
MakeComm(0x48498C, "'+30'");
MakeDword(0x48498C);
MakeComm(0x484990, "'+34'");
MakeDword(0x484990);
MakeComm(0x484994, "'+38'");
MakeDword(0x484994);
MakeComm(0x484998, "'+3C'");
MakeDword(0x484998);
MakeComm(0x48499C, "'+40'");
MakeDword(0x48499C);
MakeComm(0x4849A0, "'+44'");
MakeDword(0x4849A0);
MakeComm(0x4849A4, "'+48'");
MakeDword(0x4849A4);
MakeUnkn(0x4849C0, 1);
MakeNameEx(0x4849C0, "RTTI_4849C0_Class_TTBItemViewer", 0);
MakeDword(0x4849C0);
MakeUnkn(0x4849C4, 1);
MakeNameEx(0x4849C4, "", 0);
MakeByte(0x4849C4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4849C5, 0x4849D3);
MakeDword(0x4849D3);
MakeDword(0x4849D7);
MakeWord(0x4849DB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4849DD, 0x4849E5);
MakeWord(0x4849E5);
MakeUnkn(0x4849E8, 1);
MakeNameEx(0x4849E8, "VMT_4849E8_TTBView", 0);
MakeDword(0x4849E8);
MakeDword(0x4849EC);
MakeDword(0x4849F0);
MakeDword(0x4849F4);
MakeDword(0x4849F8);
MakeDword(0x4849FC);
MakeDword(0x484A00);
MakeDword(0x484A04);
MakeDword(0x484A08);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484A8C, 0x484A94);
MakeDword(0x484A0C);
MakeDword(0x484A10);
MakeDword(0x484A14);
MakeDword(0x484A18);
MakeDword(0x484A1C);
MakeDword(0x484A20);
MakeDword(0x484A24);
MakeDword(0x484A28);
MakeDword(0x484A2C);
MakeDword(0x484A30);
MakeComm(0x484A34, "'+0'");
MakeDword(0x484A34);
MakeComm(0x484A38, "'+4'");
MakeDword(0x484A38);
MakeComm(0x484A3C, "'+8'");
MakeDword(0x484A3C);
MakeComm(0x484A40, "'+C'");
MakeDword(0x484A40);
MakeComm(0x484A44, "'+10'");
MakeDword(0x484A44);
MakeComm(0x484A48, "'+14'");
MakeDword(0x484A48);
MakeComm(0x484A4C, "'+18'");
MakeDword(0x484A4C);
MakeComm(0x484A50, "'+1C'");
MakeDword(0x484A50);
MakeComm(0x484A54, "'+20'");
MakeDword(0x484A54);
MakeComm(0x484A58, "'+24'");
MakeDword(0x484A58);
MakeComm(0x484A5C, "'+28'");
MakeDword(0x484A5C);
MakeComm(0x484A60, "'+2C'");
MakeDword(0x484A60);
MakeComm(0x484A64, "'+30'");
MakeDword(0x484A64);
MakeComm(0x484A68, "'+34'");
MakeDword(0x484A68);
MakeComm(0x484A6C, "'+38'");
MakeDword(0x484A6C);
MakeComm(0x484A70, "'+3C'");
MakeDword(0x484A70);
MakeComm(0x484A74, "'+40'");
MakeDword(0x484A74);
MakeComm(0x484A78, "'+44'");
MakeDword(0x484A78);
MakeComm(0x484A7C, "'+48'");
MakeDword(0x484A7C);
MakeComm(0x484A80, "'+4C'");
MakeDword(0x484A80);
MakeComm(0x484A84, "'+50'");
MakeDword(0x484A84);
MakeComm(0x484A88, "'+54'");
MakeDword(0x484A88);
MakeUnkn(0x484A94, 1);
MakeNameEx(0x484A94, "RTTI_484A94_Class_TTBView", 0);
MakeDword(0x484A94);
MakeUnkn(0x484A98, 1);
MakeNameEx(0x484A98, "", 0);
MakeByte(0x484A98);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484A99, 0x484AA1);
MakeDword(0x484AA1);
MakeDword(0x484AA5);
MakeWord(0x484AA9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484AAB, 0x484AB3);
MakeWord(0x484AB3);
MakeUnkn(0x484AB8, 1);
MakeNameEx(0x484AB8, "VMT_484AB8_TTBRootItem", 0);
MakeDword(0x484AB8);
MakeDword(0x484ABC);
MakeDword(0x484AC0);
MakeDword(0x484AC4);
MakeDword(0x484AC8);
MakeDword(0x484ACC);
MakeDword(0x484AD0);
MakeDword(0x484AD4);
MakeDword(0x484AD8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484B5C, 0x484B68);
MakeDword(0x484ADC);
MakeDword(0x484AE0);
MakeDword(0x484AE4);
MakeDword(0x484AE8);
MakeDword(0x484AEC);
MakeDword(0x484AF0);
MakeDword(0x484AF4);
MakeDword(0x484AF8);
MakeDword(0x484AFC);
MakeDword(0x484B00);
MakeComm(0x484B04, "'+0'");
MakeDword(0x484B04);
MakeComm(0x484B08, "'+4'");
MakeDword(0x484B08);
MakeComm(0x484B0C, "'+8'");
MakeDword(0x484B0C);
MakeComm(0x484B10, "'+C'");
MakeDword(0x484B10);
MakeComm(0x484B14, "'+10'");
MakeDword(0x484B14);
MakeComm(0x484B18, "'+14'");
MakeDword(0x484B18);
MakeComm(0x484B1C, "'+18'");
MakeDword(0x484B1C);
MakeComm(0x484B20, "'+1C'");
MakeDword(0x484B20);
MakeComm(0x484B24, "'+20'");
MakeDword(0x484B24);
MakeComm(0x484B28, "'+24'");
MakeDword(0x484B28);
MakeComm(0x484B2C, "'+28'");
MakeDword(0x484B2C);
MakeComm(0x484B30, "'+2C'");
MakeDword(0x484B30);
MakeComm(0x484B34, "'+30'");
MakeDword(0x484B34);
MakeComm(0x484B38, "'+34'");
MakeDword(0x484B38);
MakeComm(0x484B3C, "'+38'");
MakeDword(0x484B3C);
MakeComm(0x484B40, "'+3C'");
MakeDword(0x484B40);
MakeComm(0x484B44, "'+40'");
MakeDword(0x484B44);
MakeComm(0x484B48, "'+44'");
MakeDword(0x484B48);
MakeComm(0x484B4C, "'+48'");
MakeDword(0x484B4C);
MakeComm(0x484B50, "'+4C'");
MakeDword(0x484B50);
MakeComm(0x484B54, "'+50'");
MakeDword(0x484B54);
MakeComm(0x484B58, "'+54'");
MakeDword(0x484B58);
MakeUnkn(0x484B68, 1);
MakeNameEx(0x484B68, "RTTI_484B68_Class_TTBRootItem", 0);
MakeDword(0x484B68);
MakeUnkn(0x484B6C, 1);
MakeNameEx(0x484B6C, "", 0);
MakeByte(0x484B6C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484B6D, 0x484B79);
MakeDword(0x484B79);
MakeDword(0x484B7D);
MakeWord(0x484B81);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484B83, 0x484B8B);
MakeWord(0x484B8B);
MakeUnkn(0x484B90, 1);
MakeNameEx(0x484B90, "VMT_484B90_TTBItem", 0);
MakeDword(0x484B90);
MakeDword(0x484B94);
MakeDword(0x484B98);
MakeDword(0x484B9C);
MakeDword(0x484BA0);
MakeDword(0x484BA4);
MakeDword(0x484BA8);
MakeDword(0x484BAC);
MakeDword(0x484BB0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484C34, 0x484C3C);
MakeDword(0x484BB4);
MakeDword(0x484BB8);
MakeDword(0x484BBC);
MakeDword(0x484BC0);
MakeDword(0x484BC4);
MakeDword(0x484BC8);
MakeDword(0x484BCC);
MakeDword(0x484BD0);
MakeDword(0x484BD4);
MakeDword(0x484BD8);
MakeComm(0x484BDC, "'+0'");
MakeDword(0x484BDC);
MakeComm(0x484BE0, "'+4'");
MakeDword(0x484BE0);
MakeComm(0x484BE4, "'+8'");
MakeDword(0x484BE4);
MakeComm(0x484BE8, "'+C'");
MakeDword(0x484BE8);
MakeComm(0x484BEC, "'+10'");
MakeDword(0x484BEC);
MakeComm(0x484BF0, "'+14'");
MakeDword(0x484BF0);
MakeComm(0x484BF4, "'+18'");
MakeDword(0x484BF4);
MakeComm(0x484BF8, "'+1C'");
MakeDword(0x484BF8);
MakeComm(0x484BFC, "'+20'");
MakeDword(0x484BFC);
MakeComm(0x484C00, "'+24'");
MakeDword(0x484C00);
MakeComm(0x484C04, "'+28'");
MakeDword(0x484C04);
MakeComm(0x484C08, "'+2C'");
MakeDword(0x484C08);
MakeComm(0x484C0C, "'+30'");
MakeDword(0x484C0C);
MakeComm(0x484C10, "'+34'");
MakeDword(0x484C10);
MakeComm(0x484C14, "'+38'");
MakeDword(0x484C14);
MakeComm(0x484C18, "'+3C'");
MakeDword(0x484C18);
MakeComm(0x484C1C, "'+40'");
MakeDword(0x484C1C);
MakeComm(0x484C20, "'+44'");
MakeDword(0x484C20);
MakeComm(0x484C24, "'+48'");
MakeDword(0x484C24);
MakeComm(0x484C28, "'+4C'");
MakeDword(0x484C28);
MakeComm(0x484C2C, "'+50'");
MakeDword(0x484C2C);
MakeComm(0x484C30, "'+54'");
MakeDword(0x484C30);
MakeUnkn(0x484C3C, 1);
MakeNameEx(0x484C3C, "RTTI_484C3C_Class_TTBItem", 0);
MakeDword(0x484C3C);
MakeUnkn(0x484C40, 1);
MakeNameEx(0x484C40, "", 0);
MakeByte(0x484C40);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484C41, 0x484C49);
MakeDword(0x484C49);
MakeDword(0x484C4D);
MakeWord(0x484C51);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484C53, 0x484C5B);
MakeWord(0x484C5B);
MakeDword(0x484C5D);
MakeDword(0x484C61);
MakeDword(0x484C65);
MakeDword(0x484C69);
MakeDword(0x484C6D);
MakeDword(0x484C71);
MakeWord(0x484C75);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484C77, 0x484C7E);
MakeDword(0x484C7E);
MakeDword(0x484C82);
MakeDword(0x484C86);
MakeDword(0x484C8A);
MakeDword(0x484C8E);
MakeDword(0x484C92);
MakeWord(0x484C96);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484C98, 0x484CA2);
MakeDword(0x484CA2);
MakeDword(0x484CA6);
MakeDword(0x484CAA);
MakeDword(0x484CAE);
MakeDword(0x484CB2);
MakeDword(0x484CB6);
MakeWord(0x484CBA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484CBC, 0x484CC4);
MakeDword(0x484CC4);
MakeDword(0x484CC8);
MakeDword(0x484CCC);
MakeDword(0x484CD0);
MakeDword(0x484CD4);
MakeDword(0x484CD8);
MakeWord(0x484CDC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484CDE, 0x484CE6);
MakeDword(0x484CE6);
MakeDword(0x484CEA);
MakeDword(0x484CEE);
MakeDword(0x484CF2);
MakeDword(0x484CF6);
MakeDword(0x484CFA);
MakeWord(0x484CFE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484D00, 0x484D0C);
MakeDword(0x484D0C);
MakeDword(0x484D10);
MakeDword(0x484D14);
MakeDword(0x484D18);
MakeDword(0x484D1C);
MakeDword(0x484D20);
MakeWord(0x484D24);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484D26, 0x484D2E);
MakeDword(0x484D2E);
MakeDword(0x484D32);
MakeDword(0x484D36);
MakeDword(0x484D3A);
MakeDword(0x484D3E);
MakeDword(0x484D42);
MakeWord(0x484D46);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484D48, 0x484D53);
MakeDword(0x484D53);
MakeDword(0x484D57);
MakeDword(0x484D5B);
MakeDword(0x484D5F);
MakeDword(0x484D63);
MakeDword(0x484D67);
MakeWord(0x484D6B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484D6D, 0x484D79);
MakeDword(0x484D79);
MakeDword(0x484D7D);
MakeDword(0x484D81);
MakeDword(0x484D85);
MakeDword(0x484D89);
MakeDword(0x484D8D);
MakeWord(0x484D91);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484D93, 0x484D98);
MakeDword(0x484D98);
MakeDword(0x484D9C);
MakeDword(0x484DA0);
MakeDword(0x484DA4);
MakeDword(0x484DA8);
MakeDword(0x484DAC);
MakeWord(0x484DB0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484DB2, 0x484DBD);
MakeDword(0x484DBD);
MakeDword(0x484DC1);
MakeDword(0x484DC5);
MakeDword(0x484DC9);
MakeDword(0x484DCD);
MakeDword(0x484DD1);
MakeWord(0x484DD5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484DD7, 0x484DDE);
MakeDword(0x484DDE);
MakeDword(0x484DE2);
MakeDword(0x484DE6);
MakeDword(0x484DEA);
MakeDword(0x484DEE);
MakeDword(0x484DF2);
MakeWord(0x484DF6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484DF8, 0x484E07);
MakeDword(0x484E07);
MakeDword(0x484E0B);
MakeDword(0x484E0F);
MakeDword(0x484E13);
MakeDword(0x484E17);
MakeDword(0x484E1B);
MakeWord(0x484E1F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484E21, 0x484E2D);
MakeDword(0x484E2D);
MakeDword(0x484E31);
MakeDword(0x484E35);
MakeDword(0x484E39);
MakeDword(0x484E3D);
MakeDword(0x484E41);
MakeWord(0x484E45);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484E47, 0x484E4F);
MakeDword(0x484E4F);
MakeDword(0x484E53);
MakeDword(0x484E57);
MakeDword(0x484E5B);
MakeDword(0x484E5F);
MakeDword(0x484E63);
MakeWord(0x484E67);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484E69, 0x484E73);
MakeDword(0x484E73);
MakeDword(0x484E77);
MakeDword(0x484E7B);
MakeDword(0x484E7F);
MakeDword(0x484E83);
MakeDword(0x484E87);
MakeWord(0x484E8B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484E8D, 0x484E96);
MakeDword(0x484E96);
MakeDword(0x484E9A);
MakeDword(0x484E9E);
MakeDword(0x484EA2);
MakeDword(0x484EA6);
MakeDword(0x484EAA);
MakeWord(0x484EAE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484EB0, 0x484EB8);
MakeDword(0x484EB8);
MakeDword(0x484EBC);
MakeDword(0x484EC0);
MakeDword(0x484EC4);
MakeDword(0x484EC8);
MakeDword(0x484ECC);
MakeWord(0x484ED0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484ED2, 0x484EDA);
MakeDword(0x484EDA);
MakeDword(0x484EDE);
MakeDword(0x484EE2);
MakeDword(0x484EE6);
MakeDword(0x484EEA);
MakeDword(0x484EEE);
MakeWord(0x484EF2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484EF4, 0x484EFD);
MakeUnkn(0x484F00, 1);
MakeNameEx(0x484F00, "VMT_484F00_TTBSubmenuItem", 0);
MakeDword(0x484F00);
MakeDword(0x484F04);
MakeDword(0x484F08);
MakeDword(0x484F0C);
MakeDword(0x484F10);
MakeDword(0x484F14);
MakeDword(0x484F18);
MakeDword(0x484F1C);
MakeDword(0x484F20);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484FA4, 0x484FB3);
MakeDword(0x484F24);
MakeDword(0x484F28);
MakeDword(0x484F2C);
MakeDword(0x484F30);
MakeDword(0x484F34);
MakeDword(0x484F38);
MakeDword(0x484F3C);
MakeDword(0x484F40);
MakeDword(0x484F44);
MakeDword(0x484F48);
MakeComm(0x484F4C, "'+0'");
MakeDword(0x484F4C);
MakeComm(0x484F50, "'+4'");
MakeDword(0x484F50);
MakeComm(0x484F54, "'+8'");
MakeDword(0x484F54);
MakeComm(0x484F58, "'+C'");
MakeDword(0x484F58);
MakeComm(0x484F5C, "'+10'");
MakeDword(0x484F5C);
MakeComm(0x484F60, "'+14'");
MakeDword(0x484F60);
MakeComm(0x484F64, "'+18'");
MakeDword(0x484F64);
MakeComm(0x484F68, "'+1C'");
MakeDword(0x484F68);
MakeComm(0x484F6C, "'+20'");
MakeDword(0x484F6C);
MakeComm(0x484F70, "'+24'");
MakeDword(0x484F70);
MakeComm(0x484F74, "'+28'");
MakeDword(0x484F74);
MakeComm(0x484F78, "'+2C'");
MakeDword(0x484F78);
MakeComm(0x484F7C, "'+30'");
MakeDword(0x484F7C);
MakeComm(0x484F80, "'+34'");
MakeDword(0x484F80);
MakeComm(0x484F84, "'+38'");
MakeDword(0x484F84);
MakeComm(0x484F88, "'+3C'");
MakeDword(0x484F88);
MakeComm(0x484F8C, "'+40'");
MakeDword(0x484F8C);
MakeComm(0x484F90, "'+44'");
MakeDword(0x484F90);
MakeComm(0x484F94, "'+48'");
MakeDword(0x484F94);
MakeComm(0x484F98, "'+4C'");
MakeDword(0x484F98);
MakeComm(0x484F9C, "'+50'");
MakeDword(0x484F9C);
MakeComm(0x484FA0, "'+54'");
MakeDword(0x484FA0);
MakeUnkn(0x484FB4, 1);
MakeNameEx(0x484FB4, "RTTI_484FB4_Class_TTBSubmenuItem", 0);
MakeDword(0x484FB4);
MakeUnkn(0x484FB8, 1);
MakeNameEx(0x484FB8, "", 0);
MakeByte(0x484FB8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484FB9, 0x484FC8);
MakeDword(0x484FC8);
MakeDword(0x484FCC);
MakeWord(0x484FD0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484FD2, 0x484FDA);
MakeWord(0x484FDA);
MakeDword(0x484FDC);
MakeDword(0x484FE0);
MakeDword(0x484FE4);
MakeDword(0x484FE8);
MakeDword(0x484FEC);
MakeDword(0x484FF0);
MakeWord(0x484FF4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x484FF6, 0x484FFD);
MakeDword(0x484FFD);
MakeDword(0x485001);
MakeDword(0x485005);
MakeDword(0x485009);
MakeDword(0x48500D);
MakeDword(0x485011);
MakeWord(0x485015);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x485017, 0x485021);
MakeDword(0x485021);
MakeDword(0x485025);
MakeDword(0x485029);
MakeDword(0x48502D);
MakeDword(0x485031);
MakeDword(0x485035);
MakeWord(0x485039);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48503B, 0x485043);
MakeDword(0x485043);
MakeDword(0x485047);
MakeDword(0x48504B);
MakeDword(0x48504F);
MakeDword(0x485053);
MakeDword(0x485057);
MakeWord(0x48505B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48505D, 0x485065);
MakeDword(0x485065);
MakeDword(0x485069);
MakeDword(0x48506D);
MakeDword(0x485071);
MakeDword(0x485075);
MakeDword(0x485079);
MakeWord(0x48507D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48507F, 0x48508B);
MakeDword(0x48508B);
MakeDword(0x48508F);
MakeDword(0x485093);
MakeDword(0x485097);
MakeDword(0x48509B);
MakeDword(0x48509F);
MakeWord(0x4850A3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4850A5, 0x4850B3);
MakeDword(0x4850B3);
MakeDword(0x4850B7);
MakeDword(0x4850BB);
MakeDword(0x4850BF);
MakeDword(0x4850C3);
MakeDword(0x4850C7);
MakeWord(0x4850CB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4850CD, 0x4850D5);
MakeDword(0x4850D5);
MakeDword(0x4850D9);
MakeDword(0x4850DD);
MakeDword(0x4850E1);
MakeDword(0x4850E5);
MakeDword(0x4850E9);
MakeWord(0x4850ED);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4850EF, 0x4850FA);
MakeDword(0x4850FA);
MakeDword(0x4850FE);
MakeDword(0x485102);
MakeDword(0x485106);
MakeDword(0x48510A);
MakeDword(0x48510E);
MakeWord(0x485112);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x485114, 0x485120);
MakeDword(0x485120);
MakeDword(0x485124);
MakeDword(0x485128);
MakeDword(0x48512C);
MakeDword(0x485130);
MakeDword(0x485134);
MakeWord(0x485138);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48513A, 0x48513F);
MakeDword(0x48513F);
MakeDword(0x485143);
MakeDword(0x485147);
MakeDword(0x48514B);
MakeDword(0x48514F);
MakeDword(0x485153);
MakeWord(0x485157);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x485159, 0x485164);
MakeDword(0x485164);
MakeDword(0x485168);
MakeDword(0x48516C);
MakeDword(0x485170);
MakeDword(0x485174);
MakeDword(0x485178);
MakeWord(0x48517C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48517E, 0x485185);
MakeDword(0x485185);
MakeDword(0x485189);
MakeDword(0x48518D);
MakeDword(0x485191);
MakeDword(0x485195);
MakeDword(0x485199);
MakeWord(0x48519D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48519F, 0x4851AE);
MakeDword(0x4851AE);
MakeDword(0x4851B2);
MakeDword(0x4851B6);
MakeDword(0x4851BA);
MakeDword(0x4851BE);
MakeDword(0x4851C2);
MakeWord(0x4851C6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4851C8, 0x4851D5);
MakeDword(0x4851D5);
MakeDword(0x4851D9);
MakeDword(0x4851DD);
MakeDword(0x4851E1);
MakeDword(0x4851E5);
MakeDword(0x4851E9);
MakeWord(0x4851ED);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4851EF, 0x4851FB);
MakeDword(0x4851FB);
MakeDword(0x4851FF);
MakeDword(0x485203);
MakeDword(0x485207);
MakeDword(0x48520B);
MakeDword(0x48520F);
MakeWord(0x485213);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x485215, 0x48521D);
MakeDword(0x48521D);
MakeDword(0x485221);
MakeDword(0x485225);
MakeDword(0x485229);
MakeDword(0x48522D);
MakeDword(0x485231);
MakeWord(0x485235);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x485237, 0x485241);
MakeDword(0x485241);
MakeDword(0x485245);
MakeDword(0x485249);
MakeDword(0x48524D);
MakeDword(0x485251);
MakeDword(0x485255);
MakeWord(0x485259);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48525B, 0x485264);
MakeDword(0x485264);
MakeDword(0x485268);
MakeDword(0x48526C);
MakeDword(0x485270);
MakeDword(0x485274);
MakeDword(0x485278);
MakeWord(0x48527C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48527E, 0x48528C);
MakeDword(0x48528C);
MakeDword(0x485290);
MakeDword(0x485294);
MakeDword(0x485298);
MakeDword(0x48529C);
MakeDword(0x4852A0);
MakeWord(0x4852A4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4852A6, 0x4852AE);
MakeDword(0x4852AE);
MakeDword(0x4852B2);
MakeDword(0x4852B6);
MakeDword(0x4852BA);
MakeDword(0x4852BE);
MakeDword(0x4852C2);
MakeWord(0x4852C6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4852C8, 0x4852D0);
MakeDword(0x4852D0);
MakeDword(0x4852D4);
MakeDword(0x4852D8);
MakeDword(0x4852DC);
MakeDword(0x4852E0);
MakeDword(0x4852E4);
MakeWord(0x4852E8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4852EA, 0x4852F2);
MakeDword(0x4852F2);
MakeDword(0x4852F6);
MakeDword(0x4852FA);
MakeDword(0x4852FE);
MakeDword(0x485302);
MakeDword(0x485306);
MakeWord(0x48530A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48530C, 0x485315);
MakeUnkn(0x485318, 1);
MakeNameEx(0x485318, "VMT_485318_TTBSeparatorItem", 0);
MakeDword(0x485318);
MakeDword(0x48531C);
MakeDword(0x485320);
MakeDword(0x485324);
MakeDword(0x485328);
MakeDword(0x48532C);
MakeDword(0x485330);
MakeDword(0x485334);
MakeDword(0x485338);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4853BC, 0x4853CD);
MakeDword(0x48533C);
MakeDword(0x485340);
MakeDword(0x485344);
MakeDword(0x485348);
MakeDword(0x48534C);
MakeDword(0x485350);
MakeDword(0x485354);
MakeDword(0x485358);
MakeDword(0x48535C);
MakeDword(0x485360);
MakeComm(0x485364, "'+0'");
MakeDword(0x485364);
MakeComm(0x485368, "'+4'");
MakeDword(0x485368);
MakeComm(0x48536C, "'+8'");
MakeDword(0x48536C);
MakeComm(0x485370, "'+C'");
MakeDword(0x485370);
MakeComm(0x485374, "'+10'");
MakeDword(0x485374);
MakeComm(0x485378, "'+14'");
MakeDword(0x485378);
MakeComm(0x48537C, "'+18'");
MakeDword(0x48537C);
MakeComm(0x485380, "'+1C'");
MakeDword(0x485380);
MakeComm(0x485384, "'+20'");
MakeDword(0x485384);
MakeComm(0x485388, "'+24'");
MakeDword(0x485388);
MakeComm(0x48538C, "'+28'");
MakeDword(0x48538C);
MakeComm(0x485390, "'+2C'");
MakeDword(0x485390);
MakeComm(0x485394, "'+30'");
MakeDword(0x485394);
MakeComm(0x485398, "'+34'");
MakeDword(0x485398);
MakeComm(0x48539C, "'+38'");
MakeDword(0x48539C);
MakeComm(0x4853A0, "'+3C'");
MakeDword(0x4853A0);
MakeComm(0x4853A4, "'+40'");
MakeDword(0x4853A4);
MakeComm(0x4853A8, "'+44'");
MakeDword(0x4853A8);
MakeComm(0x4853AC, "'+48'");
MakeDword(0x4853AC);
MakeComm(0x4853B0, "'+4C'");
MakeDword(0x4853B0);
MakeComm(0x4853B4, "'+50'");
MakeDword(0x4853B4);
MakeComm(0x4853B8, "'+54'");
MakeDword(0x4853B8);
MakeUnkn(0x4853D0, 1);
MakeNameEx(0x4853D0, "RTTI_4853D0_Class_TTBSeparatorItem", 0);
MakeDword(0x4853D0);
MakeUnkn(0x4853D4, 1);
MakeNameEx(0x4853D4, "", 0);
MakeByte(0x4853D4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4853D5, 0x4853E6);
MakeDword(0x4853E6);
MakeDword(0x4853EA);
MakeWord(0x4853EE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4853F0, 0x4853F8);
MakeWord(0x4853F8);
MakeDword(0x4853FA);
MakeDword(0x4853FE);
MakeDword(0x485402);
MakeDword(0x485406);
MakeDword(0x48540A);
MakeDword(0x48540E);
MakeWord(0x485412);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x485414, 0x48541A);
MakeDword(0x48541A);
MakeDword(0x48541E);
MakeDword(0x485422);
MakeDword(0x485426);
MakeDword(0x48542A);
MakeDword(0x48542E);
MakeWord(0x485432);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x485434, 0x485439);
MakeDword(0x485439);
MakeDword(0x48543D);
MakeDword(0x485441);
MakeDword(0x485445);
MakeDword(0x485449);
MakeDword(0x48544D);
MakeWord(0x485451);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x485453, 0x48545B);
MakeUnkn(0x48545C, 1);
MakeNameEx(0x48545C, "VMT_48545C_TTBSeparatorItemViewer", 0);
MakeDword(0x48545C);
MakeDword(0x485460);
MakeDword(0x485464);
MakeDword(0x485468);
MakeDword(0x48546C);
MakeDword(0x485470);
MakeDword(0x485474);
MakeDword(0x485478);
MakeDword(0x48547C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4854F4, 0x48550B);
MakeDword(0x485480);
MakeDword(0x485484);
MakeDword(0x485488);
MakeDword(0x48548C);
MakeDword(0x485490);
MakeDword(0x485494);
MakeDword(0x485498);
MakeDword(0x48549C);
MakeDword(0x4854A0);
MakeDword(0x4854A4);
MakeComm(0x4854A8, "'+0'");
MakeDword(0x4854A8);
MakeComm(0x4854AC, "'+4'");
MakeDword(0x4854AC);
MakeComm(0x4854B0, "'+8'");
MakeDword(0x4854B0);
MakeComm(0x4854B4, "'+C'");
MakeDword(0x4854B4);
MakeComm(0x4854B8, "'+10'");
MakeDword(0x4854B8);
MakeComm(0x4854BC, "'+14'");
MakeDword(0x4854BC);
MakeComm(0x4854C0, "'+18'");
MakeDword(0x4854C0);
MakeComm(0x4854C4, "'+1C'");
MakeDword(0x4854C4);
MakeComm(0x4854C8, "'+20'");
MakeDword(0x4854C8);
MakeComm(0x4854CC, "'+24'");
MakeDword(0x4854CC);
MakeComm(0x4854D0, "'+28'");
MakeDword(0x4854D0);
MakeComm(0x4854D4, "'+2C'");
MakeDword(0x4854D4);
MakeComm(0x4854D8, "'+30'");
MakeDword(0x4854D8);
MakeComm(0x4854DC, "'+34'");
MakeDword(0x4854DC);
MakeComm(0x4854E0, "'+38'");
MakeDword(0x4854E0);
MakeComm(0x4854E4, "'+3C'");
MakeDword(0x4854E4);
MakeComm(0x4854E8, "'+40'");
MakeDword(0x4854E8);
MakeComm(0x4854EC, "'+44'");
MakeDword(0x4854EC);
MakeComm(0x4854F0, "'+48'");
MakeDword(0x4854F0);
MakeUnkn(0x48550C, 1);
MakeNameEx(0x48550C, "VMT_48550C_TTBControlItem", 0);
MakeDword(0x48550C);
MakeDword(0x485510);
MakeDword(0x485514);
MakeDword(0x485518);
MakeDword(0x48551C);
MakeDword(0x485520);
MakeDword(0x485524);
MakeDword(0x485528);
MakeDword(0x48552C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4855B0, 0x4855BF);
MakeDword(0x485530);
MakeDword(0x485534);
MakeDword(0x485538);
MakeDword(0x48553C);
MakeDword(0x485540);
MakeDword(0x485544);
MakeDword(0x485548);
MakeDword(0x48554C);
MakeDword(0x485550);
MakeDword(0x485554);
MakeComm(0x485558, "'+0'");
MakeDword(0x485558);
MakeComm(0x48555C, "'+4'");
MakeDword(0x48555C);
MakeComm(0x485560, "'+8'");
MakeDword(0x485560);
MakeComm(0x485564, "'+C'");
MakeDword(0x485564);
MakeComm(0x485568, "'+10'");
MakeDword(0x485568);
MakeComm(0x48556C, "'+14'");
MakeDword(0x48556C);
MakeComm(0x485570, "'+18'");
MakeDword(0x485570);
MakeComm(0x485574, "'+1C'");
MakeDword(0x485574);
MakeComm(0x485578, "'+20'");
MakeDword(0x485578);
MakeComm(0x48557C, "'+24'");
MakeDword(0x48557C);
MakeComm(0x485580, "'+28'");
MakeDword(0x485580);
MakeComm(0x485584, "'+2C'");
MakeDword(0x485584);
MakeComm(0x485588, "'+30'");
MakeDword(0x485588);
MakeComm(0x48558C, "'+34'");
MakeDword(0x48558C);
MakeComm(0x485590, "'+38'");
MakeDword(0x485590);
MakeComm(0x485594, "'+3C'");
MakeDword(0x485594);
MakeComm(0x485598, "'+40'");
MakeDword(0x485598);
MakeComm(0x48559C, "'+44'");
MakeDword(0x48559C);
MakeComm(0x4855A0, "'+48'");
MakeDword(0x4855A0);
MakeComm(0x4855A4, "'+4C'");
MakeDword(0x4855A4);
MakeComm(0x4855A8, "'+50'");
MakeDword(0x4855A8);
MakeComm(0x4855AC, "'+54'");
MakeDword(0x4855AC);
MakeUnkn(0x4855C0, 1);
MakeNameEx(0x4855C0, "RTTI_4855C0_Class_TTBControlItem", 0);
MakeDword(0x4855C0);
MakeUnkn(0x4855C4, 1);
MakeNameEx(0x4855C4, "", 0);
MakeByte(0x4855C4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4855C5, 0x4855D4);
MakeDword(0x4855D4);
MakeDword(0x4855D8);
MakeWord(0x4855DC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4855DE, 0x4855E6);
MakeWord(0x4855E6);
MakeDword(0x4855E8);
MakeDword(0x4855EC);
MakeDword(0x4855F0);
MakeDword(0x4855F4);
MakeDword(0x4855F8);
MakeDword(0x4855FC);
MakeWord(0x485600);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x485602, 0x48560A);
MakeUnkn(0x48560C, 1);
MakeNameEx(0x48560C, "VMT_48560C_TTBPopupView", 0);
MakeDword(0x48560C);
MakeDword(0x485610);
MakeDword(0x485614);
MakeDword(0x485618);
MakeDword(0x48561C);
MakeDword(0x485620);
MakeDword(0x485624);
MakeDword(0x485628);
MakeDword(0x48562C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4856B0, 0x4856BD);
MakeDword(0x485630);
MakeDword(0x485634);
MakeDword(0x485638);
MakeDword(0x48563C);
MakeDword(0x485640);
MakeDword(0x485644);
MakeDword(0x485648);
MakeDword(0x48564C);
MakeDword(0x485650);
MakeDword(0x485654);
MakeComm(0x485658, "'+0'");
MakeDword(0x485658);
MakeComm(0x48565C, "'+4'");
MakeDword(0x48565C);
MakeComm(0x485660, "'+8'");
MakeDword(0x485660);
MakeComm(0x485664, "'+C'");
MakeDword(0x485664);
MakeComm(0x485668, "'+10'");
MakeDword(0x485668);
MakeComm(0x48566C, "'+14'");
MakeDword(0x48566C);
MakeComm(0x485670, "'+18'");
MakeDword(0x485670);
MakeComm(0x485674, "'+1C'");
MakeDword(0x485674);
MakeComm(0x485678, "'+20'");
MakeDword(0x485678);
MakeComm(0x48567C, "'+24'");
MakeDword(0x48567C);
MakeComm(0x485680, "'+28'");
MakeDword(0x485680);
MakeComm(0x485684, "'+2C'");
MakeDword(0x485684);
MakeComm(0x485688, "'+30'");
MakeDword(0x485688);
MakeComm(0x48568C, "'+34'");
MakeDword(0x48568C);
MakeComm(0x485690, "'+38'");
MakeDword(0x485690);
MakeComm(0x485694, "'+3C'");
MakeDword(0x485694);
MakeComm(0x485698, "'+40'");
MakeDword(0x485698);
MakeComm(0x48569C, "'+44'");
MakeDword(0x48569C);
MakeComm(0x4856A0, "'+48'");
MakeDword(0x4856A0);
MakeComm(0x4856A4, "'+4C'");
MakeDword(0x4856A4);
MakeComm(0x4856A8, "'+50'");
MakeDword(0x4856A8);
MakeComm(0x4856AC, "'+54'");
MakeDword(0x4856AC);
MakeUnkn(0x4856C0, 1);
MakeNameEx(0x4856C0, "RTTI_4856C0_Class_TTBPopupView", 0);
MakeDword(0x4856C0);
MakeUnkn(0x4856C4, 1);
MakeNameEx(0x4856C4, "", 0);
MakeByte(0x4856C4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4856C5, 0x4856D2);
MakeDword(0x4856D2);
MakeDword(0x4856D6);
MakeWord(0x4856DA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4856DC, 0x4856E4);
MakeWord(0x4856E4);
MakeUnkn(0x485744, 1);
MakeNameEx(0x485744, "VMT_485744_TTBPopupWindow", 0);
MakeDword(0x485744);
MakeDword(0x485748);
MakeUnkn(0x485723, 1);
MakeNameEx(0x485723, "TTBPopupWindow_IntfTable", 0);
MakeDword(0x485723);
MakeByte(0x485727);
MakeArray(0x485727, 16);
MakeDword(0x485737);
MakeDword(0x485717);
MakeFunction(0x4856E9, -1);
MakeCode(0x4856E9);
MakeDword(0x48571B);
MakeFunction(0x4856FA, -1);
MakeCode(0x4856FA);
MakeDword(0x48571F);
MakeFunction(0x485707, -1);
MakeCode(0x485707);
MakeByte(0x4856E8);
MakeDword(0x48573B);
MakeDword(0x48573F);
MakeDword(0x48574C);
MakeDword(0x485750);
MakeDword(0x485754);
MakeDword(0x485758);
MakeDword(0x48575C);
MakeDword(0x485760);
MakeUnkn(0x485874, 1);
MakeNameEx(0x485874, "TTBPopupWindow_DynamicTable", 0);
MakeWord(0x485874);
MakeWord(0x485876);
MakeWord(0x485878);
MakeWord(0x48587A);
MakeWord(0x48587C);
MakeWord(0x48587E);
MakeWord(0x485880);
MakeWord(0x485882);
MakeWord(0x485884);
MakeWord(0x485886);
MakeWord(0x485888);
MakeWord(0x48588A);
MakeDword(0x48588C);
MakeDword(0x485890);
MakeDword(0x485894);
MakeDword(0x485898);
MakeDword(0x48589C);
MakeDword(0x4858A0);
MakeDword(0x4858A4);
MakeDword(0x4858A8);
MakeDword(0x4858AC);
MakeDword(0x4858B0);
MakeDword(0x4858B4);
MakeDword(0x485764);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4858B8, 0x4858C7);
MakeDword(0x485768);
MakeDword(0x48576C);
MakeDword(0x485770);
MakeDword(0x485774);
MakeDword(0x485778);
MakeDword(0x48577C);
MakeDword(0x485780);
MakeDword(0x485784);
MakeDword(0x485788);
MakeDword(0x48578C);
MakeComm(0x485790, "'+0'");
MakeDword(0x485790);
MakeComm(0x485794, "'+4'");
MakeDword(0x485794);
MakeComm(0x485798, "'+8'");
MakeDword(0x485798);
MakeComm(0x48579C, "'+C'");
MakeDword(0x48579C);
MakeComm(0x4857A0, "'+10'");
MakeDword(0x4857A0);
MakeComm(0x4857A4, "'+14'");
MakeDword(0x4857A4);
MakeComm(0x4857A8, "'+18'");
MakeDword(0x4857A8);
MakeComm(0x4857AC, "'+1C'");
MakeDword(0x4857AC);
MakeComm(0x4857B0, "'+20'");
MakeDword(0x4857B0);
MakeComm(0x4857B4, "'+24'");
MakeDword(0x4857B4);
MakeComm(0x4857B8, "'+28'");
MakeDword(0x4857B8);
MakeComm(0x4857BC, "'+2C'");
MakeDword(0x4857BC);
MakeComm(0x4857C0, "'+30'");
MakeDword(0x4857C0);
MakeComm(0x4857C4, "'+34'");
MakeDword(0x4857C4);
MakeComm(0x4857C8, "'+38'");
MakeDword(0x4857C8);
MakeComm(0x4857CC, "'+3C'");
MakeDword(0x4857CC);
MakeComm(0x4857D0, "'+40'");
MakeDword(0x4857D0);
MakeComm(0x4857D4, "'+44'");
MakeDword(0x4857D4);
MakeComm(0x4857D8, "'+48'");
MakeDword(0x4857D8);
MakeComm(0x4857DC, "'+4C'");
MakeDword(0x4857DC);
MakeComm(0x4857E0, "'+50'");
MakeDword(0x4857E0);
MakeComm(0x4857E4, "'+54'");
MakeDword(0x4857E4);
MakeComm(0x4857E8, "'+58'");
MakeDword(0x4857E8);
MakeComm(0x4857EC, "'+5C'");
MakeDword(0x4857EC);
MakeComm(0x4857F0, "'+60'");
MakeDword(0x4857F0);
MakeComm(0x4857F4, "'+64'");
MakeDword(0x4857F4);
MakeComm(0x4857F8, "'+68'");
MakeDword(0x4857F8);
MakeComm(0x4857FC, "'+6C'");
MakeDword(0x4857FC);
MakeComm(0x485800, "'+70'");
MakeDword(0x485800);
MakeComm(0x485804, "'+74'");
MakeDword(0x485804);
MakeComm(0x485808, "'+78'");
MakeDword(0x485808);
MakeComm(0x48580C, "'+7C'");
MakeDword(0x48580C);
MakeComm(0x485810, "'+80'");
MakeDword(0x485810);
MakeComm(0x485814, "'+84'");
MakeDword(0x485814);
MakeComm(0x485818, "'+88'");
MakeDword(0x485818);
MakeComm(0x48581C, "'+8C'");
MakeDword(0x48581C);
MakeComm(0x485820, "'+90'");
MakeDword(0x485820);
MakeComm(0x485824, "'+94'");
MakeDword(0x485824);
MakeComm(0x485828, "'+98'");
MakeDword(0x485828);
MakeComm(0x48582C, "'+9C'");
MakeDword(0x48582C);
MakeComm(0x485830, "'+A0'");
MakeDword(0x485830);
MakeComm(0x485834, "'+A4'");
MakeDword(0x485834);
MakeComm(0x485838, "'+A8'");
MakeDword(0x485838);
MakeComm(0x48583C, "'+AC'");
MakeDword(0x48583C);
MakeComm(0x485840, "'+B0'");
MakeDword(0x485840);
MakeComm(0x485844, "'+B4'");
MakeDword(0x485844);
MakeComm(0x485848, "'+B8'");
MakeDword(0x485848);
MakeComm(0x48584C, "'+BC'");
MakeDword(0x48584C);
MakeComm(0x485850, "'+C0'");
MakeDword(0x485850);
MakeComm(0x485854, "'+C4'");
MakeDword(0x485854);
MakeComm(0x485858, "'+C8'");
MakeDword(0x485858);
MakeComm(0x48585C, "'+CC'");
MakeDword(0x48585C);
MakeComm(0x485860, "'+D0'");
MakeDword(0x485860);
MakeComm(0x485864, "'+D4'");
MakeDword(0x485864);
MakeComm(0x485868, "'+D8'");
MakeDword(0x485868);
MakeComm(0x48586C, "'+DC'");
MakeDword(0x48586C);
MakeComm(0x485870, "'+E0'");
MakeDword(0x485870);
MakeUnkn(0x4858C8, 1);
MakeNameEx(0x4858C8, "RTTI_4858C8_Class_TTBPopupWindow", 0);
MakeDword(0x4858C8);
MakeUnkn(0x4858CC, 1);
MakeNameEx(0x4858CC, "", 0);
MakeByte(0x4858CC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4858CD, 0x4858DC);
MakeDword(0x4858DC);
MakeDword(0x4858E0);
MakeWord(0x4858E4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4858E6, 0x4858EE);
MakeWord(0x4858EE);
MakeUnkn(0x48594C, 1);
MakeNameEx(0x48594C, "VMT_48594C_TTBPopupMenu", 0);
MakeDword(0x48594C);
MakeDword(0x485950);
MakeUnkn(0x48592C, 1);
MakeNameEx(0x48592C, "TTBPopupMenu_IntfTable", 0);
MakeDword(0x48592C);
MakeByte(0x485930);
MakeArray(0x485930, 16);
MakeDword(0x485940);
MakeDword(0x48591C);
MakeFunction(0x4858F9, -1);
MakeCode(0x4858F9);
MakeDword(0x485920);
MakeFunction(0x485907, -1);
MakeCode(0x485907);
MakeDword(0x485924);
MakeFunction(0x485911, -1);
MakeCode(0x485911);
MakeDword(0x485928);
MakeFunction(0x4858F1, -1);
MakeCode(0x4858F1);
MakeByte(0x4858F0);
MakeDword(0x485944);
MakeDword(0x485948);
MakeDword(0x485954);
MakeDword(0x485958);
MakeDword(0x48595C);
MakeDword(0x485960);
MakeDword(0x485964);
MakeDword(0x485968);
MakeUnkn(0x4859DC, 1);
MakeNameEx(0x4859DC, "TTBPopupMenu_DynamicTable", 0);
MakeWord(0x4859DC);
MakeWord(0x4859DE);
MakeWord(0x4859E0);
MakeWord(0x4859E2);
MakeWord(0x4859E4);
MakeDword(0x4859E6);
MakeDword(0x4859EA);
MakeDword(0x4859EE);
MakeDword(0x4859F2);
MakeDword(0x48596C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4859F6, 0x485A03);
MakeDword(0x485970);
MakeDword(0x485974);
MakeDword(0x485978);
MakeDword(0x48597C);
MakeDword(0x485980);
MakeDword(0x485984);
MakeDword(0x485988);
MakeDword(0x48598C);
MakeDword(0x485990);
MakeDword(0x485994);
MakeComm(0x485998, "'+0'");
MakeDword(0x485998);
MakeComm(0x48599C, "'+4'");
MakeDword(0x48599C);
MakeComm(0x4859A0, "'+8'");
MakeDword(0x4859A0);
MakeComm(0x4859A4, "'+C'");
MakeDword(0x4859A4);
MakeComm(0x4859A8, "'+10'");
MakeDword(0x4859A8);
MakeComm(0x4859AC, "'+14'");
MakeDword(0x4859AC);
MakeComm(0x4859B0, "'+18'");
MakeDword(0x4859B0);
MakeComm(0x4859B4, "'+1C'");
MakeDword(0x4859B4);
MakeComm(0x4859B8, "'+20'");
MakeDword(0x4859B8);
MakeComm(0x4859BC, "'+24'");
MakeDword(0x4859BC);
MakeComm(0x4859C0, "'+28'");
MakeDword(0x4859C0);
MakeComm(0x4859C4, "'+2C'");
MakeDword(0x4859C4);
MakeComm(0x4859C8, "'+30'");
MakeDword(0x4859C8);
MakeComm(0x4859CC, "'+34'");
MakeDword(0x4859CC);
MakeComm(0x4859D0, "'+38'");
MakeDword(0x4859D0);
MakeComm(0x4859D4, "'+3C'");
MakeDword(0x4859D4);
MakeComm(0x4859D8, "'+40'");
MakeDword(0x4859D8);
MakeUnkn(0x485A04, 1);
MakeNameEx(0x485A04, "RTTI_485A04_Class_TTBPopupMenu", 0);
MakeDword(0x485A04);
MakeUnkn(0x485A08, 1);
MakeNameEx(0x485A08, "", 0);
MakeByte(0x485A08);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x485A09, 0x485A16);
MakeDword(0x485A16);
MakeDword(0x485A1A);
MakeWord(0x485A1E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x485A20, 0x485A28);
MakeWord(0x485A28);
MakeDword(0x485A2A);
MakeDword(0x485A2E);
MakeDword(0x485A32);
MakeDword(0x485A36);
MakeDword(0x485A3A);
MakeDword(0x485A3E);
MakeWord(0x485A42);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x485A44, 0x485A4B);
MakeDword(0x485A4B);
MakeDword(0x485A4F);
MakeDword(0x485A53);
MakeDword(0x485A57);
MakeDword(0x485A5B);
MakeDword(0x485A5F);
MakeWord(0x485A63);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x485A65, 0x485A6B);
MakeDword(0x485A6B);
MakeDword(0x485A6F);
MakeDword(0x485A73);
MakeDword(0x485A77);
MakeDword(0x485A7B);
MakeDword(0x485A7F);
MakeWord(0x485A83);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x485A85, 0x485A92);
MakeDword(0x485A92);
MakeDword(0x485A96);
MakeDword(0x485A9A);
MakeDword(0x485A9E);
MakeDword(0x485AA2);
MakeDword(0x485AA6);
MakeWord(0x485AAA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x485AAC, 0x485AB4);
MakeUnkn(0x485AB4, 1);
MakeNameEx(0x485AB4, "VMT_485AB4_TTBModalHandler", 0);
MakeDword(0x485AB4);
MakeDword(0x485AB8);
MakeDword(0x485ABC);
MakeDword(0x485AC0);
MakeDword(0x485AC4);
MakeDword(0x485AC8);
MakeDword(0x485ACC);
MakeDword(0x485AD0);
MakeDword(0x485AD4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x485B00, 0x485B10);
MakeDword(0x485AD8);
MakeDword(0x485ADC);
MakeDword(0x485AE0);
MakeDword(0x485AE4);
MakeDword(0x485AE8);
MakeDword(0x485AEC);
MakeDword(0x485AF0);
MakeDword(0x485AF4);
MakeDword(0x485AF8);
MakeDword(0x485AFC);
MakeUnkn(0x485B10, 1);
MakeNameEx(0x485B10, "VMT_485B10_TItemChangedNotificationData", 0);
MakeDword(0x485B10);
MakeDword(0x485B14);
MakeDword(0x485B18);
MakeDword(0x485B1C);
MakeDword(0x485B20);
MakeDword(0x485B24);
MakeDword(0x485B28);
MakeDword(0x485B2C);
MakeDword(0x485B30);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x485B5C, 0x485B79);
MakeDword(0x485B34);
MakeDword(0x485B38);
MakeDword(0x485B3C);
MakeDword(0x485B40);
MakeDword(0x485B44);
MakeDword(0x485B48);
MakeDword(0x485B4C);
MakeDword(0x485B50);
MakeDword(0x485B54);
MakeDword(0x485B58);
MakeCode(0x485B7C);
MakeCode(0x485BC9);
MakeCode(0x485BCB);
MakeCode(0x485BD8);
MakeCode(0x485BE1);
MakeCode(0x485BE6);
MakeFunction(0x485B7C, 0x485BEE);
MakeByte(0x485BF0);
MakeArray(0x485BF0, 16);
MakeCode(0x485C00);
MakeCode(0x485C2B);
MakeFunction(0x485C00, 0x485C3C);
MakeCode(0x485C3C);
MakeFunction(0x485C3C, 0x485C48);
MakeCode(0x485C48);
MakeFunction(0x485C48, 0x485C67);
MakeCode(0x485C68);
MakeCode(0x485C9A);
MakeComm(0x485CAF, "'TList.Create'");
MakeCode(0x485CC1);
MakeCode(0x485CF0);
MakeCode(0x485D04);
MakeFunction(0x485C68, 0x485D20);
MakeCode(0x485D20);
MakeCode(0x485D4D);
MakeCode(0x485D82);
MakeCode(0x485D86);
MakeFunction(0x485D20, 0x485D8A);
MakeCode(0x485D8C);
MakeCode(0x485DA9);
MakeCode(0x485DCE);
MakeCode(0x485DDE);
MakeCode(0x485DF7);
MakeComm(0x485DFE, "'TScreen.FActiveForm:TForm'");
MakeComm(0x485E0B, "'TForm.FBorderIcons:TBorderIcons'");
MakeCode(0x485E2A);
MakeCode(0x485E39);
MakeFunction(0x485D8C, 0x485E3F);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x485E48, -1);
MakeDword(0x485E44);
MakeDword(0x485E40);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x485E54, 0x485E60);
MakeCode(0x485E60);
MakeComm(0x485E73, "'TTBCustomItemActionLink......................:TTBCustomItem'");
MakeFunction(0x485E60, 0x485E79);
MakeCode(0x485E7C);
MakeComm(0x485E7F, "'TTBCustomItemActionLink.FAction:TBasicAction'");
MakeComm(0x485E8D, "'TCustomAction.FAutoCheck:Boolean'");
MakeComm(0x485E94, "'TTBCustomItemActionLink.......................:TTBCustomItem'");
MakeComm(0x485E97, "'TTBCustomItem.?f34:byte'");
MakeFunction(0x485E7C, 0x485E9F);
MakeUnkn(0x485EA0, 1);
MakeNameEx(0x485EA0, "TTBCustomItemActionLink.IsCaptionLinked", 0x20);
MakeComm(0x485EA0, "'function TTBCustomItemActionLink.IsCaptionLinked:?;'");
MakeCode(0x485EA0);
MakeComm(0x485EAE, "'TTBCustomItemActionLink.FAction:TBasicAction'");
MakeComm(0x485EBC, "'TCustomAction.FCaption:string'");
MakeComm(0x485EBF, "'TTBCustomItemActionLink........................:TTBCustomItem'");
MakeComm(0x485EC2, "'TTBCustomItem.?f38:string'");
MakeCode(0x485ECC);
MakeCode(0x485ED0);
MakeFunction(0x485EA0, 0x485ED4);
MakeUnkn(0x485ED4, 1);
MakeNameEx(0x485ED4, "TTBCustomItemActionLink.IsCheckedLinked", 0x20);
MakeComm(0x485ED4, "'function TTBCustomItemActionLink.IsCheckedLinked:?;'");
MakeCode(0x485ED4);
MakeComm(0x485EE2, "'TTBCustomItemActionLink.FAction:TBasicAction'");
MakeComm(0x485EF0, "'TCustomAction.FChecked:Boolean'");
MakeComm(0x485EF4, "'TTBCustomItemActionLink.........................:TTBCustomItem'");
MakeComm(0x485EF7, "'TTBCustomItem.?f3C:Boolean'");
MakeCode(0x485EFC);
MakeCode(0x485F00);
MakeFunction(0x485ED4, 0x485F04);
MakeUnkn(0x485F04, 1);
MakeNameEx(0x485F04, "TTBCustomItemActionLink.IsEnabledLinked", 0x20);
MakeComm(0x485F04, "'function TTBCustomItemActionLink.IsEnabledLinked:?;'");
MakeCode(0x485F04);
MakeComm(0x485F12, "'TTBCustomItemActionLink.FAction:TBasicAction'");
MakeComm(0x485F20, "'TCustomAction.FEnabled:Boolean'");
MakeComm(0x485F24, "'TTBCustomItemActionLink..........................:TTBCustomItem'");
MakeComm(0x485F27, "'TTBCustomItem.?f3E:byte'");
MakeCode(0x485F2C);
MakeCode(0x485F30);
MakeFunction(0x485F04, 0x485F34);
MakeUnkn(0x485F34, 1);
MakeNameEx(0x485F34, "TTBCustomItemActionLink.IsHelpContextLinked", 0x20);
MakeComm(0x485F34, "'function TTBCustomItemActionLink.IsHelpContextLinked:?;'");
MakeCode(0x485F34);
MakeComm(0x485F42, "'TTBCustomItemActionLink.FAction:TBasicAction'");
MakeComm(0x485F50, "'TCustomAction.FHelpContext:THelpContext'");
MakeComm(0x485F53, "'TTBCustomItemActionLink...........................:TTBCustomItem'");
MakeComm(0x485F56, "'TTBCustomItem.?f48:dword'");
MakeCode(0x485F5B);
MakeCode(0x485F5F);
MakeFunction(0x485F34, 0x485F63);
MakeUnkn(0x485F64, 1);
MakeNameEx(0x485F64, "TTBCustomItemActionLink.IsHintLinked", 0x20);
MakeComm(0x485F64, "'function TTBCustomItemActionLink.IsHintLinked:?;'");
MakeCode(0x485F64);
MakeComm(0x485F72, "'TTBCustomItemActionLink.FAction:TBasicAction'");
MakeComm(0x485F80, "'TCustomAction.FHint:string'");
MakeComm(0x485F83, "'TTBCustomItemActionLink............................:TTBCustomItem'");
MakeComm(0x485F86, "'TTBCustomItem.?f4C:string'");
MakeCode(0x485F90);
MakeCode(0x485F94);
MakeFunction(0x485F64, 0x485F98);
MakeUnkn(0x485F98, 1);
MakeNameEx(0x485F98, "TTBCustomItemActionLink.IsImageIndexLinked", 0x20);
MakeComm(0x485F98, "'function TTBCustomItemActionLink.IsImageIndexLinked:?;'");
MakeCode(0x485F98);
MakeComm(0x485FA6, "'TTBCustomItemActionLink.FAction:TBasicAction'");
MakeComm(0x485FB4, "'TCustomAction.FImageIndex:TImageIndex'");
MakeComm(0x485FBA, "'TTBCustomItemActionLink.............................:TTBCustomItem'");
MakeComm(0x485FBD, "'TTBCustomItem.?f50:TImageIndex'");
MakeCode(0x485FC2);
MakeCode(0x485FC6);
MakeFunction(0x485F98, 0x485FCA);
MakeUnkn(0x485FCC, 1);
MakeNameEx(0x485FCC, "TTBCustomItemActionLink.IsShortCutLinked", 0x20);
MakeComm(0x485FCC, "'function TTBCustomItemActionLink.IsShortCutLinked:?;'");
MakeCode(0x485FCC);
MakeComm(0x485FDA, "'TTBCustomItemActionLink.FAction:TBasicAction'");
MakeComm(0x485FE8, "'TCustomAction.FShortCut:TShortCut'");
MakeComm(0x485FEF, "'TTBCustomItemActionLink..............................:TTBCustomItem'");
MakeComm(0x485FF2, "'TTBCustomItem.?f9A:word'");
MakeCode(0x485FFB);
MakeCode(0x485FFF);
MakeFunction(0x485FCC, 0x486003);
MakeUnkn(0x486004, 1);
MakeNameEx(0x486004, "TTBCustomItemActionLink.IsVisibleLinked", 0x20);
MakeComm(0x486004, "'function TTBCustomItemActionLink.IsVisibleLinked:?;'");
MakeCode(0x486004);
MakeComm(0x486012, "'TTBCustomItemActionLink.FAction:TBasicAction'");
MakeComm(0x486020, "'TCustomAction.FVisible:Boolean'");
MakeComm(0x486027, "'TTBCustomItemActionLink...............................:TTBCustomItem'");
MakeComm(0x48602A, "'TTBCustomItem.?fA8:byte'");
MakeCode(0x486032);
MakeCode(0x486036);
MakeFunction(0x486004, 0x48603A);
MakeUnkn(0x48603C, 1);
MakeNameEx(0x48603C, "TTBCustomItemActionLink.IsOnExecuteLinked", 0x20);
MakeComm(0x48603C, "'function TTBCustomItemActionLink.IsOnExecuteLinked:?;'");
MakeCode(0x48603C);
MakeComm(0x48604A, "'TTBCustomItemActionLink.FAction:TBasicAction'");
MakeComm(0x48604D, "'TBasicAction.FOnExecute:TNotifyEvent'");
MakeComm(0x486050, "'TTBCustomItemActionLink................................:TTBCustomItem'");
MakeComm(0x486053, "'TTBCustomItem.?f78:dword'");
MakeCode(0x48605F);
MakeCode(0x486063);
MakeFunction(0x48603C, 0x486067);
MakeCode(0x486068);
MakeComm(0x486072, "'TTBCustomItemActionLink.sub_00485E7C'");
MakeComm(0x486079, "'TTBCustomItemActionLink.................................:TTBCustomItem'");
MakeComm(0x48607C, "'TTBCustomItem.?f34:byte'");
MakeCode(0x48607F);
MakeFunction(0x486068, 0x486082);
MakeCode(0x486084);
MakeComm(0x48608E, "'TTBCustomItemActionLink.IsCaptionLinked'");
MakeComm(0x486097, "'TTBCustomItemActionLink..................................:TTBCustomItem'");
MakeCode(0x48609F);
MakeFunction(0x486084, 0x4860A2);
MakeCode(0x4860A4);
MakeComm(0x4860AE, "'TTBCustomItemActionLink.IsCheckedLinked'");
MakeComm(0x4860B7, "'TTBCustomItemActionLink...................................:TTBCustomItem'");
MakeCode(0x4860BF);
MakeFunction(0x4860A4, 0x4860C2);
MakeCode(0x4860C4);
MakeComm(0x4860CE, "'TTBCustomItemActionLink.IsEnabledLinked'");
MakeComm(0x4860D7, "'TTBCustomItemActionLink....................................:TTBCustomItem'");
MakeCode(0x4860DF);
MakeFunction(0x4860C4, 0x4860E2);
MakeCode(0x4860E4);
MakeComm(0x4860EE, "'TTBCustomItemActionLink.IsHelpContextLinked'");
MakeComm(0x4860F5, "'TTBCustomItemActionLink.....................................:TTBCustomItem'");
MakeComm(0x4860F8, "'TTBCustomItem.?f48:dword'");
MakeCode(0x4860FB);
MakeFunction(0x4860E4, 0x4860FE);
MakeCode(0x486100);
MakeComm(0x48610A, "'TTBCustomItemActionLink.IsHintLinked'");
MakeComm(0x486111, "'TTBCustomItemActionLink......................................:TTBCustomItem'");
MakeComm(0x486114, "'TTBCustomItem.?f4C:string'");
MakeCode(0x48611E);
MakeFunction(0x486100, 0x486121);
MakeCode(0x486124);
MakeComm(0x48612E, "'TTBCustomItemActionLink.IsImageIndexLinked'");
MakeComm(0x486137, "'TTBCustomItemActionLink.......................................:TTBCustomItem'");
MakeCode(0x48613F);
MakeFunction(0x486124, 0x486142);
MakeCode(0x486144);
MakeComm(0x48614E, "'TTBCustomItemActionLink.IsShortCutLinked'");
MakeComm(0x486155, "'TTBCustomItemActionLink........................................:TTBCustomItem'");
MakeComm(0x486158, "'TTBCustomItem.?f9A:word'");
MakeCode(0x48615F);
MakeFunction(0x486144, 0x486162);
MakeCode(0x486164);
MakeComm(0x48616E, "'TTBCustomItemActionLink.IsVisibleLinked'");
MakeComm(0x486177, "'TTBCustomItemActionLink.........................................:TTBCustomItem'");
MakeCode(0x48617F);
MakeFunction(0x486164, 0x486182);
MakeCode(0x486184);
MakeComm(0x48618E, "'TTBCustomItemActionLink.IsOnExecuteLinked'");
MakeComm(0x486195, "'TTBCustomItemActionLink..........................................:TTBCustomItem'");
MakeComm(0x48619B, "'TTBCustomItem.?f78:dword'");
MakeComm(0x4861A1, "'TTBCustomItem.?f7C:TMainForm'");
MakeCode(0x4861A4);
MakeFunction(0x486184, 0x4861A9);
MakeCode(0x4861AC);
MakeFunction(0x4861AC, 0x4861C0);
MakeUnkn(0x4861C0, 1);
MakeNameEx(0x4861C0, "TTBCustomItem.Create", 0x20);
MakeComm(0x4861C0, "'constructor TTBCustomItem.Create(AOwner:TComponent);'");
MakeCode(0x4861C0);
MakeCode(0x4861CE);
MakeComm(0x4861DB, "'TTBCustomItem.?f3E:byte'");
MakeComm(0x4861DF, "'TTBCustomItem.?f50:TImageIndex'");
MakeComm(0x4861E6, "'TTBCustomItem.?f6C:byte'");
MakeComm(0x4861EA, "'0x1802'");
MakeComm(0x4861F1, "'TTBCustomItem.?f60:word'");
MakeComm(0x4861F5, "'TTBCustomItem.?fA8:byte'");
MakeCode(0x486216);
MakeFunction(0x4861C0, 0x48621B);
MakeByte(0x48621C);
MakeUnkn(0x48621C, 1);
MakeNameEx(0x48621C, "gvar_0048621C", 0);
MakeUnkn(0x486220, 1);
MakeNameEx(0x486220, "TTBCustomItem.Destroy", 0x20);
MakeComm(0x486220, "'destructor TTBCustomItem.Destroy;'");
MakeCode(0x486220);
MakeCode(0x486249);
MakeComm(0x48625D, "'TTBCustomItem.?f90:dword'");
MakeCode(0x48625D);
MakeComm(0x48626E, "'TTBCustomItem.?f5C:dword'");
MakeCode(0x48626E);
MakeComm(0x486276, "'TTBCustomItem.?f30:dword'");
MakeComm(0x486280, "'TTBCustomItem.?f30:dword'");
MakeComm(0x486283, "'TTBCustomItem.?fA0:?'");
MakeComm(0x48628E, "'TTBCustomItem.?f58:?'");
MakeComm(0x4862A2, "'TTBCustomItem.?f70:dword'");
MakeComm(0x4862B2, "'TTBCustomItem.?f70:dword'");
MakeCode(0x4862B2);
MakeComm(0x4862C7, "'TTBCustomItem.?f70:dword'");
MakeCode(0x4862C7);
MakeComm(0x4862CF, "'TTBCustomItem.?f64:dword'");
MakeCode(0x4862CF);
MakeCode(0x4862E7);
MakeFunction(0x486220, 0x4862EB);
MakeUnkn(0x4862EC, 1);
MakeNameEx(0x4862EC, "TTBItem.IsStoredAutoCheck", 0x20);
MakeComm(0x4862EC, "'function TTBItem.IsStoredAutoCheck(Value:Boolean):Boolean;'");
MakeCode(0x4862EC);
MakeComm(0x4862F0, "'TTBItem.?f30:dword'");
MakeCode(0x486307);
MakeFunction(0x4862EC, 0x48630C);
MakeUnkn(0x48630C, 1);
MakeNameEx(0x48630C, "TTBItem.IsStoredCaption", 0x20);
MakeComm(0x48630C, "'function TTBItem.IsStoredCaption(Value:string):Boolean;'");
MakeCode(0x48630C);
MakeComm(0x486310, "'TTBItem.?f30:dword'");
MakeCode(0x486327);
MakeFunction(0x48630C, 0x48632C);
MakeUnkn(0x48632C, 1);
MakeNameEx(0x48632C, "TTBItem.IsStoredChecked", 0x20);
MakeComm(0x48632C, "'function TTBItem.IsStoredChecked(Value:Boolean):Boolean;'");
MakeCode(0x48632C);
MakeComm(0x486330, "'TTBItem.?f30:dword'");
MakeCode(0x486347);
MakeFunction(0x48632C, 0x48634C);
MakeUnkn(0x48634C, 1);
MakeNameEx(0x48634C, "TTBItem.IsStoredEnabled", 0x20);
MakeComm(0x48634C, "'function TTBItem.IsStoredEnabled(Value:Boolean):Boolean;'");
MakeCode(0x48634C);
MakeComm(0x486350, "'TTBItem.?f30:dword'");
MakeCode(0x486367);
MakeFunction(0x48634C, 0x48636C);
MakeUnkn(0x48636C, 1);
MakeNameEx(0x48636C, "TTBItem.IsStoredHint", 0x20);
MakeComm(0x48636C, "'function TTBItem.IsStoredHint(Value:string):Boolean;'");
MakeCode(0x48636C);
MakeComm(0x486370, "'TTBItem.?f30:dword'");
MakeCode(0x486387);
MakeFunction(0x48636C, 0x48638C);
MakeUnkn(0x48638C, 1);
MakeNameEx(0x48638C, "TTBItem.IsStoredHelpContext", 0x20);
MakeComm(0x48638C, "'function TTBItem.IsStoredHelpContext(Value:THelpContext):Boolean;'");
MakeCode(0x48638C);
MakeComm(0x486390, "'TTBItem.?f30:dword'");
MakeCode(0x4863A7);
MakeFunction(0x48638C, 0x4863AC);
MakeUnkn(0x4863AC, 1);
MakeNameEx(0x4863AC, "TTBItem.IsStoredImageIndex", 0x20);
MakeComm(0x4863AC, "'function TTBItem.IsStoredImageIndex(Value:TImageIndex):Boolean;'");
MakeCode(0x4863AC);
MakeComm(0x4863B0, "'TTBItem.?f30:dword'");
MakeCode(0x4863C7);
MakeFunction(0x4863AC, 0x4863CC);
MakeUnkn(0x4863CC, 1);
MakeNameEx(0x4863CC, "TTBItem.IsStoredShortCut", 0x20);
MakeComm(0x4863CC, "'function TTBItem.IsStoredShortCut(Value:TShortCut):Boolean;'");
MakeCode(0x4863CC);
MakeComm(0x4863D0, "'TTBItem.?f30:dword'");
MakeCode(0x4863E7);
MakeFunction(0x4863CC, 0x4863EC);
MakeUnkn(0x4863EC, 1);
MakeNameEx(0x4863EC, "TTBItem.IsStoredVisible", 0x20);
MakeComm(0x4863EC, "'function TTBItem.IsStoredVisible(Value:Boolean):Boolean;'");
MakeCode(0x4863EC);
MakeComm(0x4863F0, "'TTBItem.?f30:dword'");
MakeCode(0x486407);
MakeFunction(0x4863EC, 0x48640C);
MakeUnkn(0x48640C, 1);
MakeNameEx(0x48640C, "TTBItem.IsStoredOnClick", 0x20);
MakeComm(0x48640C, "'function TTBItem.IsStoredOnClick(Value:TNotifyEvent):Boolean;'");
MakeCode(0x48640C);
MakeComm(0x486410, "'TTBItem.?f30:dword'");
MakeCode(0x486427);
MakeFunction(0x48640C, 0x48642C);
MakeUnkn(0x48642C, 1);
MakeNameEx(0x48642C, "TTBItem.GetAction", 0x20);
MakeComm(0x48642C, "'function TTBItem.GetAction:?;'");
MakeCode(0x48642C);
MakeComm(0x48642C, "'TTBItem.?f30:dword'");
MakeCode(0x486437);
MakeFunction(0x48642C, 0x48643A);
MakeUnkn(0x48643C, 1);
MakeNameEx(0x48643C, "TTBCustomItem.sub_0048643C", 0x20);
MakeComm(0x48643C, "'procedure TTBCustomItem.sub_0048643C;'");
MakeCode(0x48643C);
MakeFunction(0x48643C, 0x486442);
MakeCode(0x486444);
MakeCode(0x486464);
MakeFunction(0x486444, 0x486467);
MakeUnkn(0x486468, 1);
MakeNameEx(0x486468, "TTBCustomItem.sub_00486468", 0x20);
MakeComm(0x486468, "'procedure TTBCustomItem.sub_00486468(?:?; ?:?);'");
MakeCode(0x486468);
MakeComm(0x48648F, "'TTBCustomItem.?f34:byte'");
MakeCode(0x486495);
MakeComm(0x48649C, "'TTBCustomItem.?f34:byte'");
MakeCode(0x48649F);
MakeComm(0x4864A3, "'TTBCustomItem.?f38:string'");
MakeCode(0x4864A9);
MakeCode(0x4864B3);
MakeComm(0x4864B7, "'TTBCustomItem.?f3C:Boolean'");
MakeCode(0x4864BD);
MakeCode(0x4864C8);
MakeComm(0x4864CC, "'TTBCustomItem.?f3E:byte'");
MakeCode(0x4864D2);
MakeCode(0x4864DD);
MakeComm(0x4864E1, "'TTBCustomItem.?f48:dword'");
MakeCode(0x4864E7);
MakeComm(0x4864EA, "'TTBCustomItem.?f48:dword'");
MakeCode(0x4864ED);
MakeComm(0x4864F1, "'TTBCustomItem.?f4C:string'");
MakeComm(0x4864F7, "'TTBCustomItem.?f4C:string'");
MakeCode(0x4864F7);
MakeCode(0x486502);
MakeComm(0x486506, "'TTBCustomItem.?f50:TImageIndex'");
MakeCode(0x48650C);
MakeCode(0x486519);
MakeComm(0x48651D, "'TTBCustomItem.?f9A:word'");
MakeCode(0x486527);
MakeComm(0x48652E, "'TTBCustomItem.?f9A:word'");
MakeCode(0x486535);
MakeComm(0x486539, "'TTBCustomItem.?fA8:byte'");
MakeCode(0x486542);
MakeCode(0x486550);
MakeComm(0x486554, "'TTBCustomItem.?f7A:word'");
MakeCode(0x48655B);
MakeComm(0x48655E, "'TTBCustomItem.?f78:dword'");
MakeComm(0x486564, "'TTBCustomItem.?f7C:TMainForm'");
MakeCode(0x486567);
MakeFunction(0x486468, 0x48656B);
MakeUnkn(0x48656C, 1);
MakeNameEx(0x48656C, "TTBItem.SetAction", 0x20);
MakeComm(0x48656C, "'procedure TTBItem.SetAction(Value:TBasicAction);'");
MakeCode(0x48656C);
MakeComm(0x486577, "'TTBItem.?f30:dword'");
MakeComm(0x486581, "'TTBItem.?f30:dword'");
MakeComm(0x486586, "'TTBItem.?f30:dword'");
MakeCode(0x486586);
MakeComm(0x486592, "'TTBCustomItem.sub_0048643C'");
MakeComm(0x48659E, "'TTBItem.?f30:dword'");
MakeCode(0x4865A1);
MakeComm(0x4865A3, "'TTBItem.?f30:dword'");
MakeComm(0x4865AB, "'TTBItem.?f30:dword'");
MakeComm(0x4865B8, "'TBasicAction.FComponentState:TComponentState'");
MakeComm(0x4865BE, "'TTBItem.FComponentState:TComponentState'");
MakeCode(0x4865C8);
MakeCode(0x4865CA);
MakeComm(0x4865D2, "'TTBCustomItem.sub_00486468'");
MakeCode(0x4865E0);
MakeFunction(0x48656C, 0x4865E4);
MakeCode(0x4865E4);
MakeComm(0x4865E4, "'TTBCustomItem.?f30:dword'");
MakeFunction(0x4865E4, 0x4865F3);
MakeUnkn(0x4865F4, 1);
MakeNameEx(0x4865F4, "TTBCustomItem.Loaded", 0x20);
MakeComm(0x4865F4, "'procedure TTBCustomItem.Loaded;'");
MakeCode(0x4865F4);
MakeComm(0x48661B, "'TTBCustomItem.sub_00486468'");
MakeCode(0x486620);
MakeFunction(0x4865F4, 0x486623);
MakeUnkn(0x486624, 1);
MakeNameEx(0x486624, "TTBCustomItem.sub_0041D314", 0x20);
MakeComm(0x486624, "'procedure TTBCustomItem.sub_0041D314(?:?);'");
MakeCode(0x486624);
MakeCode(0x48663F);
MakeCode(0x486655);
MakeFunction(0x486624, 0x48665C);
MakeUnkn(0x48665C, 1);
MakeNameEx(0x48665C, "TTBCustomItem.sub_0041D33C", 0x20);
MakeComm(0x48665C, "'procedure TTBCustomItem.sub_0041D33C(?:?; ?:?);'");
MakeCode(0x48665C);
MakeCode(0x48668B);
MakeFunction(0x48665C, 0x48668F);
MakeUnkn(0x486690, 1);
MakeNameEx(0x486690, "TTBCustomItem.HasParent", 0x20);
MakeComm(0x486690, "'procedure TTBCustomItem.HasParent;'");
MakeCode(0x486690);
MakeFunction(0x486690, 0x486693);
MakeUnkn(0x486694, 1);
MakeNameEx(0x486694, "TTBCustomItem.GetParentComponent", 0x20);
MakeComm(0x486694, "'procedure TTBCustomItem.GetParentComponent;'");
MakeCode(0x486694);
MakeComm(0x486694, "'TTBCustomItem.?f90:dword'");
MakeCode(0x4866AE);
MakeFunction(0x486694, 0x4866B1);
MakeUnkn(0x4866B4, 1);
MakeNameEx(0x4866B4, "TTBCustomItem.SetName", 0x20);
MakeComm(0x4866B4, "'procedure TTBCustomItem.SetName(const NewName:TComponentName);'");
MakeCode(0x4866B4);
MakeComm(0x4866BA, "'TTBCustomItem.Name:TComponentName'");
MakeComm(0x4866CF, "'TTBCustomItem.?f90:dword'");
MakeCode(0x4866E4);
MakeFunction(0x4866B4, 0x4866E7);
MakeUnkn(0x4866E8, 1);
MakeNameEx(0x4866E8, "TTBCustomItem.sub_0041D344", 0x20);
MakeComm(0x4866E8, "'procedure TTBCustomItem.sub_0041D344(?:?);'");
MakeCode(0x4866E8);
MakeComm(0x48670D, "'TTBCustomItem.?f90:dword'");
MakeCode(0x48671E);
MakeCode(0x486736);
MakeComm(0x486773, "'ETBItemError.Create'");
MakeCode(0x48677D);
MakeCode(0x48678A);
MakeCode(0x486796);
MakeCode(0x48679B);
MakeFunction(0x4866E8, 0x4867A3);
MakeUnkn(0x4867A4, 1);
MakeNameEx(0x4867A4, "TTBCustomItem.Notification", 0x20);
MakeComm(0x4867A4, "'procedure TTBCustomItem.Notification(AComponent:TComponent; Operation:TOperation);'");
MakeCode(0x4867A4);
MakeComm(0x4867BD, "'TTBCustomItem.?f64:dword'");
MakeComm(0x4867DB, "'TTBCustomItem.?f54:dword'");
MakeCode(0x4867DB);
MakeComm(0x4867E9, "'TTBCustomItem.?f9C:dword'");
MakeCode(0x4867E9);
MakeComm(0x4867FA, "'TTBCustomItem.?fA4:TTBCustomItem'");
MakeCode(0x4867FA);
MakeCode(0x48680B);
MakeFunction(0x4867A4, 0x48680F);
MakeCode(0x486810);
MakeComm(0x48683A, "'ETBItemError.Create'");
MakeCode(0x486844);
MakeCode(0x486851);
MakeCode(0x48685A);
MakeCode(0x48685F);
MakeFunction(0x486810, 0x486864);
MakeCode(0x486984);
MakeFunction(0x486984, 0x48698C);
MakeCode(0x48698C);
MakeComm(0x486990, "'TTBCustomItem.?f3E:byte'");
MakeComm(0x48699A, "'TTBCustomItem.?f30:dword'");
MakeComm(0x4869A0, "'TTBCustomItem.?f34:byte'");
MakeComm(0x4869A6, "'TTBCustomItem.?f30:dword'");
MakeCode(0x4869A6);
MakeComm(0x4869B8, "'TTBCustomItem.?f34:byte'");
MakeComm(0x4869BE, "'TTBCustomItem.?f3C:Boolean'");
MakeCode(0x4869BE);
MakeComm(0x4869CC, "'TTBCustomItem.?f7A:word'");
MakeCode(0x4869CC);
MakeComm(0x4869E8, "'TTBCustomItem.?f78:dword'");
MakeComm(0x4869F6, "'TTBCustomItem.?f7C:TMainForm'");
MakeComm(0x4869FE, "'TTBCustomItem.FComponentState:TComponentState'");
MakeCode(0x4869FE);
MakeComm(0x486A04, "'TTBCustomItem.?f30:dword'");
MakeComm(0x486A0C, "'TTBCustomItem.?f30:dword'");
MakeComm(0x486A16, "'TTBCustomItem.?f7A:word'");
MakeCode(0x486A16);
MakeComm(0x486A1F, "'TTBCustomItem.?f7C:TMainForm'");
MakeCode(0x486A25);
MakeFunction(0x48698C, 0x486A28);
MakeCode(0x486A28);
MakeComm(0x486A28, "'TTBCustomItem.?f5C:dword'");
MakeCode(0x486A32);
MakeFunction(0x486A28, 0x486A36);
MakeCode(0x486A38);
MakeComm(0x486A38, "'TTBCustomItem.?f5C:dword'");
MakeCode(0x486A48);
MakeComm(0x486A52, "'TTBCustomItem.?f5C:dword'");
MakeCode(0x486A52);
MakeFunction(0x486A38, 0x486A5C);
MakeCode(0x486A5C);
MakeFunction(0x486A5C, 0x486A77);
MakeCode(0x486A78);
MakeCode(0x486ACD);
MakeCode(0x486AFB);
MakeFunction(0x486A78, 0x486AFD);
MakeCode(0x486B00);
MakeCode(0x486B30);
MakeCode(0x486B4F);
MakeCode(0x486B53);
MakeCode(0x486B60);
MakeCode(0x486BC2);
MakeCode(0x486BCD);
MakeFunction(0x486B00, 0x486BD5);
MakeCode(0x486BD8);
MakeFunction(0x486BD8, 0x486BEE);
MakeCode(0x486BF0);
MakeFunction(0x486BF0, 0x486BFD);
MakeCode(0x486C00);
MakeFunction(0x486C00, 0x486C0D);
MakeCode(0x486C10);
MakeComm(0x486C32, "'TTBCustomItem.?f90:dword'");
MakeComm(0x486C52, "'ETBItemError.Create'");
MakeCode(0x486C5C);
MakeCode(0x486C6C);
MakeCode(0x486C76);
MakeComm(0x486C86, "'TList.Create'");
MakeCode(0x486C91);
MakeComm(0x486CA3, "'TTBCustomItem.?f90:dword'");
MakeCode(0x486CD3);
MakeCode(0x486CE0);
MakeCode(0x486CE9);
MakeCode(0x486CEE);
MakeCode(0x486CF0);
MakeCode(0x486CFD);
MakeCode(0x486D06);
MakeCode(0x486D0B);
MakeFunction(0x486C10, 0x486D13);
MakeCode(0x486D14);
MakeFunction(0x486D14, 0x486D48);
MakeCode(0x486D48);
MakeComm(0x486D5F, "'TTBCustomItem.?f5C:dword'");
MakeCode(0x486D5F);
MakeCode(0x486D6E);
MakeCode(0x486D71);
MakeFunction(0x486D48, 0x486D74);
MakeCode(0x486D74);
MakeCode(0x486D8C);
MakeFunction(0x486D74, 0x486D8E);
MakeCode(0x486D90);
MakeCode(0x486DB2);
MakeCode(0x486DBC);
MakeCode(0x486DF4);
MakeCode(0x486E01);
MakeCode(0x486E0A);
MakeCode(0x486E0F);
MakeCode(0x486E11);
MakeFunction(0x486D90, 0x486E17);
MakeCode(0x486E18);
MakeComm(0x486E2E, "'TList.Create'");
MakeCode(0x486E36);
MakeCode(0x486E49);
MakeCode(0x486E6A);
MakeCode(0x486E70);
MakeComm(0x486E7F, "'TItemChangedNotificationData.Create'");
MakeComm(0x486E87, "'TItemChangedNotificationData.?f8:dword'");
MakeComm(0x486E8D, "'TItemChangedNotificationData.?fC:dword'");
MakeComm(0x486E90, "'TItemChangedNotificationData.?f10:dword'");
MakeCode(0x486EA0);
MakeFunction(0x486E18, 0x486EA8);
MakeCode(0x486EA8);
MakeCode(0x486EC8);
MakeCode(0x486F12);
MakeCode(0x486F18);
MakeFunction(0x486EA8, 0x486F20);
MakeUnkn(0x486F20, 1);
MakeNameEx(0x486F20, "TTBPopupWindow.Create", 0x20);
MakeComm(0x486F20, "'constructor TTBPopupWindow.Create;'");
MakeCode(0x486F20);
MakeFunction(0x486F20, 0x486F26);
MakeCode(0x486F28);
MakeComm(0x486F2B, "'TTBCustomItem.?f82:word'");
MakeComm(0x486F35, "'TTBCustomItem.?f84:dword'");
MakeComm(0x486F41, "'TTBCustomItem.?f60:word'");
MakeCode(0x486F41);
MakeComm(0x486F4B, "'TTBCustomItem.sub_0048698C'");
MakeCode(0x486F4E);
MakeFunction(0x486F28, 0x486F50);
MakeCode(0x486F50);
MakeCode(0x486FC2);
MakeCode(0x486FF8);
MakeCode(0x486FFC);
MakeFunction(0x486F50, 0x487007);
MakeCode(0x487008);
MakeCode(0x487030);
MakeComm(0x487038, "'TTBCustomItem.sub_00486F28'");
MakeComm(0x48703F, "'TTBCustomItem.sub_00487AC8'");
MakeCode(0x48704D);
MakeCode(0x487056);
MakeCode(0x487068);
MakeCode(0x48706C);
MakeCode(0x48706E);
MakeComm(0x487082, "'TTBCustomItem.sub_00486F20'");
MakeComm(0x4870CE, "'0x4'");
MakeCode(0x4870ED);
MakeCode(0x487169);
MakeCode(0x487178);
MakeCode(0x48719A);
MakeCode(0x4871C9);
MakeCode(0x4871D8);
MakeCode(0x4871F7);
MakeCode(0x48723C);
MakeCode(0x48724C);
MakeCode(0x487252);
MakeCode(0x487257);
MakeCode(0x487262);
MakeCode(0x487276);
MakeCode(0x487281);
MakeCode(0x48728F);
MakeCode(0x4872A2);
MakeCode(0x4872A7);
MakeCode(0x4872B1);
MakeCode(0x4872B3);
MakeCode(0x4872CF);
MakeCode(0x4872DD);
MakeCode(0x4872E6);
MakeCode(0x4872F7);
MakeCode(0x487308);
MakeCode(0x487311);
MakeCode(0x48732F);
MakeCode(0x487345);
MakeCode(0x487348);
MakeCode(0x48734B);
MakeCode(0x487354);
MakeCode(0x48736A);
MakeCode(0x4873C4);
MakeCode(0x4873C7);
MakeCode(0x487405);
MakeCode(0x48740B);
MakeCode(0x48741C);
MakeCode(0x487476);
MakeCode(0x487479);
MakeCode(0x4874B7);
MakeCode(0x4874BD);
MakeCode(0x4874C7);
MakeCode(0x4874DF);
MakeComm(0x4874E8, "'TRect.Left:Longint'");
MakeCode(0x4874EE);
MakeCode(0x48750C);
MakeCode(0x48751E);
MakeCode(0x48752E);
MakeComm(0x487540, "'0x0'");
MakeCode(0x487540);
MakeCode(0x48755B);
MakeCode(0x487569);
MakeCode(0x487574);
MakeCode(0x487584);
MakeCode(0x48758E);
MakeCode(0x48759F);
MakeCode(0x4875AB);
MakeCode(0x4875AF);
MakeCode(0x487640);
MakeCode(0x48766A);
MakeCode(0x4876A2);
MakeCode(0x4876BD);
MakeCode(0x4876FB);
MakeCode(0x487705);
MakeCode(0x48771C);
MakeFunction(0x487008, 0x487728);
MakeByte(0x487728);
MakeUnkn(0x487728, 1);
MakeNameEx(0x487728, "gvar_00487728", 0);
MakeByte(0x48772C);
MakeUnkn(0x48772C, 1);
MakeNameEx(0x48772C, "gvar_0048772C", 0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x487738, -1);
MakeDword(0x487734);
MakeDword(0x487730);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x487744, 0x48774E);
MakeCode(0x487750);
MakeComm(0x487769, "'TTBModalHandler.Create'");
MakeComm(0x4877BF, "'TTBModalHandler..:dword'");
MakeCode(0x4877F4);
MakeCode(0x487801);
MakeComm(0x487806, "'TTBModalHandler..:dword'");
MakeCode(0x487822);
MakeCode(0x487827);
MakeCode(0x487829);
MakeCode(0x487836);
MakeCode(0x48783F);
MakeCode(0x487844);
MakeFunction(0x487750, 0x48785B);
MakeCode(0x48785C);
MakeFunction(0x48785C, 0x487887);
MakeCode(0x487888);
MakeCode(0x4878B2);
MakeCode(0x4878C9);
MakeCode(0x4878EA);
MakeCode(0x487909);
MakeCode(0x48790F);
MakeFunction(0x487888, 0x487918);
MakeCode(0x487918);
MakeFunction(0x487918, 0x487939);
MakeCode(0x48793C);
MakeCode(0x487967);
MakeCode(0x487984);
MakeCode(0x4879B5);
MakeCode(0x4879C7);
MakeCode(0x4879F3);
MakeCode(0x4879FD);
MakeCode(0x487A16);
MakeCode(0x487A31);
MakeCode(0x487A3B);
MakeCode(0x487A54);
MakeCode(0x487A94);
MakeCode(0x487A9E);
MakeCode(0x487AB7);
MakeCode(0x487ABB);
MakeFunction(0x48793C, 0x487AC6);
MakeCode(0x487AC8);
MakeFunction(0x487AC8, 0x487ACB);
MakeUnkn(0x487ACC, 1);
MakeNameEx(0x487ACC, "TTBItemViewer.Create", 0x20);
MakeComm(0x487ACC, "'constructor TTBItemViewer.Create;'");
MakeCode(0x487ACC);
MakeFunction(0x487ACC, 0x487AD2);
MakeCode(0x487AD4);
MakeFunction(0x487AD4, 0x487AD7);
MakeCode(0x487AD8);
MakeCode(0x487B09);
MakeCode(0x487B12);
MakeCode(0x487B23);
MakeFunction(0x487AD8, 0x487B27);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x487B30, -1);
MakeDword(0x487B2C);
MakeDword(0x487B28);
MakeCode(0x487B34);
MakeComm(0x487B34, "'TTBCustomItem.?f90:dword'");
MakeFunction(0x487B34, 0x487B54);
MakeCode(0x487B54);
MakeCode(0x487B80);
MakeCode(0x487B98);
MakeCode(0x487BA6);
MakeCode(0x487BAB);
MakeFunction(0x487B54, 0x487BAF);
MakeCode(0x487BB0);
MakeFunction(0x487BB0, 0x487BBD);
MakeCode(0x487BC0);
MakeCode(0x487BE9);
MakeCode(0x487C09);
MakeCode(0x487C0D);
MakeFunction(0x487BC0, 0x487C11);
MakeUnkn(0x487C14, 1);
MakeNameEx(0x487C14, "TTBItem.SetCaption", 0x20);
MakeComm(0x487C14, "'procedure TTBItem.SetCaption(Value:AnsiString);'");
MakeCode(0x487C14);
MakeComm(0x487C34, "'TTBItem.?f38:string'");
MakeComm(0x487C41, "'TTBItem.?f38:string'");
MakeComm(0x487C52, "'TTBItem.sub_00487B34'");
MakeCode(0x487C55);
MakeCode(0x487C62);
MakeCode(0x487C6B);
MakeCode(0x487C70);
MakeFunction(0x487C14, 0x487C76);
MakeUnkn(0x487C78, 1);
MakeNameEx(0x487C78, "TTBItem.SetChecked", 0x20);
MakeComm(0x487C78, "'procedure TTBItem.SetChecked(Value:Boolean);'");
MakeCode(0x487C78);
MakeComm(0x487C7E, "'TTBItem.?f3C:Boolean'");
MakeComm(0x487C83, "'TTBItem.?f3C:Boolean'");
MakeComm(0x487C8C, "'TTBItem.sub_00487B34'");
MakeCode(0x487C9A);
MakeFunction(0x487C78, 0x487C9D);
MakeUnkn(0x487CA0, 1);
MakeNameEx(0x487CA0, "TTBItem.SetDisplayMode", 0x20);
MakeComm(0x487CA0, "'procedure TTBItem.SetDisplayMode(Value:TTBItemDisplayMode);'");
MakeCode(0x487CA0);
MakeComm(0x487CA0, "'TTBItem.?f3D:byte'");
MakeComm(0x487CA5, "'TTBItem.?f3D:byte'");
MakeComm(0x487CAC, "'TTBItem.sub_00487B34'");
MakeFunction(0x487CA0, 0x487CB0);
MakeCode(0x487CB0);
MakeComm(0x487CB4, "'TTBCustomItem.sub_00487B34'");
MakeFunction(0x487CB0, 0x487CB8);
MakeUnkn(0x487CB8, 1);
MakeNameEx(0x487CB8, "TTBItem.SetEnabled", 0x20);
MakeComm(0x487CB8, "'procedure TTBItem.SetEnabled(Value:Boolean);'");
MakeCode(0x487CB8);
MakeComm(0x487CB8, "'TTBItem.?f3E:byte'");
MakeComm(0x487CBD, "'TTBItem.?f3E:byte'");
MakeComm(0x487CC2, "'TTBItem.sub_00487CB0'");
MakeFunction(0x487CB8, 0x487CC6);
MakeUnkn(0x487CC8, 1);
MakeNameEx(0x487CC8, "TTBItem.SetGroupIndex", 0x20);
MakeComm(0x487CC8, "'procedure TTBItem.SetGroupIndex(Value:Integer);'");
MakeCode(0x487CC8);
MakeComm(0x487CC8, "'TTBItem.?f44:Integer'");
MakeComm(0x487CCD, "'TTBItem.?f44:Integer'");
MakeComm(0x487CD0, "'TTBItem.?f3C:Boolean'");
MakeFunction(0x487CC8, 0x487CDC);
MakeUnkn(0x487CDC, 1);
MakeNameEx(0x487CDC, "TTBItem.SetImageIndex", 0x20);
MakeComm(0x487CDC, "'procedure TTBItem.SetImageIndex(Value:TImageIndex);'");
MakeCode(0x487CDC);
MakeComm(0x487CDF, "'TTBItem.?f50:TImageIndex'");
MakeComm(0x487CEA, "'TTBItem.?f50:TImageIndex'");
MakeComm(0x487CF5, "'TTBItem.sub_00487B34'");
MakeCode(0x487CF8);
MakeFunction(0x487CDC, 0x487CFA);
MakeCode(0x487CFC);
MakeCode(0x487D52);
MakeCode(0x487D6C);
MakeCode(0x487D6E);
MakeComm(0x487D7D, "'TTBImageChangeLink.Create'");
MakeCode(0x487DA3);
MakeCode(0x487DB6);
MakeFunction(0x487CFC, 0x487DC3);
MakeUnkn(0x487DC4, 1);
MakeNameEx(0x487DC4, "TTBItem.SetImages", 0x20);
MakeComm(0x487DC4, "'procedure TTBItem.SetImages(Value:TCustomImageList);'");
MakeCode(0x487DC4);
MakeComm(0x487DCA, "'TTBItem.?f54:dword'");
MakeComm(0x487DCF, "'TTBItem.?f58:?'");
MakeComm(0x487DD3, "'TTBItem.?f54:dword'");
MakeComm(0x487DE5, "'TTBItem.sub_00487B34'");
MakeCode(0x487DE8);
MakeFunction(0x487DC4, 0x487DEB);
MakeUnkn(0x487DEC, 1);
MakeNameEx(0x487DEC, "TTBSubmenuItem.SetSubMenuImages", 0x20);
MakeComm(0x487DEC, "'procedure TTBSubmenuItem.SetSubMenuImages(Value:TCustomImageList);'");
MakeCode(0x487DEC);
MakeComm(0x487DEF, "'TTBSubmenuItem.?f9C:dword'");
MakeComm(0x487DF7, "'TTBSubmenuItem.?fA0:?'");
MakeComm(0x487DFE, "'TTBSubmenuItem.?f9C:dword'");
MakeCode(0x487E15);
MakeFunction(0x487DEC, 0x487E17);
MakeUnkn(0x487E18, 1);
MakeNameEx(0x487E18, "TTBItem.SetInheritOptions", 0x20);
MakeComm(0x487E18, "'procedure TTBItem.SetInheritOptions(Value:Boolean);'");
MakeCode(0x487E18);
MakeComm(0x487E18, "'TTBItem.?f6C:byte'");
MakeComm(0x487E1D, "'TTBItem.?f6C:byte'");
MakeFunction(0x487E18, 0x487E26);
MakeUnkn(0x487E28, 1);
MakeNameEx(0x487E28, "TTBSubmenuItem.SetLinkSubitems", 0x20);
MakeComm(0x487E28, "'procedure TTBSubmenuItem.SetLinkSubitems(Value:TTBCustomItem);'");
MakeCode(0x487E28);
MakeComm(0x487E34, "'TTBSubmenuItem.?fA4:TTBCustomItem'");
MakeCode(0x487E34);
MakeComm(0x487E4C, "'TTBSubmenuItem.?fA4:TTBCustomItem'");
MakeCode(0x487E4C);
MakeComm(0x487E5F, "'TTBCustomItem.?f64:dword'");
MakeCode(0x487E69);
MakeCode(0x487E77);
MakeFunction(0x487E28, 0x487E7A);
MakeCode(0x487E7C);
MakeCode(0x487E90);
MakeFunction(0x487E7C, 0x487E95);
MakeCode(0x487E98);
MakeComm(0x487E9E, "'TTBCustomItem.?f3F:word'");
MakeComm(0x487EA2, "'TTBCustomItem.?f6C:byte'");
MakeComm(0x487EA8, "'TTBCustomItem.?f90:dword'");
MakeComm(0x487EB1, "'TTBCustomItem.?f90:dword'");
MakeComm(0x487EB7, "'0x1'");
MakeComm(0x487EC6, "'0x0'");
MakeCode(0x487EC6);
MakeComm(0x487ECD, "'TTBCustomItem.?f68:word'");
MakeCode(0x487ECD);
MakeComm(0x487ED6, "'TTBCustomItem.?f6A:word'");
MakeComm(0x487EE5, "'TTBCustomItem.?f3F:word'");
MakeComm(0x487EEB, "'TTBCustomItem.?f3F:word'");
MakeComm(0x487EEF, "'0x367'");
MakeComm(0x487EF9, "'0x367'");
MakeComm(0x487F0E, "'TTBCustomItem.sub_00487B34'");
MakeCode(0x487F11);
MakeCode(0x487F22);
MakeCode(0x487F36);
MakeCode(0x487F3A);
MakeFunction(0x487E98, 0x487F3F);
MakeByte(0x487F40);
MakeUnkn(0x487F40, 1);
MakeNameEx(0x487F40, "gvar_00487F40", 0);
MakeByte(0x487F44);
MakeUnkn(0x487F44, 1);
MakeNameEx(0x487F44, "gvar_00487F44", 0);
MakeByte(0x487F48);
MakeUnkn(0x487F48, 1);
MakeNameEx(0x487F48, "gvar_00487F48", 0);
MakeUnkn(0x487F4C, 1);
MakeNameEx(0x487F4C, "TTBItem.SetMaskOptions", 0x20);
MakeComm(0x487F4C, "'procedure TTBItem.SetMaskOptions(Value:TTBItemOptions);'");
MakeCode(0x487F4C);
MakeComm(0x487F58, "'TTBItem.?f68:word'");
MakeComm(0x487F62, "'TTBItem.?f68:word'");
MakeCode(0x487F6D);
MakeFunction(0x487F4C, 0x487F70);
MakeUnkn(0x487F70, 1);
MakeNameEx(0x487F70, "TTBItem.SetOptions", 0x20);
MakeComm(0x487F70, "'procedure TTBItem.SetOptions(Value:TTBItemOptions);'");
MakeCode(0x487F70);
MakeComm(0x487F8B, "'TTBItem.?f6A:word'");
MakeComm(0x487F95, "'TTBItem.?f6A:word'");
MakeCode(0x487FA0);
MakeFunction(0x487F70, 0x487FA3);
MakeUnkn(0x487FA4, 1);
MakeNameEx(0x487FA4, "TTBItem.SetRadioItem", 0x20);
MakeComm(0x487FA4, "'procedure TTBItem.SetRadioItem(Value:Boolean);'");
MakeCode(0x487FA4);
MakeComm(0x487FA4, "'TTBItem.?f98:byte'");
MakeComm(0x487FAC, "'TTBItem.?f98:byte'");
MakeComm(0x487FB6, "'TTBItem.sub_00487B34'");
MakeFunction(0x487FA4, 0x487FBA);
MakeUnkn(0x487FBC, 1);
MakeNameEx(0x487FBC, "TTBItem.SetVisible", 0x20);
MakeComm(0x487FBC, "'procedure TTBItem.SetVisible(Value:Boolean);'");
MakeCode(0x487FBC);
MakeComm(0x487FBC, "'TTBItem.?fA8:byte'");
MakeComm(0x487FC4, "'TTBItem.?fA8:byte'");
MakeComm(0x487FCE, "'TTBItem.sub_00487B34'");
MakeFunction(0x487FBC, 0x487FD2);
MakeUnkn(0x487FD4, 1);
MakeNameEx(0x487FD4, "TTBSubmenuItem.Create", 0x20);
MakeComm(0x487FD4, "'constructor TTBSubmenuItem.Create(AOwner:TComponent);'");
MakeCode(0x487FD4);
MakeCode(0x487FE2);
MakeComm(0x487FEF, "'TTBSubmenuItem.?f60:word'");
MakeComm(0x487FF3, "'0x81'");
MakeComm(0x487FFA, "'TTBSubmenuItem.?f60:word'");
MakeCode(0x488013);
MakeFunction(0x487FD4, 0x488018);
MakeByte(0x488018);
MakeUnkn(0x488018, 1);
MakeNameEx(0x488018, "gvar_00488018", 0);
MakeUnkn(0x48801C, 1);
MakeNameEx(0x48801C, "TTBSubmenuItem.GetDropdownCombo", 0x20);
MakeComm(0x48801C, "'function TTBSubmenuItem.GetDropdownCombo:Boolean;'");
MakeCode(0x48801C);
MakeComm(0x48801C, "'TTBSubmenuItem.?f60:word'");
MakeFunction(0x48801C, 0x488024);
MakeUnkn(0x488024, 1);
MakeNameEx(0x488024, "TTBSubmenuItem.SetDropdownCombo", 0x20);
MakeComm(0x488024, "'procedure TTBSubmenuItem.SetDropdownCombo(Value:Boolean);'");
MakeCode(0x488024);
MakeComm(0x488027, "'TTBSubmenuItem.?f60:word'");
MakeComm(0x488036, "'0x20'");
MakeComm(0x48803D, "'TTBSubmenuItem.?f60:word'");
MakeComm(0x488041, "'TTBSubmenuItem.?f60:word'");
MakeComm(0x488047, "'0x20'");
MakeCode(0x488047);
MakeComm(0x488050, "'TTBSubmenuItem.?f60:word'");
MakeComm(0x488054, "'TTBSubmenuItem.?f60:word'");
MakeCode(0x488058);
MakeComm(0x48805E, "'TTBSubmenuItem.sub_00487B34'");
MakeCode(0x488061);
MakeFunction(0x488024, 0x488063);
MakeByte(0x488064);
MakeUnkn(0x488064, 1);
MakeNameEx(0x488064, "gvar_00488064", 0);
MakeUnkn(0x488068, 1);
MakeNameEx(0x488068, "TTBSeparatorItem.Create", 0x20);
MakeComm(0x488068, "'constructor TTBSeparatorItem.Create(AOwner:TComponent);'");
MakeCode(0x488068);
MakeCode(0x488076);
MakeComm(0x488083, "'0x1802'");
MakeComm(0x48808C, "'TTBSeparatorItem.?f60:word'");
MakeComm(0x488090, "'0x14'");
MakeComm(0x488097, "'TTBSeparatorItem.?f60:word'");
MakeCode(0x4880B0);
MakeFunction(0x488068, 0x4880B5);
MakeByte(0x4880B8);
MakeUnkn(0x4880B8, 1);
MakeNameEx(0x4880B8, "gvar_004880B8", 0);
MakeByte(0x4880BC);
MakeUnkn(0x4880BC, 1);
MakeNameEx(0x4880BC, "gvar_004880BC", 0);
MakeUnkn(0x4880C0, 1);
MakeNameEx(0x4880C0, "TTBSeparatorItemViewer.Create", 0x20);
MakeComm(0x4880C0, "'constructor TTBSeparatorItemViewer.Create;'");
MakeCode(0x4880C0);
MakeFunction(0x4880C0, 0x4880C6);
MakeUnkn(0x4880C8, 1);
MakeNameEx(0x4880C8, "TTBSeparatorItem.SetBlank", 0x20);
MakeComm(0x4880C8, "'procedure TTBSeparatorItem.SetBlank(Value:Boolean);'");
MakeCode(0x4880C8);
MakeComm(0x4880C8, "'TTBSeparatorItem.Blank:Boolean'");
MakeComm(0x4880D0, "'TTBSeparatorItem.Blank:Boolean'");
MakeComm(0x4880DA, "'TTBSeparatorItem.sub_00487B34'");
MakeFunction(0x4880C8, 0x4880DE);
MakeCode(0x4880E0);
MakeCode(0x488100);
MakeCode(0x48810C);
MakeFunction(0x4880E0, 0x488113);
MakeCode(0x488114);
MakeComm(0x48812B, "'TTBSeparatorItemViewer.?f1C:dword'");
MakeComm(0x488156, "'TTBSeparatorItemViewer.?f24:dword'");
MakeCode(0x488166);
MakeComm(0x488168, "'TTBSeparatorItemViewer.?f2C:byte'");
MakeCode(0x488168);
MakeCode(0x488175);
MakeCode(0x488183);
MakeCode(0x4881A0);
MakeComm(0x4881A4, "'TTBSeparatorItemViewer.?f24:dword'");
MakeCode(0x4881BF);
MakeCode(0x4881CC);
MakeCode(0x4881DF);
MakeCode(0x4881E9);
MakeCode(0x4881FE);
MakeCode(0x48820F);
MakeFunction(0x488114, 0x488218);
MakeCode(0x488218);
MakeFunction(0x488218, 0x48821B);
MakeUnkn(0x48821C, 1);
MakeNameEx(0x48821C, "TTBControlItem.Create", 0x20);
MakeComm(0x48821C, "'constructor TTBControlItem.Create(AOwner:TComponent);'");
MakeCode(0x48821C);
MakeCode(0x48822A);
MakeComm(0x488237, "'0x2'");
MakeComm(0x488240, "'TTBControlItem.?f60:word'");
MakeComm(0x488244, "'0x10'");
MakeComm(0x48824B, "'TTBControlItem.?f60:word'");
MakeCode(0x488264);
MakeFunction(0x48821C, 0x488269);
MakeByte(0x48826C);
MakeUnkn(0x48826C, 1);
MakeNameEx(0x48826C, "gvar_0048826C", 0);
MakeByte(0x488270);
MakeUnkn(0x488270, 1);
MakeNameEx(0x488270, "gvar_00488270", 0);
MakeUnkn(0x488274, 1);
MakeNameEx(0x488274, "TTBControlItem.Destroy", 0x20);
MakeComm(0x488274, "'destructor TTBControlItem.Destroy;'");
MakeCode(0x488274);
MakeComm(0x48828B, "'TTBControlItem.?fB4:byte'");
MakeComm(0x488294, "'TTBControlItem.Control:TControl'");
MakeComm(0x48829D, "'TTBControlItem.Control:TControl'");
MakeComm(0x4882A3, "'TControl.FComponentState:TComponentState'");
MakeComm(0x4882A9, "'TTBControlItem.Control:TControl'");
MakeCode(0x4882B4);
MakeCode(0x4882BF);
MakeFunction(0x488274, 0x4882C2);
MakeUnkn(0x4882C4, 1);
MakeNameEx(0x4882C4, "TTBControlItem.Notification", 0x20);
MakeComm(0x4882C4, "'procedure TTBControlItem.Notification(AComponent:TComponent; Operation:TOperation);'");
MakeCode(0x4882C4);
MakeComm(0x4882DD, "'TTBControlItem.Control:TControl'");
MakeCode(0x4882EE);
MakeFunction(0x4882C4, 0x4882F2);
MakeUnkn(0x4882F4, 1);
MakeNameEx(0x4882F4, "TTBControlItem.SetControl", 0x20);
MakeComm(0x4882F4, "'procedure TTBControlItem.SetControl(Value:TControl);'");
MakeCode(0x4882F4);
MakeComm(0x4882F7, "'TTBControlItem.Control:TControl'");
MakeComm(0x4882FF, "'TTBControlItem.Control:TControl'");
MakeCode(0x488312);
MakeComm(0x488318, "'TTBControlItem.sub_00487B34'");
MakeCode(0x48831B);
MakeFunction(0x4882F4, 0x48831D);
MakeCode(0x488320);
MakeCode(0x488332);
MakeComm(0x488344, "'TTBItemViewer.?f1C:dword'");
MakeComm(0x488347, "'TTBItemViewer.?f24:dword'");
MakeComm(0x48834D, "'TTBItemViewer.?f18:dword'");
MakeCode(0x48836A);
MakeFunction(0x488320, 0x488373);
MakeUnkn(0x488374, 1);
MakeNameEx(0x488374, "TTBItemViewer.Destroy", 0x20);
MakeComm(0x488374, "'destructor TTBItemViewer.Destroy;'");
MakeCode(0x488374);
MakeCode(0x488396);
MakeCode(0x4883B2);
MakeFunction(0x488374, 0x4883B5);
MakeCode(0x4883B8);
MakeCode(0x4883CE);
MakeComm(0x4883D7, "'TTBItemViewerAccObject.Create'");
MakeCode(0x4883DF);
MakeFunction(0x4883B8, 0x4883E4);
MakeCode(0x488454);
MakeFunction(0x488454, 0x48845D);
MakeCode(0x488460);
MakeCode(0x488475);
MakeFunction(0x488460, 0x488478);
MakeCode(0x488478);
MakeComm(0x488480, "'TTBItemViewer.?f1C:dword'");
MakeCode(0x4884A5);
MakeFunction(0x488478, 0x4884A8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4884B0, -1);
MakeDword(0x4884AC);
MakeDword(0x4884A8);
MakeCode(0x4884B4);
MakeCode(0x488519);
MakeCode(0x488538);
MakeCode(0x488578);
MakeComm(0x488584, "'TApplication.FHintShortCuts:Boolean'");
MakeCode(0x4885DC);
MakeCode(0x4885E9);
MakeCode(0x4885FF);
MakeCode(0x488604);
MakeFunction(0x4884B4, 0x48860D);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x488618, -1);
MakeDword(0x488614);
MakeDword(0x488610);
MakeUnkn(0x488620, 1);
MakeNameEx(0x488620, "TTBItemViewer.sub_00488620", 0x20);
MakeComm(0x488620, "'procedure TTBItemViewer.sub_00488620;'");
MakeCode(0x488620);
MakeComm(0x48863D, "'TTBItemViewer.sub_00488478'");
MakeComm(0x488651, "'TTBItemViewer.?f1C:dword'");
MakeComm(0x48865A, "'TTBItemViewer.?f1C:dword'");
MakeComm(0x488669, "'TTBItemViewer.?f1C:dword'");
MakeCode(0x488669);
MakeCode(0x488676);
MakeCode(0x488678);
MakeCode(0x48867A);
MakeCode(0x488687);
MakeCode(0x488690);
MakeCode(0x488695);
MakeFunction(0x488620, 0x48869D);
MakeCode(0x4886A0);
MakeCode(0x4886CF);
MakeCode(0x4886D3);
MakeFunction(0x4886A0, 0x4886D7);
MakeCode(0x4886D8);
MakeCode(0x4886E5);
MakeCode(0x4886F6);
MakeCode(0x48870A);
MakeCode(0x488714);
MakeFunction(0x4886D8, 0x488717);
MakeCode(0x488718);
MakeCode(0x488736);
MakeCode(0x488739);
MakeFunction(0x488718, 0x48873C);
MakeCode(0x48873C);
MakeCode(0x48879A);
MakeCode(0x4887A8);
MakeComm(0x4887B2, "'TTBItemViewer.sub_00488620'");
MakeCode(0x4887BF);
MakeComm(0x4887E6, "'TTBItemViewer.sub_00488478'");
MakeCode(0x488807);
MakeComm(0x48883A, "'TTBItemViewer.sub_00488478'");
MakeCode(0x488859);
MakeCode(0x48886C);
MakeComm(0x48888C, "'TTBItemViewer.?f1C:dword'");
MakeCode(0x4888B8);
MakeCode(0x4888D8);
MakeComm(0x4888DC, "'TTBItemViewer.?f1C:dword'");
MakeComm(0x4888E5, "'TTBItemViewer.?f1C:dword'");
MakeCode(0x4888F6);
MakeComm(0x4888FC, "'TTBItemViewer.?f24:dword'");
MakeCode(0x488910);
MakeCode(0x488916);
MakeCode(0x488944);
MakeCode(0x48895C);
MakeCode(0x488961);
MakeComm(0x48896C, "'TTBItemViewer.?f1C:dword'");
MakeCode(0x488996);
MakeCode(0x4889A0);
MakeCode(0x4889AD);
MakeCode(0x4889C3);
MakeCode(0x4889C8);
MakeFunction(0x48873C, 0x4889D3);
MakeCode(0x4889D4);
MakeCode(0x488A06);
MakeFunction(0x4889D4, 0x488A26);
MakeCode(0x488A28);
MakeCode(0x488A58);
MakeCode(0x488AB2);
MakeFunction(0x488A28, 0x488ABB);
MakeCode(0x488ABC);
MakeCode(0x488AF4);
MakeFunction(0x488ABC, 0x488AF9);
MakeCode(0x488AFC);
MakeFunction(0x488AFC, 0x488BA3);
MakeCode(0x488BA4);
MakeComm(0x488BB1, "'TBitmap.Create'");
MakeComm(0x488BDC, "'TBitmap.SetWidth'");
MakeComm(0x488BEA, "'TBitmap.SetHeight'");
MakeCode(0x488C43);
MakeCode(0x488CAA);
MakeCode(0x488CBF);
MakeCode(0x488CF1);
MakeCode(0x488CFE);
MakeCode(0x488D07);
MakeCode(0x488D0C);
MakeFunction(0x488BA4, 0x488D12);
MakeCode(0x488D14);
MakeCode(0x488D30);
MakeCode(0x488D43);
MakeCode(0x488D6C);
MakeCode(0x488D8A);
MakeFunction(0x488D14, 0x488DCB);
MakeCode(0x488DCC);
MakeCode(0x488DFE);
MakeCode(0x488E30);
MakeFunction(0x488DCC, 0x488E36);
MakeCode(0x488E38);
MakeComm(0x488E50, "'TBitmap.SetHandleType'");
MakeFunction(0x488E38, 0x488E57);
MakeCode(0x488E58);
MakeComm(0x488E8D, "'TTBItemViewer.?f1C:dword'");
MakeComm(0x488E99, "'TTBItemViewer.?f24:dword'");
MakeCode(0x488EA6);
MakeCode(0x488EA8);
MakeComm(0x488EAE, "'TTBItemViewer.?f1C:dword'");
MakeComm(0x488EBA, "'TTBItemViewer.?f1C:dword'");
MakeCode(0x488EC9);
MakeCode(0x488ECD);
MakeCode(0x488ECF);
MakeCode(0x488F00);
MakeCode(0x488F04);
MakeCode(0x488F06);
MakeCode(0x488F35);
MakeCode(0x488F3E);
MakeComm(0x488F5D, "'TTBItemViewer.?f1C:dword'");
MakeCode(0x488F82);
MakeComm(0x488F85, "'TTBItemViewer.?f24:dword'");
MakeCode(0x488FB2);
MakeCode(0x488FD3);
MakeCode(0x488FDC);
MakeComm(0x488FE8, "'TTBItemViewer.?f1C:dword'");
MakeComm(0x488FF4, "'TTBItemViewer.?f1C:dword'");
MakeCode(0x489001);
MakeComm(0x489004, "'TTBItemViewer.?f1C:dword'");
MakeComm(0x489018, "'TTBItemViewer.?f1C:dword'");
MakeCode(0x489025);
MakeCode(0x489027);
MakeCode(0x489049);
MakeComm(0x489054, "'TTBItemViewer.?f24:dword'");
MakeCode(0x48905D);
MakeComm(0x489060, "'TTBItemViewer.?f1C:dword'");
MakeCode(0x48906D);
MakeCode(0x48906F);
MakeComm(0x489098, "'TTBItemViewer.?f1C:dword'");
MakeCode(0x4890A1);
MakeComm(0x4890AC, "'TTBItemViewer.?f24:dword'");
MakeCode(0x4890B5);
MakeCode(0x4890B9);
MakeCode(0x4890BB);
MakeCode(0x4890D8);
MakeComm(0x4890E1, "'TTBItemViewer.?f1C:dword'");
MakeCode(0x4890FF);
MakeComm(0x489103, "'TTBItemViewer.?f1C:dword'");
MakeComm(0x48910F, "'TTBItemViewer.?f24:dword'");
MakeCode(0x48911B);
MakeCode(0x48911F);
MakeCode(0x489121);
MakeCode(0x48912A);
MakeComm(0x48913A, "'TTBItemViewer.?f1C:dword'");
MakeCode(0x489176);
MakeComm(0x489186, "'TTBItemViewer.?f1C:dword'");
MakeComm(0x48919B, "'TTBItemViewer.?f1C:dword'");
MakeComm(0x4891A7, "'TTBItemViewer.?f24:dword'");
MakeCode(0x4891B0);
MakeCode(0x4891BD);
MakeComm(0x4891C6, "'TTBItemViewer.?f1C:dword'");
MakeComm(0x4891D2, "'TTBItemViewer.?f24:dword'");
MakeCode(0x4891E4);
MakeCode(0x4891EA);
MakeComm(0x489205, "'TTBItemViewer.?f1C:dword'");
MakeCode(0x48920E);
MakeCode(0x489215);
MakeComm(0x489218, "'TTBItemViewer.?f1C:dword'");
MakeCode(0x489233);
MakeCode(0x48923E);
MakeComm(0x48924E, "'TTBItemViewer.?f1C:dword'");
MakeComm(0x489266, "'0x1'");
MakeCode(0x489273);
MakeComm(0x48928F, "'TTBItemViewer.sub_00488620'");
MakeComm(0x4892A4, "'TTBItemViewer.sub_00488478'");
MakeComm(0x4892D5, "'TTBItemViewer.?f1C:dword'");
MakeCode(0x4892E7);
MakeCode(0x4892EE);
MakeComm(0x489306, "'TTBItemViewer.sub_00488A28'");
MakeCode(0x48930B);
MakeCode(0x489333);
MakeComm(0x48934E, "'TTBItemViewer.sub_00488A28'");
MakeCode(0x489351);
MakeComm(0x48935F, "'TTBItemViewer.?f1C:dword'");
MakeCode(0x4893B9);
MakeComm(0x4893D5, "'TTBItemViewer.sub_00488A28'");
MakeCode(0x4893D8);
MakeComm(0x4893DB, "'TTBItemViewer.?f1C:dword'");
MakeComm(0x4893EB, "'TTBItemViewer.?f1C:dword'");
MakeCode(0x48942D);
MakeCode(0x48944E);
MakeCode(0x489464);
MakeCode(0x48946B);
MakeComm(0x48947C, "'TTBItemViewer.?f1C:dword'");
MakeCode(0x489489);
MakeComm(0x4894A8, "'TTBItemViewer.?f1C:dword'");
MakeCode(0x4894C2);
MakeCode(0x4894D3);
MakeComm(0x4894E8, "'TTBItemViewer.?f1C:dword'");
MakeCode(0x4894F1);
MakeComm(0x4894F9, "'TTBItemViewer.?f1C:dword'");
MakeCode(0x48951A);
MakeComm(0x48951D, "'TTBItemViewer.?f1C:dword'");
MakeCode(0x489570);
MakeComm(0x489573, "'TTBItemViewer.?f1C:dword'");
MakeCode(0x489589);
MakeCode(0x4895A5);
MakeCode(0x4895BC);
MakeComm(0x4895C3, "'0x0'");
MakeComm(0x4895D9, "'TTBItemViewer.?f1C:dword'");
MakeCode(0x489601);
MakeComm(0x489608, "'TTBItemViewer.?f1C:dword'");
MakeCode(0x489626);
MakeComm(0x489631, "'TTBItemViewer.?f1C:dword'");
MakeCode(0x48964B);
MakeCode(0x48965B);
MakeComm(0x489661, "'TTBItemViewer.?f1C:dword'");
MakeCode(0x4896FF);
MakeCode(0x489716);
MakeCode(0x48973F);
MakeCode(0x4897A6);
MakeCode(0x4897B3);
MakeCode(0x4897BC);
MakeCode(0x4897C1);
MakeFunction(0x488E58, 0x4897CC);
MakeByte(0x4897CC);
MakeUnkn(0x4897CC, 1);
MakeNameEx(0x4897CC, "gvar_004897CC", 0);
MakeCode(0x4897D0);
MakeFunction(0x4897D0, 0x4897D1);
MakeCode(0x4897D4);
MakeFunction(0x4897D4, 0x4897DF);
MakeCode(0x4897E0);
MakeComm(0x4897E0, "'TTBItemViewer.?f24:dword'");
MakeComm(0x4897EC, "'TTBItemViewer.?f1C:dword'");
MakeCode(0x4897F8);
MakeFunction(0x4897E0, 0x4897FB);
MakeCode(0x4897FC);
MakeComm(0x4897FC, "'TTBItemViewer.?f24:dword'");
MakeComm(0x489808, "'TTBItemViewer.?f1C:dword'");
MakeCode(0x489814);
MakeFunction(0x4897FC, 0x489817);
MakeCode(0x489818);
MakeComm(0x48981E, "'TTBItemViewer.?f1C:dword'");
MakeComm(0x48982A, "'TTBItemViewer.?f1C:dword'");
MakeCode(0x489845);
MakeComm(0x48984C, "'TTBItemViewer.?fC:dword'");
MakeCode(0x48984C);
MakeCode(0x489859);
MakeFunction(0x489818, 0x48985C);
MakeCode(0x48985C);
MakeCode(0x489876);
MakeCode(0x489891);
MakeCode(0x4898B7);
MakeCode(0x4898BB);
MakeFunction(0x48985C, 0x4898C0);
MakeCode(0x4898C0);
MakeComm(0x4898CD, "'TTBItemViewer.?f1C:dword'");
MakeComm(0x4898D6, "'TTBItemViewer.?f24:dword'");
MakeCode(0x4898FD);
MakeComm(0x489906, "'TTBItemViewer.sub_00489818'");
MakeComm(0x489918, "'TTBItemViewer.?f24:dword'");
MakeComm(0x489920, "'TTBItemViewer.?f24:dword'");
MakeComm(0x48992A, "'TTBItemViewer.?f24:dword'");
MakeComm(0x489934, "'TTBItemViewer.?f24:dword'");
MakeCode(0x489934);
MakeComm(0x489954, "'TTBItemViewer.?f24:dword'");
MakeCode(0x48996F);
MakeComm(0x489975, "'TTBItemViewer.?f1C:dword'");
MakeComm(0x48997E, "'TTBItemViewer.?f24:dword'");
MakeCode(0x48998C);
MakeFunction(0x4898C0, 0x489993);
MakeCode(0x489994);
MakeFunction(0x489994, 0x489995);
MakeCode(0x489998);
MakeComm(0x4899A9, "'TTBItemViewer.?f24:dword'");
MakeComm(0x4899B8, "'TTBItemViewer.?f24:dword'");
MakeCode(0x4899CD);
MakeCode(0x4899D1);
MakeComm(0x4899D3, "'TTBItemViewer.?f24:dword'");
MakeCode(0x4899D3);
MakeComm(0x4899DF, "'TTBItemViewer.?f1C:dword'");
MakeComm(0x4899E8, "'TTBItemViewer.?f1C:dword'");
MakeCode(0x4899F1);
MakeComm(0x4899FC, "'TTBItemViewer.?f1C:dword'");
MakeCode(0x4899FC);
MakeComm(0x489A0F, "'TTBItemViewer.sub_00489818'");
MakeComm(0x489A1B, "'TTBItemViewer.?f24:dword'");
MakeCode(0x489A25);
MakeCode(0x489A3C);
MakeFunction(0x489998, 0x489A45);
MakeCode(0x489A48);
MakeFunction(0x489A48, 0x489A4F);
MakeCode(0x489A50);
MakeComm(0x489A52, "'TTBItemViewer.?f24:dword'");
MakeFunction(0x489A50, 0x489A5B);
MakeCode(0x489A5C);
MakeComm(0x489A5D, "'TTBItemViewer.?f1C:dword'");
MakeCode(0x489A7C);
MakeFunction(0x489A5C, 0x489A7E);
MakeCode(0x489A80);
MakeComm(0x489A81, "'TTBItemViewer.?f1C:dword'");
MakeCode(0x489AA0);
MakeFunction(0x489A80, 0x489AA2);
MakeCode(0x489AA4);
MakeFunction(0x489AA4, 0x489AA5);
MakeCode(0x489AA8);
MakeFunction(0x489AA8, 0x489AD2);
MakeCode(0x489AD4);
MakeComm(0x489AD7, "'TTBItemViewer.?f1C:dword'");
MakeComm(0x489AE0, "'TTBItemViewer.?f1C:dword'");
MakeCode(0x489AF4);
MakeCode(0x489AF8);
MakeFunction(0x489AD4, 0x489AFC);
MakeCode(0x489AFC);
MakeComm(0x489AFE, "'TTBItemViewer.?f24:dword'");
MakeFunction(0x489AFC, 0x489B09);
MakeCode(0x489B0C);
MakeComm(0x489B16, "'TTBItemViewer.sub_00489AFC'");
MakeComm(0x489B1F, "'TTBItemViewer.?f24:dword'");
MakeCode(0x489B27);
MakeFunction(0x489B0C, 0x489B2A);
MakeCode(0x489B2C);
MakeComm(0x489B30, "'TTBItemViewer.?f1C:dword'");
MakeCode(0x489B4C);
MakeComm(0x489B59, "'TTBItemViewer.?f24:dword'");
MakeCode(0x489B59);
MakeCode(0x489B6E);
MakeComm(0x489B75, "'TTBItemViewer.?f1C:dword'");
MakeCode(0x489B75);
MakeCode(0x489B85);
MakeCode(0x489B8A);
MakeFunction(0x489B2C, 0x489B8D);
MakeCode(0x489B90);
MakeFunction(0x489B90, 0x489B93);
MakeCode(0x489B94);
MakeCode(0x489BA8);
MakeComm(0x489BC6, "'TList.Create'");
MakeComm(0x489BCB, "'TTBView.?f30:TList'");
MakeComm(0x489BCE, "'TTBView.?f38:dword'");
MakeComm(0x489BD9, "'TTBView.?f5C:byte'");
MakeComm(0x489BE0, "'TTBView.?f80:byte'");
MakeComm(0x489BE6, "'TTBView.?f81:byte'");
MakeComm(0x489BEC, "'TTBView.?f99:byte'");
MakeComm(0x489BF6, "'TTBView.?fA8:dword'");
MakeComm(0x489BFF, "'TTBView.?fAC:dword'");
MakeComm(0x489C14, "'TTBView.?fAC:dword'");
MakeCode(0x489C21);
MakeComm(0x489C25, "'TTBView.?fCC:byte'");
MakeComm(0x489C2E, "'TTBView.?fD0:dword'");
MakeCode(0x489C52);
MakeFunction(0x489B94, 0x489C5C);
MakeUnkn(0x489C5C, 1);
MakeNameEx(0x489C5C, "TTBView.Destroy", 0x20);
MakeComm(0x489C5C, "'destructor TTBView.Destroy;'");
MakeCode(0x489C5C);
MakeComm(0x489C6F, "'TTBView.?fD8:dword'");
MakeComm(0x489C7D, "'TTBView.?fD8:dword'");
MakeComm(0x489C8B, "'TTBView.?fD8:dword'");
MakeComm(0x489C91, "'TTBView.?fA8:dword'");
MakeCode(0x489C91);
MakeComm(0x489CAB, "'TTBView.?fA8:dword'");
MakeComm(0x489CC0, "'TTBView.?f58:dword'");
MakeCode(0x489CC0);
MakeComm(0x489CD2, "'TTBView.?fAC:dword'");
MakeCode(0x489CD2);
MakeCode(0x489CE7);
MakeComm(0x489CF3, "'TTBView.?fB0:dword'");
MakeComm(0x489D05, "'TTBView.?f30:TList'");
MakeComm(0x489D0D, "'TTBView.?fA8:dword'");
MakeCode(0x489D1C);
MakeCode(0x489D27);
MakeFunction(0x489C5C, 0x489D2B);
MakeCode(0x489D2C);
MakeCode(0x489D47);
MakeComm(0x489D50, "'TTBViewAccObject.Create'");
MakeCode(0x489D63);
MakeFunction(0x489D2C, 0x489D6C);
MakeCode(0x489D6C);
MakeCode(0x489D8F);
MakeCode(0x489DAA);
MakeFunction(0x489D6C, 0x489DAF);
MakeCode(0x489DC0);
MakeComm(0x489DC4, "'TTBView.?fAC:dword'");
MakeComm(0x489DD1, "'TTBView.?f58:dword'");
MakeComm(0x489DDD, "'TTBView.?f58:dword'");
MakeComm(0x489DEF, "'TTBView.?f58:dword'");
MakeCode(0x489DEF);
MakeCode(0x489E03);
MakeCode(0x489E1B);
MakeFunction(0x489DC0, 0x489E1E);
MakeCode(0x489E20);
MakeCode(0x489E28);
MakeComm(0x489E3A, "'TTBView.?f30:TList'");
MakeCode(0x489E3A);
MakeComm(0x489E3D, "'TList.FCount:Integer'");
MakeFunction(0x489E20, 0x489E45);
MakeUnkn(0x489E48, 1);
MakeNameEx(0x489E48, "TTBView.Notification", 0x20);
MakeComm(0x489E48, "'procedure TTBView.Notification(AComponent:TComponent; Operation:TOperation);'");
MakeCode(0x489E48);
MakeComm(0x489E61, "'TTBView.?fAC:dword'");
MakeComm(0x489E6B, "'TTBView.?fAC:dword'");
MakeComm(0x489E78, "'TTBView.?fA8:dword'");
MakeComm(0x489E89, "'TTBView.?fA4:dword'");
MakeCode(0x489E89);
MakeComm(0x489E93, "'TTBView.?fA4:dword'");
MakeComm(0x489E9B, "'TTBView.?fA0:dword'");
MakeComm(0x489EA3, "'TTBView.?f9C:dword'");
MakeComm(0x489EAB, "'TTBView.?f50:dword'");
MakeCode(0x489EAB);
MakeComm(0x489EB2, "'TTBView.?f50:dword'");
MakeCode(0x489EB5);
MakeFunction(0x489E48, 0x489EB9);
MakeCode(0x489EBC);
MakeFunction(0x489EBC, 0x489EBE);
MakeCode(0x489ED4);
MakeFunction(0x489ED4, 0x489ED6);
MakeCode(0x489EE4);
MakeFunction(0x489EE4, 0x489EE6);
MakeCode(0x489EFC);
MakeComm(0x489F00, "'TTBView.?f30:TList'");
MakeComm(0x489F03, "'TList.FCount:Integer'");
MakeCode(0x489F08);
MakeComm(0x489F15, "'TTBView.?f30:TList'");
MakeCode(0x489F15);
MakeComm(0x489F18, "'TList.FList:PPointerList'");
MakeFunction(0x489EFC, 0x489F1F);
MakeCode(0x489F20);
MakeFunction(0x489F20, 0x489F27);
MakeCode(0x489F28);
MakeComm(0x489F2D, "'TTBView.?f30:TList'");
MakeComm(0x489F34, "'TList.FCount:Integer'");
MakeCode(0x489F3D);
MakeComm(0x489F4A, "'TTBView.?f30:TList'");
MakeCode(0x489F5F);
MakeFunction(0x489F28, 0x489F63);
MakeCode(0x489F64);
MakeComm(0x489F68, "'TTBView.?fCD:byte'");
MakeComm(0x489F71, "'TTBView.?fCD:byte'");
MakeComm(0x489F78, "'TTBView.?fD0:dword'");
MakeComm(0x489F91, "'TTBView.?fD0:dword'");
MakeCode(0x489FA2);
MakeFunction(0x489F64, 0x489FA5);
MakeCode(0x489FA8);
MakeCode(0x489FBB);
MakeFunction(0x489FA8, 0x489FBE);
MakeCode(0x489FF4);
MakeCode(0x48A008);
MakeCode(0x48A018);
MakeCode(0x48A01C);
MakeFunction(0x489FF4, 0x48A022);
MakeCode(0x48A024);
MakeCode(0x48A034);
MakeFunction(0x48A024, 0x48A042);
MakeCode(0x48A044);
MakeCode(0x48A0AC);
MakeFunction(0x48A044, 0x48A0B8);
MakeCode(0x48A0B8);
MakeCode(0x48A0D5);
MakeCode(0x48A125);
MakeCode(0x48A132);
MakeCode(0x48A164);
MakeCode(0x48A194);
MakeFunction(0x48A0B8, 0x48A19F);
MakeCode(0x48A580);
MakeCode(0x48A5BC);
MakeComm(0x48A5EC, "'TTBItemViewer.?f20:byte'");
MakeCode(0x48A5F2);
MakeCode(0x48A5FB);
MakeCode(0x48A619);
MakeFunction(0x48A580, 0x48A620);
MakeCode(0x48A620);
MakeCode(0x48A644);
MakeCode(0x48A664);
MakeCode(0x48A66A);
MakeCode(0x48A678);
MakeCode(0x48A694);
MakeCode(0x48A698);
MakeFunction(0x48A620, 0x48A69F);
MakeCode(0x48A6A0);
MakeCode(0x48A6FE);
MakeFunction(0x48A6A0, 0x48A703);
MakeCode(0x48A704);
MakeCode(0x48A70A);
MakeFunction(0x48A704, 0x48A71C);
MakeCode(0x48A71C);
MakeCode(0x48A730);
MakeCode(0x48A76E);
MakeCode(0x48A77A);
MakeFunction(0x48A71C, 0x48A77E);
MakeCode(0x48A780);
MakeCode(0x48A7FA);
MakeFunction(0x48A780, 0x48A80A);
MakeCode(0x48A80C);
MakeComm(0x48A80F, "'TTBView.?fA0:dword'");
MakeCode(0x48A81E);
MakeComm(0x48A827, "'TTBView.?fA4:dword'");
MakeComm(0x48A834, "'TTBView.?fA4:dword'");
MakeComm(0x48A83C, "'TTBView.?fA0:dword'");
MakeComm(0x48A844, "'TTBView.?f9C:dword'");
MakeFunction(0x48A80C, 0x48A84C);
MakeCode(0x48A84C);
MakeCode(0x48A85F);
MakeFunction(0x48A84C, 0x48A868);
MakeCode(0x48A868);
MakeCode(0x48A885);
MakeCode(0x48A8BB);
MakeCode(0x48A8BF);
MakeCode(0x48A8C1);
MakeFunction(0x48A868, 0x48A8C6);
MakeCode(0x48A8C8);
MakeCode(0x48A94E);
MakeCode(0x48A951);
MakeCode(0x48A96B);
MakeCode(0x48A97E);
MakeCode(0x48A991);
MakeCode(0x48A997);
MakeCode(0x48A999);
MakeCode(0x48A9B6);
MakeFunction(0x48A8C8, 0x48A9BB);
MakeCode(0x48A9BC);
MakeFunction(0x48A9BC, 0x48A9C4);
MakeCode(0x48A9C4);
MakeCode(0x48AA3B);
MakeCode(0x48AA53);
MakeCode(0x48AA6D);
MakeCode(0x48AA8C);
MakeCode(0x48AA9E);
MakeCode(0x48AAAE);
MakeCode(0x48AB3E);
MakeCode(0x48AB67);
MakeCode(0x48AB7D);
MakeCode(0x48AB84);
MakeCode(0x48ABBF);
MakeCode(0x48ABDB);
MakeCode(0x48ABEB);
MakeCode(0x48AC19);
MakeCode(0x48AC4D);
MakeFunction(0x48A9C4, 0x48AC55);
MakeCode(0x48AC58);
MakeCode(0x48ACFD);
MakeCode(0x48AD01);
MakeCode(0x48AD05);
MakeCode(0x48AD1A);
MakeCode(0x48AD1E);
MakeCode(0x48AD20);
MakeFunction(0x48AC58, 0x48AD27);
MakeCode(0x48AD28);
MakeCode(0x48AD59);
MakeCode(0x48AD5B);
MakeCode(0x48AD9E);
MakeCode(0x48ADB8);
MakeCode(0x48ADDD);
MakeCode(0x48ADE6);
MakeCode(0x48AE00);
MakeCode(0x48AE3A);
MakeCode(0x48AE3C);
MakeCode(0x48AE75);
MakeCode(0x48AEA3);
MakeCode(0x48AEB5);
MakeFunction(0x48AD28, 0x48AEBC);
MakeCode(0x48AEBC);
MakeComm(0x48AED6, "'TTBView.sub_00489F64'");
MakeComm(0x48AED9, "'TTBView.?fB0:dword'");
MakeComm(0x48AEED, "'TTBView.?f7C:dword'");
MakeComm(0x48AEF2, "'TTBView.?f78:dword'");
MakeComm(0x48AEF9, "'TTBView.sub_0048C63C'");
MakeComm(0x48AF08, "'TTBView.?f30:TList'");
MakeComm(0x48AF0B, "'TList.FCount:Integer'");
MakeComm(0x48AF17, "'TTBView.?f7C:dword'");
MakeComm(0x48AF1A, "'TTBView.?f58:dword'");
MakeCode(0x48AF1A);
MakeCode(0x48AF32);
MakeComm(0x48AF3A, "'TTBView.?f58:dword'");
MakeComm(0x48AF44, "'TTBView.?f30:TList'");
MakeComm(0x48AF47, "'TList.FCount:Integer'");
MakeCode(0x48AF55);
MakeComm(0x48AF59, "'TTBView.sub_0048C638'");
MakeCode(0x48AF73);
MakeComm(0x48AF84, "'TTBView.?f30:TList'");
MakeComm(0x48AF87, "'TList.FCount:Integer'");
MakeComm(0x48AF91, "'TTBView.?f78:dword'");
MakeCode(0x48AF98);
MakeComm(0x48AF9C, "'TTBView.sub_0048C5FC'");
MakeComm(0x48AFAB, "'TTBView.?f30:TList'");
MakeComm(0x48AFAE, "'TList.FCount:Integer'");
MakeComm(0x48AFBA, "'TTBView.?f78:dword'");
MakeCode(0x48AFBD);
MakeFunction(0x48AEBC, 0x48AFC2);
MakeUnkn(0x48AFC4, 1);
MakeNameEx(0x48AFC4, "RTTI_48AFC4_DynArray_.13", 0);
MakeDword(0x48AFC4);
MakeUnkn(0x48AFC8, 1);
MakeNameEx(0x48AFC8, "", 0);
MakeByte(0x48AFC8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48AFC9, 0x48AFCD);
MakeDword(0x48AFCD);
MakeDword(0x48AFD1);
MakeDword(0x48AFD5);
MakeDword(0x48AFD9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48AFDD, 0x48AFE5);
MakeCode(0x48AFE8);
MakeCode(0x48B008);
MakeCode(0x48B041);
MakeCode(0x48B047);
MakeCode(0x48B04B);
MakeFunction(0x48AFE8, 0x48B054);
MakeCode(0x48B054);
MakeCode(0x48B06E);
MakeCode(0x48B09A);
MakeCode(0x48B09E);
MakeFunction(0x48B054, 0x48B0A3);
MakeCode(0x48B0A4);
MakeCode(0x48B117);
MakeCode(0x48B134);
MakeCode(0x48B186);
MakeCode(0x48B1A0);
MakeCode(0x48B1B4);
MakeCode(0x48B1F7);
MakeCode(0x48B1FF);
MakeCode(0x48B203);
MakeCode(0x48B21A);
MakeCode(0x48B228);
MakeFunction(0x48B0A4, 0x48B22F);
MakeCode(0x48B230);
MakeCode(0x48B28A);
MakeCode(0x48B2B3);
MakeCode(0x48B2CC);
MakeCode(0x48B301);
MakeCode(0x48B31A);
MakeCode(0x48B31C);
MakeCode(0x48B364);
MakeCode(0x48B381);
MakeCode(0x48B38E);
MakeCode(0x48B3AE);
MakeCode(0x48B3B6);
MakeCode(0x48B3CC);
MakeCode(0x48B3D3);
MakeCode(0x48B3E4);
MakeCode(0x48B3EC);
MakeCode(0x48B403);
MakeCode(0x48B436);
MakeCode(0x48B44F);
MakeCode(0x48B453);
MakeCode(0x48B462);
MakeCode(0x48B484);
MakeCode(0x48B48A);
MakeCode(0x48B48E);
MakeFunction(0x48B230, 0x48B4AF);
MakeCode(0x48B4B0);
MakeCode(0x48B4E0);
MakeCode(0x48B4FA);
MakeCode(0x48B500);
MakeCode(0x48B51E);
MakeCode(0x48B521);
MakeCode(0x48B55C);
MakeCode(0x48B578);
MakeCode(0x48B5A5);
MakeCode(0x48B5B9);
MakeCode(0x48B5E9);
MakeCode(0x48B5F5);
MakeCode(0x48B5FF);
MakeCode(0x48B634);
MakeCode(0x48B64C);
MakeCode(0x48B66C);
MakeCode(0x48B67D);
MakeCode(0x48B68E);
MakeCode(0x48B6A0);
MakeCode(0x48B6A6);
MakeCode(0x48B6CD);
MakeCode(0x48B6E0);
MakeCode(0x48B6E7);
MakeFunction(0x48B4B0, 0x48B6EE);
MakeCode(0x48B6F0);
MakeComm(0x48B765, "'TCanvas.Create'");
MakeComm(0x48B78F, "'TCanvas.Font:TFont'");
MakeComm(0x48B794, "'TFont.Assign'");
MakeCode(0x48B7D8);
MakeCode(0x48B853);
MakeCode(0x48B858);
MakeCode(0x48B875);
MakeCode(0x48B888);
MakeCode(0x48B8B1);
MakeCode(0x48B8BD);
MakeCode(0x48B8ED);
MakeCode(0x48B8F8);
MakeCode(0x48B904);
MakeCode(0x48B916);
MakeCode(0x48B93E);
MakeCode(0x48B947);
MakeCode(0x48B969);
MakeComm(0x48B9AF, "'TCanvas.Font:TFont'");
MakeComm(0x48B9CF, "'0x1'");
MakeCode(0x48B9DD);
MakeCode(0x48BA1E);
MakeCode(0x48BA3A);
MakeCode(0x48BA77);
MakeCode(0x48BA84);
MakeCode(0x48BA92);
MakeCode(0x48BA93);
MakeCode(0x48BA98);
MakeComm(0x48BAA3, "'TCanvas.Font:TFont'");
MakeComm(0x48BAB1, "'0x1'");
MakeCode(0x48BAC6);
MakeCode(0x48BAD8);
MakeCode(0x48BAE4);
MakeCode(0x48BB0C);
MakeCode(0x48BB2A);
MakeCode(0x48BB3A);
MakeCode(0x48BB43);
MakeCode(0x48BB4B);
MakeCode(0x48BB5B);
MakeCode(0x48BB64);
MakeCode(0x48BB7C);
MakeCode(0x48BB80);
MakeCode(0x48BB82);
MakeCode(0x48BBA1);
MakeCode(0x48BBB8);
MakeCode(0x48BBDD);
MakeCode(0x48BBE6);
MakeCode(0x48BC02);
MakeCode(0x48BC49);
MakeCode(0x48BC5C);
MakeCode(0x48BC65);
MakeCode(0x48BC83);
MakeCode(0x48BC90);
MakeCode(0x48BC9A);
MakeCode(0x48BCC6);
MakeCode(0x48BCD7);
MakeCode(0x48BD1B);
MakeCode(0x48BD28);
MakeCode(0x48BD49);
MakeCode(0x48BD58);
MakeCode(0x48BD70);
MakeCode(0x48BDAA);
MakeCode(0x48BDB0);
MakeCode(0x48BDBA);
MakeCode(0x48BDC0);
MakeCode(0x48BDCC);
MakeCode(0x48BDDE);
MakeCode(0x48BE06);
MakeCode(0x48BE0F);
MakeCode(0x48BE28);
MakeCode(0x48BE54);
MakeCode(0x48BE66);
MakeCode(0x48BE6E);
MakeCode(0x48BEA8);
MakeCode(0x48BEED);
MakeCode(0x48BF25);
MakeCode(0x48BF27);
MakeCode(0x48BF40);
MakeCode(0x48BF6A);
MakeCode(0x48BF73);
MakeCode(0x48BF85);
MakeCode(0x48BF99);
MakeCode(0x48BFA5);
MakeCode(0x48BFC4);
MakeCode(0x48BFE2);
MakeCode(0x48C010);
MakeCode(0x48C081);
MakeCode(0x48C09D);
MakeCode(0x48C0D5);
MakeCode(0x48C0E1);
MakeCode(0x48C106);
MakeCode(0x48C140);
MakeCode(0x48C149);
MakeCode(0x48C151);
MakeCode(0x48C16D);
MakeCode(0x48C19D);
MakeCode(0x48C1D5);
MakeCode(0x48C1E9);
MakeCode(0x48C21E);
MakeCode(0x48C249);
MakeCode(0x48C293);
MakeCode(0x48C297);
MakeCode(0x48C2D0);
MakeCode(0x48C2D7);
MakeCode(0x48C2E3);
MakeCode(0x48C2F0);
MakeCode(0x48C30D);
MakeCode(0x48C31E);
MakeCode(0x48C327);
MakeCode(0x48C32C);
MakeCode(0x48C33F);
MakeCode(0x48C363);
MakeCode(0x48C376);
MakeCode(0x48C383);
MakeCode(0x48C392);
MakeCode(0x48C397);
MakeFunction(0x48B6F0, 0x48C3A6);
MakeByte(0x48C3A8);
MakeUnkn(0x48C3A8, 1);
MakeNameEx(0x48C3A8, "gvar_0048C3A8", 0);
MakeCode(0x48C3AC);
MakeComm(0x48C3B9, "'TTBView.?fD4:dword'");
MakeComm(0x48C3C0, "'TTBView.?f4C:dword'");
MakeComm(0x48C3C4, "'TTBView.?f54:dword'");
MakeComm(0x48C3C8, "'TTBView.?f3C:dword'");
MakeComm(0x48C3D1, "'TTBView.?fB4:byte'");
MakeComm(0x48C3E5, "'TTBView.?fCD:byte'");
MakeComm(0x48C3F5, "'TTBView.sub_0048C5F8'");
MakeComm(0x48C3FD, "'TTBView.FComponentState:TComponentState'");
MakeCode(0x48C3FD);
MakeComm(0x48C407, "'TTBView.?fCD:byte'");
MakeComm(0x48C40E, "'TTBView.?fD0:dword'");
MakeComm(0x48C41F, "'TTBView.?fD0:dword'");
MakeCode(0x48C430);
MakeComm(0x48C439, "'TTBView.sub_0048C5F8'");
MakeComm(0x48C43C, "'TTBView.?fD0:dword'");
MakeComm(0x48C459, "'TTBView.?fD0:dword'");
MakeComm(0x48C472, "'TTBView.?fD0:dword'");
MakeComm(0x48C485, "'TTBView.?fD0:dword'");
MakeComm(0x48C49A, "'TTBView.?fD0:dword'");
MakeComm(0x48C4B7, "'TBitmap.Create'");
MakeComm(0x48C4D4, "'TControlCanvas.Create'");
MakeComm(0x48C4DC, "'TTBView.?fD0:dword'");
MakeComm(0x48C4EA, "'TTBView.?fD0:dword'");
MakeComm(0x48C4FC, "'TBitmap.SetWidth'");
MakeComm(0x48C4FF, "'TTBView.?fD0:dword'");
MakeComm(0x48C511, "'TBitmap.SetHeight'");
MakeComm(0x48C526, "'TTBView.?fD0:dword'");
MakeComm(0x48C549, "'TTBView.?fD0:dword'");
MakeComm(0x48C576, "'TBitmap.GetHeight'");
MakeComm(0x48C57F, "'TBitmap.GetWidth'");
MakeCode(0x48C595);
MakeCode(0x48C5A2);
MakeCode(0x48C5B3);
MakeCode(0x48C5B8);
MakeCode(0x48C5BA);
MakeComm(0x48C5BE, "'TTBView.sub_00489F64'");
MakeComm(0x48C5C1, "'TTBView.?fCD:byte'");
MakeComm(0x48C5D1, "'TTBView.sub_0048C5F8'");
MakeCode(0x48C5D4);
MakeFunction(0x48C3AC, 0x48C5DB);
MakeCode(0x48C5DC);
MakeComm(0x48C5E4, "'TPoint.X:Longint'");
MakeFunction(0x48C5DC, 0x48C5F7);
MakeCode(0x48C5F8);
MakeFunction(0x48C5F8, 0x48C5F9);
MakeCode(0x48C5FC);
MakeFunction(0x48C5FC, 0x48C5FF);
MakeCode(0x48C600);
MakeCode(0x48C621);
MakeFunction(0x48C600, 0x48C635);
MakeCode(0x48C638);
MakeFunction(0x48C638, 0x48C63B);
MakeCode(0x48C63C);
MakeFunction(0x48C63C, 0x48C63F);
MakeCode(0x48C640);
MakeCode(0x48C64F);
MakeFunction(0x48C640, 0x48C659);
MakeCode(0x48C65C);
MakeCode(0x48C681);
MakeCode(0x48C70C);
MakeCode(0x48C710);
MakeCode(0x48C712);
MakeCode(0x48C78E);
MakeCode(0x48C7C3);
MakeComm(0x48C7CA, "'TBitmap.Create'");
MakeComm(0x48C7DA, "'TBitmap.SetWidth'");
MakeComm(0x48C7E5, "'TBitmap.SetHeight'");
MakeCode(0x48C83F);
MakeComm(0x48C857, "'TCanvas.Brush:TBrush'");
MakeCode(0x48C866);
MakeComm(0x48C869, "'TCanvas.Brush:TBrush'");
MakeCode(0x48C878);
MakeComm(0x48C87B, "'TCanvas.Brush:TBrush'");
MakeCode(0x48C885);
MakeComm(0x48C891, "'TCanvas.Font:TFont'");
MakeComm(0x48C896, "'TFont.Assign'");
MakeComm(0x48C8B1, "'TCanvas.Font:TFont'");
MakeCode(0x48C8C0);
MakeComm(0x48C8C9, "'TCanvas.Font:TFont'");
MakeCode(0x48C8D8);
MakeComm(0x48C8DB, "'TCanvas.Font:TFont'");
MakeCode(0x48C8E8);
MakeCode(0x48C8EC);
MakeComm(0x48C8EF, "'TCanvas.Font:TFont'");
MakeCode(0x48C924);
MakeCode(0x48C936);
MakeCode(0x48C938);
MakeComm(0x48C969, "'TBitmap.GetHeight'");
MakeComm(0x48C972, "'TBitmap.GetWidth'");
MakeCode(0x48C987);
MakeCode(0x48C994);
MakeCode(0x48C9B2);
MakeCode(0x48C9B7);
MakeCode(0x48C9B9);
MakeFunction(0x48C65C, 0x48C9C2);
MakeCode(0x48C9C4);
MakeCode(0x48CA02);
MakeCode(0x48CA06);
MakeFunction(0x48C9C4, 0x48CA0B);
MakeCode(0x48CA0C);
MakeCode(0x48CA40);
MakeCode(0x48CA5E);
MakeCode(0x48CA6E);
MakeCode(0x48CA72);
MakeCode(0x48CA97);
MakeFunction(0x48CA0C, 0x48CAA7);
MakeCode(0x48CAA8);
MakeComm(0x48CACF, "'TTBItemViewer.?f21:byte'");
MakeComm(0x48CAD5, "'TTBItemViewer.?f4:?'");
MakeComm(0x48CAE2, "'TTBItemViewer.?f1C:dword'");
MakeComm(0x48CAF4, "'TTBItemViewer.?f2C:byte'");
MakeComm(0x48CAFA, "'TTBItemViewer.?f4:?'");
MakeCode(0x48CB0F);
MakeFunction(0x48CAA8, 0x48CB12);
MakeCode(0x48CB14);
MakeCode(0x48CB51);
MakeCode(0x48CB53);
MakeCode(0x48CB78);
MakeCode(0x48CB7F);
MakeCode(0x48CBBF);
MakeCode(0x48CBF9);
MakeCode(0x48CC01);
MakeCode(0x48CC0E);
MakeCode(0x48CC17);
MakeCode(0x48CC1C);
MakeFunction(0x48CB14, 0x48CC25);
MakeCode(0x48CC28);
MakeCode(0x48CC42);
MakeCode(0x48CC53);
MakeCode(0x48CC5C);
MakeFunction(0x48CC28, 0x48CC62);
MakeCode(0x48CC64);
MakeCode(0x48CC96);
MakeCode(0x48CCA7);
MakeCode(0x48CCB3);
MakeCode(0x48CCBC);
MakeCode(0x48CCC0);
MakeCode(0x48CCDE);
MakeCode(0x48CD11);
MakeFunction(0x48CC64, 0x48CD1A);
MakeCode(0x48CD1C);
MakeCode(0x48CD63);
MakeCode(0x48CDD3);
MakeCode(0x48CDFF);
MakeCode(0x48CE0C);
MakeCode(0x48CE15);
MakeCode(0x48CE1A);
MakeFunction(0x48CD1C, 0x48CE27);
MakeCode(0x48CE28);
MakeCode(0x48CE42);
MakeCode(0x48CE53);
MakeCode(0x48CE5C);
MakeCode(0x48CE60);
MakeCode(0x48CE79);
MakeFunction(0x48CE28, 0x48CE83);
MakeCode(0x48CE84);
MakeCode(0x48CEC4);
MakeCode(0x48CED1);
MakeCode(0x48CF0F);
MakeCode(0x48CF11);
MakeCode(0x48CF18);
MakeCode(0x48CF1E);
MakeCode(0x48CF27);
MakeFunction(0x48CE84, 0x48CF33);
MakeCode(0x48CF34);
MakeComm(0x48CF67, "'TTBModalHandler.Create'");
MakeComm(0x48CF87, "'0x20'");
MakeCode(0x48CFC9);
MakeCode(0x48CFED);
MakeCode(0x48CFFA);
MakeCode(0x48D02B);
MakeCode(0x48D030);
MakeCode(0x48D032);
MakeCode(0x48D03F);
MakeCode(0x48D048);
MakeCode(0x48D04D);
MakeCode(0x48D070);
MakeFunction(0x48CF34, 0x48D074);
MakeByte(0x48D074);
MakeUnkn(0x48D074, 1);
MakeNameEx(0x48D074, "gvar_0048D074", 0);
MakeCode(0x48D098);
MakeCode(0x48D0B0);
MakeCode(0x48D0FF);
MakeCode(0x48D103);
MakeFunction(0x48D098, 0x48D109);
MakeCode(0x48D10C);
MakeFunction(0x48D10C, 0x48D111);
MakeCode(0x48D114);
MakeCode(0x48D13A);
MakeFunction(0x48D114, 0x48D13C);
MakeCode(0x48D13C);
MakeFunction(0x48D13C, 0x48D164);
MakeCode(0x48D164);
MakeCode(0x48D173);
MakeCode(0x48D187);
MakeCode(0x48D191);
MakeCode(0x48D1A0);
MakeFunction(0x48D164, 0x48D1A2);
MakeCode(0x48D1A4);
MakeCode(0x48D1DD);
MakeCode(0x48D1F3);
MakeCode(0x48D20F);
MakeCode(0x48D222);
MakeCode(0x48D23C);
MakeCode(0x48D24B);
MakeCode(0x48D258);
MakeComm(0x48D260, "'TTBView.?fA8:dword'");
MakeCode(0x48D277);
MakeCode(0x48D281);
MakeComm(0x48D289, "'TTBView.?fB4:byte'");
MakeCode(0x48D2A1);
MakeComm(0x48D2BC, "'TTBView.?fA8:dword'");
MakeCode(0x48D2C4);
MakeCode(0x48D2D2);
MakeComm(0x48D2D5, "'TTBView.?fA8:dword'");
MakeCode(0x48D2E5);
MakeComm(0x48D2E8, "'TTBView.?fA8:dword'");
MakeCode(0x48D300);
MakeCode(0x48D313);
MakeCode(0x48D32B);
MakeComm(0x48D333, "'TTBView.?fB4:byte'");
MakeCode(0x48D348);
MakeCode(0x48D359);
MakeCode(0x48D37E);
MakeCode(0x48D385);
MakeCode(0x48D38A);
MakeFunction(0x48D1A4, 0x48D38F);
MakeCode(0x48D390);
MakeFunction(0x48D390, 0x48D3A3);
MakeCode(0x48D3A4);
MakeFunction(0x48D3A4, 0x48D3AE);
MakeCode(0x48D3B0);
MakeComm(0x48D3B8, "'TTBItemViewer.?f1C:dword'");
MakeComm(0x48D3BE, "'TTBItemViewer.?f24:dword'");
MakeFunction(0x48D3B0, 0x48D3D1);
MakeCode(0x48D3D4);
MakeFunction(0x48D3D4, 0x48D3E5);
MakeCode(0x48D3E8);
MakeFunction(0x48D3E8, 0x48D400);
MakeCode(0x48D400);
MakeComm(0x48D407, "'TTBView.?fBC:dword'");
MakeCode(0x48D430);
MakeComm(0x48D438, "'TTBView.?fBC:dword'");
MakeCode(0x48D445);
MakeCode(0x48D44E);
MakeComm(0x48D480, "'TTBView.?f5E:byte'");
MakeCode(0x48D481);
MakeCode(0x48D488);
MakeCode(0x48D4BD);
MakeCode(0x48D4DA);
MakeCode(0x48D4E5);
MakeCode(0x48D4E9);
MakeCode(0x48D4F0);
MakeCode(0x48D4FE);
MakeCode(0x48D518);
MakeCode(0x48D540);
MakeCode(0x48D544);
MakeCode(0x48D54F);
MakeCode(0x48D560);
MakeFunction(0x48D400, 0x48D568);
MakeCode(0x48D568);
MakeComm(0x48D576, "'TTBView.?fBC:dword'");
MakeComm(0x48D5A6, "'TTBView.?f84:dword'");
MakeCode(0x48D5A6);
MakeCode(0x48D5C7);
MakeFunction(0x48D568, 0x48D5CC);
MakeCode(0x48D5CC);
MakeFunction(0x48D5CC, 0x48D5E0);
MakeCode(0x48D5E0);
MakeCode(0x48D5ED);
MakeCode(0x48D5EF);
MakeCode(0x48D5F9);
MakeCode(0x48D620);
MakeFunction(0x48D5E0, 0x48D62D);
MakeCode(0x48D630);
MakeCode(0x48D685);
MakeCode(0x48D692);
MakeCode(0x48D69B);
MakeCode(0x48D6A0);
MakeFunction(0x48D630, 0x48D6A8);
MakeCode(0x48D6A8);
MakeFunction(0x48D6A8, 0x48D6BC);
MakeUnkn(0x48D6BC, 1);
MakeNameEx(0x48D6BC, "TTBModalHandler.Create", 0x20);
MakeComm(0x48D6BC, "'constructor TTBModalHandler.Create;'");
MakeCode(0x48D6BC);
MakeCode(0x48D6D1);
MakeComm(0x48D6FE, "'TTBModalHandler.?f8:HWND'");
MakeCode(0x48D703);
MakeComm(0x48D70E, "'TTBModalHandler.?f8:HWND'");
MakeComm(0x48D711, "'TTBModalHandler.?f4:byte'");
MakeCode(0x48D715);
MakeComm(0x48D71C, "'TTBModalHandler.?f8:HWND'");
MakeComm(0x48D739, "'TTBModalHandler.?f8:HWND'");
MakeComm(0x48D74B, "'TTBModalHandler.?f5:byte'");
MakeCode(0x48D764);
MakeFunction(0x48D6BC, 0x48D76D);
MakeCode(0x48D858);
MakeCode(0x48D863);
MakeCode(0x48D865);
MakeFunction(0x48D858, 0x48D871);
MakeCode(0x48D874);
MakeCode(0x48D890);
MakeCode(0x48D896);
MakeCode(0x48D8A0);
MakeCode(0x48D8A4);
MakeCode(0x48D8AC);
MakeCode(0x48D8B9);
MakeCode(0x48D8C3);
MakeFunction(0x48D874, 0x48D8C9);
MakeCode(0x48D8CC);
MakeCode(0x48D8DE);
MakeCode(0x48D8F0);
MakeCode(0x48D8FA);
MakeCode(0x48D904);
MakeCode(0x48D91D);
MakeCode(0x48D92A);
MakeCode(0x48D934);
MakeFunction(0x48D8CC, 0x48D93D);
MakeCode(0x48D940);
MakeCode(0x48D96F);
MakeCode(0x48D973);
MakeFunction(0x48D940, 0x48D977);
MakeCode(0x48D978);
MakeCode(0x48D9B0);
MakeCode(0x48D9D2);
MakeCode(0x48D9D6);
MakeFunction(0x48D978, 0x48D9E0);
MakeCode(0x48D9E0);
MakeFunction(0x48D9E0, 0x48DA23);
MakeCode(0x48DA24);
MakeCode(0x48DA8B);
MakeCode(0x48DAAF);
MakeCode(0x48DABB);
MakeCode(0x48DAE4);
MakeCode(0x48DAF0);
MakeCode(0x48DB05);
MakeFunction(0x48DA24, 0x48DB15);
MakeCode(0x48DB18);
MakeCode(0x48DB35);
MakeCode(0x48DB37);
MakeCode(0x48DB4A);
MakeCode(0x48DB73);
MakeCode(0x48DB81);
MakeCode(0x48DB8E);
MakeCode(0x48DB97);
MakeCode(0x48DB9C);
MakeFunction(0x48DB18, 0x48DBA3);
MakeCode(0x48DBA4);
MakeCode(0x48DBB8);
MakeCode(0x48DBCA);
MakeCode(0x48DBD3);
MakeCode(0x48DBE7);
MakeCode(0x48DBF2);
MakeCode(0x48DC06);
MakeCode(0x48DC0F);
MakeFunction(0x48DBA4, 0x48DC11);
MakeCode(0x48DC14);
MakeComm(0x48DC52, "'TTBModalHandler.?f8:HWND'");
MakeComm(0x48DC93, "'0x0'");
MakeCode(0x48DCBA);
MakeCode(0x48DCC0);
MakeCode(0x48DCF0);
MakeCode(0x48DCFD);
MakeCode(0x48DD37);
MakeCode(0x48DD41);
MakeCode(0x48DD54);
MakeCode(0x48DD93);
MakeCode(0x48DDE2);
MakeCode(0x48DDF1);
MakeCode(0x48DE30);
MakeCode(0x48DE3F);
MakeCode(0x48DE8A);
MakeCode(0x48DEA8);
MakeCode(0x48DED2);
MakeCode(0x48DED6);
MakeCode(0x48DED8);
MakeCode(0x48DEFD);
MakeCode(0x48DF12);
MakeCode(0x48DF22);
MakeCode(0x48DF58);
MakeCode(0x48DF71);
MakeCode(0x48DFBC);
MakeCode(0x48DFFA);
MakeCode(0x48E006);
MakeCode(0x48E032);
MakeCode(0x48E089);
MakeCode(0x48E097);
MakeCode(0x48E0D5);
MakeCode(0x48E0EB);
MakeCode(0x48E104);
MakeCode(0x48E13A);
MakeCode(0x48E17A);
MakeComm(0x48E1D1, "'0x0'");
MakeComm(0x48E1DD, "'0x40'");
MakeCode(0x48E1DD);
MakeCode(0x48E1E7);
MakeCode(0x48E22B);
MakeCode(0x48E275);
MakeCode(0x48E290);
MakeCode(0x48E29C);
MakeCode(0x48E2BF);
MakeCode(0x48E2C8);
MakeCode(0x48E2E2);
MakeCode(0x48E30F);
MakeCode(0x48E316);
MakeCode(0x48E325);
MakeCode(0x48E332);
MakeCode(0x48E33B);
MakeCode(0x48E340);
MakeCode(0x48E342);
MakeCode(0x48E34F);
MakeCode(0x48E393);
MakeCode(0x48E398);
MakeCode(0x48E39A);
MakeFunction(0x48DC14, 0x48E3A2);
MakeByte(0x48E3A4);
MakeUnkn(0x48E3A4, 1);
MakeNameEx(0x48E3A4, "gvar_0048E3A4", 0);
MakeByte(0x48E3A8);
MakeUnkn(0x48E3A8, 1);
MakeNameEx(0x48E3A8, "gvar_0048E3A8", 0);
MakeCode(0x48E3AC);
MakeComm(0x48E3B1, "'TTBPopupView.?fD0:dword'");
MakeFunction(0x48E3AC, 0x48E3D3);
MakeCode(0x48E3D4);
MakeComm(0x48E3D7, "'TTBPopupView.FOwner:TComponent'");
MakeComm(0x48E3E5, "'TTBPopupWindow.FFont:TFont'");
MakeFunction(0x48E3D4, 0x48E3EA);
MakeCode(0x48E3EC);
MakeCode(0x48E401);
MakeComm(0x48E433, "'TWinControl.SetBounds'");
MakeComm(0x48E439, "'0x2'");
MakeComm(0x48E440, "'TTBPopupWindow.FControlStyle:TControlStyle'");
MakeComm(0x48E443, "'TTBPopupWindow.FControlStyle:TControlStyle'");
MakeComm(0x48E470, "'TTBPopupWindow.sub_0048E5A4'");
MakeComm(0x48E47C, "'TTBPopupWindow........:dword'");
MakeComm(0x48E482, "'TTBPopupWindow........:dword'");
MakeComm(0x48E49C, "'TTBPopupWindow.FFont:TFont'");
MakeComm(0x48E4A1, "'TFont.Assign'");
MakeComm(0x48E4A6, "'TTBPopupWindow.FFont:TFont'");
MakeCode(0x48E4A6);
MakeComm(0x48E4B1, "'TFont.Assign'");
MakeCode(0x48E4B4);
MakeComm(0x48E4C1, "'TTBPopupWindow........:dword'");
MakeCode(0x48E4CE);
MakeComm(0x48E4D7, "'TTBPopupWindow........:dword'");
MakeComm(0x48E4E6, "'TTBPopupWindow........:dword'");
MakeCode(0x48E4E6);
MakeCode(0x48E4F3);
MakeComm(0x48E4FA, "'TApplication.FHandle:HWND'");
MakeCode(0x48E512);
MakeCode(0x48E520);
MakeCode(0x48E537);
MakeFunction(0x48E3EC, 0x48E542);
MakeByte(0x48E544);
MakeUnkn(0x48E544, 1);
MakeNameEx(0x48E544, "gvar_0048E544", 0);
MakeUnkn(0x48E548, 1);
MakeNameEx(0x48E548, "TTBPopupWindow.Destroy", 0x20);
MakeComm(0x48E548, "'destructor TTBPopupWindow.Destroy;'");
MakeCode(0x48E548);
MakeComm(0x48E55A, "'TTBPopupWindow........:dword'");
MakeCode(0x48E569);
MakeComm(0x48E578, "'TTBPopupWindow.DestroyWindowHandle'");
MakeComm(0x48E57E, "'TTBPopupWindow........:dword'");
MakeCode(0x48E57E);
MakeCode(0x48E5A0);
MakeFunction(0x48E548, 0x48E5A3);
MakeUnkn(0x48E5A4, 1);
MakeNameEx(0x48E5A4, "TTBPopupWindow.sub_0048E5A4", 0x20);
MakeComm(0x48E5A4, "'procedure TTBPopupWindow.sub_0048E5A4;'");
MakeCode(0x48E5A4);
MakeFunction(0x48E5A4, 0x48E5AA);
MakeUnkn(0x48E5AC, 1);
MakeNameEx(0x48E5AC, "TTBPopupWindow.CreateParams", 0x20);
MakeComm(0x48E5AC, "'procedure TTBPopupWindow.CreateParams(var Params:TCreateParams);'");
MakeCode(0x48E5AC);
MakeComm(0x48E5B6, "'TCreateParams.Style:DWORD'");
MakeComm(0x48E5C3, "'TCreateParams.Style:DWORD'");
MakeComm(0x48E5C6, "'TCreateParams.ExStyle:DWORD'");
MakeComm(0x48E5D1, "'TCreateParams.ExStyle:DWORD'");
MakeComm(0x48E5D4, "'TCreateParams.WindowClass:TWndClass'");
MakeComm(0x48E5E4, "'TCreateParams.WindowClass:TWndClass'");
MakeCode(0x48E5EB);
MakeFunction(0x48E5AC, 0x48E5ED);
MakeUnkn(0x48E5F0, 1);
MakeNameEx(0x48E5F0, "TTBPopupWindow.CreateWnd", 0x20);
MakeComm(0x48E5F0, "'procedure TTBPopupWindow.CreateWnd;'");
MakeCode(0x48E5F0);
MakeComm(0x48E5FA, "'TTBPopupWindow........:dword'");
MakeComm(0x48E609, "'TTBPopupWindow.?f258:byte'");
MakeComm(0x48E612, "'TTBPopupWindow.?f258:byte'");
MakeComm(0x48E64C, "'TTBPopupWindow........:dword'");
MakeCode(0x48E657);
MakeFunction(0x48E5F0, 0x48E659);
MakeUnkn(0x48E65C, 1);
MakeNameEx(0x48E65C, "TTBPopupWindow.DestroyWindowHandle", 0x20);
MakeComm(0x48E65C, "'procedure TTBPopupWindow.DestroyWindowHandle;'");
MakeCode(0x48E65C);
MakeComm(0x48E65F, "'TTBPopupWindow.FHandle:HWND'");
MakeComm(0x48E66A, "'TTBPopupWindow........:dword'");
MakeCode(0x48E679);
MakeComm(0x48E680, "'TTBPopupWindow.FHandle:HWND'");
MakeFunction(0x48E65C, 0x48E699);
MakeUnkn(0x48E69C, 1);
MakeNameEx(0x48E69C, "TTBPopupWindow.sub_0048E69C", 0x20);
MakeComm(0x48E69C, "'procedure TTBPopupWindow.sub_0048E69C(?:?);'");
MakeCode(0x48E69C);
MakeComm(0x48E6A4, "'TTBPopupWindow........:dword'");
MakeComm(0x48E6B9, "'TWinControl.DefaultHandler'");
MakeCode(0x48E6BC);
MakeFunction(0x48E69C, 0x48E6BF);
MakeUnkn(0x48E6C0, 1);
MakeNameEx(0x48E6C0, "TTBPopupWindow.CMShowingChanged", 0x20);
MakeComm(0x48E6C0, "'procedure TTBPopupWindow.CMShowingChanged(var Message:TMessage);'");
MakeCode(0x48E6C0);
MakeComm(0x48E6C6, "'TTBPopupWindow........:dword'");
MakeComm(0x48E6DF, "'TTBPopupWindow.FShowing:Boolean'");
MakeCode(0x48E6DF);
MakeComm(0x48E6F1, "'TTBPopupWindow.FHandle:HWND'");
MakeComm(0x48E727, "'0x0'");
MakeComm(0x48E72E, "'TTBPopupWindow.?f259:byte'");
MakeComm(0x48E736, "'TTBPopupWindow.?f259:byte'");
MakeCode(0x48E736);
MakeComm(0x48E73F, "'TTBPopupWindow.FHandle:HWND'");
MakeComm(0x48E74C, "'TTBPopupWindow.FShowing:Boolean'");
MakeCode(0x48E74C);
MakeComm(0x48E755, "'TTBPopupWindow.FHandle:HWND'");
MakeComm(0x48E760, "'TTBPopupWindow.FShowing:Boolean'");
MakeCode(0x48E760);
MakeComm(0x48E779, "'TTBPopupWindow.FHandle:HWND'");
MakeCode(0x48E785);
MakeFunction(0x48E6C0, 0x48E78A);
MakeByte(0x48E78C);
MakeUnkn(0x48E78C, 1);
MakeNameEx(0x48E78C, "gvar_0048E78C", 0);
MakeUnkn(0x48E790, 1);
MakeNameEx(0x48E790, "TTBPopupWindow.WMEraseBkgnd", 0x20);
MakeComm(0x48E790, "'procedure TTBPopupWindow.WMEraseBkgnd(Message:TWMEraseBkgnd);'");
MakeCode(0x48E790);
MakeComm(0x48E796, "'TTBPopupWindow.FHandle:HWND'");
MakeFunction(0x48E790, 0x48E7AD);
MakeUnkn(0x48E7B0, 1);
MakeNameEx(0x48E7B0, "TTBPopupWindow.WMPaint", 0x20);
MakeComm(0x48E7B0, "'procedure TTBPopupWindow.WMPaint(Message:TWMPaint);'");
MakeCode(0x48E7B0);
MakeComm(0x48E7B6, "'TTBPopupWindow.FHandle:HWND'");
MakeFunction(0x48E7B0, 0x48E7CD);
MakeCode(0x48E7D0);
MakeComm(0x48E7D3, "'TTBPopupWindow.......................FCanvas:TCanvas'");
MakeComm(0x48E7D9, "'TTBPopupWindow........:dword'");
MakeComm(0x48E7E8, "'TTBPopupWindow.sub_0048E890'");
MakeFunction(0x48E7D0, 0x48E7F0);
MakeCode(0x48E7F0);
MakeCode(0x48E803);
MakeCode(0x48E810);
MakeCode(0x48E837);
MakeCode(0x48E83F);
MakeFunction(0x48E7F0, 0x48E88F);
MakeCode(0x48E890);
MakeComm(0x48E89C, "'TTBPopupWindow........:dword'");
MakeCode(0x48E8D0);
MakeComm(0x48E8D3, "'TTBPopupWindow........:dword'");
MakeCode(0x48E912);
MakeFunction(0x48E890, 0x48E916);
MakeUnkn(0x48E918, 1);
MakeNameEx(0x48E918, "TTBPopupWindow.WMClose", 0x20);
MakeComm(0x48E918, "'procedure TTBPopupWindow.WMClose;'");
MakeCode(0x48E918);
MakeFunction(0x48E918, 0x48E919);
MakeCode(0x48E91C);
MakeFunction(0x48E91C, 0x48E927);
MakeUnkn(0x48E928, 1);
MakeNameEx(0x48E928, "TTBPopupWindow.WMNCCalcSize", 0x20);
MakeComm(0x48E928, "'procedure TTBPopupWindow.WMNCCalcSize(Message:TWMNCCalcSize);'");
MakeCode(0x48E928);
MakeFunction(0x48E928, 0x48E942);
MakeCode(0x48E944);
MakeCode(0x48E99C);
MakeCode(0x48E9F9);
MakeFunction(0x48E944, 0x48E9FF);
MakeUnkn(0x48EA00, 1);
MakeNameEx(0x48EA00, "TTBPopupWindow.WMNCPaint", 0x20);
MakeComm(0x48EA00, "'procedure TTBPopupWindow.WMNCPaint(Message:TMessage);'");
MakeCode(0x48EA00);
MakeCode(0x48EA51);
MakeCode(0x48EA5E);
MakeCode(0x48EA71);
MakeCode(0x48EA76);
MakeFunction(0x48EA00, 0x48EA7D);
MakeUnkn(0x48EA80, 1);
MakeNameEx(0x48EA80, "TTBPopupWindow.sub_0048EA80", 0x20);
MakeComm(0x48EA80, "'procedure TTBPopupWindow.sub_0048EA80(?:?);'");
MakeCode(0x48EA80);
MakeFunction(0x48EA80, 0x48EA9D);
MakeUnkn(0x48EAA0, 1);
MakeNameEx(0x48EAA0, "TTBPopupWindow.WMPrintClient", 0x20);
MakeComm(0x48EAA0, "'procedure TTBPopupWindow.WMPrintClient(Message:TWMPrintClient);'");
MakeCode(0x48EAA0);
MakeFunction(0x48EAA0, 0x48EAAE);
MakeUnkn(0x48EAB0, 1);
MakeNameEx(0x48EAB0, "TTBPopupWindow.CMHintShow", 0x20);
MakeComm(0x48EAB0, "'procedure TTBPopupWindow.CMHintShow(var Message:TMessage);'");
MakeCode(0x48EAB0);
MakeComm(0x48EAB0, "'TTBPopupWindow........:dword'");
MakeFunction(0x48EAB0, 0x48EABC);
MakeUnkn(0x48EABC, 1);
MakeNameEx(0x48EABC, "TTBPopupMenu.Create", 0x20);
MakeComm(0x48EABC, "'constructor TTBPopupMenu.Create(AOwner:TComponent);'");
MakeCode(0x48EABC);
MakeCode(0x48EACF);
MakeComm(0x48EAE3, "'TTBPopupMenu.sub_0048EB88'");
MakeComm(0x48EAF1, "'TTBPopupMenu..............Items:TTBRootItem'");
MakeCode(0x48EB1B);
MakeFunction(0x48EABC, 0x48EB23);
MakeUnkn(0x48EB24, 1);
MakeNameEx(0x48EB24, "TTBPopupMenu.Destroy", 0x20);
MakeComm(0x48EB24, "'destructor TTBPopupMenu.Destroy;'");
MakeCode(0x48EB24);
MakeComm(0x48EB2F, "'TTBPopupMenu...............Items:TTBRootItem'");
MakeCode(0x48EB4E);
MakeFunction(0x48EB24, 0x48EB51);
MakeCode(0x48EB54);
MakeFunction(0x48EB54, 0x48EB58);
MakeUnkn(0x48EB58, 1);
MakeNameEx(0x48EB58, "TTBPopupMenu.GetChildren", 0x20);
MakeComm(0x48EB58, "'procedure TTBPopupMenu.GetChildren(Proc:TGetChildProc; Root:TComponent; ?:?; ?:?);'");
MakeCode(0x48EB58);
MakeComm(0x48EB62, "'TTBPopupMenu................Items:TTBRootItem'");
MakeComm(0x48EB69, "'TTBCustomItem.sub_0041D314'");
MakeFunction(0x48EB58, 0x48EB73);
MakeUnkn(0x48EB74, 1);
MakeNameEx(0x48EB74, "TTBPopupMenu.SetChildOrder", 0x20);
MakeComm(0x48EB74, "'procedure TTBPopupMenu.SetChildOrder(Child:TComponent; Order:Integer);'");
MakeCode(0x48EB74);
MakeComm(0x48EB77, "'TTBPopupMenu.................Items:TTBRootItem'");
MakeComm(0x48EB7E, "'TTBCustomItem.sub_0041D33C'");
MakeFunction(0x48EB74, 0x48EB85);
MakeUnkn(0x48EB88, 1);
MakeNameEx(0x48EB88, "TTBPopupMenu.sub_0048EB88", 0x20);
MakeComm(0x48EB88, "'procedure TTBPopupMenu.sub_0048EB88;'");
MakeCode(0x48EB88);
MakeFunction(0x48EB88, 0x48EB8E);
MakeUnkn(0x48EB90, 1);
MakeNameEx(0x48EB90, "TTBPopupMenu.GetImages", 0x20);
MakeComm(0x48EB90, "'function TTBPopupMenu.GetImages:?;'");
MakeCode(0x48EB90);
MakeComm(0x48EB90, "'TTBPopupMenu..................Items:TTBRootItem'");
MakeComm(0x48EB93, "'TTBRootItem.?f9C:dword'");
MakeFunction(0x48EB90, 0x48EB9A);
MakeUnkn(0x48EB9C, 1);
MakeNameEx(0x48EB9C, "TTBPopupMenu.GetLinkSubitems", 0x20);
MakeComm(0x48EB9C, "'function TTBPopupMenu.GetLinkSubitems:?;'");
MakeCode(0x48EB9C);
MakeComm(0x48EB9C, "'TTBPopupMenu...................Items:TTBRootItem'");
MakeComm(0x48EB9F, "'TTBRootItem.?fA4:TTBCustomItem'");
MakeFunction(0x48EB9C, 0x48EBA6);
MakeUnkn(0x48EBA8, 1);
MakeNameEx(0x48EBA8, "TTBPopupMenu.GetOptions", 0x20);
MakeComm(0x48EBA8, "'function TTBPopupMenu.GetOptions:?;'");
MakeCode(0x48EBA8);
MakeComm(0x48EBA8, "'TTBPopupMenu....................Items:TTBRootItem'");
MakeComm(0x48EBAB, "'TTBRootItem.?f6A:word'");
MakeFunction(0x48EBA8, 0x48EBB2);
MakeUnkn(0x48EBB4, 1);
MakeNameEx(0x48EBB4, "TTBPopupMenu.SetImages", 0x20);
MakeComm(0x48EBB4, "'procedure TTBPopupMenu.SetImages(Value:TCustomImageList);'");
MakeCode(0x48EBB4);
MakeComm(0x48EBB4, "'TTBPopupMenu.....................Items:TTBRootItem'");
MakeFunction(0x48EBB4, 0x48EBBD);
MakeUnkn(0x48EBC0, 1);
MakeNameEx(0x48EBC0, "TTBPopupMenu.SetLinkSubitems", 0x20);
MakeComm(0x48EBC0, "'procedure TTBPopupMenu.SetLinkSubitems(Value:TTBCustomItem);'");
MakeCode(0x48EBC0);
MakeComm(0x48EBC0, "'TTBPopupMenu......................Items:TTBRootItem'");
MakeFunction(0x48EBC0, 0x48EBC9);
MakeUnkn(0x48EBCC, 1);
MakeNameEx(0x48EBCC, "TTBPopupMenu.SetOptions", 0x20);
MakeComm(0x48EBCC, "'procedure TTBPopupMenu.SetOptions(Value:TTBItemOptions);'");
MakeCode(0x48EBCC);
MakeComm(0x48EBD5, "'TTBPopupMenu.......................Items:TTBRootItem'");
MakeFunction(0x48EBCC, 0x48EBDF);
MakeUnkn(0x48EBF0, 1);
MakeNameEx(0x48EBF0, "TTBPopupMenu.Popup", 0x20);
MakeComm(0x48EBF0, "'procedure TTBPopupMenu.Popup(X:Integer; Y:Integer);'");
MakeCode(0x48EBF0);
MakeFunction(0x48EBF0, 0x48EBF8);
MakeCode(0x48EBF8);
MakeComm(0x48EC1D, "'TTBPopupMenu.TrackButton:TTrackButton'");
MakeComm(0x48EC25, "'TTBPopupMenu.Alignment:TPopupAlignment'");
MakeComm(0x48EC33, "'TTBPopupMenu........................Items:TTBRootItem'");
MakeFunction(0x48EBF8, 0x48EC44);
MakeUnkn(0x48EC44, 1);
MakeNameEx(0x48EC44, "TTBPopupMenu.IsShortCut", 0x20);
MakeComm(0x48EC44, "'procedure TTBPopupMenu.IsShortCut(var Message:TWMKey);'");
MakeCode(0x48EC44);
MakeComm(0x48EC44, "'TTBPopupMenu.........................Items:TTBRootItem'");
MakeFunction(0x48EC44, 0x48EC4D);
MakeCode(0x48EC50);
MakeFunction(0x48EC50, 0x48EC5C);
MakeCode(0x48EC5C);
MakeFunction(0x48EC5C, 0x48EC68);
MakeCode(0x48EC68);
MakeFunction(0x48EC68, 0x48EC74);
MakeCode(0x48EC74);
MakeFunction(0x48EC74, 0x48EC80);
MakeCode(0x48EC80);
MakeCode(0x48ECBA);
MakeFunction(0x48EC80, 0x48ECC1);
MakeCode(0x48ECC4);
MakeCode(0x48ECEC);
MakeCode(0x48ECF9);
MakeCode(0x48ECFA);
MakeCode(0x48ECFF);
MakeFunction(0x48ECC4, 0x48ED03);
MakeUnkn(0x48ED04, 1);
MakeNameEx(0x48ED04, "VMT_48ED04_THookUserData", 0);
MakeDword(0x48ED04);
MakeDword(0x48ED08);
MakeDword(0x48ED0C);
MakeDword(0x48ED10);
MakeDword(0x48ED14);
MakeDword(0x48ED18);
MakeDword(0x48ED1C);
MakeDword(0x48ED20);
MakeDword(0x48ED24);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48ED50, 0x48ED5E);
MakeDword(0x48ED28);
MakeDword(0x48ED2C);
MakeDword(0x48ED30);
MakeDword(0x48ED34);
MakeDword(0x48ED38);
MakeDword(0x48ED3C);
MakeDword(0x48ED40);
MakeDword(0x48ED44);
MakeDword(0x48ED48);
MakeDword(0x48ED4C);
MakeUnkn(0x48ED60, 1);
MakeNameEx(0x48ED60, "VMT_48ED60_THookProcData", 0);
MakeDword(0x48ED60);
MakeDword(0x48ED64);
MakeDword(0x48ED68);
MakeDword(0x48ED6C);
MakeDword(0x48ED70);
MakeDword(0x48ED74);
MakeDword(0x48ED78);
MakeDword(0x48ED7C);
MakeDword(0x48ED80);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48EDAC, 0x48EDBA);
MakeDword(0x48ED84);
MakeDword(0x48ED88);
MakeDword(0x48ED8C);
MakeDword(0x48ED90);
MakeDword(0x48ED94);
MakeDword(0x48ED98);
MakeDword(0x48ED9C);
MakeDword(0x48EDA0);
MakeDword(0x48EDA4);
MakeDword(0x48EDA8);
MakeUnkn(0x48EDBC, 1);
MakeNameEx(0x48EDBC, "VMT_48EDBC_THookInfo", 0);
MakeDword(0x48EDBC);
MakeDword(0x48EDC0);
MakeDword(0x48EDC4);
MakeDword(0x48EDC8);
MakeDword(0x48EDCC);
MakeDword(0x48EDD0);
MakeDword(0x48EDD4);
MakeDword(0x48EDD8);
MakeDword(0x48EDDC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48EE08, 0x48EE12);
MakeDword(0x48EDE0);
MakeDword(0x48EDE4);
MakeDword(0x48EDE8);
MakeDword(0x48EDEC);
MakeDword(0x48EDF0);
MakeDword(0x48EDF4);
MakeDword(0x48EDF8);
MakeDword(0x48EDFC);
MakeDword(0x48EE00);
MakeDword(0x48EE04);
MakeCode(0x48EE14);
MakeCode(0x48EE48);
MakeCode(0x48EE78);
MakeCode(0x48EEAA);
MakeCode(0x48EEC7);
MakeCode(0x48EED1);
MakeCode(0x48EEDB);
MakeCode(0x48EEE5);
MakeCode(0x48EEF5);
MakeFunction(0x48EE14, 0x48EF1E);
MakeCode(0x48EF20);
MakeCode(0x48EF5B);
MakeCode(0x48EF91);
MakeCode(0x48EF9B);
MakeCode(0x48EFA5);
MakeCode(0x48EFAD);
MakeFunction(0x48EF20, 0x48EFD6);
MakeCode(0x48EFD8);
MakeCode(0x48F013);
MakeCode(0x48F04B);
MakeCode(0x48F055);
MakeCode(0x48F05F);
MakeCode(0x48F067);
MakeFunction(0x48EFD8, 0x48F090);
MakeCode(0x48F090);
MakeComm(0x48F096, "'0x0'");
MakeCode(0x48F0A8);
MakeCode(0x48F0B5);
MakeCode(0x48F0C6);
MakeFunction(0x48F090, 0x48F0D6);
MakeByte(0x48F0D8);
MakeUnkn(0x48F0D8, 1);
MakeNameEx(0x48F0D8, "gvar_0048F0D8", 0);
MakeCode(0x48F0DC);
MakeComm(0x48F0FB, "'THookInfo.Create'");
MakeCode(0x48F10D);
MakeCode(0x48F11A);
MakeCode(0x48F127);
MakeCode(0x48F147);
MakeCode(0x48F159);
MakeCode(0x48F165);
MakeCode(0x48F1B2);
MakeCode(0x48F1DC);
MakeFunction(0x48F0DC, 0x48F1F2);
MakeCode(0x48F1F4);
MakeCode(0x48F219);
MakeCode(0x48F226);
MakeCode(0x48F23A);
MakeCode(0x48F240);
MakeCode(0x48F242);
MakeCode(0x48F24F);
MakeCode(0x48F26D);
MakeCode(0x48F2AD);
MakeCode(0x48F2B5);
MakeCode(0x48F2F4);
MakeFunction(0x48F1F4, 0x48F2F8);
MakeCode(0x48F2F8);
MakeComm(0x48F31E, "'TList.Create'");
MakeCode(0x48F330);
MakeCode(0x48F358);
MakeCode(0x48F381);
MakeCode(0x48F39C);
MakeComm(0x48F3A3, "'THookUserData.Create'");
MakeComm(0x48F3B1, "'THookUserData.?f4:dword'");
MakeComm(0x48F3B7, "'THookUserData.?f8:dword'");
MakeComm(0x48F3BD, "'0x0'");
MakeComm(0x48F3C4, "'THookUserData.?fC:byte'");
MakeCode(0x48F3D3);
MakeCode(0x48F3DD);
MakeComm(0x48F3EE, "'THookUserData.Create'");
MakeComm(0x48F409, "'THookUserData.?f4:dword'");
MakeComm(0x48F40F, "'THookUserData.?f8:dword'");
MakeComm(0x48F415, "'0x0'");
MakeComm(0x48F41C, "'THookUserData.?fC:byte'");
MakeComm(0x48F436, "'THookProcData.Create'");
MakeCode(0x48F43D);
MakeCode(0x48F447);
MakeCode(0x48F45E);
MakeComm(0x48F461, "'THookProcData.?f4:dword'");
MakeComm(0x48F468, "'THookProcData.?f8:byte'");
MakeComm(0x48F46E, "'THookProcData.?fC:THookUserData'");
MakeCode(0x48F483);
MakeComm(0x48F48F, "'THookUserData.?fC:byte'");
MakeFunction(0x48F2F8, 0x48F49E);
MakeByte(0x48F4A0);
MakeUnkn(0x48F4A0, 1);
MakeNameEx(0x48F4A0, "gvar_0048F4A0", 0);
MakeCode(0x48F4A4);
MakeCode(0x48F4DC);
MakeCode(0x48F4FF);
MakeCode(0x48F504);
MakeCode(0x48F50D);
MakeCode(0x48F537);
MakeCode(0x48F53C);
MakeCode(0x48F542);
MakeCode(0x48F55F);
MakeCode(0x48F567);
MakeCode(0x48F588);
MakeFunction(0x48F4A4, 0x48F58F);
MakeCode(0x48F590);
MakeComm(0x48F5AB, "'0x7'");
MakeCode(0x48F5B7);
MakeCode(0x48F5C4);
MakeCode(0x48F5C5);
MakeCode(0x48F5CA);
MakeFunction(0x48F590, 0x48F5CE);
MakeByte(0x48F5D0);
MakeUnkn(0x48F5D0, 1);
MakeNameEx(0x48F5D0, "gvar_0048F5D0", 0);
MakeUnkn(0x48F5D4, 1);
MakeNameEx(0x48F5D4, "RTTI_48F5D4_Enumeration_TTBDockBoundLinesValues", 0);
MakeDword(0x48F5D4);
MakeUnkn(0x48F5D8, 1);
MakeNameEx(0x48F5D8, "", 0);
MakeByte(0x48F5D8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48F5D9, 0x48F5F1);
MakeByte(0x48F5F1);
MakeDword(0x48F5F2);
MakeDword(0x48F5F6);
MakeDword(0x48F5FA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48F5FE, 0x48F604);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48F604, 0x48F60D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48F60D, 0x48F614);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48F614, 0x48F61C);
MakeUnkn(0x48F624, 1);
MakeNameEx(0x48F624, "RTTI_48F624_Set_TTBDockBoundLines", 0);
MakeDword(0x48F624);
MakeUnkn(0x48F628, 1);
MakeNameEx(0x48F628, "", 0);
MakeByte(0x48F628);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48F629, 0x48F63B);
MakeByte(0x48F63B);
MakeDword(0x48F63C);
MakeUnkn(0x48F640, 1);
MakeNameEx(0x48F640, "RTTI_48F640_Enumeration_TTBDockPosition", 0);
MakeDword(0x48F640);
MakeUnkn(0x48F644, 1);
MakeNameEx(0x48F644, "", 0);
MakeByte(0x48F644);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48F645, 0x48F655);
MakeByte(0x48F655);
MakeDword(0x48F656);
MakeDword(0x48F65A);
MakeDword(0x48F65E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48F662, 0x48F668);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48F668, 0x48F671);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48F671, 0x48F678);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48F678, 0x48F680);
MakeUnkn(0x48F688, 1);
MakeNameEx(0x48F688, "RTTI_48F688_Set_TTBDockableTo", 0);
MakeDword(0x48F688);
MakeUnkn(0x48F68C, 1);
MakeNameEx(0x48F68C, "", 0);
MakeByte(0x48F68C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48F68D, 0x48F69B);
MakeByte(0x48F69B);
MakeDword(0x48F69C);
MakeUnkn(0x48F6A0, 1);
MakeNameEx(0x48F6A0, "RTTI_48F6A0_Method_TTBInsertRemoveEvent", 0);
MakeDword(0x48F6A0);
MakeUnkn(0x48F6A4, 1);
MakeNameEx(0x48F6A4, "", 0);
MakeByte(0x48F6A4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48F6A5, 0x48F6BA);
MakeByte(0x48F6BA);
MakeByte(0x48F6BB);
MakeByte(0x48F6BC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48F6BD, 0x48F6C4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48F6C4, 0x48F6CC);
MakeByte(0x48F6CC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48F6CD, 0x48F6D7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48F6D7, 0x48F6DF);
MakeByte(0x48F6DF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48F6E0, 0x48F6E4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48F6E4, 0x48F6FC);
MakeByte(0x48F6FC);
MakeDword(0x48F6FD);
MakeDword(0x48F701);
MakeDword(0x48F705);
MakeUnkn(0x48F70C, 1);
MakeNameEx(0x48F70C, "RTTI_48F70C_Method_TTBRequestDockEvent", 0);
MakeDword(0x48F70C);
MakeUnkn(0x48F710, 1);
MakeNameEx(0x48F710, "", 0);
MakeByte(0x48F710);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48F711, 0x48F725);
MakeByte(0x48F725);
MakeByte(0x48F726);
MakeByte(0x48F727);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48F728, 0x48F72F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48F72F, 0x48F737);
MakeByte(0x48F737);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48F738, 0x48F73C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48F73C, 0x48F754);
MakeByte(0x48F754);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48F755, 0x48F75C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48F75C, 0x48F764);
MakeByte(0x48F764);
MakeDword(0x48F765);
MakeDword(0x48F769);
MakeDword(0x48F76D);
MakeUnkn(0x48F774, 1);
MakeNameEx(0x48F774, "VMT_48F774_TTBDock", 0);
MakeDword(0x48F774);
MakeDword(0x48F778);
MakeDword(0x48F77C);
MakeDword(0x48F780);
MakeDword(0x48F784);
MakeDword(0x48F788);
MakeDword(0x48F78C);
MakeDword(0x48F790);
MakeUnkn(0x48F8A4, 1);
MakeNameEx(0x48F8A4, "TTBDock_DynamicTable", 0);
MakeWord(0x48F8A4);
MakeWord(0x48F8A6);
MakeWord(0x48F8A8);
MakeWord(0x48F8AA);
MakeWord(0x48F8AC);
MakeWord(0x48F8AE);
MakeWord(0x48F8B0);
MakeWord(0x48F8B2);
MakeWord(0x48F8B4);
MakeWord(0x48F8B6);
MakeWord(0x48F8B8);
MakeWord(0x48F8BA);
MakeDword(0x48F8BC);
MakeDword(0x48F8C0);
MakeDword(0x48F8C4);
MakeDword(0x48F8C8);
MakeDword(0x48F8CC);
MakeDword(0x48F8D0);
MakeDword(0x48F8D4);
MakeDword(0x48F8D8);
MakeDword(0x48F8DC);
MakeDword(0x48F8E0);
MakeDword(0x48F8E4);
MakeDword(0x48F794);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48F8E8, 0x48F8F0);
MakeDword(0x48F798);
MakeDword(0x48F79C);
MakeDword(0x48F7A0);
MakeDword(0x48F7A4);
MakeDword(0x48F7A8);
MakeDword(0x48F7AC);
MakeDword(0x48F7B0);
MakeDword(0x48F7B4);
MakeDword(0x48F7B8);
MakeDword(0x48F7BC);
MakeComm(0x48F7C0, "'+0'");
MakeDword(0x48F7C0);
MakeComm(0x48F7C4, "'+4'");
MakeDword(0x48F7C4);
MakeComm(0x48F7C8, "'+8'");
MakeDword(0x48F7C8);
MakeComm(0x48F7CC, "'+C'");
MakeDword(0x48F7CC);
MakeComm(0x48F7D0, "'+10'");
MakeDword(0x48F7D0);
MakeComm(0x48F7D4, "'+14'");
MakeDword(0x48F7D4);
MakeComm(0x48F7D8, "'+18'");
MakeDword(0x48F7D8);
MakeComm(0x48F7DC, "'+1C'");
MakeDword(0x48F7DC);
MakeComm(0x48F7E0, "'+20'");
MakeDword(0x48F7E0);
MakeComm(0x48F7E4, "'+24'");
MakeDword(0x48F7E4);
MakeComm(0x48F7E8, "'+28'");
MakeDword(0x48F7E8);
MakeComm(0x48F7EC, "'+2C'");
MakeDword(0x48F7EC);
MakeComm(0x48F7F0, "'+30'");
MakeDword(0x48F7F0);
MakeComm(0x48F7F4, "'+34'");
MakeDword(0x48F7F4);
MakeComm(0x48F7F8, "'+38'");
MakeDword(0x48F7F8);
MakeComm(0x48F7FC, "'+3C'");
MakeDword(0x48F7FC);
MakeComm(0x48F800, "'+40'");
MakeDword(0x48F800);
MakeComm(0x48F804, "'+44'");
MakeDword(0x48F804);
MakeComm(0x48F808, "'+48'");
MakeDword(0x48F808);
MakeComm(0x48F80C, "'+4C'");
MakeDword(0x48F80C);
MakeComm(0x48F810, "'+50'");
MakeDword(0x48F810);
MakeComm(0x48F814, "'+54'");
MakeDword(0x48F814);
MakeComm(0x48F818, "'+58'");
MakeDword(0x48F818);
MakeComm(0x48F81C, "'+5C'");
MakeDword(0x48F81C);
MakeComm(0x48F820, "'+60'");
MakeDword(0x48F820);
MakeComm(0x48F824, "'+64'");
MakeDword(0x48F824);
MakeComm(0x48F828, "'+68'");
MakeDword(0x48F828);
MakeComm(0x48F82C, "'+6C'");
MakeDword(0x48F82C);
MakeComm(0x48F830, "'+70'");
MakeDword(0x48F830);
MakeComm(0x48F834, "'+74'");
MakeDword(0x48F834);
MakeComm(0x48F838, "'+78'");
MakeDword(0x48F838);
MakeComm(0x48F83C, "'+7C'");
MakeDword(0x48F83C);
MakeComm(0x48F840, "'+80'");
MakeDword(0x48F840);
MakeComm(0x48F844, "'+84'");
MakeDword(0x48F844);
MakeComm(0x48F848, "'+88'");
MakeDword(0x48F848);
MakeComm(0x48F84C, "'+8C'");
MakeDword(0x48F84C);
MakeComm(0x48F850, "'+90'");
MakeDword(0x48F850);
MakeComm(0x48F854, "'+94'");
MakeDword(0x48F854);
MakeComm(0x48F858, "'+98'");
MakeDword(0x48F858);
MakeComm(0x48F85C, "'+9C'");
MakeDword(0x48F85C);
MakeComm(0x48F860, "'+A0'");
MakeDword(0x48F860);
MakeComm(0x48F864, "'+A4'");
MakeDword(0x48F864);
MakeComm(0x48F868, "'+A8'");
MakeDword(0x48F868);
MakeComm(0x48F86C, "'+AC'");
MakeDword(0x48F86C);
MakeComm(0x48F870, "'+B0'");
MakeDword(0x48F870);
MakeComm(0x48F874, "'+B4'");
MakeDword(0x48F874);
MakeComm(0x48F878, "'+B8'");
MakeDword(0x48F878);
MakeComm(0x48F87C, "'+BC'");
MakeDword(0x48F87C);
MakeComm(0x48F880, "'+C0'");
MakeDword(0x48F880);
MakeComm(0x48F884, "'+C4'");
MakeDword(0x48F884);
MakeComm(0x48F888, "'+C8'");
MakeDword(0x48F888);
MakeComm(0x48F88C, "'+CC'");
MakeDword(0x48F88C);
MakeComm(0x48F890, "'+D0'");
MakeDword(0x48F890);
MakeComm(0x48F894, "'+D4'");
MakeDword(0x48F894);
MakeComm(0x48F898, "'+D8'");
MakeDword(0x48F898);
MakeComm(0x48F89C, "'+DC'");
MakeDword(0x48F89C);
MakeComm(0x48F8A0, "'+E0'");
MakeDword(0x48F8A0);
MakeUnkn(0x48F8F0, 1);
MakeNameEx(0x48F8F0, "RTTI_48F8F0_Class_TTBDock", 0);
MakeDword(0x48F8F0);
MakeUnkn(0x48F8F4, 1);
MakeNameEx(0x48F8F4, "", 0);
MakeByte(0x48F8F4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48F8F5, 0x48F8FD);
MakeDword(0x48F8FD);
MakeDword(0x48F901);
MakeWord(0x48F905);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48F907, 0x48F90F);
MakeWord(0x48F90F);
MakeDword(0x48F911);
MakeDword(0x48F915);
MakeDword(0x48F919);
MakeDword(0x48F91D);
MakeDword(0x48F921);
MakeDword(0x48F925);
MakeWord(0x48F929);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48F92B, 0x48F935);
MakeDword(0x48F935);
MakeDword(0x48F939);
MakeDword(0x48F93D);
MakeDword(0x48F941);
MakeDword(0x48F945);
MakeDword(0x48F949);
MakeWord(0x48F94D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48F94F, 0x48F95A);
MakeDword(0x48F95A);
MakeDword(0x48F95E);
MakeDword(0x48F962);
MakeDword(0x48F966);
MakeDword(0x48F96A);
MakeDword(0x48F96E);
MakeWord(0x48F972);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48F974, 0x48F989);
MakeDword(0x48F989);
MakeDword(0x48F98D);
MakeDword(0x48F991);
MakeDword(0x48F995);
MakeDword(0x48F999);
MakeDword(0x48F99D);
MakeWord(0x48F9A1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48F9A3, 0x48F9AE);
MakeDword(0x48F9AE);
MakeDword(0x48F9B2);
MakeDword(0x48F9B6);
MakeDword(0x48F9BA);
MakeDword(0x48F9BE);
MakeDword(0x48F9C2);
MakeWord(0x48F9C6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48F9C8, 0x48F9CE);
MakeDword(0x48F9CE);
MakeDword(0x48F9D2);
MakeDword(0x48F9D6);
MakeDword(0x48F9DA);
MakeDword(0x48F9DE);
MakeDword(0x48F9E2);
MakeWord(0x48F9E6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48F9E8, 0x48F9F1);
MakeDword(0x48F9F1);
MakeDword(0x48F9F5);
MakeDword(0x48F9F9);
MakeDword(0x48F9FD);
MakeDword(0x48FA01);
MakeDword(0x48FA05);
MakeWord(0x48FA09);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48FA0B, 0x48FA19);
MakeDword(0x48FA19);
MakeDword(0x48FA1D);
MakeDword(0x48FA21);
MakeDword(0x48FA25);
MakeDword(0x48FA29);
MakeDword(0x48FA2D);
MakeWord(0x48FA31);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48FA33, 0x48FA3D);
MakeDword(0x48FA3D);
MakeDword(0x48FA41);
MakeDword(0x48FA45);
MakeDword(0x48FA49);
MakeDword(0x48FA4D);
MakeDword(0x48FA51);
MakeWord(0x48FA55);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48FA57, 0x48FA60);
MakeDword(0x48FA60);
MakeDword(0x48FA64);
MakeDword(0x48FA68);
MakeDword(0x48FA6C);
MakeDword(0x48FA70);
MakeDword(0x48FA74);
MakeWord(0x48FA78);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48FA7A, 0x48FA82);
MakeDword(0x48FA82);
MakeDword(0x48FA86);
MakeDword(0x48FA8A);
MakeDword(0x48FA8E);
MakeDword(0x48FA92);
MakeDword(0x48FA96);
MakeWord(0x48FA9A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48FA9C, 0x48FAAB);
MakeDword(0x48FAAB);
MakeDword(0x48FAAF);
MakeDword(0x48FAB3);
MakeDword(0x48FAB7);
MakeDword(0x48FABB);
MakeDword(0x48FABF);
MakeWord(0x48FAC3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48FAC5, 0x48FAD7);
MakeDword(0x48FAD7);
MakeDword(0x48FADB);
MakeDword(0x48FADF);
MakeDword(0x48FAE3);
MakeDword(0x48FAE7);
MakeDword(0x48FAEB);
MakeWord(0x48FAEF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48FAF1, 0x48FAFD);
MakeDword(0x48FAFD);
MakeDword(0x48FB01);
MakeDword(0x48FB05);
MakeDword(0x48FB09);
MakeDword(0x48FB0D);
MakeDword(0x48FB11);
MakeWord(0x48FB15);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48FB17, 0x48FB23);
MakeDword(0x48FB23);
MakeDword(0x48FB27);
MakeDword(0x48FB2B);
MakeDword(0x48FB2F);
MakeDword(0x48FB33);
MakeDword(0x48FB37);
MakeWord(0x48FB3B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48FB3D, 0x48FB47);
MakeDword(0x48FB47);
MakeDword(0x48FB4B);
MakeDword(0x48FB4F);
MakeDword(0x48FB53);
MakeDword(0x48FB57);
MakeDword(0x48FB5B);
MakeWord(0x48FB5F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48FB61, 0x48FB6F);
MakeDword(0x48FB6F);
MakeDword(0x48FB73);
MakeDword(0x48FB77);
MakeDword(0x48FB7B);
MakeDword(0x48FB7F);
MakeDword(0x48FB83);
MakeWord(0x48FB87);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48FB89, 0x48FB92);
MakeUnkn(0x48FB94, 1);
MakeNameEx(0x48FB94, "VMT_48FB94_TTBFloatingWindowParent", 0);
MakeDword(0x48FB94);
MakeDword(0x48FB98);
MakeDword(0x48FB9C);
MakeDword(0x48FBA0);
MakeDword(0x48FBA4);
MakeDword(0x48FBA8);
MakeDword(0x48FBAC);
MakeDword(0x48FBB0);
MakeUnkn(0x48FCE4, 1);
MakeNameEx(0x48FCE4, "TTBFloatingWindowParent_DynamicTable", 0);
MakeWord(0x48FCE4);
MakeWord(0x48FCE6);
MakeWord(0x48FCE8);
MakeWord(0x48FCEA);
MakeWord(0x48FCEC);
MakeWord(0x48FCEE);
MakeWord(0x48FCF0);
MakeWord(0x48FCF2);
MakeWord(0x48FCF4);
MakeWord(0x48FCF6);
MakeWord(0x48FCF8);
MakeWord(0x48FCFA);
MakeWord(0x48FCFC);
MakeWord(0x48FCFE);
MakeWord(0x48FD00);
MakeWord(0x48FD02);
MakeWord(0x48FD04);
MakeWord(0x48FD06);
MakeDword(0x48FD08);
MakeDword(0x48FD0C);
MakeDword(0x48FD10);
MakeDword(0x48FD14);
MakeDword(0x48FD18);
MakeDword(0x48FD1C);
MakeDword(0x48FD20);
MakeDword(0x48FD24);
MakeDword(0x48FD28);
MakeDword(0x48FD2C);
MakeDword(0x48FD30);
MakeDword(0x48FD34);
MakeDword(0x48FD38);
MakeDword(0x48FD3C);
MakeDword(0x48FD40);
MakeDword(0x48FD44);
MakeDword(0x48FD48);
MakeDword(0x48FBB4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48FD4C, 0x48FD64);
MakeDword(0x48FBB8);
MakeDword(0x48FBBC);
MakeDword(0x48FBC0);
MakeDword(0x48FBC4);
MakeDword(0x48FBC8);
MakeDword(0x48FBCC);
MakeDword(0x48FBD0);
MakeDword(0x48FBD4);
MakeDword(0x48FBD8);
MakeDword(0x48FBDC);
MakeComm(0x48FBE0, "'+0'");
MakeDword(0x48FBE0);
MakeComm(0x48FBE4, "'+4'");
MakeDword(0x48FBE4);
MakeComm(0x48FBE8, "'+8'");
MakeDword(0x48FBE8);
MakeComm(0x48FBEC, "'+C'");
MakeDword(0x48FBEC);
MakeComm(0x48FBF0, "'+10'");
MakeDword(0x48FBF0);
MakeComm(0x48FBF4, "'+14'");
MakeDword(0x48FBF4);
MakeComm(0x48FBF8, "'+18'");
MakeDword(0x48FBF8);
MakeComm(0x48FBFC, "'+1C'");
MakeDword(0x48FBFC);
MakeComm(0x48FC00, "'+20'");
MakeDword(0x48FC00);
MakeComm(0x48FC04, "'+24'");
MakeDword(0x48FC04);
MakeComm(0x48FC08, "'+28'");
MakeDword(0x48FC08);
MakeComm(0x48FC0C, "'+2C'");
MakeDword(0x48FC0C);
MakeComm(0x48FC10, "'+30'");
MakeDword(0x48FC10);
MakeComm(0x48FC14, "'+34'");
MakeDword(0x48FC14);
MakeComm(0x48FC18, "'+38'");
MakeDword(0x48FC18);
MakeComm(0x48FC1C, "'+3C'");
MakeDword(0x48FC1C);
MakeComm(0x48FC20, "'+40'");
MakeDword(0x48FC20);
MakeComm(0x48FC24, "'+44'");
MakeDword(0x48FC24);
MakeComm(0x48FC28, "'+48'");
MakeDword(0x48FC28);
MakeComm(0x48FC2C, "'+4C'");
MakeDword(0x48FC2C);
MakeComm(0x48FC30, "'+50'");
MakeDword(0x48FC30);
MakeComm(0x48FC34, "'+54'");
MakeDword(0x48FC34);
MakeComm(0x48FC38, "'+58'");
MakeDword(0x48FC38);
MakeComm(0x48FC3C, "'+5C'");
MakeDword(0x48FC3C);
MakeComm(0x48FC40, "'+60'");
MakeDword(0x48FC40);
MakeComm(0x48FC44, "'+64'");
MakeDword(0x48FC44);
MakeComm(0x48FC48, "'+68'");
MakeDword(0x48FC48);
MakeComm(0x48FC4C, "'+6C'");
MakeDword(0x48FC4C);
MakeComm(0x48FC50, "'+70'");
MakeDword(0x48FC50);
MakeComm(0x48FC54, "'+74'");
MakeDword(0x48FC54);
MakeComm(0x48FC58, "'+78'");
MakeDword(0x48FC58);
MakeComm(0x48FC5C, "'+7C'");
MakeDword(0x48FC5C);
MakeComm(0x48FC60, "'+80'");
MakeDword(0x48FC60);
MakeComm(0x48FC64, "'+84'");
MakeDword(0x48FC64);
MakeComm(0x48FC68, "'+88'");
MakeDword(0x48FC68);
MakeComm(0x48FC6C, "'+8C'");
MakeDword(0x48FC6C);
MakeComm(0x48FC70, "'+90'");
MakeDword(0x48FC70);
MakeComm(0x48FC74, "'+94'");
MakeDword(0x48FC74);
MakeComm(0x48FC78, "'+98'");
MakeDword(0x48FC78);
MakeComm(0x48FC7C, "'+9C'");
MakeDword(0x48FC7C);
MakeComm(0x48FC80, "'+A0'");
MakeDword(0x48FC80);
MakeComm(0x48FC84, "'+A4'");
MakeDword(0x48FC84);
MakeComm(0x48FC88, "'+A8'");
MakeDword(0x48FC88);
MakeComm(0x48FC8C, "'+AC'");
MakeDword(0x48FC8C);
MakeComm(0x48FC90, "'+B0'");
MakeDword(0x48FC90);
MakeComm(0x48FC94, "'+B4'");
MakeDword(0x48FC94);
MakeComm(0x48FC98, "'+B8'");
MakeDword(0x48FC98);
MakeComm(0x48FC9C, "'+BC'");
MakeDword(0x48FC9C);
MakeComm(0x48FCA0, "'+C0'");
MakeDword(0x48FCA0);
MakeComm(0x48FCA4, "'+C4'");
MakeDword(0x48FCA4);
MakeComm(0x48FCA8, "'+C8'");
MakeDword(0x48FCA8);
MakeComm(0x48FCAC, "'+CC'");
MakeDword(0x48FCAC);
MakeComm(0x48FCB0, "'+D0'");
MakeDword(0x48FCB0);
MakeComm(0x48FCB4, "'+D4'");
MakeDword(0x48FCB4);
MakeComm(0x48FCB8, "'+D8'");
MakeDword(0x48FCB8);
MakeComm(0x48FCBC, "'+DC'");
MakeDword(0x48FCBC);
MakeComm(0x48FCC0, "'+E0'");
MakeDword(0x48FCC0);
MakeComm(0x48FCC4, "'+E4'");
MakeDword(0x48FCC4);
MakeComm(0x48FCC8, "'+E8'");
MakeDword(0x48FCC8);
MakeComm(0x48FCCC, "'+EC'");
MakeDword(0x48FCCC);
MakeComm(0x48FCD0, "'+F0'");
MakeDword(0x48FCD0);
MakeComm(0x48FCD4, "'+F4'");
MakeDword(0x48FCD4);
MakeComm(0x48FCD8, "'+F8'");
MakeDword(0x48FCD8);
MakeComm(0x48FCDC, "'+FC'");
MakeDword(0x48FCDC);
MakeComm(0x48FCE0, "'+100'");
MakeDword(0x48FCE0);
MakeUnkn(0x48FD64, 1);
MakeNameEx(0x48FD64, "RTTI_48FD64_Class_TTBFloatingWindowParent", 0);
MakeDword(0x48FD64);
MakeUnkn(0x48FD68, 1);
MakeNameEx(0x48FD68, "", 0);
MakeByte(0x48FD68);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48FD69, 0x48FD81);
MakeDword(0x48FD81);
MakeDword(0x48FD85);
MakeWord(0x48FD89);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48FD8B, 0x48FD93);
MakeWord(0x48FD93);
MakeUnkn(0x48FD98, 1);
MakeNameEx(0x48FD98, "RTTI_48FD98_Method_TTBDockChangingEvent", 0);
MakeDword(0x48FD98);
MakeUnkn(0x48FD9C, 1);
MakeNameEx(0x48FD9C, "", 0);
MakeByte(0x48FD9C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48FD9D, 0x48FDB2);
MakeByte(0x48FDB2);
MakeByte(0x48FDB3);
MakeByte(0x48FDB4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48FDB5, 0x48FDBC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48FDBC, 0x48FDC4);
MakeByte(0x48FDC4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48FDC5, 0x48FDCE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48FDCE, 0x48FDD6);
MakeByte(0x48FDD6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48FDD7, 0x48FDE1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48FDE1, 0x48FDE9);
MakeByte(0x48FDE9);
MakeDword(0x48FDEA);
MakeDword(0x48FDEE);
MakeDword(0x48FDF2);
MakeUnkn(0x48FDF8, 1);
MakeNameEx(0x48FDF8, "RTTI_48FDF8_Enumeration_TTBDragHandleStyle", 0);
MakeDword(0x48FDF8);
MakeUnkn(0x48FDFC, 1);
MakeNameEx(0x48FDFC, "", 0);
MakeByte(0x48FDFC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48FDFD, 0x48FE10);
MakeByte(0x48FE10);
MakeDword(0x48FE11);
MakeDword(0x48FE15);
MakeDword(0x48FE19);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48FE1D, 0x48FE26);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48FE26, 0x48FE2D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48FE2D, 0x48FE36);
MakeUnkn(0x48FE40, 1);
MakeNameEx(0x48FE40, "RTTI_48FE40_Enumeration_TTBDockMode", 0);
MakeDword(0x48FE40);
MakeUnkn(0x48FE44, 1);
MakeNameEx(0x48FE44, "", 0);
MakeByte(0x48FE44);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48FE45, 0x48FE51);
MakeByte(0x48FE51);
MakeDword(0x48FE52);
MakeDword(0x48FE56);
MakeDword(0x48FE5A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48FE5E, 0x48FE69);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48FE69, 0x48FE77);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48FE77, 0x48FE92);
MakeUnkn(0x48FE9C, 1);
MakeNameEx(0x48FE9C, "RTTI_48FE9C_Enumeration_TTBFloatingMode", 0);
MakeDword(0x48FE9C);
MakeUnkn(0x48FEA0, 1);
MakeNameEx(0x48FEA0, "", 0);
MakeByte(0x48FEA0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48FEA1, 0x48FEB1);
MakeByte(0x48FEB1);
MakeDword(0x48FEB2);
MakeDword(0x48FEB6);
MakeDword(0x48FEBA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48FEBE, 0x48FED2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48FED2, 0x48FEE4);
MakeUnkn(0x48FEEC, 1);
MakeNameEx(0x48FEEC, "RTTI_48FEEC_Enumeration_TTBShrinkMode", 0);
MakeDword(0x48FEEC);
MakeUnkn(0x48FEF0, 1);
MakeNameEx(0x48FEF0, "", 0);
MakeByte(0x48FEF0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48FEF1, 0x48FEFF);
MakeByte(0x48FEFF);
MakeDword(0x48FF00);
MakeDword(0x48FF04);
MakeDword(0x48FF08);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48FF0C, 0x48FF15);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48FF15, 0x48FF1E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x48FF1E, 0x48FF2A);
MakeUnkn(0x48FF34, 1);
MakeNameEx(0x48FF34, "VMT_48FF34_TTBCustomDockableWindow", 0);
MakeDword(0x48FF34);
MakeDword(0x48FF38);
MakeDword(0x48FF3C);
MakeDword(0x48FF40);
MakeDword(0x48FF44);
MakeDword(0x48FF48);
MakeDword(0x48FF4C);
MakeDword(0x48FF50);
MakeUnkn(0x490088, 1);
MakeNameEx(0x490088, "TTBCustomDockableWindow_DynamicTable", 0);
MakeWord(0x490088);
MakeWord(0x49008A);
MakeWord(0x49008C);
MakeWord(0x49008E);
MakeWord(0x490090);
MakeWord(0x490092);
MakeWord(0x490094);
MakeWord(0x490096);
MakeWord(0x490098);
MakeWord(0x49009A);
MakeWord(0x49009C);
MakeWord(0x49009E);
MakeWord(0x4900A0);
MakeWord(0x4900A2);
MakeWord(0x4900A4);
MakeWord(0x4900A6);
MakeWord(0x4900A8);
MakeWord(0x4900AA);
MakeWord(0x4900AC);
MakeWord(0x4900AE);
MakeWord(0x4900B0);
MakeWord(0x4900B2);
MakeWord(0x4900B4);
MakeWord(0x4900B6);
MakeWord(0x4900B8);
MakeWord(0x4900BA);
MakeWord(0x4900BC);
MakeWord(0x4900BE);
MakeWord(0x4900C0);
MakeWord(0x4900C2);
MakeWord(0x4900C4);
MakeWord(0x4900C6);
MakeWord(0x4900C8);
MakeWord(0x4900CA);
MakeWord(0x4900CC);
MakeWord(0x4900CE);
MakeWord(0x4900D0);
MakeDword(0x4900D2);
MakeDword(0x4900D6);
MakeDword(0x4900DA);
MakeDword(0x4900DE);
MakeDword(0x4900E2);
MakeDword(0x4900E6);
MakeDword(0x4900EA);
MakeDword(0x4900EE);
MakeDword(0x4900F2);
MakeDword(0x4900F6);
MakeDword(0x4900FA);
MakeDword(0x4900FE);
MakeDword(0x490102);
MakeDword(0x490106);
MakeDword(0x49010A);
MakeDword(0x49010E);
MakeDword(0x490112);
MakeDword(0x490116);
MakeDword(0x49011A);
MakeDword(0x49011E);
MakeDword(0x490122);
MakeDword(0x490126);
MakeDword(0x49012A);
MakeDword(0x49012E);
MakeDword(0x490132);
MakeDword(0x490136);
MakeDword(0x49013A);
MakeDword(0x49013E);
MakeDword(0x490142);
MakeDword(0x490146);
MakeDword(0x49014A);
MakeDword(0x49014E);
MakeDword(0x490152);
MakeDword(0x490156);
MakeDword(0x49015A);
MakeDword(0x49015E);
MakeDword(0x48FF54);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x490162, 0x49017A);
MakeDword(0x48FF58);
MakeDword(0x48FF5C);
MakeDword(0x48FF60);
MakeDword(0x48FF64);
MakeDword(0x48FF68);
MakeDword(0x48FF6C);
MakeDword(0x48FF70);
MakeDword(0x48FF74);
MakeDword(0x48FF78);
MakeDword(0x48FF7C);
MakeComm(0x48FF80, "'+0'");
MakeDword(0x48FF80);
MakeComm(0x48FF84, "'+4'");
MakeDword(0x48FF84);
MakeComm(0x48FF88, "'+8'");
MakeDword(0x48FF88);
MakeComm(0x48FF8C, "'+C'");
MakeDword(0x48FF8C);
MakeComm(0x48FF90, "'+10'");
MakeDword(0x48FF90);
MakeComm(0x48FF94, "'+14'");
MakeDword(0x48FF94);
MakeComm(0x48FF98, "'+18'");
MakeDword(0x48FF98);
MakeComm(0x48FF9C, "'+1C'");
MakeDword(0x48FF9C);
MakeComm(0x48FFA0, "'+20'");
MakeDword(0x48FFA0);
MakeComm(0x48FFA4, "'+24'");
MakeDword(0x48FFA4);
MakeComm(0x48FFA8, "'+28'");
MakeDword(0x48FFA8);
MakeComm(0x48FFAC, "'+2C'");
MakeDword(0x48FFAC);
MakeComm(0x48FFB0, "'+30'");
MakeDword(0x48FFB0);
MakeComm(0x48FFB4, "'+34'");
MakeDword(0x48FFB4);
MakeComm(0x48FFB8, "'+38'");
MakeDword(0x48FFB8);
MakeComm(0x48FFBC, "'+3C'");
MakeDword(0x48FFBC);
MakeComm(0x48FFC0, "'+40'");
MakeDword(0x48FFC0);
MakeComm(0x48FFC4, "'+44'");
MakeDword(0x48FFC4);
MakeComm(0x48FFC8, "'+48'");
MakeDword(0x48FFC8);
MakeComm(0x48FFCC, "'+4C'");
MakeDword(0x48FFCC);
MakeComm(0x48FFD0, "'+50'");
MakeDword(0x48FFD0);
MakeComm(0x48FFD4, "'+54'");
MakeDword(0x48FFD4);
MakeComm(0x48FFD8, "'+58'");
MakeDword(0x48FFD8);
MakeComm(0x48FFDC, "'+5C'");
MakeDword(0x48FFDC);
MakeComm(0x48FFE0, "'+60'");
MakeDword(0x48FFE0);
MakeComm(0x48FFE4, "'+64'");
MakeDword(0x48FFE4);
MakeComm(0x48FFE8, "'+68'");
MakeDword(0x48FFE8);
MakeComm(0x48FFEC, "'+6C'");
MakeDword(0x48FFEC);
MakeComm(0x48FFF0, "'+70'");
MakeDword(0x48FFF0);
MakeComm(0x48FFF4, "'+74'");
MakeDword(0x48FFF4);
MakeComm(0x48FFF8, "'+78'");
MakeDword(0x48FFF8);
MakeComm(0x48FFFC, "'+7C'");
MakeDword(0x48FFFC);
MakeComm(0x490000, "'+80'");
MakeDword(0x490000);
MakeComm(0x490004, "'+84'");
MakeDword(0x490004);
MakeComm(0x490008, "'+88'");
MakeDword(0x490008);
MakeComm(0x49000C, "'+8C'");
MakeDword(0x49000C);
MakeComm(0x490010, "'+90'");
MakeDword(0x490010);
MakeComm(0x490014, "'+94'");
MakeDword(0x490014);
MakeComm(0x490018, "'+98'");
MakeDword(0x490018);
MakeComm(0x49001C, "'+9C'");
MakeDword(0x49001C);
MakeComm(0x490020, "'+A0'");
MakeDword(0x490020);
MakeComm(0x490024, "'+A4'");
MakeDword(0x490024);
MakeComm(0x490028, "'+A8'");
MakeDword(0x490028);
MakeComm(0x49002C, "'+AC'");
MakeDword(0x49002C);
MakeComm(0x490030, "'+B0'");
MakeDword(0x490030);
MakeComm(0x490034, "'+B4'");
MakeDword(0x490034);
MakeComm(0x490038, "'+B8'");
MakeDword(0x490038);
MakeComm(0x49003C, "'+BC'");
MakeDword(0x49003C);
MakeComm(0x490040, "'+C0'");
MakeDword(0x490040);
MakeComm(0x490044, "'+C4'");
MakeDword(0x490044);
MakeComm(0x490048, "'+C8'");
MakeDword(0x490048);
MakeComm(0x49004C, "'+CC'");
MakeDword(0x49004C);
MakeComm(0x490050, "'+D0'");
MakeDword(0x490050);
MakeComm(0x490054, "'+D4'");
MakeDword(0x490054);
MakeComm(0x490058, "'+D8'");
MakeDword(0x490058);
MakeComm(0x49005C, "'+DC'");
MakeDword(0x49005C);
MakeComm(0x490060, "'+E0'");
MakeDword(0x490060);
MakeComm(0x490064, "'+E4'");
MakeDword(0x490064);
MakeComm(0x490068, "'+E8'");
MakeDword(0x490068);
MakeComm(0x49006C, "'+EC'");
MakeDword(0x49006C);
MakeComm(0x490070, "'+F0'");
MakeDword(0x490070);
MakeComm(0x490074, "'+F4'");
MakeDword(0x490074);
MakeComm(0x490078, "'+F8'");
MakeDword(0x490078);
MakeComm(0x49007C, "'+FC'");
MakeDword(0x49007C);
MakeComm(0x490080, "'+100'");
MakeDword(0x490080);
MakeComm(0x490084, "'+104'");
MakeDword(0x490084);
MakeUnkn(0x49017C, 1);
MakeNameEx(0x49017C, "RTTI_49017C_Class_TTBCustomDockableWindow", 0);
MakeDword(0x49017C);
MakeUnkn(0x490180, 1);
MakeNameEx(0x490180, "", 0);
MakeByte(0x490180);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x490181, 0x490199);
MakeDword(0x490199);
MakeDword(0x49019D);
MakeWord(0x4901A1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4901A3, 0x4901AB);
MakeWord(0x4901AB);
MakeDword(0x4901AD);
MakeDword(0x4901B1);
MakeDword(0x4901B5);
MakeDword(0x4901B9);
MakeDword(0x4901BD);
MakeDword(0x4901C1);
MakeWord(0x4901C5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4901C7, 0x4901CE);
MakeDword(0x4901CE);
MakeDword(0x4901D2);
MakeDword(0x4901D6);
MakeDword(0x4901DA);
MakeDword(0x4901DE);
MakeDword(0x4901E2);
MakeWord(0x4901E6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4901E8, 0x4901EE);
MakeUnkn(0x4901F0, 1);
MakeNameEx(0x4901F0, "VMT_4901F0_TTBBasicBackground", 0);
MakeDword(0x4901F0);
MakeDword(0x4901F4);
MakeDword(0x4901F8);
MakeDword(0x4901FC);
MakeDword(0x490200);
MakeDword(0x490204);
MakeDword(0x490208);
MakeDword(0x49020C);
MakeDword(0x490210);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x490284, 0x490297);
MakeDword(0x490214);
MakeDword(0x490218);
MakeDword(0x49021C);
MakeDword(0x490220);
MakeDword(0x490224);
MakeDword(0x490228);
MakeDword(0x49022C);
MakeDword(0x490230);
MakeDword(0x490234);
MakeDword(0x490238);
MakeComm(0x49023C, "'+0'");
MakeDword(0x49023C);
MakeComm(0x490240, "'+4'");
MakeDword(0x490240);
MakeComm(0x490244, "'+8'");
MakeDword(0x490244);
MakeComm(0x490248, "'+C'");
MakeDword(0x490248);
MakeComm(0x49024C, "'+10'");
MakeDword(0x49024C);
MakeComm(0x490250, "'+14'");
MakeDword(0x490250);
MakeComm(0x490254, "'+18'");
MakeDword(0x490254);
MakeComm(0x490258, "'+1C'");
MakeDword(0x490258);
MakeComm(0x49025C, "'+20'");
MakeDword(0x49025C);
MakeComm(0x490260, "'+24'");
MakeDword(0x490260);
MakeComm(0x490264, "'+28'");
MakeDword(0x490264);
MakeComm(0x490268, "'+2C'");
MakeDword(0x490268);
MakeComm(0x49026C, "'+30'");
MakeDword(0x49026C);
MakeComm(0x490270, "'+34'");
MakeDword(0x490270);
MakeComm(0x490274, "'+38'");
MakeDword(0x490274);
MakeComm(0x490278, "'+3C'");
MakeDword(0x490278);
MakeComm(0x49027C, "'+40'");
MakeDword(0x49027C);
MakeComm(0x490280, "'+44'");
MakeDword(0x490280);
MakeUnkn(0x490298, 1);
MakeNameEx(0x490298, "RTTI_490298_Class_TTBBasicBackground", 0);
MakeDword(0x490298);
MakeUnkn(0x49029C, 1);
MakeNameEx(0x49029C, "", 0);
MakeByte(0x49029C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49029D, 0x4902B0);
MakeDword(0x4902B0);
MakeDword(0x4902B4);
MakeWord(0x4902B8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4902BA, 0x4902C2);
MakeWord(0x4902C2);
MakeCode(0x4902C4);
MakeFunction(0x4902C4, 0x4902CC);
MakeCode(0x4902CC);
MakeCode(0x49031C);
MakeComm(0x49032E, "'TForm.FFormStyle:TFormStyle'");
MakeCode(0x490348);
MakeCode(0x49036A);
MakeCode(0x49036E);
MakeCode(0x490378);
MakeFunction(0x4902CC, 0x490383);
MakeCode(0x490384);
MakeCode(0x49038B);
MakeCode(0x490393);
MakeCode(0x4903A4);
MakeFunction(0x490384, 0x4903A7);
MakeCode(0x4903A8);
MakeCode(0x4903B1);
MakeCode(0x4903C4);
MakeCode(0x4903C6);
MakeCode(0x4903E4);
MakeFunction(0x4903A8, 0x4903EA);
MakeCode(0x4903EC);
MakeComm(0x49043D, "'EInvalidOperation.Create'");
MakeCode(0x490447);
MakeCode(0x490454);
MakeCode(0x49045D);
MakeCode(0x490462);
MakeFunction(0x4903EC, 0x49046C);
MakeCode(0x49046C);
MakeCode(0x49048B);
MakeCode(0x4904B7);
MakeCode(0x4904D7);
MakeCode(0x490509);
MakeCode(0x49053F);
MakeCode(0x49057E);
MakeCode(0x490585);
MakeCode(0x49058B);
MakeCode(0x4905AF);
MakeComm(0x4905F1, "'TApplication.FHandle:HWND'");
MakeCode(0x490605);
MakeCode(0x490609);
MakeFunction(0x49046C, 0x490612);
MakeCode(0x49066C);
MakeCode(0x49069D);
MakeFunction(0x49066C, 0x4906A1);
MakeCode(0x4906A4);
MakeCode(0x4906AF);
MakeCode(0x4906B7);
MakeCode(0x4906C3);
MakeCode(0x4906C5);
MakeFunction(0x4906A4, 0x4906CB);
MakeCode(0x4906CC);
MakeCode(0x4906F3);
MakeFunction(0x4906CC, 0x4906F5);
MakeCode(0x4906F8);
MakeCode(0x49071C);
MakeFunction(0x4906F8, 0x49071E);
MakeCode(0x490720);
MakeFunction(0x490720, 0x49074B);
MakeCode(0x49074C);
MakeCode(0x490787);
MakeCode(0x4907A4);
MakeCode(0x4907AF);
MakeCode(0x4907D1);
MakeCode(0x4907E0);
MakeCode(0x4907F1);
MakeCode(0x490802);
MakeCode(0x490814);
MakeCode(0x490822);
MakeCode(0x49082F);
MakeCode(0x49083E);
MakeCode(0x490847);
MakeCode(0x49084C);
MakeFunction(0x49074C, 0x490858);
MakeUnkn(0x490858, 1);
MakeNameEx(0x490858, "TTBDock.Create", 0x20);
MakeComm(0x490858, "'constructor TTBDock.Create(AOwner:TComponent);'");
MakeCode(0x490858);
MakeCode(0x490866);
MakeComm(0x490873, "'TTBDock.FControlStyle:TControlStyle'");
MakeComm(0x490876, "'0x10001'");
MakeComm(0x49087C, "'0x4A'");
MakeComm(0x490886, "'TTBDock.FControlStyle:TControlStyle'");
MakeComm(0x490889, "'TTBDock.AllowDrag:Boolean'");
MakeComm(0x490890, "'TTBDock.BackgroundOnToolbars:Boolean'");
MakeComm(0x49089E, "'TList.Create'");
MakeComm(0x4908A3, "'TTBDock.?f288:TList'");
MakeComm(0x4908B0, "'TList.Create'");
MakeComm(0x4908B5, "'TTBDock.?f28C:TList'");
MakeCode(0x4908E5);
MakeFunction(0x490858, 0x4908EA);
MakeByte(0x4908EC);
MakeUnkn(0x4908EC, 1);
MakeNameEx(0x4908EC, "gvar_004908EC", 0);
MakeByte(0x4908F0);
MakeUnkn(0x4908F0, 1);
MakeNameEx(0x4908F0, "gvar_004908F0", 0);
MakeUnkn(0x4908F4, 1);
MakeNameEx(0x4908F4, "TTBDock.CreateParams", 0x20);
MakeComm(0x4908F4, "'procedure TTBDock.CreateParams(var Params:TCreateParams);'");
MakeCode(0x4908F4);
MakeComm(0x490903, "'TTBDock.FComponentState:TComponentState'");
MakeComm(0x490909, "'TCreateParams.WindowClass:TWndClass'");
MakeCode(0x49090D);
MakeFunction(0x4908F4, 0x490910);
MakeUnkn(0x490910, 1);
MakeNameEx(0x490910, "TTBDock.Destroy", 0x20);
MakeComm(0x490910, "'destructor TTBDock.Destroy;'");
MakeCode(0x490910);
MakeComm(0x49091B, "'TTBDock.Background:TTBBasicBackground'");
MakeComm(0x49092D, "'@AbstractError'");
MakeCode(0x490930);
MakeComm(0x49093C, "'TTBDock.?f28C:TList'");
MakeComm(0x490947, "'TTBDock.?f288:TList'");
MakeCode(0x49095D);
MakeFunction(0x490910, 0x490960);
MakeUnkn(0x490960, 1);
MakeNameEx(0x490960, "TTBDock.SetParent", 0x20);
MakeComm(0x490960, "'procedure TTBDock.SetParent(AParent:TWinControl);'");
MakeCode(0x490960);
MakeCode(0x49099B);
MakeComm(0x4909B2, "'EInvalidOperation.Create'");
MakeCode(0x4909BC);
MakeCode(0x4909C5);
MakeCode(0x4909D2);
MakeCode(0x4909DB);
MakeCode(0x4909E0);
MakeFunction(0x490960, 0x4909E7);
MakeCode(0x4909E8);
MakeFunction(0x4909E8, 0x4909EF);
MakeCode(0x4909F0);
MakeFunction(0x4909F0, 0x490A0E);
MakeCode(0x490A10);
MakeCode(0x490A29);
MakeCode(0x490A47);
MakeCode(0x490A4B);
MakeFunction(0x490A10, 0x490A52);
MakeCode(0x490A54);
MakeCode(0x490A65);
MakeCode(0x490A68);
MakeFunction(0x490A54, 0x490A6B);
MakeCode(0x490A6C);
MakeCode(0x490AA0);
MakeCode(0x490AE6);
MakeCode(0x490AE9);
MakeCode(0x490AF3);
MakeCode(0x490AF7);
MakeFunction(0x490A6C, 0x490B03);
MakeCode(0x490B04);
MakeCode(0x490B31);
MakeCode(0x490B6E);
MakeCode(0x490B72);
MakeFunction(0x490B04, 0x490B7E);
MakeCode(0x490B80);
MakeCode(0x490BAF);
MakeCode(0x490BD3);
MakeCode(0x490BD7);
MakeFunction(0x490B80, 0x490BE2);
MakeCode(0x490BE4);
MakeCode(0x490C02);
MakeCode(0x490C1D);
MakeCode(0x490C23);
MakeCode(0x490C29);
MakeCode(0x490C2D);
MakeFunction(0x490BE4, 0x490C35);
MakeCode(0x490C38);
MakeCode(0x490C53);
MakeCode(0x490C67);
MakeCode(0x490C82);
MakeCode(0x490C99);
MakeFunction(0x490C38, 0x490C9D);
MakeUnkn(0x490CA0, 1);
MakeNameEx(0x490CA0, "TTBDock.AlignControls", 0x20);
MakeComm(0x490CA0, "'procedure TTBDock.AlignControls(AControl:TControl; var Rect:TRect);'");
MakeCode(0x490CA0);
MakeFunction(0x490CA0, 0x490CA6);
MakeCode(0x490CA8);
MakeCode(0x490CCA);
MakeFunction(0x490CA8, 0x490CCF);
MakeUnkn(0x490CD0, 1);
MakeNameEx(0x490CD0, "RTTI_490CD0_DynArray_.9", 0);
MakeDword(0x490CD0);
MakeUnkn(0x490CD4, 1);
MakeNameEx(0x490CD4, "", 0);
MakeByte(0x490CD4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x490CD5, 0x490CD8);
MakeDword(0x490CD8);
MakeDword(0x490CDC);
MakeDword(0x490CE0);
MakeDword(0x490CE4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x490CE8, 0x490CF0);
MakeCode(0x490CF0);
MakeCode(0x490D00);
MakeCode(0x490D16);
MakeCode(0x490D1A);
MakeCode(0x490D1D);
MakeFunction(0x490CF0, 0x490D21);
MakeCode(0x490D24);
MakeCode(0x490D43);
MakeCode(0x490D6B);
MakeCode(0x490D6F);
MakeCode(0x490D7D);
MakeCode(0x490DAA);
MakeCode(0x490DC3);
MakeCode(0x490DC9);
MakeFunction(0x490D24, 0x490DD2);
MakeCode(0x490DD4);
MakeCode(0x490DDD);
MakeCode(0x490DEF);
MakeCode(0x490DF4);
MakeCode(0x490E04);
MakeFunction(0x490DD4, 0x490E0B);
MakeCode(0x490E0C);
MakeComm(0x490E2E, "'TTBDock.?f278:dword'");
MakeComm(0x490E3A, "'TTBDock.FComponentState:TComponentState'");
MakeCode(0x490E40);
MakeComm(0x490E43, "'TTBDock.?f27C:byte'");
MakeCode(0x490E4F);
MakeComm(0x490E57, "'TTBDock.?f278:dword'");
MakeComm(0x490E6E, "'TTBDock.Position:TTBDockPosition'");
MakeComm(0x490E8E, "'TTBDock.FixAlign:Boolean'");
MakeComm(0x490E9B, "'TTBDock.FComponentState:TComponentState'");
MakeCode(0x490EA8);
MakeComm(0x490EB1, "'TTBDock.Width:Integer'");
MakeCode(0x490EC1);
MakeComm(0x490EC4, "'TTBDock.Height:Integer'");
MakeCode(0x490ED2);
MakeCode(0x490EDC);
MakeComm(0x490EDF, "'TTBDock.Width:Integer'");
MakeCode(0x490EF9);
MakeComm(0x490EFC, "'TTBDock.Height:Integer'");
MakeCode(0x490F16);
MakeComm(0x490F19, "'TTBDock.?f288:TList'");
MakeComm(0x490F1F, "'TList.FCount:Integer'");
MakeCode(0x490F2B);
MakeComm(0x490F2E, "'TTBDock.?f288:TList'");
MakeComm(0x490F4B, "'TTBDock.?f288:TList'");
MakeComm(0x490F5C, "'TTBDock.?f28C:TList'");
MakeCode(0x490F6A);
MakeCode(0x490F73);
MakeComm(0x490F76, "'TTBDock.LimitToOneRow:Boolean'");
MakeComm(0x490F82, "'TTBDock.?f288:TList'");
MakeComm(0x490F88, "'TList.FCount:Integer'");
MakeCode(0x490F9B);
MakeComm(0x490F9E, "'TTBDock.?f288:TList'");
MakeCode(0x490FC2);
MakeComm(0x490FC9, "'TList.Create'");
MakeComm(0x490FD4, "'TTBDock.?f288:TList'");
MakeComm(0x490FDA, "'TList.FCount:Integer'");
MakeComm(0x490FE8, "'TList.FCount:Integer'");
MakeCode(0x490FFB);
MakeComm(0x490FFE, "'TTBDock.?f288:TList'");
MakeCode(0x491021);
MakeCode(0x491072);
MakeComm(0x49107A, "'TTBDock.?f28C:TList'");
MakeComm(0x491095, "'TList.FCount:Integer'");
MakeComm(0x4910B2, "'TList.FCount:Integer'");
MakeCode(0x4910C9);
MakeCode(0x491113);
MakeCode(0x491123);
MakeCode(0x491141);
MakeCode(0x491146);
MakeCode(0x491157);
MakeComm(0x49115A, "'TList.FCount:Integer'");
MakeCode(0x491171);
MakeComm(0x4911AA, "'TTBDock.LimitToOneRow:Boolean'");
MakeCode(0x4911B3);
MakeCode(0x4911C9);
MakeComm(0x4911CC, "'TList.FCount:Integer'");
MakeCode(0x4911DA);
MakeComm(0x4911F1, "'TList.FCount:Integer'");
MakeCode(0x4911FC);
MakeCode(0x49121A);
MakeCode(0x491231);
MakeCode(0x491235);
MakeCode(0x49123A);
MakeCode(0x491240);
MakeCode(0x49124C);
MakeCode(0x49125B);
MakeCode(0x491279);
MakeComm(0x491280, "'TList.FCount:Integer'");
MakeCode(0x491293);
MakeCode(0x4912AB);
MakeCode(0x4912B3);
MakeComm(0x4912BC, "'TList.FCount:Integer'");
MakeCode(0x4912CF);
MakeCode(0x4912E8);
MakeCode(0x4912F9);
MakeCode(0x491301);
MakeCode(0x491306);
MakeCode(0x491309);
MakeCode(0x491315);
MakeCode(0x491326);
MakeCode(0x491334);
MakeCode(0x49133A);
MakeComm(0x49134C, "'TList.FCount:Integer'");
MakeCode(0x491363);
MakeCode(0x4913A9);
MakeCode(0x4913B6);
MakeCode(0x491445);
MakeCode(0x491467);
MakeCode(0x491477);
MakeComm(0x491488, "'TTBDock.LimitToOneRow:Boolean'");
MakeComm(0x491497, "'TList.FCount:Integer'");
MakeCode(0x4914A3);
MakeCode(0x4914BC);
MakeCode(0x4914D3);
MakeCode(0x4914D9);
MakeCode(0x4914DE);
MakeCode(0x4914E4);
MakeCode(0x4914F0);
MakeComm(0x491510, "'TList.FCount:Integer'");
MakeCode(0x491527);
MakeCode(0x491568);
MakeCode(0x49156C);
MakeCode(0x491575);
MakeCode(0x491580);
MakeCode(0x491588);
MakeCode(0x4915AA);
MakeCode(0x4915AF);
MakeCode(0x4915C6);
MakeCode(0x4915F6);
MakeCode(0x491602);
MakeCode(0x491672);
MakeComm(0x491676, "'TList.FCount:Integer'");
MakeCode(0x49169D);
MakeComm(0x4916AF, "'TList.FCount:Integer'");
MakeCode(0x4916C6);
MakeCode(0x491705);
MakeCode(0x491723);
MakeCode(0x491732);
MakeCode(0x491755);
MakeCode(0x49175A);
MakeCode(0x49177A);
MakeCode(0x49179E);
MakeCode(0x4917A4);
MakeCode(0x4917B0);
MakeComm(0x4917BD, "'TList.FCount:Integer'");
MakeCode(0x4917C9);
MakeCode(0x491800);
MakeCode(0x491826);
MakeCode(0x491836);
MakeCode(0x49183C);
MakeCode(0x491845);
MakeComm(0x49184D, "'TList.FCount:Integer'");
MakeCode(0x491864);
MakeCode(0x49189F);
MakeCode(0x4918C8);
MakeCode(0x49190F);
MakeComm(0x491922, "'TList.FCount:Integer'");
MakeCode(0x49192E);
MakeCode(0x491961);
MakeCode(0x491967);
MakeCode(0x491991);
MakeCode(0x4919B1);
MakeCode(0x4919BD);
MakeCode(0x4919CC);
MakeComm(0x4919CF, "'TList.FCount:Integer'");
MakeCode(0x4919E6);
MakeComm(0x491A23, "'TTBDock.?f262:byte'");
MakeComm(0x491A60, "'TTBDock.?f288:TList'");
MakeCode(0x491A6E);
MakeCode(0x491A7A);
MakeCode(0x491A95);
MakeComm(0x491A9D, "'TList.FCount:Integer'");
MakeCode(0x491AB4);
MakeCode(0x491B0B);
MakeCode(0x491B59);
MakeCode(0x491BAD);
MakeCode(0x491BBB);
MakeCode(0x491BC6);
MakeCode(0x491BC9);
MakeCode(0x491BDA);
MakeCode(0x491BE6);
MakeCode(0x491BF0);
MakeComm(0x491BF3, "'TList.FCount:Integer'");
MakeCode(0x491C0A);
MakeCode(0x491C61);
MakeCode(0x491C8A);
MakeCode(0x491CAB);
MakeCode(0x491CBF);
MakeCode(0x491CC8);
MakeCode(0x491CD5);
MakeCode(0x491CDF);
MakeCode(0x491CE4);
MakeCode(0x491CE6);
MakeCode(0x491CF2);
MakeCode(0x491D04);
MakeComm(0x491D0D, "'TTBDock.?f284:dword'");
MakeComm(0x491D19, "'TTBDock.Width:Integer'");
MakeCode(0x491D26);
MakeComm(0x491D29, "'TTBDock.Height:Integer'");
MakeComm(0x491D2F, "'TTBDock.?f280:dword'");
MakeCode(0x491D40);
MakeCode(0x491D4D);
MakeComm(0x491D50, "'TTBDock.?f278:dword'");
MakeComm(0x491D59, "'TTBDock.?f27C:byte'");
MakeComm(0x491D63, "'TTBDock.?f262:byte'");
MakeCode(0x491D73);
MakeCode(0x491D78);
MakeCode(0x491D7A);
MakeCode(0x491D87);
MakeCode(0x491D96);
MakeCode(0x491D9B);
MakeFunction(0x490E0C, 0x491DA4);
MakeCode(0x491DA4);
MakeCode(0x491DBA);
MakeCode(0x491DE3);
MakeFunction(0x491DA4, 0x491DE7);
MakeCode(0x491DE8);
MakeCode(0x491E1D);
MakeCode(0x491E2F);
MakeFunction(0x491DE8, 0x491E3E);
MakeCode(0x491E40);
MakeCode(0x491E70);
MakeCode(0x491E74);
MakeCode(0x491E76);
MakeCode(0x491E95);
MakeCode(0x491EA7);
MakeCode(0x491ED0);
MakeFunction(0x491E40, 0x491ED6);
MakeUnkn(0x491ED8, 1);
MakeNameEx(0x491ED8, "TTBDock.Loaded", 0x20);
MakeComm(0x491ED8, "'procedure TTBDock.Loaded;'");
MakeCode(0x491ED8);
MakeFunction(0x491ED8, 0x491EEB);
MakeUnkn(0x491EEC, 1);
MakeNameEx(0x491EEC, "TTBDock.Notification", 0x20);
MakeComm(0x491EEC, "'procedure TTBDock.Notification(AComponent:TComponent; Operation:TOperation);'");
MakeCode(0x491EEC);
MakeComm(0x491F05, "'TTBDock.Background:TTBBasicBackground'");
MakeCode(0x491F18);
MakeComm(0x491F2B, "'TTBDock.?f288:TList'");
MakeComm(0x491F38, "'TTBDock.?f28C:TList'");
MakeCode(0x491F43);
MakeFunction(0x491EEC, 0x491F47);
MakeUnkn(0x491F48, 1);
MakeNameEx(0x491F48, "TTBDock.sub_0044E704", 0x20);
MakeComm(0x491F48, "'procedure TTBDock.sub_0044E704;'");
MakeCode(0x491F48);
MakeComm(0x491F4F, "'TTBDock.sub_00492598'");
MakeComm(0x491F59, "'TTBDock.Background:TTBBasicBackground'");
MakeComm(0x491F62, "'TTBDock.Background:TTBBasicBackground'");
MakeComm(0x491F6A, "'@AbstractError'");
MakeCode(0x491F6F);
MakeFunction(0x491F48, 0x491F73);
MakeUnkn(0x491F74, 1);
MakeNameEx(0x491F74, "TTBDock.WMEraseBkgnd", 0x20);
MakeComm(0x491F74, "'procedure TTBDock.WMEraseBkgnd(Message:TWMEraseBkgnd);'");
MakeCode(0x491F74);
MakeComm(0x491F82, "'TTBDock.sub_00492598'");
MakeComm(0x491F98, "'TWinControl.GetClientRect'");
MakeComm(0x491FD6, "'TTBDock.FParent:TWinControl'");
MakeComm(0x491FE5, "'TTBDock.Left:Integer'");
MakeComm(0x491FF4, "'TTBDock.Top:Integer'");
MakeComm(0x49202E, "'TTBDock.sub_004925BC'");
MakeCode(0x492047);
MakeCode(0x492050);
MakeFunction(0x491F74, 0x492057);
MakeCode(0x492058);
MakeComm(0x492065, "'TTBDock.FComponentState:TComponentState'");
MakeComm(0x492071, "'TWinControl.GetClientRect'");
MakeComm(0x492074, "'TTBDock........................FCanvas:TCanvas'");
MakeComm(0x49207C, "'TCanvas.Pen:TPen'");
MakeComm(0x492089, "'TCanvas.Pen:TPen'");
MakeComm(0x492093, "'TCanvas.Brush:TBrush'");
MakeComm(0x4920B6, "'TCanvas.Pen:TPen'");
MakeCode(0x4920BE);
MakeFunction(0x492058, 0x4920C3);
MakeUnkn(0x4920C4, 1);
MakeNameEx(0x4920C4, "TTBDock.WMMove", 0x20);
MakeComm(0x4920C4, "'procedure TTBDock.WMMove(var Message:TWMMove);'");
MakeCode(0x4920C4);
MakeComm(0x4920D2, "'TTBDock.sub_00492598'");
MakeCode(0x4920E3);
MakeFunction(0x4920C4, 0x4920E5);
MakeCode(0x4920E8);
MakeCode(0x4920FD);
MakeCode(0x49210F);
MakeCode(0x492120);
MakeCode(0x492132);
MakeFunction(0x4920E8, 0x492134);
MakeUnkn(0x492134, 1);
MakeNameEx(0x492134, "TTBDock.WMNCCalcSize", 0x20);
MakeComm(0x492134, "'procedure TTBDock.WMNCCalcSize(Message:TWMNCCalcSize);'");
MakeCode(0x492134);
MakeFunction(0x492134, 0x492156);
MakeCode(0x492158);
MakeFunction(0x492158, 0x49217B);
MakeCode(0x49217C);
MakeCode(0x4921DE);
MakeCode(0x4921E1);
MakeCode(0x492206);
MakeComm(0x492213, "'0x0'");
MakeCode(0x49223F);
MakeCode(0x492295);
MakeCode(0x4922B9);
MakeCode(0x4922E8);
MakeCode(0x49230D);
MakeCode(0x492323);
MakeCode(0x492397);
MakeCode(0x4923BE);
MakeCode(0x4923CB);
MakeCode(0x4923E3);
MakeCode(0x4923E4);
MakeCode(0x4923E9);
MakeFunction(0x49217C, 0x4923F4);
MakeByte(0x4923F4);
MakeUnkn(0x4923F4, 1);
MakeNameEx(0x4923F4, "gvar_004923F4", 0);
MakeUnkn(0x4923F8, 1);
MakeNameEx(0x4923F8, "TTBDock.WMNCPaint", 0x20);
MakeComm(0x4923F8, "'procedure TTBDock.WMNCPaint(Message:TMessage);'");
MakeCode(0x4923F8);
MakeFunction(0x4923F8, 0x492406);
MakeUnkn(0x492418, 1);
MakeNameEx(0x492418, "TTBDock.sub_00492418", 0x20);
MakeComm(0x492418, "'procedure TTBDock.sub_00492418(?:?);'");
MakeCode(0x492418);
MakeFunction(0x492418, 0x492435);
MakeUnkn(0x492438, 1);
MakeNameEx(0x492438, "TTBDock.WMPrintClient", 0x20);
MakeComm(0x492438, "'procedure TTBDock.WMPrintClient(Message:TWMPrintClient);'");
MakeCode(0x492438);
MakeFunction(0x492438, 0x492446);
MakeUnkn(0x492448, 1);
MakeNameEx(0x492448, "TTBDock.CMSysColorChange", 0x20);
MakeComm(0x492448, "'procedure TTBDock.CMSysColorChange(var Message:TMessage);'");
MakeCode(0x492448);
MakeComm(0x492452, "'TTBDock.Background:TTBBasicBackground'");
MakeComm(0x49245E, "'@AbstractError'");
MakeCode(0x492461);
MakeFunction(0x492448, 0x492463);
MakeCode(0x492464);
MakeCode(0x492482);
MakeCode(0x4924A2);
MakeCode(0x4924D8);
MakeCode(0x4924DC);
MakeFunction(0x492464, 0x4924E2);
MakeUnkn(0x4924E4, 1);
MakeNameEx(0x4924E4, "TTBDock.WMSysCommand", 0x20);
MakeComm(0x4924E4, "'procedure TTBDock.WMSysCommand(Message:TWMSysCommand);'");
MakeCode(0x4924E4);
MakeFunction(0x4924E4, 0x4924FB);
MakeUnkn(0x4924FC, 1);
MakeNameEx(0x4924FC, "TTBDock.CMDialogKey", 0x20);
MakeComm(0x4924FC, "'procedure TTBDock.CMDialogKey(Message:TWMKey);'");
MakeCode(0x4924FC);
MakeCode(0x49251A);
MakeFunction(0x4924FC, 0x49251D);
MakeUnkn(0x492520, 1);
MakeNameEx(0x492520, "TTBDock.CMDialogChar", 0x20);
MakeComm(0x492520, "'procedure TTBDock.CMDialogChar(Message:TWMKey);'");
MakeCode(0x492520);
MakeCode(0x49253E);
MakeFunction(0x492520, 0x492541);
MakeUnkn(0x492544, 1);
MakeNameEx(0x492544, "TTBDock.SetAllowDrag", 0x20);
MakeComm(0x492544, "'procedure TTBDock.SetAllowDrag(Value:Boolean);'");
MakeCode(0x492544);
MakeComm(0x492549, "'TTBDock.AllowDrag:Boolean'");
MakeComm(0x492551, "'TTBDock.AllowDrag:Boolean'");
MakeCode(0x492568);
MakeCode(0x49258E);
MakeCode(0x492592);
MakeFunction(0x492544, 0x492596);
MakeCode(0x492598);
MakeComm(0x49259C, "'TTBDock.Background:TTBBasicBackground'");
MakeComm(0x4925AA, "'@AbstractError'");
MakeCode(0x4925B1);
MakeCode(0x4925B6);
MakeFunction(0x492598, 0x4925BB);
MakeCode(0x4925BC);
MakeComm(0x4925BD, "'TTBDock.Background:TTBBasicBackground'");
MakeComm(0x4925C5, "'@AbstractError'");
MakeFunction(0x4925BC, 0x4925CA);
MakeCode(0x4925CC);
MakeComm(0x4925D6, "'TWinControl.Invalidate'");
MakeComm(0x4925DC, "'TTBDock.?f288:TList'");
MakeComm(0x4925E2, "'TList.FCount:Integer'");
MakeCode(0x4925ED);
MakeComm(0x4925EF, "'TTBDock.?f288:TList'");
MakeCode(0x492610);
MakeCode(0x492614);
MakeFunction(0x4925CC, 0x492619);
MakeUnkn(0x49261C, 1);
MakeNameEx(0x49261C, "TTBDock.SetBackground", 0x20);
MakeComm(0x49261C, "'procedure TTBDock.SetBackground(Value:TTBBasicBackground);'");
MakeCode(0x49261C);
MakeComm(0x492622, "'TTBDock.Background:TTBBasicBackground'");
MakeComm(0x492638, "'@AbstractError'");
MakeComm(0x49263B, "'TTBDock.Background:TTBBasicBackground'");
MakeCode(0x49263B);
MakeComm(0x492658, "'@AbstractError'");
MakeCode(0x49265B);
MakeCode(0x492662);
MakeFunction(0x49261C, 0x492665);
MakeUnkn(0x492670, 1);
MakeNameEx(0x492670, "TTBDock.SetBackgroundOnToolbars", 0x20);
MakeComm(0x492670, "'procedure TTBDock.SetBackgroundOnToolbars(Value:Boolean);'");
MakeCode(0x492670);
MakeComm(0x492670, "'TTBDock.BackgroundOnToolbars:Boolean'");
MakeComm(0x492678, "'TTBDock.BackgroundOnToolbars:Boolean'");
MakeFunction(0x492670, 0x492684);
MakeUnkn(0x492684, 1);
MakeNameEx(0x492684, "TTBDock.SetBoundLines", 0x20);
MakeComm(0x492684, "'procedure TTBDock.SetBoundLines(Value:TTBDockBoundLines);'");
MakeCode(0x492684);
MakeComm(0x492691, "'TTBDock.BoundLines:TTBDockBoundLines'");
MakeComm(0x49269D, "'TTBDock.BoundLines:TTBDockBoundLines'");
MakeComm(0x4926A7, "'TTBDock.BoundLines:TTBDockBoundLines'");
MakeCode(0x4926B3);
MakeCode(0x4926B8);
MakeCode(0x4926BD);
MakeComm(0x4926C2, "'TTBDock.?f280:dword'");
MakeCode(0x4926C2);
MakeComm(0x4926C8, "'TTBDock.?f284:dword'");
MakeCode(0x4926D5);
MakeFunction(0x492684, 0x4926DA);
MakeUnkn(0x4926DC, 1);
MakeNameEx(0x4926DC, "TTBDock.SetFixAlign", 0x20);
MakeComm(0x4926DC, "'procedure TTBDock.SetFixAlign(Value:Boolean);'");
MakeCode(0x4926DC);
MakeComm(0x4926DC, "'TTBDock.FixAlign:Boolean'");
MakeComm(0x4926E4, "'TTBDock.FixAlign:Boolean'");
MakeFunction(0x4926DC, 0x4926F0);
MakeUnkn(0x4926F0, 1);
MakeNameEx(0x4926F0, "TTBDock.SetPosition", 0x20);
MakeComm(0x4926F0, "'procedure TTBDock.SetPosition(Value:TTBDockPosition);'");
MakeCode(0x4926F0);
MakeComm(0x492709, "'TTBDock.Position:TTBDockPosition'");
MakeComm(0x492733, "'EInvalidOperation.Create'");
MakeCode(0x49273D);
MakeComm(0x49273F, "'TTBDock.Position:TTBDockPosition'");
MakeCode(0x492755);
MakeCode(0x492760);
MakeCode(0x49276B);
MakeCode(0x492776);
MakeCode(0x49277F);
MakeCode(0x49278C);
MakeCode(0x492795);
MakeCode(0x49279A);
MakeFunction(0x4926F0, 0x4927A1);
MakeUnkn(0x4927A4, 1);
MakeNameEx(0x4927A4, "TTBFloatingWindowParent.CreateParams", 0x20);
MakeComm(0x4927A4, "'procedure TTBFloatingWindowParent.CreateParams(var Params:TCreateParams);'");
MakeCode(0x4927A4);
MakeComm(0x4927B3, "'TTBFloatingWindowParent.FComponentState:TComponentState'");
MakeComm(0x4927B9, "'TCreateParams.WindowClass:TWndClass'");
MakeComm(0x4927BD, "'TTBFloatingWindowParent.FComponentState:TComponentState'");
MakeCode(0x4927BD);
MakeComm(0x4927C3, "'TTBFloatingWindowParent..:dword'");
MakeComm(0x4927DC, "'TCreateParams.Style:DWORD'");
MakeComm(0x4927E1, "'TCreateParams.Style:DWORD'");
MakeCode(0x4927E1);
MakeComm(0x4927E9, "'TTBFloatingWindowParent..:dword'");
MakeComm(0x4927FD, "'TCreateParams.Style:DWORD'");
MakeComm(0x492800, "'TCreateParams.ExStyle:DWORD'");
MakeCode(0x492800);
MakeFunction(0x4927A4, 0x49280A);
MakeUnkn(0x49280C, 1);
MakeNameEx(0x49280C, "TTBFloatingWindowParent.Notification", 0x20);
MakeComm(0x49280C, "'procedure TTBFloatingWindowParent.Notification(AComponent:TComponent; Operation:TOperation);'");
MakeCode(0x49280C);
MakeComm(0x492825, "'TTBFloatingWindowParent.?f368:dword'");
MakeComm(0x49282F, "'TTBFloatingWindowParent.?f368:dword'");
MakeCode(0x492835);
MakeFunction(0x49280C, 0x492839);
MakeUnkn(0x49283C, 1);
MakeNameEx(0x49283C, "TTBFloatingWindowParent.AlignControls", 0x20);
MakeComm(0x49283C, "'procedure TTBFloatingWindowParent.AlignControls(AControl:TControl; var Rect:TRect);'");
MakeCode(0x49283C);
MakeFunction(0x49283C, 0x49283D);
MakeUnkn(0x492840, 1);
MakeNameEx(0x492840, "TTBFloatingWindowParent.WMGetMinMaxInfo", 0x20);
MakeComm(0x492840, "'procedure TTBFloatingWindowParent.WMGetMinMaxInfo(Message:TWMGetMinMaxInfo);'");
MakeCode(0x492840);
MakeFunction(0x492840, 0x49286F);
MakeUnkn(0x492870, 1);
MakeNameEx(0x492870, "TTBFloatingWindowParent.CMShowingChanged", 0x20);
MakeComm(0x492870, "'procedure TTBFloatingWindowParent.CMShowingChanged(var Message:TMessage);'");
MakeCode(0x492870);
MakeComm(0x492870, "'TTBFloatingWindowParent.FShowing:Boolean'");
MakeComm(0x492879, "'TTBFloatingWindowParent.?f36C:byte'");
MakeCode(0x492882);
MakeCode(0x492886);
MakeCode(0x492888);
MakeComm(0x49289D, "'TTBFloatingWindowParent.FHandle:HWND'");
MakeFunction(0x492870, 0x4928AA);
MakeUnkn(0x4928AC, 1);
MakeNameEx(0x4928AC, "TTBFloatingWindowParent.CMDialogKey", 0x20);
MakeComm(0x4928AC, "'procedure TTBFloatingWindowParent.CMDialogKey(Message:TCMDialogKey);'");
MakeCode(0x4928AC);
MakeComm(0x4928C1, "'0x0'");
MakeComm(0x4928CC, "'TTBFloatingWindowParent.?f368:dword'");
MakeComm(0x4928D5, "'TTBFloatingWindowParent.?f368:dword'");
MakeCode(0x4928ED);
MakeFunction(0x4928AC, 0x4928F9);
MakeByte(0x4928FC);
MakeUnkn(0x4928FC, 1);
MakeNameEx(0x4928FC, "gvar_004928FC", 0);
MakeUnkn(0x492900, 1);
MakeNameEx(0x492900, "TTBFloatingWindowParent.CMTextChanged", 0x20);
MakeComm(0x492900, "'procedure TTBFloatingWindowParent.CMTextChanged(var Message:TMessage);'");
MakeCode(0x492900);
MakeComm(0x49290A, "'0x2'");
MakeFunction(0x492900, 0x49291A);
MakeByte(0x49291C);
MakeUnkn(0x49291C, 1);
MakeNameEx(0x49291C, "gvar_0049291C", 0);
MakeCode(0x492920);
MakeCode(0x492959);
MakeCode(0x49297C);
MakeFunction(0x492920, 0x492985);
MakeCode(0x492988);
MakeFunction(0x492988, 0x4929AE);
MakeCode(0x4929B0);
MakeFunction(0x4929B0, 0x4929EC);
MakeUnkn(0x4929EC, 1);
MakeNameEx(0x4929EC, "TTBFloatingWindowParent.WMNCCalcSize", 0x20);
MakeComm(0x4929EC, "'procedure TTBFloatingWindowParent.WMNCCalcSize(Message:TWMNCCalcSize);'");
MakeCode(0x4929EC);
MakeFunction(0x4929EC, 0x492A05);
MakeUnkn(0x492A08, 1);
MakeNameEx(0x492A08, "TTBFloatingWindowParent.WMNCPaint", 0x20);
MakeComm(0x492A08, "'procedure TTBFloatingWindowParent.WMNCPaint(Message:TWMNCPaint);'");
MakeCode(0x492A08);
MakeComm(0x492A0F, "'0x7'");
MakeComm(0x492A21, "'TTBFloatingWindowParent.sub_0049301C'");
MakeFunction(0x492A08, 0x492A28);
MakeByte(0x492A28);
MakeUnkn(0x492A28, 1);
MakeNameEx(0x492A28, "gvar_00492A28", 0);
MakeCode(0x492A2C);
MakeComm(0x492A31, "'0x7'");
MakeFunction(0x492A2C, 0x492A4A);
MakeByte(0x492A4C);
MakeUnkn(0x492A4C, 1);
MakeNameEx(0x492A4C, "gvar_00492A4C", 0);
MakeUnkn(0x492A50, 1);
MakeNameEx(0x492A50, "TTBFloatingWindowParent.sub_00492A50", 0x20);
MakeComm(0x492A50, "'procedure TTBFloatingWindowParent.sub_00492A50(?:?);'");
MakeCode(0x492A50);
MakeFunction(0x492A50, 0x492A6D);
MakeUnkn(0x492A70, 1);
MakeNameEx(0x492A70, "TTBFloatingWindowParent.WMPrintClient", 0x20);
MakeComm(0x492A70, "'procedure TTBFloatingWindowParent.WMPrintClient(Message:TWMPrintClient);'");
MakeCode(0x492A70);
MakeFunction(0x492A70, 0x492A7E);
MakeUnkn(0x492A80, 1);
MakeNameEx(0x492A80, "TTBFloatingWindowParent.WMNCHitTest", 0x20);
MakeComm(0x492A80, "'procedure TTBFloatingWindowParent.WMNCHitTest(Message:TWMNCHitTest);'");
MakeCode(0x492A80);
MakeComm(0x492AEB, "'TTBFloatingWindowParent..:dword'");
MakeComm(0x492B20, "'TTBFloatingWindowParent..:dword'");
MakeCode(0x492B5E);
MakeComm(0x492B6A, "'TTBFloatingWindowParent..:dword'");
MakeCode(0x492B6A);
MakeComm(0x492B8B, "'TTBFloatingWindowParent..:dword'");
MakeComm(0x492BB4, "'TTBFloatingWindowParent.Height:Integer'");
MakeCode(0x492BB4);
MakeCode(0x492BD4);
MakeComm(0x492BED, "'TTBFloatingWindowParent.Width:Integer'");
MakeCode(0x492BED);
MakeCode(0x492C14);
MakeComm(0x492C46, "'TTBFloatingWindowParent.Height:Integer'");
MakeCode(0x492C46);
MakeComm(0x492C5F, "'TTBFloatingWindowParent.Width:Integer'");
MakeCode(0x492C5F);
MakeComm(0x492C8D, "'TTBFloatingWindowParent.Height:Integer'");
MakeCode(0x492C8D);
MakeCode(0x492C9F);
MakeComm(0x492CC4, "'TTBFloatingWindowParent.Width:Integer'");
MakeCode(0x492CC4);
MakeComm(0x492CD6, "'TTBFloatingWindowParent.Height:Integer'");
MakeCode(0x492CD6);
MakeComm(0x492D01, "'TTBFloatingWindowParent.Width:Integer'");
MakeCode(0x492D01);
MakeCode(0x492D11);
MakeFunction(0x492A80, 0x492D18);
MakeUnkn(0x492D38, 1);
MakeNameEx(0x492D38, "TTBFloatingWindowParent.WMNCLButtonDown", 0x20);
MakeComm(0x492D38, "'procedure TTBFloatingWindowParent.WMNCLButtonDown(Message:TWMNCLButtonDown);'");
MakeCode(0x492D38);
MakeComm(0x492D71, "'TTBFloatingWindowParent..:dword'");
MakeComm(0x492D83, "'TTBFloatingWindowParent..:dword'");
MakeComm(0x492D93, "'TTBFloatingWindowParent..:dword'");
MakeCode(0x492D93);
MakeCode(0x492DB0);
MakeComm(0x492DFD, "'TTBFloatingWindowParent..:dword'");
MakeCode(0x492E0A);
MakeCode(0x492E13);
MakeFunction(0x492D38, 0x492E19);
MakeUnkn(0x492E1C, 1);
MakeNameEx(0x492E1C, "TTBFloatingWindowParent.WMNCLButtonDblClk", 0x20);
MakeComm(0x492E1C, "'procedure TTBFloatingWindowParent.WMNCLButtonDblClk(?:?);'");
MakeCode(0x492E1C);
MakeComm(0x492E25, "'TTBFloatingWindowParent..:dword'");
MakeFunction(0x492E1C, 0x492E31);
MakeUnkn(0x492E34, 1);
MakeNameEx(0x492E34, "TTBFloatingWindowParent.WMNCRButtonUp", 0x20);
MakeComm(0x492E34, "'procedure TTBFloatingWindowParent.WMNCRButtonUp(?:?);'");
MakeCode(0x492E34);
MakeComm(0x492E3C, "'TTBFloatingWindowParent..:dword'");
MakeFunction(0x492E34, 0x492E48);
MakeUnkn(0x492E48, 1);
MakeNameEx(0x492E48, "TTBFloatingWindowParent.WMClose", 0x20);
MakeComm(0x492E48, "'procedure TTBFloatingWindowParent.WMClose;'");
MakeCode(0x492E48);
MakeComm(0x492E4B, "'TTBFloatingWindowParent..:dword'");
MakeCode(0x492E7F);
MakeFunction(0x492E48, 0x492E81);
MakeUnkn(0x492E84, 1);
MakeNameEx(0x492E84, "TTBFloatingWindowParent.WMActivate", 0x20);
MakeComm(0x492E84, "'procedure TTBFloatingWindowParent.WMActivate(Message:TWMActivate);'");
MakeCode(0x492E84);
MakeComm(0x492E8B, "'TTBFloatingWindowParent.FComponentState:TComponentState'");
MakeComm(0x492E9F, "'TTBFloatingWindowParent..:dword'");
MakeCode(0x492E9F);
MakeCode(0x492EE0);
MakeCode(0x492F0C);
MakeCode(0x492F34);
MakeFunction(0x492E84, 0x492F38);
MakeUnkn(0x492F38, 1);
MakeNameEx(0x492F38, "TTBFloatingWindowParent.WMMouseActivate", 0x20);
MakeComm(0x492F38, "'procedure TTBFloatingWindowParent.WMMouseActivate(var Message:TWMMouseActivate);'");
MakeCode(0x492F38);
MakeComm(0x492F3E, "'TTBFloatingWindowParent.FComponentState:TComponentState'");
MakeCode(0x492F50);
MakeComm(0x492F70, "'TTBFloatingWindowParent..:dword'");
MakeComm(0x492F86, "'TTBFloatingWindowParent..:dword'");
MakeCode(0x492FCC);
MakeCode(0x492FE8);
MakeFunction(0x492F38, 0x492FED);
MakeUnkn(0x492FF0, 1);
MakeNameEx(0x492FF0, "TTBFloatingWindowParent.WMMove", 0x20);
MakeComm(0x492FF0, "'procedure TTBFloatingWindowParent.WMMove(var Message:TWMMove);'");
MakeCode(0x492FF0);
MakeComm(0x492FFA, "'TTBFloatingWindowParent..:dword'");
MakeFunction(0x492FF0, 0x493007);
MakeCode(0x493008);
MakeFunction(0x493008, 0x49301B);
MakeUnkn(0x49301C, 1);
MakeNameEx(0x49301C, "TTBFloatingWindowParent.sub_0049301C", 0x20);
MakeComm(0x49301C, "'procedure TTBFloatingWindowParent.sub_0049301C(?:?; ?:?; ?:?; ?:?);'");
MakeCode(0x49301C);
MakeCode(0x49305B);
MakeCode(0x49305E);
MakeCode(0x493083);
MakeComm(0x493120, "'TTBFloatingWindowParent..:dword'");
MakeComm(0x493182, "'TTBFloatingWindowParent..:dword'");
MakeCode(0x4931B7);
MakeComm(0x4931BA, "'TTBFloatingWindowParent..:dword'");
MakeComm(0x4931DB, "'TTBFloatingWindowParent..:dword'");
MakeCode(0x4931FE);
MakeCode(0x493203);
MakeCode(0x49323D);
MakeComm(0x493253, "'TTBFloatingWindowParent..:dword'");
MakeComm(0x49326D, "'TTBFloatingWindowParent..:dword'");
MakeCode(0x493307);
MakeCode(0x493314);
MakeCode(0x493327);
MakeCode(0x493328);
MakeCode(0x49332D);
MakeComm(0x493332, "'TTBFloatingWindowParent..:dword'");
MakeComm(0x49339B, "'TTBFloatingWindowParent..:dword'");
MakeCode(0x4933D7);
MakeComm(0x4933E0, "'TTBFloatingWindowParent.?f360:byte'");
MakeCode(0x493401);
MakeCode(0x49340E);
MakeCode(0x493426);
MakeCode(0x493427);
MakeCode(0x49342C);
MakeCode(0x49342E);
MakeFunction(0x49301C, 0x493437);
MakeCode(0x493438);
MakeComm(0x49346E, "'TTBFloatingWindowParent.sub_0049301C'");
MakeCode(0x493473);
MakeFunction(0x493438, 0x493477);
MakeCode(0x493478);
MakeFunction(0x493478, 0x49347E);
MakeUnkn(0x493480, 1);
MakeNameEx(0x493480, "TTBCustomDockableWindow.Create", 0x20);
MakeComm(0x493480, "'constructor TTBCustomDockableWindow.Create(AOwner:TComponent);'");
MakeCode(0x493480);
MakeCode(0x49348E);
MakeComm(0x49349B, "'TTBCustomDockableWindow.FControlStyle:TControlStyle'");
MakeComm(0x49349E, "'0xA9'");
MakeComm(0x4934A4, "'0x42'");
MakeComm(0x4934AE, "'TTBCustomDockableWindow.FControlStyle:TControlStyle'");
MakeComm(0x4934B1, "'TTBCustomDockableWindow.?f258:byte'");
MakeComm(0x4934B8, "'TTBCustomDockableWindow.?f2D0:byte'");
MakeComm(0x4934BF, "'TTBCustomDockableWindow.?f2D9:byte'");
MakeComm(0x4934C6, "'TTBCustomDockableWindow.?f2D2:byte'");
MakeComm(0x4934CD, "'0xF'");
MakeComm(0x4934D4, "'TTBCustomDockableWindow.?f2DC:byte'");
MakeComm(0x4934DA, "'0x3'");
MakeComm(0x4934E1, "'TTBCustomDockableWindow.?f2DF:byte'");
MakeComm(0x4934E7, "'TTBCustomDockableWindow.?f25C:Integer'");
MakeComm(0x4934F1, "'TTBCustomDockableWindow.?f2DB:byte'");
MakeComm(0x4934F8, "'TTBCustomDockableWindow.?f268:dword'");
MakeComm(0x493502, "'TTBCustomDockableWindow.?f2D1:byte'");
MakeComm(0x493509, "'TTBCustomDockableWindow.?f2D5:byte'");
MakeComm(0x493510, "'TTBCustomDockableWindow.?f2D6:byte'");
MakeComm(0x493517, "'TTBCustomDockableWindow.?f2DE:byte'");
MakeComm(0x49351E, "'TTBCustomDockableWindow.?f2D8:byte'");
MakeComm(0x493531, "'TTBCustomDockableWindow.FComponentState:TComponentState'");
MakeComm(0x49353C, "'0xF'");
MakeCode(0x49354A);
MakeCode(0x493564);
MakeFunction(0x493480, 0x493569);
MakeByte(0x49356C);
MakeUnkn(0x49356C, 1);
MakeNameEx(0x49356C, "gvar_0049356C", 0);
MakeByte(0x493570);
MakeUnkn(0x493570, 1);
MakeNameEx(0x493570, "gvar_00493570", 0);
MakeByte(0x493574);
MakeUnkn(0x493574, 1);
MakeNameEx(0x493574, "gvar_00493574", 0);
MakeByte(0x493578);
MakeUnkn(0x493578, 1);
MakeNameEx(0x493578, "gvar_00493578", 0);
MakeUnkn(0x49357C, 1);
MakeNameEx(0x49357C, "TTBCustomDockableWindow.Destroy", 0x20);
MakeComm(0x49357C, "'destructor TTBCustomDockableWindow.Destroy;'");
MakeCode(0x49357C);
MakeComm(0x493593, "'TTBCustomDockableWindow.?f304:?'");
MakeComm(0x49359E, "'TTBCustomDockableWindow.?f310:dword'");
MakeCode(0x4935C0);
MakeFunction(0x49357C, 0x4935C3);
MakeUnkn(0x4935C4, 1);
MakeNameEx(0x4935C4, "TTBCustomDockableWindow.HasParent", 0x20);
MakeComm(0x4935C4, "'procedure TTBCustomDockableWindow.HasParent;'");
MakeCode(0x4935C4);
MakeComm(0x4935C7, "'TTBCustomDockableWindow.FParent:TWinControl'");
MakeCode(0x4935DD);
MakeFunction(0x4935C4, 0x4935E6);
MakeUnkn(0x4935E8, 1);
MakeNameEx(0x4935E8, "TTBCustomDockableWindow.GetParentComponent", 0x20);
MakeComm(0x4935E8, "'procedure TTBCustomDockableWindow.GetParentComponent;'");
MakeCode(0x4935E8);
MakeComm(0x4935EB, "'TTBCustomDockableWindow.FParent:TWinControl'");
MakeCode(0x493601);
MakeFunction(0x4935E8, 0x49360A);
MakeCode(0x49360C);
MakeCode(0x493636);
MakeFunction(0x49360C, 0x493638);
MakeCode(0x493638);
MakeCode(0x4936A4);
MakeCode(0x493742);
MakeCode(0x49374F);
MakeCode(0x49375E);
MakeCode(0x49376D);
MakeCode(0x49377B);
MakeCode(0x493780);
MakeCode(0x49378D);
MakeFunction(0x493638, 0x493794);
MakeUnkn(0x493794, 1);
MakeNameEx(0x493794, "TTBCustomDockableWindow.WMMove", 0x20);
MakeComm(0x493794, "'procedure TTBCustomDockableWindow.WMMove(var Message:TWMMove);'");
MakeCode(0x493794);
MakeComm(0x4937A6, "'TTBCustomDockableWindow.?f2F9:byte'");
MakeComm(0x4937B0, "'TTBCustomDockableWindow.?f26C:byte'");
MakeComm(0x4937BC, "'TTBCustomDockableWindow.?f270:dword'");
MakeCode(0x4937D5);
MakeFunction(0x493794, 0x4937E0);
MakeCode(0x4937E0);
MakeCode(0x493801);
MakeCode(0x493805);
MakeFunction(0x4937E0, 0x493809);
MakeCode(0x49380C);
MakeCode(0x493851);
MakeFunction(0x49380C, 0x493856);
MakeCode(0x493858);
MakeCode(0x493898);
MakeComm(0x4938B9, "'TApplication.FHandle:HWND'");
MakeCode(0x4938DE);
MakeCode(0x4938E0);
MakeComm(0x4938EE, "'0x7'");
MakeCode(0x4938FD);
MakeFunction(0x493858, 0x493901);
MakeByte(0x493904);
MakeUnkn(0x493904, 1);
MakeNameEx(0x493904, "gvar_00493904", 0);
MakeCode(0x493908);
MakeCode(0x49391C);
MakeCode(0x49392A);
MakeCode(0x493945);
MakeFunction(0x493908, 0x49394A);
MakeCode(0x49394C);
MakeCode(0x493964);
MakeCode(0x493968);
MakeCode(0x49396A);
MakeCode(0x4939B6);
MakeCode(0x4939D2);
MakeCode(0x4939D6);
MakeCode(0x4939D8);
MakeCode(0x4939DA);
MakeFunction(0x49394C, 0x4939E1);
MakeCode(0x4939E4);
MakeCode(0x493A23);
MakeCode(0x493A37);
MakeFunction(0x4939E4, 0x493A3A);
MakeCode(0x493A3C);
MakeFunction(0x493A3C, 0x493A4E);
MakeCode(0x493A50);
MakeCode(0x493A6C);
MakeCode(0x493A83);
MakeCode(0x493AB7);
MakeFunction(0x493A50, 0x493ABA);
MakeCode(0x493ABC);
MakeCode(0x493AE0);
MakeCode(0x493AF7);
MakeCode(0x493B0C);
MakeCode(0x493B1E);
MakeCode(0x493B22);
MakeFunction(0x493ABC, 0x493B30);
MakeUnkn(0x493B30, 1);
MakeNameEx(0x493B30, "TTBCustomDockableWindow.CMShowingChanged", 0x20);
MakeComm(0x493B30, "'procedure TTBCustomDockableWindow.CMShowingChanged(var Message:TMessage);'");
MakeCode(0x493B30);
MakeComm(0x493B57, "'TTBCustomDockableWindow.FParent:TWinControl'");
MakeComm(0x493B7A, "'TTBCustomDockableWindow.?f2DD:byte'");
MakeComm(0x493BB2, "'TTBCustomDockableWindow.FParent:TWinControl'");
MakeComm(0x493BDA, "'TTBCustomDockableWindow.FParent:TWinControl'");
MakeComm(0x493C04, "'TTBCustomDockableWindow.FParent:TWinControl'");
MakeCode(0x493C14);
MakeComm(0x493C1B, "'TApplication.FHandle:HWND'");
MakeCode(0x493C2E);
MakeCode(0x493C36);
MakeComm(0x493C41, "'TTBCustomDockableWindow.FParent:TWinControl'");
MakeCode(0x493C58);
MakeCode(0x493CA5);
MakeFunction(0x493B30, 0x493CAB);
MakeUnkn(0x493CAC, 1);
MakeNameEx(0x493CAC, "TTBCustomDockableWindow.CreateParams", 0x20);
MakeComm(0x493CAC, "'procedure TTBCustomDockableWindow.CreateParams(var Params:TCreateParams);'");
MakeCode(0x493CAC);
MakeComm(0x493CBB, "'TTBCustomDockableWindow.FComponentState:TComponentState'");
MakeComm(0x493CC1, "'TCreateParams.WindowClass:TWndClass'");
MakeCode(0x493CC5);
MakeFunction(0x493CAC, 0x493CC8);
MakeUnkn(0x493CC8, 1);
MakeNameEx(0x493CC8, "TTBCustomDockableWindow.Notification", 0x20);
MakeComm(0x493CC8, "'procedure TTBCustomDockableWindow.Notification(AComponent:TComponent; Operation:TOperation);'");
MakeCode(0x493CC8);
MakeComm(0x493CE1, "'TTBCustomDockableWindow.?f274:TTBDock'");
MakeComm(0x493CEB, "'TTBCustomDockableWindow.?f274:TTBDock'");
MakeComm(0x493CF3, "'TTBCustomDockableWindow.?f278:TWinControl'");
MakeCode(0x493CF3);
MakeComm(0x493CFD, "'TTBCustomDockableWindow.?f278:TWinControl'");
MakeComm(0x493D05, "'TTBCustomDockableWindow.?f304:?'");
MakeCode(0x493D05);
MakeCode(0x493D12);
MakeFunction(0x493CC8, 0x493D16);
MakeCode(0x493D18);
MakeCode(0x493D61);
MakeCode(0x493D7C);
MakeCode(0x493D97);
MakeCode(0x493DB1);
MakeCode(0x493DCC);
MakeCode(0x493DD6);
MakeFunction(0x493D18, 0x493DDC);
MakeUnkn(0x493DDC, 1);
MakeNameEx(0x493DDC, "TTBCustomDockableWindow.sub_00493DDC", 0x20);
MakeComm(0x493DDC, "'procedure TTBCustomDockableWindow.sub_00493DDC;'");
MakeCode(0x493DDC);
MakeFunction(0x493DDC, 0x493DDD);
MakeUnkn(0x493DE0, 1);
MakeNameEx(0x493DE0, "TTBCustomDockableWindow.sub_00493DE0", 0x20);
MakeComm(0x493DE0, "'procedure TTBCustomDockableWindow.sub_00493DE0;'");
MakeCode(0x493DE0);
MakeFunction(0x493DE0, 0x493DE1);
MakeUnkn(0x493DE4, 1);
MakeNameEx(0x493DE4, "TTBCustomDockableWindow.sub_00493DE4", 0x20);
MakeComm(0x493DE4, "'procedure TTBCustomDockableWindow.sub_00493DE4;'");
MakeCode(0x493DE4);
MakeFunction(0x493DE4, 0x493DE5);
MakeUnkn(0x493DE8, 1);
MakeNameEx(0x493DE8, "TTBCustomDockableWindow.sub_00493DE8", 0x20);
MakeComm(0x493DE8, "'procedure TTBCustomDockableWindow.sub_00493DE8;'");
MakeCode(0x493DE8);
MakeFunction(0x493DE8, 0x493DE9);
MakeCode(0x493DEC);
MakeFunction(0x493DEC, 0x493DED);
MakeUnkn(0x493E14, 1);
MakeNameEx(0x493E14, "TTBCustomDockableWindow.DefineProperties", 0x20);
MakeComm(0x493E14, "'procedure TTBCustomDockableWindow.DefineProperties(Filer:TFiler);'");
MakeCode(0x493E14);
MakeComm(0x493E2F, "'TTBCustomDockableWindow.FComponentState:TComponentState'");
MakeComm(0x493E42, "'TFiler.DefineProperty'");
MakeFunction(0x493E14, 0x493E48);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x493E50, -1);
MakeDword(0x493E4C);
MakeDword(0x493E48);
MakeUnkn(0x493E60, 1);
MakeNameEx(0x493E60, "TTBCustomDockableWindow.Loaded", 0x20);
MakeComm(0x493E60, "'procedure TTBCustomDockableWindow.Loaded;'");
MakeCode(0x493E60);
MakeComm(0x493E6E, "'TTBCustomDockableWindow.?f308:byte'");
MakeComm(0x493E77, "'TTBCustomDockableWindow.FComponentState:TComponentState'");
MakeComm(0x493E7D, "'TTBCustomDockableWindow.FParent:TWinControl'");
MakeCode(0x493EC5);
MakeComm(0x493ECB, "'TTBCustomDockableWindow.sub_00493DE8'");
MakeFunction(0x493E60, 0x493EDD);
MakeCode(0x493EE0);
MakeFunction(0x493EE0, 0x493EE7);
MakeCode(0x493EE8);
MakeFunction(0x493EE8, 0x493F06);
MakeCode(0x493F08);
MakeCode(0x493F26);
MakeFunction(0x493F08, 0x493F29);
MakeCode(0x493F2C);
MakeCode(0x493F5B);
MakeCode(0x493F93);
MakeCode(0x493FAB);
MakeCode(0x493FDB);
MakeCode(0x493FE8);
MakeCode(0x493FF2);
MakeCode(0x493FF7);
MakeCode(0x493FF9);
MakeFunction(0x493F2C, 0x494000);
MakeCode(0x494000);
MakeCode(0x49401C);
MakeCode(0x494025);
MakeCode(0x494079);
MakeFunction(0x494000, 0x49407E);
MakeUnkn(0x494080, 1);
MakeNameEx(0x494080, "TTBCustomDockableWindow.SetBounds", 0x20);
MakeComm(0x494080, "'procedure TTBCustomDockableWindow.SetBounds(ALeft:Integer; ATop:Integer; AWidth:Integer; AHeight:Integer);'");
MakeCode(0x494080);
MakeComm(0x494094, "'TTBCustomDockableWindow.FComponentState:TComponentState'");
MakeComm(0x49409A, "'TTBCustomDockableWindow.?f280:byte'");
MakeComm(0x4940AD, "'TTBCustomDockableWindow.FParent:TWinControl'");
MakeComm(0x4940C8, "'TWinControl.Width:Integer'");
MakeComm(0x4940D7, "'TWinControl.Height:Integer'");
MakeComm(0x4940E0, "'TWinControl.Top:Integer'");
MakeComm(0x4940E3, "'TWinControl.Left:Integer'");
MakeComm(0x4940EA, "'TWinControl.SetBounds'");
MakeComm(0x4940F0, "'TTBCustomDockableWindow.?f2E8:dword'");
MakeCode(0x4940F0);
MakeComm(0x4940F9, "'TTBCustomDockableWindow.Width:Integer'");
MakeComm(0x494101, "'TTBCustomDockableWindow.Height:Integer'");
MakeCode(0x494106);
MakeComm(0x49410F, "'TTBCustomDockableWindow.sub_00493DEC'");
MakeComm(0x494115, "'TTBCustomDockableWindow.FComponentState:TComponentState'");
MakeCode(0x494115);
MakeComm(0x49411F, "'TTBCustomDockableWindow.FComponentState:TComponentState'");
MakeComm(0x494129, "'TTBCustomDockableWindow.?f26C:byte'");
MakeComm(0x494136, "'TTBCustomDockableWindow.?f2E8:dword'");
MakeComm(0x494146, "'TTBCustomDockableWindow.Left:Integer'");
MakeComm(0x49414E, "'TTBCustomDockableWindow.Top:Integer'");
MakeComm(0x494153, "'TTBCustomDockableWindow.?f270:dword'");
MakeCode(0x494153);
MakeComm(0x494166, "'TTBCustomDockableWindow.Height:Integer'");
MakeCode(0x494170);
MakeComm(0x49417A, "'TTBCustomDockableWindow.?f260:Integer'");
MakeComm(0x494183, "'TTBCustomDockableWindow.?f25C:Integer'");
MakeComm(0x49418B, "'TTBCustomDockableWindow.Width:Integer'");
MakeCode(0x49418B);
MakeCode(0x494195);
MakeComm(0x49419F, "'TTBCustomDockableWindow.?f260:Integer'");
MakeComm(0x4941A8, "'TTBCustomDockableWindow.?f25C:Integer'");
MakeCode(0x4941AE);
MakeComm(0x4941B3, "'TTBCustomDockableWindow.Top:Integer'");
MakeComm(0x4941B6, "'TTBCustomDockableWindow.Left:Integer'");
MakeComm(0x4941C0, "'TTBCustomDockableWindow.?f270:dword'");
MakeCode(0x4941CD);
MakeCode(0x4941DF);
MakeFunction(0x494080, 0x4941E8);
MakeCode(0x4941E8);
MakeCode(0x494254);
MakeFunction(0x4941E8, 0x49426D);
MakeCode(0x494270);
MakeCode(0x494288);
MakeFunction(0x494270, 0x49428C);
MakeUnkn(0x49428C, 1);
MakeNameEx(0x49428C, "TTBCustomDockableWindow.SetParent", 0x20);
MakeComm(0x49428C, "'procedure TTBCustomDockableWindow.SetParent(AParent:TWinControl);'");
MakeCode(0x49428C);
MakeComm(0x49429E, "'TTBCustomDockableWindow.FParent:TWinControl'");
MakeComm(0x4942C7, "'TTBCustomDockableWindow.FParent:TWinControl'");
MakeComm(0x4942D5, "'TTBCustomDockableWindow.?f270:dword'");
MakeComm(0x4942DE, "'TTBCustomDockableWindow.?f280:byte'");
MakeComm(0x4942E7, "'TTBCustomDockableWindow.?f270:dword'");
MakeComm(0x4942F4, "'TTBCustomDockableWindow.?f26C:byte'");
MakeCode(0x494306);
MakeComm(0x494309, "'TTBCustomDockableWindow.FComponentState:TComponentState'");
MakeComm(0x494318, "'TTBCustomDockableWindow.?f2C2:word'");
MakeComm(0x49432E, "'TTBCustomDockableWindow.?f2C4:dword'");
MakeCode(0x49433A);
MakeComm(0x49433D, "'TTBCustomDockableWindow.?f2AA:word'");
MakeComm(0x49434D, "'TTBCustomDockableWindow.?f2AC:dword'");
MakeCode(0x494359);
MakeComm(0x49435C, "'TTBCustomDockableWindow.?f2F4:dword'");
MakeComm(0x494365, "'TTBCustomDockableWindow.?f2F0:dword'");
MakeCode(0x49438F);
MakeCode(0x49439D);
MakeComm(0x4943A0, "'TTBCustomDockableWindow.?f2E8:dword'");
MakeComm(0x4943C6, "'TTBCustomDockableWindow.sub_004973F0'");
MakeCode(0x4943CB);
MakeComm(0x4943E6, "'TTBCustomDockableWindow.?f27C:dword'");
MakeComm(0x4943EF, "'TTBCustomDockableWindow.FParent:TWinControl'");
MakeComm(0x494404, "'TTBCustomDockableWindow.?f2D8:byte'");
MakeComm(0x494410, "'TTBCustomDockableWindow.?f278:TWinControl'");
MakeComm(0x494419, "'TTBCustomDockableWindow.FParent:TWinControl'");
MakeCode(0x49441E);
MakeComm(0x494421, "'TTBCustomDockableWindow.FParent:TWinControl'");
MakeCode(0x49442E);
MakeComm(0x494431, "'TTBCustomDockableWindow.FParent:TWinControl'");
MakeCode(0x49443E);
MakeComm(0x494449, "'TTBCustomDockableWindow.FHandle:HWND'");
MakeComm(0x494454, "'TTBCustomDockableWindow.FHandle:HWND'");
MakeCode(0x49445A);
MakeComm(0x49446A, "'TTBCustomDockableWindow.?f270:dword'");
MakeComm(0x494473, "'TTBCustomDockableWindow.?f280:byte'");
MakeComm(0x49447C, "'TTBCustomDockableWindow.?f270:dword'");
MakeComm(0x494489, "'TTBCustomDockableWindow.?f26C:byte'");
MakeComm(0x4944A4, "'TTBCustomDockableWindow.FHandle:HWND'");
MakeCode(0x4944CB);
MakeCode(0x4944D6);
MakeCode(0x4944E0);
MakeComm(0x4944E8, "'TTBCustomDockableWindow.FParent:TWinControl'");
MakeComm(0x4944F3, "'TTBCustomDockableWindow.?f270:dword'");
MakeComm(0x4944FC, "'TTBCustomDockableWindow.FParent:TWinControl'");
MakeComm(0x49450D, "'TTBCustomDockableWindow.?f280:byte'");
MakeComm(0x494516, "'TTBCustomDockableWindow.?f270:dword'");
MakeComm(0x494523, "'TTBCustomDockableWindow.?f26C:byte'");
MakeCode(0x494533);
MakeComm(0x494536, "'TTBCustomDockableWindow.?f268:dword'");
MakeComm(0x494543, "'TTBCustomDockableWindow.?f30C:byte'");
MakeComm(0x49454F, "'TTBCustomDockableWindow.?f310:dword'");
MakeComm(0x49455B, "'TTBCustomDockableWindow.FParent:TWinControl'");
MakeComm(0x494561, "'TTBCustomDockableWindow.?f310:dword'");
MakeComm(0x49456C, "'TTBCustomDockableWindow.?f310:dword'");
MakeCode(0x494576);
MakeComm(0x494579, "'TTBCustomDockableWindow.FParent:TWinControl'");
MakeComm(0x49458E, "'TTBCustomDockableWindow.?f2D8:byte'");
MakeComm(0x49459A, "'TTBCustomDockableWindow.?f30C:byte'");
MakeComm(0x4945A6, "'TTBCustomDockableWindow.FParent:TWinControl'");
MakeComm(0x4945B4, "'TTBCustomDockableWindow.FParent:TWinControl'");
MakeCode(0x4945C3);
MakeComm(0x4945C6, "'TTBCustomDockableWindow.FParent:TWinControl'");
MakeCode(0x4945D3);
MakeCode(0x4945E2);
MakeCode(0x4945EF);
MakeCode(0x4945F8);
MakeCode(0x4945FD);
MakeCode(0x4945FF);
MakeCode(0x49460C);
MakeComm(0x49460F, "'TTBCustomDockableWindow.?f2E8:dword'");
MakeCode(0x494623);
MakeCode(0x494631);
MakeCode(0x494632);
MakeCode(0x494637);
MakeCode(0x494639);
MakeCode(0x494646);
MakeComm(0x494649, "'TTBCustomDockableWindow.?f2F0:dword'");
MakeComm(0x494652, "'TTBCustomDockableWindow.?f2F4:dword'");
MakeCode(0x494661);
MakeCode(0x494666);
MakeComm(0x49466B, "'TTBCustomDockableWindow.FParent:TWinControl'");
MakeCode(0x494679);
MakeComm(0x49467C, "'TTBCustomDockableWindow.FComponentState:TComponentState'");
MakeComm(0x49468B, "'TTBCustomDockableWindow.?f2A2:word'");
MakeComm(0x49469B, "'TTBCustomDockableWindow.?f2A4:dword'");
MakeCode(0x4946A7);
MakeComm(0x4946AA, "'TTBCustomDockableWindow.?f292:word'");
MakeComm(0x4946BA, "'TTBCustomDockableWindow.?f294:dword'");
MakeCode(0x4946C6);
MakeFunction(0x49428C, 0x4946CD);
MakeCode(0x4946D0);
MakeFunction(0x4946D0, 0x4946FD);
MakeCode(0x494700);
MakeFunction(0x494700, 0x49472A);
MakeCode(0x49472C);
MakeCode(0x494764);
MakeCode(0x494782);
MakeFunction(0x49472C, 0x494787);
MakeCode(0x494788);
MakeComm(0x49478E, "'TTBCustomDockableWindow.?f2D5:byte'");
MakeComm(0x4947A4, "'TTBCustomDockableWindow.?f2D5:byte'");
MakeFunction(0x494788, 0x4947BE);
MakeCode(0x4947C0);
MakeCode(0x4947F6);
MakeFunction(0x4947C0, 0x494806);
MakeCode(0x494808);
MakeComm(0x494811, "'TTBCustomDockableWindow.?f2DB:byte'");
MakeComm(0x494818, "'TTBCustomDockableWindow.?f2D3:byte'");
MakeCode(0x49483F);
MakeCode(0x494852);
MakeFunction(0x494808, 0x494868);
MakeCode(0x494868);
MakeComm(0x49486B, "'TTBCustomDockableWindow.?f26C:byte'");
MakeCode(0x49487F);
MakeComm(0x49488C, "'TTBCustomDockableWindow.?f270:dword'");
MakeComm(0x49489B, "'TTBCustomDockableWindow.?f2DB:byte'");
MakeComm(0x4948A2, "'TTBCustomDockableWindow.?f2D3:byte'");
MakeCode(0x4948C7);
MakeCode(0x4948CA);
MakeFunction(0x494868, 0x4948CE);
MakeCode(0x4948D0);
MakeCode(0x494933);
MakeCode(0x494936);
MakeFunction(0x4948D0, 0x49493A);
MakeUnkn(0x49493C, 1);
MakeNameEx(0x49493C, "TTBCustomDockableWindow.WMNCCalcSize", 0x20);
MakeComm(0x49493C, "'procedure TTBCustomDockableWindow.WMNCCalcSize(Message:TWMNCCalcSize);'");
MakeCode(0x49493C);
MakeComm(0x49494B, "'TTBCustomDockableWindow.?f26C:byte'");
MakeCode(0x49495E);
MakeFunction(0x49493C, 0x494961);
MakeUnkn(0x494964, 1);
MakeNameEx(0x494964, "TTBCustomDockableWindow.WMSetCursor", 0x20);
MakeComm(0x494964, "'procedure TTBCustomDockableWindow.WMSetCursor(Message:TWMSetCursor);'");
MakeCode(0x494964);
MakeComm(0x49496D, "'TTBCustomDockableWindow.?f26C:byte'");
MakeComm(0x49497A, "'TTBCustomDockableWindow.?f270:dword'");
MakeComm(0x494990, "'TTBCustomDockableWindow.FHandle:HWND'");
MakeComm(0x4949A8, "'TTBCustomDockableWindow.?f2DB:byte'");
MakeComm(0x4949C9, "'TTBCustomDockableWindow.?f270:dword'");
MakeCode(0x4949E5);
MakeComm(0x4949ED, "'TTBCustomDockableWindow.?f2DB:byte'");
MakeCode(0x4949ED);
MakeComm(0x4949F4, "'TTBCustomDockableWindow.?f2D3:byte'");
MakeCode(0x494A2A);
MakeCode(0x494A33);
MakeFunction(0x494964, 0x494A39);
MakeCode(0x494A3C);
MakeFunction(0x494A3C, 0x494A73);
MakeCode(0x494A74);
MakeFunction(0x494A74, 0x494A8B);
MakeCode(0x494A8C);
MakeComm(0x494AA2, "'TBitmap.Create'");
MakeCode(0x494B2B);
MakeCode(0x494B38);
MakeCode(0x494B41);
MakeCode(0x494B46);
MakeFunction(0x494A8C, 0x494B4E);
MakeCode(0x494B50);
MakeComm(0x494B67, "'TTBCustomDockableWindow.?f26C:byte'");
MakeCode(0x494BA2);
MakeCode(0x494BA5);
MakeCode(0x494BD0);
MakeComm(0x494BFA, "'TTBCustomDockableWindow.?f270:dword'");
MakeComm(0x494C11, "'TTBCustomDockableWindow.FColor:TColor'");
MakeComm(0x494C25, "'TTBCustomDockableWindow.?f270:dword'");
MakeComm(0x494C3A, "'TTBCustomDockableWindow.?f270:dword'");
MakeCode(0x494C49);
MakeCode(0x494C4D);
MakeCode(0x494C4F);
MakeComm(0x494C55, "'TTBCustomDockableWindow.?f2D9:byte'");
MakeCode(0x494C6C);
MakeCode(0x494C7D);
MakeCode(0x494CAB);
MakeComm(0x494CDA, "'TTBCustomDockableWindow.?f270:dword'");
MakeComm(0x494CEE, "'TTBCustomDockableWindow.?f270:dword'");
MakeComm(0x494D0F, "'TTBCustomDockableWindow.Left:Integer'");
MakeComm(0x494D15, "'TTBCustomDockableWindow.?f270:dword'");
MakeComm(0x494D2C, "'TTBCustomDockableWindow.Top:Integer'");
MakeComm(0x494D67, "'TWinControl.GetClientRect'");
MakeComm(0x494DE8, "'TTBCustomDockableWindow.?f270:dword'");
MakeCode(0x494E06);
MakeComm(0x494E09, "'TTBCustomDockableWindow.?f270:dword'");
MakeCode(0x494E3D);
MakeCode(0x494E48);
MakeComm(0x494E4F, "'TTBCustomDockableWindow.?f2DB:byte'");
MakeComm(0x494E5C, "'TTBCustomDockableWindow.?f2D3:byte'");
MakeComm(0x494EA2, "'TTBCustomDockableWindow.?f2D3:byte'");
MakeCode(0x494EBE);
MakeCode(0x494EC7);
MakeComm(0x494ED4, "'TTBCustomDockableWindow.?f2DB:byte'");
MakeCode(0x494EEA);
MakeCode(0x494F0D);
MakeCode(0x494F26);
MakeCode(0x494F51);
MakeCode(0x494F66);
MakeCode(0x494F8B);
MakeCode(0x494FB4);
MakeCode(0x494FD1);
MakeCode(0x494FE2);
MakeComm(0x494FF2, "'TTBCustomDockableWindow.?f2D3:byte'");
MakeComm(0x495005, "'TTBCustomDockableWindow.sub_00494808'");
MakeComm(0x49500E, "'TTBCustomDockableWindow.?f30D:byte'");
MakeCode(0x49502A);
MakeComm(0x49502D, "'TTBCustomDockableWindow.?f30E:byte'");
MakeCode(0x495042);
MakeComm(0x495052, "'TTBCustomDockableWindow.?f30D:byte'");
MakeCode(0x495068);
MakeCode(0x495074);
MakeCode(0x49507D);
MakeCode(0x49508A);
MakeCode(0x4950A2);
MakeCode(0x4950A3);
MakeCode(0x4950A8);
MakeCode(0x4950AA);
MakeFunction(0x494B50, 0x4950B3);
MakeCode(0x4950B4);
MakeCode(0x4950E3);
MakeFunction(0x4950B4, 0x4950E5);
MakeUnkn(0x4950E8, 1);
MakeNameEx(0x4950E8, "TTBCustomDockableWindow.WMNCPaint", 0x20);
MakeComm(0x4950E8, "'procedure TTBCustomDockableWindow.WMNCPaint(Message:TMessage);'");
MakeCode(0x4950E8);
MakeComm(0x4950F8, "'TTBCustomDockableWindow.sub_00494B50'");
MakeFunction(0x4950E8, 0x495101);
MakeCode(0x495104);
MakeFunction(0x495104, 0x49511B);
MakeUnkn(0x49511C, 1);
MakeNameEx(0x49511C, "TTBCustomDockableWindow.sub_0049511C", 0x20);
MakeComm(0x49511C, "'procedure TTBCustomDockableWindow.sub_0049511C(?:?);'");
MakeCode(0x49511C);
MakeFunction(0x49511C, 0x495139);
MakeUnkn(0x49513C, 1);
MakeNameEx(0x49513C, "TTBCustomDockableWindow.WMPrintClient", 0x20);
MakeComm(0x49513C, "'procedure TTBCustomDockableWindow.WMPrintClient(Message:TWMPrintClient);'");
MakeCode(0x49513C);
MakeFunction(0x49513C, 0x49514A);
MakeUnkn(0x49514C, 1);
MakeNameEx(0x49514C, "TTBCustomDockableWindow.WMEraseBkgnd", 0x20);
MakeComm(0x49514C, "'procedure TTBCustomDockableWindow.WMEraseBkgnd(Message:TWMEraseBkgnd);'");
MakeCode(0x49514C);
MakeComm(0x495156, "'TTBCustomDockableWindow.?f26C:byte'");
MakeComm(0x495163, "'TTBCustomDockableWindow.?f270:dword'");
MakeComm(0x495179, "'TTBCustomDockableWindow.?f270:dword'");
MakeComm(0x495194, "'TWinControl.GetClientRect'");
MakeComm(0x4951B8, "'TTBCustomDockableWindow.?f270:dword'");
MakeComm(0x4951C7, "'TTBCustomDockableWindow.?f270:dword'");
MakeComm(0x4951E4, "'TTBCustomDockableWindow.?f270:dword'");
MakeComm(0x4951ED, "'TTBCustomDockableWindow.Left:Integer'");
MakeComm(0x495200, "'TTBCustomDockableWindow.Top:Integer'");
MakeComm(0x495286, "'TTBCustomDockableWindow.?f270:dword'");
MakeCode(0x4952A7);
MakeCode(0x4952B0);
MakeFunction(0x49514C, 0x4952B7);
MakeUnkn(0x4952B8, 1);
MakeNameEx(0x4952B8, "TTBCustomDockableWindow.sub_0044E704", 0x20);
MakeComm(0x4952B8, "'procedure TTBCustomDockableWindow.sub_0044E704;'");
MakeCode(0x4952B8);
MakeComm(0x4952B9, "'TTBCustomDockableWindow.?f26C:byte'");
MakeComm(0x4952C2, "'TTBCustomDockableWindow.?f270:dword'");
MakeCode(0x4952D3);
MakeFunction(0x4952B8, 0x4952D7);
MakeUnkn(0x4952D8, 1);
MakeNameEx(0x4952D8, "TTBCustomDockableWindow.PaletteChanged", 0x20);
MakeComm(0x4952D8, "'procedure TTBCustomDockableWindow.PaletteChanged(Foreground:Boolean);'");
MakeCode(0x4952D8);
MakeCode(0x4952FC);
MakeFunction(0x4952D8, 0x495304);
MakeCode(0x495304);
MakeCode(0x49532F);
MakeCode(0x495335);
MakeCode(0x49534A);
MakeCode(0x495350);
MakeFunction(0x495304, 0x495373);
MakeUnkn(0x495374, 1);
MakeNameEx(0x495374, "TTBCustomDockableWindow.CMColorChanged", 0x20);
MakeComm(0x495374, "'procedure TTBCustomDockableWindow.CMColorChanged(Message:TMessage);'");
MakeCode(0x495374);
MakeFunction(0x495374, 0x49538D);
MakeUnkn(0x495390, 1);
MakeNameEx(0x495390, "TTBCustomDockableWindow.CMTextChanged", 0x20);
MakeComm(0x495390, "'procedure TTBCustomDockableWindow.CMTextChanged(var Message:TMessage);'");
MakeCode(0x495390);
MakeComm(0x4953AE, "'TTBCustomDockableWindow.FParent:TWinControl'");
MakeCode(0x4953D6);
MakeCode(0x4953E3);
MakeCode(0x4953EC);
MakeCode(0x4953F1);
MakeFunction(0x495390, 0x4953F8);
MakeUnkn(0x4953F8, 1);
MakeNameEx(0x4953F8, "TTBCustomDockableWindow.CMVisibleChanged", 0x20);
MakeComm(0x4953F8, "'procedure TTBCustomDockableWindow.CMVisibleChanged(Message:TMessage);'");
MakeCode(0x4953F8);
MakeComm(0x4953FE, "'TTBCustomDockableWindow.FComponentState:TComponentState'");
MakeComm(0x495404, "'TTBCustomDockableWindow.?f26C:byte'");
MakeComm(0x495411, "'TTBCustomDockableWindow.?f270:dword'");
MakeCode(0x49541C);
MakeComm(0x495425, "'TTBCustomDockableWindow.?f2B2:word'");
MakeComm(0x495431, "'TTBCustomDockableWindow.?f2B4:dword'");
MakeCode(0x49543D);
MakeFunction(0x4953F8, 0x495440);
MakeUnkn(0x495440, 1);
MakeNameEx(0x495440, "RTTI_495440_DynArray_.11", 0);
MakeDword(0x495440);
MakeUnkn(0x495444, 1);
MakeNameEx(0x495444, "", 0);
MakeByte(0x495444);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x495445, 0x495449);
MakeDword(0x495449);
MakeDword(0x49544D);
MakeDword(0x495451);
MakeDword(0x495455);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x495459, 0x495461);
MakeUnkn(0x495464, 1);
MakeNameEx(0x495464, "VMT_495464_TDockedSize", 0);
MakeDword(0x495464);
MakeDword(0x495468);
MakeDword(0x49546C);
MakeDword(0x495470);
MakeUnkn(0x4954B0, 1);
MakeNameEx(0x4954B0, "TDockedSize_InitTable", 0);
MakeByte(0x4954B0);
MakeByte(0x4954B1);
MakeDword(0x4954B2);
MakeDword(0x4954B6);
MakeDword(0x4954BA);
MakeDword(0x4954BE);
MakeDword(0x495474);
MakeDword(0x495478);
MakeDword(0x49547C);
MakeDword(0x495480);
MakeDword(0x495484);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4954C2, 0x4954CE);
MakeDword(0x495488);
MakeDword(0x49548C);
MakeDword(0x495490);
MakeDword(0x495494);
MakeDword(0x495498);
MakeDword(0x49549C);
MakeDword(0x4954A0);
MakeDword(0x4954A4);
MakeDword(0x4954A8);
MakeDword(0x4954AC);
MakeCode(0x4954D0);
MakeCode(0x4954E9);
MakeCode(0x4954FF);
MakeCode(0x495501);
MakeFunction(0x4954D0, 0x495506);
MakeCode(0x495508);
MakeCode(0x495531);
MakeCode(0x49554C);
MakeCode(0x49554E);
MakeCode(0x495560);
MakeCode(0x495565);
MakeCode(0x49556C);
MakeCode(0x49557F);
MakeCode(0x495591);
MakeCode(0x495593);
MakeCode(0x49559E);
MakeCode(0x4955A2);
MakeFunction(0x495508, 0x4955AB);
MakeCode(0x4955AC);
MakeCode(0x495627);
MakeCode(0x495634);
MakeCode(0x495663);
MakeCode(0x495673);
MakeCode(0x495692);
MakeCode(0x49569B);
MakeCode(0x4956B2);
MakeCode(0x4956BE);
MakeCode(0x4956FA);
MakeCode(0x49572A);
MakeCode(0x495739);
MakeCode(0x49576C);
MakeCode(0x49579B);
MakeCode(0x4957A8);
MakeCode(0x4957B6);
MakeCode(0x4957BB);
MakeCode(0x4957BD);
MakeFunction(0x4955AC, 0x495804);
MakeCode(0x495804);
MakeCode(0x49582B);
MakeCode(0x4958A7);
MakeCode(0x4958AB);
MakeCode(0x4958B4);
MakeFunction(0x495804, 0x4958BB);
MakeCode(0x4958BC);
MakeCode(0x49594B);
MakeCode(0x49599D);
MakeFunction(0x4958BC, 0x4959A6);
MakeCode(0x4959A8);
MakeCode(0x4959F6);
MakeCode(0x495A30);
MakeCode(0x495A97);
MakeCode(0x495AA5);
MakeCode(0x495AAB);
MakeCode(0x495ACC);
MakeCode(0x495AD7);
MakeCode(0x495AE2);
MakeCode(0x495AED);
MakeCode(0x495B7B);
MakeCode(0x495B9C);
MakeCode(0x495BBD);
MakeCode(0x495BDE);
MakeCode(0x495C16);
MakeCode(0x495C48);
MakeCode(0x495C75);
MakeCode(0x495C81);
MakeCode(0x495CBA);
MakeCode(0x495CD4);
MakeFunction(0x4959A8, 0x495CDB);
MakeCode(0x495CDC);
MakeCode(0x495D06);
MakeCode(0x495D08);
MakeCode(0x495D0C);
MakeFunction(0x495CDC, 0x495D10);
MakeCode(0x495D10);
MakeCode(0x495D42);
MakeCode(0x495D53);
MakeCode(0x495D93);
MakeCode(0x495D97);
MakeCode(0x495DB1);
MakeCode(0x495DF4);
MakeCode(0x495DF8);
MakeCode(0x495E3C);
MakeFunction(0x495D10, 0x495E42);
MakeCode(0x495E44);
MakeCode(0x495E84);
MakeComm(0x495E99, "'TList.Create'");
MakeCode(0x495ED4);
MakeCode(0x495F31);
MakeCode(0x495F35);
MakeCode(0x495F48);
MakeComm(0x495F4B, "'TList.FCount:Integer'");
MakeCode(0x495F56);
MakeCode(0x495F6B);
MakeCode(0x495F78);
MakeCode(0x495F81);
MakeCode(0x495F86);
MakeFunction(0x495E44, 0x495F8F);
MakeCode(0x495F90);
MakeCode(0x496047);
MakeCode(0x4960FE);
MakeCode(0x496160);
MakeComm(0x49619B, "'TList.Create'");
MakeCode(0x4961B8);
MakeCode(0x4961D5);
MakeComm(0x4961D8, "'TList.FCount:Integer'");
MakeCode(0x4961E6);
MakeCode(0x4961FB);
MakeComm(0x496202, "'TList.Create'");
MakeComm(0x49620D, "'TList.FCount:Integer'");
MakeCode(0x496223);
MakeComm(0x496232, "'TDockedSize.Create'");
MakeComm(0x496252, "'TDockedSize.?f4:Pointer'");
MakeComm(0x496258, "'TDockedSize.?f8:?'");
MakeComm(0x49629C, "'TDockedSize.?f18:dword'");
MakeComm(0x4962A5, "'TDockedSize.?f1C:dword'");
MakeComm(0x4962AB, "'TDockedSize.?f18:dword'");
MakeCode(0x4962BB);
MakeComm(0x4962CA, "'TDockedSize.?f4:Pointer'");
MakeComm(0x4962E4, "'TDockedSize.?f8:?'");
MakeComm(0x4962F1, "'TDockedSize.?f8:?'");
MakeComm(0x4962FA, "'TDockedSize.?f4:Pointer'");
MakeComm(0x496314, "'TDockedSize.?f4:Pointer'");
MakeComm(0x49631E, "'TDockedSize.?f4:Pointer'");
MakeComm(0x496352, "'TDockedSize.?f18:dword'");
MakeComm(0x49635B, "'TDockedSize.?f1C:dword'");
MakeComm(0x496361, "'TDockedSize.?f4:Pointer'");
MakeComm(0x496375, "'TDockedSize.?f18:dword'");
MakeCode(0x496382);
MakeComm(0x4963A2, "'TDockedSize.?f18:dword'");
MakeComm(0x4963AB, "'TDockedSize.?f1C:dword'");
MakeCode(0x4963AE);
MakeComm(0x4963B1, "'TDockedSize.?f4:Pointer'");
MakeComm(0x4963C6, "'TDockedSize.?f20:.11'");
MakeComm(0x4963DF, "'TDockedSize.?f20:.11'");
MakeCode(0x4963F0);
MakeComm(0x4963F3, "'TDockedSize.?f20:.11'");
MakeComm(0x4963FD, "'TDockedSize.?f4:Pointer'");
MakeComm(0x49640A, "'TDockedSize.?f20:.11'");
MakeCode(0x496414);
MakeCode(0x49641E);
MakeCode(0x496435);
MakeCode(0x49644A);
MakeCode(0x496488);
MakeCode(0x49648D);
MakeCode(0x4964E0);
MakeCode(0x496500);
MakeCode(0x496511);
MakeCode(0x496543);
MakeCode(0x49655A);
MakeCode(0x496570);
MakeCode(0x496591);
MakeCode(0x4965A9);
MakeCode(0x4965BE);
MakeCode(0x4965C4);
MakeCode(0x4965DC);
MakeCode(0x4965F3);
MakeCode(0x496600);
MakeCode(0x496618);
MakeCode(0x496683);
MakeCode(0x496684);
MakeCode(0x496689);
MakeCode(0x4966B2);
MakeCode(0x4966DB);
MakeCode(0x4966FD);
MakeCode(0x49670A);
MakeCode(0x496738);
MakeComm(0x496741, "'TList.FCount:Integer'");
MakeCode(0x49674A);
MakeCode(0x49675F);
MakeCode(0x496767);
MakeCode(0x496770);
MakeCode(0x496775);
MakeCode(0x496777);
MakeCode(0x496784);
MakeCode(0x496799);
MakeCode(0x49679E);
MakeFunction(0x495F90, 0x4967A7);
MakeUnkn(0x4967A8, 1);
MakeNameEx(0x4967A8, "TTBCustomDockableWindow.sub_004967A8", 0x20);
MakeComm(0x4967A8, "'procedure TTBCustomDockableWindow.sub_004967A8;'");
MakeCode(0x4967A8);
MakeFunction(0x4967A8, 0x4967AB);
MakeCode(0x4967AC);
MakeCode(0x4967CD);
MakeComm(0x4967DE, "'TTBCustomDockableWindow.sub_004967A8'");
MakeComm(0x4967F0, "'TControl.FVisible:Boolean'");
MakeCode(0x496827);
MakeCode(0x49682B);
MakeFunction(0x4967AC, 0x496833);
MakeCode(0x496834);
MakeCode(0x49685F);
MakeCode(0x496874);
MakeCode(0x49689C);
MakeFunction(0x496834, 0x49689F);
MakeCode(0x4968A0);
MakeCode(0x4968B8);
MakeCode(0x4968C4);
MakeFunction(0x4968A0, 0x4968C7);
MakeUnkn(0x4968C8, 1);
MakeNameEx(0x4968C8, "TTBCustomDockableWindow.MouseDown", 0x20);
MakeComm(0x4968C8, "'procedure TTBCustomDockableWindow.MouseDown(Button:TMouseButton; Shift:TShiftState; X:Integer; Y:Integer);'");
MakeCode(0x4968C8);
MakeComm(0x49691F, "'TWinControl.GetClientRect'");
MakeComm(0x49693D, "'TTBCustomDockableWindow.sub_004967AC'");
MakeCode(0x496949);
MakeComm(0x49695F, "'0x0'");
MakeComm(0x49696E, "'TControl.MouseUp'");
MakeCode(0x496975);
MakeCode(0x49697C);
MakeFunction(0x4968C8, 0x496985);
MakeByte(0x496988);
MakeUnkn(0x496988, 1);
MakeNameEx(0x496988, "gvar_00496988", 0);
MakeUnkn(0x49698C, 1);
MakeNameEx(0x49698C, "TTBCustomDockableWindow.WMNCHitTest", 0x20);
MakeComm(0x49698C, "'procedure TTBCustomDockableWindow.WMNCHitTest(Message:TWMNCHitTest);'");
MakeCode(0x49698C);
MakeComm(0x49699E, "'TTBCustomDockableWindow.?f26C:byte'");
MakeComm(0x4969FF, "'TTBCustomDockableWindow.?f2D3:byte'");
MakeComm(0x496A08, "'TTBCustomDockableWindow.?f270:dword'");
MakeComm(0x496A1F, "'TTBCustomDockableWindow.?f280:byte'");
MakeComm(0x496A26, "'TTBCustomDockableWindow.?f270:dword'");
MakeComm(0x496A3E, "'TTBCustomDockableWindow.sub_00494808'");
MakeCode(0x496A5B);
MakeCode(0x496A62);
MakeFunction(0x49698C, 0x496A68);
MakeUnkn(0x496A68, 1);
MakeNameEx(0x496A68, "TTBCustomDockableWindow.WMNCMouseMove", 0x20);
MakeComm(0x496A68, "'procedure TTBCustomDockableWindow.WMNCMouseMove(?:?);'");
MakeCode(0x496A68);
MakeComm(0x496A74, "'TWinControl.DefaultHandler'");
MakeCode(0x496A95);
MakeCode(0x496AA6);
MakeComm(0x496AB0, "'TTBCustomDockableWindow.?f30E:byte'");
MakeComm(0x496AB8, "'TTBCustomDockableWindow.?f30E:byte'");
MakeCode(0x496AC5);
MakeFunction(0x496A68, 0x496AC8);
MakeUnkn(0x496AC8, 1);
MakeNameEx(0x496AC8, "TTBCustomDockableWindow.sub_00496AC8", 0x20);
MakeComm(0x496AC8, "'procedure TTBCustomDockableWindow.sub_00496AC8(?:?);'");
MakeCode(0x496AC8);
MakeCode(0x496AE0);
MakeComm(0x496AE6, "'TWinControl.DefaultHandler'");
MakeFunction(0x496AC8, 0x496AEC);
MakeUnkn(0x496AEC, 1);
MakeNameEx(0x496AEC, "TTBCustomDockableWindow.CMMouseLeave", 0x20);
MakeComm(0x496AEC, "'procedure TTBCustomDockableWindow.CMMouseLeave(var Message:TMessage);'");
MakeCode(0x496AEC);
MakeFunction(0x496AEC, 0x496AFF);
MakeUnkn(0x496B00, 1);
MakeNameEx(0x496B00, "TTBCustomDockableWindow.WMMouseMove", 0x20);
MakeComm(0x496B00, "'procedure TTBCustomDockableWindow.WMMouseMove(Message:TWMMouseMove);'");
MakeCode(0x496B00);
MakeFunction(0x496B00, 0x496B19);
MakeCode(0x496B1C);
MakeComm(0x496B1C, "'TTBCustomDockableWindow.?f30E:byte'");
MakeComm(0x496B25, "'TTBCustomDockableWindow.?f30E:byte'");
MakeFunction(0x496B1C, 0x496B32);
MakeCode(0x496B34);
MakeCode(0x496B56);
MakeCode(0x496B7B);
MakeFunction(0x496B34, 0x496B7E);
MakeUnkn(0x496B94, 1);
MakeNameEx(0x496B94, "TTBCustomDockableWindow.WMNCLButtonDown", 0x20);
MakeComm(0x496B94, "'procedure TTBCustomDockableWindow.WMNCLButtonDown(Message:TWMNCLButtonDown);'");
MakeCode(0x496B94);
MakeComm(0x496BBE, "'TTBCustomDockableWindow.?f280:byte'");
MakeComm(0x496BC5, "'TTBCustomDockableWindow.?f270:dword'");
MakeComm(0x496BDD, "'TTBCustomDockableWindow.sub_00494808'");
MakeCode(0x496C1A);
MakeCode(0x496C4B);
MakeCode(0x496C52);
MakeFunction(0x496B94, 0x496C58);
MakeUnkn(0x496C58, 1);
MakeNameEx(0x496C58, "TTBCustomDockableWindow.WMNCLButtonDblClk", 0x20);
MakeComm(0x496C58, "'procedure TTBCustomDockableWindow.WMNCLButtonDblClk(?:?);'");
MakeCode(0x496C58);
MakeCode(0x496C78);
MakeComm(0x496C7C, "'TWinControl.DefaultHandler'");
MakeCode(0x496C7F);
MakeFunction(0x496C58, 0x496C81);
MakeCode(0x496C84);
MakeFunction(0x496C84, 0x496CB4);
MakeUnkn(0x496CB4, 1);
MakeNameEx(0x496CB4, "TTBCustomDockableWindow.WMNCRButtonUp", 0x20);
MakeComm(0x496CB4, "'procedure TTBCustomDockableWindow.WMNCRButtonUp(?:?);'");
MakeCode(0x496CB4);
MakeFunction(0x496CB4, 0x496CC2);
MakeUnkn(0x496CC4, 1);
MakeNameEx(0x496CC4, "TTBCustomDockableWindow.WMContextMenu", 0x20);
MakeComm(0x496CC4, "'procedure TTBCustomDockableWindow.WMContextMenu(Message:TWMContextMenu);'");
MakeCode(0x496CC4);
MakeComm(0x496CE2, "'TTBCustomDockableWindow.FComponentState:TComponentState'");
MakeCode(0x496CF6);
MakeCode(0x496D3A);
MakeComm(0x496D57, "'TWinControl.GetClientRect'");
MakeCode(0x496D6C);
MakeComm(0x496D7F, "'TControl.DoContextPopup'");
MakeComm(0x496D99, "'TControl.sub_00451414'");
MakeCode(0x496DDB);
MakeCode(0x496DF0);
MakeCode(0x496DFF);
MakeFunction(0x496CC4, 0x496E07);
MakeCode(0x496E08);
MakeFunction(0x496E08, 0x496E09);
MakeUnkn(0x496E0C, 1);
MakeNameEx(0x496E0C, "TTBCustomDockableWindow.sub_00496E0C", 0x20);
MakeComm(0x496E0C, "'procedure TTBCustomDockableWindow.sub_00496E0C;'");
MakeCode(0x496E0C);
MakeFunction(0x496E0C, 0x496E12);
MakeCode(0x496E14);
MakeFunction(0x496E14, 0x496E1B);
MakeCode(0x496E1C);
MakeFunction(0x496E1C, 0x496E1F);
MakeUnkn(0x496E20, 1);
MakeNameEx(0x496E20, "TTBCustomDockableWindow.sub_00496E20", 0x20);
MakeComm(0x496E20, "'procedure TTBCustomDockableWindow.sub_00496E20;'");
MakeCode(0x496E20);
MakeFunction(0x496E20, 0x496E21);
MakeUnkn(0x496E24, 1);
MakeNameEx(0x496E24, "TTBCustomDockableWindow.sub_00496E24", 0x20);
MakeComm(0x496E24, "'procedure TTBCustomDockableWindow.sub_00496E24;'");
MakeCode(0x496E24);
MakeFunction(0x496E24, 0x496E25);
MakeUnkn(0x496E28, 1);
MakeNameEx(0x496E28, "TTBCustomDockableWindow.sub_00496E28", 0x20);
MakeComm(0x496E28, "'procedure TTBCustomDockableWindow.sub_00496E28;'");
MakeCode(0x496E28);
MakeFunction(0x496E28, 0x496E29);
MakeUnkn(0x496E2C, 1);
MakeNameEx(0x496E2C, "TTBCustomDockableWindow.sub_00496E2C", 0x20);
MakeComm(0x496E2C, "'procedure TTBCustomDockableWindow.sub_00496E2C;'");
MakeCode(0x496E2C);
MakeFunction(0x496E2C, 0x496E2D);
MakeCode(0x496E30);
MakeCode(0x496EAF);
MakeCode(0x496EBC);
MakeCode(0x496EC8);
MakeCode(0x496ECD);
MakeFunction(0x496E30, 0x496EE0);
MakeCode(0x496EE0);
MakeCode(0x496F14);
MakeCode(0x496F55);
MakeCode(0x496F5D);
MakeCode(0x496F7D);
MakeCode(0x496F89);
MakeCode(0x496FAE);
MakeCode(0x496FB6);
MakeCode(0x496FE2);
MakeCode(0x496FED);
MakeCode(0x497013);
MakeCode(0x49701C);
MakeCode(0x49704A);
MakeCode(0x497056);
MakeCode(0x497093);
MakeCode(0x49709D);
MakeFunction(0x496EE0, 0x4970A4);
MakeCode(0x4970A4);
MakeCode(0x49713C);
MakeCode(0x497154);
MakeCode(0x497168);
MakeCode(0x49716A);
MakeCode(0x49717F);
MakeCode(0x497181);
MakeCode(0x4971E5);
MakeCode(0x4971EA);
MakeCode(0x49722E);
MakeCode(0x49726B);
MakeCode(0x497285);
MakeCode(0x4972A2);
MakeCode(0x4972AD);
MakeCode(0x4972CF);
MakeCode(0x4972DE);
MakeCode(0x4972E6);
MakeCode(0x4972EF);
MakeCode(0x4972F5);
MakeCode(0x497307);
MakeCode(0x49731E);
MakeCode(0x49732B);
MakeCode(0x497343);
MakeCode(0x4973A9);
MakeCode(0x4973AA);
MakeCode(0x4973AF);
MakeCode(0x4973C6);
MakeCode(0x4973D3);
MakeCode(0x4973E0);
MakeCode(0x4973E5);
MakeCode(0x4973E7);
MakeFunction(0x4970A4, 0x4973EE);
MakeUnkn(0x4973F0, 1);
MakeNameEx(0x4973F0, "TTBCustomDockableWindow.sub_004973F0", 0x20);
MakeComm(0x4973F0, "'procedure TTBCustomDockableWindow.sub_004973F0(?:?);'");
MakeCode(0x4973F0);
MakeComm(0x4973F3, "'TTBCustomDockableWindow.FComponentState:TComponentState'");
MakeComm(0x4973F9, "'TTBCustomDockableWindow.?f2CA:word'");
MakeComm(0x49740A, "'TTBCustomDockableWindow.?f2CC:dword'");
MakeCode(0x497416);
MakeFunction(0x4973F0, 0x497418);
MakeCode(0x497418);
MakeFunction(0x497418, 0x497431);
MakeCode(0x497434);
MakeFunction(0x497434, 0x49744E);
MakeUnkn(0x497450, 1);
MakeNameEx(0x497450, "TTBToolbar.IsStoredLastDock", 0x20);
MakeComm(0x497450, "'function TTBToolbar.IsStoredLastDock(Value:TTBDock):Boolean;'");
MakeCode(0x497450);
MakeComm(0x497450, "'TTBToolbar.?f270:dword'");
MakeFunction(0x497450, 0x49745B);
MakeUnkn(0x49745C, 1);
MakeNameEx(0x49745C, "TTBCustomDockableWindow.IsStoredHeight", 0x20);
MakeComm(0x49745C, "'function TTBCustomDockableWindow.IsStoredHeight(Value:Integer):Boolean;'");
MakeCode(0x49745C);
MakeComm(0x49745C, "'TTBCustomDockableWindow.?f270:dword'");
MakeComm(0x497465, "'TTBCustomDockableWindow.?f280:byte'");
MakeCode(0x49746E);
MakeCode(0x497471);
MakeFunction(0x49745C, 0x497474);
MakeUnkn(0x497474, 1);
MakeNameEx(0x497474, "TTBToolbar.SetCloseButton", 0x20);
MakeComm(0x497474, "'procedure TTBToolbar.SetCloseButton(Value:Boolean);'");
MakeCode(0x497474);
MakeComm(0x497478, "'TTBToolbar.?f2D2:byte'");
MakeComm(0x497480, "'TTBToolbar.?f2D2:byte'");
MakeComm(0x497486, "'TTBToolbar.FParent:TWinControl'");
MakeComm(0x49749A, "'0x6'");
MakeCode(0x4974A8);
MakeFunction(0x497474, 0x4974AB);
MakeByte(0x4974AC);
MakeUnkn(0x4974AC, 1);
MakeNameEx(0x4974AC, "gvar_004974AC", 0);
MakeUnkn(0x4974B0, 1);
MakeNameEx(0x4974B0, "TTBToolbar.SetCloseButtonWhenDocked", 0x20);
MakeComm(0x4974B0, "'procedure TTBToolbar.SetCloseButtonWhenDocked(Value:Boolean);'");
MakeCode(0x4974B0);
MakeComm(0x4974B0, "'TTBToolbar.?f2D3:byte'");
MakeComm(0x4974B8, "'TTBToolbar.?f2D3:byte'");
MakeComm(0x4974BE, "'TTBToolbar.?f26C:byte'");
MakeFunction(0x4974B0, 0x4974CD);
MakeUnkn(0x4974D0, 1);
MakeNameEx(0x4974D0, "TTBToolbar.SetDefaultDock", 0x20);
MakeComm(0x4974D0, "'procedure TTBToolbar.SetDefaultDock(Value:TTBDock);'");
MakeCode(0x4974D0);
MakeComm(0x4974D0, "'TTBToolbar.?f274:TTBDock'");
MakeComm(0x4974D8, "'TTBToolbar.?f274:TTBDock'");
MakeFunction(0x4974D0, 0x4974E9);
MakeUnkn(0x4974EC, 1);
MakeNameEx(0x4974EC, "TTBToolbar.SetCurrentDock", 0x20);
MakeComm(0x4974EC, "'procedure TTBToolbar.SetCurrentDock(Value:TTBDock);'");
MakeCode(0x4974EC);
MakeComm(0x4974F2, "'TTBToolbar.FComponentState:TComponentState'");
MakeComm(0x497502, "'TTBCustomDockableWindow.SetParent'");
MakeCode(0x497507);
MakeComm(0x497514, "'TTBCustomDockableWindow.SetParent'");
MakeCode(0x497517);
MakeFunction(0x4974EC, 0x49751A);
MakeUnkn(0x49751C, 1);
MakeNameEx(0x49751C, "TTBToolbar.SetDockPos", 0x20);
MakeComm(0x49751C, "'procedure TTBToolbar.SetDockPos(Value:Integer);'");
MakeCode(0x49751C);
MakeComm(0x49751C, "'TTBToolbar.?f25C:Integer'");
MakeComm(0x497522, "'TTBToolbar.?f26C:byte'");
MakeComm(0x49752B, "'TTBToolbar.?f270:dword'");
MakeFunction(0x49751C, 0x497537);
MakeUnkn(0x497538, 1);
MakeNameEx(0x497538, "TTBToolbar.SetDockRow", 0x20);
MakeComm(0x497538, "'procedure TTBToolbar.SetDockRow(Value:Integer);'");
MakeCode(0x497538);
MakeComm(0x497538, "'TTBToolbar.?f260:Integer'");
MakeComm(0x49753E, "'TTBToolbar.?f26C:byte'");
MakeComm(0x497547, "'TTBToolbar.?f270:dword'");
MakeFunction(0x497538, 0x497553);
MakeUnkn(0x497554, 1);
MakeNameEx(0x497554, "TTBToolbar.SetAutoResize", 0x20);
MakeComm(0x497554, "'procedure TTBToolbar.SetAutoResize(Value:Boolean);'");
MakeCode(0x497554);
MakeComm(0x497554, "'TTBToolbar.?f258:byte'");
MakeComm(0x49755C, "'TTBToolbar.?f258:byte'");
MakeFunction(0x497554, 0x49756C);
MakeUnkn(0x49756C, 1);
MakeNameEx(0x49756C, "TTBToolbar.SetBorderStyle", 0x20);
MakeComm(0x49756C, "'procedure TTBToolbar.SetBorderStyle(Value:TBorderStyle);'");
MakeCode(0x49756C);
MakeComm(0x49756C, "'TTBToolbar.?f2D9:byte'");
MakeComm(0x497574, "'TTBToolbar.?f2D9:byte'");
MakeComm(0x49757A, "'TTBToolbar.?f26C:byte'");
MakeFunction(0x49756C, 0x497589);
MakeUnkn(0x49758C, 1);
MakeNameEx(0x49758C, "TTBToolbar.SetDragHandleStyle", 0x20);
MakeComm(0x49758C, "'procedure TTBToolbar.SetDragHandleStyle(Value:TTBDragHandleStyle);'");
MakeCode(0x49758C);
MakeComm(0x49758C, "'TTBToolbar.?f2DB:byte'");
MakeComm(0x497594, "'TTBToolbar.?f2DB:byte'");
MakeComm(0x49759A, "'TTBToolbar.?f26C:byte'");
MakeFunction(0x49758C, 0x4975A9);
MakeCode(0x4975AC);
MakeCode(0x497649);
MakeCode(0x497653);
MakeCode(0x49766A);
MakeCode(0x497673);
MakeCode(0x4976C5);
MakeCode(0x4976D5);
MakeCode(0x4976E2);
MakeCode(0x4976EB);
MakeCode(0x4976F0);
MakeFunction(0x4975AC, 0x4976F9);
MakeUnkn(0x4976FC, 1);
MakeNameEx(0x4976FC, "TTBToolbar.SetFloatingMode", 0x20);
MakeComm(0x4976FC, "'procedure TTBToolbar.SetFloatingMode(Value:TTBFloatingMode);'");
MakeCode(0x4976FC);
MakeComm(0x4976FF, "'TTBToolbar.?f2DD:byte'");
MakeComm(0x497707, "'TTBToolbar.?f2DD:byte'");
MakeCode(0x497728);
MakeFunction(0x4976FC, 0x49772A);
MakeCode(0x49772C);
MakeCode(0x497778);
MakeFunction(0x49772C, 0x49777E);
MakeUnkn(0x497780, 1);
MakeNameEx(0x497780, "TTBToolbar.SetFullSize", 0x20);
MakeComm(0x497780, "'procedure TTBToolbar.SetFullSize(Value:Boolean);'");
MakeCode(0x497780);
MakeComm(0x497780, "'TTBToolbar.?f2D4:byte'");
MakeComm(0x497788, "'TTBToolbar.?f2D4:byte'");
MakeComm(0x49778E, "'TTBToolbar.?f26C:byte'");
MakeComm(0x497797, "'TTBToolbar.?f270:dword'");
MakeFunction(0x497780, 0x4977A3);
MakeUnkn(0x4977A4, 1);
MakeNameEx(0x4977A4, "TTBToolbar.SetLastDock", 0x20);
MakeComm(0x4977A4, "'function TTBToolbar.SetLastDock(Value:TWinControl):?;'");
MakeCode(0x4977A4);
MakeComm(0x4977AA, "'TTBToolbar.?f2D8:byte'");
MakeComm(0x4977B3, "'TTBToolbar.?f270:dword'");
MakeComm(0x4977BC, "'TTBToolbar.?f270:dword'");
MakeComm(0x4977C2, "'TTBToolbar.?f278:TWinControl'");
MakeCode(0x4977C2);
MakeComm(0x4977CA, "'TTBToolbar.?f278:TWinControl'");
MakeComm(0x4977D4, "'TTBToolbar.FParent:TWinControl'");
MakeComm(0x4977E2, "'TTBToolbar.?f278:TWinControl'");
MakeCode(0x4977E2);
MakeComm(0x4977EC, "'TTBToolbar.?f2D8:byte'");
MakeCode(0x497807);
MakeFunction(0x4977A4, 0x49780A);
MakeUnkn(0x49780C, 1);
MakeNameEx(0x49780C, "TTBToolbar.SetResizable", 0x20);
MakeComm(0x49780C, "'procedure TTBToolbar.SetResizable(Value:Boolean);'");
MakeCode(0x49780C);
MakeComm(0x49780F, "'TTBToolbar.?f2D5:byte'");
MakeComm(0x497817, "'TTBToolbar.?f2D5:byte'");
MakeComm(0x49781D, "'TTBToolbar.?f280:byte'");
MakeComm(0x497826, "'TTBToolbar.FParent:TWinControl'");
MakeComm(0x497838, "'TTBToolbar.FParent:TWinControl'");
MakeCode(0x497840);
MakeFunction(0x49780C, 0x497842);
MakeUnkn(0x497844, 1);
MakeNameEx(0x497844, "TTBToolbar.SetShowCaption", 0x20);
MakeComm(0x497844, "'procedure TTBToolbar.SetShowCaption(Value:Boolean);'");
MakeCode(0x497844);
MakeComm(0x497847, "'TTBToolbar.?f2D6:byte'");
MakeComm(0x49784F, "'TTBToolbar.?f2D6:byte'");
MakeComm(0x497855, "'TTBToolbar.?f280:byte'");
MakeComm(0x49785E, "'TTBToolbar.FParent:TWinControl'");
MakeCode(0x49786D);
MakeFunction(0x497844, 0x49786F);
MakeUnkn(0x497870, 1);
MakeNameEx(0x497870, "TTBToolbar.SetStretch", 0x20);
MakeComm(0x497870, "'procedure TTBToolbar.SetStretch(Value:Boolean);'");
MakeCode(0x497870);
MakeComm(0x497870, "'TTBToolbar.?f2D7:byte'");
MakeComm(0x497878, "'TTBToolbar.?f2D7:byte'");
MakeComm(0x49787E, "'TTBToolbar.?f26C:byte'");
MakeComm(0x497887, "'TTBToolbar.?f270:dword'");
MakeFunction(0x497870, 0x497893);
MakeUnkn(0x497894, 1);
MakeNameEx(0x497894, "TTBToolbar.SetUseLastDock", 0x20);
MakeComm(0x497894, "'procedure TTBToolbar.SetUseLastDock(Value:Boolean);'");
MakeCode(0x497894);
MakeComm(0x497894, "'TTBToolbar.?f2D8:byte'");
MakeComm(0x49789C, "'TTBToolbar.?f2D8:byte'");
MakeComm(0x4978AF, "'TTBToolbar.?f270:dword'");
MakeCode(0x4978AF);
MakeFunction(0x497894, 0x4978BB);
MakeCode(0x4978BC);
MakeCode(0x4978F3);
MakeComm(0x49791C, "'TComponent.Name:TComponentName'");
MakeCode(0x49793C);
MakeCode(0x497940);
MakeCode(0x49794D);
MakeCode(0x497956);
MakeCode(0x49795B);
MakeFunction(0x4978BC, 0x497965);
MakeCode(0x497968);
MakeCode(0x497A52);
MakeCode(0x497AB3);
MakeCode(0x497AC8);
MakeCode(0x497AD5);
MakeCode(0x497ADE);
MakeCode(0x497AE3);
MakeFunction(0x497968, 0x497AEC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x497AF4, -1);
MakeDword(0x497AF0);
MakeDword(0x497AEC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x497B04, -1);
MakeDword(0x497B00);
MakeDword(0x497AFC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x497B14, -1);
MakeDword(0x497B10);
MakeDword(0x497B0C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x497B28, -1);
MakeDword(0x497B24);
MakeDword(0x497B20);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x497B3C, -1);
MakeDword(0x497B38);
MakeDword(0x497B34);
MakeCode(0x497B48);
MakeComm(0x497B73, "'TList.Create'");
MakeCode(0x497B9B);
MakeCode(0x497BD7);
MakeCode(0x497BDB);
MakeCode(0x497BF1);
MakeComm(0x497C17, "'TComponent.Name:TComponentName'");
MakeComm(0x497C28, "'TComponent.Name:TComponentName'");
MakeComm(0x497C53, "'TComponent.Name:TComponentName'");
MakeComm(0x497C76, "'TComponent.Name:TComponentName'");
MakeCode(0x497CBD);
MakeCode(0x497CC9);
MakeCode(0x497CD1);
MakeCode(0x497CDE);
MakeComm(0x497CE1, "'TList.FCount:Integer'");
MakeCode(0x497CEA);
MakeCode(0x497CFF);
MakeCode(0x497D08);
MakeCode(0x497D0D);
MakeCode(0x497D0F);
MakeCode(0x497D1C);
MakeCode(0x497D25);
MakeCode(0x497D2A);
MakeFunction(0x497B48, 0x497D34);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x497D3C, -1);
MakeDword(0x497D38);
MakeDword(0x497D34);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x497D48, -1);
MakeDword(0x497D44);
MakeDword(0x497D40);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x497D58, -1);
MakeDword(0x497D54);
MakeDword(0x497D50);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x497D6C, -1);
MakeDword(0x497D68);
MakeDword(0x497D64);
MakeCode(0x497D70);
MakeCode(0x497DBA);
MakeComm(0x497DE5, "'TComponent.Name:TComponentName'");
MakeCode(0x497E07);
MakeComm(0x497E4B, "'Exception.Create'");
MakeCode(0x497E57);
MakeCode(0x497E5F);
MakeCode(0x497E7C);
MakeComm(0x497E87, "'TComponent.Name:TComponentName'");
MakeComm(0x497E97, "'TComponent.Name:TComponentName'");
MakeComm(0x497EA6, "'TComponent.Name:TComponentName'");
MakeComm(0x497EB5, "'TComponent.Name:TComponentName'");
MakeComm(0x497EC7, "'TComponent.Name:TComponentName'");
MakeComm(0x497ED9, "'TComponent.Name:TComponentName'");
MakeComm(0x497EEB, "'TComponent.Name:TComponentName'");
MakeComm(0x497EFD, "'TComponent.Name:TComponentName'");
MakeCode(0x497F20);
MakeCode(0x497F2C);
MakeCode(0x497F39);
MakeCode(0x497F4F);
MakeCode(0x497F54);
MakeFunction(0x497D70, 0x497F5F);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x497F68, -1);
MakeDword(0x497F64);
MakeDword(0x497F60);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x497F74, -1);
MakeDword(0x497F70);
MakeDword(0x497F6C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x497F80, -1);
MakeDword(0x497F7C);
MakeDword(0x497F78);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x497F90, -1);
MakeDword(0x497F8C);
MakeDword(0x497F88);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x497FA4, -1);
MakeDword(0x497FA0);
MakeDword(0x497F9C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x497FB8, -1);
MakeDword(0x497FB4);
MakeDword(0x497FB0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x497FC8, -1);
MakeDword(0x497FC4);
MakeDword(0x497FC0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x497FD8, -1);
MakeDword(0x497FD4);
MakeDword(0x497FD0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x497FEC, -1);
MakeDword(0x497FE8);
MakeDword(0x497FE4);
MakeCode(0x497FF8);
MakeFunction(0x497FF8, 0x49800B);
MakeCode(0x49800C);
MakeFunction(0x49800C, 0x498030);
MakeCode(0x498030);
MakeFunction(0x498030, 0x498043);
MakeCode(0x498044);
MakeFunction(0x498044, 0x498057);
MakeCode(0x498058);
MakeComm(0x49806E, "'TRegIniFile.Create'");
MakeComm(0x498087, "'TRegIniFile.FAccess:LongWord'");
MakeCode(0x4980BD);
MakeCode(0x4980CA);
MakeCode(0x4980D3);
MakeCode(0x4980D8);
MakeFunction(0x498058, 0x4980E0);
MakeCode(0x4980E0);
MakeComm(0x4980F6, "'TRegIniFile.Create'");
MakeCode(0x498145);
MakeCode(0x498152);
MakeCode(0x49815B);
MakeCode(0x498160);
MakeFunction(0x4980E0, 0x498168);
MakeUnkn(0x498168, 1);
MakeNameEx(0x498168, "VMT_498168_TTBToolbarView", 0);
MakeDword(0x498168);
MakeDword(0x49816C);
MakeDword(0x498170);
MakeDword(0x498174);
MakeDword(0x498178);
MakeDword(0x49817C);
MakeDword(0x498180);
MakeDword(0x498184);
MakeDword(0x498188);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49820C, 0x49821B);
MakeDword(0x49818C);
MakeDword(0x498190);
MakeDword(0x498194);
MakeDword(0x498198);
MakeDword(0x49819C);
MakeDword(0x4981A0);
MakeDword(0x4981A4);
MakeDword(0x4981A8);
MakeDword(0x4981AC);
MakeDword(0x4981B0);
MakeComm(0x4981B4, "'+0'");
MakeDword(0x4981B4);
MakeComm(0x4981B8, "'+4'");
MakeDword(0x4981B8);
MakeComm(0x4981BC, "'+8'");
MakeDword(0x4981BC);
MakeComm(0x4981C0, "'+C'");
MakeDword(0x4981C0);
MakeComm(0x4981C4, "'+10'");
MakeDword(0x4981C4);
MakeComm(0x4981C8, "'+14'");
MakeDword(0x4981C8);
MakeComm(0x4981CC, "'+18'");
MakeDword(0x4981CC);
MakeComm(0x4981D0, "'+1C'");
MakeDword(0x4981D0);
MakeComm(0x4981D4, "'+20'");
MakeDword(0x4981D4);
MakeComm(0x4981D8, "'+24'");
MakeDword(0x4981D8);
MakeComm(0x4981DC, "'+28'");
MakeDword(0x4981DC);
MakeComm(0x4981E0, "'+2C'");
MakeDword(0x4981E0);
MakeComm(0x4981E4, "'+30'");
MakeDword(0x4981E4);
MakeComm(0x4981E8, "'+34'");
MakeDword(0x4981E8);
MakeComm(0x4981EC, "'+38'");
MakeDword(0x4981EC);
MakeComm(0x4981F0, "'+3C'");
MakeDword(0x4981F0);
MakeComm(0x4981F4, "'+40'");
MakeDword(0x4981F4);
MakeComm(0x4981F8, "'+44'");
MakeDword(0x4981F8);
MakeComm(0x4981FC, "'+48'");
MakeDword(0x4981FC);
MakeComm(0x498200, "'+4C'");
MakeDword(0x498200);
MakeComm(0x498204, "'+50'");
MakeDword(0x498204);
MakeComm(0x498208, "'+54'");
MakeDword(0x498208);
MakeUnkn(0x49821C, 1);
MakeNameEx(0x49821C, "RTTI_49821C_Class_TTBToolbarView", 0);
MakeDword(0x49821C);
MakeUnkn(0x498220, 1);
MakeNameEx(0x498220, "", 0);
MakeByte(0x498220);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498221, 0x498230);
MakeDword(0x498230);
MakeDword(0x498234);
MakeWord(0x498238);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49823A, 0x498245);
MakeWord(0x498245);
MakeUnkn(0x498248, 1);
MakeNameEx(0x498248, "RTTI_498248_Enumeration_TTBChevronPriorityForNewItems", 0);
MakeDword(0x498248);
MakeUnkn(0x49824C, 1);
MakeNameEx(0x49824C, "", 0);
MakeByte(0x49824C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49824D, 0x49826B);
MakeByte(0x49826B);
MakeDword(0x49826C);
MakeDword(0x498270);
MakeDword(0x498274);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498278, 0x498284);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498284, 0x49828F);
MakeUnkn(0x498304, 1);
MakeNameEx(0x498304, "VMT_498304_TTBCustomToolbar", 0);
MakeDword(0x498304);
MakeDword(0x498308);
MakeUnkn(0x4982E4, 1);
MakeNameEx(0x4982E4, "TTBCustomToolbar_IntfTable", 0);
MakeDword(0x4982E4);
MakeByte(0x4982E8);
MakeArray(0x4982E8, 16);
MakeDword(0x4982F8);
MakeDword(0x4982D4);
MakeFunction(0x4982A7, -1);
MakeCode(0x4982A7);
MakeDword(0x4982D8);
MakeFunction(0x4982B8, -1);
MakeCode(0x4982B8);
MakeDword(0x4982DC);
MakeFunction(0x4982C5, -1);
MakeCode(0x4982C5);
MakeDword(0x4982E0);
MakeFunction(0x49829D, -1);
MakeCode(0x49829D);
MakeByte(0x49829C);
MakeDword(0x4982FC);
MakeDword(0x498300);
MakeDword(0x49830C);
MakeDword(0x498310);
MakeDword(0x498314);
MakeDword(0x498318);
MakeDword(0x49831C);
MakeDword(0x498320);
MakeUnkn(0x498458, 1);
MakeNameEx(0x498458, "TTBCustomToolbar_DynamicTable", 0);
MakeWord(0x498458);
MakeWord(0x49845A);
MakeWord(0x49845C);
MakeWord(0x49845E);
MakeWord(0x498460);
MakeWord(0x498462);
MakeWord(0x498464);
MakeWord(0x498466);
MakeWord(0x498468);
MakeWord(0x49846A);
MakeWord(0x49846C);
MakeWord(0x49846E);
MakeWord(0x498470);
MakeWord(0x498472);
MakeWord(0x498474);
MakeWord(0x498476);
MakeWord(0x498478);
MakeWord(0x49847A);
MakeWord(0x49847C);
MakeWord(0x49847E);
MakeWord(0x498480);
MakeWord(0x498482);
MakeWord(0x498484);
MakeWord(0x498486);
MakeWord(0x498488);
MakeWord(0x49848A);
MakeWord(0x49848C);
MakeWord(0x49848E);
MakeWord(0x498490);
MakeWord(0x498492);
MakeWord(0x498494);
MakeWord(0x498496);
MakeWord(0x498498);
MakeDword(0x49849A);
MakeDword(0x49849E);
MakeDword(0x4984A2);
MakeDword(0x4984A6);
MakeDword(0x4984AA);
MakeDword(0x4984AE);
MakeDword(0x4984B2);
MakeDword(0x4984B6);
MakeDword(0x4984BA);
MakeDword(0x4984BE);
MakeDword(0x4984C2);
MakeDword(0x4984C6);
MakeDword(0x4984CA);
MakeDword(0x4984CE);
MakeDword(0x4984D2);
MakeDword(0x4984D6);
MakeDword(0x4984DA);
MakeDword(0x4984DE);
MakeDword(0x4984E2);
MakeDword(0x4984E6);
MakeDword(0x4984EA);
MakeDword(0x4984EE);
MakeDword(0x4984F2);
MakeDword(0x4984F6);
MakeDword(0x4984FA);
MakeDword(0x4984FE);
MakeDword(0x498502);
MakeDword(0x498506);
MakeDword(0x49850A);
MakeDword(0x49850E);
MakeDword(0x498512);
MakeDword(0x498516);
MakeDword(0x498324);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49851A, 0x49852B);
MakeDword(0x498328);
MakeDword(0x49832C);
MakeDword(0x498330);
MakeDword(0x498334);
MakeDword(0x498338);
MakeDword(0x49833C);
MakeDword(0x498340);
MakeDword(0x498344);
MakeDword(0x498348);
MakeDword(0x49834C);
MakeComm(0x498350, "'+0'");
MakeDword(0x498350);
MakeComm(0x498354, "'+4'");
MakeDword(0x498354);
MakeComm(0x498358, "'+8'");
MakeDword(0x498358);
MakeComm(0x49835C, "'+C'");
MakeDword(0x49835C);
MakeComm(0x498360, "'+10'");
MakeDword(0x498360);
MakeComm(0x498364, "'+14'");
MakeDword(0x498364);
MakeComm(0x498368, "'+18'");
MakeDword(0x498368);
MakeComm(0x49836C, "'+1C'");
MakeDword(0x49836C);
MakeComm(0x498370, "'+20'");
MakeDword(0x498370);
MakeComm(0x498374, "'+24'");
MakeDword(0x498374);
MakeComm(0x498378, "'+28'");
MakeDword(0x498378);
MakeComm(0x49837C, "'+2C'");
MakeDword(0x49837C);
MakeComm(0x498380, "'+30'");
MakeDword(0x498380);
MakeComm(0x498384, "'+34'");
MakeDword(0x498384);
MakeComm(0x498388, "'+38'");
MakeDword(0x498388);
MakeComm(0x49838C, "'+3C'");
MakeDword(0x49838C);
MakeComm(0x498390, "'+40'");
MakeDword(0x498390);
MakeComm(0x498394, "'+44'");
MakeDword(0x498394);
MakeComm(0x498398, "'+48'");
MakeDword(0x498398);
MakeComm(0x49839C, "'+4C'");
MakeDword(0x49839C);
MakeComm(0x4983A0, "'+50'");
MakeDword(0x4983A0);
MakeComm(0x4983A4, "'+54'");
MakeDword(0x4983A4);
MakeComm(0x4983A8, "'+58'");
MakeDword(0x4983A8);
MakeComm(0x4983AC, "'+5C'");
MakeDword(0x4983AC);
MakeComm(0x4983B0, "'+60'");
MakeDword(0x4983B0);
MakeComm(0x4983B4, "'+64'");
MakeDword(0x4983B4);
MakeComm(0x4983B8, "'+68'");
MakeDword(0x4983B8);
MakeComm(0x4983BC, "'+6C'");
MakeDword(0x4983BC);
MakeComm(0x4983C0, "'+70'");
MakeDword(0x4983C0);
MakeComm(0x4983C4, "'+74'");
MakeDword(0x4983C4);
MakeComm(0x4983C8, "'+78'");
MakeDword(0x4983C8);
MakeComm(0x4983CC, "'+7C'");
MakeDword(0x4983CC);
MakeComm(0x4983D0, "'+80'");
MakeDword(0x4983D0);
MakeComm(0x4983D4, "'+84'");
MakeDword(0x4983D4);
MakeComm(0x4983D8, "'+88'");
MakeDword(0x4983D8);
MakeComm(0x4983DC, "'+8C'");
MakeDword(0x4983DC);
MakeComm(0x4983E0, "'+90'");
MakeDword(0x4983E0);
MakeComm(0x4983E4, "'+94'");
MakeDword(0x4983E4);
MakeComm(0x4983E8, "'+98'");
MakeDword(0x4983E8);
MakeComm(0x4983EC, "'+9C'");
MakeDword(0x4983EC);
MakeComm(0x4983F0, "'+A0'");
MakeDword(0x4983F0);
MakeComm(0x4983F4, "'+A4'");
MakeDword(0x4983F4);
MakeComm(0x4983F8, "'+A8'");
MakeDword(0x4983F8);
MakeComm(0x4983FC, "'+AC'");
MakeDword(0x4983FC);
MakeComm(0x498400, "'+B0'");
MakeDword(0x498400);
MakeComm(0x498404, "'+B4'");
MakeDword(0x498404);
MakeComm(0x498408, "'+B8'");
MakeDword(0x498408);
MakeComm(0x49840C, "'+BC'");
MakeDword(0x49840C);
MakeComm(0x498410, "'+C0'");
MakeDword(0x498410);
MakeComm(0x498414, "'+C4'");
MakeDword(0x498414);
MakeComm(0x498418, "'+C8'");
MakeDword(0x498418);
MakeComm(0x49841C, "'+CC'");
MakeDword(0x49841C);
MakeComm(0x498420, "'+D0'");
MakeDword(0x498420);
MakeComm(0x498424, "'+D4'");
MakeDword(0x498424);
MakeComm(0x498428, "'+D8'");
MakeDword(0x498428);
MakeComm(0x49842C, "'+DC'");
MakeDword(0x49842C);
MakeComm(0x498430, "'+E0'");
MakeDword(0x498430);
MakeComm(0x498434, "'+E4'");
MakeDword(0x498434);
MakeComm(0x498438, "'+E8'");
MakeDword(0x498438);
MakeComm(0x49843C, "'+EC'");
MakeDword(0x49843C);
MakeComm(0x498440, "'+F0'");
MakeDword(0x498440);
MakeComm(0x498444, "'+F4'");
MakeDword(0x498444);
MakeComm(0x498448, "'+F8'");
MakeDword(0x498448);
MakeComm(0x49844C, "'+FC'");
MakeDword(0x49844C);
MakeComm(0x498450, "'+100'");
MakeDword(0x498450);
MakeComm(0x498454, "'+104'");
MakeDword(0x498454);
MakeUnkn(0x49852C, 1);
MakeNameEx(0x49852C, "RTTI_49852C_Class_TTBCustomToolbar", 0);
MakeDword(0x49852C);
MakeUnkn(0x498530, 1);
MakeNameEx(0x498530, "", 0);
MakeByte(0x498530);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498531, 0x498542);
MakeDword(0x498542);
MakeDword(0x498546);
MakeWord(0x49854A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49854C, 0x498557);
MakeWord(0x498557);
MakeDword(0x498559);
MakeDword(0x49855D);
MakeDword(0x498561);
MakeDword(0x498565);
MakeDword(0x498569);
MakeDword(0x49856D);
MakeWord(0x498571);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498573, 0x498578);
MakeUnkn(0x498578, 1);
MakeNameEx(0x498578, "VMT_498578_TTBToolbar", 0);
MakeDword(0x498578);
MakeDword(0x49857C);
MakeDword(0x498580);
MakeDword(0x498584);
MakeDword(0x498588);
MakeDword(0x49858C);
MakeDword(0x498590);
MakeDword(0x498594);
MakeDword(0x498598);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4986CC, 0x4986D7);
MakeDword(0x49859C);
MakeDword(0x4985A0);
MakeDword(0x4985A4);
MakeDword(0x4985A8);
MakeDword(0x4985AC);
MakeDword(0x4985B0);
MakeDword(0x4985B4);
MakeDword(0x4985B8);
MakeDword(0x4985BC);
MakeDword(0x4985C0);
MakeComm(0x4985C4, "'+0'");
MakeDword(0x4985C4);
MakeComm(0x4985C8, "'+4'");
MakeDword(0x4985C8);
MakeComm(0x4985CC, "'+8'");
MakeDword(0x4985CC);
MakeComm(0x4985D0, "'+C'");
MakeDword(0x4985D0);
MakeComm(0x4985D4, "'+10'");
MakeDword(0x4985D4);
MakeComm(0x4985D8, "'+14'");
MakeDword(0x4985D8);
MakeComm(0x4985DC, "'+18'");
MakeDword(0x4985DC);
MakeComm(0x4985E0, "'+1C'");
MakeDword(0x4985E0);
MakeComm(0x4985E4, "'+20'");
MakeDword(0x4985E4);
MakeComm(0x4985E8, "'+24'");
MakeDword(0x4985E8);
MakeComm(0x4985EC, "'+28'");
MakeDword(0x4985EC);
MakeComm(0x4985F0, "'+2C'");
MakeDword(0x4985F0);
MakeComm(0x4985F4, "'+30'");
MakeDword(0x4985F4);
MakeComm(0x4985F8, "'+34'");
MakeDword(0x4985F8);
MakeComm(0x4985FC, "'+38'");
MakeDword(0x4985FC);
MakeComm(0x498600, "'+3C'");
MakeDword(0x498600);
MakeComm(0x498604, "'+40'");
MakeDword(0x498604);
MakeComm(0x498608, "'+44'");
MakeDword(0x498608);
MakeComm(0x49860C, "'+48'");
MakeDword(0x49860C);
MakeComm(0x498610, "'+4C'");
MakeDword(0x498610);
MakeComm(0x498614, "'+50'");
MakeDword(0x498614);
MakeComm(0x498618, "'+54'");
MakeDword(0x498618);
MakeComm(0x49861C, "'+58'");
MakeDword(0x49861C);
MakeComm(0x498620, "'+5C'");
MakeDword(0x498620);
MakeComm(0x498624, "'+60'");
MakeDword(0x498624);
MakeComm(0x498628, "'+64'");
MakeDword(0x498628);
MakeComm(0x49862C, "'+68'");
MakeDword(0x49862C);
MakeComm(0x498630, "'+6C'");
MakeDword(0x498630);
MakeComm(0x498634, "'+70'");
MakeDword(0x498634);
MakeComm(0x498638, "'+74'");
MakeDword(0x498638);
MakeComm(0x49863C, "'+78'");
MakeDword(0x49863C);
MakeComm(0x498640, "'+7C'");
MakeDword(0x498640);
MakeComm(0x498644, "'+80'");
MakeDword(0x498644);
MakeComm(0x498648, "'+84'");
MakeDword(0x498648);
MakeComm(0x49864C, "'+88'");
MakeDword(0x49864C);
MakeComm(0x498650, "'+8C'");
MakeDword(0x498650);
MakeComm(0x498654, "'+90'");
MakeDword(0x498654);
MakeComm(0x498658, "'+94'");
MakeDword(0x498658);
MakeComm(0x49865C, "'+98'");
MakeDword(0x49865C);
MakeComm(0x498660, "'+9C'");
MakeDword(0x498660);
MakeComm(0x498664, "'+A0'");
MakeDword(0x498664);
MakeComm(0x498668, "'+A4'");
MakeDword(0x498668);
MakeComm(0x49866C, "'+A8'");
MakeDword(0x49866C);
MakeComm(0x498670, "'+AC'");
MakeDword(0x498670);
MakeComm(0x498674, "'+B0'");
MakeDword(0x498674);
MakeComm(0x498678, "'+B4'");
MakeDword(0x498678);
MakeComm(0x49867C, "'+B8'");
MakeDword(0x49867C);
MakeComm(0x498680, "'+BC'");
MakeDword(0x498680);
MakeComm(0x498684, "'+C0'");
MakeDword(0x498684);
MakeComm(0x498688, "'+C4'");
MakeDword(0x498688);
MakeComm(0x49868C, "'+C8'");
MakeDword(0x49868C);
MakeComm(0x498690, "'+CC'");
MakeDword(0x498690);
MakeComm(0x498694, "'+D0'");
MakeDword(0x498694);
MakeComm(0x498698, "'+D4'");
MakeDword(0x498698);
MakeComm(0x49869C, "'+D8'");
MakeDword(0x49869C);
MakeComm(0x4986A0, "'+DC'");
MakeDword(0x4986A0);
MakeComm(0x4986A4, "'+E0'");
MakeDword(0x4986A4);
MakeComm(0x4986A8, "'+E4'");
MakeDword(0x4986A8);
MakeComm(0x4986AC, "'+E8'");
MakeDword(0x4986AC);
MakeComm(0x4986B0, "'+EC'");
MakeDword(0x4986B0);
MakeComm(0x4986B4, "'+F0'");
MakeDword(0x4986B4);
MakeComm(0x4986B8, "'+F4'");
MakeDword(0x4986B8);
MakeComm(0x4986BC, "'+F8'");
MakeDword(0x4986BC);
MakeComm(0x4986C0, "'+FC'");
MakeDword(0x4986C0);
MakeComm(0x4986C4, "'+100'");
MakeDword(0x4986C4);
MakeComm(0x4986C8, "'+104'");
MakeDword(0x4986C8);
MakeUnkn(0x4986D8, 1);
MakeNameEx(0x4986D8, "RTTI_4986D8_Class_TTBToolbar", 0);
MakeDword(0x4986D8);
MakeUnkn(0x4986DC, 1);
MakeNameEx(0x4986DC, "", 0);
MakeByte(0x4986DC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4986DD, 0x4986E8);
MakeDword(0x4986E8);
MakeDword(0x4986EC);
MakeWord(0x4986F0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4986F2, 0x4986FD);
MakeWord(0x4986FD);
MakeDword(0x4986FF);
MakeDword(0x498703);
MakeDword(0x498707);
MakeDword(0x49870B);
MakeDword(0x49870F);
MakeDword(0x498713);
MakeWord(0x498717);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498719, 0x498728);
MakeDword(0x498728);
MakeDword(0x49872C);
MakeDword(0x498730);
MakeDword(0x498734);
MakeDword(0x498738);
MakeDword(0x49873C);
MakeWord(0x498740);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498742, 0x498748);
MakeDword(0x498748);
MakeDword(0x49874C);
MakeDword(0x498750);
MakeDword(0x498754);
MakeDword(0x498758);
MakeDword(0x49875C);
MakeWord(0x498760);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498762, 0x49876A);
MakeDword(0x49876A);
MakeDword(0x49876E);
MakeDword(0x498772);
MakeDword(0x498776);
MakeDword(0x49877A);
MakeDword(0x49877E);
MakeWord(0x498782);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498784, 0x49878F);
MakeDword(0x49878F);
MakeDword(0x498793);
MakeDword(0x498797);
MakeDword(0x49879B);
MakeDword(0x49879F);
MakeDword(0x4987A3);
MakeWord(0x4987A7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4987A9, 0x4987B5);
MakeDword(0x4987B5);
MakeDword(0x4987B9);
MakeDword(0x4987BD);
MakeDword(0x4987C1);
MakeDword(0x4987C5);
MakeDword(0x4987C9);
MakeWord(0x4987CD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4987CF, 0x4987D7);
MakeDword(0x4987D7);
MakeDword(0x4987DB);
MakeDword(0x4987DF);
MakeDword(0x4987E3);
MakeDword(0x4987E7);
MakeDword(0x4987EB);
MakeWord(0x4987EF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4987F1, 0x4987FD);
MakeDword(0x4987FD);
MakeDword(0x498801);
MakeDword(0x498805);
MakeDword(0x498809);
MakeDword(0x49880D);
MakeDword(0x498811);
MakeWord(0x498815);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498817, 0x498828);
MakeDword(0x498828);
MakeDword(0x49882C);
MakeDword(0x498830);
MakeDword(0x498834);
MakeDword(0x498838);
MakeDword(0x49883C);
MakeWord(0x498840);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498842, 0x49885D);
MakeDword(0x49885D);
MakeDword(0x498861);
MakeDword(0x498865);
MakeDword(0x498869);
MakeDword(0x49886D);
MakeDword(0x498871);
MakeWord(0x498875);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498877, 0x498883);
MakeDword(0x498883);
MakeDword(0x498887);
MakeDword(0x49888B);
MakeDword(0x49888F);
MakeDword(0x498893);
MakeDword(0x498897);
MakeWord(0x49889B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49889D, 0x4988B3);
MakeDword(0x4988B3);
MakeDword(0x4988B7);
MakeDword(0x4988BB);
MakeDword(0x4988BF);
MakeDword(0x4988C3);
MakeDword(0x4988C7);
MakeWord(0x4988CB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4988CD, 0x4988D3);
MakeDword(0x4988D3);
MakeDword(0x4988D7);
MakeDword(0x4988DB);
MakeDword(0x4988DF);
MakeDword(0x4988E3);
MakeDword(0x4988E7);
MakeWord(0x4988EB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4988ED, 0x4988F9);
MakeDword(0x4988F9);
MakeDword(0x4988FD);
MakeDword(0x498901);
MakeDword(0x498905);
MakeDword(0x498909);
MakeDword(0x49890D);
MakeWord(0x498911);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498913, 0x49891F);
MakeDword(0x49891F);
MakeDword(0x498923);
MakeDword(0x498927);
MakeDword(0x49892B);
MakeDword(0x49892F);
MakeDword(0x498933);
MakeWord(0x498937);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498939, 0x498944);
MakeDword(0x498944);
MakeDword(0x498948);
MakeDword(0x49894C);
MakeDword(0x498950);
MakeDword(0x498954);
MakeDword(0x498958);
MakeWord(0x49895C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49895E, 0x498967);
MakeDword(0x498967);
MakeDword(0x49896B);
MakeDword(0x49896F);
MakeDword(0x498973);
MakeDword(0x498977);
MakeDword(0x49897B);
MakeWord(0x49897F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498981, 0x498989);
MakeDword(0x498989);
MakeDword(0x49898D);
MakeDword(0x498991);
MakeDword(0x498995);
MakeDword(0x498999);
MakeDword(0x49899D);
MakeWord(0x4989A1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4989A3, 0x4989AB);
MakeDword(0x4989AB);
MakeDword(0x4989AF);
MakeDword(0x4989B3);
MakeDword(0x4989B7);
MakeDword(0x4989BB);
MakeDword(0x4989BF);
MakeWord(0x4989C3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4989C5, 0x4989D5);
MakeDword(0x4989D5);
MakeDword(0x4989D9);
MakeDword(0x4989DD);
MakeDword(0x4989E1);
MakeDword(0x4989E5);
MakeDword(0x4989E9);
MakeWord(0x4989ED);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4989EF, 0x4989FC);
MakeDword(0x4989FC);
MakeDword(0x498A00);
MakeDword(0x498A04);
MakeDword(0x498A08);
MakeDword(0x498A0C);
MakeDword(0x498A10);
MakeWord(0x498A14);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498A16, 0x498A24);
MakeDword(0x498A24);
MakeDword(0x498A28);
MakeDword(0x498A2C);
MakeDword(0x498A30);
MakeDword(0x498A34);
MakeDword(0x498A38);
MakeWord(0x498A3C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498A3E, 0x498A43);
MakeDword(0x498A43);
MakeDword(0x498A47);
MakeDword(0x498A4B);
MakeDword(0x498A4F);
MakeDword(0x498A53);
MakeDword(0x498A57);
MakeWord(0x498A5B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498A5D, 0x498A66);
MakeDword(0x498A66);
MakeDword(0x498A6A);
MakeDword(0x498A6E);
MakeDword(0x498A72);
MakeDword(0x498A76);
MakeDword(0x498A7A);
MakeWord(0x498A7E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498A80, 0x498A91);
MakeDword(0x498A91);
MakeDword(0x498A95);
MakeDword(0x498A99);
MakeDword(0x498A9D);
MakeDword(0x498AA1);
MakeDword(0x498AA5);
MakeWord(0x498AA9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498AAB, 0x498AB2);
MakeDword(0x498AB2);
MakeDword(0x498AB6);
MakeDword(0x498ABA);
MakeDword(0x498ABE);
MakeDword(0x498AC2);
MakeDword(0x498AC6);
MakeWord(0x498ACA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498ACC, 0x498AD2);
MakeDword(0x498AD2);
MakeDword(0x498AD6);
MakeDword(0x498ADA);
MakeDword(0x498ADE);
MakeDword(0x498AE2);
MakeDword(0x498AE6);
MakeWord(0x498AEA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498AEC, 0x498AF5);
MakeDword(0x498AF5);
MakeDword(0x498AF9);
MakeDword(0x498AFD);
MakeDword(0x498B01);
MakeDword(0x498B05);
MakeDword(0x498B09);
MakeWord(0x498B0D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498B0F, 0x498B1C);
MakeDword(0x498B1C);
MakeDword(0x498B20);
MakeDword(0x498B24);
MakeDword(0x498B28);
MakeDword(0x498B2C);
MakeDword(0x498B30);
MakeWord(0x498B34);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498B36, 0x498B3E);
MakeDword(0x498B3E);
MakeDword(0x498B42);
MakeDword(0x498B46);
MakeDword(0x498B4A);
MakeDword(0x498B4E);
MakeDword(0x498B52);
MakeWord(0x498B56);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498B58, 0x498B60);
MakeDword(0x498B60);
MakeDword(0x498B64);
MakeDword(0x498B68);
MakeDword(0x498B6C);
MakeDword(0x498B70);
MakeDword(0x498B74);
MakeWord(0x498B78);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498B7A, 0x498B85);
MakeDword(0x498B85);
MakeDword(0x498B89);
MakeDword(0x498B8D);
MakeDword(0x498B91);
MakeDword(0x498B95);
MakeDword(0x498B99);
MakeWord(0x498B9D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498B9F, 0x498BAE);
MakeDword(0x498BAE);
MakeDword(0x498BB2);
MakeDword(0x498BB6);
MakeDword(0x498BBA);
MakeDword(0x498BBE);
MakeDword(0x498BC2);
MakeWord(0x498BC6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498BC8, 0x498BD2);
MakeDword(0x498BD2);
MakeDword(0x498BD6);
MakeDword(0x498BDA);
MakeDword(0x498BDE);
MakeDword(0x498BE2);
MakeDword(0x498BE6);
MakeWord(0x498BEA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498BEC, 0x498BFD);
MakeDword(0x498BFD);
MakeDword(0x498C01);
MakeDword(0x498C05);
MakeDword(0x498C09);
MakeDword(0x498C0D);
MakeDword(0x498C11);
MakeWord(0x498C15);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498C17, 0x498C21);
MakeDword(0x498C21);
MakeDword(0x498C25);
MakeDword(0x498C29);
MakeDword(0x498C2D);
MakeDword(0x498C31);
MakeDword(0x498C35);
MakeWord(0x498C39);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498C3B, 0x498C47);
MakeDword(0x498C47);
MakeDword(0x498C4B);
MakeDword(0x498C4F);
MakeDword(0x498C53);
MakeDword(0x498C57);
MakeDword(0x498C5B);
MakeWord(0x498C5F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498C61, 0x498C6A);
MakeDword(0x498C6A);
MakeDword(0x498C6E);
MakeDword(0x498C72);
MakeDword(0x498C76);
MakeDword(0x498C7A);
MakeDword(0x498C7E);
MakeWord(0x498C82);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498C84, 0x498C8F);
MakeDword(0x498C8F);
MakeDword(0x498C93);
MakeDword(0x498C97);
MakeDword(0x498C9B);
MakeDword(0x498C9F);
MakeDword(0x498CA3);
MakeWord(0x498CA7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498CA9, 0x498CB4);
MakeDword(0x498CB4);
MakeDword(0x498CB8);
MakeDword(0x498CBC);
MakeDword(0x498CC0);
MakeDword(0x498CC4);
MakeDword(0x498CC8);
MakeWord(0x498CCC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498CCE, 0x498CD6);
MakeDword(0x498CD6);
MakeDword(0x498CDA);
MakeDword(0x498CDE);
MakeDword(0x498CE2);
MakeDword(0x498CE6);
MakeDword(0x498CEA);
MakeWord(0x498CEE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498CF0, 0x498CFB);
MakeDword(0x498CFB);
MakeDword(0x498CFF);
MakeDword(0x498D03);
MakeDword(0x498D07);
MakeDword(0x498D0B);
MakeDword(0x498D0F);
MakeWord(0x498D13);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498D15, 0x498D1E);
MakeDword(0x498D1E);
MakeDword(0x498D22);
MakeDword(0x498D26);
MakeDword(0x498D2A);
MakeDword(0x498D2E);
MakeDword(0x498D32);
MakeWord(0x498D36);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498D38, 0x498D46);
MakeDword(0x498D46);
MakeDword(0x498D4A);
MakeDword(0x498D4E);
MakeDword(0x498D52);
MakeDword(0x498D56);
MakeDword(0x498D5A);
MakeWord(0x498D5E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498D60, 0x498D6C);
MakeDword(0x498D6C);
MakeDword(0x498D70);
MakeDword(0x498D74);
MakeDword(0x498D78);
MakeDword(0x498D7C);
MakeDword(0x498D80);
MakeWord(0x498D84);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498D86, 0x498D8E);
MakeDword(0x498D8E);
MakeDword(0x498D92);
MakeDword(0x498D96);
MakeDword(0x498D9A);
MakeDword(0x498D9E);
MakeDword(0x498DA2);
MakeWord(0x498DA6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498DA8, 0x498DB0);
MakeDword(0x498DB0);
MakeDword(0x498DB4);
MakeDword(0x498DB8);
MakeDword(0x498DBC);
MakeDword(0x498DC0);
MakeDword(0x498DC4);
MakeWord(0x498DC8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498DCA, 0x498DD7);
MakeDword(0x498DD7);
MakeDword(0x498DDB);
MakeDword(0x498DDF);
MakeDword(0x498DE3);
MakeDword(0x498DE7);
MakeDword(0x498DEB);
MakeWord(0x498DEF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498DF1, 0x498E00);
MakeDword(0x498E00);
MakeDword(0x498E04);
MakeDword(0x498E08);
MakeDword(0x498E0C);
MakeDword(0x498E10);
MakeDword(0x498E14);
MakeWord(0x498E18);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498E1A, 0x498E25);
MakeDword(0x498E25);
MakeDword(0x498E29);
MakeDword(0x498E2D);
MakeDword(0x498E31);
MakeDword(0x498E35);
MakeDword(0x498E39);
MakeWord(0x498E3D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498E3F, 0x498E4A);
MakeDword(0x498E4A);
MakeDword(0x498E4E);
MakeDword(0x498E52);
MakeDword(0x498E56);
MakeDword(0x498E5A);
MakeDword(0x498E5E);
MakeWord(0x498E62);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498E64, 0x498E70);
MakeDword(0x498E70);
MakeDword(0x498E74);
MakeDword(0x498E78);
MakeDword(0x498E7C);
MakeDword(0x498E80);
MakeDword(0x498E84);
MakeWord(0x498E88);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498E8A, 0x498E96);
MakeDword(0x498E96);
MakeDword(0x498E9A);
MakeDword(0x498E9E);
MakeDword(0x498EA2);
MakeDword(0x498EA6);
MakeDword(0x498EAA);
MakeWord(0x498EAE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498EB0, 0x498EBA);
MakeDword(0x498EBA);
MakeDword(0x498EBE);
MakeDword(0x498EC2);
MakeDword(0x498EC6);
MakeDword(0x498ECA);
MakeDword(0x498ECE);
MakeWord(0x498ED2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498ED4, 0x498EDB);
MakeDword(0x498EDB);
MakeDword(0x498EDF);
MakeDword(0x498EE3);
MakeDword(0x498EE7);
MakeDword(0x498EEB);
MakeDword(0x498EEF);
MakeWord(0x498EF3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498EF5, 0x498F01);
MakeDword(0x498F01);
MakeDword(0x498F05);
MakeDword(0x498F09);
MakeDword(0x498F0D);
MakeDword(0x498F11);
MakeDword(0x498F15);
MakeWord(0x498F19);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498F1B, 0x498F28);
MakeDword(0x498F28);
MakeDword(0x498F2C);
MakeDword(0x498F30);
MakeDword(0x498F34);
MakeDword(0x498F38);
MakeDword(0x498F3C);
MakeWord(0x498F40);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498F42, 0x498F50);
MakeDword(0x498F50);
MakeDword(0x498F54);
MakeDword(0x498F58);
MakeDword(0x498F5C);
MakeDword(0x498F60);
MakeDword(0x498F64);
MakeWord(0x498F68);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498F6A, 0x498F79);
MakeDword(0x498F79);
MakeDword(0x498F7D);
MakeDword(0x498F81);
MakeDword(0x498F85);
MakeDword(0x498F89);
MakeDword(0x498F8D);
MakeWord(0x498F91);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498F93, 0x498FA8);
MakeDword(0x498FA8);
MakeDword(0x498FAC);
MakeDword(0x498FB0);
MakeDword(0x498FB4);
MakeDword(0x498FB8);
MakeDword(0x498FBC);
MakeWord(0x498FC0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498FC2, 0x498FCB);
MakeDword(0x498FCB);
MakeDword(0x498FCF);
MakeDword(0x498FD3);
MakeDword(0x498FD7);
MakeDword(0x498FDB);
MakeDword(0x498FDF);
MakeWord(0x498FE3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x498FE5, 0x498FF0);
MakeDword(0x498FF0);
MakeDword(0x498FF4);
MakeDword(0x498FF8);
MakeDword(0x498FFC);
MakeDword(0x499000);
MakeDword(0x499004);
MakeWord(0x499008);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49900A, 0x49901B);
MakeUnkn(0x49901C, 1);
MakeNameEx(0x49901C, "VMT_49901C_TTBChevronItem", 0);
MakeDword(0x49901C);
MakeDword(0x499020);
MakeDword(0x499024);
MakeDword(0x499028);
MakeDword(0x49902C);
MakeDword(0x499030);
MakeDword(0x499034);
MakeDword(0x499038);
MakeDword(0x49903C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4990C0, 0x4990CF);
MakeDword(0x499040);
MakeDword(0x499044);
MakeDword(0x499048);
MakeDword(0x49904C);
MakeDword(0x499050);
MakeDword(0x499054);
MakeDword(0x499058);
MakeDword(0x49905C);
MakeDword(0x499060);
MakeDword(0x499064);
MakeComm(0x499068, "'+0'");
MakeDword(0x499068);
MakeComm(0x49906C, "'+4'");
MakeDword(0x49906C);
MakeComm(0x499070, "'+8'");
MakeDword(0x499070);
MakeComm(0x499074, "'+C'");
MakeDword(0x499074);
MakeComm(0x499078, "'+10'");
MakeDword(0x499078);
MakeComm(0x49907C, "'+14'");
MakeDword(0x49907C);
MakeComm(0x499080, "'+18'");
MakeDword(0x499080);
MakeComm(0x499084, "'+1C'");
MakeDword(0x499084);
MakeComm(0x499088, "'+20'");
MakeDword(0x499088);
MakeComm(0x49908C, "'+24'");
MakeDword(0x49908C);
MakeComm(0x499090, "'+28'");
MakeDword(0x499090);
MakeComm(0x499094, "'+2C'");
MakeDword(0x499094);
MakeComm(0x499098, "'+30'");
MakeDword(0x499098);
MakeComm(0x49909C, "'+34'");
MakeDword(0x49909C);
MakeComm(0x4990A0, "'+38'");
MakeDword(0x4990A0);
MakeComm(0x4990A4, "'+3C'");
MakeDword(0x4990A4);
MakeComm(0x4990A8, "'+40'");
MakeDword(0x4990A8);
MakeComm(0x4990AC, "'+44'");
MakeDword(0x4990AC);
MakeComm(0x4990B0, "'+48'");
MakeDword(0x4990B0);
MakeComm(0x4990B4, "'+4C'");
MakeDword(0x4990B4);
MakeComm(0x4990B8, "'+50'");
MakeDword(0x4990B8);
MakeComm(0x4990BC, "'+54'");
MakeDword(0x4990BC);
MakeUnkn(0x4990D0, 1);
MakeNameEx(0x4990D0, "RTTI_4990D0_Class_TTBChevronItem", 0);
MakeDword(0x4990D0);
MakeUnkn(0x4990D4, 1);
MakeNameEx(0x4990D4, "", 0);
MakeByte(0x4990D4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4990D5, 0x4990E4);
MakeDword(0x4990E4);
MakeDword(0x4990E8);
MakeWord(0x4990EC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4990EE, 0x4990F9);
MakeWord(0x4990F9);
MakeUnkn(0x4990FC, 1);
MakeNameEx(0x4990FC, "VMT_4990FC_TTBChevronItemViewer", 0);
MakeDword(0x4990FC);
MakeDword(0x499100);
MakeDword(0x499104);
MakeDword(0x499108);
MakeDword(0x49910C);
MakeDword(0x499110);
MakeDword(0x499114);
MakeDword(0x499118);
MakeDword(0x49911C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x499194, 0x4991A9);
MakeDword(0x499120);
MakeDword(0x499124);
MakeDword(0x499128);
MakeDword(0x49912C);
MakeDword(0x499130);
MakeDword(0x499134);
MakeDword(0x499138);
MakeDword(0x49913C);
MakeDword(0x499140);
MakeDword(0x499144);
MakeComm(0x499148, "'+0'");
MakeDword(0x499148);
MakeComm(0x49914C, "'+4'");
MakeDword(0x49914C);
MakeComm(0x499150, "'+8'");
MakeDword(0x499150);
MakeComm(0x499154, "'+C'");
MakeDword(0x499154);
MakeComm(0x499158, "'+10'");
MakeDword(0x499158);
MakeComm(0x49915C, "'+14'");
MakeDword(0x49915C);
MakeComm(0x499160, "'+18'");
MakeDword(0x499160);
MakeComm(0x499164, "'+1C'");
MakeDword(0x499164);
MakeComm(0x499168, "'+20'");
MakeDword(0x499168);
MakeComm(0x49916C, "'+24'");
MakeDword(0x49916C);
MakeComm(0x499170, "'+28'");
MakeDword(0x499170);
MakeComm(0x499174, "'+2C'");
MakeDword(0x499174);
MakeComm(0x499178, "'+30'");
MakeDword(0x499178);
MakeComm(0x49917C, "'+34'");
MakeDword(0x49917C);
MakeComm(0x499180, "'+38'");
MakeDword(0x499180);
MakeComm(0x499184, "'+3C'");
MakeDword(0x499184);
MakeComm(0x499188, "'+40'");
MakeDword(0x499188);
MakeComm(0x49918C, "'+44'");
MakeDword(0x49918C);
MakeComm(0x499190, "'+48'");
MakeDword(0x499190);
MakeUnkn(0x4991AC, 1);
MakeNameEx(0x4991AC, "VMT_4991AC_TToolbarSizeData", 0);
MakeDword(0x4991AC);
MakeDword(0x4991B0);
MakeDword(0x4991B4);
MakeDword(0x4991B8);
MakeDword(0x4991BC);
MakeDword(0x4991C0);
MakeDword(0x4991C4);
MakeDword(0x4991C8);
MakeDword(0x4991CC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4991F8, 0x499209);
MakeDword(0x4991D0);
MakeDword(0x4991D4);
MakeDword(0x4991D8);
MakeDword(0x4991DC);
MakeDword(0x4991E0);
MakeDword(0x4991E4);
MakeDword(0x4991E8);
MakeDword(0x4991EC);
MakeDword(0x4991F0);
MakeDword(0x4991F4);
MakeCode(0x49920C);
MakeComm(0x49922D, "'TApplication.FMainForm:TForm'");
MakeComm(0x49924A, "'TForm.FClientHandle:HWND'");
MakeComm(0x499258, "'TForm.FClientHandle:HWND'");
MakeComm(0x499264, "'TForm.FClientHandle:HWND'");
MakeCode(0x499274);
MakeCode(0x49927D);
MakeFunction(0x49920C, 0x499283);
MakeUnkn(0x499284, 1);
MakeNameEx(0x499284, "TTBChevronItem.Create", 0x20);
MakeComm(0x499284, "'constructor TTBChevronItem.Create(AOwner:TComponent);'");
MakeCode(0x499284);
MakeCode(0x49929C);
MakeComm(0x4992C8, "'TTBChevronItem...:TTBCustomToolbar'");
MakeComm(0x4992CE, "'TTBChevronItem.?f60:word'");
MakeComm(0x4992D2, "'0x41'");
MakeComm(0x4992D9, "'TTBChevronItem.?f60:word'");
MakeComm(0x4992EA, "'TTBChevronItem.?f4C:string'");
MakeComm(0x4992F5, "'TTBChevronItem.?f4C:string'");
MakeCode(0x499312);
MakeCode(0x49931F);
MakeCode(0x49932D);
MakeCode(0x499332);
MakeCode(0x499349);
MakeFunction(0x499284, 0x499352);
MakeByte(0x499354);
MakeUnkn(0x499354, 1);
MakeNameEx(0x499354, "gvar_00499354", 0);
MakeCode(0x499358);
MakeComm(0x499358, "'TTBChevronItem....:TTBCustomToolbar'");
MakeComm(0x49935E, "'TTBCustomToolbar.?f35C:dword'");
MakeFunction(0x499358, 0x499365);
MakeCode(0x499368);
MakeFunction(0x499368, 0x499379);
MakeUnkn(0x49937C, 1);
MakeNameEx(0x49937C, "TTBChevronItemViewer.Create", 0x20);
MakeComm(0x49937C, "'constructor TTBChevronItemViewer.Create;'");
MakeCode(0x49937C);
MakeFunction(0x49937C, 0x499382);
MakeCode(0x499384);
MakeFunction(0x499384, 0x4993F4);
MakeCode(0x4993F4);
MakeComm(0x49941F, "'TTBChevronItemViewer.?f1C:dword'");
MakeCode(0x49943F);
MakeComm(0x499445, "'TTBChevronItemViewer.?f1C:dword'");
MakeComm(0x49945F, "'TTBChevronItemViewer.?f24:dword'");
MakeCode(0x49945F);
MakeCode(0x499488);
MakeCode(0x4994A4);
MakeCode(0x4994B5);
MakeComm(0x4994BC, "'TBitmap.Create'");
MakeComm(0x4994D2, "'TTBChevronItemViewer.?f24:dword'");
MakeCode(0x499500);
MakeCode(0x499520);
MakeComm(0x499539, "'TTBChevronItemViewer.?f1C:dword'");
MakeCode(0x499552);
MakeCode(0x499571);
MakeCode(0x49957E);
MakeCode(0x499587);
MakeCode(0x49958C);
MakeFunction(0x4993F4, 0x499597);
MakeCode(0x499598);
MakeCode(0x4995AA);
MakeComm(0x4995BD, "'TTBToolbarView.............:TTBCustomToolbar'");
MakeCode(0x4995FE);
MakeFunction(0x499598, 0x499607);
MakeCode(0x499608);
MakeComm(0x499612, "'TTBToolbarView..............:TTBCustomToolbar'");
MakeComm(0x499618, "'TTBToolbarView.?f3C:dword'");
MakeComm(0x49961B, "'TTBCustomToolbar.?f318:dword'");
MakeComm(0x499621, "'TTBToolbarView.?f40:dword'");
MakeComm(0x499624, "'TTBCustomToolbar.?f31C:dword'");
MakeComm(0x499639, "'TTBToolbarView...............:TTBCustomToolbar'");
MakeCode(0x499644);
MakeFunction(0x499608, 0x499649);
MakeCode(0x49964C);
MakeComm(0x499659, "'TTBToolbarView................:TTBCustomToolbar'");
MakeComm(0x499661, "'TTBCustomToolbar.?f27C:dword'");
MakeComm(0x499671, "'TTBToolbarView.................:TTBCustomToolbar'");
MakeComm(0x499677, "'TTBCustomToolbar.?f2D4:byte'");
MakeComm(0x499683, "'TTBToolbarView.?fB4:byte'");
MakeComm(0x499691, "'TTBToolbarView.?fD4:dword'");
MakeComm(0x49969C, "'TTBToolbarView.?fD4:dword'");
MakeCode(0x4996A6);
MakeComm(0x4996A9, "'TTBToolbarView.?fB4:byte'");
MakeComm(0x4996B8, "'TTBToolbarView.?fD4:dword'");
MakeComm(0x4996C3, "'TTBToolbarView.?fD4:dword'");
MakeCode(0x4996CC);
MakeComm(0x4996CF, "'TTBToolbarView..................:TTBCustomToolbar'");
MakeComm(0x4996D5, "'TTBCustomToolbar.?f328:dword'");
MakeCode(0x4996F3);
MakeCode(0x499700);
MakeComm(0x499703, "'TTBToolbarView...................:TTBCustomToolbar'");
MakeComm(0x499709, "'TTBCustomToolbar.?f328:dword'");
MakeCode(0x499710);
MakeCode(0x499715);
MakeFunction(0x49964C, 0x49971B);
MakeCode(0x49971C);
MakeComm(0x49971C, "'TTBToolbarView....................:TTBCustomToolbar'");
MakeComm(0x499724, "'TTBCustomToolbar.?f27C:dword'");
MakeFunction(0x49971C, 0x499730);
MakeCode(0x499730);
MakeComm(0x499730, "'TTBToolbarView.....................:TTBCustomToolbar'");
MakeComm(0x499736, "'TTBCustomToolbar.?f350:byte'");
MakeComm(0x49973F, "'TTBCustomToolbar.FFont:TFont'");
MakeCode(0x499743);
MakeFunction(0x499730, 0x499749);
MakeCode(0x49974C);
MakeComm(0x49974C, "'TTBToolbarView......................:TTBCustomToolbar'");
MakeComm(0x499752, "'TTBCustomToolbar.?f320:dword'");
MakeFunction(0x49974C, 0x499759);
MakeCode(0x49975C);
MakeComm(0x49975C, "'TTBToolbarView.......................:TTBCustomToolbar'");
MakeComm(0x499762, "'TTBCustomToolbar.?f354:dword'");
MakeFunction(0x49975C, 0x499769);
MakeCode(0x49976C);
MakeComm(0x49976C, "'TTBToolbarView........................:TTBCustomToolbar'");
MakeComm(0x499772, "'TTBCustomToolbar.?f358:dword'");
MakeFunction(0x49976C, 0x499779);
MakeUnkn(0x49977C, 1);
MakeNameEx(0x49977C, "TTBCustomToolbar.Create", 0x20);
MakeComm(0x49977C, "'constructor TTBCustomToolbar.Create(AOwner:TComponent);'");
MakeCode(0x49977C);
MakeCode(0x49978F);
MakeComm(0x49979D, "'TTBCustomToolbar.FControlStyle:TControlStyle'");
MakeComm(0x4997A0, "'0x8001'");
MakeComm(0x4997A6, "'0x2'");
MakeComm(0x4997B0, "'TTBCustomToolbar.FControlStyle:TControlStyle'");
MakeComm(0x4997B3, "'0x3'");
MakeComm(0x4997BC, "'TTBCustomToolbar.?f2DF:byte'");
MakeComm(0x4997C2, "'TTBCustomToolbar.?f2DF:byte'");
MakeComm(0x4997CE, "'TTBCustomToolbar.sub_00499918'");
MakeComm(0x4997DC, "'TTBCustomToolbar.?f334:dword'");
MakeComm(0x4997EE, "'TTBCustomToolbar.sub_00499928'");
MakeComm(0x4997FC, "'TTBCustomToolbar.?f320:dword'");
MakeComm(0x499802, "'TTBCustomToolbar.?f334:dword'");
MakeComm(0x49980F, "'TTBCustomToolbar.?f324:byte'");
MakeComm(0x499818, "'TTBCustomToolbar.?f334:dword'");
MakeComm(0x499824, "'TTBCustomToolbar.FComponentState:TComponentState'");
MakeComm(0x499834, "'TTBCustomToolbar.sub_00499920'");
MakeComm(0x499842, "'TTBCustomToolbar.?f35C:dword'");
MakeComm(0x49984F, "'TTBCustomToolbar.?f351:byte'");
MakeComm(0x499856, "'TTBCustomToolbar.?f34A:byte'");
MakeComm(0x49985D, "'TTBCustomToolbar.?f350:byte'");
MakeComm(0x499874, "'TTBCustomToolbar.Top:Integer'");
MakeComm(0x499877, "'TTBCustomToolbar.Left:Integer'");
MakeComm(0x49987E, "'TTBCustomDockableWindow.SetBounds'");
MakeCode(0x49989B);
MakeFunction(0x49977C, 0x4998A3);
MakeByte(0x4998A4);
MakeUnkn(0x4998A4, 1);
MakeNameEx(0x4998A4, "gvar_004998A4", 0);
MakeByte(0x4998A8);
MakeUnkn(0x4998A8, 1);
MakeNameEx(0x4998A8, "gvar_004998A8", 0);
MakeByte(0x4998AC);
MakeUnkn(0x4998AC, 1);
MakeNameEx(0x4998AC, "gvar_004998AC", 0);
MakeUnkn(0x4998B0, 1);
MakeNameEx(0x4998B0, "TTBCustomToolbar.Destroy", 0x20);
MakeComm(0x4998B0, "'destructor TTBCustomToolbar.Destroy;'");
MakeCode(0x4998B0);
MakeComm(0x4998D5, "'TTBCustomToolbar.?f35C:dword'");
MakeComm(0x4998E0, "'TTBCustomToolbar.?f320:dword'");
MakeComm(0x4998EB, "'TTBCustomToolbar.?f334:dword'");
MakeCode(0x49990D);
MakeFunction(0x4998B0, 0x499910);
MakeCode(0x499910);
MakeFunction(0x499910, 0x499917);
MakeUnkn(0x499918, 1);
MakeNameEx(0x499918, "TTBCustomToolbar.sub_00499918", 0x20);
MakeComm(0x499918, "'procedure TTBCustomToolbar.sub_00499918;'");
MakeCode(0x499918);
MakeFunction(0x499918, 0x49991E);
MakeUnkn(0x499920, 1);
MakeNameEx(0x499920, "TTBCustomToolbar.sub_00499920", 0x20);
MakeComm(0x499920, "'procedure TTBCustomToolbar.sub_00499920;'");
MakeCode(0x499920);
MakeFunction(0x499920, 0x499926);
MakeUnkn(0x499928, 1);
MakeNameEx(0x499928, "TTBCustomToolbar.sub_00499928", 0x20);
MakeComm(0x499928, "'procedure TTBCustomToolbar.sub_00499928;'");
MakeCode(0x499928);
MakeFunction(0x499928, 0x49992E);
MakeCode(0x499930);
MakeComm(0x49994F, "'TList.Create'");
MakeCode(0x499987);
MakeCode(0x49999E);
MakeCode(0x4999B3);
MakeCode(0x4999FB);
MakeCode(0x4999FF);
MakeComm(0x499A02, "'TList.FCount:Integer'");
MakeCode(0x499A0D);
MakeCode(0x499A3B);
MakeCode(0x499A3F);
MakeCode(0x499A4C);
MakeCode(0x499A55);
MakeCode(0x499A5A);
MakeCode(0x499A5C);
MakeFunction(0x499930, 0x499A62);
MakeUnkn(0x499A64, 1);
MakeNameEx(0x499A64, "TTBCustomToolbar.Loaded", 0x20);
MakeComm(0x499A64, "'procedure TTBCustomToolbar.Loaded;'");
MakeCode(0x499A64);
MakeFunction(0x499A64, 0x499A77);
MakeUnkn(0x499A78, 1);
MakeNameEx(0x499A78, "TTBCustomToolbar.GetChildren", 0x20);
MakeComm(0x499A78, "'procedure TTBCustomToolbar.GetChildren(Proc:TGetChildProc; Root:TComponent; ?:?; ?:?);'");
MakeCode(0x499A78);
MakeComm(0x499A8A, "'TTBCustomToolbar.?f334:dword'");
MakeFunction(0x499A78, 0x499AAF);
MakeUnkn(0x499AB0, 1);
MakeNameEx(0x499AB0, "TTBCustomToolbar.SetChildOrder", 0x20);
MakeComm(0x499AB0, "'procedure TTBCustomToolbar.SetChildOrder(Child:TComponent; Order:Integer);'");
MakeCode(0x499AB0);
MakeComm(0x499ACE, "'TTBCustomToolbar.?f334:dword'");
MakeCode(0x499ADD);
MakeFunction(0x499AB0, 0x499AE1);
MakeUnkn(0x499AE4, 1);
MakeNameEx(0x499AE4, "TTBCustomToolbar.AlignControls", 0x20);
MakeComm(0x499AE4, "'procedure TTBCustomToolbar.AlignControls(AControl:TControl; var Rect:TRect);'");
MakeCode(0x499AE4);
MakeComm(0x499AE4, "'TTBCustomToolbar.?f328:dword'");
MakeFunction(0x499AE4, 0x499AF3);
MakeUnkn(0x499AF4, 1);
MakeNameEx(0x499AF4, "TTBCustomToolbar.InitiateAction", 0x20);
MakeComm(0x499AF4, "'procedure TTBCustomToolbar.InitiateAction;'");
MakeCode(0x499AF4);
MakeComm(0x499AFE, "'TTBCustomToolbar.?f351:byte'");
MakeComm(0x499B07, "'TTBCustomToolbar.?f35C:dword'");
MakeCode(0x499B12);
MakeFunction(0x499AF4, 0x499B14);
MakeUnkn(0x499B14, 1);
MakeNameEx(0x499B14, "TTBCustomToolbar.CMColorChanged", 0x20);
MakeComm(0x499B14, "'procedure TTBCustomToolbar.CMColorChanged(Message:TMessage);'");
MakeCode(0x499B14);
MakeComm(0x499B15, "'TTBCustomToolbar.?f35C:dword'");
MakeComm(0x499B1F, "'TTBCustomToolbar.FColor:TColor'");
MakeCode(0x499B25);
MakeFunction(0x499B14, 0x499B2C);
MakeCode(0x499B2C);
MakeComm(0x499B59, "'TTBControlItem.Create'");
MakeCode(0x499B7A);
MakeCode(0x499BA6);
MakeComm(0x499BAD, "'TTBCustomItem.SetName'");
MakeCode(0x499BB0);
MakeCode(0x499BC0);
MakeCode(0x499BCD);
MakeCode(0x499BD6);
MakeCode(0x499BDB);
MakeFunction(0x499B2C, 0x499BE6);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x499BF0, -1);
MakeDword(0x499BEC);
MakeDword(0x499BE8);
MakeCode(0x499C00);
MakeCode(0x499C27);
MakeCode(0x499C58);
MakeCode(0x499C5C);
MakeFunction(0x499C00, 0x499C67);
MakeCode(0x499C68);
MakeCode(0x499CBE);
MakeFunction(0x499C68, 0x499CC2);
MakeUnkn(0x499CC4, 1);
MakeNameEx(0x499CC4, "TTBCustomToolbar.CMControlChange", 0x20);
MakeComm(0x499CC4, "'procedure TTBCustomToolbar.CMControlChange(?:?);'");
MakeCode(0x499CC4);
MakeComm(0x499CD5, "'TWinControl.DefaultHandler'");
MakeFunction(0x499CC4, 0x499CED);
MakeCode(0x499CF0);
MakeCode(0x499D0A);
MakeCode(0x499D2D);
MakeFunction(0x499CF0, 0x499D31);
MakeUnkn(0x499D34, 1);
MakeNameEx(0x499D34, "TTBCustomToolbar.CMControlLIstChange", 0x20);
MakeComm(0x499D34, "'procedure TTBCustomToolbar.CMControlLIstChange(Message:TMessage);'");
MakeCode(0x499D34);
MakeFunction(0x499D34, 0x499D5D);
MakeUnkn(0x499D60, 1);
MakeNameEx(0x499D60, "TTBCustomToolbar.CMHintShow", 0x20);
MakeComm(0x499D60, "'procedure TTBCustomToolbar.CMHintShow(var Message:TMessage);'");
MakeCode(0x499D60);
MakeComm(0x499D60, "'TTBCustomToolbar.?f35C:dword'");
MakeFunction(0x499D60, 0x499D6C);
MakeUnkn(0x499D6C, 1);
MakeNameEx(0x499D6C, "TTBCustomToolbar.CMShowHintChanged", 0x20);
MakeComm(0x499D6C, "'procedure TTBCustomToolbar.CMShowHintChanged(var Message:TMessage);'");
MakeCode(0x499D6C);
MakeComm(0x499D77, "'TTBCustomToolbar.FShowHint:Boolean'");
MakeComm(0x499D80, "'TTBCustomToolbar.?f35C:dword'");
MakeComm(0x499D8D, "'0x4'");
MakeComm(0x499D9C, "'TTBCustomToolbar.?f35C:dword'");
MakeCode(0x499D9C);
MakeComm(0x499DA2, "'0x4'");
MakeFunction(0x499D6C, 0x499DBA);
MakeByte(0x499DBC);
MakeUnkn(0x499DBC, 1);
MakeNameEx(0x499DBC, "gvar_00499DBC", 0);
MakeUnkn(0x499DC0, 1);
MakeNameEx(0x499DC0, "TTBCustomToolbar.sub_00499DC0", 0x20);
MakeComm(0x499DC0, "'procedure TTBCustomToolbar.sub_00499DC0(?:?);'");
MakeCode(0x499DC0);
MakeComm(0x499DC8, "'TTBCustomToolbar.?f35C:dword'");
MakeComm(0x499DDD, "'TWinControl.DefaultHandler'");
MakeCode(0x499DE0);
MakeFunction(0x499DC0, 0x499DE3);
MakeUnkn(0x499DE4, 1);
MakeNameEx(0x499DE4, "TTBCustomToolbar.WMSetCursor", 0x20);
MakeComm(0x499DE4, "'procedure TTBCustomToolbar.WMSetCursor(Message:TWMSetCursor);'");
MakeCode(0x499DE4);
MakeComm(0x499DEE, "'TTBCustomToolbar.FComponentState:TComponentState'");
MakeComm(0x499DFB, "'TTBCustomToolbar.FHandle:HWND'");
MakeComm(0x499E1C, "'TTBCustomToolbar.?f35C:dword'");
MakeComm(0x499E27, "'TTBCustomToolbar.?f35C:dword'");
MakeComm(0x499E3C, "'TTBCustomToolbar.?f35C:dword'");
MakeComm(0x499E86, "'TTBCustomToolbar.?f35C:dword'");
MakeCode(0x499EB1);
MakeCode(0x499EBA);
MakeFunction(0x499DE4, 0x499EC1);
MakeUnkn(0x499EC4, 1);
MakeNameEx(0x499EC4, "TTBCustomToolbar.WMSysCommand", 0x20);
MakeComm(0x499EC4, "'procedure TTBCustomToolbar.WMSysCommand(Message:TWMSysCommand);'");
MakeCode(0x499EC4);
MakeComm(0x499ECB, "'TTBCustomToolbar.?f33C:Boolean'");
MakeComm(0x499EDC, "'TLabel.GetEnabled'");
MakeComm(0x499EE7, "'TTBCustomToolbar.FShowing:Boolean'");
MakeCode(0x499F3C);
MakeCode(0x499F43);
MakeCode(0x499F62);
MakeCode(0x499F69);
MakeFunction(0x499EC4, 0x499F6D);
MakeCode(0x499F70);
MakeComm(0x499F77, "'TTBCustomToolbar.?f26C:byte'");
MakeComm(0x499F80, "'TTBCustomToolbar.FComponentState:TComponentState'");
MakeComm(0x499F86, "'TTBCustomToolbar.........................FCanvas:TCanvas'");
MakeComm(0x499F92, "'TWinControl.GetClientRect'");
MakeComm(0x499F97, "'TCanvas.Pen:TPen'");
MakeComm(0x499FA4, "'TCanvas.Pen:TPen'");
MakeComm(0x499FAE, "'TCanvas.Brush:TBrush'");
MakeComm(0x499FD1, "'TCanvas.Pen:TPen'");
MakeComm(0x499FD9, "'TTBCustomToolbar..........................FCanvas:TCanvas'");
MakeCode(0x499FD9);
MakeComm(0x499FDF, "'TTBCustomToolbar.?f35C:dword'");
MakeFunction(0x499F70, 0x499FF0);
MakeUnkn(0x499FF0, 1);
MakeNameEx(0x499FF0, "TTBCustomToolbar.CMDialogKey", 0x20);
MakeComm(0x499FF0, "'procedure TTBCustomToolbar.CMDialogKey(Message:TWMKey);'");
MakeCode(0x499FF0);
MakeComm(0x499FF6, "'TTBCustomToolbar.FComponentState:TComponentState'");
MakeComm(0x49A003, "'TTBCustomToolbar.?f33C:Boolean'");
MakeComm(0x49A00E, "'TTBCustomToolbar.?f35C:dword'");
MakeCode(0x49A019);
MakeFunction(0x499FF0, 0x49A025);
MakeUnkn(0x49A028, 1);
MakeNameEx(0x49A028, "TTBCustomToolbar.CMDialogChar", 0x20);
MakeComm(0x49A028, "'procedure TTBCustomToolbar.CMDialogChar(Message:TWMKey);'");
MakeCode(0x49A028);
MakeComm(0x49A02E, "'TTBCustomToolbar.FComponentState:TComponentState'");
MakeComm(0x49A034, "'TTBCustomToolbar.?f33C:Boolean'");
MakeComm(0x49A041, "'TLabel.GetEnabled'");
MakeComm(0x49A048, "'TTBCustomToolbar.FShowing:Boolean'");
MakeCode(0x49A073);
MakeFunction(0x49A028, 0x49A07F);
MakeCode(0x49A080);
MakeCode(0x49A0B1);
MakeFunction(0x49A080, 0x49A0B5);
MakeUnkn(0x49A0B8, 1);
MakeNameEx(0x49A0B8, "TTBCustomToolbar.CMMouseLeave", 0x20);
MakeComm(0x49A0B8, "'procedure TTBCustomToolbar.CMMouseLeave(Message:TMessage);'");
MakeCode(0x49A0B8);
MakeFunction(0x49A0B8, 0x49A0D1);
MakeUnkn(0x49A0D4, 1);
MakeNameEx(0x49A0D4, "TTBCustomToolbar.DoContextPopup", 0x20);
MakeComm(0x49A0D4, "'procedure TTBCustomToolbar.DoContextPopup(MousePos:TPoint; Handled:Boolean);'");
MakeCode(0x49A0D4);
MakeFunction(0x49A0D4, 0x49A0FD);
MakeUnkn(0x49A100, 1);
MakeNameEx(0x49A100, "TTBCustomToolbar.MouseMove", 0x20);
MakeComm(0x49A100, "'procedure TTBCustomToolbar.MouseMove(Shift:TShiftState; X:Integer; Y:Integer);'");
MakeCode(0x49A100);
MakeComm(0x49A113, "'TTBCustomToolbar.FComponentState:TComponentState'");
MakeComm(0x49A137, "'TTBCustomToolbar.?f35C:dword'");
MakeComm(0x49A142, "'TTBCustomToolbar.?f35C:dword'");
MakeComm(0x49A161, "'TTBCustomToolbar.Hint:string'");
MakeComm(0x49A174, "'TTBCustomToolbar.Hint:string'");
MakeCode(0x49A174);
MakeComm(0x49A181, "'TTBCustomToolbar.Hint:string'");
MakeCode(0x49A181);
MakeCode(0x49A18C);
MakeFunction(0x49A100, 0x49A1B4);
MakeUnkn(0x49A1B4, 1);
MakeNameEx(0x49A1B4, "TTBCustomToolbar.WMCancelMode", 0x20);
MakeComm(0x49A1B4, "'procedure TTBCustomToolbar.WMCancelMode(var Message:TWMCancelMode);'");
MakeCode(0x49A1B4);
MakeComm(0x49A1BE, "'TTBCustomToolbar.?f35C:dword'");
MakeCode(0x49A1D2);
MakeFunction(0x49A1B4, 0x49A1D4);
MakeUnkn(0x49A1D4, 1);
MakeNameEx(0x49A1D4, "TTBCustomToolbar.sub_0049A1D4", 0x20);
MakeComm(0x49A1D4, "'procedure TTBCustomToolbar.sub_0049A1D4(?:?);'");
MakeCode(0x49A1D4);
MakeComm(0x49A1DA, "'TTBCustomToolbar.?f330:byte'");
MakeCode(0x49A1EA);
MakeComm(0x49A1F0, "'TWinControl.DefaultHandler'");
MakeFunction(0x49A1D4, 0x49A1F6);
MakeUnkn(0x49A1F8, 1);
MakeNameEx(0x49A1F8, "TTBCustomToolbar.WMNCMouseMove", 0x20);
MakeComm(0x49A1F8, "'procedure TTBCustomToolbar.WMNCMouseMove(?:?);'");
MakeCode(0x49A1F8);
MakeComm(0x49A1FE, "'TTBCustomToolbar.Hint:string'");
MakeFunction(0x49A1F8, 0x49A21C);
MakeCode(0x49A21C);
MakeComm(0x49A233, "'TTBCustomToolbar.?f35C:dword'");
MakeComm(0x49A259, "'TTBCustomToolbar.?f35C:dword'");
MakeCode(0x49A277);
MakeComm(0x49A27A, "'TTBCustomToolbar.?f35C:dword'");
MakeComm(0x49A28B, "'TTBCustomToolbar.?f35C:dword'");
MakeComm(0x49A291, "'0x0'");
MakeCode(0x49A2A2);
MakeComm(0x49A2AE, "'TTBCustomToolbar.?f35C:dword'");
MakeCode(0x49A2D2);
MakeCode(0x49A2DC);
MakeComm(0x49A2E5, "'TTBCustomToolbar.?f35C:dword'");
MakeComm(0x49A2F6, "'TTBCustomToolbar.?f35C:dword'");
MakeComm(0x49A2FC, "'0x2'");
MakeCode(0x49A30A);
MakeComm(0x49A30D, "'TTBCustomToolbar.?f33C:Boolean'");
MakeComm(0x49A319, "'TTBCustomToolbar.?f35C:dword'");
MakeComm(0x49A32A, "'TTBCustomToolbar.?f35C:dword'");
MakeComm(0x49A330, "'0x0'");
MakeCode(0x49A33E);
MakeCode(0x49A345);
MakeCode(0x49A349);
MakeCode(0x49A356);
MakeComm(0x49A35F, "'TTBCustomToolbar.?f35C:dword'");
MakeCode(0x49A36C);
MakeCode(0x49A36D);
MakeCode(0x49A372);
MakeCode(0x49A374);
MakeFunction(0x49A21C, 0x49A37D);
MakeByte(0x49A380);
MakeUnkn(0x49A380, 1);
MakeNameEx(0x49A380, "gvar_0049A380", 0);
MakeByte(0x49A384);
MakeUnkn(0x49A384, 1);
MakeNameEx(0x49A384, "gvar_0049A384", 0);
MakeUnkn(0x49A388, 1);
MakeNameEx(0x49A388, "TTBCustomToolbar.MouseDown", 0x20);
MakeComm(0x49A388, "'procedure TTBCustomToolbar.MouseDown(Button:TMouseButton; Shift:TShiftState; X:Integer; Y:Integer);'");
MakeCode(0x49A388);
MakeComm(0x49A39F, "'TTBCustomToolbar.FParent:TWinControl'");
MakeComm(0x49A3B8, "'TTBCustomToolbar.FParent:TWinControl'");
MakeComm(0x49A3C4, "'TTBCustomToolbar.FComponentState:TComponentState'");
MakeComm(0x49A3F7, "'TTBCustomToolbar.?f35C:dword'");
MakeComm(0x49A407, "'TTBCustomToolbar.?f35C:dword'");
MakeComm(0x49A423, "'TTBCustomToolbar.?f330:byte'");
MakeComm(0x49A43B, "'TTBCustomToolbar.?f35C:dword'");
MakeComm(0x49A441, "'0x1'");
MakeCode(0x49A44D);
MakeCode(0x49A45A);
MakeComm(0x49A45D, "'TTBCustomToolbar.?f330:byte'");
MakeCode(0x49A465);
MakeCode(0x49A46A);
MakeCode(0x49A46C);
MakeFunction(0x49A388, 0x49A475);
MakeByte(0x49A478);
MakeUnkn(0x49A478, 1);
MakeNameEx(0x49A478, "gvar_0049A478", 0);
MakeUnkn(0x49A47C, 1);
MakeNameEx(0x49A47C, "TTBCustomToolbar.CMFontChanged", 0x20);
MakeComm(0x49A47C, "'procedure TTBCustomToolbar.CMFontChanged(var Message:TMessage);'");
MakeCode(0x49A47C);
MakeComm(0x49A486, "'TTBCustomToolbar.?f350:byte'");
MakeCode(0x49A496);
MakeFunction(0x49A47C, 0x49A498);
MakeUnkn(0x49A498, 1);
MakeNameEx(0x49A498, "TTBToolbar.GetChevronHint", 0x20);
MakeComm(0x49A498, "'procedure TTBToolbar.GetChevronHint(?:?);'");
MakeCode(0x49A498);
MakeComm(0x49A4A0, "'TTBToolbar.?f320:dword'");
MakeFunction(0x49A498, 0x49A4B1);
MakeUnkn(0x49A4B4, 1);
MakeNameEx(0x49A4B4, "TTBToolbar.SetChevronHint", 0x20);
MakeComm(0x49A4B4, "'procedure TTBToolbar.SetChevronHint(Value:string);'");
MakeCode(0x49A4B4);
MakeComm(0x49A4CF, "'TTBToolbar.?f320:dword'");
MakeComm(0x49A4F7, "'TTBToolbar.?f320:dword'");
MakeCode(0x49A502);
MakeCode(0x49A50F);
MakeCode(0x49A51D);
MakeCode(0x49A522);
MakeFunction(0x49A4B4, 0x49A52A);
MakeUnkn(0x49A52C, 1);
MakeNameEx(0x49A52C, "TTBToolbar.SetChevronMoveItems", 0x20);
MakeComm(0x49A52C, "'procedure TTBToolbar.SetChevronMoveItems(Value:Boolean);'");
MakeCode(0x49A52C);
MakeComm(0x49A52C, "'TTBToolbar.?f324:byte'");
MakeComm(0x49A534, "'TTBToolbar.?f324:byte'");
MakeComm(0x49A53E, "'TTBToolbar.FComponentState:TComponentState'");
MakeCode(0x49A544);
MakeCode(0x49A548);
MakeComm(0x49A54A, "'TTBToolbar.?f35C:dword'");
MakeCode(0x49A54A);
MakeFunction(0x49A52C, 0x49A556);
MakeUnkn(0x49A558, 1);
MakeNameEx(0x49A558, "TTBToolbar.SetChevronPriorityForNewItems", 0x20);
MakeComm(0x49A558, "'procedure TTBToolbar.SetChevronPriorityForNewItems(Value:TTBChevronPriorityForNewItems);'");
MakeCode(0x49A558);
MakeComm(0x49A558, "'TTBToolbar.?f325:byte'");
MakeComm(0x49A563, "'TTBToolbar.?f35C:dword'");
MakeFunction(0x49A558, 0x49A570);
MakeUnkn(0x49A570, 1);
MakeNameEx(0x49A570, "TTBToolbar.IsStoredChevronHint", 0x20);
MakeComm(0x49A570, "'function TTBToolbar.IsStoredChevronHint(Value:string):Boolean;'");
MakeCode(0x49A570);
MakeComm(0x49A58A, "'TTBToolbar.?f320:dword'");
MakeCode(0x49A5A7);
MakeCode(0x49A5B4);
MakeCode(0x49A5BD);
MakeCode(0x49A5C2);
MakeFunction(0x49A570, 0x49A5CB);
MakeUnkn(0x49A5CC, 1);
MakeNameEx(0x49A5CC, "TTBToolbar.GetImages", 0x20);
MakeComm(0x49A5CC, "'function TTBToolbar.GetImages:?;'");
MakeCode(0x49A5CC);
MakeComm(0x49A5CC, "'TTBToolbar.?f334:dword'");
MakeFunction(0x49A5CC, 0x49A5D9);
MakeUnkn(0x49A5DC, 1);
MakeNameEx(0x49A5DC, "TTBToolbar.SetImages", 0x20);
MakeComm(0x49A5DC, "'procedure TTBToolbar.SetImages(Value:TCustomImageList);'");
MakeCode(0x49A5DC);
MakeComm(0x49A5DC, "'TTBToolbar.?f334:dword'");
MakeFunction(0x49A5DC, 0x49A5E8);
MakeUnkn(0x49A5E8, 1);
MakeNameEx(0x49A5E8, "TTBToolbar.GetLinkSubitems", 0x20);
MakeComm(0x49A5E8, "'function TTBToolbar.GetLinkSubitems:?;'");
MakeCode(0x49A5E8);
MakeComm(0x49A5E8, "'TTBToolbar.?f334:dword'");
MakeFunction(0x49A5E8, 0x49A5F5);
MakeUnkn(0x49A5F8, 1);
MakeNameEx(0x49A5F8, "TTBToolbar.SetLinkSubitems", 0x20);
MakeComm(0x49A5F8, "'procedure TTBToolbar.SetLinkSubitems(Value:TTBCustomItem);'");
MakeCode(0x49A5F8);
MakeComm(0x49A5F8, "'TTBToolbar.?f334:dword'");
MakeFunction(0x49A5F8, 0x49A604);
MakeUnkn(0x49A604, 1);
MakeNameEx(0x49A604, "TTBToolbar.SetMenuBar", 0x20);
MakeComm(0x49A604, "'procedure TTBToolbar.SetMenuBar(Value:Boolean);'");
MakeCode(0x49A604);
MakeComm(0x49A60B, "'TTBToolbar.?f33C:Boolean'");
MakeComm(0x49A617, "'TTBToolbar.?f33C:Boolean'");
MakeComm(0x49A621, "'0x10000'");
MakeComm(0x49A626, "'TTBToolbar.FControlStyle:TControlStyle'");
MakeComm(0x49A629, "'TTBToolbar.FControlStyle:TControlStyle'");
MakeComm(0x49A62C, "'TTBToolbar.?f35C:dword'");
MakeComm(0x49A639, "'0x3'");
MakeComm(0x49A647, "'0x10000'");
MakeCode(0x49A647);
MakeComm(0x49A64E, "'TTBToolbar.FControlStyle:TControlStyle'");
MakeComm(0x49A651, "'TTBToolbar.FControlStyle:TControlStyle'");
MakeComm(0x49A654, "'TTBToolbar.?f35C:dword'");
MakeComm(0x49A65A, "'0x3'");
MakeComm(0x49A66F, "'TTBToolbar.FComponentState:TComponentState'");
MakeCode(0x49A66F);
MakeCode(0x49A68D);
MakeCode(0x49A696);
MakeCode(0x49A6AB);
MakeComm(0x49A6AF, "'TTBToolbar.FComponentState:TComponentState'");
MakeComm(0x49A6BA, "'0x10'");
MakeCode(0x49A6CA);
MakeCode(0x49A6D6);
MakeCode(0x49A6DD);
MakeFunction(0x49A604, 0x49A6E1);
MakeByte(0x49A6E4);
MakeUnkn(0x49A6E4, 1);
MakeNameEx(0x49A6E4, "gvar_0049A6E4", 0);
MakeByte(0x49A6E8);
MakeUnkn(0x49A6E8, 1);
MakeNameEx(0x49A6E8, "gvar_0049A6E8", 0);
MakeByte(0x49A6EC);
MakeUnkn(0x49A6EC, 1);
MakeNameEx(0x49A6EC, "gvar_0049A6EC", 0);
MakeUnkn(0x49A6F0, 1);
MakeNameEx(0x49A6F0, "TTBToolbar.GetOptions", 0x20);
MakeComm(0x49A6F0, "'function TTBToolbar.GetOptions:?;'");
MakeCode(0x49A6F0);
MakeComm(0x49A6F0, "'TTBToolbar.?f334:dword'");
MakeFunction(0x49A6F0, 0x49A6FD);
MakeUnkn(0x49A700, 1);
MakeNameEx(0x49A700, "TTBToolbar.SetOptions", 0x20);
MakeComm(0x49A700, "'procedure TTBToolbar.SetOptions(Value:TTBItemOptions);'");
MakeCode(0x49A700);
MakeComm(0x49A709, "'TTBToolbar.?f334:dword'");
MakeFunction(0x49A700, 0x49A716);
MakeUnkn(0x49A718, 1);
MakeNameEx(0x49A718, "TTBToolbar.SetProcessShortCuts", 0x20);
MakeComm(0x49A718, "'procedure TTBToolbar.SetProcessShortCuts(Value:Boolean);'");
MakeCode(0x49A718);
MakeComm(0x49A718, "'TTBToolbar.?f348:byte'");
MakeComm(0x49A720, "'TTBToolbar.?f348:byte'");
MakeFunction(0x49A718, 0x49A72C);
MakeUnkn(0x49A72C, 1);
MakeNameEx(0x49A72C, "TTBToolbar.SetSystemFont", 0x20);
MakeComm(0x49A72C, "'procedure TTBToolbar.SetSystemFont(Value:Boolean);'");
MakeCode(0x49A72C);
MakeComm(0x49A72C, "'TTBToolbar.?f350:byte'");
MakeComm(0x49A734, "'TTBToolbar.?f350:byte'");
MakeFunction(0x49A72C, 0x49A740);
MakeUnkn(0x49A740, 1);
MakeNameEx(0x49A740, "TTBToolbar.SetShrinkMode", 0x20);
MakeComm(0x49A740, "'procedure TTBToolbar.SetShrinkMode(Value:TTBShrinkMode);'");
MakeCode(0x49A740);
MakeComm(0x49A740, "'TTBToolbar.?f34A:byte'");
MakeComm(0x49A748, "'TTBToolbar.?f34A:byte'");
MakeComm(0x49A74E, "'TTBToolbar.?f26C:byte'");
MakeComm(0x49A757, "'TTBToolbar.?f270:dword'");
MakeComm(0x49A764, "'TTBToolbar.?f280:byte'");
MakeCode(0x49A764);
MakeFunction(0x49A740, 0x49A773);
MakeUnkn(0x49A774, 1);
MakeNameEx(0x49A774, "TTBToolbar.SetFloatingWidth", 0x20);
MakeComm(0x49A774, "'procedure TTBToolbar.SetFloatingWidth(Value:Integer);'");
MakeCode(0x49A774);
MakeComm(0x49A777, "'TTBToolbar.?f32C:Integer'");
MakeComm(0x49A77F, "'TTBToolbar.?f32C:Integer'");
MakeComm(0x49A785, "'TTBToolbar.?f280:byte'");
MakeCode(0x49A79C);
MakeFunction(0x49A774, 0x49A79E);
MakeCode(0x49A7A0);
MakeCode(0x49A7B3);
MakeCode(0x49A7DF);
MakeCode(0x49A7F5);
MakeCode(0x49A7F7);
MakeFunction(0x49A7A0, 0x49A7FA);
MakeCode(0x49A7FC);
MakeCode(0x49A830);
MakeCode(0x49A839);
MakeCode(0x49A841);
MakeCode(0x49A843);
MakeFunction(0x49A7FC, 0x49A848);
MakeCode(0x49A848);
MakeComm(0x49A84C, "'TTBToolbar.?f280:byte'");
MakeComm(0x49A853, "'TTBToolbar.?f270:dword'");
MakeComm(0x49A868, "'TTBToolbar.?f35C:dword'");
MakeComm(0x49A87B, "'TTBToolbar.?f270:dword'");
MakeComm(0x49A885, "'TTBToolbar.?f280:byte'");
MakeComm(0x49A88E, "'TTBToolbar.?f35C:dword'");
MakeCode(0x49A88E);
MakeComm(0x49A8A4, "'TTBToolbar.?f35C:dword'");
MakeComm(0x49A8AD, "'TTBToolbar.?f270:dword'");
MakeComm(0x49A8BA, "'TTBToolbar.?f35C:dword'");
MakeComm(0x49A8C9, "'TTBToolbar.?f35C:dword'");
MakeCode(0x49A8C9);
MakeComm(0x49A8DC, "'TTBToolbar.?f258:byte'");
MakeComm(0x49A8E5, "'TTBToolbar.FAnchors:TAnchors'");
MakeComm(0x49A8EB, "'TTBToolbar.FAnchors:TAnchors'");
MakeComm(0x49A8F1, "'TTBToolbar.?f34A:byte'");
MakeCode(0x49A8F1);
MakeComm(0x49A903, "'TTBToolbar.Width:Integer'");
MakeComm(0x49A908, "'TTBToolbar.?f35C:dword'");
MakeCode(0x49A913);
MakeComm(0x49A91E, "'TTBToolbar.Width:Integer'");
MakeComm(0x49A923, "'TTBToolbar.?f35C:dword'");
MakeCode(0x49A92F);
MakeFunction(0x49A848, 0x49A932);
MakeUnkn(0x49A934, 1);
MakeNameEx(0x49A934, "TTBCustomToolbar.sub_00493DDC", 0x20);
MakeComm(0x49A934, "'procedure TTBCustomToolbar.sub_00493DDC(?:?);'");
MakeCode(0x49A934);
MakeComm(0x49A94E, "'TTBCustomToolbar.Name:TComponentName'");
MakeFunction(0x49A934, 0x49A95F);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49A968, -1);
MakeDword(0x49A964);
MakeDword(0x49A960);
MakeUnkn(0x49A974, 1);
MakeNameEx(0x49A974, "TTBCustomToolbar.sub_00493DE4", 0x20);
MakeComm(0x49A974, "'procedure TTBCustomToolbar.sub_00493DE4(?:?);'");
MakeCode(0x49A974);
MakeComm(0x49A987, "'TTBCustomToolbar.?f32C:Integer'");
MakeComm(0x49A992, "'TTBCustomToolbar.Name:TComponentName'");
MakeFunction(0x49A974, 0x49A99A);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49A9A4, -1);
MakeDword(0x49A9A0);
MakeDword(0x49A99C);
MakeCode(0x49A9B0);
MakeComm(0x49A9BF, "'TTBCustomToolbar.?f26C:byte'");
MakeComm(0x49A9CA, "'TTBCustomToolbar.?f268:dword'");
MakeComm(0x49A9D0, "'TTBCustomToolbar.?f270:dword'");
MakeComm(0x49A9DB, "'TTBCustomToolbar.?f270:dword'");
MakeCode(0x49A9F5);
MakeCode(0x49A9F7);
MakeFunction(0x49A9B0, 0x49A9FA);
MakeCode(0x49A9FC);
MakeComm(0x49AA02, "'TTBCustomToolbar.?f35C:dword'");
MakeComm(0x49AA0D, "'TTBCustomToolbar.?f318:dword'");
MakeComm(0x49AA15, "'TTBCustomToolbar.?f31C:dword'");
MakeFunction(0x49A9FC, 0x49AA21);
MakeCode(0x49AA24);
MakeComm(0x49AA47, "'TTBCustomToolbar.?f35C:dword'");
MakeCode(0x49AA54);
MakeComm(0x49AA94, "'TTBCustomToolbar.?f338:dword'");
MakeComm(0x49AAA1, "'TTBCustomToolbar.?f35C:dword'");
MakeCode(0x49AAAC);
MakeFunction(0x49AA24, 0x49AAB5);
MakeCode(0x49AAB8);
MakeComm(0x49AAD4, "'TTBCustomToolbar.FComponentState:TComponentState'");
MakeComm(0x49AAE9, "'TTBCustomToolbar.?f35C:dword'");
MakeComm(0x49AAF4, "'TTBCustomToolbar.?f35C:dword'");
MakeCode(0x49AB10);
MakeFunction(0x49AAB8, 0x49AB16);
MakeUnkn(0x49AB18, 1);
MakeNameEx(0x49AB18, "TTBCustomToolbar.sub_0049AB18", 0x20);
MakeComm(0x49AB18, "'procedure TTBCustomToolbar.sub_0049AB18(?:?);'");
MakeCode(0x49AB18);
MakeComm(0x49AB2C, "'TTBCustomToolbar.?f35C:dword'");
MakeComm(0x49AB45, "'TTBCustomToolbar.?f32C:Integer'");
MakeComm(0x49AB61, "'TTBCustomToolbar.?f32C:Integer'");
MakeComm(0x49AB78, "'TTBCustomToolbar.sub_0049AA24'");
MakeCode(0x49ABAD);
MakeComm(0x49ABB0, "'TTBCustomToolbar.?f32C:Integer'");
MakeComm(0x49ABC7, "'TTBCustomToolbar.sub_0049AA24'");
MakeComm(0x49ABF1, "'TTBCustomToolbar.?f338:dword'");
MakeCode(0x49AC09);
MakeCode(0x49AC1B);
MakeComm(0x49AC1E, "'TTBCustomToolbar.?f338:dword'");
MakeCode(0x49AC2A);
MakeCode(0x49AC2C);
MakeCode(0x49AC35);
MakeCode(0x49AC42);
MakeComm(0x49AC48, "'TTBCustomToolbar.?f32C:Integer'");
MakeCode(0x49AC4F);
MakeCode(0x49AC54);
MakeFunction(0x49AB18, 0x49AC5C);
MakeCode(0x49AC5C);
MakeFunction(0x49AC5C, 0x49AC76);
MakeCode(0x49AC78);
MakeFunction(0x49AC78, 0x49AC92);
MakeUnkn(0x49AC94, 1);
MakeNameEx(0x49AC94, "TTBCustomToolbar.sub_00496E20", 0x20);
MakeComm(0x49AC94, "'procedure TTBCustomToolbar.sub_00496E20(?:?);'");
MakeCode(0x49AC94);
MakeComm(0x49ACB2, "'TToolbarSizeData.Create'");
MakeComm(0x49ACB9, "'TTBCustomToolbar.?f34C:TToolbarSizeData'");
MakeComm(0x49ACC3, "'TToolbarSizeData.?f4:byte'");
MakeComm(0x49ACC6, "'TTBCustomToolbar.FParent:TWinControl'");
MakeComm(0x49ACC9, "'TWinControl.Width:Integer'");
MakeComm(0x49ACCC, "'TToolbarSizeData.?fC:Integer'");
MakeComm(0x49ACCF, "'TTBCustomToolbar.FParent:TWinControl'");
MakeComm(0x49ACD2, "'TWinControl.Height:Integer'");
MakeComm(0x49ACD5, "'TToolbarSizeData.?f10:Integer'");
MakeComm(0x49ACF8, "'TTBCustomToolbar.FParent:TWinControl'");
MakeComm(0x49ACFE, "'TToolbarSizeData.?f14:dword'");
MakeComm(0x49AD01, "'TTBCustomToolbar.?f32C:Integer'");
MakeComm(0x49AD07, "'TToolbarSizeData.?f18:Integer'");
MakeComm(0x49AD0A, "'TToolbarSizeData.?f1C:byte'");
MakeComm(0x49AD0E, "'TToolbarSizeData.?f1D:byte'");
MakeComm(0x49AD19, "'TList.Create'");
MakeComm(0x49AD20, "'TToolbarSizeData.?f8:TList'");
MakeComm(0x49AD2B, "'TTBCustomToolbar.sub_0049AB18'");
MakeComm(0x49AD30, "'TToolbarSizeData.?f8:TList'");
MakeComm(0x49AD33, "'TList.FCount:Integer'");
MakeCode(0x49AD3E);
MakeComm(0x49AD40, "'TToolbarSizeData.?f8:TList'");
MakeComm(0x49AD9B, "'TToolbarSizeData.?f8:TList'");
MakeCode(0x49ADA7);
MakeCode(0x49ADB3);
MakeComm(0x49ADB8, "'TToolbarSizeData.?f8:TList'");
MakeCode(0x49ADC2);
MakeComm(0x49ADC7, "'TToolbarSizeData.?f8:TList'");
MakeCode(0x49ADCF);
MakeComm(0x49ADD1, "'TToolbarSizeData.?f20:dword'");
MakeComm(0x49ADD6, "'TToolbarSizeData.?f24:dword'");
MakeComm(0x49ADD9, "'TToolbarSizeData.?f8:TList'");
MakeComm(0x49ADDC, "'TList.FCount:Integer'");
MakeCode(0x49ADEB);
MakeComm(0x49ADED, "'TToolbarSizeData.?f8:TList'");
MakeComm(0x49AE06, "'TToolbarSizeData.?fC:Integer'");
MakeComm(0x49AE14, "'TToolbarSizeData.?f10:Integer'");
MakeComm(0x49AE24, "'TToolbarSizeData.?f8:TList'");
MakeCode(0x49AE49);
MakeCode(0x49AE55);
MakeComm(0x49AE5F, "'TToolbarSizeData.?f24:dword'");
MakeCode(0x49AE5F);
MakeComm(0x49AE62, "'TToolbarSizeData.?f8:TList'");
MakeCode(0x49AE62);
MakeComm(0x49AE65, "'TList.FCount:Integer'");
MakeCode(0x49AE96);
MakeCode(0x49AEA2);
MakeComm(0x49AEAC, "'TToolbarSizeData.?f20:dword'");
MakeCode(0x49AEAC);
MakeCode(0x49AEB1);
MakeCode(0x49AEB9);
MakeFunction(0x49AC94, 0x49AEC1);
MakeUnkn(0x49AEC4, 1);
MakeNameEx(0x49AEC4, "TTBCustomToolbar.sub_00496E24", 0x20);
MakeComm(0x49AEC4, "'procedure TTBCustomToolbar.sub_00496E24(?:?; ?:?);'");
MakeCode(0x49AEC4);
MakeComm(0x49AEDE, "'TTBCustomToolbar.?f34C:TToolbarSizeData'");
MakeComm(0x49AEF7, "'TToolbarSizeData.?f4:byte'");
MakeComm(0x49AF04, "'TToolbarSizeData.?fC:Integer'");
MakeComm(0x49AF0C, "'TToolbarSizeData.?f10:Integer'");
MakeCode(0x49AF0C);
MakeComm(0x49AF12, "'TToolbarSizeData.?f1C:byte'");
MakeCode(0x49AF12);
MakeComm(0x49AF18, "'TToolbarSizeData.?f1D:byte'");
MakeComm(0x49AF1D, "'TToolbarSizeData.?f1C:byte'");
MakeCode(0x49AF1D);
MakeComm(0x49AF21, "'TToolbarSizeData.?f1D:byte'");
MakeComm(0x49AF24, "'TToolbarSizeData.?f4:byte'");
MakeComm(0x49AF2C, "'TToolbarSizeData.?fC:Integer'");
MakeComm(0x49AF3E, "'TToolbarSizeData.?f24:dword'");
MakeComm(0x49AF4B, "'TToolbarSizeData.?f10:Integer'");
MakeCode(0x49AF4B);
MakeComm(0x49AF5D, "'TToolbarSizeData.?f24:dword'");
MakeCode(0x49AF68);
MakeComm(0x49AF73, "'TToolbarSizeData.?f4:byte'");
MakeComm(0x49AF7F, "'TToolbarSizeData.?fC:Integer'");
MakeCode(0x49AF87);
MakeComm(0x49AF8B, "'TToolbarSizeData.?f10:Integer'");
MakeCode(0x49AF91);
MakeComm(0x49AF99, "'TToolbarSizeData.?f8:TList'");
MakeCode(0x49AF99);
MakeComm(0x49AF9C, "'TList.FCount:Integer'");
MakeCode(0x49AFA0);
MakeComm(0x49AFA2, "'TToolbarSizeData.?f8:TList'");
MakeComm(0x49AFB6, "'TToolbarSizeData.?f4:byte'");
MakeComm(0x49AFC6, "'TToolbarSizeData.?f8:TList'");
MakeComm(0x49AFC9, "'TList.FCount:Integer'");
MakeCode(0x49AFDC);
MakeCode(0x49AFF7);
MakeComm(0x49AFFD, "'TToolbarSizeData.?f18:Integer'");
MakeCode(0x49B002);
MakeComm(0x49B007, "'TToolbarSizeData.?f14:dword'");
MakeComm(0x49B00E, "'TToolbarSizeData.?f18:Integer'");
MakeComm(0x49B011, "'TToolbarSizeData.?f4:byte'");
MakeCode(0x49B011);
MakeCode(0x49B025);
MakeCode(0x49B031);
MakeComm(0x49B04F, "'TToolbarSizeData.?f1C:byte'");
MakeCode(0x49B057);
MakeComm(0x49B05B, "'TToolbarSizeData.?f8:TList'");
MakeComm(0x49B05E, "'TList.FCount:Integer'");
MakeCode(0x49B071);
MakeComm(0x49B084, "'TToolbarSizeData.?f8:TList'");
MakeCode(0x49B084);
MakeComm(0x49B087, "'TList.FCount:Integer'");
MakeComm(0x49B091, "'TToolbarSizeData.?f18:Integer'");
MakeCode(0x49B096);
MakeComm(0x49B09B, "'TToolbarSizeData.?f14:dword'");
MakeComm(0x49B0A2, "'TToolbarSizeData.?f18:Integer'");
MakeComm(0x49B0A5, "'TToolbarSizeData.?f4:byte'");
MakeCode(0x49B0A5);
MakeCode(0x49B0BA);
MakeCode(0x49B0C7);
MakeComm(0x49B0E4, "'TToolbarSizeData.?f1C:byte'");
MakeCode(0x49B0E9);
MakeCode(0x49B0F3);
MakeCode(0x49B0F9);
MakeFunction(0x49AEC4, 0x49B101);
MakeUnkn(0x49B104, 1);
MakeNameEx(0x49B104, "TTBCustomToolbar.sub_00496E28", 0x20);
MakeComm(0x49B104, "'procedure TTBCustomToolbar.sub_00496E28;'");
MakeCode(0x49B104);
MakeComm(0x49B10E, "'TTBCustomToolbar.?f34C:TToolbarSizeData'");
MakeComm(0x49B114, "'TToolbarSizeData.?f18:Integer'");
MakeFunction(0x49B104, 0x49B120);
MakeUnkn(0x49B120, 1);
MakeNameEx(0x49B120, "TTBCustomToolbar.sub_00496E2C", 0x20);
MakeComm(0x49B120, "'procedure TTBCustomToolbar.sub_00496E2C;'");
MakeCode(0x49B120);
MakeComm(0x49B12A, "'TTBCustomToolbar.?f34C:TToolbarSizeData'");
MakeComm(0x49B134, "'TToolbarSizeData.?f8:TList'");
MakeComm(0x49B13C, "'TTBCustomToolbar.?f34C:TToolbarSizeData'");
MakeCode(0x49B147);
MakeFunction(0x49B120, 0x49B149);
MakeCode(0x49B14C);
MakeComm(0x49B14C, "'TTBCustomToolbar.?f34A:byte'");
MakeFunction(0x49B14C, 0x49B154);
MakeCode(0x49B154);
MakeComm(0x49B15A, "'TTBCustomToolbar.?f35C:dword'");
MakeComm(0x49B169, "'TTBCustomToolbar.?f270:dword'");
MakeCode(0x49B188);
MakeComm(0x49B190, "'TTBCustomToolbar.?f270:dword'");
MakeCode(0x49B190);
MakeCode(0x49B1AE);
MakeCode(0x49B1B7);
MakeFunction(0x49B154, 0x49B1BD);
MakeUnkn(0x49B1C0, 1);
MakeNameEx(0x49B1C0, "TTBCustomToolbar.GetTabOrderList", 0x20);
MakeComm(0x49B1C0, "'procedure TTBCustomToolbar.GetTabOrderList(List:TList);'");
MakeCode(0x49B1C0);
MakeComm(0x49B1DD, "'TList.Create'");
MakeComm(0x49B1F3, "'TTBCustomToolbar.?f35C:dword'");
MakeComm(0x49B204, "'TList.FCount:Integer'");
MakeCode(0x49B217);
MakeCode(0x49B229);
MakeCode(0x49B247);
MakeCode(0x49B252);
MakeCode(0x49B253);
MakeCode(0x49B260);
MakeCode(0x49B26D);
MakeCode(0x49B276);
MakeCode(0x49B27B);
MakeFunction(0x49B1C0, 0x49B284);
MakeUnkn(0x49B284, 1);
MakeNameEx(0x49B284, "TTBCustomToolbar.CMWinIniChange", 0x20);
MakeComm(0x49B284, "'procedure TTBCustomToolbar.CMWinIniChange(Message:TWMWinIniChange);'");
MakeCode(0x49B284);
MakeCode(0x49B2A5);
MakeFunction(0x49B284, 0x49B2A8);
MakeCode(0x49B59C);
MakeComm(0x49B59C, "'TTBToolbar.?f348:byte'");
MakeComm(0x49B5A5, "'TTBToolbar.?f33C:Boolean'");
MakeComm(0x49B5AE, "'TTBToolbar.FComponentState:TComponentState'");
MakeCode(0x49B5AE);
MakeCode(0x49B5BA);
MakeFunction(0x49B59C, 0x49B5C0);
MakeCode(0x49B5C0);
MakeComm(0x49B5C3, "'TTBToolbar.?f349:byte'");
MakeCode(0x49B5E9);
MakeComm(0x49B5FB, "'TTBToolbar.?f349:byte'");
MakeCode(0x49B602);
MakeFunction(0x49B5C0, 0x49B604);
MakeCode(0x49B604);
MakeComm(0x49B607, "'TTBCustomToolbar.?f349:byte'");
MakeComm(0x49B610, "'TTBCustomToolbar.?f349:byte'");
MakeCode(0x49B646);
MakeFunction(0x49B604, 0x49B648);
MakeCode(0x49B648);
MakeCode(0x49B67A);
MakeCode(0x49B6A6);
MakeFunction(0x49B648, 0x49B6BA);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49B6BC, 0x49B6C7);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49B6C8, 0x49B6D2);
MakeCode(0x49B750);
MakeFunction(0x49B750, 0x49B766);
MakeCode(0x49B768);
MakeCode(0x49B786);
MakeCode(0x49B793);
MakeCode(0x49B794);
MakeCode(0x49B799);
MakeFunction(0x49B768, 0x49B79D);
MakeCode(0x49B7A0);
MakeCode(0x49B7B5);
MakeCode(0x49B7CA);
MakeCode(0x49B7FE);
MakeFunction(0x49B7A0, 0x49B817);
MakeCode(0x49B818);
MakeCode(0x49B845);
MakeCode(0x49B892);
MakeCode(0x49B89C);
MakeFunction(0x49B818, 0x49B8AF);
MakeUnkn(0x49B8B0, 1);
MakeNameEx(0x49B8B0, "VMT_49B8B0_TTitleForm", 0);
MakeDword(0x49B8B0);
MakeDword(0x49B8B4);
MakeDword(0x49B8B8);
MakeDword(0x49B8BC);
MakeDword(0x49B8C0);
MakeDword(0x49B8C4);
MakeUnkn(0x49BA00, 1);
MakeNameEx(0x49BA00, "TTitleForm_FieldTable", 0);
MakeWord(0x49BA00);
MakeDword(0x49BA02);
MakeWord(0x49BB15);
MakeDword(0x49BB17);
MakeDword(0x49BB1B);
MakeDword(0x49BB1F);
MakeDword(0x49BB23);
MakeDword(0x49BA06);
MakeWord(0x49BA0A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49BA0C, 0x49BA17);
MakeDword(0x49BA17);
MakeWord(0x49BA1B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49BA1D, 0x49BA27);
MakeDword(0x49BA27);
MakeWord(0x49BA2B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49BA2D, 0x49BA39);
MakeDword(0x49BA39);
MakeWord(0x49BA3D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49BA3F, 0x49BA4A);
MakeDword(0x49BA4A);
MakeWord(0x49BA4E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49BA50, 0x49BA5B);
MakeDword(0x49BA5B);
MakeWord(0x49BA5F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49BA61, 0x49BA6B);
MakeDword(0x49BA6B);
MakeWord(0x49BA6F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49BA71, 0x49BA82);
MakeDword(0x49BA82);
MakeWord(0x49BA86);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49BA88, 0x49BA98);
MakeDword(0x49BA98);
MakeWord(0x49BA9C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49BA9E, 0x49BAAC);
MakeDword(0x49BAAC);
MakeWord(0x49BAB0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49BAB2, 0x49BABF);
MakeDword(0x49BABF);
MakeWord(0x49BAC3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49BAC5, 0x49BACE);
MakeDword(0x49BACE);
MakeWord(0x49BAD2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49BAD4, 0x49BAE1);
MakeDword(0x49BAE1);
MakeWord(0x49BAE5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49BAE7, 0x49BAF2);
MakeDword(0x49B8C8);
MakeUnkn(0x49BAF2, 1);
MakeNameEx(0x49BAF2, "TTitleForm_MethodTable", 0);
MakeWord(0x49BAF2);
MakeWord(0x49BAF4);
MakeDword(0x49BAF6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49BAFA, 0x49BB0A);
MakeDword(0x49B8CC);
MakeDword(0x49B8D0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49BB0A, 0x49BB15);
MakeDword(0x49B8D4);
MakeDword(0x49B8D8);
MakeDword(0x49B8DC);
MakeDword(0x49B8E0);
MakeDword(0x49B8E4);
MakeDword(0x49B8E8);
MakeDword(0x49B8EC);
MakeDword(0x49B8F0);
MakeDword(0x49B8F4);
MakeDword(0x49B8F8);
MakeComm(0x49B8FC, "'+0'");
MakeDword(0x49B8FC);
MakeComm(0x49B900, "'+4'");
MakeDword(0x49B900);
MakeComm(0x49B904, "'+8'");
MakeDword(0x49B904);
MakeComm(0x49B908, "'+C'");
MakeDword(0x49B908);
MakeComm(0x49B90C, "'+10'");
MakeDword(0x49B90C);
MakeComm(0x49B910, "'+14'");
MakeDword(0x49B910);
MakeComm(0x49B914, "'+18'");
MakeDword(0x49B914);
MakeComm(0x49B918, "'+1C'");
MakeDword(0x49B918);
MakeComm(0x49B91C, "'+20'");
MakeDword(0x49B91C);
MakeComm(0x49B920, "'+24'");
MakeDword(0x49B920);
MakeComm(0x49B924, "'+28'");
MakeDword(0x49B924);
MakeComm(0x49B928, "'+2C'");
MakeDword(0x49B928);
MakeComm(0x49B92C, "'+30'");
MakeDword(0x49B92C);
MakeComm(0x49B930, "'+34'");
MakeDword(0x49B930);
MakeComm(0x49B934, "'+38'");
MakeDword(0x49B934);
MakeComm(0x49B938, "'+3C'");
MakeDword(0x49B938);
MakeComm(0x49B93C, "'+40'");
MakeDword(0x49B93C);
MakeComm(0x49B940, "'+44'");
MakeDword(0x49B940);
MakeComm(0x49B944, "'+48'");
MakeDword(0x49B944);
MakeComm(0x49B948, "'+4C'");
MakeDword(0x49B948);
MakeComm(0x49B94C, "'+50'");
MakeDword(0x49B94C);
MakeComm(0x49B950, "'+54'");
MakeDword(0x49B950);
MakeComm(0x49B954, "'+58'");
MakeDword(0x49B954);
MakeComm(0x49B958, "'+5C'");
MakeDword(0x49B958);
MakeComm(0x49B95C, "'+60'");
MakeDword(0x49B95C);
MakeComm(0x49B960, "'+64'");
MakeDword(0x49B960);
MakeComm(0x49B964, "'+68'");
MakeDword(0x49B964);
MakeComm(0x49B968, "'+6C'");
MakeDword(0x49B968);
MakeComm(0x49B96C, "'+70'");
MakeDword(0x49B96C);
MakeComm(0x49B970, "'+74'");
MakeDword(0x49B970);
MakeComm(0x49B974, "'+78'");
MakeDword(0x49B974);
MakeComm(0x49B978, "'+7C'");
MakeDword(0x49B978);
MakeComm(0x49B97C, "'+80'");
MakeDword(0x49B97C);
MakeComm(0x49B980, "'+84'");
MakeDword(0x49B980);
MakeComm(0x49B984, "'+88'");
MakeDword(0x49B984);
MakeComm(0x49B988, "'+8C'");
MakeDword(0x49B988);
MakeComm(0x49B98C, "'+90'");
MakeDword(0x49B98C);
MakeComm(0x49B990, "'+94'");
MakeDword(0x49B990);
MakeComm(0x49B994, "'+98'");
MakeDword(0x49B994);
MakeComm(0x49B998, "'+9C'");
MakeDword(0x49B998);
MakeComm(0x49B99C, "'+A0'");
MakeDword(0x49B99C);
MakeComm(0x49B9A0, "'+A4'");
MakeDword(0x49B9A0);
MakeComm(0x49B9A4, "'+A8'");
MakeDword(0x49B9A4);
MakeComm(0x49B9A8, "'+AC'");
MakeDword(0x49B9A8);
MakeComm(0x49B9AC, "'+B0'");
MakeDword(0x49B9AC);
MakeComm(0x49B9B0, "'+B4'");
MakeDword(0x49B9B0);
MakeComm(0x49B9B4, "'+B8'");
MakeDword(0x49B9B4);
MakeComm(0x49B9B8, "'+BC'");
MakeDword(0x49B9B8);
MakeComm(0x49B9BC, "'+C0'");
MakeDword(0x49B9BC);
MakeComm(0x49B9C0, "'+C4'");
MakeDword(0x49B9C0);
MakeComm(0x49B9C4, "'+C8'");
MakeDword(0x49B9C4);
MakeComm(0x49B9C8, "'+CC'");
MakeDword(0x49B9C8);
MakeComm(0x49B9CC, "'+D0'");
MakeDword(0x49B9CC);
MakeComm(0x49B9D0, "'+D4'");
MakeDword(0x49B9D0);
MakeComm(0x49B9D4, "'+D8'");
MakeDword(0x49B9D4);
MakeComm(0x49B9D8, "'+DC'");
MakeDword(0x49B9D8);
MakeComm(0x49B9DC, "'+E0'");
MakeDword(0x49B9DC);
MakeComm(0x49B9E0, "'+E4'");
MakeDword(0x49B9E0);
MakeComm(0x49B9E4, "'+E8'");
MakeDword(0x49B9E4);
MakeComm(0x49B9E8, "'+EC'");
MakeDword(0x49B9E8);
MakeComm(0x49B9EC, "'+F0'");
MakeDword(0x49B9EC);
MakeComm(0x49B9F0, "'+F4'");
MakeDword(0x49B9F0);
MakeComm(0x49B9F4, "'+F8'");
MakeDword(0x49B9F4);
MakeComm(0x49B9F8, "'+FC'");
MakeDword(0x49B9F8);
MakeComm(0x49B9FC, "'+100'");
MakeDword(0x49B9FC);
MakeUnkn(0x49BB28, 1);
MakeNameEx(0x49BB28, "RTTI_49BB28_Class_TTitleForm", 0);
MakeDword(0x49BB28);
MakeUnkn(0x49BB2C, 1);
MakeNameEx(0x49BB2C, "", 0);
MakeByte(0x49BB2C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49BB2D, 0x49BB38);
MakeDword(0x49BB38);
MakeDword(0x49BB3C);
MakeWord(0x49BB40);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49BB42, 0x49BB48);
MakeWord(0x49BB48);
MakeUnkn(0x49BB4C, 1);
MakeNameEx(0x49BB4C, "TTitleForm.HelpButtonClick", 0x20);
MakeComm(0x49BB4C, "'procedure TTitleForm.HelpButtonClick(Sender:TObject);'");
MakeCode(0x49BB4C);
MakeComm(0x49BB54, "'TTitleForm.HelpContext:THelpContext'");
MakeFunction(0x49BB4C, 0x49BB61);
MakeUnkn(0x49BB64, 1);
MakeNameEx(0x49BB64, "VMT_49BB64_TTempoTapForm", 0);
MakeDword(0x49BB64);
MakeDword(0x49BB68);
MakeDword(0x49BB6C);
MakeDword(0x49BB70);
MakeDword(0x49BB74);
MakeDword(0x49BB78);
MakeUnkn(0x49BCB4, 1);
MakeNameEx(0x49BCB4, "TTempoTapForm_FieldTable", 0);
MakeWord(0x49BCB4);
MakeDword(0x49BCB6);
MakeWord(0x49BD51);
MakeDword(0x49BD53);
MakeDword(0x49BD57);
MakeDword(0x49BD5B);
MakeDword(0x49BD5F);
MakeDword(0x49BD63);
MakeDword(0x49BD67);
MakeDword(0x49BCBA);
MakeWord(0x49BCBE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49BCC0, 0x49BCCA);
MakeDword(0x49BCCA);
MakeWord(0x49BCCE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49BCD0, 0x49BCDB);
MakeDword(0x49BCDB);
MakeWord(0x49BCDF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49BCE1, 0x49BCEA);
MakeDword(0x49BCEA);
MakeWord(0x49BCEE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49BCF0, 0x49BCFD);
MakeDword(0x49BCFD);
MakeWord(0x49BD01);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49BD03, 0x49BD0A);
MakeDword(0x49BD0A);
MakeWord(0x49BD0E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49BD10, 0x49BD1C);
MakeDword(0x49BD1C);
MakeWord(0x49BD20);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49BD22, 0x49BD2E);
MakeDword(0x49BB7C);
MakeUnkn(0x49BD2E, 1);
MakeNameEx(0x49BD2E, "TTempoTapForm_MethodTable", 0);
MakeWord(0x49BD2E);
MakeWord(0x49BD30);
MakeDword(0x49BD32);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49BD36, 0x49BD43);
MakeDword(0x49BB80);
MakeDword(0x49BB84);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49BD43, 0x49BD51);
MakeDword(0x49BB88);
MakeDword(0x49BB8C);
MakeDword(0x49BB90);
MakeDword(0x49BB94);
MakeDword(0x49BB98);
MakeDword(0x49BB9C);
MakeDword(0x49BBA0);
MakeDword(0x49BBA4);
MakeDword(0x49BBA8);
MakeDword(0x49BBAC);
MakeComm(0x49BBB0, "'+0'");
MakeDword(0x49BBB0);
MakeComm(0x49BBB4, "'+4'");
MakeDword(0x49BBB4);
MakeComm(0x49BBB8, "'+8'");
MakeDword(0x49BBB8);
MakeComm(0x49BBBC, "'+C'");
MakeDword(0x49BBBC);
MakeComm(0x49BBC0, "'+10'");
MakeDword(0x49BBC0);
MakeComm(0x49BBC4, "'+14'");
MakeDword(0x49BBC4);
MakeComm(0x49BBC8, "'+18'");
MakeDword(0x49BBC8);
MakeComm(0x49BBCC, "'+1C'");
MakeDword(0x49BBCC);
MakeComm(0x49BBD0, "'+20'");
MakeDword(0x49BBD0);
MakeComm(0x49BBD4, "'+24'");
MakeDword(0x49BBD4);
MakeComm(0x49BBD8, "'+28'");
MakeDword(0x49BBD8);
MakeComm(0x49BBDC, "'+2C'");
MakeDword(0x49BBDC);
MakeComm(0x49BBE0, "'+30'");
MakeDword(0x49BBE0);
MakeComm(0x49BBE4, "'+34'");
MakeDword(0x49BBE4);
MakeComm(0x49BBE8, "'+38'");
MakeDword(0x49BBE8);
MakeComm(0x49BBEC, "'+3C'");
MakeDword(0x49BBEC);
MakeComm(0x49BBF0, "'+40'");
MakeDword(0x49BBF0);
MakeComm(0x49BBF4, "'+44'");
MakeDword(0x49BBF4);
MakeComm(0x49BBF8, "'+48'");
MakeDword(0x49BBF8);
MakeComm(0x49BBFC, "'+4C'");
MakeDword(0x49BBFC);
MakeComm(0x49BC00, "'+50'");
MakeDword(0x49BC00);
MakeComm(0x49BC04, "'+54'");
MakeDword(0x49BC04);
MakeComm(0x49BC08, "'+58'");
MakeDword(0x49BC08);
MakeComm(0x49BC0C, "'+5C'");
MakeDword(0x49BC0C);
MakeComm(0x49BC10, "'+60'");
MakeDword(0x49BC10);
MakeComm(0x49BC14, "'+64'");
MakeDword(0x49BC14);
MakeComm(0x49BC18, "'+68'");
MakeDword(0x49BC18);
MakeComm(0x49BC1C, "'+6C'");
MakeDword(0x49BC1C);
MakeComm(0x49BC20, "'+70'");
MakeDword(0x49BC20);
MakeComm(0x49BC24, "'+74'");
MakeDword(0x49BC24);
MakeComm(0x49BC28, "'+78'");
MakeDword(0x49BC28);
MakeComm(0x49BC2C, "'+7C'");
MakeDword(0x49BC2C);
MakeComm(0x49BC30, "'+80'");
MakeDword(0x49BC30);
MakeComm(0x49BC34, "'+84'");
MakeDword(0x49BC34);
MakeComm(0x49BC38, "'+88'");
MakeDword(0x49BC38);
MakeComm(0x49BC3C, "'+8C'");
MakeDword(0x49BC3C);
MakeComm(0x49BC40, "'+90'");
MakeDword(0x49BC40);
MakeComm(0x49BC44, "'+94'");
MakeDword(0x49BC44);
MakeComm(0x49BC48, "'+98'");
MakeDword(0x49BC48);
MakeComm(0x49BC4C, "'+9C'");
MakeDword(0x49BC4C);
MakeComm(0x49BC50, "'+A0'");
MakeDword(0x49BC50);
MakeComm(0x49BC54, "'+A4'");
MakeDword(0x49BC54);
MakeComm(0x49BC58, "'+A8'");
MakeDword(0x49BC58);
MakeComm(0x49BC5C, "'+AC'");
MakeDword(0x49BC5C);
MakeComm(0x49BC60, "'+B0'");
MakeDword(0x49BC60);
MakeComm(0x49BC64, "'+B4'");
MakeDword(0x49BC64);
MakeComm(0x49BC68, "'+B8'");
MakeDword(0x49BC68);
MakeComm(0x49BC6C, "'+BC'");
MakeDword(0x49BC6C);
MakeComm(0x49BC70, "'+C0'");
MakeDword(0x49BC70);
MakeComm(0x49BC74, "'+C4'");
MakeDword(0x49BC74);
MakeComm(0x49BC78, "'+C8'");
MakeDword(0x49BC78);
MakeComm(0x49BC7C, "'+CC'");
MakeDword(0x49BC7C);
MakeComm(0x49BC80, "'+D0'");
MakeDword(0x49BC80);
MakeComm(0x49BC84, "'+D4'");
MakeDword(0x49BC84);
MakeComm(0x49BC88, "'+D8'");
MakeDword(0x49BC88);
MakeComm(0x49BC8C, "'+DC'");
MakeDword(0x49BC8C);
MakeComm(0x49BC90, "'+E0'");
MakeDword(0x49BC90);
MakeComm(0x49BC94, "'+E4'");
MakeDword(0x49BC94);
MakeComm(0x49BC98, "'+E8'");
MakeDword(0x49BC98);
MakeComm(0x49BC9C, "'+EC'");
MakeDword(0x49BC9C);
MakeComm(0x49BCA0, "'+F0'");
MakeDword(0x49BCA0);
MakeComm(0x49BCA4, "'+F4'");
MakeDword(0x49BCA4);
MakeComm(0x49BCA8, "'+F8'");
MakeDword(0x49BCA8);
MakeComm(0x49BCAC, "'+FC'");
MakeDword(0x49BCAC);
MakeComm(0x49BCB0, "'+100'");
MakeDword(0x49BCB0);
MakeUnkn(0x49BD6C, 1);
MakeNameEx(0x49BD6C, "RTTI_49BD6C_Class_TTempoTapForm", 0);
MakeDword(0x49BD6C);
MakeUnkn(0x49BD70, 1);
MakeNameEx(0x49BD70, "", 0);
MakeByte(0x49BD70);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49BD71, 0x49BD7F);
MakeDword(0x49BD7F);
MakeDword(0x49BD83);
MakeWord(0x49BD87);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49BD89, 0x49BD92);
MakeWord(0x49BD92);
MakeUnkn(0x49BD94, 1);
MakeNameEx(0x49BD94, "TTempoTapForm.Create", 0x20);
MakeComm(0x49BD94, "'constructor TTempoTapForm.Create(AOwner:TComponent);'");
MakeCode(0x49BD94);
MakeCode(0x49BDA8);
MakeComm(0x49BDDC, "'Exception.Create'");
MakeComm(0x49BDE6, "'TTempoTapForm.?f37C:byte'");
MakeCode(0x49BDE6);
MakeComm(0x49BDED, "'TTempoTapForm.ProgressBar:TProgressBar'");
MakeCode(0x49BE14);
MakeFunction(0x49BD94, 0x49BE1C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49BE24, -1);
MakeDword(0x49BE20);
MakeDword(0x49BE1C);
MakeUnkn(0x49BE48, 1);
MakeNameEx(0x49BE48, "TTempoTapForm.Destroy", 0x20);
MakeComm(0x49BE48, "'destructor TTempoTapForm.Destroy;'");
MakeCode(0x49BE48);
MakeComm(0x49BE53, "'TTempoTapForm.?f37C:byte'");
MakeCode(0x49BE63);
MakeCode(0x49BE7A);
MakeFunction(0x49BE48, 0x49BE7D);
MakeUnkn(0x49BE80, 1);
MakeNameEx(0x49BE80, "TTempoTapForm.FormKeyPress", 0x20);
MakeComm(0x49BE80, "'procedure TTempoTapForm.FormKeyPress(Sender:TObject; var Key:Char);'");
MakeCode(0x49BE80);
MakeComm(0x49BEC4, "'TTempoTapForm.?f37D:byte'");
MakeCode(0x49BED5);
MakeComm(0x49BED7, "'TTempoTapForm.?f384:Single'");
MakeComm(0x49BEDD, "'TTempoTapForm.?f37D:byte'");
MakeComm(0x49BEE4, "'TTempoTapForm.FActiveControl:TWinControl'");
MakeComm(0x49BEEA, "'TTempoTapForm.OKButton:TButton'");
MakeComm(0x49BEF2, "'TTempoTapForm.CancelButton:TButton'");
MakeCode(0x49BEFF);
MakeComm(0x49BF01, "'TTempoTapForm.OKButton:TButton'");
MakeComm(0x49BF09, "'TControl.SetEnabled'");
MakeComm(0x49BF11, "'TTempoTapForm.TempoEdit:TEdit'");
MakeCode(0x49BF21);
MakeComm(0x49BF2A, "'TTempoTapForm.?f384:Single'");
MakeComm(0x49BF38, "'TTempoTapForm.?f384:Single'");
MakeCode(0x49BF46);
MakeCode(0x49BF54);
MakeComm(0x49BF57, "'TTempoTapForm.?f384:Single'");
MakeComm(0x49BFA3, "'TTempoTapForm.?f384:Single'");
MakeCode(0x49BFA3);
MakeComm(0x49BFAC, "'TTempoTapForm.?f384:Single'");
MakeComm(0x49BFB2, "'TTempoTapForm.?f384:Single'");
MakeCode(0x49BFC0);
MakeComm(0x49BFD2, "'TTempoTapForm.?f384:Single'");
MakeCode(0x49BFD2);
MakeComm(0x49BFDF, "'TTempoTapForm.?f384:Single'");
MakeComm(0x49BFE5, "'TTempoTapForm.?f384:Single'");
MakeCode(0x49C003);
MakeCode(0x49C011);
MakeComm(0x49C014, "'TTempoTapForm.?f384:Single'");
MakeComm(0x49C04D, "'TTempoTapForm.TempoEdit:TEdit'");
MakeComm(0x49C060, "'TTempoTapForm.?f3E8:dword'");
MakeComm(0x49C068, "'TTempoTapForm.OKButton:TButton'");
MakeComm(0x49C070, "'TControl.SetEnabled'");
MakeComm(0x49C073, "'TTempoTapForm.FActiveControl:TWinControl'");
MakeComm(0x49C079, "'TTempoTapForm.CancelButton:TButton'");
MakeComm(0x49C081, "'TTempoTapForm.OKButton:TButton'");
MakeComm(0x49C08E, "'TTempoTapForm.?f384:Single'");
MakeCode(0x49C08E);
MakeComm(0x49C094, "'TTempoTapForm.ProgressBar:TProgressBar'");
MakeComm(0x49C0A2, "'TTempoTapForm.?f380:DWORD'");
MakeCode(0x49C0A8);
MakeCode(0x49C0B5);
MakeCode(0x49C0BE);
MakeCode(0x49C0C3);
MakeFunction(0x49BE80, 0x49C0CB);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49C0D4, -1);
MakeDword(0x49C0D0);
MakeDword(0x49C0CC);
MakeByte(0x49C0D8);
MakeComm(0x49C0D8, "'Single'");
MakeByte(0x49C0DC);
MakeComm(0x49C0DC, "'Single'");
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49C0E8, -1);
MakeDword(0x49C0E4);
MakeDword(0x49C0E0);
MakeUnkn(0x49C0F0, 1);
MakeNameEx(0x49C0F0, "VMT_49C0F0_TTempoForm", 0);
MakeDword(0x49C0F0);
MakeDword(0x49C0F4);
MakeDword(0x49C0F8);
MakeDword(0x49C0FC);
MakeDword(0x49C100);
MakeDword(0x49C104);
MakeUnkn(0x49C240, 1);
MakeNameEx(0x49C240, "TTempoForm_FieldTable", 0);
MakeWord(0x49C240);
MakeDword(0x49C242);
MakeWord(0x49C2F7);
MakeDword(0x49C2F9);
MakeDword(0x49C2FD);
MakeDword(0x49C301);
MakeDword(0x49C246);
MakeWord(0x49C24A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49C24C, 0x49C256);
MakeDword(0x49C256);
MakeWord(0x49C25A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49C25C, 0x49C267);
MakeDword(0x49C267);
MakeWord(0x49C26B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49C26D, 0x49C276);
MakeDword(0x49C276);
MakeWord(0x49C27A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49C27C, 0x49C289);
MakeDword(0x49C289);
MakeWord(0x49C28D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49C28F, 0x49C29A);
MakeDword(0x49C29A);
MakeWord(0x49C29E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49C2A0, 0x49C2AA);
MakeDword(0x49C108);
MakeUnkn(0x49C2AA, 1);
MakeNameEx(0x49C2AA, "TTempoForm_MethodTable", 0);
MakeWord(0x49C2AA);
MakeWord(0x49C2AC);
MakeDword(0x49C2AE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49C2B2, 0x49C2C1);
MakeWord(0x49C2C1);
MakeDword(0x49C2C3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49C2C7, 0x49C2D7);
MakeWord(0x49C2D7);
MakeDword(0x49C2D9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49C2DD, 0x49C2EC);
MakeDword(0x49C10C);
MakeDword(0x49C110);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49C2EC, 0x49C2F7);
MakeDword(0x49C114);
MakeDword(0x49C118);
MakeDword(0x49C11C);
MakeDword(0x49C120);
MakeDword(0x49C124);
MakeDword(0x49C128);
MakeDword(0x49C12C);
MakeDword(0x49C130);
MakeDword(0x49C134);
MakeDword(0x49C138);
MakeComm(0x49C13C, "'+0'");
MakeDword(0x49C13C);
MakeComm(0x49C140, "'+4'");
MakeDword(0x49C140);
MakeComm(0x49C144, "'+8'");
MakeDword(0x49C144);
MakeComm(0x49C148, "'+C'");
MakeDword(0x49C148);
MakeComm(0x49C14C, "'+10'");
MakeDword(0x49C14C);
MakeComm(0x49C150, "'+14'");
MakeDword(0x49C150);
MakeComm(0x49C154, "'+18'");
MakeDword(0x49C154);
MakeComm(0x49C158, "'+1C'");
MakeDword(0x49C158);
MakeComm(0x49C15C, "'+20'");
MakeDword(0x49C15C);
MakeComm(0x49C160, "'+24'");
MakeDword(0x49C160);
MakeComm(0x49C164, "'+28'");
MakeDword(0x49C164);
MakeComm(0x49C168, "'+2C'");
MakeDword(0x49C168);
MakeComm(0x49C16C, "'+30'");
MakeDword(0x49C16C);
MakeComm(0x49C170, "'+34'");
MakeDword(0x49C170);
MakeComm(0x49C174, "'+38'");
MakeDword(0x49C174);
MakeComm(0x49C178, "'+3C'");
MakeDword(0x49C178);
MakeComm(0x49C17C, "'+40'");
MakeDword(0x49C17C);
MakeComm(0x49C180, "'+44'");
MakeDword(0x49C180);
MakeComm(0x49C184, "'+48'");
MakeDword(0x49C184);
MakeComm(0x49C188, "'+4C'");
MakeDword(0x49C188);
MakeComm(0x49C18C, "'+50'");
MakeDword(0x49C18C);
MakeComm(0x49C190, "'+54'");
MakeDword(0x49C190);
MakeComm(0x49C194, "'+58'");
MakeDword(0x49C194);
MakeComm(0x49C198, "'+5C'");
MakeDword(0x49C198);
MakeComm(0x49C19C, "'+60'");
MakeDword(0x49C19C);
MakeComm(0x49C1A0, "'+64'");
MakeDword(0x49C1A0);
MakeComm(0x49C1A4, "'+68'");
MakeDword(0x49C1A4);
MakeComm(0x49C1A8, "'+6C'");
MakeDword(0x49C1A8);
MakeComm(0x49C1AC, "'+70'");
MakeDword(0x49C1AC);
MakeComm(0x49C1B0, "'+74'");
MakeDword(0x49C1B0);
MakeComm(0x49C1B4, "'+78'");
MakeDword(0x49C1B4);
MakeComm(0x49C1B8, "'+7C'");
MakeDword(0x49C1B8);
MakeComm(0x49C1BC, "'+80'");
MakeDword(0x49C1BC);
MakeComm(0x49C1C0, "'+84'");
MakeDword(0x49C1C0);
MakeComm(0x49C1C4, "'+88'");
MakeDword(0x49C1C4);
MakeComm(0x49C1C8, "'+8C'");
MakeDword(0x49C1C8);
MakeComm(0x49C1CC, "'+90'");
MakeDword(0x49C1CC);
MakeComm(0x49C1D0, "'+94'");
MakeDword(0x49C1D0);
MakeComm(0x49C1D4, "'+98'");
MakeDword(0x49C1D4);
MakeComm(0x49C1D8, "'+9C'");
MakeDword(0x49C1D8);
MakeComm(0x49C1DC, "'+A0'");
MakeDword(0x49C1DC);
MakeComm(0x49C1E0, "'+A4'");
MakeDword(0x49C1E0);
MakeComm(0x49C1E4, "'+A8'");
MakeDword(0x49C1E4);
MakeComm(0x49C1E8, "'+AC'");
MakeDword(0x49C1E8);
MakeComm(0x49C1EC, "'+B0'");
MakeDword(0x49C1EC);
MakeComm(0x49C1F0, "'+B4'");
MakeDword(0x49C1F0);
MakeComm(0x49C1F4, "'+B8'");
MakeDword(0x49C1F4);
MakeComm(0x49C1F8, "'+BC'");
MakeDword(0x49C1F8);
MakeComm(0x49C1FC, "'+C0'");
MakeDword(0x49C1FC);
MakeComm(0x49C200, "'+C4'");
MakeDword(0x49C200);
MakeComm(0x49C204, "'+C8'");
MakeDword(0x49C204);
MakeComm(0x49C208, "'+CC'");
MakeDword(0x49C208);
MakeComm(0x49C20C, "'+D0'");
MakeDword(0x49C20C);
MakeComm(0x49C210, "'+D4'");
MakeDword(0x49C210);
MakeComm(0x49C214, "'+D8'");
MakeDword(0x49C214);
MakeComm(0x49C218, "'+DC'");
MakeDword(0x49C218);
MakeComm(0x49C21C, "'+E0'");
MakeDword(0x49C21C);
MakeComm(0x49C220, "'+E4'");
MakeDword(0x49C220);
MakeComm(0x49C224, "'+E8'");
MakeDword(0x49C224);
MakeComm(0x49C228, "'+EC'");
MakeDword(0x49C228);
MakeComm(0x49C22C, "'+F0'");
MakeDword(0x49C22C);
MakeComm(0x49C230, "'+F4'");
MakeDword(0x49C230);
MakeComm(0x49C234, "'+F8'");
MakeDword(0x49C234);
MakeComm(0x49C238, "'+FC'");
MakeDword(0x49C238);
MakeComm(0x49C23C, "'+100'");
MakeDword(0x49C23C);
MakeUnkn(0x49C308, 1);
MakeNameEx(0x49C308, "RTTI_49C308_Class_TTempoForm", 0);
MakeDword(0x49C308);
MakeUnkn(0x49C30C, 1);
MakeNameEx(0x49C30C, "", 0);
MakeByte(0x49C30C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49C30D, 0x49C318);
MakeDword(0x49C318);
MakeDword(0x49C31C);
MakeWord(0x49C320);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49C322, 0x49C328);
MakeWord(0x49C328);
MakeUnkn(0x49C32C, 1);
MakeNameEx(0x49C32C, "TTempoForm.FormCloseQuery", 0x20);
MakeComm(0x49C32C, "'procedure TTempoForm.FormCloseQuery(Sender:TObject; var CanClose:Boolean);'");
MakeCode(0x49C32C);
MakeComm(0x49C351, "'TTempoForm.FModalResult:TModalResult'");
MakeComm(0x49C361, "'TTempoForm.TempoEdit:TEdit'");
MakeComm(0x49C382, "'TTempoForm.?f378:Longint'");
MakeComm(0x49C38E, "'TTempoForm.?f378:Longint'");
MakeComm(0x49C397, "'TTempoForm.?f378:Longint'");
MakeCode(0x49C3A3);
MakeComm(0x49C3A6, "'TTempoForm.TempoEdit:TEdit'");
MakeComm(0x49C3AE, "'TWinControl.SetFocus'");
MakeCode(0x49C3E8);
MakeCode(0x49C3F5);
MakeCode(0x49C40E);
MakeCode(0x49C413);
MakeFunction(0x49C32C, 0x49C41B);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49C424, -1);
MakeDword(0x49C420);
MakeDword(0x49C41C);
MakeUnkn(0x49C448, 1);
MakeNameEx(0x49C448, "TTempoForm.HelpButtonClick", 0x20);
MakeComm(0x49C448, "'procedure TTempoForm.HelpButtonClick(Sender:TObject);'");
MakeCode(0x49C448);
MakeComm(0x49C450, "'TTempoForm.HelpContext:THelpContext'");
MakeFunction(0x49C448, 0x49C45D);
MakeUnkn(0x49C460, 1);
MakeNameEx(0x49C460, "TTempoForm.TapButtonClick", 0x20);
MakeComm(0x49C460, "'procedure TTempoForm.TapButtonClick(Sender:TObject);'");
MakeCode(0x49C460);
MakeComm(0x49C48C, "'TTempoTapForm.Create'");
MakeComm(0x49C4A7, "'TCustomForm.ShowModal'");
MakeComm(0x49C4B6, "'TTempoTapForm.?f3E8:dword'");
MakeComm(0x49C4C4, "'TTempoForm.TempoEdit:TEdit'");
MakeComm(0x49C4CF, "'TTempoForm.TempoEdit:TEdit'");
MakeComm(0x49C4D9, "'TWinControl.Focused'");
MakeComm(0x49C4E2, "'TTempoForm.TempoEdit:TEdit'");
MakeCode(0x49C4ED);
MakeCode(0x49C4FA);
MakeCode(0x49C503);
MakeCode(0x49C508);
MakeCode(0x49C50A);
MakeCode(0x49C517);
MakeCode(0x49C520);
MakeCode(0x49C525);
MakeFunction(0x49C460, 0x49C52D);
MakeUnkn(0x49C530, 1);
MakeNameEx(0x49C530, "VMT_49C530_TAboutForm", 0);
MakeDword(0x49C530);
MakeDword(0x49C534);
MakeDword(0x49C538);
MakeDword(0x49C53C);
MakeDword(0x49C540);
MakeDword(0x49C544);
MakeUnkn(0x49C680, 1);
MakeNameEx(0x49C680, "TAboutForm_FieldTable", 0);
MakeWord(0x49C680);
MakeDword(0x49C682);
MakeWord(0x49C762);
MakeDword(0x49C764);
MakeDword(0x49C768);
MakeDword(0x49C76C);
MakeDword(0x49C770);
MakeDword(0x49C686);
MakeWord(0x49C68A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49C68C, 0x49C691);
MakeDword(0x49C691);
MakeWord(0x49C695);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49C697, 0x49C6A1);
MakeDword(0x49C6A1);
MakeWord(0x49C6A5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49C6A7, 0x49C6B6);
MakeDword(0x49C6B6);
MakeWord(0x49C6BA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49C6BC, 0x49C6C2);
MakeDword(0x49C6C2);
MakeWord(0x49C6C6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49C6C8, 0x49C6D1);
MakeDword(0x49C6D1);
MakeWord(0x49C6D5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49C6D7, 0x49C6E4);
MakeDword(0x49C6E4);
MakeWord(0x49C6E8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49C6EA, 0x49C6FC);
MakeDword(0x49C6FC);
MakeWord(0x49C700);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49C702, 0x49C709);
MakeDword(0x49C709);
MakeWord(0x49C70D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49C70F, 0x49C716);
MakeDword(0x49C716);
MakeWord(0x49C71A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49C71C, 0x49C727);
MakeDword(0x49C548);
MakeUnkn(0x49C727, 1);
MakeNameEx(0x49C727, "TAboutForm_MethodTable", 0);
MakeWord(0x49C727);
MakeWord(0x49C729);
MakeDword(0x49C72B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49C72F, 0x49C73A);
MakeWord(0x49C73A);
MakeDword(0x49C73C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49C740, 0x49C757);
MakeDword(0x49C54C);
MakeDword(0x49C550);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49C757, 0x49C762);
MakeDword(0x49C554);
MakeDword(0x49C558);
MakeDword(0x49C55C);
MakeDword(0x49C560);
MakeDword(0x49C564);
MakeDword(0x49C568);
MakeDword(0x49C56C);
MakeDword(0x49C570);
MakeDword(0x49C574);
MakeDword(0x49C578);
MakeComm(0x49C57C, "'+0'");
MakeDword(0x49C57C);
MakeComm(0x49C580, "'+4'");
MakeDword(0x49C580);
MakeComm(0x49C584, "'+8'");
MakeDword(0x49C584);
MakeComm(0x49C588, "'+C'");
MakeDword(0x49C588);
MakeComm(0x49C58C, "'+10'");
MakeDword(0x49C58C);
MakeComm(0x49C590, "'+14'");
MakeDword(0x49C590);
MakeComm(0x49C594, "'+18'");
MakeDword(0x49C594);
MakeComm(0x49C598, "'+1C'");
MakeDword(0x49C598);
MakeComm(0x49C59C, "'+20'");
MakeDword(0x49C59C);
MakeComm(0x49C5A0, "'+24'");
MakeDword(0x49C5A0);
MakeComm(0x49C5A4, "'+28'");
MakeDword(0x49C5A4);
MakeComm(0x49C5A8, "'+2C'");
MakeDword(0x49C5A8);
MakeComm(0x49C5AC, "'+30'");
MakeDword(0x49C5AC);
MakeComm(0x49C5B0, "'+34'");
MakeDword(0x49C5B0);
MakeComm(0x49C5B4, "'+38'");
MakeDword(0x49C5B4);
MakeComm(0x49C5B8, "'+3C'");
MakeDword(0x49C5B8);
MakeComm(0x49C5BC, "'+40'");
MakeDword(0x49C5BC);
MakeComm(0x49C5C0, "'+44'");
MakeDword(0x49C5C0);
MakeComm(0x49C5C4, "'+48'");
MakeDword(0x49C5C4);
MakeComm(0x49C5C8, "'+4C'");
MakeDword(0x49C5C8);
MakeComm(0x49C5CC, "'+50'");
MakeDword(0x49C5CC);
MakeComm(0x49C5D0, "'+54'");
MakeDword(0x49C5D0);
MakeComm(0x49C5D4, "'+58'");
MakeDword(0x49C5D4);
MakeComm(0x49C5D8, "'+5C'");
MakeDword(0x49C5D8);
MakeComm(0x49C5DC, "'+60'");
MakeDword(0x49C5DC);
MakeComm(0x49C5E0, "'+64'");
MakeDword(0x49C5E0);
MakeComm(0x49C5E4, "'+68'");
MakeDword(0x49C5E4);
MakeComm(0x49C5E8, "'+6C'");
MakeDword(0x49C5E8);
MakeComm(0x49C5EC, "'+70'");
MakeDword(0x49C5EC);
MakeComm(0x49C5F0, "'+74'");
MakeDword(0x49C5F0);
MakeComm(0x49C5F4, "'+78'");
MakeDword(0x49C5F4);
MakeComm(0x49C5F8, "'+7C'");
MakeDword(0x49C5F8);
MakeComm(0x49C5FC, "'+80'");
MakeDword(0x49C5FC);
MakeComm(0x49C600, "'+84'");
MakeDword(0x49C600);
MakeComm(0x49C604, "'+88'");
MakeDword(0x49C604);
MakeComm(0x49C608, "'+8C'");
MakeDword(0x49C608);
MakeComm(0x49C60C, "'+90'");
MakeDword(0x49C60C);
MakeComm(0x49C610, "'+94'");
MakeDword(0x49C610);
MakeComm(0x49C614, "'+98'");
MakeDword(0x49C614);
MakeComm(0x49C618, "'+9C'");
MakeDword(0x49C618);
MakeComm(0x49C61C, "'+A0'");
MakeDword(0x49C61C);
MakeComm(0x49C620, "'+A4'");
MakeDword(0x49C620);
MakeComm(0x49C624, "'+A8'");
MakeDword(0x49C624);
MakeComm(0x49C628, "'+AC'");
MakeDword(0x49C628);
MakeComm(0x49C62C, "'+B0'");
MakeDword(0x49C62C);
MakeComm(0x49C630, "'+B4'");
MakeDword(0x49C630);
MakeComm(0x49C634, "'+B8'");
MakeDword(0x49C634);
MakeComm(0x49C638, "'+BC'");
MakeDword(0x49C638);
MakeComm(0x49C63C, "'+C0'");
MakeDword(0x49C63C);
MakeComm(0x49C640, "'+C4'");
MakeDword(0x49C640);
MakeComm(0x49C644, "'+C8'");
MakeDword(0x49C644);
MakeComm(0x49C648, "'+CC'");
MakeDword(0x49C648);
MakeComm(0x49C64C, "'+D0'");
MakeDword(0x49C64C);
MakeComm(0x49C650, "'+D4'");
MakeDword(0x49C650);
MakeComm(0x49C654, "'+D8'");
MakeDword(0x49C654);
MakeComm(0x49C658, "'+DC'");
MakeDword(0x49C658);
MakeComm(0x49C65C, "'+E0'");
MakeDword(0x49C65C);
MakeComm(0x49C660, "'+E4'");
MakeDword(0x49C660);
MakeComm(0x49C664, "'+E8'");
MakeDword(0x49C664);
MakeComm(0x49C668, "'+EC'");
MakeDword(0x49C668);
MakeComm(0x49C66C, "'+F0'");
MakeDword(0x49C66C);
MakeComm(0x49C670, "'+F4'");
MakeDword(0x49C670);
MakeComm(0x49C674, "'+F8'");
MakeDword(0x49C674);
MakeComm(0x49C678, "'+FC'");
MakeDword(0x49C678);
MakeComm(0x49C67C, "'+100'");
MakeDword(0x49C67C);
MakeUnkn(0x49C774, 1);
MakeNameEx(0x49C774, "RTTI_49C774_Class_TAboutForm", 0);
MakeDword(0x49C774);
MakeUnkn(0x49C778, 1);
MakeNameEx(0x49C778, "", 0);
MakeByte(0x49C778);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49C779, 0x49C784);
MakeDword(0x49C784);
MakeDword(0x49C788);
MakeWord(0x49C78C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49C78E, 0x49C794);
MakeWord(0x49C794);
MakeUnkn(0x49C798, 1);
MakeNameEx(0x49C798, "TAboutForm.FormCreate", 0x20);
MakeComm(0x49C798, "'procedure TAboutForm.FormCreate(Sender:TObject);'");
MakeCode(0x49C798);
MakeComm(0x49C7B5, "'TApplication.FIcon:TIcon'");
MakeComm(0x49C7BB, "'TAboutForm.Icon:TImage'");
MakeComm(0x49C7C1, "'TImage.Picture:TPicture'");
MakeComm(0x49C7D1, "'TAboutForm.NameLabel:TLabel'");
MakeComm(0x49C7DC, "'TAboutForm.WebSiteClickLabel:TLabel'");
MakeComm(0x49C7E2, "'TLabel.FFont:TFont'");
MakeComm(0x49C7E5, "'0x4'");
MakeComm(0x49C7F1, "'TAboutForm.FColor:TColor'");
MakeComm(0x49C800, "'TAboutForm.WebSiteClickLabel:TLabel'");
MakeComm(0x49C806, "'TLabel.FFont:TFont'");
MakeCode(0x49C813);
MakeComm(0x49C82C, "'TAboutForm.RegToLabel:TLabel'");
MakeCode(0x49C837);
MakeCode(0x49C844);
MakeCode(0x49C84D);
MakeCode(0x49C852);
MakeFunction(0x49C798, 0x49C858);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49C860, -1);
MakeDword(0x49C85C);
MakeDword(0x49C858);
MakeByte(0x49C874);
MakeUnkn(0x49C874, 1);
MakeNameEx(0x49C874, "gvar_0049C874", 0);
MakeUnkn(0x49C878, 1);
MakeNameEx(0x49C878, "TAboutForm.WebSiteClickLabelClick", 0x20);
MakeComm(0x49C878, "'procedure TAboutForm.WebSiteClickLabelClick(Sender:TObject);'");
MakeCode(0x49C878);
MakeComm(0x49C88E, "'TAboutForm.FColor:TColor'");
MakeComm(0x49C89D, "'TAboutForm.WebSiteClickLabel:TLabel'");
MakeComm(0x49C8A3, "'TLabel.FFont:TFont'");
MakeComm(0x49C8B0, "'TAboutForm.WebSiteClickLabel:TLabel'");
MakeCode(0x49C8B0);
MakeComm(0x49C8B8, "'TControl.Update'");
MakeComm(0x49C8C7, "'TAboutForm.WebSiteClickLabel:TLabel'");
MakeCode(0x49C8E7);
MakeCode(0x49C8F4);
MakeCode(0x49C8FD);
MakeCode(0x49C902);
MakeFunction(0x49C878, 0x49C908);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49C908, 0x49C90D);
MakeUnkn(0x49C910, 1);
MakeNameEx(0x49C910, "VMT_49C910_TTrackBarEx", 0);
MakeDword(0x49C910);
MakeDword(0x49C914);
MakeDword(0x49C918);
MakeDword(0x49C91C);
MakeDword(0x49C920);
MakeDword(0x49C924);
MakeDword(0x49C928);
MakeDword(0x49C92C);
MakeDword(0x49C930);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49CA34, 0x49CA40);
MakeDword(0x49C934);
MakeDword(0x49C938);
MakeDword(0x49C93C);
MakeDword(0x49C940);
MakeDword(0x49C944);
MakeDword(0x49C948);
MakeDword(0x49C94C);
MakeDword(0x49C950);
MakeDword(0x49C954);
MakeDword(0x49C958);
MakeComm(0x49C95C, "'+0'");
MakeDword(0x49C95C);
MakeComm(0x49C960, "'+4'");
MakeDword(0x49C960);
MakeComm(0x49C964, "'+8'");
MakeDword(0x49C964);
MakeComm(0x49C968, "'+C'");
MakeDword(0x49C968);
MakeComm(0x49C96C, "'+10'");
MakeDword(0x49C96C);
MakeComm(0x49C970, "'+14'");
MakeDword(0x49C970);
MakeComm(0x49C974, "'+18'");
MakeDword(0x49C974);
MakeComm(0x49C978, "'+1C'");
MakeDword(0x49C978);
MakeComm(0x49C97C, "'+20'");
MakeDword(0x49C97C);
MakeComm(0x49C980, "'+24'");
MakeDword(0x49C980);
MakeComm(0x49C984, "'+28'");
MakeDword(0x49C984);
MakeComm(0x49C988, "'+2C'");
MakeDword(0x49C988);
MakeComm(0x49C98C, "'+30'");
MakeDword(0x49C98C);
MakeComm(0x49C990, "'+34'");
MakeDword(0x49C990);
MakeComm(0x49C994, "'+38'");
MakeDword(0x49C994);
MakeComm(0x49C998, "'+3C'");
MakeDword(0x49C998);
MakeComm(0x49C99C, "'+40'");
MakeDword(0x49C99C);
MakeComm(0x49C9A0, "'+44'");
MakeDword(0x49C9A0);
MakeComm(0x49C9A4, "'+48'");
MakeDword(0x49C9A4);
MakeComm(0x49C9A8, "'+4C'");
MakeDword(0x49C9A8);
MakeComm(0x49C9AC, "'+50'");
MakeDword(0x49C9AC);
MakeComm(0x49C9B0, "'+54'");
MakeDword(0x49C9B0);
MakeComm(0x49C9B4, "'+58'");
MakeDword(0x49C9B4);
MakeComm(0x49C9B8, "'+5C'");
MakeDword(0x49C9B8);
MakeComm(0x49C9BC, "'+60'");
MakeDword(0x49C9BC);
MakeComm(0x49C9C0, "'+64'");
MakeDword(0x49C9C0);
MakeComm(0x49C9C4, "'+68'");
MakeDword(0x49C9C4);
MakeComm(0x49C9C8, "'+6C'");
MakeDword(0x49C9C8);
MakeComm(0x49C9CC, "'+70'");
MakeDword(0x49C9CC);
MakeComm(0x49C9D0, "'+74'");
MakeDword(0x49C9D0);
MakeComm(0x49C9D4, "'+78'");
MakeDword(0x49C9D4);
MakeComm(0x49C9D8, "'+7C'");
MakeDword(0x49C9D8);
MakeComm(0x49C9DC, "'+80'");
MakeDword(0x49C9DC);
MakeComm(0x49C9E0, "'+84'");
MakeDword(0x49C9E0);
MakeComm(0x49C9E4, "'+88'");
MakeDword(0x49C9E4);
MakeComm(0x49C9E8, "'+8C'");
MakeDword(0x49C9E8);
MakeComm(0x49C9EC, "'+90'");
MakeDword(0x49C9EC);
MakeComm(0x49C9F0, "'+94'");
MakeDword(0x49C9F0);
MakeComm(0x49C9F4, "'+98'");
MakeDword(0x49C9F4);
MakeComm(0x49C9F8, "'+9C'");
MakeDword(0x49C9F8);
MakeComm(0x49C9FC, "'+A0'");
MakeDword(0x49C9FC);
MakeComm(0x49CA00, "'+A4'");
MakeDword(0x49CA00);
MakeComm(0x49CA04, "'+A8'");
MakeDword(0x49CA04);
MakeComm(0x49CA08, "'+AC'");
MakeDword(0x49CA08);
MakeComm(0x49CA0C, "'+B0'");
MakeDword(0x49CA0C);
MakeComm(0x49CA10, "'+B4'");
MakeDword(0x49CA10);
MakeComm(0x49CA14, "'+B8'");
MakeDword(0x49CA14);
MakeComm(0x49CA18, "'+BC'");
MakeDword(0x49CA18);
MakeComm(0x49CA1C, "'+C0'");
MakeDword(0x49CA1C);
MakeComm(0x49CA20, "'+C4'");
MakeDword(0x49CA20);
MakeComm(0x49CA24, "'+C8'");
MakeDword(0x49CA24);
MakeComm(0x49CA28, "'+CC'");
MakeDword(0x49CA28);
MakeComm(0x49CA2C, "'+D0'");
MakeDword(0x49CA2C);
MakeComm(0x49CA30, "'+D4'");
MakeDword(0x49CA30);
MakeUnkn(0x49CA40, 1);
MakeNameEx(0x49CA40, "RTTI_49CA40_Class_TTrackBarEx", 0);
MakeDword(0x49CA40);
MakeUnkn(0x49CA44, 1);
MakeNameEx(0x49CA44, "", 0);
MakeByte(0x49CA44);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49CA45, 0x49CA51);
MakeDword(0x49CA51);
MakeDword(0x49CA55);
MakeWord(0x49CA59);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49CA5B, 0x49CA63);
MakeWord(0x49CA63);
MakeDword(0x49CA65);
MakeDword(0x49CA69);
MakeDword(0x49CA6D);
MakeDword(0x49CA71);
MakeDword(0x49CA75);
MakeDword(0x49CA79);
MakeWord(0x49CA7D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49CA7F, 0x49CA8B);
MakeUnkn(0x49CA8C, 1);
MakeNameEx(0x49CA8C, "TTrackBarEx.Create", 0x20);
MakeComm(0x49CA8C, "'constructor TTrackBarEx.Create(AOwner:TComponent);'");
MakeCode(0x49CA8C);
MakeCode(0x49CA9A);
MakeComm(0x49CAA7, "'TTrackBarEx......SelectRange:Boolean'");
MakeCode(0x49CAC3);
MakeFunction(0x49CA8C, 0x49CAC8);
MakeUnkn(0x49CAC8, 1);
MakeNameEx(0x49CAC8, "TTrackBarEx.CreateParams", 0x20);
MakeComm(0x49CAC8, "'procedure TTrackBarEx.CreateParams(var Params:TCreateParams);'");
MakeCode(0x49CAC8);
MakeComm(0x49CAD7, "'TTrackBarEx.......SelectRange:Boolean'");
MakeComm(0x49CAE0, "'TCreateParams.Style:DWORD'");
MakeComm(0x49CAE7, "'TCreateParams.Style:DWORD'");
MakeCode(0x49CAE7);
MakeFunction(0x49CAC8, 0x49CAEE);
MakeUnkn(0x49CAF0, 1);
MakeNameEx(0x49CAF0, "TTrackBarEx.SetSelectRange", 0x20);
MakeComm(0x49CAF0, "'procedure TTrackBarEx.SetSelectRange(Value:Boolean);'");
MakeCode(0x49CAF0);
MakeComm(0x49CAF0, "'TTrackBarEx........SelectRange:Boolean'");
MakeComm(0x49CAF8, "'TTrackBarEx.........SelectRange:Boolean'");
MakeFunction(0x49CAF0, 0x49CB04);
MakeUnkn(0x49CB04, 1);
MakeNameEx(0x49CB04, "RTTI_49CB04_Method_TTunerHintEvent", 0);
MakeDword(0x49CB04);
MakeUnkn(0x49CB08, 1);
MakeNameEx(0x49CB08, "", 0);
MakeByte(0x49CB08);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49CB09, 0x49CB19);
MakeByte(0x49CB19);
MakeByte(0x49CB1A);
MakeByte(0x49CB1B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49CB1C, 0x49CB23);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49CB23, 0x49CB2B);
MakeByte(0x49CB2B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49CB2C, 0x49CB32);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49CB32, 0x49CB39);
MakeByte(0x49CB39);
MakeDword(0x49CB3A);
MakeDword(0x49CB3E);
MakeUnkn(0x49CB44, 1);
MakeNameEx(0x49CB44, "VMT_49CB44_TTuner", 0);
MakeDword(0x49CB44);
MakeDword(0x49CB48);
MakeDword(0x49CB4C);
MakeDword(0x49CB50);
MakeDword(0x49CB54);
MakeDword(0x49CB58);
MakeDword(0x49CB5C);
MakeDword(0x49CB60);
MakeUnkn(0x49CC6C, 1);
MakeNameEx(0x49CC6C, "TTuner_DynamicTable", 0);
MakeWord(0x49CC6C);
MakeWord(0x49CC6E);
MakeWord(0x49CC70);
MakeWord(0x49CC72);
MakeWord(0x49CC74);
MakeWord(0x49CC76);
MakeWord(0x49CC78);
MakeWord(0x49CC7A);
MakeWord(0x49CC7C);
MakeWord(0x49CC7E);
MakeWord(0x49CC80);
MakeWord(0x49CC82);
MakeDword(0x49CC84);
MakeDword(0x49CC88);
MakeDword(0x49CC8C);
MakeDword(0x49CC90);
MakeDword(0x49CC94);
MakeDword(0x49CC98);
MakeDword(0x49CC9C);
MakeDword(0x49CCA0);
MakeDword(0x49CCA4);
MakeDword(0x49CCA8);
MakeDword(0x49CCAC);
MakeDword(0x49CB64);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49CCB0, 0x49CCB7);
MakeDword(0x49CB68);
MakeDword(0x49CB6C);
MakeDword(0x49CB70);
MakeDword(0x49CB74);
MakeDword(0x49CB78);
MakeDword(0x49CB7C);
MakeDword(0x49CB80);
MakeDword(0x49CB84);
MakeDword(0x49CB88);
MakeDword(0x49CB8C);
MakeComm(0x49CB90, "'+0'");
MakeDword(0x49CB90);
MakeComm(0x49CB94, "'+4'");
MakeDword(0x49CB94);
MakeComm(0x49CB98, "'+8'");
MakeDword(0x49CB98);
MakeComm(0x49CB9C, "'+C'");
MakeDword(0x49CB9C);
MakeComm(0x49CBA0, "'+10'");
MakeDword(0x49CBA0);
MakeComm(0x49CBA4, "'+14'");
MakeDword(0x49CBA4);
MakeComm(0x49CBA8, "'+18'");
MakeDword(0x49CBA8);
MakeComm(0x49CBAC, "'+1C'");
MakeDword(0x49CBAC);
MakeComm(0x49CBB0, "'+20'");
MakeDword(0x49CBB0);
MakeComm(0x49CBB4, "'+24'");
MakeDword(0x49CBB4);
MakeComm(0x49CBB8, "'+28'");
MakeDword(0x49CBB8);
MakeComm(0x49CBBC, "'+2C'");
MakeDword(0x49CBBC);
MakeComm(0x49CBC0, "'+30'");
MakeDword(0x49CBC0);
MakeComm(0x49CBC4, "'+34'");
MakeDword(0x49CBC4);
MakeComm(0x49CBC8, "'+38'");
MakeDword(0x49CBC8);
MakeComm(0x49CBCC, "'+3C'");
MakeDword(0x49CBCC);
MakeComm(0x49CBD0, "'+40'");
MakeDword(0x49CBD0);
MakeComm(0x49CBD4, "'+44'");
MakeDword(0x49CBD4);
MakeComm(0x49CBD8, "'+48'");
MakeDword(0x49CBD8);
MakeComm(0x49CBDC, "'+4C'");
MakeDword(0x49CBDC);
MakeComm(0x49CBE0, "'+50'");
MakeDword(0x49CBE0);
MakeComm(0x49CBE4, "'+54'");
MakeDword(0x49CBE4);
MakeComm(0x49CBE8, "'+58'");
MakeDword(0x49CBE8);
MakeComm(0x49CBEC, "'+5C'");
MakeDword(0x49CBEC);
MakeComm(0x49CBF0, "'+60'");
MakeDword(0x49CBF0);
MakeComm(0x49CBF4, "'+64'");
MakeDword(0x49CBF4);
MakeComm(0x49CBF8, "'+68'");
MakeDword(0x49CBF8);
MakeComm(0x49CBFC, "'+6C'");
MakeDword(0x49CBFC);
MakeComm(0x49CC00, "'+70'");
MakeDword(0x49CC00);
MakeComm(0x49CC04, "'+74'");
MakeDword(0x49CC04);
MakeComm(0x49CC08, "'+78'");
MakeDword(0x49CC08);
MakeComm(0x49CC0C, "'+7C'");
MakeDword(0x49CC0C);
MakeComm(0x49CC10, "'+80'");
MakeDword(0x49CC10);
MakeComm(0x49CC14, "'+84'");
MakeDword(0x49CC14);
MakeComm(0x49CC18, "'+88'");
MakeDword(0x49CC18);
MakeComm(0x49CC1C, "'+8C'");
MakeDword(0x49CC1C);
MakeComm(0x49CC20, "'+90'");
MakeDword(0x49CC20);
MakeComm(0x49CC24, "'+94'");
MakeDword(0x49CC24);
MakeComm(0x49CC28, "'+98'");
MakeDword(0x49CC28);
MakeComm(0x49CC2C, "'+9C'");
MakeDword(0x49CC2C);
MakeComm(0x49CC30, "'+A0'");
MakeDword(0x49CC30);
MakeComm(0x49CC34, "'+A4'");
MakeDword(0x49CC34);
MakeComm(0x49CC38, "'+A8'");
MakeDword(0x49CC38);
MakeComm(0x49CC3C, "'+AC'");
MakeDword(0x49CC3C);
MakeComm(0x49CC40, "'+B0'");
MakeDword(0x49CC40);
MakeComm(0x49CC44, "'+B4'");
MakeDword(0x49CC44);
MakeComm(0x49CC48, "'+B8'");
MakeDword(0x49CC48);
MakeComm(0x49CC4C, "'+BC'");
MakeDword(0x49CC4C);
MakeComm(0x49CC50, "'+C0'");
MakeDword(0x49CC50);
MakeComm(0x49CC54, "'+C4'");
MakeDword(0x49CC54);
MakeComm(0x49CC58, "'+C8'");
MakeDword(0x49CC58);
MakeComm(0x49CC5C, "'+CC'");
MakeDword(0x49CC5C);
MakeComm(0x49CC60, "'+D0'");
MakeDword(0x49CC60);
MakeComm(0x49CC64, "'+D4'");
MakeDword(0x49CC64);
MakeComm(0x49CC68, "'+D8'");
MakeDword(0x49CC68);
MakeUnkn(0x49CCB8, 1);
MakeNameEx(0x49CCB8, "RTTI_49CCB8_Class_TTuner", 0);
MakeDword(0x49CCB8);
MakeUnkn(0x49CCBC, 1);
MakeNameEx(0x49CCBC, "", 0);
MakeByte(0x49CCBC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49CCBD, 0x49CCC4);
MakeDword(0x49CCC4);
MakeDword(0x49CCC8);
MakeWord(0x49CCCC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49CCCE, 0x49CCD4);
MakeWord(0x49CCD4);
MakeDword(0x49CCD6);
MakeDword(0x49CCDA);
MakeDword(0x49CCDE);
MakeDword(0x49CCE2);
MakeDword(0x49CCE6);
MakeDword(0x49CCEA);
MakeWord(0x49CCEE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49CCF0, 0x49CCFE);
MakeDword(0x49CCFE);
MakeDword(0x49CD02);
MakeDword(0x49CD06);
MakeDword(0x49CD0A);
MakeDword(0x49CD0E);
MakeDword(0x49CD12);
MakeWord(0x49CD16);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49CD18, 0x49CD1D);
MakeDword(0x49CD1D);
MakeDword(0x49CD21);
MakeDword(0x49CD25);
MakeDword(0x49CD29);
MakeDword(0x49CD2D);
MakeDword(0x49CD31);
MakeWord(0x49CD35);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49CD37, 0x49CD40);
MakeDword(0x49CD40);
MakeDword(0x49CD44);
MakeDword(0x49CD48);
MakeDword(0x49CD4C);
MakeDword(0x49CD50);
MakeDword(0x49CD54);
MakeWord(0x49CD58);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49CD5A, 0x49CD61);
MakeDword(0x49CD61);
MakeDword(0x49CD65);
MakeDword(0x49CD69);
MakeDword(0x49CD6D);
MakeDword(0x49CD71);
MakeDword(0x49CD75);
MakeWord(0x49CD79);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49CD7B, 0x49CD84);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49CD8C, -1);
MakeDword(0x49CD88);
MakeDword(0x49CD84);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49CD98, -1);
MakeDword(0x49CD94);
MakeDword(0x49CD90);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49CDA4, -1);
MakeDword(0x49CDA0);
MakeDword(0x49CD9C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49CDB0, -1);
MakeDword(0x49CDAC);
MakeDword(0x49CDA8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49CDBC, -1);
MakeDword(0x49CDB8);
MakeDword(0x49CDB4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49CDC8, -1);
MakeDword(0x49CDC4);
MakeDword(0x49CDC0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49CDD4, -1);
MakeDword(0x49CDD0);
MakeDword(0x49CDCC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49CDE0, -1);
MakeDword(0x49CDDC);
MakeDword(0x49CDD8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49CDEC, -1);
MakeDword(0x49CDE8);
MakeDword(0x49CDE4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49CDF8, -1);
MakeDword(0x49CDF4);
MakeDword(0x49CDF0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49CE04, -1);
MakeDword(0x49CE00);
MakeDword(0x49CDFC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49CE10, -1);
MakeDword(0x49CE0C);
MakeDword(0x49CE08);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49CE1C, -1);
MakeDword(0x49CE18);
MakeDword(0x49CE14);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49CE28, -1);
MakeDword(0x49CE24);
MakeDword(0x49CE20);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49CE34, -1);
MakeDword(0x49CE30);
MakeDword(0x49CE2C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49CE40, -1);
MakeDword(0x49CE3C);
MakeDword(0x49CE38);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49CE4C, -1);
MakeDword(0x49CE48);
MakeDword(0x49CE44);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49CE58, -1);
MakeDword(0x49CE54);
MakeDword(0x49CE50);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49CE64, -1);
MakeDword(0x49CE60);
MakeDword(0x49CE5C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49CE70, -1);
MakeDword(0x49CE6C);
MakeDword(0x49CE68);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49CE7C, -1);
MakeDword(0x49CE78);
MakeDword(0x49CE74);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49CE88, -1);
MakeDword(0x49CE84);
MakeDword(0x49CE80);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49CE94, -1);
MakeDword(0x49CE90);
MakeDword(0x49CE8C);
MakeUnkn(0x49CE98, 1);
MakeNameEx(0x49CE98, "TTuner.Create", 0x20);
MakeComm(0x49CE98, "'constructor TTuner.Create(AOwner:TComponent);'");
MakeCode(0x49CE98);
MakeCode(0x49CEAA);
MakeComm(0x49CEB8, "'TTuner.Note:Integer'");
MakeComm(0x49CED4, "'TTimer.Create'");
MakeComm(0x49CEDB, "'TTuner.?f274:TTimer'");
MakeComm(0x49CEF0, "'TTuner.?f274:TTimer'");
MakeCode(0x49CF12);
MakeFunction(0x49CE98, 0x49CF19);
MakeUnkn(0x49CF1C, 1);
MakeNameEx(0x49CF1C, "TTuner.Destroy", 0x20);
MakeComm(0x49CF1C, "'destructor TTuner.Destroy;'");
MakeCode(0x49CF1C);
MakeCode(0x49CF36);
MakeCode(0x49CF4D);
MakeFunction(0x49CF1C, 0x49CF50);
MakeUnkn(0x49CF50, 1);
MakeNameEx(0x49CF50, "TTuner.CMMouseEnter", 0x20);
MakeComm(0x49CF50, "'procedure TTuner.CMMouseEnter(var Message:TMessage);'");
MakeCode(0x49CF50);
MakeFunction(0x49CF50, 0x49CF65);
MakeUnkn(0x49CF68, 1);
MakeNameEx(0x49CF68, "TTuner.CMMouseLeave", 0x20);
MakeComm(0x49CF68, "'procedure TTuner.CMMouseLeave(var Message:TMessage);'");
MakeCode(0x49CF68);
MakeFunction(0x49CF68, 0x49CF84);
MakeCode(0x49CF84);
MakeComm(0x49CF98, "'TBitmap.Create'");
MakeCode(0x49CFFF);
MakeCode(0x49D02D);
MakeCode(0x49D084);
MakeCode(0x49D09B);
MakeCode(0x49D0BD);
MakeCode(0x49D0CA);
MakeCode(0x49D0D3);
MakeCode(0x49D0D8);
MakeFunction(0x49CF84, 0x49D0E0);
MakeCode(0x49D0E0);
MakeComm(0x49D122, "'TTuner.?f270:byte'");
MakeComm(0x49D152, "'TTuner.?f270:byte'");
MakeComm(0x49D180, "'TTuner.FFont:TFont'");
MakeComm(0x49D185, "'TTuner...........................FCanvas:TCanvas'");
MakeComm(0x49D19D, "'TTuner............................FCanvas:TCanvas'");
MakeComm(0x49D1B0, "'TTuner.............................FCanvas:TCanvas'");
MakeComm(0x49D1B6, "'TCanvas.Brush:TBrush'");
MakeComm(0x49D1C8, "'TTuner..............................FCanvas:TCanvas'");
MakeComm(0x49D1EE, "'TTuner.Note:Integer'");
MakeComm(0x49D209, "'TTuner...............................FCanvas:TCanvas'");
MakeComm(0x49D21C, "'TTuner................................FCanvas:TCanvas'");
MakeComm(0x49D222, "'TCanvas.Font:TFont'");
MakeComm(0x49D22E, "'0x1'");
MakeComm(0x49D23D, "'TTuner.DisplayNumber:Boolean'");
MakeComm(0x49D24C, "'TTuner.Note:Integer'");
MakeCode(0x49D275);
MakeComm(0x49D28A, "'TTuner.................................FCanvas:TCanvas'");
MakeComm(0x49D29D, "'TTuner.Note:Integer'");
MakeComm(0x49D2BC, "'TTuner..................................FCanvas:TCanvas'");
MakeComm(0x49D2C2, "'TCanvas.Font:TFont'");
MakeComm(0x49D2CC, "'0x1'");
MakeCode(0x49D2EA);
MakeComm(0x49D2FF, "'TTuner...................................FCanvas:TCanvas'");
MakeCode(0x49D312);
MakeComm(0x49D317, "'TTuner.Note:Integer'");
MakeCode(0x49D32E);
MakeComm(0x49D343, "'TTuner....................................FCanvas:TCanvas'");
MakeCode(0x49D354);
MakeComm(0x49D35A, "'TWinControl.Focused'");
MakeComm(0x49D376, "'TTuner.....................................FCanvas:TCanvas'");
MakeCode(0x49D387);
MakeCode(0x49D394);
MakeCode(0x49D39D);
MakeCode(0x49D3A2);
MakeFunction(0x49D0E0, 0x49D3AB);
MakeByte(0x49D3AC);
MakeUnkn(0x49D3AC, 1);
MakeNameEx(0x49D3AC, "gvar_0049D3AC", 0);
MakeUnkn(0x49D3B0, 1);
MakeNameEx(0x49D3B0, "TTuner.SetDisplayNumber", 0x20);
MakeComm(0x49D3B0, "'procedure TTuner.SetDisplayNumber(Value:Boolean);'");
MakeCode(0x49D3B0);
MakeComm(0x49D3B0, "'TTuner.DisplayNumber:Boolean'");
MakeComm(0x49D3B8, "'TTuner.DisplayNumber:Boolean'");
MakeFunction(0x49D3B0, 0x49D3C4);
MakeUnkn(0x49D3C4, 1);
MakeNameEx(0x49D3C4, "TTuner.SetNote", 0x20);
MakeComm(0x49D3C4, "'procedure TTuner.SetNote(Value:Integer);'");
MakeCode(0x49D3C4);
MakeComm(0x49D3C7, "'TTuner.Note:Integer'");
MakeComm(0x49D3CF, "'TTuner.Note:Integer'");
MakeComm(0x49D3DC, "'TTuner.?f262:word'");
MakeComm(0x49D3E8, "'TTuner.?f264:dword'");
MakeComm(0x49D3EE, "'TTuner.OnChange'");
MakeCode(0x49D3F4);
MakeFunction(0x49D3C4, 0x49D3F6);
MakeCode(0x49D3F8);
MakeCode(0x49D419);
MakeFunction(0x49D3F8, 0x49D41B);
MakeCode(0x49D41C);
MakeCode(0x49D43E);
MakeFunction(0x49D41C, 0x49D440);
MakeUnkn(0x49D440, 1);
MakeNameEx(0x49D440, "TTuner.KeyDown", 0x20);
MakeComm(0x49D440, "'procedure TTuner.KeyDown(Key:Word; Shift:TShiftState);'");
MakeCode(0x49D440);
MakeCode(0x49D452);
MakeCode(0x49D45F);
MakeFunction(0x49D440, 0x49D46C);
MakeUnkn(0x49D46C, 1);
MakeNameEx(0x49D46C, "TTuner.WMGetDlgCode", 0x20);
MakeComm(0x49D46C, "'procedure TTuner.WMGetDlgCode(?:?);'");
MakeCode(0x49D46C);
MakeComm(0x49D473, "'TWinControl.DefaultHandler'");
MakeFunction(0x49D46C, 0x49D47C);
MakeUnkn(0x49D47C, 1);
MakeNameEx(0x49D47C, "TTuner.WMSetFocus", 0x20);
MakeComm(0x49D47C, "'procedure TTuner.WMSetFocus(var Message:TWMSetFocus);'");
MakeCode(0x49D47C);
MakeFunction(0x49D47C, 0x49D48F);
MakeUnkn(0x49D490, 1);
MakeNameEx(0x49D490, "TTuner.WMKillFocus", 0x20);
MakeComm(0x49D490, "'procedure TTuner.WMKillFocus(var Message:TWMSetFocus);'");
MakeCode(0x49D490);
MakeFunction(0x49D490, 0x49D4A3);
MakeCode(0x49D4A4);
MakeComm(0x49D4D8, "'TWinControl.GetClientRect'");
MakeCode(0x49D500);
MakeCode(0x49D504);
MakeCode(0x49D506);
MakeComm(0x49D508, "'TTuner.?f259:byte'");
MakeComm(0x49D510, "'TTuner.?f259:byte'");
MakeCode(0x49D53E);
MakeCode(0x49D546);
MakeCode(0x49D54D);
MakeComm(0x49D54F, "'TTuner.?f259:byte'");
MakeCode(0x49D59F);
MakeComm(0x49D5D0, "'TTuner.?f270:byte'");
MakeCode(0x49D5D0);
MakeComm(0x49D5D8, "'TTuner.?f270:byte'");
MakeCode(0x49D5E5);
MakeFunction(0x49D4A4, 0x49D5EC);
MakeCode(0x49D5EC);
MakeCode(0x49D605);
MakeCode(0x49D612);
MakeFunction(0x49D5EC, 0x49D624);
MakeUnkn(0x49D624, 1);
MakeNameEx(0x49D624, "TTuner.MouseDown", 0x20);
MakeComm(0x49D624, "'procedure TTuner.MouseDown(Button:TMouseButton; Shift:TShiftState; X:Integer; Y:Integer);'");
MakeCode(0x49D624);
MakeComm(0x49D64E, "'TWinControl.SetFocus'");
MakeComm(0x49D66B, "'TTuner.?f274:TTimer'");
MakeComm(0x49D678, "'TTuner.?f274:TTimer'");
MakeCode(0x49D683);
MakeFunction(0x49D624, 0x49D68A);
MakeUnkn(0x49D68C, 1);
MakeNameEx(0x49D68C, "TTuner.MouseMove", 0x20);
MakeComm(0x49D68C, "'procedure TTuner.MouseMove(Shift:TShiftState; X:Integer; Y:Integer);'");
MakeCode(0x49D68C);
MakeCode(0x49D6B9);
MakeFunction(0x49D68C, 0x49D6BF);
MakeUnkn(0x49D6C0, 1);
MakeNameEx(0x49D6C0, "TTuner.MouseUp", 0x20);
MakeComm(0x49D6C0, "'procedure TTuner.MouseUp(Button:TMouseButton; Shift:TShiftState; X:Integer; Y:Integer);'");
MakeCode(0x49D6C0);
MakeComm(0x49D6E8, "'TTuner.?f274:TTimer'");
MakeCode(0x49D6F3);
MakeFunction(0x49D6C0, 0x49D6FA);
MakeUnkn(0x49D6FC, 1);
MakeNameEx(0x49D6FC, "TTuner.sub_0049D6FC", 0x20);
MakeComm(0x49D6FC, "'procedure TTuner.sub_0049D6FC;'");
MakeCode(0x49D6FC);
MakeComm(0x49D703, "'TWinControl.DefaultHandler'");
MakeComm(0x49D708, "'TTuner.?f274:TTimer'");
MakeFunction(0x49D6FC, 0x49D71E);
MakeCode(0x49D720);
MakeComm(0x49D737, "'TWinControl.GetClientRect'");
MakeComm(0x49D75C, "'TWinControl.GetClientRect'");
MakeCode(0x49D77D);
MakeFunction(0x49D720, 0x49D782);
MakeCode(0x49D784);
MakeComm(0x49D79B, "'TWinControl.GetClientRect'");
MakeCode(0x49D7BB);
MakeFunction(0x49D784, 0x49D7C0);
MakeUnkn(0x49D7C0, 1);
MakeNameEx(0x49D7C0, "TTuner.CMHintShow", 0x20);
MakeComm(0x49D7C0, "'procedure TTuner.CMHintShow(Message:TMessage);'");
MakeCode(0x49D7C0);
MakeComm(0x49D7C6, "'TTuner.?f26A:word'");
MakeComm(0x49D7E3, "'TTuner.?f26C:dword'");
MakeComm(0x49D7E9, "'TTuner.OnHint'");
MakeCode(0x49D7EF);
MakeFunction(0x49D7C0, 0x49D7F2);
MakeCode(0x49D7F4);
MakeCode(0x49D837);
MakeCode(0x49D844);
MakeCode(0x49D845);
MakeCode(0x49D84A);
MakeFunction(0x49D7F4, 0x49D84E);
MakeUnkn(0x49D850, 1);
MakeNameEx(0x49D850, "VMT_49D850_TSepLabel", 0);
MakeDword(0x49D850);
MakeDword(0x49D854);
MakeDword(0x49D858);
MakeDword(0x49D85C);
MakeDword(0x49D860);
MakeDword(0x49D864);
MakeDword(0x49D868);
MakeDword(0x49D86C);
MakeDword(0x49D870);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49D934, 0x49D93E);
MakeDword(0x49D874);
MakeDword(0x49D878);
MakeDword(0x49D87C);
MakeDword(0x49D880);
MakeDword(0x49D884);
MakeDword(0x49D888);
MakeDword(0x49D88C);
MakeDword(0x49D890);
MakeDword(0x49D894);
MakeDword(0x49D898);
MakeComm(0x49D89C, "'+0'");
MakeDword(0x49D89C);
MakeComm(0x49D8A0, "'+4'");
MakeDword(0x49D8A0);
MakeComm(0x49D8A4, "'+8'");
MakeDword(0x49D8A4);
MakeComm(0x49D8A8, "'+C'");
MakeDword(0x49D8A8);
MakeComm(0x49D8AC, "'+10'");
MakeDword(0x49D8AC);
MakeComm(0x49D8B0, "'+14'");
MakeDword(0x49D8B0);
MakeComm(0x49D8B4, "'+18'");
MakeDword(0x49D8B4);
MakeComm(0x49D8B8, "'+1C'");
MakeDword(0x49D8B8);
MakeComm(0x49D8BC, "'+20'");
MakeDword(0x49D8BC);
MakeComm(0x49D8C0, "'+24'");
MakeDword(0x49D8C0);
MakeComm(0x49D8C4, "'+28'");
MakeDword(0x49D8C4);
MakeComm(0x49D8C8, "'+2C'");
MakeDword(0x49D8C8);
MakeComm(0x49D8CC, "'+30'");
MakeDword(0x49D8CC);
MakeComm(0x49D8D0, "'+34'");
MakeDword(0x49D8D0);
MakeComm(0x49D8D4, "'+38'");
MakeDword(0x49D8D4);
MakeComm(0x49D8D8, "'+3C'");
MakeDword(0x49D8D8);
MakeComm(0x49D8DC, "'+40'");
MakeDword(0x49D8DC);
MakeComm(0x49D8E0, "'+44'");
MakeDword(0x49D8E0);
MakeComm(0x49D8E4, "'+48'");
MakeDword(0x49D8E4);
MakeComm(0x49D8E8, "'+4C'");
MakeDword(0x49D8E8);
MakeComm(0x49D8EC, "'+50'");
MakeDword(0x49D8EC);
MakeComm(0x49D8F0, "'+54'");
MakeDword(0x49D8F0);
MakeComm(0x49D8F4, "'+58'");
MakeDword(0x49D8F4);
MakeComm(0x49D8F8, "'+5C'");
MakeDword(0x49D8F8);
MakeComm(0x49D8FC, "'+60'");
MakeDword(0x49D8FC);
MakeComm(0x49D900, "'+64'");
MakeDword(0x49D900);
MakeComm(0x49D904, "'+68'");
MakeDword(0x49D904);
MakeComm(0x49D908, "'+6C'");
MakeDword(0x49D908);
MakeComm(0x49D90C, "'+70'");
MakeDword(0x49D90C);
MakeComm(0x49D910, "'+74'");
MakeDword(0x49D910);
MakeComm(0x49D914, "'+78'");
MakeDword(0x49D914);
MakeComm(0x49D918, "'+7C'");
MakeDword(0x49D918);
MakeComm(0x49D91C, "'+80'");
MakeDword(0x49D91C);
MakeComm(0x49D920, "'+84'");
MakeDword(0x49D920);
MakeComm(0x49D924, "'+88'");
MakeDword(0x49D924);
MakeComm(0x49D928, "'+8C'");
MakeDword(0x49D928);
MakeComm(0x49D92C, "'+90'");
MakeDword(0x49D92C);
MakeComm(0x49D930, "'+94'");
MakeDword(0x49D930);
MakeUnkn(0x49D940, 1);
MakeNameEx(0x49D940, "RTTI_49D940_Class_TSepLabel", 0);
MakeDword(0x49D940);
MakeUnkn(0x49D944, 1);
MakeNameEx(0x49D944, "", 0);
MakeByte(0x49D944);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49D945, 0x49D94F);
MakeDword(0x49D94F);
MakeDword(0x49D953);
MakeWord(0x49D957);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49D959, 0x49D962);
MakeWord(0x49D962);
MakeUnkn(0x49D964, 1);
MakeNameEx(0x49D964, "TSepLabel.Paint", 0x20);
MakeComm(0x49D964, "'procedure TSepLabel.Paint;'");
MakeCode(0x49D964);
MakeComm(0x49D979, "'TControl.GetClientRect'");
MakeComm(0x49D986, "'TSepLabel.FWordWrap:Boolean'");
MakeComm(0x49D999, "'TSepLabel.FAlignment:TAlignment'");
MakeComm(0x49D9BD, "'TCustomLabel.DoDrawText'");
MakeComm(0x49D9C7, "'TSepLabel.........FCanvas:TCanvas'");
MakeCode(0x49D9F1);
MakeComm(0x49D9FE, "'TSepLabel..........FCanvas:TCanvas'");
MakeFunction(0x49D964, 0x49DA16);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49DA20, -1);
MakeDword(0x49DA1C);
MakeDword(0x49DA18);
MakeUnkn(0x49DA24, 1);
MakeNameEx(0x49DA24, "VMT_49DA24_TTrackForm", 0);
MakeDword(0x49DA24);
MakeDword(0x49DA28);
MakeDword(0x49DA2C);
MakeDword(0x49DA30);
MakeDword(0x49DA34);
MakeDword(0x49DA38);
MakeUnkn(0x49DB74, 1);
MakeNameEx(0x49DB74, "TTrackForm_FieldTable", 0);
MakeWord(0x49DB74);
MakeDword(0x49DB76);
MakeWord(0x49E15A);
MakeDword(0x49E15C);
MakeDword(0x49E160);
MakeDword(0x49E164);
MakeDword(0x49E168);
MakeDword(0x49E16C);
MakeDword(0x49E170);
MakeDword(0x49E174);
MakeDword(0x49E178);
MakeDword(0x49E17C);
MakeDword(0x49E180);
MakeDword(0x49E184);
MakeDword(0x49E188);
MakeDword(0x49E18C);
MakeDword(0x49DB7A);
MakeWord(0x49DB7E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DB80, 0x49DB8C);
MakeDword(0x49DB8C);
MakeWord(0x49DB90);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DB92, 0x49DB9C);
MakeDword(0x49DB9C);
MakeWord(0x49DBA0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DBA2, 0x49DBAC);
MakeDword(0x49DBAC);
MakeWord(0x49DBB0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DBB2, 0x49DBBC);
MakeDword(0x49DBBC);
MakeWord(0x49DBC0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DBC2, 0x49DBCB);
MakeDword(0x49DBCB);
MakeWord(0x49DBCF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DBD1, 0x49DBDE);
MakeDword(0x49DBDE);
MakeWord(0x49DBE2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DBE4, 0x49DBED);
MakeDword(0x49DBED);
MakeWord(0x49DBF1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DBF3, 0x49DBFA);
MakeDword(0x49DBFA);
MakeWord(0x49DBFE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DC00, 0x49DC0D);
MakeDword(0x49DC0D);
MakeWord(0x49DC11);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DC13, 0x49DC1A);
MakeDword(0x49DC1A);
MakeWord(0x49DC1E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DC20, 0x49DC27);
MakeDword(0x49DC27);
MakeWord(0x49DC2B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DC2D, 0x49DC34);
MakeDword(0x49DC34);
MakeWord(0x49DC38);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DC3A, 0x49DC41);
MakeDword(0x49DC41);
MakeWord(0x49DC45);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DC47, 0x49DC4E);
MakeDword(0x49DC4E);
MakeWord(0x49DC52);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DC54, 0x49DC5B);
MakeDword(0x49DC5B);
MakeWord(0x49DC5F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DC61, 0x49DC68);
MakeDword(0x49DC68);
MakeWord(0x49DC6C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DC6E, 0x49DC79);
MakeDword(0x49DC79);
MakeWord(0x49DC7D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DC7F, 0x49DC90);
MakeDword(0x49DC90);
MakeWord(0x49DC94);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DC96, 0x49DCA9);
MakeDword(0x49DCA9);
MakeWord(0x49DCAD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DCAF, 0x49DCC1);
MakeDword(0x49DCC1);
MakeWord(0x49DCC5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DCC7, 0x49DCDE);
MakeDword(0x49DCDE);
MakeWord(0x49DCE2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DCE4, 0x49DCEB);
MakeDword(0x49DCEB);
MakeWord(0x49DCEF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DCF1, 0x49DCF8);
MakeDword(0x49DCF8);
MakeWord(0x49DCFC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DCFE, 0x49DD05);
MakeDword(0x49DD05);
MakeWord(0x49DD09);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DD0B, 0x49DD12);
MakeDword(0x49DD12);
MakeWord(0x49DD16);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DD18, 0x49DD25);
MakeDword(0x49DD25);
MakeWord(0x49DD29);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DD2B, 0x49DD32);
MakeDword(0x49DD32);
MakeWord(0x49DD36);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DD38, 0x49DD3F);
MakeDword(0x49DD3F);
MakeWord(0x49DD43);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DD45, 0x49DD52);
MakeDword(0x49DD52);
MakeWord(0x49DD56);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DD58, 0x49DD5F);
MakeDword(0x49DD5F);
MakeWord(0x49DD63);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DD65, 0x49DD71);
MakeDword(0x49DD71);
MakeWord(0x49DD75);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DD77, 0x49DD82);
MakeDword(0x49DD82);
MakeWord(0x49DD86);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DD88, 0x49DD8F);
MakeDword(0x49DD8F);
MakeWord(0x49DD93);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DD95, 0x49DDA0);
MakeDword(0x49DDA0);
MakeWord(0x49DDA4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DDA6, 0x49DDAD);
MakeDword(0x49DDAD);
MakeWord(0x49DDB1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DDB3, 0x49DDC3);
MakeDword(0x49DDC3);
MakeWord(0x49DDC7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DDC9, 0x49DDD8);
MakeDword(0x49DDD8);
MakeWord(0x49DDDC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DDDE, 0x49DDE8);
MakeDword(0x49DDE8);
MakeWord(0x49DDEC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DDEE, 0x49DDF6);
MakeDword(0x49DDF6);
MakeWord(0x49DDFA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DDFC, 0x49DE08);
MakeDword(0x49DE08);
MakeWord(0x49DE0C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DE0E, 0x49DE1B);
MakeDword(0x49DE1B);
MakeWord(0x49DE1F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DE21, 0x49DE2F);
MakeDword(0x49DE2F);
MakeWord(0x49DE33);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DE35, 0x49DE42);
MakeDword(0x49DE42);
MakeWord(0x49DE46);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DE48, 0x49DE56);
MakeDword(0x49DE56);
MakeWord(0x49DE5A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DE5C, 0x49DE66);
MakeDword(0x49DE66);
MakeWord(0x49DE6A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DE6C, 0x49DE7A);
MakeDword(0x49DE7A);
MakeWord(0x49DE7E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DE80, 0x49DE91);
MakeDword(0x49DE91);
MakeWord(0x49DE95);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DE97, 0x49DE9F);
MakeDword(0x49DE9F);
MakeWord(0x49DEA3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DEA5, 0x49DEB7);
MakeDword(0x49DEB7);
MakeWord(0x49DEBB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DEBD, 0x49DECD);
MakeDword(0x49DECD);
MakeWord(0x49DED1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DED3, 0x49DEE1);
MakeDword(0x49DEE1);
MakeWord(0x49DEE5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DEE7, 0x49DEEE);
MakeDword(0x49DEEE);
MakeWord(0x49DEF2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DEF4, 0x49DF06);
MakeDword(0x49DF06);
MakeWord(0x49DF0A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DF0C, 0x49DF13);
MakeDword(0x49DF13);
MakeWord(0x49DF17);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DF19, 0x49DF23);
MakeDword(0x49DF23);
MakeWord(0x49DF27);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DF29, 0x49DF33);
MakeDword(0x49DF33);
MakeWord(0x49DF37);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DF39, 0x49DF43);
MakeDword(0x49DA3C);
MakeUnkn(0x49DF43, 1);
MakeNameEx(0x49DF43, "TTrackForm_MethodTable", 0);
MakeWord(0x49DF43);
MakeWord(0x49DF45);
MakeDword(0x49DF47);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DF4B, 0x49DF56);
MakeWord(0x49DF56);
MakeDword(0x49DF58);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DF5C, 0x49DF6E);
MakeWord(0x49DF6E);
MakeDword(0x49DF70);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DF74, 0x49DF80);
MakeWord(0x49DF80);
MakeDword(0x49DF82);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DF86, 0x49DF93);
MakeWord(0x49DF93);
MakeDword(0x49DF95);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DF99, 0x49DFA9);
MakeWord(0x49DFA9);
MakeDword(0x49DFAB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DFAF, 0x49DFC5);
MakeWord(0x49DFC5);
MakeDword(0x49DFC7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DFCB, 0x49DFE3);
MakeWord(0x49DFE3);
MakeDword(0x49DFE5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DFE9, 0x49DFF5);
MakeWord(0x49DFF5);
MakeDword(0x49DFF7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49DFFB, 0x49E012);
MakeWord(0x49E012);
MakeDword(0x49E014);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49E018, 0x49E034);
MakeWord(0x49E034);
MakeDword(0x49E036);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49E03A, 0x49E04D);
MakeWord(0x49E04D);
MakeDword(0x49E04F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49E053, 0x49E065);
MakeWord(0x49E065);
MakeDword(0x49E067);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49E06B, 0x49E07A);
MakeWord(0x49E07A);
MakeDword(0x49E07C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49E080, 0x49E090);
MakeWord(0x49E090);
MakeDword(0x49E092);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49E096, 0x49E0AC);
MakeWord(0x49E0AC);
MakeDword(0x49E0AE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49E0B2, 0x49E0C7);
MakeWord(0x49E0C7);
MakeDword(0x49E0C9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49E0CD, 0x49E0D7);
MakeWord(0x49E0D7);
MakeDword(0x49E0D9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49E0DD, 0x49E0EE);
MakeWord(0x49E0EE);
MakeDword(0x49E0F0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49E0F4, 0x49E109);
MakeWord(0x49E109);
MakeDword(0x49E10B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49E10F, 0x49E11E);
MakeWord(0x49E11E);
MakeDword(0x49E120);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49E124, 0x49E137);
MakeWord(0x49E137);
MakeDword(0x49E139);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49E13D, 0x49E14F);
MakeDword(0x49DA40);
MakeDword(0x49DA44);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49E14F, 0x49E15A);
MakeDword(0x49DA48);
MakeDword(0x49DA4C);
MakeDword(0x49DA50);
MakeDword(0x49DA54);
MakeDword(0x49DA58);
MakeDword(0x49DA5C);
MakeDword(0x49DA60);
MakeDword(0x49DA64);
MakeDword(0x49DA68);
MakeDword(0x49DA6C);
MakeComm(0x49DA70, "'+0'");
MakeDword(0x49DA70);
MakeComm(0x49DA74, "'+4'");
MakeDword(0x49DA74);
MakeComm(0x49DA78, "'+8'");
MakeDword(0x49DA78);
MakeComm(0x49DA7C, "'+C'");
MakeDword(0x49DA7C);
MakeComm(0x49DA80, "'+10'");
MakeDword(0x49DA80);
MakeComm(0x49DA84, "'+14'");
MakeDword(0x49DA84);
MakeComm(0x49DA88, "'+18'");
MakeDword(0x49DA88);
MakeComm(0x49DA8C, "'+1C'");
MakeDword(0x49DA8C);
MakeComm(0x49DA90, "'+20'");
MakeDword(0x49DA90);
MakeComm(0x49DA94, "'+24'");
MakeDword(0x49DA94);
MakeComm(0x49DA98, "'+28'");
MakeDword(0x49DA98);
MakeComm(0x49DA9C, "'+2C'");
MakeDword(0x49DA9C);
MakeComm(0x49DAA0, "'+30'");
MakeDword(0x49DAA0);
MakeComm(0x49DAA4, "'+34'");
MakeDword(0x49DAA4);
MakeComm(0x49DAA8, "'+38'");
MakeDword(0x49DAA8);
MakeComm(0x49DAAC, "'+3C'");
MakeDword(0x49DAAC);
MakeComm(0x49DAB0, "'+40'");
MakeDword(0x49DAB0);
MakeComm(0x49DAB4, "'+44'");
MakeDword(0x49DAB4);
MakeComm(0x49DAB8, "'+48'");
MakeDword(0x49DAB8);
MakeComm(0x49DABC, "'+4C'");
MakeDword(0x49DABC);
MakeComm(0x49DAC0, "'+50'");
MakeDword(0x49DAC0);
MakeComm(0x49DAC4, "'+54'");
MakeDword(0x49DAC4);
MakeComm(0x49DAC8, "'+58'");
MakeDword(0x49DAC8);
MakeComm(0x49DACC, "'+5C'");
MakeDword(0x49DACC);
MakeComm(0x49DAD0, "'+60'");
MakeDword(0x49DAD0);
MakeComm(0x49DAD4, "'+64'");
MakeDword(0x49DAD4);
MakeComm(0x49DAD8, "'+68'");
MakeDword(0x49DAD8);
MakeComm(0x49DADC, "'+6C'");
MakeDword(0x49DADC);
MakeComm(0x49DAE0, "'+70'");
MakeDword(0x49DAE0);
MakeComm(0x49DAE4, "'+74'");
MakeDword(0x49DAE4);
MakeComm(0x49DAE8, "'+78'");
MakeDword(0x49DAE8);
MakeComm(0x49DAEC, "'+7C'");
MakeDword(0x49DAEC);
MakeComm(0x49DAF0, "'+80'");
MakeDword(0x49DAF0);
MakeComm(0x49DAF4, "'+84'");
MakeDword(0x49DAF4);
MakeComm(0x49DAF8, "'+88'");
MakeDword(0x49DAF8);
MakeComm(0x49DAFC, "'+8C'");
MakeDword(0x49DAFC);
MakeComm(0x49DB00, "'+90'");
MakeDword(0x49DB00);
MakeComm(0x49DB04, "'+94'");
MakeDword(0x49DB04);
MakeComm(0x49DB08, "'+98'");
MakeDword(0x49DB08);
MakeComm(0x49DB0C, "'+9C'");
MakeDword(0x49DB0C);
MakeComm(0x49DB10, "'+A0'");
MakeDword(0x49DB10);
MakeComm(0x49DB14, "'+A4'");
MakeDword(0x49DB14);
MakeComm(0x49DB18, "'+A8'");
MakeDword(0x49DB18);
MakeComm(0x49DB1C, "'+AC'");
MakeDword(0x49DB1C);
MakeComm(0x49DB20, "'+B0'");
MakeDword(0x49DB20);
MakeComm(0x49DB24, "'+B4'");
MakeDword(0x49DB24);
MakeComm(0x49DB28, "'+B8'");
MakeDword(0x49DB28);
MakeComm(0x49DB2C, "'+BC'");
MakeDword(0x49DB2C);
MakeComm(0x49DB30, "'+C0'");
MakeDword(0x49DB30);
MakeComm(0x49DB34, "'+C4'");
MakeDword(0x49DB34);
MakeComm(0x49DB38, "'+C8'");
MakeDword(0x49DB38);
MakeComm(0x49DB3C, "'+CC'");
MakeDword(0x49DB3C);
MakeComm(0x49DB40, "'+D0'");
MakeDword(0x49DB40);
MakeComm(0x49DB44, "'+D4'");
MakeDword(0x49DB44);
MakeComm(0x49DB48, "'+D8'");
MakeDword(0x49DB48);
MakeComm(0x49DB4C, "'+DC'");
MakeDword(0x49DB4C);
MakeComm(0x49DB50, "'+E0'");
MakeDword(0x49DB50);
MakeComm(0x49DB54, "'+E4'");
MakeDword(0x49DB54);
MakeComm(0x49DB58, "'+E8'");
MakeDword(0x49DB58);
MakeComm(0x49DB5C, "'+EC'");
MakeDword(0x49DB5C);
MakeComm(0x49DB60, "'+F0'");
MakeDword(0x49DB60);
MakeComm(0x49DB64, "'+F4'");
MakeDword(0x49DB64);
MakeComm(0x49DB68, "'+F8'");
MakeDword(0x49DB68);
MakeComm(0x49DB6C, "'+FC'");
MakeDword(0x49DB6C);
MakeComm(0x49DB70, "'+100'");
MakeDword(0x49DB70);
MakeUnkn(0x49E190, 1);
MakeNameEx(0x49E190, "RTTI_49E190_Class_TTrackForm", 0);
MakeDword(0x49E190);
MakeUnkn(0x49E194, 1);
MakeNameEx(0x49E194, "", 0);
MakeByte(0x49E194);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49E195, 0x49E1A0);
MakeDword(0x49E1A0);
MakeDword(0x49E1A4);
MakeWord(0x49E1A8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49E1AA, 0x49E1B4);
MakeWord(0x49E1B4);
MakeCode(0x49E1B8);
MakeFunction(0x49E1B8, 0x49E1CF);
MakeUnkn(0x49E1D0, 1);
MakeNameEx(0x49E1D0, "TTrackForm.FormCreate", 0x20);
MakeComm(0x49E1D0, "'procedure TTrackForm.FormCreate(Sender:TObject);'");
MakeCode(0x49E1D0);
MakeComm(0x49E1E7, "'TTrackForm.Tuner1:TTuner'");
MakeComm(0x49E1ED, "'TTrackForm.?f470:TTuner'");
MakeComm(0x49E1F3, "'TTrackForm.Tuner2:TTuner'");
MakeComm(0x49E1F9, "'TTrackForm.?f474:TTuner'");
MakeComm(0x49E1FF, "'TTrackForm.Tuner3:TTuner'");
MakeComm(0x49E205, "'TTrackForm.?f478:TTuner'");
MakeComm(0x49E20B, "'TTrackForm.Tuner4:TTuner'");
MakeComm(0x49E211, "'TTrackForm.?f47C:TTuner'");
MakeComm(0x49E217, "'TTrackForm.Tuner5:TTuner'");
MakeComm(0x49E21D, "'TTrackForm.?f480:TTuner'");
MakeComm(0x49E223, "'TTrackForm.Tuner6:TTuner'");
MakeComm(0x49E229, "'TTrackForm.?f484:TTuner'");
MakeComm(0x49E22F, "'TTrackForm.Tuner7:TTuner'");
MakeComm(0x49E235, "'TTrackForm.?f488:TTuner'");
MakeCode(0x49E23D);
MakeComm(0x49E24A, "'TTrackForm.BankCombo:TComboBox'");
MakeComm(0x49E250, "'TComboBox.FItems:TStrings'");
MakeComm(0x49E258, "'TStrings.Add'");
MakeComm(0x49E266, "'TTrackForm.PresetList:TListBox'");
MakeComm(0x49E284, "'TTrackForm.PresetList:TListBox'");
MakeCode(0x49E28F);
MakeCode(0x49E29C);
MakeCode(0x49E2A5);
MakeCode(0x49E2AA);
MakeFunction(0x49E1D0, 0x49E2B1);
MakeUnkn(0x49E2B4, 1);
MakeNameEx(0x49E2B4, "TTrackForm.FormDestroy", 0x20);
MakeComm(0x49E2B4, "'procedure TTrackForm.FormDestroy(Sender:TObject);'");
MakeCode(0x49E2B4);
MakeFunction(0x49E2B4, 0x49E2BA);
MakeUnkn(0x49E2BC, 1);
MakeNameEx(0x49E2BC, "TTrackForm.FormCloseQuery", 0x20);
MakeComm(0x49E2BC, "'procedure TTrackForm.FormCloseQuery(Sender:TObject; var CanClose:Boolean);'");
MakeCode(0x49E2BC);
MakeComm(0x49E2E9, "'TTrackForm.FModalResult:TModalResult'");
MakeComm(0x49E2F9, "'TTrackForm.HighestNumberEdit:TEdit'");
MakeComm(0x49E31A, "'TTrackForm.?f450:Longint'");
MakeComm(0x49E326, "'TTrackForm.?f450:Longint'");
MakeComm(0x49E32F, "'TTrackForm.?f450:Longint'");
MakeCode(0x49E338);
MakeComm(0x49E33E, "'TTrackForm.HighestNumberEdit:TEdit'");
MakeComm(0x49E344, "'TEdit.FParent:TWinControl'");
MakeComm(0x49E354, "'TTrackForm.PageControl:TPageControl'");
MakeComm(0x49E35F, "'TTrackForm.HighestNumberEdit:TEdit'");
MakeComm(0x49E367, "'TWinControl.SetFocus'");
MakeCode(0x49E387);
MakeComm(0x49E38A, "'TTrackForm.TransposeEdit:TEdit'");
MakeComm(0x49E3AB, "'TTrackForm.?f454:Longint'");
MakeComm(0x49E3B7, "'TTrackForm.?f454:Longint'");
MakeComm(0x49E3C0, "'TTrackForm.?f454:Longint'");
MakeCode(0x49E3C9);
MakeComm(0x49E3CF, "'TTrackForm.TransposeEdit:TEdit'");
MakeComm(0x49E3D5, "'TEdit.FParent:TWinControl'");
MakeComm(0x49E3E5, "'TTrackForm.PageControl:TPageControl'");
MakeComm(0x49E3F0, "'TTrackForm.TransposeEdit:TEdit'");
MakeComm(0x49E3F8, "'TWinControl.SetFocus'");
MakeComm(0x49E418, "'TTrackForm.TransposeDirCombo:TComboBox'");
MakeCode(0x49E418);
MakeComm(0x49E420, "'TCustomCombo.GetItemIndex'");
MakeComm(0x49E42A, "'TTrackForm.?f454:Longint'");
MakeComm(0x49E430, "'TTrackForm.ChannelCombo:TComboBox'");
MakeCode(0x49E430);
MakeComm(0x49E438, "'TCustomCombo.GetItemIndex'");
MakeComm(0x49E468, "'TTrackForm.?f444:dword'");
MakeCode(0x49E468);
MakeComm(0x49E474, "'TTrackForm.ChannelCombo:TComboBox'");
MakeComm(0x49E47C, "'TCustomCombo.GetItemIndex'");
MakeComm(0x49E499, "'TTrackForm.ChannelCombo:TComboBox'");
MakeComm(0x49E49F, "'TComboBox.FParent:TWinControl'");
MakeComm(0x49E4AF, "'TTrackForm.PageControl:TPageControl'");
MakeComm(0x49E4BA, "'TTrackForm.ChannelCombo:TComboBox'");
MakeComm(0x49E4C2, "'TWinControl.SetFocus'");
MakeCode(0x49E520);
MakeCode(0x49E528);
MakeCode(0x49E535);
MakeCode(0x49E55E);
MakeCode(0x49E563);
MakeFunction(0x49E2BC, 0x49E56C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49E5C0, -1);
MakeDword(0x49E5BC);
MakeDword(0x49E5B8);
MakeUnkn(0x49E6B4, 1);
MakeNameEx(0x49E6B4, "TTrackForm.VolumeTrackChange", 0x20);
MakeComm(0x49E6B4, "'procedure TTrackForm.VolumeTrackChange;'");
MakeCode(0x49E6B4);
MakeComm(0x49E6CB, "'TTrackForm.VolumeEdit:TEdit'");
MakeComm(0x49E6D5, "'TWinControl.Focused'");
MakeComm(0x49E6E1, "'TTrackForm.VolumeTrack:TTrackBarEx'");
MakeComm(0x49E6E7, "'TTrackBarEx.Position:Integer'");
MakeComm(0x49E6F5, "'TTrackForm.VolumeEdit:TEdit'");
MakeCode(0x49E700);
MakeCode(0x49E70D);
MakeCode(0x49E716);
MakeCode(0x49E71B);
MakeFunction(0x49E6B4, 0x49E722);
MakeUnkn(0x49E724, 1);
MakeNameEx(0x49E724, "TTrackForm.VolumeEditChange", 0x20);
MakeComm(0x49E724, "'procedure TTrackForm.VolumeEditChange;'");
MakeCode(0x49E724);
MakeComm(0x49E73D, "'TTrackForm.VolumeEdit:TEdit'");
MakeComm(0x49E747, "'TWinControl.Focused'");
MakeComm(0x49E753, "'TTrackForm.VolumeEdit:TEdit'");
MakeComm(0x49E775, "'TTrackForm.VolumeTrack:TTrackBarEx'");
MakeCode(0x49E780);
MakeCode(0x49E78D);
MakeCode(0x49E79E);
MakeCode(0x49E7A3);
MakeFunction(0x49E724, 0x49E7AB);
MakeUnkn(0x49E7AC, 1);
MakeNameEx(0x49E7AC, "TTrackForm.VolumeEditExit", 0x20);
MakeComm(0x49E7AC, "'procedure TTrackForm.VolumeEditExit(Sender:TObject);'");
MakeCode(0x49E7AC);
MakeFunction(0x49E7AC, 0x49E7B2);
MakeUnkn(0x49E7B4, 1);
MakeNameEx(0x49E7B4, "TTrackForm.ControllerTrackChange", 0x20);
MakeComm(0x49E7B4, "'procedure TTrackForm.ControllerTrackChange;'");
MakeCode(0x49E7B4);
MakeComm(0x49E7CC, "'TTrackForm.ControllerCombo:TComboBox'");
MakeComm(0x49E7D4, "'TCustomCombo.GetItemIndex'");
MakeComm(0x49E7E5, "'TTrackForm.ControllerEdit:TEdit'");
MakeComm(0x49E7EF, "'TWinControl.Focused'");
MakeComm(0x49E7FB, "'TTrackForm.ControllerTrack:TTrackBarEx'");
MakeComm(0x49E801, "'TTrackBarEx.Position:Integer'");
MakeComm(0x49E80F, "'TTrackForm.ControllerEdit:TEdit'");
MakeComm(0x49E81A, "'TTrackForm.ControllerTrack:TTrackBarEx'");
MakeCode(0x49E81A);
MakeComm(0x49E820, "'TTrackBarEx.Position:Integer'");
MakeCode(0x49E82D);
MakeCode(0x49E83A);
MakeCode(0x49E843);
MakeCode(0x49E848);
MakeFunction(0x49E7B4, 0x49E850);
MakeUnkn(0x49E850, 1);
MakeNameEx(0x49E850, "TTrackForm.ControllerEditChange", 0x20);
MakeComm(0x49E850, "'procedure TTrackForm.ControllerEditChange;'");
MakeCode(0x49E850);
MakeComm(0x49E869, "'TTrackForm.ControllerEdit:TEdit'");
MakeComm(0x49E873, "'TWinControl.Focused'");
MakeComm(0x49E87F, "'TTrackForm.ControllerEdit:TEdit'");
MakeComm(0x49E8A1, "'TTrackForm.ControllerTrack:TTrackBarEx'");
MakeCode(0x49E8AC);
MakeCode(0x49E8B9);
MakeCode(0x49E8CA);
MakeCode(0x49E8CF);
MakeFunction(0x49E850, 0x49E8D7);
MakeUnkn(0x49E8D8, 1);
MakeNameEx(0x49E8D8, "TTrackForm.ControllerEditExit", 0x20);
MakeComm(0x49E8D8, "'procedure TTrackForm.ControllerEditExit(Sender:TObject);'");
MakeCode(0x49E8D8);
MakeFunction(0x49E8D8, 0x49E8DE);
MakeUnkn(0x49E8E0, 1);
MakeNameEx(0x49E8E0, "RTTI_49E8E0_Record_TDefPresetData", 0);
MakeDword(0x49E8E0);
MakeUnkn(0x49E8E4, 1);
MakeNameEx(0x49E8E4, "", 0);
MakeByte(0x49E8E4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x49E8E5, 0x49E8F4);
MakeDword(0x49E8F4);
MakeDword(0x49E8F8);
MakeDword(0x49E8FC);
MakeDword(0x49E900);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49E90C, -1);
MakeDword(0x49E908);
MakeDword(0x49E904);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49E920, -1);
MakeDword(0x49E91C);
MakeDword(0x49E918);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49E934, -1);
MakeDword(0x49E930);
MakeDword(0x49E92C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49E944, -1);
MakeDword(0x49E940);
MakeDword(0x49E93C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49E954, -1);
MakeDword(0x49E950);
MakeDword(0x49E94C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49E964, -1);
MakeDword(0x49E960);
MakeDword(0x49E95C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49E974, -1);
MakeDword(0x49E970);
MakeDword(0x49E96C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49E984, -1);
MakeDword(0x49E980);
MakeDword(0x49E97C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49E998, -1);
MakeDword(0x49E994);
MakeDword(0x49E990);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49E9AC, -1);
MakeDword(0x49E9A8);
MakeDword(0x49E9A4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49E9C0, -1);
MakeDword(0x49E9BC);
MakeDword(0x49E9B8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49E9D0, -1);
MakeDword(0x49E9CC);
MakeDword(0x49E9C8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49E9E0, -1);
MakeDword(0x49E9DC);
MakeDword(0x49E9D8);
MakeCode(0x49EA0C);
MakeFunction(0x49EA0C, 0x49EA3F);
MakeCode(0x49EA40);
MakeCode(0x49EA70);
MakeCode(0x49EA93);
MakeCode(0x49EAAB);
MakeCode(0x49EAC4);
MakeCode(0x49EACA);
MakeCode(0x49EAE2);
MakeFunction(0x49EA40, 0x49EAE8);
MakeUnkn(0x49EAE8, 1);
MakeNameEx(0x49EAE8, "TTrackForm.TunerChange", 0x20);
MakeComm(0x49EAE8, "'procedure TTrackForm.TunerChange;'");
MakeCode(0x49EAE8);
MakeFunction(0x49EAE8, 0x49EAEE);
MakeUnkn(0x49EAF0, 1);
MakeNameEx(0x49EAF0, "TTrackForm.PresetListClick", 0x20);
MakeComm(0x49EAF0, "'procedure TTrackForm.PresetListClick(Sender:TObject);'");
MakeCode(0x49EAF0);
MakeComm(0x49EAFF, "'TTrackForm.PresetList:TListBox'");
MakeComm(0x49EB07, "'TCustomListBox.GetItemIndex'");
MakeComm(0x49EB1B, "'TTrackForm.PresetList:TListBox'");
MakeComm(0x49EB21, "'TListBox.FOnClick:TNotifyEvent'");
MakeComm(0x49EB2A, "'TListBox.?f114:TMessageForm'");
MakeComm(0x49EB36, "'TTrackForm.?f46C:dword'");
MakeComm(0x49EB4D, "'TTrackForm.PresetList:TListBox'");
MakeComm(0x49EB55, "'TListBox.FOnClick:TNotifyEvent'");
MakeComm(0x49EB5B, "'TListBox.?f114:TMessageForm'");
MakeComm(0x49EB61, "'TListBox.FItems:TStrings'");
MakeComm(0x49EB6B, "'TStrings.sub_00417BF0'");
MakeComm(0x49EB77, "'TTrackForm.NumbersCheck:TCheckBox'");
MakeComm(0x49EB7F, "'TCustomCheckBox.SetChecked'");
MakeComm(0x49EB88, "'TTrackForm.?f448:dword'");
MakeCode(0x49EB96);
MakeCode(0x49EBAE);
MakeCode(0x49EBBB);
MakeComm(0x49EBBE, "'TTrackForm.?f46C:dword'");
MakeComm(0x49EBC7, "'TTrackForm.PresetList:TListBox'");
MakeComm(0x49EBD0, "'TListBox.FOnClick:TNotifyEvent'");
MakeComm(0x49EBD9, "'TListBox.?f114:TMessageForm'");
MakeCode(0x49EBE0);
MakeCode(0x49EBE5);
MakeCode(0x49EBE7);
MakeFunction(0x49EAF0, 0x49EBF6);
MakeCode(0x49EBF8);
MakeFunction(0x49EBF8, 0x49EC14);
MakeCode(0x49EC14);
MakeComm(0x49EC1B, "'TTrackForm.PresetList:TListBox'");
MakeComm(0x49EC23, "'TCustomListBox.SetItemIndex'");
MakeComm(0x49EC29, "'TTrackForm.PresetList:TListBox'");
MakeComm(0x49EC2F, "'TListBox.FItems:TStrings'");
MakeComm(0x49EC37, "'TStrings.GetCount'");
MakeComm(0x49EC42, "'TTrackForm.PresetList:TListBox'");
MakeCode(0x49EC42);
MakeComm(0x49EC48, "'TListBox.FItems:TStrings'");
MakeComm(0x49EC52, "'TStrings.sub_00417BF0'");
MakeComm(0x49EC5F, "'TTrackForm.PresetList:TListBox'");
MakeComm(0x49EC65, "'TListBox.FItems:TStrings'");
MakeComm(0x49EC6F, "'TStrings.Delete'");
MakeCode(0x49EC78);
MakeFunction(0x49EC14, 0x49EC7B);
MakeCode(0x49EC7C);
MakeCode(0x49EC84);
MakeComm(0x49ECDE, "'TRegistry.Create'");
MakeComm(0x49ECED, "'TRegistry.Create'");
MakeComm(0x49ED40, "'ERegistryException.Create'");
MakeCode(0x49ED4A);
MakeComm(0x49ED82, "'ERegistryException.Create'");
MakeCode(0x49ED8C);
MakeCode(0x49EDA0);
MakeCode(0x49EDFE);
MakeCode(0x49EE13);
MakeComm(0x49EE1A, "'TStringList.Create'");
MakeComm(0x49EE68, "'ERegistryException.Create'");
MakeCode(0x49EE72);
MakeComm(0x49EEAA, "'ERegistryException.Create'");
MakeCode(0x49EEB4);
MakeComm(0x49EED1, "'TStringList.GetCount'");
MakeCode(0x49EEE7);
MakeComm(0x49EEF2, "'TStringList.Get'");
MakeCode(0x49EF65);
MakeCode(0x49EF69);
MakeCode(0x49EF6B);
MakeCode(0x49EF99);
MakeCode(0x49EFA3);
MakeCode(0x49EFB0);
MakeCode(0x49EFB9);
MakeCode(0x49EFBE);
MakeCode(0x49EFC0);
MakeCode(0x49EFCD);
MakeCode(0x49EFDE);
MakeCode(0x49EFE3);
MakeCode(0x49EFE5);
MakeCode(0x49EFF2);
MakeCode(0x49F00D);
MakeCode(0x49F012);
MakeFunction(0x49EC7C, 0x49F01B);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49F024, -1);
MakeDword(0x49F020);
MakeDword(0x49F01C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49F034, -1);
MakeDword(0x49F030);
MakeDword(0x49F02C);
MakeCode(0x49F03C);
MakeCode(0x49F061);
MakeCode(0x49F064);
MakeCode(0x49F085);
MakeCode(0x49F0A7);
MakeCode(0x49F0AB);
MakeFunction(0x49F03C, 0x49F0DD);
MakeCode(0x49F0E0);
MakeFunction(0x49F0E0, 0x49F168);
MakeUnkn(0x49F168, 1);
MakeNameEx(0x49F168, "TTrackForm.NSRadioClick", 0x20);
MakeComm(0x49F168, "'procedure TTrackForm.NSRadioClick(Sender:TObject);'");
MakeCode(0x49F168);
MakeComm(0x49F179, "'TTrackForm.N4Radio:TRadioButton'");
MakeCode(0x49F19D);
MakeComm(0x49F19F, "'TTrackForm.N5BassRadio:TRadioButton'");
MakeCode(0x49F1C3);
MakeComm(0x49F1C5, "'TTrackForm.N5BanjoRadio:TRadioButton'");
MakeCode(0x49F1E9);
MakeComm(0x49F1EB, "'TTrackForm.N6GuitarRadio:TRadioButton'");
MakeCode(0x49F20C);
MakeComm(0x49F20E, "'TTrackForm.N6DrumsRadio:TRadioButton'");
MakeCode(0x49F22F);
MakeComm(0x49F231, "'TTrackForm.N7GuitarRadio:TRadioButton'");
MakeCode(0x49F250);
MakeCode(0x49F252);
MakeComm(0x49F254, "'TTrackForm.?f448:dword'");
MakeComm(0x49F273, "'TTrackForm.N6DrumsRadio:TRadioButton'");
MakeComm(0x49F27D, "'TTrackForm.HighestNumberEdit:TEdit'");
MakeCode(0x49F28F);
MakeComm(0x49F291, "'TTrackForm.HighestNumberEdit:TEdit'");
MakeCode(0x49F2A1);
MakeFunction(0x49F168, 0x49F2A7);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49F2B0, -1);
MakeDword(0x49F2AC);
MakeDword(0x49F2A8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49F2BC, -1);
MakeDword(0x49F2B8);
MakeDword(0x49F2B4);
MakeUnkn(0x49F2C0, 1);
MakeNameEx(0x49F2C0, "TTrackForm.PresetSaveButtonClick", 0x20);
MakeComm(0x49F2C0, "'procedure TTrackForm.PresetSaveButtonClick(Sender:TObject);'");
MakeCode(0x49F2C0);
MakeCode(0x49F2C8);
MakeCode(0x49F31F);
MakeComm(0x49F32B, "'TRegistry.Create'");
MakeComm(0x49F384, "'ERegistryException.Create'");
MakeCode(0x49F38E);
MakeCode(0x49F3E3);
MakeComm(0x49F3E6, "'TTrackForm.?f448:dword'");
MakeComm(0x49F3F7, "'TTrackForm.?f448:dword'");
MakeCode(0x49F405);
MakeCode(0x49F420);
MakeComm(0x49F423, "'TTrackForm.?f448:dword'");
MakeComm(0x49F47D, "'ERegistryException.Create'");
MakeCode(0x49F487);
MakeComm(0x49F48A, "'TTrackForm.NumbersCheck:TCheckBox'");
MakeComm(0x49F492, "'TCustomCheckBox.GetChecked'");
MakeCode(0x49F4B8);
MakeCode(0x49F4C5);
MakeCode(0x49F4D6);
MakeCode(0x49F4DB);
MakeCode(0x49F4ED);
MakeCode(0x49F4FA);
MakeCode(0x49F515);
MakeCode(0x49F51A);
MakeFunction(0x49F2C0, 0x49F521);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49F52C, -1);
MakeDword(0x49F528);
MakeDword(0x49F524);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49F53C, -1);
MakeDword(0x49F538);
MakeDword(0x49F534);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49F584, -1);
MakeDword(0x49F580);
MakeDword(0x49F57C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49F5A0, -1);
MakeDword(0x49F59C);
MakeDword(0x49F598);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49F5C8, -1);
MakeDword(0x49F5C4);
MakeDword(0x49F5C0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49F5D8, -1);
MakeDword(0x49F5D4);
MakeDword(0x49F5D0);
MakeUnkn(0x49F5E0, 1);
MakeNameEx(0x49F5E0, "TTrackForm.PresetDeleteButtonClick", 0x20);
MakeComm(0x49F5E0, "'procedure TTrackForm.PresetDeleteButtonClick(Sender:TObject);'");
MakeCode(0x49F5E0);
MakeCode(0x49F5E8);
MakeComm(0x49F604, "'TTrackForm.PresetList:TListBox'");
MakeComm(0x49F60C, "'TCustomListBox.GetItemIndex'");
MakeComm(0x49F61C, "'TTrackForm.PresetList:TListBox'");
MakeComm(0x49F626, "'TCustomListBox.GetItemIndex'");
MakeComm(0x49F631, "'TListBox.FItems:TStrings'");
MakeComm(0x49F639, "'TStrings.Get'");
MakeComm(0x49F686, "'TRegistry.Create'");
MakeComm(0x49F6DF, "'ERegistryException.Create'");
MakeCode(0x49F6E9);
MakeComm(0x49F739, "'ERegistryException.Create'");
MakeCode(0x49F743);
MakeCode(0x49F75E);
MakeCode(0x49F76B);
MakeCode(0x49F774);
MakeCode(0x49F779);
MakeCode(0x49F78B);
MakeCode(0x49F798);
MakeCode(0x49F7BB);
MakeCode(0x49F7C0);
MakeFunction(0x49F5E0, 0x49F7C7);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49F7D0, -1);
MakeDword(0x49F7CC);
MakeDword(0x49F7C8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49F7EC, -1);
MakeDword(0x49F7E8);
MakeDword(0x49F7E4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49F810, -1);
MakeDword(0x49F80C);
MakeDword(0x49F808);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49F820, -1);
MakeDword(0x49F81C);
MakeDword(0x49F818);
MakeUnkn(0x49F828, 1);
MakeNameEx(0x49F828, "TTrackForm.PresetSetDefaultButtonClick", 0x20);
MakeComm(0x49F828, "'procedure TTrackForm.PresetSetDefaultButtonClick(Sender:TObject);'");
MakeCode(0x49F828);
MakeComm(0x49F851, "'TTrackForm.PresetList:TListBox'");
MakeComm(0x49F859, "'TCustomListBox.GetItemIndex'");
MakeComm(0x49F869, "'TTrackForm.PresetList:TListBox'");
MakeComm(0x49F873, "'TCustomListBox.GetItemIndex'");
MakeComm(0x49F87E, "'TListBox.FItems:TStrings'");
MakeComm(0x49F886, "'TStrings.Get'");
MakeComm(0x49F8D8, "'TRegistry.Create'");
MakeComm(0x49F931, "'ERegistryException.Create'");
MakeCode(0x49F93B);
MakeCode(0x49F948);
MakeCode(0x49F955);
MakeCode(0x49F95E);
MakeCode(0x49F963);
MakeCode(0x49F975);
MakeCode(0x49F982);
MakeCode(0x49F9A0);
MakeCode(0x49F9A5);
MakeFunction(0x49F828, 0x49F9AC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49F9B4, -1);
MakeDword(0x49F9B0);
MakeDword(0x49F9AC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49F9C4, -1);
MakeDword(0x49F9C0);
MakeDword(0x49F9BC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49F9DC, -1);
MakeDword(0x49F9D8);
MakeDword(0x49F9D4);
MakeUnkn(0x49FA0C, 1);
MakeNameEx(0x49FA0C, "TTrackForm.PresetResetButtonClick", 0x20);
MakeComm(0x49FA0C, "'procedure TTrackForm.PresetResetButtonClick(Sender:TObject);'");
MakeCode(0x49FA0C);
MakeComm(0x49FA4F, "'TRegistry.Create'");
MakeCode(0x49FA7B);
MakeCode(0x49FA88);
MakeCode(0x49FA91);
MakeCode(0x49FA96);
MakeCode(0x49FAA8);
MakeCode(0x49FAB5);
MakeCode(0x49FABE);
MakeCode(0x49FAC3);
MakeFunction(0x49FA0C, 0x49FAC9);
MakeUnkn(0x49FB4C, 1);
MakeNameEx(0x49FB4C, "TTrackForm.PresetListDrawItem", 0x20);
MakeComm(0x49FB4C, "'procedure TTrackForm.PresetListDrawItem(?:?; ?:?; ?:?);'");
MakeCode(0x49FB4C);
MakeComm(0x49FB75, "'TTrackForm.PresetList:TListBox'");
MakeComm(0x49FB7E, "'TListBox.FCanvas:TCanvas'");
MakeComm(0x49FB93, "'TListBox.FItems:TStrings'");
MakeComm(0x49FB9B, "'TStrings.Get'");
MakeComm(0x49FB9E, "'TListBox.FCanvas:TCanvas'");
MakeComm(0x49FBA4, "'TCanvas.Font:TFont'");
MakeComm(0x49FBB2, "'TListBox.FItems:TStrings'");
MakeComm(0x49FBBA, "'TStrings.sub_00417BF0'");
MakeComm(0x49FBC2, "'TListBox.FCanvas:TCanvas'");
MakeComm(0x49FBC8, "'TCanvas.Font:TFont'");
MakeComm(0x49FBD4, "'0x1'");
MakeCode(0x49FBE1);
MakeCode(0x49FBED);
MakeComm(0x49FC00, "'TListBox.FCanvas:TCanvas'");
MakeComm(0x49FC11, "'TListBox.FCanvas:TCanvas'");
MakeComm(0x49FC17, "'TCanvas.Font:TFont'");
MakeCode(0x49FC23);
MakeCode(0x49FC30);
MakeCode(0x49FC39);
MakeCode(0x49FC3E);
MakeFunction(0x49FB4C, 0x49FC49);
MakeByte(0x49FC4C);
MakeUnkn(0x49FC4C, 1);
MakeNameEx(0x49FC4C, "gvar_0049FC4C", 0);
MakeUnkn(0x49FC50, 1);
MakeNameEx(0x49FC50, "TTrackForm.NumbersCheckClick", 0x20);
MakeComm(0x49FC50, "'procedure TTrackForm.NumbersCheckClick(Sender:TObject);'");
MakeCode(0x49FC50);
MakeComm(0x49FC55, "'TTrackForm.NumbersCheck:TCheckBox'");
MakeComm(0x49FC5D, "'TCustomCheckBox.GetChecked'");
MakeCode(0x49FC67);
MakeFunction(0x49FC50, 0x49FC7F);
MakeUnkn(0x49FC80, 1);
MakeNameEx(0x49FC80, "TTrackForm.HelpButtonClick", 0x20);
MakeComm(0x49FC80, "'procedure TTrackForm.HelpButtonClick(Sender:TObject);'");
MakeCode(0x49FC80);
MakeComm(0x49FC88, "'TTrackForm.HelpContext:THelpContext'");
MakeFunction(0x49FC80, 0x49FC95);
MakeUnkn(0x49FC98, 1);
MakeNameEx(0x49FC98, "TTrackForm.ControllerComboClick", 0x20);
MakeComm(0x49FC98, "'procedure TTrackForm.ControllerComboClick(Sender:TObject);'");
MakeCode(0x49FC98);
MakeComm(0x49FC9C, "'TTrackForm.ControllerCombo:TComboBox'");
MakeComm(0x49FCA4, "'TCustomCombo.GetItemIndex'");
MakeComm(0x49FCC6, "'TTrackForm.ControllerTrack:TTrackBarEx'");
MakeComm(0x49FCD6, "'TTrackForm.ControllerTrack:TTrackBarEx'");
MakeComm(0x49FCE6, "'TTrackForm.ControllerTrack:TTrackBarEx'");
MakeComm(0x49FCF6, "'TTrackForm.ControllerTrack:TTrackBarEx'");
MakeComm(0x49FD06, "'TTrackForm.ControllerEdit:TEdit'");
MakeCode(0x49FD13);
MakeComm(0x49FD15, "'TTrackForm.ControllerTrack:TTrackBarEx'");
MakeComm(0x49FD25, "'TTrackForm.ControllerTrack:TTrackBarEx'");
MakeComm(0x49FD35, "'TTrackForm.ControllerTrack:TTrackBarEx'");
MakeComm(0x49FD45, "'TTrackForm.ControllerTrack:TTrackBarEx'");
MakeComm(0x49FD55, "'TTrackForm.ControllerEdit:TEdit'");
MakeCode(0x49FD60);
MakeComm(0x49FD67, "'TTrackForm.ControllerTrack:TTrackBarEx'");
MakeCode(0x49FD72);
MakeFunction(0x49FC98, 0x49FD75);
MakeUnkn(0x49FD78, 1);
MakeNameEx(0x49FD78, "TTrackForm.TunerHint", 0x20);
MakeComm(0x49FD78, "'procedure TTrackForm.TunerHint(?:?; ?:?);'");
MakeCode(0x49FD78);
MakeComm(0x49FD9D, "'TTrackForm.ChannelCombo:TComboBox'");
MakeComm(0x49FDA5, "'TCustomCombo.GetItemIndex'");
MakeComm(0x49FDBD, "'TTuner.Note:Integer'");
MakeCode(0x49FDE4);
MakeCode(0x49FDF1);
MakeCode(0x49FE22);
MakeCode(0x49FE2F);
MakeCode(0x49FE3D);
MakeCode(0x49FE42);
MakeFunction(0x49FD78, 0x49FE4B);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49FE54, -1);
MakeDword(0x49FE50);
MakeDword(0x49FE4C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49FE60, -1);
MakeDword(0x49FE5C);
MakeDword(0x49FE58);
MakeCode(0x49FE68);
MakeCode(0x49FEB3);
MakeCode(0x49FF2E);
MakeCode(0x49FF3B);
MakeCode(0x49FF44);
MakeCode(0x49FF49);
MakeFunction(0x49FE68, 0x49FF51);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x49FF5C, -1);
MakeDword(0x49FF58);
MakeDword(0x49FF54);
MakeUnkn(0x49FF64, 1);
MakeNameEx(0x49FF64, "TTrackForm.ChannelComboClick", 0x20);
MakeComm(0x49FF64, "'procedure TTrackForm.ChannelComboClick(Sender:TObject);'");
MakeCode(0x49FF64);
MakeComm(0x49FF6E, "'TTrackForm.ChannelCombo:TComboBox'");
MakeComm(0x49FF76, "'TCustomCombo.GetItemIndex'");
MakeComm(0x49FF83, "'TTrackForm.InstList:TComboBox'");
MakeComm(0x49FF8B, "'TCustomCombo.SetItemIndex'");
MakeCode(0x49FF91);
MakeFunction(0x49FF64, 0x49FF93);
MakeCode(0x49FF94);
MakeCode(0x49FFC2);
MakeCode(0x49FFCF);
MakeCode(0x49FFD0);
MakeCode(0x49FFD5);
MakeFunction(0x49FF94, 0x49FFD9);
MakeUnkn(0x49FFDC, 1);
MakeNameEx(0x49FFDC, "VMT_49FFDC_TTrackMoveForm", 0);
MakeDword(0x49FFDC);
MakeDword(0x49FFE0);
MakeDword(0x49FFE4);
MakeDword(0x49FFE8);
MakeDword(0x49FFEC);
MakeDword(0x49FFF0);
MakeUnkn(0x4A012C, 1);
MakeNameEx(0x4A012C, "TTrackMoveForm_FieldTable", 0);
MakeWord(0x4A012C);
MakeDword(0x4A012E);
MakeWord(0x4A0261);
MakeDword(0x4A0263);
MakeDword(0x4A0267);
MakeDword(0x4A026B);
MakeDword(0x4A0132);
MakeWord(0x4A0136);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A0138, 0x4A013F);
MakeDword(0x4A013F);
MakeWord(0x4A0143);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A0145, 0x4A014F);
MakeDword(0x4A014F);
MakeWord(0x4A0153);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A0155, 0x4A0162);
MakeDword(0x4A0162);
MakeWord(0x4A0166);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A0168, 0x4A0177);
MakeDword(0x4A0177);
MakeWord(0x4A017B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A017D, 0x4A0186);
MakeDword(0x4A0186);
MakeWord(0x4A018A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A018C, 0x4A0199);
MakeDword(0x4A0199);
MakeWord(0x4A019D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A019F, 0x4A01AA);
MakeDword(0x49FFF4);
MakeUnkn(0x4A01AA, 1);
MakeNameEx(0x4A01AA, "TTrackMoveForm_MethodTable", 0);
MakeWord(0x4A01AA);
MakeWord(0x4A01AC);
MakeDword(0x4A01AE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A01B2, 0x4A01C1);
MakeWord(0x4A01C1);
MakeDword(0x4A01C3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A01C7, 0x4A01DB);
MakeWord(0x4A01DB);
MakeDword(0x4A01DD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A01E1, 0x4A01F3);
MakeWord(0x4A01F3);
MakeDword(0x4A01F5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A01F9, 0x4A0209);
MakeWord(0x4A0209);
MakeDword(0x4A020B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A020F, 0x4A0222);
MakeWord(0x4A0222);
MakeDword(0x4A0224);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A0228, 0x4A023B);
MakeWord(0x4A023B);
MakeDword(0x4A023D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A0241, 0x4A0252);
MakeDword(0x49FFF8);
MakeDword(0x49FFFC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A0252, 0x4A0261);
MakeDword(0x4A0000);
MakeDword(0x4A0004);
MakeDword(0x4A0008);
MakeDword(0x4A000C);
MakeDword(0x4A0010);
MakeDword(0x4A0014);
MakeDword(0x4A0018);
MakeDword(0x4A001C);
MakeDword(0x4A0020);
MakeDword(0x4A0024);
MakeComm(0x4A0028, "'+0'");
MakeDword(0x4A0028);
MakeComm(0x4A002C, "'+4'");
MakeDword(0x4A002C);
MakeComm(0x4A0030, "'+8'");
MakeDword(0x4A0030);
MakeComm(0x4A0034, "'+C'");
MakeDword(0x4A0034);
MakeComm(0x4A0038, "'+10'");
MakeDword(0x4A0038);
MakeComm(0x4A003C, "'+14'");
MakeDword(0x4A003C);
MakeComm(0x4A0040, "'+18'");
MakeDword(0x4A0040);
MakeComm(0x4A0044, "'+1C'");
MakeDword(0x4A0044);
MakeComm(0x4A0048, "'+20'");
MakeDword(0x4A0048);
MakeComm(0x4A004C, "'+24'");
MakeDword(0x4A004C);
MakeComm(0x4A0050, "'+28'");
MakeDword(0x4A0050);
MakeComm(0x4A0054, "'+2C'");
MakeDword(0x4A0054);
MakeComm(0x4A0058, "'+30'");
MakeDword(0x4A0058);
MakeComm(0x4A005C, "'+34'");
MakeDword(0x4A005C);
MakeComm(0x4A0060, "'+38'");
MakeDword(0x4A0060);
MakeComm(0x4A0064, "'+3C'");
MakeDword(0x4A0064);
MakeComm(0x4A0068, "'+40'");
MakeDword(0x4A0068);
MakeComm(0x4A006C, "'+44'");
MakeDword(0x4A006C);
MakeComm(0x4A0070, "'+48'");
MakeDword(0x4A0070);
MakeComm(0x4A0074, "'+4C'");
MakeDword(0x4A0074);
MakeComm(0x4A0078, "'+50'");
MakeDword(0x4A0078);
MakeComm(0x4A007C, "'+54'");
MakeDword(0x4A007C);
MakeComm(0x4A0080, "'+58'");
MakeDword(0x4A0080);
MakeComm(0x4A0084, "'+5C'");
MakeDword(0x4A0084);
MakeComm(0x4A0088, "'+60'");
MakeDword(0x4A0088);
MakeComm(0x4A008C, "'+64'");
MakeDword(0x4A008C);
MakeComm(0x4A0090, "'+68'");
MakeDword(0x4A0090);
MakeComm(0x4A0094, "'+6C'");
MakeDword(0x4A0094);
MakeComm(0x4A0098, "'+70'");
MakeDword(0x4A0098);
MakeComm(0x4A009C, "'+74'");
MakeDword(0x4A009C);
MakeComm(0x4A00A0, "'+78'");
MakeDword(0x4A00A0);
MakeComm(0x4A00A4, "'+7C'");
MakeDword(0x4A00A4);
MakeComm(0x4A00A8, "'+80'");
MakeDword(0x4A00A8);
MakeComm(0x4A00AC, "'+84'");
MakeDword(0x4A00AC);
MakeComm(0x4A00B0, "'+88'");
MakeDword(0x4A00B0);
MakeComm(0x4A00B4, "'+8C'");
MakeDword(0x4A00B4);
MakeComm(0x4A00B8, "'+90'");
MakeDword(0x4A00B8);
MakeComm(0x4A00BC, "'+94'");
MakeDword(0x4A00BC);
MakeComm(0x4A00C0, "'+98'");
MakeDword(0x4A00C0);
MakeComm(0x4A00C4, "'+9C'");
MakeDword(0x4A00C4);
MakeComm(0x4A00C8, "'+A0'");
MakeDword(0x4A00C8);
MakeComm(0x4A00CC, "'+A4'");
MakeDword(0x4A00CC);
MakeComm(0x4A00D0, "'+A8'");
MakeDword(0x4A00D0);
MakeComm(0x4A00D4, "'+AC'");
MakeDword(0x4A00D4);
MakeComm(0x4A00D8, "'+B0'");
MakeDword(0x4A00D8);
MakeComm(0x4A00DC, "'+B4'");
MakeDword(0x4A00DC);
MakeComm(0x4A00E0, "'+B8'");
MakeDword(0x4A00E0);
MakeComm(0x4A00E4, "'+BC'");
MakeDword(0x4A00E4);
MakeComm(0x4A00E8, "'+C0'");
MakeDword(0x4A00E8);
MakeComm(0x4A00EC, "'+C4'");
MakeDword(0x4A00EC);
MakeComm(0x4A00F0, "'+C8'");
MakeDword(0x4A00F0);
MakeComm(0x4A00F4, "'+CC'");
MakeDword(0x4A00F4);
MakeComm(0x4A00F8, "'+D0'");
MakeDword(0x4A00F8);
MakeComm(0x4A00FC, "'+D4'");
MakeDword(0x4A00FC);
MakeComm(0x4A0100, "'+D8'");
MakeDword(0x4A0100);
MakeComm(0x4A0104, "'+DC'");
MakeDword(0x4A0104);
MakeComm(0x4A0108, "'+E0'");
MakeDword(0x4A0108);
MakeComm(0x4A010C, "'+E4'");
MakeDword(0x4A010C);
MakeComm(0x4A0110, "'+E8'");
MakeDword(0x4A0110);
MakeComm(0x4A0114, "'+EC'");
MakeDword(0x4A0114);
MakeComm(0x4A0118, "'+F0'");
MakeDword(0x4A0118);
MakeComm(0x4A011C, "'+F4'");
MakeDword(0x4A011C);
MakeComm(0x4A0120, "'+F8'");
MakeDword(0x4A0120);
MakeComm(0x4A0124, "'+FC'");
MakeDword(0x4A0124);
MakeComm(0x4A0128, "'+100'");
MakeDword(0x4A0128);
MakeUnkn(0x4A0270, 1);
MakeNameEx(0x4A0270, "RTTI_4A0270_Class_TTrackMoveForm", 0);
MakeDword(0x4A0270);
MakeUnkn(0x4A0274, 1);
MakeNameEx(0x4A0274, "", 0);
MakeByte(0x4A0274);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A0275, 0x4A0284);
MakeDword(0x4A0284);
MakeDword(0x4A0288);
MakeWord(0x4A028C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A028E, 0x4A0298);
MakeWord(0x4A0298);
MakeUnkn(0x4A029C, 1);
MakeNameEx(0x4A029C, "TTrackMoveForm.TrackListClick", 0x20);
MakeComm(0x4A029C, "'procedure TTrackMoveForm.TrackListClick(Sender:TObject);'");
MakeCode(0x4A029C);
MakeComm(0x4A02A0, "'TTrackMoveForm.TrackList:TListBox'");
MakeComm(0x4A02A8, "'TCustomListBox.GetItemIndex'");
MakeComm(0x4A02B5, "'TTrackMoveForm.MoveUpButton:TButton'");
MakeComm(0x4A02BD, "'TControl.SetEnabled'");
MakeComm(0x4A02C4, "'TTrackMoveForm.TrackList:TListBox'");
MakeComm(0x4A02CA, "'TListBox.FItems:TStrings'");
MakeComm(0x4A02D2, "'TStrings.GetCount'");
MakeCode(0x4A02DA);
MakeCode(0x4A02DE);
MakeComm(0x4A02E0, "'TTrackMoveForm.MoveDownButton:TButton'");
MakeCode(0x4A02E0);
MakeComm(0x4A02E8, "'TControl.SetEnabled'");
MakeFunction(0x4A029C, 0x4A02EE);
MakeUnkn(0x4A02F0, 1);
MakeNameEx(0x4A02F0, "TTrackMoveForm.MoveDownButtonClick", 0x20);
MakeComm(0x4A02F0, "'procedure TTrackMoveForm.MoveDownButtonClick(Sender:TObject);'");
MakeCode(0x4A02F0);
MakeComm(0x4A02F6, "'TTrackMoveForm.TrackList:TListBox'");
MakeComm(0x4A02FE, "'TCustomListBox.GetItemIndex'");
MakeComm(0x4A030B, "'TTrackMoveForm.TrackList:TListBox'");
MakeComm(0x4A0311, "'TListBox.FItems:TStrings'");
MakeComm(0x4A031B, "'TStrings.Move'");
MakeComm(0x4A0320, "'TTrackMoveForm.TrackList:TListBox'");
MakeComm(0x4A0328, "'TCustomListBox.SetItemIndex'");
MakeFunction(0x4A02F0, 0x4A033C);
MakeUnkn(0x4A033C, 1);
MakeNameEx(0x4A033C, "TTrackMoveForm.MoveUpButtonClick", 0x20);
MakeComm(0x4A033C, "'procedure TTrackMoveForm.MoveUpButtonClick(Sender:TObject);'");
MakeCode(0x4A033C);
MakeComm(0x4A0342, "'TTrackMoveForm.TrackList:TListBox'");
MakeComm(0x4A034A, "'TCustomListBox.GetItemIndex'");
MakeComm(0x4A0357, "'TTrackMoveForm.TrackList:TListBox'");
MakeComm(0x4A035D, "'TListBox.FItems:TStrings'");
MakeComm(0x4A0367, "'TStrings.Move'");
MakeComm(0x4A036C, "'TTrackMoveForm.TrackList:TListBox'");
MakeComm(0x4A0374, "'TCustomListBox.SetItemIndex'");
MakeFunction(0x4A033C, 0x4A0388);
MakeUnkn(0x4A0388, 1);
MakeNameEx(0x4A0388, "TTrackMoveForm.HelpButtonClick", 0x20);
MakeComm(0x4A0388, "'procedure TTrackMoveForm.HelpButtonClick(Sender:TObject);'");
MakeCode(0x4A0388);
MakeComm(0x4A0390, "'TTrackMoveForm.HelpContext:THelpContext'");
MakeFunction(0x4A0388, 0x4A039D);
MakeUnkn(0x4A03A0, 1);
MakeNameEx(0x4A03A0, "TTrackMoveForm.TrackListMouseDown", 0x20);
MakeComm(0x4A03A0, "'procedure TTrackMoveForm.TrackListMouseDown(Sender:TObject; Button:TMouseButton; Shift:TShiftState; X:Integer; Y:Integer);'");
MakeCode(0x4A03A0);
MakeComm(0x4A03AA, "'TTrackMoveForm.TrackList:TListBox'");
MakeComm(0x4A03B2, "'TCustomListBox.GetItemIndex'");
MakeComm(0x4A03B8, "'TTrackMoveForm.?f37C:Integer'");
MakeCode(0x4A03BE);
MakeFunction(0x4A03A0, 0x4A03C3);
MakeUnkn(0x4A03C4, 1);
MakeNameEx(0x4A03C4, "TTrackMoveForm.TrackListMouseMove", 0x20);
MakeComm(0x4A03C4, "'procedure TTrackMoveForm.TrackListMouseMove(Sender:TObject; Shift:TShiftState; X:Integer; Y:Integer);'");
MakeCode(0x4A03C4);
MakeComm(0x4A03D6, "'TTrackMoveForm.?f37C:Integer'");
MakeComm(0x4A03EF, "'TTrackMoveForm.TrackList:TListBox'");
MakeComm(0x4A03F7, "'TCustomListBox.GetItemIndex'");
MakeComm(0x4A03FF, "'TTrackMoveForm.?f37C:Integer'");
MakeComm(0x4A0409, "'TTrackMoveForm.TrackList:TListBox'");
MakeComm(0x4A040F, "'TListBox.FItems:TStrings'");
MakeComm(0x4A041A, "'TStrings.Move'");
MakeComm(0x4A041D, "'TTrackMoveForm.?f37C:Integer'");
MakeComm(0x4A0425, "'TTrackMoveForm.TrackList:TListBox'");
MakeComm(0x4A042D, "'TCustomListBox.SetItemIndex'");
MakeCode(0x4A043C);
MakeFunction(0x4A03C4, 0x4A0444);
MakeUnkn(0x4A0444, 1);
MakeNameEx(0x4A0444, "TTrackMoveForm.TrackListMouseUp", 0x20);
MakeComm(0x4A0444, "'procedure TTrackMoveForm.TrackListMouseUp(Sender:TObject; Button:TMouseButton; Shift:TShiftState; X:Integer; Y:Integer);'");
MakeCode(0x4A0444);
MakeCode(0x4A0459);
MakeFunction(0x4A0444, 0x4A045D);
MakeUnkn(0x4A0460, 1);
MakeNameEx(0x4A0460, "VMT_4A0460_TRegisterForm", 0);
MakeDword(0x4A0460);
MakeDword(0x4A0464);
MakeDword(0x4A0468);
MakeDword(0x4A046C);
MakeDword(0x4A0470);
MakeDword(0x4A0474);
MakeUnkn(0x4A05B0, 1);
MakeNameEx(0x4A05B0, "TRegisterForm_FieldTable", 0);
MakeWord(0x4A05B0);
MakeDword(0x4A05B2);
MakeWord(0x4A06DD);
MakeDword(0x4A06DF);
MakeDword(0x4A06E3);
MakeDword(0x4A06E7);
MakeDword(0x4A06EB);
MakeDword(0x4A05B6);
MakeWord(0x4A05BA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A05BC, 0x4A05C3);
MakeDword(0x4A05C3);
MakeWord(0x4A05C7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A05C9, 0x4A05D0);
MakeDword(0x4A05D0);
MakeWord(0x4A05D4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A05D6, 0x4A05DD);
MakeDword(0x4A05DD);
MakeWord(0x4A05E1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A05E3, 0x4A05EA);
MakeDword(0x4A05EA);
MakeWord(0x4A05EE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A05F0, 0x4A05F7);
MakeDword(0x4A05F7);
MakeWord(0x4A05FB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A05FD, 0x4A0605);
MakeDword(0x4A0605);
MakeWord(0x4A0609);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A060B, 0x4A0613);
MakeDword(0x4A0613);
MakeWord(0x4A0617);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A0619, 0x4A061E);
MakeDword(0x4A061E);
MakeWord(0x4A0622);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A0624, 0x4A062B);
MakeDword(0x4A062B);
MakeWord(0x4A062F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A0631, 0x4A0638);
MakeDword(0x4A0638);
MakeWord(0x4A063C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A063E, 0x4A0645);
MakeDword(0x4A0645);
MakeWord(0x4A0649);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A064B, 0x4A0652);
MakeDword(0x4A0652);
MakeWord(0x4A0656);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A0658, 0x4A065F);
MakeDword(0x4A065F);
MakeWord(0x4A0663);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A0665, 0x4A066C);
MakeDword(0x4A0478);
MakeUnkn(0x4A066C, 1);
MakeNameEx(0x4A066C, "TRegisterForm_MethodTable", 0);
MakeWord(0x4A066C);
MakeWord(0x4A066E);
MakeDword(0x4A0670);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A0674, 0x4A067F);
MakeWord(0x4A067F);
MakeDword(0x4A0681);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A0685, 0x4A0691);
MakeWord(0x4A0691);
MakeDword(0x4A0693);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A0697, 0x4A06A4);
MakeWord(0x4A06A4);
MakeDword(0x4A06A6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A06AA, 0x4A06B4);
MakeWord(0x4A06B4);
MakeDword(0x4A06B6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A06BA, 0x4A06C7);
MakeDword(0x4A047C);
MakeUnkn(0x4A06C7, 1);
MakeNameEx(0x4A06C7, "TRegisterForm_DynamicTable", 0);
MakeWord(0x4A06C7);
MakeWord(0x4A06C9);
MakeDword(0x4A06CB);
MakeDword(0x4A0480);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A06CF, 0x4A06DD);
MakeDword(0x4A0484);
MakeDword(0x4A0488);
MakeDword(0x4A048C);
MakeDword(0x4A0490);
MakeDword(0x4A0494);
MakeDword(0x4A0498);
MakeDword(0x4A049C);
MakeDword(0x4A04A0);
MakeDword(0x4A04A4);
MakeDword(0x4A04A8);
MakeComm(0x4A04AC, "'+0'");
MakeDword(0x4A04AC);
MakeComm(0x4A04B0, "'+4'");
MakeDword(0x4A04B0);
MakeComm(0x4A04B4, "'+8'");
MakeDword(0x4A04B4);
MakeComm(0x4A04B8, "'+C'");
MakeDword(0x4A04B8);
MakeComm(0x4A04BC, "'+10'");
MakeDword(0x4A04BC);
MakeComm(0x4A04C0, "'+14'");
MakeDword(0x4A04C0);
MakeComm(0x4A04C4, "'+18'");
MakeDword(0x4A04C4);
MakeComm(0x4A04C8, "'+1C'");
MakeDword(0x4A04C8);
MakeComm(0x4A04CC, "'+20'");
MakeDword(0x4A04CC);
MakeComm(0x4A04D0, "'+24'");
MakeDword(0x4A04D0);
MakeComm(0x4A04D4, "'+28'");
MakeDword(0x4A04D4);
MakeComm(0x4A04D8, "'+2C'");
MakeDword(0x4A04D8);
MakeComm(0x4A04DC, "'+30'");
MakeDword(0x4A04DC);
MakeComm(0x4A04E0, "'+34'");
MakeDword(0x4A04E0);
MakeComm(0x4A04E4, "'+38'");
MakeDword(0x4A04E4);
MakeComm(0x4A04E8, "'+3C'");
MakeDword(0x4A04E8);
MakeComm(0x4A04EC, "'+40'");
MakeDword(0x4A04EC);
MakeComm(0x4A04F0, "'+44'");
MakeDword(0x4A04F0);
MakeComm(0x4A04F4, "'+48'");
MakeDword(0x4A04F4);
MakeComm(0x4A04F8, "'+4C'");
MakeDword(0x4A04F8);
MakeComm(0x4A04FC, "'+50'");
MakeDword(0x4A04FC);
MakeComm(0x4A0500, "'+54'");
MakeDword(0x4A0500);
MakeComm(0x4A0504, "'+58'");
MakeDword(0x4A0504);
MakeComm(0x4A0508, "'+5C'");
MakeDword(0x4A0508);
MakeComm(0x4A050C, "'+60'");
MakeDword(0x4A050C);
MakeComm(0x4A0510, "'+64'");
MakeDword(0x4A0510);
MakeComm(0x4A0514, "'+68'");
MakeDword(0x4A0514);
MakeComm(0x4A0518, "'+6C'");
MakeDword(0x4A0518);
MakeComm(0x4A051C, "'+70'");
MakeDword(0x4A051C);
MakeComm(0x4A0520, "'+74'");
MakeDword(0x4A0520);
MakeComm(0x4A0524, "'+78'");
MakeDword(0x4A0524);
MakeComm(0x4A0528, "'+7C'");
MakeDword(0x4A0528);
MakeComm(0x4A052C, "'+80'");
MakeDword(0x4A052C);
MakeComm(0x4A0530, "'+84'");
MakeDword(0x4A0530);
MakeComm(0x4A0534, "'+88'");
MakeDword(0x4A0534);
MakeComm(0x4A0538, "'+8C'");
MakeDword(0x4A0538);
MakeComm(0x4A053C, "'+90'");
MakeDword(0x4A053C);
MakeComm(0x4A0540, "'+94'");
MakeDword(0x4A0540);
MakeComm(0x4A0544, "'+98'");
MakeDword(0x4A0544);
MakeComm(0x4A0548, "'+9C'");
MakeDword(0x4A0548);
MakeComm(0x4A054C, "'+A0'");
MakeDword(0x4A054C);
MakeComm(0x4A0550, "'+A4'");
MakeDword(0x4A0550);
MakeComm(0x4A0554, "'+A8'");
MakeDword(0x4A0554);
MakeComm(0x4A0558, "'+AC'");
MakeDword(0x4A0558);
MakeComm(0x4A055C, "'+B0'");
MakeDword(0x4A055C);
MakeComm(0x4A0560, "'+B4'");
MakeDword(0x4A0560);
MakeComm(0x4A0564, "'+B8'");
MakeDword(0x4A0564);
MakeComm(0x4A0568, "'+BC'");
MakeDword(0x4A0568);
MakeComm(0x4A056C, "'+C0'");
MakeDword(0x4A056C);
MakeComm(0x4A0570, "'+C4'");
MakeDword(0x4A0570);
MakeComm(0x4A0574, "'+C8'");
MakeDword(0x4A0574);
MakeComm(0x4A0578, "'+CC'");
MakeDword(0x4A0578);
MakeComm(0x4A057C, "'+D0'");
MakeDword(0x4A057C);
MakeComm(0x4A0580, "'+D4'");
MakeDword(0x4A0580);
MakeComm(0x4A0584, "'+D8'");
MakeDword(0x4A0584);
MakeComm(0x4A0588, "'+DC'");
MakeDword(0x4A0588);
MakeComm(0x4A058C, "'+E0'");
MakeDword(0x4A058C);
MakeComm(0x4A0590, "'+E4'");
MakeDword(0x4A0590);
MakeComm(0x4A0594, "'+E8'");
MakeDword(0x4A0594);
MakeComm(0x4A0598, "'+EC'");
MakeDword(0x4A0598);
MakeComm(0x4A059C, "'+F0'");
MakeDword(0x4A059C);
MakeComm(0x4A05A0, "'+F4'");
MakeDword(0x4A05A0);
MakeComm(0x4A05A4, "'+F8'");
MakeDword(0x4A05A4);
MakeComm(0x4A05A8, "'+FC'");
MakeDword(0x4A05A8);
MakeComm(0x4A05AC, "'+100'");
MakeDword(0x4A05AC);
MakeUnkn(0x4A06F0, 1);
MakeNameEx(0x4A06F0, "RTTI_4A06F0_Class_TRegisterForm", 0);
MakeDword(0x4A06F0);
MakeUnkn(0x4A06F4, 1);
MakeNameEx(0x4A06F4, "", 0);
MakeByte(0x4A06F4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A06F5, 0x4A0703);
MakeDword(0x4A0703);
MakeDword(0x4A0707);
MakeWord(0x4A070B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A070D, 0x4A0716);
MakeWord(0x4A0716);
MakeUnkn(0x4A0718, 1);
MakeNameEx(0x4A0718, "TRegisterForm.FormCreate", 0x20);
MakeComm(0x4A0718, "'procedure TRegisterForm.FormCreate(Sender:TObject);'");
MakeCode(0x4A0718);
MakeComm(0x4A0729, "'TRegisterForm.Timer1:TTimer'");
MakeComm(0x4A0736, "'TRegisterForm.Timer1:TTimer'");
MakeCode(0x4A0743);
MakeComm(0x4A0745, "'TRegisterForm.Button1:TButton'");
MakeComm(0x4A074D, "'TControl.SetEnabled'");
MakeComm(0x4A0752, "'TRegisterForm.Button2:TButton'");
MakeComm(0x4A075A, "'TControl.SetEnabled'");
MakeCode(0x4A075D);
MakeComm(0x4A0764, "'TApplication.FIcon:TIcon'");
MakeComm(0x4A076A, "'TRegisterForm.Icon:TImage'");
MakeComm(0x4A0770, "'TImage.Picture:TPicture'");
MakeFunction(0x4A0718, 0x4A077D);
MakeUnkn(0x4A0780, 1);
MakeNameEx(0x4A0780, "TRegisterForm.CreateParams", 0x20);
MakeComm(0x4A0780, "'procedure TRegisterForm.CreateParams(var Params:TCreateParams);'");
MakeCode(0x4A0780);
MakeComm(0x4A078A, "'TCreateParams.Style:DWORD'");
MakeFunction(0x4A0780, 0x4A0793);
MakeUnkn(0x4A0794, 1);
MakeNameEx(0x4A0794, "TRegisterForm.WMClose", 0x20);
MakeComm(0x4A0794, "'procedure TRegisterForm.WMClose;'");
MakeCode(0x4A0794);
MakeFunction(0x4A0794, 0x4A0795);
MakeUnkn(0x4A0798, 1);
MakeNameEx(0x4A0798, "TRegisterForm.Timer1Timer", 0x20);
MakeComm(0x4A0798, "'procedure TRegisterForm.Timer1Timer;'");
MakeCode(0x4A0798);
MakeComm(0x4A07A4, "'TRegisterForm.Timer1:TTimer'");
MakeComm(0x4A07B1, "'TRegisterForm.Button1:TButton'");
MakeComm(0x4A07B9, "'TControl.SetEnabled'");
MakeComm(0x4A07BE, "'TRegisterForm.Button2:TButton'");
MakeComm(0x4A07C6, "'TControl.SetEnabled'");
MakeComm(0x4A07E3, "'TRegisterForm.Button1:TButton'");
MakeCode(0x4A07EE);
MakeFunction(0x4A0798, 0x4A07F0);
MakeUnkn(0x4A07F0, 1);
MakeNameEx(0x4A07F0, "TRegisterForm.Button2Click", 0x20);
MakeComm(0x4A07F0, "'procedure TRegisterForm.Button2Click(Sender:TObject);'");
MakeCode(0x4A07F0);
MakeFunction(0x4A07F0, 0x4A07F6);
MakeUnkn(0x4A07F8, 1);
MakeNameEx(0x4A07F8, "TRegisterForm.FormClose", 0x20);
MakeComm(0x4A07F8, "'procedure TRegisterForm.FormClose(Sender:TObject; var Action:TCloseAction);'");
MakeCode(0x4A07F8);
MakeFunction(0x4A07F8, 0x4A07FC);
MakeUnkn(0x4A07FC, 1);
MakeNameEx(0x4A07FC, "TRegisterForm.Button1Click", 0x20);
MakeComm(0x4A07FC, "'procedure TRegisterForm.Button1Click(Sender:TObject);'");
MakeCode(0x4A07FC);
MakeFunction(0x4A07FC, 0x4A0823);
MakeUnkn(0x4A0824, 1);
MakeNameEx(0x4A0824, "VMT_4A0824_TReg2Form", 0);
MakeDword(0x4A0824);
MakeDword(0x4A0828);
MakeDword(0x4A082C);
MakeDword(0x4A0830);
MakeDword(0x4A0834);
MakeDword(0x4A0838);
MakeUnkn(0x4A0974, 1);
MakeNameEx(0x4A0974, "TReg2Form_FieldTable", 0);
MakeWord(0x4A0974);
MakeDword(0x4A0976);
MakeWord(0x4A09E7);
MakeDword(0x4A09E9);
MakeDword(0x4A09ED);
MakeDword(0x4A097A);
MakeWord(0x4A097E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A0980, 0x4A0987);
MakeDword(0x4A0987);
MakeWord(0x4A098B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A098D, 0x4A0995);
MakeDword(0x4A0995);
MakeWord(0x4A0999);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A099B, 0x4A09AD);
MakeDword(0x4A083C);
MakeUnkn(0x4A09AD, 1);
MakeNameEx(0x4A09AD, "TReg2Form_MethodTable", 0);
MakeWord(0x4A09AD);
MakeWord(0x4A09AF);
MakeDword(0x4A09B1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A09B5, 0x4A09C0);
MakeWord(0x4A09C0);
MakeDword(0x4A09C2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A09C6, 0x4A09DD);
MakeDword(0x4A0840);
MakeDword(0x4A0844);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A09DD, 0x4A09E7);
MakeDword(0x4A0848);
MakeDword(0x4A084C);
MakeDword(0x4A0850);
MakeDword(0x4A0854);
MakeDword(0x4A0858);
MakeDword(0x4A085C);
MakeDword(0x4A0860);
MakeDword(0x4A0864);
MakeDword(0x4A0868);
MakeDword(0x4A086C);
MakeComm(0x4A0870, "'+0'");
MakeDword(0x4A0870);
MakeComm(0x4A0874, "'+4'");
MakeDword(0x4A0874);
MakeComm(0x4A0878, "'+8'");
MakeDword(0x4A0878);
MakeComm(0x4A087C, "'+C'");
MakeDword(0x4A087C);
MakeComm(0x4A0880, "'+10'");
MakeDword(0x4A0880);
MakeComm(0x4A0884, "'+14'");
MakeDword(0x4A0884);
MakeComm(0x4A0888, "'+18'");
MakeDword(0x4A0888);
MakeComm(0x4A088C, "'+1C'");
MakeDword(0x4A088C);
MakeComm(0x4A0890, "'+20'");
MakeDword(0x4A0890);
MakeComm(0x4A0894, "'+24'");
MakeDword(0x4A0894);
MakeComm(0x4A0898, "'+28'");
MakeDword(0x4A0898);
MakeComm(0x4A089C, "'+2C'");
MakeDword(0x4A089C);
MakeComm(0x4A08A0, "'+30'");
MakeDword(0x4A08A0);
MakeComm(0x4A08A4, "'+34'");
MakeDword(0x4A08A4);
MakeComm(0x4A08A8, "'+38'");
MakeDword(0x4A08A8);
MakeComm(0x4A08AC, "'+3C'");
MakeDword(0x4A08AC);
MakeComm(0x4A08B0, "'+40'");
MakeDword(0x4A08B0);
MakeComm(0x4A08B4, "'+44'");
MakeDword(0x4A08B4);
MakeComm(0x4A08B8, "'+48'");
MakeDword(0x4A08B8);
MakeComm(0x4A08BC, "'+4C'");
MakeDword(0x4A08BC);
MakeComm(0x4A08C0, "'+50'");
MakeDword(0x4A08C0);
MakeComm(0x4A08C4, "'+54'");
MakeDword(0x4A08C4);
MakeComm(0x4A08C8, "'+58'");
MakeDword(0x4A08C8);
MakeComm(0x4A08CC, "'+5C'");
MakeDword(0x4A08CC);
MakeComm(0x4A08D0, "'+60'");
MakeDword(0x4A08D0);
MakeComm(0x4A08D4, "'+64'");
MakeDword(0x4A08D4);
MakeComm(0x4A08D8, "'+68'");
MakeDword(0x4A08D8);
MakeComm(0x4A08DC, "'+6C'");
MakeDword(0x4A08DC);
MakeComm(0x4A08E0, "'+70'");
MakeDword(0x4A08E0);
MakeComm(0x4A08E4, "'+74'");
MakeDword(0x4A08E4);
MakeComm(0x4A08E8, "'+78'");
MakeDword(0x4A08E8);
MakeComm(0x4A08EC, "'+7C'");
MakeDword(0x4A08EC);
MakeComm(0x4A08F0, "'+80'");
MakeDword(0x4A08F0);
MakeComm(0x4A08F4, "'+84'");
MakeDword(0x4A08F4);
MakeComm(0x4A08F8, "'+88'");
MakeDword(0x4A08F8);
MakeComm(0x4A08FC, "'+8C'");
MakeDword(0x4A08FC);
MakeComm(0x4A0900, "'+90'");
MakeDword(0x4A0900);
MakeComm(0x4A0904, "'+94'");
MakeDword(0x4A0904);
MakeComm(0x4A0908, "'+98'");
MakeDword(0x4A0908);
MakeComm(0x4A090C, "'+9C'");
MakeDword(0x4A090C);
MakeComm(0x4A0910, "'+A0'");
MakeDword(0x4A0910);
MakeComm(0x4A0914, "'+A4'");
MakeDword(0x4A0914);
MakeComm(0x4A0918, "'+A8'");
MakeDword(0x4A0918);
MakeComm(0x4A091C, "'+AC'");
MakeDword(0x4A091C);
MakeComm(0x4A0920, "'+B0'");
MakeDword(0x4A0920);
MakeComm(0x4A0924, "'+B4'");
MakeDword(0x4A0924);
MakeComm(0x4A0928, "'+B8'");
MakeDword(0x4A0928);
MakeComm(0x4A092C, "'+BC'");
MakeDword(0x4A092C);
MakeComm(0x4A0930, "'+C0'");
MakeDword(0x4A0930);
MakeComm(0x4A0934, "'+C4'");
MakeDword(0x4A0934);
MakeComm(0x4A0938, "'+C8'");
MakeDword(0x4A0938);
MakeComm(0x4A093C, "'+CC'");
MakeDword(0x4A093C);
MakeComm(0x4A0940, "'+D0'");
MakeDword(0x4A0940);
MakeComm(0x4A0944, "'+D4'");
MakeDword(0x4A0944);
MakeComm(0x4A0948, "'+D8'");
MakeDword(0x4A0948);
MakeComm(0x4A094C, "'+DC'");
MakeDword(0x4A094C);
MakeComm(0x4A0950, "'+E0'");
MakeDword(0x4A0950);
MakeComm(0x4A0954, "'+E4'");
MakeDword(0x4A0954);
MakeComm(0x4A0958, "'+E8'");
MakeDword(0x4A0958);
MakeComm(0x4A095C, "'+EC'");
MakeDword(0x4A095C);
MakeComm(0x4A0960, "'+F0'");
MakeDword(0x4A0960);
MakeComm(0x4A0964, "'+F4'");
MakeDword(0x4A0964);
MakeComm(0x4A0968, "'+F8'");
MakeDword(0x4A0968);
MakeComm(0x4A096C, "'+FC'");
MakeDword(0x4A096C);
MakeComm(0x4A0970, "'+100'");
MakeDword(0x4A0970);
MakeUnkn(0x4A09F4, 1);
MakeNameEx(0x4A09F4, "RTTI_4A09F4_Class_TReg2Form", 0);
MakeDword(0x4A09F4);
MakeUnkn(0x4A09F8, 1);
MakeNameEx(0x4A09F8, "", 0);
MakeByte(0x4A09F8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A09F9, 0x4A0A03);
MakeDword(0x4A0A03);
MakeDword(0x4A0A07);
MakeWord(0x4A0A0B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A0A0D, 0x4A0A12);
MakeWord(0x4A0A12);
MakeUnkn(0x4A0A14, 1);
MakeNameEx(0x4A0A14, "TReg2Form.FormCreate", 0x20);
MakeComm(0x4A0A14, "'procedure TReg2Form.FormCreate(Sender:TObject);'");
MakeCode(0x4A0A14);
MakeComm(0x4A0A17, "'TReg2Form.WebSiteClickLabel:TLabel'");
MakeComm(0x4A0A1D, "'TLabel.FFont:TFont'");
MakeComm(0x4A0A20, "'0x4'");
MakeComm(0x4A0A2C, "'TReg2Form.FColor:TColor'");
MakeComm(0x4A0A3B, "'TReg2Form.WebSiteClickLabel:TLabel'");
MakeComm(0x4A0A41, "'TLabel.FFont:TFont'");
MakeCode(0x4A0A4E);
MakeFunction(0x4A0A14, 0x4A0A50);
MakeByte(0x4A0A50);
MakeUnkn(0x4A0A50, 1);
MakeNameEx(0x4A0A50, "gvar_004A0A50", 0);
MakeUnkn(0x4A0A54, 1);
MakeNameEx(0x4A0A54, "TReg2Form.WebSiteClickLabelClick", 0x20);
MakeComm(0x4A0A54, "'procedure TReg2Form.WebSiteClickLabelClick(Sender:TObject);'");
MakeCode(0x4A0A54);
MakeComm(0x4A0A6A, "'TReg2Form.FColor:TColor'");
MakeComm(0x4A0A79, "'TReg2Form.WebSiteClickLabel:TLabel'");
MakeComm(0x4A0A7F, "'TLabel.FFont:TFont'");
MakeComm(0x4A0A8C, "'TReg2Form.WebSiteClickLabel:TLabel'");
MakeCode(0x4A0A8C);
MakeComm(0x4A0A94, "'TControl.Update'");
MakeComm(0x4A0AA3, "'TReg2Form.WebSiteClickLabel:TLabel'");
MakeCode(0x4A0AC3);
MakeCode(0x4A0AD0);
MakeCode(0x4A0AD9);
MakeCode(0x4A0ADE);
MakeFunction(0x4A0A54, 0x4A0AE4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4A0AE4, 0x4A0AE9);
MakeUnkn(0x4A0AEC, 1);
MakeNameEx(0x4A0AEC, "VMT_4A0AEC_TCheckListBox", 0);
MakeDword(0x4A0AEC);
MakeDword(0x4A0AF0);
MakeDword(0x4A0AF4);
MakeDword(0x4A0AF8);
MakeDword(0x4A0AFC);
MakeDword(0x4A0B00);
MakeDword(0x4A0B04);
MakeDword(0x4A0B08);
MakeUnkn(0x4A0C50, 1);
MakeNameEx(0x4A0C50, "TCheckListBox_DynamicTable", 0);
MakeWord(0x4A0C50);
MakeWord(0x4A0C52);
MakeWord(0x4A0C54);
MakeWord(0x4A0C56);
MakeWord(0x4A0C58);
MakeWord(0x4A0C5A);
MakeWord(0x4A0C5C);
MakeWord(0x4A0C5E);
MakeWord(0x4A0C60);
MakeWord(0x4A0C62);
MakeWord(0x4A0C64);
MakeWord(0x4A0C66);
MakeDword(0x4A0C68);
MakeDword(0x4A0C6C);
MakeDword(0x4A0C70);
MakeDword(0x4A0C74);
MakeDword(0x4A0C78);
MakeDword(0x4A0C7C);
MakeDword(0x4A0C80);
MakeDword(0x4A0C84);
MakeDword(0x4A0C88);
MakeDword(0x4A0C8C);
MakeDword(0x4A0C90);
MakeDword(0x4A0B0C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A0C94, 0x4A0CA2);
MakeDword(0x4A0B10);
MakeDword(0x4A0B14);
MakeDword(0x4A0B18);
MakeDword(0x4A0B1C);
MakeDword(0x4A0B20);
MakeDword(0x4A0B24);
MakeDword(0x4A0B28);
MakeDword(0x4A0B2C);
MakeDword(0x4A0B30);
MakeDword(0x4A0B34);
MakeComm(0x4A0B38, "'+0'");
MakeDword(0x4A0B38);
MakeComm(0x4A0B3C, "'+4'");
MakeDword(0x4A0B3C);
MakeComm(0x4A0B40, "'+8'");
MakeDword(0x4A0B40);
MakeComm(0x4A0B44, "'+C'");
MakeDword(0x4A0B44);
MakeComm(0x4A0B48, "'+10'");
MakeDword(0x4A0B48);
MakeComm(0x4A0B4C, "'+14'");
MakeDword(0x4A0B4C);
MakeComm(0x4A0B50, "'+18'");
MakeDword(0x4A0B50);
MakeComm(0x4A0B54, "'+1C'");
MakeDword(0x4A0B54);
MakeComm(0x4A0B58, "'+20'");
MakeDword(0x4A0B58);
MakeComm(0x4A0B5C, "'+24'");
MakeDword(0x4A0B5C);
MakeComm(0x4A0B60, "'+28'");
MakeDword(0x4A0B60);
MakeComm(0x4A0B64, "'+2C'");
MakeDword(0x4A0B64);
MakeComm(0x4A0B68, "'+30'");
MakeDword(0x4A0B68);
MakeComm(0x4A0B6C, "'+34'");
MakeDword(0x4A0B6C);
MakeComm(0x4A0B70, "'+38'");
MakeDword(0x4A0B70);
MakeComm(0x4A0B74, "'+3C'");
MakeDword(0x4A0B74);
MakeComm(0x4A0B78, "'+40'");
MakeDword(0x4A0B78);
MakeComm(0x4A0B7C, "'+44'");
MakeDword(0x4A0B7C);
MakeComm(0x4A0B80, "'+48'");
MakeDword(0x4A0B80);
MakeComm(0x4A0B84, "'+4C'");
MakeDword(0x4A0B84);
MakeComm(0x4A0B88, "'+50'");
MakeDword(0x4A0B88);
MakeComm(0x4A0B8C, "'+54'");
MakeDword(0x4A0B8C);
MakeComm(0x4A0B90, "'+58'");
MakeDword(0x4A0B90);
MakeComm(0x4A0B94, "'+5C'");
MakeDword(0x4A0B94);
MakeComm(0x4A0B98, "'+60'");
MakeDword(0x4A0B98);
MakeComm(0x4A0B9C, "'+64'");
MakeDword(0x4A0B9C);
MakeComm(0x4A0BA0, "'+68'");
MakeDword(0x4A0BA0);
MakeComm(0x4A0BA4, "'+6C'");
MakeDword(0x4A0BA4);
MakeComm(0x4A0BA8, "'+70'");
MakeDword(0x4A0BA8);
MakeComm(0x4A0BAC, "'+74'");
MakeDword(0x4A0BAC);
MakeComm(0x4A0BB0, "'+78'");
MakeDword(0x4A0BB0);
MakeComm(0x4A0BB4, "'+7C'");
MakeDword(0x4A0BB4);
MakeComm(0x4A0BB8, "'+80'");
MakeDword(0x4A0BB8);
MakeComm(0x4A0BBC, "'+84'");
MakeDword(0x4A0BBC);
MakeComm(0x4A0BC0, "'+88'");
MakeDword(0x4A0BC0);
MakeComm(0x4A0BC4, "'+8C'");
MakeDword(0x4A0BC4);
MakeComm(0x4A0BC8, "'+90'");
MakeDword(0x4A0BC8);
MakeComm(0x4A0BCC, "'+94'");
MakeDword(0x4A0BCC);
MakeComm(0x4A0BD0, "'+98'");
MakeDword(0x4A0BD0);
MakeComm(0x4A0BD4, "'+9C'");
MakeDword(0x4A0BD4);
MakeComm(0x4A0BD8, "'+A0'");
MakeDword(0x4A0BD8);
MakeComm(0x4A0BDC, "'+A4'");
MakeDword(0x4A0BDC);
MakeComm(0x4A0BE0, "'+A8'");
MakeDword(0x4A0BE0);
MakeComm(0x4A0BE4, "'+AC'");
MakeDword(0x4A0BE4);
MakeComm(0x4A0BE8, "'+B0'");
MakeDword(0x4A0BE8);
MakeComm(0x4A0BEC, "'+B4'");
MakeDword(0x4A0BEC);
MakeComm(0x4A0BF0, "'+B8'");
MakeDword(0x4A0BF0);
MakeComm(0x4A0BF4, "'+BC'");
MakeDword(0x4A0BF4);
MakeComm(0x4A0BF8, "'+C0'");
MakeDword(0x4A0BF8);
MakeComm(0x4A0BFC, "'+C4'");
MakeDword(0x4A0BFC);
MakeComm(0x4A0C00, "'+C8'");
MakeDword(0x4A0C00);
MakeComm(0x4A0C04, "'+CC'");
MakeDword(0x4A0C04);
MakeComm(0x4A0C08, "'+D0'");
MakeDword(0x4A0C08);
MakeComm(0x4A0C0C, "'+D4'");
MakeDword(0x4A0C0C);
MakeComm(0x4A0C10, "'+D8'");
MakeDword(0x4A0C10);
MakeComm(0x4A0C14, "'+DC'");
MakeDword(0x4A0C14);
MakeComm(0x4A0C18, "'+E0'");
MakeDword(0x4A0C18);
MakeComm(0x4A0C1C, "'+E4'");
MakeDword(0x4A0C1C);
MakeComm(0x4A0C20, "'+E8'");
MakeDword(0x4A0C20);
MakeComm(0x4A0C24, "'+EC'");
MakeDword(0x4A0C24);
MakeComm(0x4A0C28, "'+F0'");
MakeDword(0x4A0C28);
MakeComm(0x4A0C2C, "'+F4'");
MakeDword(0x4A0C2C);
MakeComm(0x4A0C30, "'+F8'");
MakeDword(0x4A0C30);
MakeComm(0x4A0C34, "'+FC'");
MakeDword(0x4A0C34);
MakeComm(0x4A0C38, "'+100'");
MakeDword(0x4A0C38);
MakeComm(0x4A0C3C, "'+104'");
MakeDword(0x4A0C3C);
MakeComm(0x4A0C40, "'+108'");
MakeDword(0x4A0C40);
MakeComm(0x4A0C44, "'+10C'");
MakeDword(0x4A0C44);
MakeComm(0x4A0C48, "'+110'");
MakeDword(0x4A0C48);
MakeComm(0x4A0C4C, "'+114'");
MakeDword(0x4A0C4C);
MakeUnkn(0x4A0CA4, 1);
MakeNameEx(0x4A0CA4, "RTTI_4A0CA4_Class_TCheckListBox", 0);
MakeDword(0x4A0CA4);
MakeUnkn(0x4A0CA8, 1);
MakeNameEx(0x4A0CA8, "", 0);
MakeByte(0x4A0CA8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A0CA9, 0x4A0CB7);
MakeDword(0x4A0CB7);
MakeDword(0x4A0CBB);
MakeWord(0x4A0CBF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A0CC1, 0x4A0CCA);
MakeWord(0x4A0CCA);
MakeDword(0x4A0CCC);
MakeDword(0x4A0CD0);
MakeDword(0x4A0CD4);
MakeDword(0x4A0CD8);
MakeDword(0x4A0CDC);
MakeDword(0x4A0CE0);
MakeWord(0x4A0CE4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A0CE6, 0x4A0CF3);
MakeDword(0x4A0CF3);
MakeDword(0x4A0CF7);
MakeDword(0x4A0CFB);
MakeDword(0x4A0CFF);
MakeDword(0x4A0D03);
MakeDword(0x4A0D07);
MakeWord(0x4A0D0B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A0D0D, 0x4A0D13);
MakeDword(0x4A0D13);
MakeDword(0x4A0D17);
MakeDword(0x4A0D1B);
MakeDword(0x4A0D1F);
MakeDword(0x4A0D23);
MakeDword(0x4A0D27);
MakeWord(0x4A0D2B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A0D2D, 0x4A0D39);
MakeDword(0x4A0D39);
MakeDword(0x4A0D3D);
MakeDword(0x4A0D41);
MakeDword(0x4A0D45);
MakeDword(0x4A0D49);
MakeDword(0x4A0D4D);
MakeWord(0x4A0D51);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A0D53, 0x4A0D5B);
MakeDword(0x4A0D5B);
MakeDword(0x4A0D5F);
MakeDword(0x4A0D63);
MakeDword(0x4A0D67);
MakeDword(0x4A0D6B);
MakeDword(0x4A0D6F);
MakeWord(0x4A0D73);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A0D75, 0x4A0D82);
MakeDword(0x4A0D82);
MakeDword(0x4A0D86);
MakeDword(0x4A0D8A);
MakeDword(0x4A0D8E);
MakeDword(0x4A0D92);
MakeDword(0x4A0D96);
MakeWord(0x4A0D9A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A0D9C, 0x4A0DA7);
MakeDword(0x4A0DA7);
MakeDword(0x4A0DAB);
MakeDword(0x4A0DAF);
MakeDword(0x4A0DB3);
MakeDword(0x4A0DB7);
MakeDword(0x4A0DBB);
MakeWord(0x4A0DBF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A0DC1, 0x4A0DCC);
MakeDword(0x4A0DCC);
MakeDword(0x4A0DD0);
MakeDword(0x4A0DD4);
MakeDword(0x4A0DD8);
MakeDword(0x4A0DDC);
MakeDword(0x4A0DE0);
MakeWord(0x4A0DE4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A0DE6, 0x4A0DF1);
MakeDword(0x4A0DF1);
MakeDword(0x4A0DF5);
MakeDword(0x4A0DF9);
MakeDword(0x4A0DFD);
MakeDword(0x4A0E01);
MakeDword(0x4A0E05);
MakeWord(0x4A0E09);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A0E0B, 0x4A0E15);
MakeDword(0x4A0E15);
MakeDword(0x4A0E19);
MakeDword(0x4A0E1D);
MakeDword(0x4A0E21);
MakeDword(0x4A0E25);
MakeDword(0x4A0E29);
MakeWord(0x4A0E2D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A0E2F, 0x4A0E3A);
MakeDword(0x4A0E3A);
MakeDword(0x4A0E3E);
MakeDword(0x4A0E42);
MakeDword(0x4A0E46);
MakeDword(0x4A0E4A);
MakeDword(0x4A0E4E);
MakeWord(0x4A0E52);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A0E54, 0x4A0E5D);
MakeDword(0x4A0E5D);
MakeDword(0x4A0E61);
MakeDword(0x4A0E65);
MakeDword(0x4A0E69);
MakeDword(0x4A0E6D);
MakeDword(0x4A0E71);
MakeWord(0x4A0E75);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A0E77, 0x4A0E83);
MakeDword(0x4A0E83);
MakeDword(0x4A0E87);
MakeDword(0x4A0E8B);
MakeDword(0x4A0E8F);
MakeDword(0x4A0E93);
MakeDword(0x4A0E97);
MakeWord(0x4A0E9B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A0E9D, 0x4A0EA3);
MakeDword(0x4A0EA3);
MakeDword(0x4A0EA7);
MakeDword(0x4A0EAB);
MakeDword(0x4A0EAF);
MakeDword(0x4A0EB3);
MakeDword(0x4A0EB7);
MakeWord(0x4A0EBB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A0EBD, 0x4A0EC5);
MakeDword(0x4A0EC5);
MakeDword(0x4A0EC9);
MakeDword(0x4A0ECD);
MakeDword(0x4A0ED1);
MakeDword(0x4A0ED5);
MakeDword(0x4A0ED9);
MakeWord(0x4A0EDD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A0EDF, 0x4A0EEB);
MakeDword(0x4A0EEB);
MakeDword(0x4A0EEF);
MakeDword(0x4A0EF3);
MakeDword(0x4A0EF7);
MakeDword(0x4A0EFB);
MakeDword(0x4A0EFF);
MakeWord(0x4A0F03);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A0F05, 0x4A0F0B);
MakeDword(0x4A0F0B);
MakeDword(0x4A0F0F);
MakeDword(0x4A0F13);
MakeDword(0x4A0F17);
MakeDword(0x4A0F1B);
MakeDword(0x4A0F1F);
MakeWord(0x4A0F23);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A0F25, 0x4A0F30);
MakeDword(0x4A0F30);
MakeDword(0x4A0F34);
MakeDword(0x4A0F38);
MakeDword(0x4A0F3C);
MakeDword(0x4A0F40);
MakeDword(0x4A0F44);
MakeWord(0x4A0F48);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A0F4A, 0x4A0F53);
MakeDword(0x4A0F53);
MakeDword(0x4A0F57);
MakeDword(0x4A0F5B);
MakeDword(0x4A0F5F);
MakeDword(0x4A0F63);
MakeDword(0x4A0F67);
MakeWord(0x4A0F6B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A0F6D, 0x4A0F76);
MakeDword(0x4A0F76);
MakeDword(0x4A0F7A);
MakeDword(0x4A0F7E);
MakeDword(0x4A0F82);
MakeDword(0x4A0F86);
MakeDword(0x4A0F8A);
MakeWord(0x4A0F8E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A0F90, 0x4A0F98);
MakeDword(0x4A0F98);
MakeDword(0x4A0F9C);
MakeDword(0x4A0FA0);
MakeDword(0x4A0FA4);
MakeDword(0x4A0FA8);
MakeDword(0x4A0FAC);
MakeWord(0x4A0FB0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A0FB2, 0x4A0FB7);
MakeDword(0x4A0FB7);
MakeDword(0x4A0FBB);
MakeDword(0x4A0FBF);
MakeDword(0x4A0FC3);
MakeDword(0x4A0FC7);
MakeDword(0x4A0FCB);
MakeWord(0x4A0FCF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A0FD1, 0x4A0FD6);
MakeDword(0x4A0FD6);
MakeDword(0x4A0FDA);
MakeDword(0x4A0FDE);
MakeDword(0x4A0FE2);
MakeDword(0x4A0FE6);
MakeDword(0x4A0FEA);
MakeWord(0x4A0FEE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A0FF0, 0x4A0FFC);
MakeDword(0x4A0FFC);
MakeDword(0x4A1000);
MakeDword(0x4A1004);
MakeDword(0x4A1008);
MakeDword(0x4A100C);
MakeDword(0x4A1010);
MakeWord(0x4A1014);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A1016, 0x4A102C);
MakeDword(0x4A102C);
MakeDword(0x4A1030);
MakeDword(0x4A1034);
MakeDword(0x4A1038);
MakeDword(0x4A103C);
MakeDword(0x4A1040);
MakeWord(0x4A1044);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A1046, 0x4A104E);
MakeDword(0x4A104E);
MakeDword(0x4A1052);
MakeDword(0x4A1056);
MakeDword(0x4A105A);
MakeDword(0x4A105E);
MakeDword(0x4A1062);
MakeWord(0x4A1066);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A1068, 0x4A1070);
MakeDword(0x4A1070);
MakeDword(0x4A1074);
MakeDword(0x4A1078);
MakeDword(0x4A107C);
MakeDword(0x4A1080);
MakeDword(0x4A1084);
MakeWord(0x4A1088);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A108A, 0x4A1099);
MakeDword(0x4A1099);
MakeDword(0x4A109D);
MakeDword(0x4A10A1);
MakeDword(0x4A10A5);
MakeDword(0x4A10A9);
MakeDword(0x4A10AD);
MakeWord(0x4A10B1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A10B3, 0x4A10BE);
MakeDword(0x4A10BE);
MakeDword(0x4A10C2);
MakeDword(0x4A10C6);
MakeDword(0x4A10CA);
MakeDword(0x4A10CE);
MakeDword(0x4A10D2);
MakeWord(0x4A10D6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A10D8, 0x4A10DE);
MakeDword(0x4A10DE);
MakeDword(0x4A10E2);
MakeDword(0x4A10E6);
MakeDword(0x4A10EA);
MakeDword(0x4A10EE);
MakeDword(0x4A10F2);
MakeWord(0x4A10F6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A10F8, 0x4A1107);
MakeDword(0x4A1107);
MakeDword(0x4A110B);
MakeDword(0x4A110F);
MakeDword(0x4A1113);
MakeDword(0x4A1117);
MakeDword(0x4A111B);
MakeWord(0x4A111F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A1121, 0x4A112D);
MakeDword(0x4A112D);
MakeDword(0x4A1131);
MakeDword(0x4A1135);
MakeDword(0x4A1139);
MakeDword(0x4A113D);
MakeDword(0x4A1141);
MakeWord(0x4A1145);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A1147, 0x4A1153);
MakeDword(0x4A1153);
MakeDword(0x4A1157);
MakeDword(0x4A115B);
MakeDword(0x4A115F);
MakeDword(0x4A1163);
MakeDword(0x4A1167);
MakeWord(0x4A116B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A116D, 0x4A1178);
MakeDword(0x4A1178);
MakeDword(0x4A117C);
MakeDword(0x4A1180);
MakeDword(0x4A1184);
MakeDword(0x4A1188);
MakeDword(0x4A118C);
MakeWord(0x4A1190);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A1192, 0x4A11A1);
MakeDword(0x4A11A1);
MakeDword(0x4A11A5);
MakeDword(0x4A11A9);
MakeDword(0x4A11AD);
MakeDword(0x4A11B1);
MakeDword(0x4A11B5);
MakeWord(0x4A11B9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A11BB, 0x4A11C5);
MakeDword(0x4A11C5);
MakeDword(0x4A11C9);
MakeDword(0x4A11CD);
MakeDword(0x4A11D1);
MakeDword(0x4A11D5);
MakeDword(0x4A11D9);
MakeWord(0x4A11DD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A11DF, 0x4A11E8);
MakeDword(0x4A11E8);
MakeDword(0x4A11EC);
MakeDword(0x4A11F0);
MakeDword(0x4A11F4);
MakeDword(0x4A11F8);
MakeDword(0x4A11FC);
MakeWord(0x4A1200);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A1202, 0x4A1209);
MakeDword(0x4A1209);
MakeDword(0x4A120D);
MakeDword(0x4A1211);
MakeDword(0x4A1215);
MakeDword(0x4A1219);
MakeDword(0x4A121D);
MakeWord(0x4A1221);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A1223, 0x4A1229);
MakeDword(0x4A1229);
MakeDword(0x4A122D);
MakeDword(0x4A1231);
MakeDword(0x4A1235);
MakeDword(0x4A1239);
MakeDword(0x4A123D);
MakeWord(0x4A1241);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A1243, 0x4A124C);
MakeDword(0x4A124C);
MakeDword(0x4A1250);
MakeDword(0x4A1254);
MakeDword(0x4A1258);
MakeDword(0x4A125C);
MakeDword(0x4A1260);
MakeWord(0x4A1264);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A1266, 0x4A126E);
MakeDword(0x4A126E);
MakeDword(0x4A1272);
MakeDword(0x4A1276);
MakeDword(0x4A127A);
MakeDword(0x4A127E);
MakeDword(0x4A1282);
MakeWord(0x4A1286);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A1288, 0x4A1291);
MakeDword(0x4A1291);
MakeDword(0x4A1295);
MakeDword(0x4A1299);
MakeDword(0x4A129D);
MakeDword(0x4A12A1);
MakeDword(0x4A12A5);
MakeWord(0x4A12A9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A12AB, 0x4A12B3);
MakeDword(0x4A12B3);
MakeDword(0x4A12B7);
MakeDword(0x4A12BB);
MakeDword(0x4A12BF);
MakeDword(0x4A12C3);
MakeDword(0x4A12C7);
MakeWord(0x4A12CB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A12CD, 0x4A12D5);
MakeDword(0x4A12D5);
MakeDword(0x4A12D9);
MakeDword(0x4A12DD);
MakeDword(0x4A12E1);
MakeDword(0x4A12E5);
MakeDword(0x4A12E9);
MakeWord(0x4A12ED);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A12EF, 0x4A12FE);
MakeDword(0x4A12FE);
MakeDword(0x4A1302);
MakeDword(0x4A1306);
MakeDword(0x4A130A);
MakeDword(0x4A130E);
MakeDword(0x4A1312);
MakeWord(0x4A1316);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A1318, 0x4A131F);
MakeDword(0x4A131F);
MakeDword(0x4A1323);
MakeDword(0x4A1327);
MakeDword(0x4A132B);
MakeDword(0x4A132F);
MakeDword(0x4A1333);
MakeWord(0x4A1337);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A1339, 0x4A1344);
MakeDword(0x4A1344);
MakeDword(0x4A1348);
MakeDword(0x4A134C);
MakeDword(0x4A1350);
MakeDword(0x4A1354);
MakeDword(0x4A1358);
MakeWord(0x4A135C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A135E, 0x4A136B);
MakeDword(0x4A136B);
MakeDword(0x4A136F);
MakeDword(0x4A1373);
MakeDword(0x4A1377);
MakeDword(0x4A137B);
MakeDword(0x4A137F);
MakeWord(0x4A1383);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A1385, 0x4A1390);
MakeDword(0x4A1390);
MakeDword(0x4A1394);
MakeDword(0x4A1398);
MakeDword(0x4A139C);
MakeDword(0x4A13A0);
MakeDword(0x4A13A4);
MakeWord(0x4A13A8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A13AA, 0x4A13B5);
MakeDword(0x4A13B5);
MakeDword(0x4A13B9);
MakeDword(0x4A13BD);
MakeDword(0x4A13C1);
MakeDword(0x4A13C5);
MakeDword(0x4A13C9);
MakeWord(0x4A13CD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A13CF, 0x4A13DA);
MakeDword(0x4A13DA);
MakeDword(0x4A13DE);
MakeDword(0x4A13E2);
MakeDword(0x4A13E6);
MakeDword(0x4A13EA);
MakeDword(0x4A13EE);
MakeWord(0x4A13F2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A13F4, 0x4A13FF);
MakeDword(0x4A13FF);
MakeDword(0x4A1403);
MakeDword(0x4A1407);
MakeDword(0x4A140B);
MakeDword(0x4A140F);
MakeDword(0x4A1413);
MakeWord(0x4A1417);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A1419, 0x4A1423);
MakeDword(0x4A1423);
MakeDword(0x4A1427);
MakeDword(0x4A142B);
MakeDword(0x4A142F);
MakeDword(0x4A1433);
MakeDword(0x4A1437);
MakeWord(0x4A143B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A143D, 0x4A1447);
MakeDword(0x4A1447);
MakeDword(0x4A144B);
MakeDword(0x4A144F);
MakeDword(0x4A1453);
MakeDword(0x4A1457);
MakeDword(0x4A145B);
MakeWord(0x4A145F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A1461, 0x4A1469);
MakeDword(0x4A1469);
MakeDword(0x4A146D);
MakeDword(0x4A1471);
MakeDword(0x4A1475);
MakeDword(0x4A1479);
MakeDword(0x4A147D);
MakeWord(0x4A1481);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A1483, 0x4A148A);
MakeDword(0x4A148A);
MakeDword(0x4A148E);
MakeDword(0x4A1492);
MakeDword(0x4A1496);
MakeDword(0x4A149A);
MakeDword(0x4A149E);
MakeWord(0x4A14A2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A14A4, 0x4A14AE);
MakeDword(0x4A14AE);
MakeDword(0x4A14B2);
MakeDword(0x4A14B6);
MakeDword(0x4A14BA);
MakeDword(0x4A14BE);
MakeDword(0x4A14C2);
MakeWord(0x4A14C6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A14C8, 0x4A14D3);
MakeDword(0x4A14D3);
MakeDword(0x4A14D7);
MakeDword(0x4A14DB);
MakeDword(0x4A14DF);
MakeDword(0x4A14E3);
MakeDword(0x4A14E7);
MakeWord(0x4A14EB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A14ED, 0x4A14F5);
MakeDword(0x4A14F5);
MakeDword(0x4A14F9);
MakeDword(0x4A14FD);
MakeDword(0x4A1501);
MakeDword(0x4A1505);
MakeDword(0x4A1509);
MakeWord(0x4A150D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A150F, 0x4A151D);
MakeDword(0x4A151D);
MakeDword(0x4A1521);
MakeDword(0x4A1525);
MakeDword(0x4A1529);
MakeDword(0x4A152D);
MakeDword(0x4A1531);
MakeWord(0x4A1535);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A1537, 0x4A1547);
MakeDword(0x4A1547);
MakeDword(0x4A154B);
MakeDword(0x4A154F);
MakeDword(0x4A1553);
MakeDword(0x4A1557);
MakeDword(0x4A155B);
MakeWord(0x4A155F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A1561, 0x4A156D);
MakeDword(0x4A156D);
MakeDword(0x4A1571);
MakeDword(0x4A1575);
MakeDword(0x4A1579);
MakeDword(0x4A157D);
MakeDword(0x4A1581);
MakeWord(0x4A1585);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A1587, 0x4A1594);
MakeDword(0x4A1594);
MakeDword(0x4A1598);
MakeDword(0x4A159C);
MakeDword(0x4A15A0);
MakeDword(0x4A15A4);
MakeDword(0x4A15A8);
MakeWord(0x4A15AC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A15AE, 0x4A15BB);
MakeDword(0x4A15BB);
MakeDword(0x4A15BF);
MakeDword(0x4A15C3);
MakeDword(0x4A15C7);
MakeDword(0x4A15CB);
MakeDword(0x4A15CF);
MakeWord(0x4A15D3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A15D5, 0x4A15E1);
MakeDword(0x4A15E1);
MakeDword(0x4A15E5);
MakeDword(0x4A15E9);
MakeDword(0x4A15ED);
MakeDword(0x4A15F1);
MakeDword(0x4A15F5);
MakeWord(0x4A15F9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A15FB, 0x4A1605);
MakeDword(0x4A1605);
MakeDword(0x4A1609);
MakeDword(0x4A160D);
MakeDword(0x4A1611);
MakeDword(0x4A1615);
MakeDword(0x4A1619);
MakeWord(0x4A161D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A161F, 0x4A162B);
MakeDword(0x4A162B);
MakeDword(0x4A162F);
MakeDword(0x4A1633);
MakeDword(0x4A1637);
MakeDword(0x4A163B);
MakeDword(0x4A163F);
MakeWord(0x4A1643);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A1645, 0x4A1651);
MakeUnkn(0x4A1654, 1);
MakeNameEx(0x4A1654, "VMT_4A1654_TCheckListBoxDataWrapper", 0);
MakeDword(0x4A1654);
MakeDword(0x4A1658);
MakeDword(0x4A165C);
MakeDword(0x4A1660);
MakeDword(0x4A1664);
MakeDword(0x4A1668);
MakeDword(0x4A166C);
MakeDword(0x4A1670);
MakeDword(0x4A1674);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A16A0, 0x4A16B9);
MakeDword(0x4A1678);
MakeDword(0x4A167C);
MakeDword(0x4A1680);
MakeDword(0x4A1684);
MakeDword(0x4A1688);
MakeDword(0x4A168C);
MakeDword(0x4A1690);
MakeDword(0x4A1694);
MakeDword(0x4A1698);
MakeDword(0x4A169C);
MakeUnkn(0x4A16BC, 1);
MakeNameEx(0x4A16BC, "GetCheckSize", 0x20);
MakeComm(0x4A16BC, "'procedure GetCheckSize;'");
MakeCode(0x4A16BC);
MakeCode(0x4A1702);
MakeCode(0x4A171F);
MakeCode(0x4A172C);
MakeCode(0x4A1735);
MakeCode(0x4A173A);
MakeFunction(0x4A16BC, 0x4A173F);
MakeUnkn(0x4A1740, 1);
MakeNameEx(0x4A1740, "TCheckListBoxDataWrapper.SetChecked", 0x20);
MakeComm(0x4A1740, "'procedure TCheckListBoxDataWrapper.SetChecked(Check:Boolean);'");
MakeCode(0x4A1740);
MakeCode(0x4A1749);
MakeFunction(0x4A1740, 0x4A174E);
MakeUnkn(0x4A1750, 1);
MakeNameEx(0x4A1750, "TCheckListBoxDataWrapper.GetChecked", 0x20);
MakeComm(0x4A1750, "'function TCheckListBoxDataWrapper.GetChecked:Boolean;'");
MakeCode(0x4A1750);
MakeFunction(0x4A1750, 0x4A1758);
MakeUnkn(0x4A1758, 1);
MakeNameEx(0x4A1758, "TCheckListBoxDataWrapper.GetDefaultState", 0x20);
MakeComm(0x4A1758, "'function TCheckListBoxDataWrapper.GetDefaultState:TCheckBoxState;'");
MakeCode(0x4A1758);
MakeFunction(0x4A1758, 0x4A175B);
MakeUnkn(0x4A175C, 1);
MakeNameEx(0x4A175C, "TCheckListBox.Create", 0x20);
MakeComm(0x4A175C, "'constructor TCheckListBox.Create(AOwner:TComponent);'");
MakeCode(0x4A175C);
MakeCode(0x4A176A);
MakeCode(0x4A17B9);
MakeFunction(0x4A175C, 0x4A17BE);
MakeUnkn(0x4A17C0, 1);
MakeNameEx(0x4A17C0, "TCheckListBox.Destroy", 0x20);
MakeComm(0x4A17C0, "'destructor TCheckListBox.Destroy;'");
MakeCode(0x4A17C0);
MakeCode(0x4A17DE);
MakeCode(0x4A17F4);
MakeCode(0x4A1816);
MakeFunction(0x4A17C0, 0x4A181B);
MakeUnkn(0x4A181C, 1);
MakeNameEx(0x4A181C, "TCheckListBox.CreateWnd", 0x20);
MakeComm(0x4A181C, "'procedure TCheckListBox.CreateWnd;'");
MakeCode(0x4A181C);
MakeFunction(0x4A181C, 0x4A182F);
MakeUnkn(0x4A1830, 1);
MakeNameEx(0x4A1830, "TCheckListBox.CreateParams", 0x20);
MakeComm(0x4A1830, "'procedure TCheckListBox.CreateParams(var Params:TCreateParams);'");
MakeCode(0x4A1830);
MakeCode(0x4A1844);
MakeFunction(0x4A1830, 0x4A1846);
MakeUnkn(0x4A1848, 1);
MakeNameEx(0x4A1848, "TCheckListBox.GetCheckWidth", 0x20);
MakeComm(0x4A1848, "'function TCheckListBox.GetCheckWidth:Integer;'");
MakeCode(0x4A1848);
MakeFunction(0x4A1848, 0x4A1851);
MakeUnkn(0x4A1854, 1);
MakeNameEx(0x4A1854, "TCheckListBox.CMFontChanged", 0x20);
MakeComm(0x4A1854, "'procedure TCheckListBox.CMFontChanged(var Message:TMessage);'");
MakeCode(0x4A1854);
MakeFunction(0x4A1854, 0x4A1867);
MakeUnkn(0x4A1868, 1);
MakeNameEx(0x4A1868, "TCheckListBox.ResetItemHeight", 0x20);
MakeComm(0x4A1868, "'procedure TCheckListBox.ResetItemHeight;'");
MakeCode(0x4A1868);
MakeCode(0x4A18B5);
MakeFunction(0x4A1868, 0x4A18B8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4A18C0, -1);
MakeDword(0x4A18BC);
MakeDword(0x4A18B8);
MakeUnkn(0x4A18C4, 1);
MakeNameEx(0x4A18C4, "TCheckListBox.DrawItem", 0x20);
MakeComm(0x4A18C4, "'procedure TCheckListBox.DrawItem(Index:Integer; Rect:TRect; State:TOwnerDrawState);'");
MakeCode(0x4A18C4);
MakeCode(0x4A1922);
MakeCode(0x4A1926);
MakeCode(0x4A1928);
MakeCode(0x4A1954);
MakeCode(0x4A1960);
MakeCode(0x4A197A);
MakeCode(0x4A19AE);
MakeCode(0x4A19C8);
MakeCode(0x4A1A27);
MakeCode(0x4A1A34);
MakeCode(0x4A1A4A);
MakeCode(0x4A1A4F);
MakeCode(0x4A1A51);
MakeFunction(0x4A18C4, 0x4A1A6C);
MakeUnkn(0x4A1A6C, 1);
MakeNameEx(0x4A1A6C, "TCheckListBox.CNDrawItem", 0x20);
MakeComm(0x4A1A6C, "'procedure TCheckListBox.CNDrawItem(var Message:TWMDrawItem);'");
MakeCode(0x4A1A6C);
MakeCode(0x4A1AAF);
MakeCode(0x4A1AB9);
MakeCode(0x4A1AC2);
MakeFunction(0x4A1A6C, 0x4A1AC7);
MakeUnkn(0x4A1AC8, 1);
MakeNameEx(0x4A1AC8, "TCheckListBox.DrawCheck", 0x20);
MakeComm(0x4A1AC8, "'procedure TCheckListBox.DrawCheck(R:TRect; AState:TCheckBoxState; AEnabled:Boolean);'");
MakeCode(0x4A1AC8);
MakeCode(0x4A1AF6);
MakeCode(0x4A1B10);
MakeCode(0x4A1B97);
MakeCode(0x4A1BCA);
MakeCode(0x4A1BDB);
MakeCode(0x4A1BF2);
MakeCode(0x4A1C03);
MakeCode(0x4A1C1A);
MakeCode(0x4A1C29);
MakeCode(0x4A1C47);
MakeCode(0x4A1C5A);
MakeCode(0x4A1C61);
MakeCode(0x4A1C68);
MakeCode(0x4A1C75);
MakeCode(0x4A1C8C);
MakeCode(0x4A1D1C);
MakeFunction(0x4A1AC8, 0x4A1D25);
MakeUnkn(0x4A1D28, 1);
MakeNameEx(0x4A1D28, "TCheckListBox.SetChecked", 0x20);
MakeComm(0x4A1D28, "'procedure TCheckListBox.SetChecked(Index:Integer; AChecked:Boolean);'");
MakeCode(0x4A1D28);
MakeCode(0x4A1D57);
MakeFunction(0x4A1D28, 0x4A1D5B);
MakeUnkn(0x4A1D5C, 1);
MakeNameEx(0x4A1D5C, "TCheckListBox.SetState", 0x20);
MakeComm(0x4A1D5C, "'procedure TCheckListBox.SetState(Index:Integer; AState:TCheckBoxState);'");
MakeCode(0x4A1D5C);
MakeCode(0x4A1D87);
MakeFunction(0x4A1D5C, 0x4A1D8B);
MakeUnkn(0x4A1D8C, 1);
MakeNameEx(0x4A1D8C, "TCheckListBox.InvalidateCheck", 0x20);
MakeComm(0x4A1D8C, "'procedure TCheckListBox.InvalidateCheck(Index:Integer);'");
MakeCode(0x4A1D8C);
MakeCode(0x4A1DCC);
MakeCode(0x4A1DDC);
MakeCode(0x4A1E09);
MakeFunction(0x4A1D8C, 0x4A1E0F);
MakeUnkn(0x4A1E10, 1);
MakeNameEx(0x4A1E10, "TCheckListBox.GetChecked", 0x20);
MakeComm(0x4A1E10, "'function TCheckListBox.GetChecked(Index:Integer):Boolean;'");
MakeCode(0x4A1E10);
MakeCode(0x4A1E34);
MakeFunction(0x4A1E10, 0x4A1E39);
MakeUnkn(0x4A1E3C, 1);
MakeNameEx(0x4A1E3C, "TCheckListBox.GetItemEnabled", 0x20);
MakeComm(0x4A1E3C, "'function TCheckListBox.GetItemEnabled(Index:Integer):Boolean;'");
MakeCode(0x4A1E3C);
MakeCode(0x4A1E61);
MakeFunction(0x4A1E3C, 0x4A1E66);
MakeUnkn(0x4A1E68, 1);
MakeNameEx(0x4A1E68, "TCheckListBox.GetState", 0x20);
MakeComm(0x4A1E68, "'function TCheckListBox.GetState(Index:Integer):TCheckBoxState;'");
MakeCode(0x4A1E68);
MakeCode(0x4A1E8B);
MakeFunction(0x4A1E68, 0x4A1E98);
MakeUnkn(0x4A1E98, 1);
MakeNameEx(0x4A1E98, "TCheckListBox.KeyPress", 0x20);
MakeComm(0x4A1E98, "'procedure TCheckListBox.KeyPress(var Key:Char);'");
MakeCode(0x4A1E98);
MakeCode(0x4A1EB6);
MakeFunction(0x4A1E98, 0x4A1EC2);
MakeUnkn(0x4A1EC4, 1);
MakeNameEx(0x4A1EC4, "TCheckListBox.LoadRecreateItems", 0x20);
MakeComm(0x4A1EC4, "'procedure TCheckListBox.LoadRecreateItems(RecreateItems:TStrings);'");
MakeCode(0x4A1EC4);
MakeCode(0x4A1F76);
MakeCode(0x4A1FBE);
MakeCode(0x4A1FC4);
MakeCode(0x4A1FD1);
MakeCode(0x4A1FDA);
MakeCode(0x4A1FDF);
MakeCode(0x4A1FE1);
MakeCode(0x4A1FEE);
MakeCode(0x4A1FFC);
MakeCode(0x4A2001);
MakeFunction(0x4A1EC4, 0x4A200A);
MakeUnkn(0x4A200C, 1);
MakeNameEx(0x4A200C, "TCheckListBox.MouseDown", 0x20);
MakeComm(0x4A200C, "'procedure TCheckListBox.MouseDown(Button:TMouseButton; Shift:TShiftState; X:Integer; Y:Integer);'");
MakeCode(0x4A200C);
MakeCode(0x4A20A3);
MakeCode(0x4A20D7);
MakeFunction(0x4A200C, 0x4A20E0);
MakeUnkn(0x4A20E0, 1);
MakeNameEx(0x4A20E0, "TCheckListBox.ToggleClickCheck", 0x20);
MakeComm(0x4A20E0, "'procedure TCheckListBox.ToggleClickCheck(Index:Integer);'");
MakeCode(0x4A20E0);
MakeCode(0x4A211E);
MakeCode(0x4A212B);
MakeCode(0x4A212F);
MakeCode(0x4A2133);
MakeCode(0x4A2135);
MakeCode(0x4A214B);
MakeFunction(0x4A20E0, 0x4A214E);
MakeUnkn(0x4A2150, 1);
MakeNameEx(0x4A2150, "TCheckListBox.ClickCheck", 0x20);
MakeComm(0x4A2150, "'procedure TCheckListBox.ClickCheck;'");
MakeCode(0x4A2150);
MakeCode(0x4A216B);
MakeFunction(0x4A2150, 0x4A216D);
MakeUnkn(0x4A2170, 1);
MakeNameEx(0x4A2170, "TCheckListBox.GetItemData", 0x20);
MakeComm(0x4A2170, "'procedure TCheckListBox.GetItemData(Index:Integer);'");
MakeCode(0x4A2170);
MakeCode(0x4A2192);
MakeFunction(0x4A2170, 0x4A2198);
MakeUnkn(0x4A2198, 1);
MakeNameEx(0x4A2198, "TCheckListBox.GetWrapper", 0x20);
MakeComm(0x4A2198, "'function TCheckListBox.GetWrapper(Index:Integer):TObject;'");
MakeCode(0x4A2198);
MakeCode(0x4A21B4);
MakeFunction(0x4A2198, 0x4A21B7);
MakeUnkn(0x4A21B8, 1);
MakeNameEx(0x4A21B8, "TCheckListBox.ExtractWrapper", 0x20);
MakeComm(0x4A21B8, "'function TCheckListBox.ExtractWrapper(Index:Integer):TObject;'");
MakeCode(0x4A21B8);
MakeCode(0x4A21F3);
MakeCode(0x4A220A);
MakeFunction(0x4A21B8, 0x4A2211);
MakeUnkn(0x4A2214, 1);
MakeNameEx(0x4A2214, "TCheckListBox.InternalGetItemData", 0x20);
MakeComm(0x4A2214, "'procedure TCheckListBox.InternalGetItemData(Index:Integer);'");
MakeCode(0x4A2214);
MakeFunction(0x4A2214, 0x4A221A);
MakeUnkn(0x4A221C, 1);
MakeNameEx(0x4A221C, "TCheckListBox.InternalSetItemData", 0x20);
MakeComm(0x4A221C, "'procedure TCheckListBox.InternalSetItemData(Index:Integer; AData:Longint);'");
MakeCode(0x4A221C);
MakeFunction(0x4A221C, 0x4A2222);
MakeUnkn(0x4A2224, 1);
MakeNameEx(0x4A2224, "TCheckListBox.CreateWrapper", 0x20);
MakeComm(0x4A2224, "'function TCheckListBox.CreateWrapper(Index:Integer):TObject;'");
MakeCode(0x4A2224);
MakeFunction(0x4A2224, 0x4A2262);
MakeUnkn(0x4A2264, 1);
MakeNameEx(0x4A2264, "TCheckListBox.HaveWrapper", 0x20);
MakeComm(0x4A2264, "'function TCheckListBox.HaveWrapper(Index:Integer):Boolean;'");
MakeCode(0x4A2264);
MakeFunction(0x4A2264, 0x4A227B);
MakeUnkn(0x4A227C, 1);
MakeNameEx(0x4A227C, "TCheckListBox.SetItemData", 0x20);
MakeComm(0x4A227C, "'procedure TCheckListBox.SetItemData(Index:Integer; AData:Longint);'");
MakeCode(0x4A227C);
MakeCode(0x4A2296);
MakeCode(0x4A22A2);
MakeFunction(0x4A227C, 0x4A22A6);
MakeUnkn(0x4A22A8, 1);
MakeNameEx(0x4A22A8, "TCheckListBox.ResetContent", 0x20);
MakeComm(0x4A22A8, "'procedure TCheckListBox.ResetContent;'");
MakeCode(0x4A22A8);
MakeCode(0x4A22C3);
MakeCode(0x4A22F1);
MakeCode(0x4A22F8);
MakeCode(0x4A22FC);
MakeFunction(0x4A22A8, 0x4A2308);
MakeUnkn(0x4A2308, 1);
MakeNameEx(0x4A2308, "TCheckListBox.SaveRecreateItems", 0x20);
MakeComm(0x4A2308, "'procedure TCheckListBox.SaveRecreateItems(RecreateItems:TStrings);'");
MakeCode(0x4A2308);
MakeCode(0x4A23C0);
MakeCode(0x4A23FB);
MakeCode(0x4A2403);
MakeCode(0x4A2410);
MakeCode(0x4A2419);
MakeCode(0x4A241E);
MakeCode(0x4A2420);
MakeCode(0x4A242D);
MakeCode(0x4A243B);
MakeCode(0x4A2440);
MakeFunction(0x4A2308, 0x4A2449);
MakeUnkn(0x4A244C, 1);
MakeNameEx(0x4A244C, "TCheckListBox.DeleteString", 0x20);
MakeComm(0x4A244C, "'procedure TCheckListBox.DeleteString(Index:Integer);'");
MakeCode(0x4A244C);
MakeCode(0x4A248A);
MakeCode(0x4A2491);
MakeFunction(0x4A244C, 0x4A249E);
MakeUnkn(0x4A24A0, 1);
MakeNameEx(0x4A24A0, "TCheckListBox.SetFlat", 0x20);
MakeComm(0x4A24A0, "'procedure TCheckListBox.SetFlat(Value:Boolean);'");
MakeCode(0x4A24A0);
MakeFunction(0x4A24A0, 0x4A24B7);
MakeUnkn(0x4A24B8, 1);
MakeNameEx(0x4A24B8, "TCheckListBox.GetHeader", 0x20);
MakeComm(0x4A24B8, "'function TCheckListBox.GetHeader(Index:Integer):Boolean;'");
MakeCode(0x4A24B8);
MakeCode(0x4A24DB);
MakeFunction(0x4A24B8, 0x4A24E0);
MakeUnkn(0x4A24E0, 1);
MakeNameEx(0x4A24E0, "TCheckListBox.SetHeaderBackgroundColor", 0x20);
MakeComm(0x4A24E0, "'procedure TCheckListBox.SetHeaderBackgroundColor(const Value:TColor);'");
MakeCode(0x4A24E0);
MakeFunction(0x4A24E0, 0x4A24F7);
MakeUnkn(0x4A24F8, 1);
MakeNameEx(0x4A24F8, "TCheckListBox.SetHeaderColor", 0x20);
MakeComm(0x4A24F8, "'procedure TCheckListBox.SetHeaderColor(const Value:TColor);'");
MakeCode(0x4A24F8);
MakeFunction(0x4A24F8, 0x4A250F);
MakeCode(0x4A2510);
MakeCode(0x4A2527);
MakeCode(0x4A2534);
MakeCode(0x4A2535);
MakeCode(0x4A253A);
MakeFunction(0x4A2510, 0x4A253E);
MakeUnkn(0x4A2540, 1);
MakeNameEx(0x4A2540, "VMT_4A2540_TExportTextForm", 0);
MakeDword(0x4A2540);
MakeDword(0x4A2544);
MakeDword(0x4A2548);
MakeDword(0x4A254C);
MakeDword(0x4A2550);
MakeDword(0x4A2554);
MakeUnkn(0x4A2690, 1);
MakeNameEx(0x4A2690, "TExportTextForm_FieldTable", 0);
MakeWord(0x4A2690);
MakeDword(0x4A2692);
MakeWord(0x4A27FB);
MakeDword(0x4A27FD);
MakeDword(0x4A2801);
MakeDword(0x4A2805);
MakeDword(0x4A2809);
MakeDword(0x4A280D);
MakeDword(0x4A2811);
MakeDword(0x4A2696);
MakeWord(0x4A269A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A269C, 0x4A26A5);
MakeDword(0x4A26A5);
MakeWord(0x4A26A9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A26AB, 0x4A26B8);
MakeDword(0x4A26B8);
MakeWord(0x4A26BC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A26BE, 0x4A26CC);
MakeDword(0x4A26CC);
MakeWord(0x4A26D0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A26D2, 0x4A26D9);
MakeDword(0x4A26D9);
MakeWord(0x4A26DD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A26DF, 0x4A26ED);
MakeDword(0x4A26ED);
MakeWord(0x4A26F1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A26F3, 0x4A2702);
MakeDword(0x4A2702);
MakeWord(0x4A2706);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A2708, 0x4A270F);
MakeDword(0x4A270F);
MakeWord(0x4A2713);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A2715, 0x4A271C);
MakeDword(0x4A271C);
MakeWord(0x4A2720);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A2722, 0x4A2729);
MakeDword(0x4A2729);
MakeWord(0x4A272D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A272F, 0x4A2736);
MakeDword(0x4A2736);
MakeWord(0x4A273A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A273C, 0x4A2751);
MakeDword(0x4A2751);
MakeWord(0x4A2755);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A2757, 0x4A2767);
MakeDword(0x4A2767);
MakeWord(0x4A276B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A276D, 0x4A2778);
MakeDword(0x4A2778);
MakeWord(0x4A277C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A277E, 0x4A2789);
MakeDword(0x4A2789);
MakeWord(0x4A278D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A278F, 0x4A2796);
MakeDword(0x4A2796);
MakeWord(0x4A279A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A279C, 0x4A27A3);
MakeDword(0x4A2558);
MakeUnkn(0x4A27A3, 1);
MakeNameEx(0x4A27A3, "TExportTextForm_MethodTable", 0);
MakeWord(0x4A27A3);
MakeWord(0x4A27A5);
MakeDword(0x4A27A7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A27AB, 0x4A27BA);
MakeWord(0x4A27BA);
MakeDword(0x4A27BC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A27C0, 0x4A27D0);
MakeWord(0x4A27D0);
MakeDword(0x4A27D2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A27D6, 0x4A27EB);
MakeDword(0x4A255C);
MakeDword(0x4A2560);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A27EB, 0x4A27FB);
MakeDword(0x4A2564);
MakeDword(0x4A2568);
MakeDword(0x4A256C);
MakeDword(0x4A2570);
MakeDword(0x4A2574);
MakeDword(0x4A2578);
MakeDword(0x4A257C);
MakeDword(0x4A2580);
MakeDword(0x4A2584);
MakeDword(0x4A2588);
MakeComm(0x4A258C, "'+0'");
MakeDword(0x4A258C);
MakeComm(0x4A2590, "'+4'");
MakeDword(0x4A2590);
MakeComm(0x4A2594, "'+8'");
MakeDword(0x4A2594);
MakeComm(0x4A2598, "'+C'");
MakeDword(0x4A2598);
MakeComm(0x4A259C, "'+10'");
MakeDword(0x4A259C);
MakeComm(0x4A25A0, "'+14'");
MakeDword(0x4A25A0);
MakeComm(0x4A25A4, "'+18'");
MakeDword(0x4A25A4);
MakeComm(0x4A25A8, "'+1C'");
MakeDword(0x4A25A8);
MakeComm(0x4A25AC, "'+20'");
MakeDword(0x4A25AC);
MakeComm(0x4A25B0, "'+24'");
MakeDword(0x4A25B0);
MakeComm(0x4A25B4, "'+28'");
MakeDword(0x4A25B4);
MakeComm(0x4A25B8, "'+2C'");
MakeDword(0x4A25B8);
MakeComm(0x4A25BC, "'+30'");
MakeDword(0x4A25BC);
MakeComm(0x4A25C0, "'+34'");
MakeDword(0x4A25C0);
MakeComm(0x4A25C4, "'+38'");
MakeDword(0x4A25C4);
MakeComm(0x4A25C8, "'+3C'");
MakeDword(0x4A25C8);
MakeComm(0x4A25CC, "'+40'");
MakeDword(0x4A25CC);
MakeComm(0x4A25D0, "'+44'");
MakeDword(0x4A25D0);
MakeComm(0x4A25D4, "'+48'");
MakeDword(0x4A25D4);
MakeComm(0x4A25D8, "'+4C'");
MakeDword(0x4A25D8);
MakeComm(0x4A25DC, "'+50'");
MakeDword(0x4A25DC);
MakeComm(0x4A25E0, "'+54'");
MakeDword(0x4A25E0);
MakeComm(0x4A25E4, "'+58'");
MakeDword(0x4A25E4);
MakeComm(0x4A25E8, "'+5C'");
MakeDword(0x4A25E8);
MakeComm(0x4A25EC, "'+60'");
MakeDword(0x4A25EC);
MakeComm(0x4A25F0, "'+64'");
MakeDword(0x4A25F0);
MakeComm(0x4A25F4, "'+68'");
MakeDword(0x4A25F4);
MakeComm(0x4A25F8, "'+6C'");
MakeDword(0x4A25F8);
MakeComm(0x4A25FC, "'+70'");
MakeDword(0x4A25FC);
MakeComm(0x4A2600, "'+74'");
MakeDword(0x4A2600);
MakeComm(0x4A2604, "'+78'");
MakeDword(0x4A2604);
MakeComm(0x4A2608, "'+7C'");
MakeDword(0x4A2608);
MakeComm(0x4A260C, "'+80'");
MakeDword(0x4A260C);
MakeComm(0x4A2610, "'+84'");
MakeDword(0x4A2610);
MakeComm(0x4A2614, "'+88'");
MakeDword(0x4A2614);
MakeComm(0x4A2618, "'+8C'");
MakeDword(0x4A2618);
MakeComm(0x4A261C, "'+90'");
MakeDword(0x4A261C);
MakeComm(0x4A2620, "'+94'");
MakeDword(0x4A2620);
MakeComm(0x4A2624, "'+98'");
MakeDword(0x4A2624);
MakeComm(0x4A2628, "'+9C'");
MakeDword(0x4A2628);
MakeComm(0x4A262C, "'+A0'");
MakeDword(0x4A262C);
MakeComm(0x4A2630, "'+A4'");
MakeDword(0x4A2630);
MakeComm(0x4A2634, "'+A8'");
MakeDword(0x4A2634);
MakeComm(0x4A2638, "'+AC'");
MakeDword(0x4A2638);
MakeComm(0x4A263C, "'+B0'");
MakeDword(0x4A263C);
MakeComm(0x4A2640, "'+B4'");
MakeDword(0x4A2640);
MakeComm(0x4A2644, "'+B8'");
MakeDword(0x4A2644);
MakeComm(0x4A2648, "'+BC'");
MakeDword(0x4A2648);
MakeComm(0x4A264C, "'+C0'");
MakeDword(0x4A264C);
MakeComm(0x4A2650, "'+C4'");
MakeDword(0x4A2650);
MakeComm(0x4A2654, "'+C8'");
MakeDword(0x4A2654);
MakeComm(0x4A2658, "'+CC'");
MakeDword(0x4A2658);
MakeComm(0x4A265C, "'+D0'");
MakeDword(0x4A265C);
MakeComm(0x4A2660, "'+D4'");
MakeDword(0x4A2660);
MakeComm(0x4A2664, "'+D8'");
MakeDword(0x4A2664);
MakeComm(0x4A2668, "'+DC'");
MakeDword(0x4A2668);
MakeComm(0x4A266C, "'+E0'");
MakeDword(0x4A266C);
MakeComm(0x4A2670, "'+E4'");
MakeDword(0x4A2670);
MakeComm(0x4A2674, "'+E8'");
MakeDword(0x4A2674);
MakeComm(0x4A2678, "'+EC'");
MakeDword(0x4A2678);
MakeComm(0x4A267C, "'+F0'");
MakeDword(0x4A267C);
MakeComm(0x4A2680, "'+F4'");
MakeDword(0x4A2680);
MakeComm(0x4A2684, "'+F8'");
MakeDword(0x4A2684);
MakeComm(0x4A2688, "'+FC'");
MakeDword(0x4A2688);
MakeComm(0x4A268C, "'+100'");
MakeDword(0x4A268C);
MakeUnkn(0x4A2818, 1);
MakeNameEx(0x4A2818, "RTTI_4A2818_Class_TExportTextForm", 0);
MakeDword(0x4A2818);
MakeUnkn(0x4A281C, 1);
MakeNameEx(0x4A281C, "", 0);
MakeByte(0x4A281C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A281D, 0x4A282D);
MakeDword(0x4A282D);
MakeDword(0x4A2831);
MakeWord(0x4A2835);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A2837, 0x4A2842);
MakeWord(0x4A2842);
MakeCode(0x4A2844);
MakeCode(0x4A286A);
MakeCode(0x4A287D);
MakeFunction(0x4A2844, 0x4A2881);
MakeCode(0x4A2884);
MakeCode(0x4A28AA);
MakeCode(0x4A28C7);
MakeCode(0x4A28EE);
MakeCode(0x4A28FD);
MakeCode(0x4A2932);
MakeCode(0x4A2940);
MakeFunction(0x4A2884, 0x4A2947);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4A2950, -1);
MakeDword(0x4A294C);
MakeDword(0x4A2948);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4A297C, -1);
MakeDword(0x4A2978);
MakeDword(0x4A2974);
MakeCode(0x4A2990);
MakeCode(0x4A29DE);
MakeCode(0x4A29EE);
MakeCode(0x4A2A17);
MakeCode(0x4A2A50);
MakeCode(0x4A2A6A);
MakeCode(0x4A2A7E);
MakeCode(0x4A2AA0);
MakeCode(0x4A2AC8);
MakeCode(0x4A2B01);
MakeCode(0x4A2B6A);
MakeCode(0x4A2B9F);
MakeCode(0x4A2BF6);
MakeCode(0x4A2C1A);
MakeCode(0x4A2C27);
MakeCode(0x4A2C84);
MakeCode(0x4A2CE5);
MakeCode(0x4A2D10);
MakeCode(0x4A2D26);
MakeCode(0x4A2D66);
MakeCode(0x4A2D71);
MakeCode(0x4A2D87);
MakeCode(0x4A2D9D);
MakeCode(0x4A2DE6);
MakeCode(0x4A2E51);
MakeCode(0x4A2E61);
MakeCode(0x4A2E6E);
MakeCode(0x4A2E89);
MakeCode(0x4A2E8E);
MakeFunction(0x4A2990, 0x4A2E97);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4A2EA0, -1);
MakeDword(0x4A2E9C);
MakeDword(0x4A2E98);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4A2ECC, -1);
MakeDword(0x4A2EC8);
MakeDword(0x4A2EC4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4A2EE8, -1);
MakeDword(0x4A2EE4);
MakeDword(0x4A2EE0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4A2EF4, -1);
MakeDword(0x4A2EF0);
MakeDword(0x4A2EEC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4A2F00, -1);
MakeDword(0x4A2EFC);
MakeDword(0x4A2EF8);
MakeCode(0x4A2F04);
MakeCode(0x4A2F0D);
MakeCode(0x4A2F77);
MakeCode(0x4A2F9D);
MakeCode(0x4A2FA8);
MakeCode(0x4A2FB8);
MakeCode(0x4A2FE4);
MakeCode(0x4A3034);
MakeCode(0x4A309E);
MakeCode(0x4A30D7);
MakeCode(0x4A312A);
MakeCode(0x4A313C);
MakeCode(0x4A317B);
MakeCode(0x4A31C9);
MakeCode(0x4A31CF);
MakeCode(0x4A31E9);
MakeCode(0x4A3213);
MakeCode(0x4A326F);
MakeCode(0x4A3285);
MakeCode(0x4A3343);
MakeCode(0x4A33A3);
MakeCode(0x4A33EA);
MakeCode(0x4A3426);
MakeCode(0x4A343F);
MakeCode(0x4A3448);
MakeCode(0x4A3466);
MakeCode(0x4A3478);
MakeCode(0x4A3499);
MakeCode(0x4A34A8);
MakeCode(0x4A34AE);
MakeCode(0x4A34D0);
MakeCode(0x4A34F3);
MakeCode(0x4A34FC);
MakeCode(0x4A355C);
MakeCode(0x4A3572);
MakeCode(0x4A35A0);
MakeCode(0x4A3631);
MakeCode(0x4A364A);
MakeCode(0x4A3656);
MakeCode(0x4A3673);
MakeCode(0x4A36AC);
MakeCode(0x4A36B3);
MakeCode(0x4A36DF);
MakeCode(0x4A36E5);
MakeCode(0x4A36F6);
MakeCode(0x4A3705);
MakeCode(0x4A370C);
MakeCode(0x4A375F);
MakeCode(0x4A3773);
MakeCode(0x4A37A7);
MakeCode(0x4A37AD);
MakeCode(0x4A37B8);
MakeCode(0x4A37F3);
MakeCode(0x4A37F9);
MakeCode(0x4A3804);
MakeCode(0x4A3838);
MakeCode(0x4A3841);
MakeCode(0x4A3847);
MakeCode(0x4A385C);
MakeCode(0x4A3898);
MakeCode(0x4A38AB);
MakeCode(0x4A3914);
MakeCode(0x4A3924);
MakeCode(0x4A393F);
MakeCode(0x4A396E);
MakeCode(0x4A3981);
MakeCode(0x4A39B7);
MakeCode(0x4A39D0);
MakeCode(0x4A39E9);
MakeCode(0x4A3A29);
MakeCode(0x4A3AB3);
MakeCode(0x4A3AFC);
MakeCode(0x4A3B41);
MakeCode(0x4A3B55);
MakeCode(0x4A3B70);
MakeCode(0x4A3BB9);
MakeCode(0x4A3BCC);
MakeCode(0x4A3C02);
MakeCode(0x4A3C0E);
MakeCode(0x4A3C24);
MakeCode(0x4A3C3A);
MakeCode(0x4A3C50);
MakeCode(0x4A3C83);
MakeCode(0x4A3C97);
MakeCode(0x4A3CB2);
MakeCode(0x4A3CDD);
MakeCode(0x4A3CE4);
MakeCode(0x4A3CF7);
MakeCode(0x4A3D1A);
MakeCode(0x4A3D27);
MakeCode(0x4A3D43);
MakeCode(0x4A3D48);
MakeFunction(0x4A2F04, 0x4A3D53);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4A3D5C, -1);
MakeDword(0x4A3D58);
MakeDword(0x4A3D54);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4A3D88, -1);
MakeDword(0x4A3D84);
MakeDword(0x4A3D80);
MakeUnkn(0x4A3D9C, 1);
MakeNameEx(0x4A3D9C, "TExportTextForm.FormCloseQuery", 0x20);
MakeComm(0x4A3D9C, "'procedure TExportTextForm.FormCloseQuery(Sender:TObject; var CanClose:Boolean);'");
MakeCode(0x4A3D9C);
MakeComm(0x4A3DC1, "'TExportTextForm.FModalResult:TModalResult'");
MakeComm(0x4A3DD1, "'TExportTextForm.LineWidthEdit:TEdit'");
MakeComm(0x4A3DF2, "'TExportTextForm.?f3A0:Longint'");
MakeComm(0x4A3DFE, "'TExportTextForm.?f3A0:Longint'");
MakeComm(0x4A3E07, "'TExportTextForm.?f3A0:Longint'");
MakeCode(0x4A3E13);
MakeComm(0x4A3E19, "'TExportTextForm.LineWidthEdit:TEdit'");
MakeComm(0x4A3E21, "'TWinControl.SetFocus'");
MakeComm(0x4A3E41, "'TExportTextForm.PageBreaksCheck:TCheckBox'");
MakeCode(0x4A3E41);
MakeComm(0x4A3E49, "'TCustomCheckBox.GetChecked'");
MakeComm(0x4A3E53, "'TExportTextForm.?f3A4:Longint'");
MakeCode(0x4A3E5F);
MakeComm(0x4A3E62, "'TExportTextForm.PageBreakEdit:TEdit'");
MakeComm(0x4A3E83, "'TExportTextForm.?f3A4:Longint'");
MakeComm(0x4A3E8F, "'TExportTextForm.?f3A4:Longint'");
MakeComm(0x4A3E98, "'TExportTextForm.?f3A4:Longint'");
MakeCode(0x4A3EA1);
MakeComm(0x4A3EA7, "'TExportTextForm.PageBreakEdit:TEdit'");
MakeComm(0x4A3EAF, "'TWinControl.SetFocus'");
MakeCode(0x4A3ECC);
MakeComm(0x4A3ECE, "'TExportTextForm.TracksList:TCheckListBox'");
MakeComm(0x4A3ED4, "'TCheckListBox.FItems:TStrings'");
MakeComm(0x4A3EDC, "'TStrings.GetCount'");
MakeCode(0x4A3EEE);
MakeComm(0x4A3EF1, "'TExportTextForm.TracksList:TCheckListBox'");
MakeCode(0x4A3F04);
MakeCode(0x4A3F0A);
MakeComm(0x4A3F14, "'TExportTextForm.TracksList:TCheckListBox'");
MakeComm(0x4A3F1C, "'TWinControl.SetFocus'");
MakeCode(0x4A3F37);
MakeCode(0x4A3F44);
MakeCode(0x4A3F65);
MakeCode(0x4A3F6A);
MakeFunction(0x4A3D9C, 0x4A3F73);
MakeUnkn(0x4A3FE4, 1);
MakeNameEx(0x4A3FE4, "TExportTextForm.HelpButtonClick", 0x20);
MakeComm(0x4A3FE4, "'procedure TExportTextForm.HelpButtonClick(Sender:TObject);'");
MakeCode(0x4A3FE4);
MakeComm(0x4A3FEC, "'TExportTextForm.HelpContext:THelpContext'");
MakeFunction(0x4A3FE4, 0x4A3FF9);
MakeUnkn(0x4A3FFC, 1);
MakeNameEx(0x4A3FFC, "TExportTextForm.PageBreaksCheckClick", 0x20);
MakeComm(0x4A3FFC, "'procedure TExportTextForm.PageBreaksCheckClick(Sender:TObject);'");
MakeCode(0x4A3FFC);
MakeComm(0x4A3FFF, "'TExportTextForm.PageBreaksCheck:TCheckBox'");
MakeComm(0x4A4007, "'TCustomCheckBox.GetChecked'");
MakeComm(0x4A4013, "'TExportTextForm.PageBreakLabel:TLabel'");
MakeComm(0x4A401B, "'TControl.SetEnabled'");
MakeComm(0x4A4020, "'TExportTextForm.PageBreakEdit:TEdit'");
MakeComm(0x4A4028, "'TControl.SetEnabled'");
MakeComm(0x4A4030, "'TExportTextForm.PageBreakEdit:TEdit'");
MakeCode(0x4A403D);
MakeComm(0x4A403F, "'TExportTextForm.PageBreakLabel:TLabel'");
MakeComm(0x4A4047, "'TControl.SetEnabled'");
MakeComm(0x4A404C, "'TExportTextForm.PageBreakEdit:TEdit'");
MakeComm(0x4A4054, "'TControl.SetEnabled'");
MakeComm(0x4A405C, "'TExportTextForm.PageBreakEdit:TEdit'");
MakeFunction(0x4A3FFC, 0x4A4069);
MakeUnkn(0x4A406C, 1);
MakeNameEx(0x4A406C, "VMT_4A406C_TExportMidiForm", 0);
MakeDword(0x4A406C);
MakeDword(0x4A4070);
MakeDword(0x4A4074);
MakeDword(0x4A4078);
MakeDword(0x4A407C);
MakeDword(0x4A4080);
MakeUnkn(0x4A41BC, 1);
MakeNameEx(0x4A41BC, "TExportMidiForm_FieldTable", 0);
MakeWord(0x4A41BC);
MakeDword(0x4A41BE);
MakeWord(0x4A42AB);
MakeDword(0x4A42AD);
MakeDword(0x4A42B1);
MakeDword(0x4A42B5);
MakeDword(0x4A42B9);
MakeDword(0x4A42BD);
MakeDword(0x4A41C2);
MakeWord(0x4A41C6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A41C8, 0x4A41D1);
MakeDword(0x4A41D1);
MakeWord(0x4A41D5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A41D7, 0x4A41E4);
MakeDword(0x4A41E4);
MakeWord(0x4A41E8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A41EA, 0x4A41F1);
MakeDword(0x4A41F1);
MakeWord(0x4A41F5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A41F7, 0x4A41FE);
MakeDword(0x4A41FE);
MakeWord(0x4A4202);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A4204, 0x4A420F);
MakeDword(0x4A420F);
MakeWord(0x4A4213);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A4215, 0x4A421C);
MakeDword(0x4A421C);
MakeWord(0x4A4220);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A4222, 0x4A4229);
MakeDword(0x4A4229);
MakeWord(0x4A422D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A422F, 0x4A423A);
MakeDword(0x4A423A);
MakeWord(0x4A423E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A4240, 0x4A4251);
MakeDword(0x4A4251);
MakeWord(0x4A4255);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A4257, 0x4A426E);
MakeDword(0x4A4084);
MakeUnkn(0x4A426E, 1);
MakeNameEx(0x4A426E, "TExportMidiForm_MethodTable", 0);
MakeWord(0x4A426E);
MakeWord(0x4A4270);
MakeDword(0x4A4272);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A4276, 0x4A4285);
MakeWord(0x4A4285);
MakeDword(0x4A4287);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A428B, 0x4A429B);
MakeDword(0x4A4088);
MakeDword(0x4A408C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A429B, 0x4A42AB);
MakeDword(0x4A4090);
MakeDword(0x4A4094);
MakeDword(0x4A4098);
MakeDword(0x4A409C);
MakeDword(0x4A40A0);
MakeDword(0x4A40A4);
MakeDword(0x4A40A8);
MakeDword(0x4A40AC);
MakeDword(0x4A40B0);
MakeDword(0x4A40B4);
MakeComm(0x4A40B8, "'+0'");
MakeDword(0x4A40B8);
MakeComm(0x4A40BC, "'+4'");
MakeDword(0x4A40BC);
MakeComm(0x4A40C0, "'+8'");
MakeDword(0x4A40C0);
MakeComm(0x4A40C4, "'+C'");
MakeDword(0x4A40C4);
MakeComm(0x4A40C8, "'+10'");
MakeDword(0x4A40C8);
MakeComm(0x4A40CC, "'+14'");
MakeDword(0x4A40CC);
MakeComm(0x4A40D0, "'+18'");
MakeDword(0x4A40D0);
MakeComm(0x4A40D4, "'+1C'");
MakeDword(0x4A40D4);
MakeComm(0x4A40D8, "'+20'");
MakeDword(0x4A40D8);
MakeComm(0x4A40DC, "'+24'");
MakeDword(0x4A40DC);
MakeComm(0x4A40E0, "'+28'");
MakeDword(0x4A40E0);
MakeComm(0x4A40E4, "'+2C'");
MakeDword(0x4A40E4);
MakeComm(0x4A40E8, "'+30'");
MakeDword(0x4A40E8);
MakeComm(0x4A40EC, "'+34'");
MakeDword(0x4A40EC);
MakeComm(0x4A40F0, "'+38'");
MakeDword(0x4A40F0);
MakeComm(0x4A40F4, "'+3C'");
MakeDword(0x4A40F4);
MakeComm(0x4A40F8, "'+40'");
MakeDword(0x4A40F8);
MakeComm(0x4A40FC, "'+44'");
MakeDword(0x4A40FC);
MakeComm(0x4A4100, "'+48'");
MakeDword(0x4A4100);
MakeComm(0x4A4104, "'+4C'");
MakeDword(0x4A4104);
MakeComm(0x4A4108, "'+50'");
MakeDword(0x4A4108);
MakeComm(0x4A410C, "'+54'");
MakeDword(0x4A410C);
MakeComm(0x4A4110, "'+58'");
MakeDword(0x4A4110);
MakeComm(0x4A4114, "'+5C'");
MakeDword(0x4A4114);
MakeComm(0x4A4118, "'+60'");
MakeDword(0x4A4118);
MakeComm(0x4A411C, "'+64'");
MakeDword(0x4A411C);
MakeComm(0x4A4120, "'+68'");
MakeDword(0x4A4120);
MakeComm(0x4A4124, "'+6C'");
MakeDword(0x4A4124);
MakeComm(0x4A4128, "'+70'");
MakeDword(0x4A4128);
MakeComm(0x4A412C, "'+74'");
MakeDword(0x4A412C);
MakeComm(0x4A4130, "'+78'");
MakeDword(0x4A4130);
MakeComm(0x4A4134, "'+7C'");
MakeDword(0x4A4134);
MakeComm(0x4A4138, "'+80'");
MakeDword(0x4A4138);
MakeComm(0x4A413C, "'+84'");
MakeDword(0x4A413C);
MakeComm(0x4A4140, "'+88'");
MakeDword(0x4A4140);
MakeComm(0x4A4144, "'+8C'");
MakeDword(0x4A4144);
MakeComm(0x4A4148, "'+90'");
MakeDword(0x4A4148);
MakeComm(0x4A414C, "'+94'");
MakeDword(0x4A414C);
MakeComm(0x4A4150, "'+98'");
MakeDword(0x4A4150);
MakeComm(0x4A4154, "'+9C'");
MakeDword(0x4A4154);
MakeComm(0x4A4158, "'+A0'");
MakeDword(0x4A4158);
MakeComm(0x4A415C, "'+A4'");
MakeDword(0x4A415C);
MakeComm(0x4A4160, "'+A8'");
MakeDword(0x4A4160);
MakeComm(0x4A4164, "'+AC'");
MakeDword(0x4A4164);
MakeComm(0x4A4168, "'+B0'");
MakeDword(0x4A4168);
MakeComm(0x4A416C, "'+B4'");
MakeDword(0x4A416C);
MakeComm(0x4A4170, "'+B8'");
MakeDword(0x4A4170);
MakeComm(0x4A4174, "'+BC'");
MakeDword(0x4A4174);
MakeComm(0x4A4178, "'+C0'");
MakeDword(0x4A4178);
MakeComm(0x4A417C, "'+C4'");
MakeDword(0x4A417C);
MakeComm(0x4A4180, "'+C8'");
MakeDword(0x4A4180);
MakeComm(0x4A4184, "'+CC'");
MakeDword(0x4A4184);
MakeComm(0x4A4188, "'+D0'");
MakeDword(0x4A4188);
MakeComm(0x4A418C, "'+D4'");
MakeDword(0x4A418C);
MakeComm(0x4A4190, "'+D8'");
MakeDword(0x4A4190);
MakeComm(0x4A4194, "'+DC'");
MakeDword(0x4A4194);
MakeComm(0x4A4198, "'+E0'");
MakeDword(0x4A4198);
MakeComm(0x4A419C, "'+E4'");
MakeDword(0x4A419C);
MakeComm(0x4A41A0, "'+E8'");
MakeDword(0x4A41A0);
MakeComm(0x4A41A4, "'+EC'");
MakeDword(0x4A41A4);
MakeComm(0x4A41A8, "'+F0'");
MakeDword(0x4A41A8);
MakeComm(0x4A41AC, "'+F4'");
MakeDword(0x4A41AC);
MakeComm(0x4A41B0, "'+F8'");
MakeDword(0x4A41B0);
MakeComm(0x4A41B4, "'+FC'");
MakeDword(0x4A41B4);
MakeComm(0x4A41B8, "'+100'");
MakeDword(0x4A41B8);
MakeUnkn(0x4A42C4, 1);
MakeNameEx(0x4A42C4, "RTTI_4A42C4_Class_TExportMidiForm", 0);
MakeDword(0x4A42C4);
MakeUnkn(0x4A42C8, 1);
MakeNameEx(0x4A42C8, "", 0);
MakeByte(0x4A42C8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A42C9, 0x4A42D9);
MakeDword(0x4A42D9);
MakeDword(0x4A42DD);
MakeWord(0x4A42E1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A42E3, 0x4A42EE);
MakeWord(0x4A42EE);
MakeUnkn(0x4A42F0, 1);
MakeNameEx(0x4A42F0, "RTTI_4A42F0_DynArray_.3", 0);
MakeDword(0x4A42F0);
MakeUnkn(0x4A42F4, 1);
MakeNameEx(0x4A42F4, "", 0);
MakeByte(0x4A42F4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A42F5, 0x4A42F8);
MakeDword(0x4A42F8);
MakeDword(0x4A42FC);
MakeDword(0x4A4300);
MakeDword(0x4A4304);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A4308, 0x4A4313);
MakeCode(0x4A4314);
MakeCode(0x4A436A);
MakeCode(0x4A438D);
MakeCode(0x4A43DA);
MakeCode(0x4A43E0);
MakeFunction(0x4A4314, 0x4A43E7);
MakeCode(0x4A43E8);
MakeFunction(0x4A43E8, 0x4A441D);
MakeCode(0x4A4420);
MakeCode(0x4A4441);
MakeCode(0x4A4461);
MakeCode(0x4A446C);
MakeCode(0x4A4483);
MakeCode(0x4A44B1);
MakeCode(0x4A44C7);
MakeCode(0x4A44CD);
MakeFunction(0x4A4420, 0x4A44D8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4A44E0, -1);
MakeDword(0x4A44DC);
MakeDword(0x4A44D8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4A450C, -1);
MakeDword(0x4A4508);
MakeDword(0x4A4504);
MakeCode(0x4A4520);
MakeCode(0x4A452F);
MakeCode(0x4A4541);
MakeCode(0x4A4552);
MakeCode(0x4A45A3);
MakeCode(0x4A45B8);
MakeCode(0x4A45C2);
MakeCode(0x4A45CB);
MakeCode(0x4A45D8);
MakeCode(0x4A45E0);
MakeCode(0x4A45E5);
MakeCode(0x4A45F8);
MakeFunction(0x4A4520, 0x4A45FF);
MakeCode(0x4A4600);
MakeFunction(0x4A4600, 0x4A4645);
MakeCode(0x4A4648);
MakeFunction(0x4A4648, 0x4A468D);
MakeCode(0x4A4690);
MakeFunction(0x4A4690, 0x4A46C8);
MakeCode(0x4A46C8);
MakeFunction(0x4A46C8, 0x4A470D);
MakeCode(0x4A4710);
MakeCode(0x4A4735);
MakeCode(0x4A4742);
MakeFunction(0x4A4710, 0x4A4779);
MakeCode(0x4A477C);
MakeCode(0x4A47A9);
MakeCode(0x4A47CC);
MakeCode(0x4A47E2);
MakeFunction(0x4A477C, 0x4A47E7);
MakeCode(0x4A47E8);
MakeCode(0x4A4811);
MakeCode(0x4A4825);
MakeFunction(0x4A47E8, 0x4A485C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4A4864, -1);
MakeDword(0x4A4860);
MakeDword(0x4A485C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4A4890, -1);
MakeDword(0x4A488C);
MakeDword(0x4A4888);
MakeCode(0x4A48A4);
MakeCode(0x4A48C4);
MakeCode(0x4A48D8);
MakeCode(0x4A48ED);
MakeCode(0x4A48F3);
MakeFunction(0x4A48A4, 0x4A490A);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4A4914, -1);
MakeDword(0x4A4910);
MakeDword(0x4A490C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4A4940, -1);
MakeDword(0x4A493C);
MakeDword(0x4A4938);
MakeCode(0x4A4954);
MakeCode(0x4A4985);
MakeFunction(0x4A4954, 0x4A4993);
MakeCode(0x4A4994);
MakeCode(0x4A499D);
MakeFunction(0x4A4994, 0x4A49A7);
MakeCode(0x4A49A8);
MakeCode(0x4A49FC);
MakeCode(0x4A4A0A);
MakeCode(0x4A4A18);
MakeComm(0x4A4A2D, "'TMemoryStream.Create'");
MakeComm(0x4A4A43, "'0x6468544D'");
MakeCode(0x4A4A9A);
MakeComm(0x4A4B20, "'TCustomMemoryStream.Seek'");
MakeComm(0x4A4B3B, "'TCustomMemoryStream.Seek'");
MakeCode(0x4A4B70);
MakeCode(0x4A4BAD);
MakeCode(0x4A4C68);
MakeCode(0x4A4D7C);
MakeCode(0x4A4DC1);
MakeCode(0x4A4DF7);
MakeCode(0x4A4E16);
MakeCode(0x4A4E7B);
MakeCode(0x4A4E7E);
MakeComm(0x4A4EA8, "'0x1'");
MakeCode(0x4A4ED1);
MakeCode(0x4A4EE9);
MakeCode(0x4A4F0C);
MakeCode(0x4A4F25);
MakeCode(0x4A4F3E);
MakeCode(0x4A4F60);
MakeCode(0x4A4F64);
MakeCode(0x4A4F7F);
MakeCode(0x4A4F8E);
MakeCode(0x4A4F94);
MakeCode(0x4A4FA9);
MakeCode(0x4A4FD0);
MakeCode(0x4A4FD9);
MakeCode(0x4A4FDD);
MakeCode(0x4A4FFC);
MakeCode(0x4A5033);
MakeCode(0x4A5043);
MakeCode(0x4A504F);
MakeCode(0x4A5075);
MakeCode(0x4A5089);
MakeCode(0x4A509F);
MakeCode(0x4A50B5);
MakeCode(0x4A50CB);
MakeCode(0x4A50E1);
MakeCode(0x4A50F0);
MakeCode(0x4A50FA);
MakeCode(0x4A5139);
MakeCode(0x4A5173);
MakeCode(0x4A5181);
MakeCode(0x4A51B7);
MakeCode(0x4A5223);
MakeCode(0x4A5248);
MakeCode(0x4A5252);
MakeCode(0x4A5261);
MakeCode(0x4A52A5);
MakeCode(0x4A52B4);
MakeCode(0x4A5305);
MakeCode(0x4A5326);
MakeCode(0x4A532E);
MakeCode(0x4A5344);
MakeCode(0x4A5357);
MakeComm(0x4A5376, "'TCustomMemoryStream.Seek'");
MakeComm(0x4A5391, "'TCustomMemoryStream.Seek'");
MakeCode(0x4A5394);
MakeCode(0x4A53B0);
MakeCode(0x4A53BB);
MakeCode(0x4A53C8);
MakeCode(0x4A53D1);
MakeCode(0x4A53D6);
MakeCode(0x4A53D8);
MakeCode(0x4A53E5);
MakeCode(0x4A5404);
MakeCode(0x4A5409);
MakeFunction(0x4A49A8, 0x4A5414);
MakeByte(0x4A5414);
MakeUnkn(0x4A5414, 1);
MakeNameEx(0x4A5414, "gvar_004A5414", 0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4A5420, -1);
MakeDword(0x4A541C);
MakeDword(0x4A5418);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4A5430, -1);
MakeDword(0x4A542C);
MakeDword(0x4A5428);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4A5440, -1);
MakeDword(0x4A543C);
MakeDword(0x4A5438);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4A545C, -1);
MakeDword(0x4A5458);
MakeDword(0x4A5454);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4A5488, -1);
MakeDword(0x4A5484);
MakeDword(0x4A5480);
MakeByte(0x4A549C);
MakeUnkn(0x4A549C, 1);
MakeNameEx(0x4A549C, "gvar_004A549C", 0);
MakeUnkn(0x4A54A0, 1);
MakeNameEx(0x4A54A0, "TExportMidiForm.FormCloseQuery", 0x20);
MakeComm(0x4A54A0, "'procedure TExportMidiForm.FormCloseQuery(Sender:TObject; var CanClose:Boolean);'");
MakeCode(0x4A54A0);
MakeComm(0x4A54AA, "'TExportMidiForm.FModalResult:TModalResult'");
MakeComm(0x4A54B5, "'TExportMidiForm.TracksList:TCheckListBox'");
MakeComm(0x4A54BB, "'TCheckListBox.FItems:TStrings'");
MakeComm(0x4A54C3, "'TStrings.GetCount'");
MakeCode(0x4A54D0);
MakeComm(0x4A54D2, "'TExportMidiForm.TracksList:TCheckListBox'");
MakeCode(0x4A54E5);
MakeCode(0x4A54E9);
MakeComm(0x4A54F3, "'TExportMidiForm.TracksList:TCheckListBox'");
MakeComm(0x4A54FB, "'TWinControl.SetFocus'");
MakeCode(0x4A5516);
MakeFunction(0x4A54A0, 0x4A551C);
MakeUnkn(0x4A5540, 1);
MakeNameEx(0x4A5540, "TExportMidiForm.HelpButtonClick", 0x20);
MakeComm(0x4A5540, "'procedure TExportMidiForm.HelpButtonClick(Sender:TObject);'");
MakeCode(0x4A5540);
MakeComm(0x4A5548, "'TExportMidiForm.HelpContext:THelpContext'");
MakeFunction(0x4A5540, 0x4A5555);
MakeUnkn(0x4A5558, 1);
MakeNameEx(0x4A5558, "VMT_4A5558_TBarLinesForm", 0);
MakeDword(0x4A5558);
MakeDword(0x4A555C);
MakeDword(0x4A5560);
MakeDword(0x4A5564);
MakeDword(0x4A5568);
MakeDword(0x4A556C);
MakeUnkn(0x4A56A8, 1);
MakeNameEx(0x4A56A8, "TBarLinesForm_FieldTable", 0);
MakeWord(0x4A56A8);
MakeDword(0x4A56AA);
MakeWord(0x4A57B8);
MakeDword(0x4A57BA);
MakeDword(0x4A57BE);
MakeDword(0x4A57C2);
MakeDword(0x4A57C6);
MakeDword(0x4A57CA);
MakeDword(0x4A57CE);
MakeDword(0x4A56AE);
MakeWord(0x4A56B2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A56B4, 0x4A56BD);
MakeDword(0x4A56BD);
MakeWord(0x4A56C1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A56C3, 0x4A56D0);
MakeDword(0x4A56D0);
MakeWord(0x4A56D4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A56D6, 0x4A56E1);
MakeDword(0x4A56E1);
MakeWord(0x4A56E5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A56E7, 0x4A56EE);
MakeDword(0x4A56EE);
MakeWord(0x4A56F2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A56F4, 0x4A56FE);
MakeDword(0x4A56FE);
MakeWord(0x4A5702);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A5704, 0x4A5710);
MakeDword(0x4A5710);
MakeWord(0x4A5714);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A5716, 0x4A571F);
MakeDword(0x4A571F);
MakeWord(0x4A5723);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A5725, 0x4A572C);
MakeDword(0x4A572C);
MakeWord(0x4A5730);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A5732, 0x4A5740);
MakeDword(0x4A5570);
MakeUnkn(0x4A5740, 1);
MakeNameEx(0x4A5740, "TBarLinesForm_MethodTable", 0);
MakeWord(0x4A5740);
MakeWord(0x4A5742);
MakeDword(0x4A5744);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A5748, 0x4A5757);
MakeWord(0x4A5757);
MakeDword(0x4A5759);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A575D, 0x4A576C);
MakeWord(0x4A576C);
MakeDword(0x4A576E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A5772, 0x4A5783);
MakeWord(0x4A5783);
MakeDword(0x4A5785);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A5789, 0x4A5799);
MakeWord(0x4A5799);
MakeDword(0x4A579B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A579F, 0x4A57AA);
MakeDword(0x4A5574);
MakeDword(0x4A5578);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A57AA, 0x4A57B8);
MakeDword(0x4A557C);
MakeDword(0x4A5580);
MakeDword(0x4A5584);
MakeDword(0x4A5588);
MakeDword(0x4A558C);
MakeDword(0x4A5590);
MakeDword(0x4A5594);
MakeDword(0x4A5598);
MakeDword(0x4A559C);
MakeDword(0x4A55A0);
MakeComm(0x4A55A4, "'+0'");
MakeDword(0x4A55A4);
MakeComm(0x4A55A8, "'+4'");
MakeDword(0x4A55A8);
MakeComm(0x4A55AC, "'+8'");
MakeDword(0x4A55AC);
MakeComm(0x4A55B0, "'+C'");
MakeDword(0x4A55B0);
MakeComm(0x4A55B4, "'+10'");
MakeDword(0x4A55B4);
MakeComm(0x4A55B8, "'+14'");
MakeDword(0x4A55B8);
MakeComm(0x4A55BC, "'+18'");
MakeDword(0x4A55BC);
MakeComm(0x4A55C0, "'+1C'");
MakeDword(0x4A55C0);
MakeComm(0x4A55C4, "'+20'");
MakeDword(0x4A55C4);
MakeComm(0x4A55C8, "'+24'");
MakeDword(0x4A55C8);
MakeComm(0x4A55CC, "'+28'");
MakeDword(0x4A55CC);
MakeComm(0x4A55D0, "'+2C'");
MakeDword(0x4A55D0);
MakeComm(0x4A55D4, "'+30'");
MakeDword(0x4A55D4);
MakeComm(0x4A55D8, "'+34'");
MakeDword(0x4A55D8);
MakeComm(0x4A55DC, "'+38'");
MakeDword(0x4A55DC);
MakeComm(0x4A55E0, "'+3C'");
MakeDword(0x4A55E0);
MakeComm(0x4A55E4, "'+40'");
MakeDword(0x4A55E4);
MakeComm(0x4A55E8, "'+44'");
MakeDword(0x4A55E8);
MakeComm(0x4A55EC, "'+48'");
MakeDword(0x4A55EC);
MakeComm(0x4A55F0, "'+4C'");
MakeDword(0x4A55F0);
MakeComm(0x4A55F4, "'+50'");
MakeDword(0x4A55F4);
MakeComm(0x4A55F8, "'+54'");
MakeDword(0x4A55F8);
MakeComm(0x4A55FC, "'+58'");
MakeDword(0x4A55FC);
MakeComm(0x4A5600, "'+5C'");
MakeDword(0x4A5600);
MakeComm(0x4A5604, "'+60'");
MakeDword(0x4A5604);
MakeComm(0x4A5608, "'+64'");
MakeDword(0x4A5608);
MakeComm(0x4A560C, "'+68'");
MakeDword(0x4A560C);
MakeComm(0x4A5610, "'+6C'");
MakeDword(0x4A5610);
MakeComm(0x4A5614, "'+70'");
MakeDword(0x4A5614);
MakeComm(0x4A5618, "'+74'");
MakeDword(0x4A5618);
MakeComm(0x4A561C, "'+78'");
MakeDword(0x4A561C);
MakeComm(0x4A5620, "'+7C'");
MakeDword(0x4A5620);
MakeComm(0x4A5624, "'+80'");
MakeDword(0x4A5624);
MakeComm(0x4A5628, "'+84'");
MakeDword(0x4A5628);
MakeComm(0x4A562C, "'+88'");
MakeDword(0x4A562C);
MakeComm(0x4A5630, "'+8C'");
MakeDword(0x4A5630);
MakeComm(0x4A5634, "'+90'");
MakeDword(0x4A5634);
MakeComm(0x4A5638, "'+94'");
MakeDword(0x4A5638);
MakeComm(0x4A563C, "'+98'");
MakeDword(0x4A563C);
MakeComm(0x4A5640, "'+9C'");
MakeDword(0x4A5640);
MakeComm(0x4A5644, "'+A0'");
MakeDword(0x4A5644);
MakeComm(0x4A5648, "'+A4'");
MakeDword(0x4A5648);
MakeComm(0x4A564C, "'+A8'");
MakeDword(0x4A564C);
MakeComm(0x4A5650, "'+AC'");
MakeDword(0x4A5650);
MakeComm(0x4A5654, "'+B0'");
MakeDword(0x4A5654);
MakeComm(0x4A5658, "'+B4'");
MakeDword(0x4A5658);
MakeComm(0x4A565C, "'+B8'");
MakeDword(0x4A565C);
MakeComm(0x4A5660, "'+BC'");
MakeDword(0x4A5660);
MakeComm(0x4A5664, "'+C0'");
MakeDword(0x4A5664);
MakeComm(0x4A5668, "'+C4'");
MakeDword(0x4A5668);
MakeComm(0x4A566C, "'+C8'");
MakeDword(0x4A566C);
MakeComm(0x4A5670, "'+CC'");
MakeDword(0x4A5670);
MakeComm(0x4A5674, "'+D0'");
MakeDword(0x4A5674);
MakeComm(0x4A5678, "'+D4'");
MakeDword(0x4A5678);
MakeComm(0x4A567C, "'+D8'");
MakeDword(0x4A567C);
MakeComm(0x4A5680, "'+DC'");
MakeDword(0x4A5680);
MakeComm(0x4A5684, "'+E0'");
MakeDword(0x4A5684);
MakeComm(0x4A5688, "'+E4'");
MakeDword(0x4A5688);
MakeComm(0x4A568C, "'+E8'");
MakeDword(0x4A568C);
MakeComm(0x4A5690, "'+EC'");
MakeDword(0x4A5690);
MakeComm(0x4A5694, "'+F0'");
MakeDword(0x4A5694);
MakeComm(0x4A5698, "'+F4'");
MakeDword(0x4A5698);
MakeComm(0x4A569C, "'+F8'");
MakeDword(0x4A569C);
MakeComm(0x4A56A0, "'+FC'");
MakeDword(0x4A56A0);
MakeComm(0x4A56A4, "'+100'");
MakeDword(0x4A56A4);
MakeUnkn(0x4A57D4, 1);
MakeNameEx(0x4A57D4, "RTTI_4A57D4_Class_TBarLinesForm", 0);
MakeDword(0x4A57D4);
MakeUnkn(0x4A57D8, 1);
MakeNameEx(0x4A57D8, "", 0);
MakeByte(0x4A57D8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A57D9, 0x4A57E7);
MakeDword(0x4A57E7);
MakeDword(0x4A57EB);
MakeWord(0x4A57EF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A57F1, 0x4A57FA);
MakeWord(0x4A57FA);
MakeUnkn(0x4A57FC, 1);
MakeNameEx(0x4A57FC, "TBarLinesForm.FormCreate", 0x20);
MakeComm(0x4A57FC, "'procedure TBarLinesForm.FormCreate(Sender:TObject);'");
MakeCode(0x4A57FC);
MakeComm(0x4A57FE, "'TBarLinesForm.FractionCombo:TComboBox'");
MakeComm(0x4A5806, "'TCustomCombo.SetItemIndex'");
MakeFunction(0x4A57FC, 0x4A580D);
MakeUnkn(0x4A5810, 1);
MakeNameEx(0x4A5810, "TBarLinesForm.FormCloseQuery", 0x20);
MakeComm(0x4A5810, "'procedure TBarLinesForm.FormCloseQuery(Sender:TObject; var CanClose:Boolean);'");
MakeCode(0x4A5810);
MakeComm(0x4A582D, "'TBarLinesForm.FModalResult:TModalResult'");
MakeComm(0x4A583A, "'TBarLinesForm.CreateRadio:TRadioButton'");
MakeComm(0x4A5842, "'TRadioButton.GetChecked'");
MakeCode(0x4A5871);
MakeComm(0x4A5873, "'TBarLinesForm.?f384:Longint'");
MakeCode(0x4A587E);
MakeComm(0x4A5881, "'TBarLinesForm.BarsEdit:TEdit'");
MakeComm(0x4A58A2, "'TBarLinesForm.?f384:Longint'");
MakeComm(0x4A58AE, "'TBarLinesForm.?f384:Longint'");
MakeComm(0x4A58B7, "'TBarLinesForm.?f384:Longint'");
MakeCode(0x4A58C0);
MakeComm(0x4A58C3, "'TBarLinesForm.BarsEdit:TEdit'");
MakeComm(0x4A58CB, "'TWinControl.SetFocus'");
MakeComm(0x4A58E8, "'TBarLinesForm.FractionCombo:TComboBox'");
MakeCode(0x4A58E8);
MakeComm(0x4A58F0, "'TCustomCombo.GetItemIndex'");
MakeComm(0x4A58F6, "'TBarLinesForm.?f384:Longint'");
MakeComm(0x4A5902, "'TBarLinesForm.?f384:Longint'");
MakeCode(0x4A5908);
MakeCode(0x4A5915);
MakeCode(0x4A5926);
MakeCode(0x4A592B);
MakeFunction(0x4A5810, 0x4A5933);
MakeUnkn(0x4A59A8, 1);
MakeNameEx(0x4A59A8, "TBarLinesForm.NoneRadioClick", 0x20);
MakeComm(0x4A59A8, "'procedure TBarLinesForm.NoneRadioClick(Sender:TObject);'");
MakeCode(0x4A59A8);
MakeComm(0x4A59AD, "'TBarLinesForm.BarsEdit:TEdit'");
MakeComm(0x4A59B5, "'TControl.SetEnabled'");
MakeComm(0x4A59BA, "'TBarLinesForm.BarsEdit:TEdit'");
MakeComm(0x4A59C7, "'TBarLinesForm.FractionCombo:TComboBox'");
MakeComm(0x4A59CF, "'TControl.SetEnabled'");
MakeComm(0x4A59D4, "'TBarLinesForm.FractionCombo:TComboBox'");
MakeFunction(0x4A59A8, 0x4A59E1);
MakeUnkn(0x4A59E4, 1);
MakeNameEx(0x4A59E4, "TBarLinesForm.CreateRadioClick", 0x20);
MakeComm(0x4A59E4, "'procedure TBarLinesForm.CreateRadioClick(Sender:TObject);'");
MakeCode(0x4A59E4);
MakeComm(0x4A59E9, "'TBarLinesForm.BarsEdit:TEdit'");
MakeComm(0x4A59F1, "'TControl.SetEnabled'");
MakeComm(0x4A59F9, "'TBarLinesForm.BarsEdit:TEdit'");
MakeComm(0x4A5A06, "'TBarLinesForm.FractionCombo:TComboBox'");
MakeComm(0x4A5A0E, "'TControl.SetEnabled'");
MakeComm(0x4A5A16, "'TBarLinesForm.FractionCombo:TComboBox'");
MakeFunction(0x4A59E4, 0x4A5A23);
MakeUnkn(0x4A5A24, 1);
MakeNameEx(0x4A5A24, "TBarLinesForm.HelpButtonClick", 0x20);
MakeComm(0x4A5A24, "'procedure TBarLinesForm.HelpButtonClick(Sender:TObject);'");
MakeCode(0x4A5A24);
MakeComm(0x4A5A2C, "'TBarLinesForm.HelpContext:THelpContext'");
MakeFunction(0x4A5A24, 0x4A5A39);
MakeUnkn(0x4A5A3C, 1);
MakeNameEx(0x4A5A3C, "RTTI_4A5A3C_Method_TDFSColorHintTextEvent", 0);
MakeDword(0x4A5A3C);
MakeUnkn(0x4A5A40, 1);
MakeNameEx(0x4A5A40, "", 0);
MakeByte(0x4A5A40);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A5A41, 0x4A5A58);
MakeByte(0x4A5A58);
MakeByte(0x4A5A59);
MakeByte(0x4A5A5A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A5A5B, 0x4A5A62);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A5A62, 0x4A5A6A);
MakeByte(0x4A5A6A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A5A6B, 0x4A5A72);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A5A72, 0x4A5A79);
MakeByte(0x4A5A79);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A5A7A, 0x4A5A7C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A5A7C, 0x4A5A84);
MakeByte(0x4A5A84);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A5A85, 0x4A5A87);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A5A87, 0x4A5A8F);
MakeByte(0x4A5A8F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A5A90, 0x4A5A98);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A5A98, 0x4A5A9F);
MakeByte(0x4A5A9F);
MakeDword(0x4A5AA0);
MakeDword(0x4A5AA4);
MakeDword(0x4A5AA8);
MakeDword(0x4A5AAC);
MakeDword(0x4A5AB0);
MakeUnkn(0x4A5AB4, 1);
MakeNameEx(0x4A5AB4, "VMT_4A5AB4_EColorArrayIndexError", 0);
MakeDword(0x4A5AB4);
MakeDword(0x4A5AB8);
MakeDword(0x4A5ABC);
MakeDword(0x4A5AC0);
MakeDword(0x4A5AC4);
MakeDword(0x4A5AC8);
MakeDword(0x4A5ACC);
MakeDword(0x4A5AD0);
MakeDword(0x4A5AD4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A5B00, 0x4A5B16);
MakeDword(0x4A5AD8);
MakeDword(0x4A5ADC);
MakeDword(0x4A5AE0);
MakeDword(0x4A5AE4);
MakeDword(0x4A5AE8);
MakeDword(0x4A5AEC);
MakeDword(0x4A5AF0);
MakeDword(0x4A5AF4);
MakeDword(0x4A5AF8);
MakeDword(0x4A5AFC);
MakeUnkn(0x4A5B18, 1);
MakeNameEx(0x4A5B18, "VMT_4A5B18_TColorArrayClass", 0);
MakeDword(0x4A5B18);
MakeDword(0x4A5B1C);
MakeDword(0x4A5B20);
MakeDword(0x4A5B24);
MakeDword(0x4A5B28);
MakeDword(0x4A5B2C);
MakeDword(0x4A5B30);
MakeDword(0x4A5B34);
MakeDword(0x4A5B38);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A5B78, 0x4A5B89);
MakeDword(0x4A5B3C);
MakeDword(0x4A5B40);
MakeDword(0x4A5B44);
MakeDword(0x4A5B48);
MakeDword(0x4A5B4C);
MakeDword(0x4A5B50);
MakeDword(0x4A5B54);
MakeDword(0x4A5B58);
MakeDword(0x4A5B5C);
MakeDword(0x4A5B60);
MakeComm(0x4A5B64, "'+0'");
MakeDword(0x4A5B64);
MakeComm(0x4A5B68, "'+4'");
MakeDword(0x4A5B68);
MakeComm(0x4A5B6C, "'+8'");
MakeDword(0x4A5B6C);
MakeComm(0x4A5B70, "'+C'");
MakeDword(0x4A5B70);
MakeComm(0x4A5B74, "'+10'");
MakeDword(0x4A5B74);
MakeUnkn(0x4A5B8C, 1);
MakeNameEx(0x4A5B8C, "RTTI_4A5B8C_Class_TColorArrayClass", 0);
MakeDword(0x4A5B8C);
MakeUnkn(0x4A5B90, 1);
MakeNameEx(0x4A5B90, "", 0);
MakeByte(0x4A5B90);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A5B91, 0x4A5BA2);
MakeDword(0x4A5BA2);
MakeDword(0x4A5BA6);
MakeWord(0x4A5BAA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A5BAC, 0x4A5BB5);
MakeWord(0x4A5BB5);
MakeUnkn(0x4A5BB8, 1);
MakeNameEx(0x4A5BB8, "VMT_4A5BB8_TDFSColorButtonPalette", 0);
MakeDword(0x4A5BB8);
MakeDword(0x4A5BBC);
MakeDword(0x4A5BC0);
MakeDword(0x4A5BC4);
MakeDword(0x4A5BC8);
MakeDword(0x4A5BCC);
MakeUnkn(0x4A5D10, 1);
MakeNameEx(0x4A5D10, "TDFSColorButtonPalette_FieldTable", 0);
MakeWord(0x4A5D10);
MakeDword(0x4A5D12);
MakeWord(0x4A5E08);
MakeDword(0x4A5E0A);
MakeDword(0x4A5D16);
MakeWord(0x4A5D1A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A5D1C, 0x4A5D25);
MakeDword(0x4A5BD0);
MakeUnkn(0x4A5D25, 1);
MakeNameEx(0x4A5D25, "TDFSColorButtonPalette_MethodTable", 0);
MakeWord(0x4A5D25);
MakeWord(0x4A5D27);
MakeDword(0x4A5D29);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A5D2D, 0x4A5D37);
MakeWord(0x4A5D37);
MakeDword(0x4A5D39);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A5D3D, 0x4A5D4C);
MakeWord(0x4A5D4C);
MakeDword(0x4A5D4E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A5D52, 0x4A5D5C);
MakeWord(0x4A5D5C);
MakeDword(0x4A5D5E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A5D62, 0x4A5D6D);
MakeWord(0x4A5D6D);
MakeDword(0x4A5D6F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A5D73, 0x4A5D81);
MakeWord(0x4A5D81);
MakeDword(0x4A5D83);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A5D87, 0x4A5D96);
MakeWord(0x4A5D96);
MakeDword(0x4A5D98);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A5D9C, 0x4A5DAA);
MakeWord(0x4A5DAA);
MakeDword(0x4A5DAC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A5DB0, 0x4A5DBA);
MakeWord(0x4A5DBA);
MakeDword(0x4A5DBC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A5DC0, 0x4A5DCD);
MakeWord(0x4A5DCD);
MakeDword(0x4A5DCF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A5DD3, 0x4A5DDF);
MakeWord(0x4A5DDF);
MakeDword(0x4A5DE1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A5DE5, 0x4A5DF1);
MakeDword(0x4A5BD4);
MakeDword(0x4A5BD8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A5DF1, 0x4A5E08);
MakeDword(0x4A5BDC);
MakeDword(0x4A5BE0);
MakeDword(0x4A5BE4);
MakeDword(0x4A5BE8);
MakeDword(0x4A5BEC);
MakeDword(0x4A5BF0);
MakeDword(0x4A5BF4);
MakeDword(0x4A5BF8);
MakeDword(0x4A5BFC);
MakeDword(0x4A5C00);
MakeComm(0x4A5C04, "'+0'");
MakeDword(0x4A5C04);
MakeComm(0x4A5C08, "'+4'");
MakeDword(0x4A5C08);
MakeComm(0x4A5C0C, "'+8'");
MakeDword(0x4A5C0C);
MakeComm(0x4A5C10, "'+C'");
MakeDword(0x4A5C10);
MakeComm(0x4A5C14, "'+10'");
MakeDword(0x4A5C14);
MakeComm(0x4A5C18, "'+14'");
MakeDword(0x4A5C18);
MakeComm(0x4A5C1C, "'+18'");
MakeDword(0x4A5C1C);
MakeComm(0x4A5C20, "'+1C'");
MakeDword(0x4A5C20);
MakeComm(0x4A5C24, "'+20'");
MakeDword(0x4A5C24);
MakeComm(0x4A5C28, "'+24'");
MakeDword(0x4A5C28);
MakeComm(0x4A5C2C, "'+28'");
MakeDword(0x4A5C2C);
MakeComm(0x4A5C30, "'+2C'");
MakeDword(0x4A5C30);
MakeComm(0x4A5C34, "'+30'");
MakeDword(0x4A5C34);
MakeComm(0x4A5C38, "'+34'");
MakeDword(0x4A5C38);
MakeComm(0x4A5C3C, "'+38'");
MakeDword(0x4A5C3C);
MakeComm(0x4A5C40, "'+3C'");
MakeDword(0x4A5C40);
MakeComm(0x4A5C44, "'+40'");
MakeDword(0x4A5C44);
MakeComm(0x4A5C48, "'+44'");
MakeDword(0x4A5C48);
MakeComm(0x4A5C4C, "'+48'");
MakeDword(0x4A5C4C);
MakeComm(0x4A5C50, "'+4C'");
MakeDword(0x4A5C50);
MakeComm(0x4A5C54, "'+50'");
MakeDword(0x4A5C54);
MakeComm(0x4A5C58, "'+54'");
MakeDword(0x4A5C58);
MakeComm(0x4A5C5C, "'+58'");
MakeDword(0x4A5C5C);
MakeComm(0x4A5C60, "'+5C'");
MakeDword(0x4A5C60);
MakeComm(0x4A5C64, "'+60'");
MakeDword(0x4A5C64);
MakeComm(0x4A5C68, "'+64'");
MakeDword(0x4A5C68);
MakeComm(0x4A5C6C, "'+68'");
MakeDword(0x4A5C6C);
MakeComm(0x4A5C70, "'+6C'");
MakeDword(0x4A5C70);
MakeComm(0x4A5C74, "'+70'");
MakeDword(0x4A5C74);
MakeComm(0x4A5C78, "'+74'");
MakeDword(0x4A5C78);
MakeComm(0x4A5C7C, "'+78'");
MakeDword(0x4A5C7C);
MakeComm(0x4A5C80, "'+7C'");
MakeDword(0x4A5C80);
MakeComm(0x4A5C84, "'+80'");
MakeDword(0x4A5C84);
MakeComm(0x4A5C88, "'+84'");
MakeDword(0x4A5C88);
MakeComm(0x4A5C8C, "'+88'");
MakeDword(0x4A5C8C);
MakeComm(0x4A5C90, "'+8C'");
MakeDword(0x4A5C90);
MakeComm(0x4A5C94, "'+90'");
MakeDword(0x4A5C94);
MakeComm(0x4A5C98, "'+94'");
MakeDword(0x4A5C98);
MakeComm(0x4A5C9C, "'+98'");
MakeDword(0x4A5C9C);
MakeComm(0x4A5CA0, "'+9C'");
MakeDword(0x4A5CA0);
MakeComm(0x4A5CA4, "'+A0'");
MakeDword(0x4A5CA4);
MakeComm(0x4A5CA8, "'+A4'");
MakeDword(0x4A5CA8);
MakeComm(0x4A5CAC, "'+A8'");
MakeDword(0x4A5CAC);
MakeComm(0x4A5CB0, "'+AC'");
MakeDword(0x4A5CB0);
MakeComm(0x4A5CB4, "'+B0'");
MakeDword(0x4A5CB4);
MakeComm(0x4A5CB8, "'+B4'");
MakeDword(0x4A5CB8);
MakeComm(0x4A5CBC, "'+B8'");
MakeDword(0x4A5CBC);
MakeComm(0x4A5CC0, "'+BC'");
MakeDword(0x4A5CC0);
MakeComm(0x4A5CC4, "'+C0'");
MakeDword(0x4A5CC4);
MakeComm(0x4A5CC8, "'+C4'");
MakeDword(0x4A5CC8);
MakeComm(0x4A5CCC, "'+C8'");
MakeDword(0x4A5CCC);
MakeComm(0x4A5CD0, "'+CC'");
MakeDword(0x4A5CD0);
MakeComm(0x4A5CD4, "'+D0'");
MakeDword(0x4A5CD4);
MakeComm(0x4A5CD8, "'+D4'");
MakeDword(0x4A5CD8);
MakeComm(0x4A5CDC, "'+D8'");
MakeDword(0x4A5CDC);
MakeComm(0x4A5CE0, "'+DC'");
MakeDword(0x4A5CE0);
MakeComm(0x4A5CE4, "'+E0'");
MakeDword(0x4A5CE4);
MakeComm(0x4A5CE8, "'+E4'");
MakeDword(0x4A5CE8);
MakeComm(0x4A5CEC, "'+E8'");
MakeDword(0x4A5CEC);
MakeComm(0x4A5CF0, "'+EC'");
MakeDword(0x4A5CF0);
MakeComm(0x4A5CF4, "'+F0'");
MakeDword(0x4A5CF4);
MakeComm(0x4A5CF8, "'+F4'");
MakeDword(0x4A5CF8);
MakeComm(0x4A5CFC, "'+F8'");
MakeDword(0x4A5CFC);
MakeComm(0x4A5D00, "'+FC'");
MakeDword(0x4A5D00);
MakeComm(0x4A5D04, "'+100'");
MakeDword(0x4A5D04);
MakeComm(0x4A5D08, "'+104'");
MakeDword(0x4A5D08);
MakeComm(0x4A5D0C, "'+108'");
MakeDword(0x4A5D0C);
MakeUnkn(0x4A5E10, 1);
MakeNameEx(0x4A5E10, "RTTI_4A5E10_Class_TDFSColorButtonPalette", 0);
MakeDword(0x4A5E10);
MakeUnkn(0x4A5E14, 1);
MakeNameEx(0x4A5E14, "", 0);
MakeByte(0x4A5E14);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A5E15, 0x4A5E2C);
MakeDword(0x4A5E2C);
MakeDword(0x4A5E30);
MakeWord(0x4A5E34);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A5E36, 0x4A5E3F);
MakeWord(0x4A5E3F);
MakeUnkn(0x4A5E44, 1);
MakeNameEx(0x4A5E44, "TColorArrayClass.Create", 0x20);
MakeComm(0x4A5E44, "'constructor TColorArrayClass.Create(?:?);'");
MakeCode(0x4A5E44);
MakeCode(0x4A5E57);
MakeComm(0x4A5E6A, "'TColorArrayClass.?f4:dword'");
MakeComm(0x4A5E6D, "'TColorArrayClass.?f8:dword'");
MakeComm(0x4A5E74, "'TColorArrayClass.?fC:dword'");
MakeComm(0x4A5E85, "'TColorArrayClass.?f10:Pointer'");
MakeCode(0x4A5E9F);
MakeFunction(0x4A5E44, 0x4A5EA9);
MakeUnkn(0x4A5EAC, 1);
MakeNameEx(0x4A5EAC, "TColorArrayClass.Destroy", 0x20);
MakeComm(0x4A5EAC, "'destructor TColorArrayClass.Destroy;'");
MakeCode(0x4A5EAC);
MakeComm(0x4A5EB7, "'TColorArrayClass.?f4:dword'");
MakeComm(0x4A5EBA, "'TColorArrayClass.?f8:dword'");
MakeComm(0x4A5EC3, "'TColorArrayClass.?f10:Pointer'");
MakeComm(0x4A5ECD, "'TColorArrayClass.?fC:dword'");
MakeCode(0x4A5EE7);
MakeFunction(0x4A5EAC, 0x4A5EEA);
MakeCode(0x4A5EEC);
MakeFunction(0x4A5EEC, 0x4A5F12);
MakeCode(0x4A5F14);
MakeFunction(0x4A5F14, 0x4A5F43);
MakeCode(0x4A5FCC);
MakeCode(0x4A5FDC);
MakeComm(0x4A5FE8, "'EColorArrayIndexError.Create'");
MakeCode(0x4A5FF2);
MakeFunction(0x4A5FCC, 0x4A5FFA);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4A6004, -1);
MakeDword(0x4A6000);
MakeDword(0x4A5FFC);
MakeCode(0x4A6020);
MakeCode(0x4A6034);
MakeComm(0x4A6040, "'EColorArrayIndexError.Create'");
MakeFunction(0x4A6020, 0x4A604B);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4A6054, -1);
MakeDword(0x4A6050);
MakeDword(0x4A604C);
MakeCode(0x4A6174);
MakeFunction(0x4A6174, 0x4A61CD);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4A61D8, -1);
MakeDword(0x4A61D4);
MakeDword(0x4A61D0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4A61E8, -1);
MakeDword(0x4A61E4);
MakeDword(0x4A61E0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4A61F8, -1);
MakeDword(0x4A61F4);
MakeDword(0x4A61F0);
MakeUnkn(0x4A6200, 1);
MakeNameEx(0x4A6200, "TColorArrayClass.Assign", 0x20);
MakeComm(0x4A6200, "'procedure TColorArrayClass.Assign(Source:TPersistent);'");
MakeCode(0x4A6200);
MakeComm(0x4A621E, "'TColorArrayClass.?f4:dword'");
MakeComm(0x4A6221, "'TColorArrayClass.?f8:dword'");
MakeComm(0x4A622A, "'TColorArrayClass.?f10:Pointer'");
MakeComm(0x4A6238, "'TColorArrayClass.?f4:dword'");
MakeComm(0x4A623E, "'TColorArrayClass.?f8:dword'");
MakeComm(0x4A6241, "'TColorArrayClass.?f4:dword'");
MakeComm(0x4A6246, "'TColorArrayClass.?fC:dword'");
MakeComm(0x4A6249, "'TColorArrayClass.?f4:dword'");
MakeComm(0x4A624C, "'TColorArrayClass.?f8:dword'");
MakeComm(0x4A6258, "'TColorArrayClass.?f10:Pointer'");
MakeComm(0x4A625B, "'TColorArrayClass.?f4:dword'");
MakeComm(0x4A626B, "'TColorArrayClass.?f8:dword'");
MakeCode(0x4A626B);
MakeCode(0x4A6277);
MakeCode(0x4A6293);
MakeCode(0x4A629C);
MakeCode(0x4A62A6);
MakeFunction(0x4A6200, 0x4A62AD);
MakeCode(0x4A62B0);
MakeCode(0x4A62D3);
MakeCode(0x4A6305);
MakeCode(0x4A6314);
MakeCode(0x4A6337);
MakeCode(0x4A633E);
MakeCode(0x4A6343);
MakeFunction(0x4A62B0, 0x4A6350);
MakeUnkn(0x4A6350, 1);
MakeNameEx(0x4A6350, "TDFSColorButtonPalette.Create", 0x20);
MakeComm(0x4A6350, "'constructor TDFSColorButtonPalette.Create(AOwner:TComponent);'");
MakeCode(0x4A6350);
MakeCode(0x4A635F);
MakeComm(0x4A6373, "'TColorArrayClass.Create'");
MakeComm(0x4A6378, "'TDFSColorButtonPalette.?f370:TColorArrayClass'");
MakeComm(0x4A638C, "'TColorArrayClass.Create'");
MakeComm(0x4A6391, "'TDFSColorButtonPalette.?f374:TColorArrayClass'");
MakeComm(0x4A6397, "'TDFSColorButtonPalette.?f365:byte'");
MakeComm(0x4A639E, "'TDFSColorButtonPalette.?f364:byte'");
MakeCode(0x4A63C5);
MakeFunction(0x4A6350, 0x4A63CB);
MakeUnkn(0x4A63CC, 1);
MakeNameEx(0x4A63CC, "TDFSColorButtonPalette.Destroy", 0x20);
MakeComm(0x4A63CC, "'destructor TDFSColorButtonPalette.Destroy;'");
MakeCode(0x4A63CC);
MakeComm(0x4A63D7, "'TDFSColorButtonPalette.?f370:TColorArrayClass'");
MakeComm(0x4A63E2, "'TDFSColorButtonPalette.?f374:TColorArrayClass'");
MakeCode(0x4A6404);
MakeFunction(0x4A63CC, 0x4A6407);
MakeUnkn(0x4A6408, 1);
MakeNameEx(0x4A6408, "TDFSColorButtonPalette.Loaded", 0x20);
MakeComm(0x4A6408, "'procedure TDFSColorButtonPalette.Loaded;'");
MakeCode(0x4A6408);
MakeComm(0x4A6412, "'TDFSColorButtonPalette.?f364:byte'");
MakeFunction(0x4A6408, 0x4A6422);
MakeUnkn(0x4A6424, 1);
MakeNameEx(0x4A6424, "TDFSColorButtonPalette.CreateParams", 0x20);
MakeComm(0x4A6424, "'procedure TDFSColorButtonPalette.CreateParams(var Params:TCreateParams);'");
MakeCode(0x4A6424);
MakeComm(0x4A642E, "'TCreateParams.Style:DWORD'");
MakeFunction(0x4A6424, 0x4A6437);
MakeCode(0x4A6438);
MakeComm(0x4A643C, "'TDFSColorButtonPalette.?f3A2:word'");
MakeComm(0x4A6451, "'TDFSColorButtonPalette.FParent:TWinControl'");
MakeComm(0x4A6458, "'TDFSColorButtonPalette.?f3A4:dword'");
MakeCode(0x4A6464);
MakeFunction(0x4A6438, 0x4A6469);
MakeUnkn(0x4A646C, 1);
MakeNameEx(0x4A646C, "TDFSColorButtonPalette.FormClose", 0x20);
MakeComm(0x4A646C, "'procedure TDFSColorButtonPalette.FormClose(Sender:TObject; var Action:TCloseAction);'");
MakeCode(0x4A646C);
MakeComm(0x4A6470, "'TDFSColorButtonPalette.?f392:word'");
MakeComm(0x4A647E, "'TDFSColorButtonPalette.?f394:TdfsColorButton'");
MakeCode(0x4A648A);
MakeFunction(0x4A646C, 0x4A648C);
MakeUnkn(0x4A648C, 1);
MakeNameEx(0x4A648C, "TDFSColorButtonPalette.FormDeactivate", 0x20);
MakeComm(0x4A648C, "'procedure TDFSColorButtonPalette.FormDeactivate(Sender:TObject);'");
MakeCode(0x4A648C);
MakeFunction(0x4A648C, 0x4A6492);
MakeUnkn(0x4A6494, 1);
MakeNameEx(0x4A6494, "TDFSColorButtonPalette.FormPaint", 0x20);
MakeComm(0x4A6494, "'procedure TDFSColorButtonPalette.FormPaint(Sender:TObject);'");
MakeCode(0x4A6494);
MakeCode(0x4A64A1);
MakeComm(0x4A64A6, "'TDFSColorButtonPalette.?f370:TColorArrayClass'");
MakeCode(0x4A64A6);
MakeComm(0x4A64D8, "'TCanvas.Pen:TPen'");
MakeComm(0x4A650E, "'TCanvas.Pen:TPen'");
MakeComm(0x4A6544, "'TDFSColorButtonPalette.?f37C:TColor'");
MakeFunction(0x4A6494, 0x4A6570);
MakeCode(0x4A6570);
MakeCode(0x4A65B3);
MakeCode(0x4A65B7);
MakeCode(0x4A65DC);
MakeCode(0x4A65F2);
MakeFunction(0x4A6570, 0x4A65F9);
MakeCode(0x4A65FC);
MakeComm(0x4A6634, "'TDFSColorButtonPalette.?f37C:TColor'");
MakeCode(0x4A663A);
MakeComm(0x4A664E, "'TCanvas.Brush:TBrush'");
MakeComm(0x4A6672, "'TCanvas.Brush:TBrush'");
MakeComm(0x4A6696, "'TCanvas.Brush:TBrush'");
MakeComm(0x4A66B7, "'TDFSColorButtonPalette.FColor:TColor'");
MakeCode(0x4A66B7);
MakeComm(0x4A66BA, "'TCanvas.Brush:TBrush'");
MakeCode(0x4A670F);
MakeComm(0x4A6711, "'TCanvas.Brush:TBrush'");
MakeCode(0x4A6723);
MakeFunction(0x4A65FC, 0x4A672C);
MakeUnkn(0x4A6760, 1);
MakeNameEx(0x4A6760, "TDFSColorButtonPalette.FormCreate", 0x20);
MakeComm(0x4A6760, "'procedure TDFSColorButtonPalette.FormCreate(Sender:TObject);'");
MakeCode(0x4A6760);
MakeComm(0x4A676E, "'TDFSColorButtonPalette.?f366:byte'");
MakeComm(0x4A6780, "'TApplication.FOnDeactivate:TNotifyEvent'");
MakeComm(0x4A6786, "'TDFSColorButtonPalette.?f368:TNotifyEvent'");
MakeComm(0x4A678C, "'TApplication.?f134:TDFSColorButtonPalette'");
MakeComm(0x4A6792, "'TDFSColorButtonPalette.?f36C:dword'");
MakeComm(0x4A67A2, "'TApplication.?f134:TDFSColorButtonPalette'");
MakeComm(0x4A67A8, "'TApplication.FOnDeactivate:TNotifyEvent'");
MakeComm(0x4A67BD, "'TApplication.FOnShowHint:TShowHintEvent'");
MakeComm(0x4A67C3, "'TDFSColorButtonPalette.?f398:TShowHintEvent'");
MakeComm(0x4A67C9, "'TApplication.?f15C:TDFSColorButtonPalette'");
MakeComm(0x4A67CF, "'TDFSColorButtonPalette.?f39C:dword'");
MakeComm(0x4A67DF, "'TApplication.?f15C:TDFSColorButtonPalette'");
MakeComm(0x4A67E5, "'TApplication.FOnShowHint:TShowHintEvent'");
MakeComm(0x4A6803, "'TDFSColorButtonPalette.?f380:dword'");
MakeComm(0x4A680C, "'TDFSColorButtonPalette.?f384:dword'");
MakeCode(0x4A6866);
MakeCode(0x4A686B);
MakeComm(0x4A687B, "'TDFSColorButtonPalette.?f370:TColorArrayClass'");
MakeCode(0x4A689B);
MakeComm(0x4A68A3, "'TDFSColorButtonPalette.?f370:TColorArrayClass'");
MakeComm(0x4A68C0, "'TDFSColorButtonPalette.?f370:TColorArrayClass'");
MakeComm(0x4A68DD, "'TDFSColorButtonPalette.?f370:TColorArrayClass'");
MakeComm(0x4A68FA, "'TDFSColorButtonPalette.?f370:TColorArrayClass'");
MakeComm(0x4A6917, "'TDFSColorButtonPalette.?f370:TColorArrayClass'");
MakeComm(0x4A6931, "'TDFSColorButtonPalette.?f370:TColorArrayClass'");
MakeComm(0x4A694B, "'TDFSColorButtonPalette.?f370:TColorArrayClass'");
MakeComm(0x4A6968, "'TDFSColorButtonPalette.?f370:TColorArrayClass'");
MakeComm(0x4A6985, "'TDFSColorButtonPalette.?f370:TColorArrayClass'");
MakeComm(0x4A69A2, "'TDFSColorButtonPalette.?f370:TColorArrayClass'");
MakeComm(0x4A69BF, "'TDFSColorButtonPalette.?f370:TColorArrayClass'");
MakeComm(0x4A69DC, "'TDFSColorButtonPalette.?f370:TColorArrayClass'");
MakeComm(0x4A69F9, "'TDFSColorButtonPalette.?f370:TColorArrayClass'");
MakeComm(0x4A6A16, "'TDFSColorButtonPalette.?f370:TColorArrayClass'");
MakeComm(0x4A6A33, "'TDFSColorButtonPalette.?f370:TColorArrayClass'");
MakeComm(0x4A6A50, "'TDFSColorButtonPalette.?f370:TColorArrayClass'");
MakeComm(0x4A6A6D, "'TDFSColorButtonPalette.?f370:TColorArrayClass'");
MakeComm(0x4A6A8A, "'TDFSColorButtonPalette.?f370:TColorArrayClass'");
MakeComm(0x4A6AA7, "'TDFSColorButtonPalette.?f370:TColorArrayClass'");
MakeComm(0x4A6AC4, "'TDFSColorButtonPalette.?f370:TColorArrayClass'");
MakeCode(0x4A6AD9);
MakeCode(0x4A6AE6);
MakeCode(0x4A6AF6);
MakeCode(0x4A6AFB);
MakeComm(0x4A6B00, "'TDFSColorButtonPalette.?f37C:TColor'");
MakeComm(0x4A6B0F, "'TDFSColorButtonPalette.?f378:dword'");
MakeComm(0x4A6B25, "'TDFSColorButtonPalette.btnOther:TButton'");
MakeComm(0x4A6B45, "'TDFSColorButtonPalette.btnOther:TButton'");
MakeComm(0x4A6B53, "'TDFSColorButtonPalette.btnOther:TButton'");
MakeComm(0x4A6B59, "'TButton.Top:Integer'");
MakeComm(0x4A6B5C, "'TButton.Height:Integer'");
MakeFunction(0x4A6760, 0x4A6B70);
MakeCode(0x4A6B70);
MakeCode(0x4A6B84);
MakeCode(0x4A6B89);
MakeCode(0x4A6BE2);
MakeCode(0x4A6BFA);
MakeFunction(0x4A6B70, 0x4A6C01);
MakeCode(0x4A6C04);
MakeFunction(0x4A6C04, 0x4A6C10);
MakeCode(0x4A6C10);
MakeCode(0x4A6C32);
MakeCode(0x4A6C39);
MakeFunction(0x4A6C10, 0x4A6C3B);
MakeCode(0x4A6C3C);
MakeComm(0x4A6C9B, "'TDFSColorButtonPalette.sub_004A6438'");
MakeFunction(0x4A6C3C, 0x4A6CAA);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4A6CB4, -1);
MakeDword(0x4A6CB0);
MakeDword(0x4A6CAC);
MakeUnkn(0x4A6DD4, 1);
MakeNameEx(0x4A6DD4, "TDFSColorButtonPalette.btnOtherClick", 0x20);
MakeComm(0x4A6DD4, "'procedure TDFSColorButtonPalette.btnOtherClick(Sender:TObject);'");
MakeCode(0x4A6DD4);
MakeCode(0x4A6DDC);
MakeComm(0x4A6E00, "'TColorDialog.Create'");
MakeComm(0x4A6E19, "'TDFSColorButtonPalette.?f366:byte'");
MakeComm(0x4A6E23, "'TDFSColorButtonPalette.?f37C:TColor'");
MakeComm(0x4A6E2C, "'TColorDialog.Color:TColor'");
MakeComm(0x4A6E32, "'0x1'");
MakeComm(0x4A6E39, "'TColorDialog.Options:TColorDialogOptions'");
MakeCode(0x4A6E41);
MakeCode(0x4A6E46);
MakeComm(0x4A6E73, "'TDFSColorButtonPalette.?f374:TColorArrayClass'");
MakeComm(0x4A6EA5, "'TColorDialog.CustomColors:TStrings'");
MakeComm(0x4A6EAA, "'TStrings.Add'");
MakeComm(0x4A6EBE, "'TCommonDialog.Execute'");
MakeComm(0x4A6ED1, "'TColorDialog.Color:TColor'");
MakeComm(0x4A6ED7, "'TDFSColorButtonPalette.?f37C:TColor'");
MakeCode(0x4A6EE2);
MakeComm(0x4A6EE8, "'TColorDialog.CustomColors:TStrings'");
MakeComm(0x4A6EF0, "'TStrings.Get'");
MakeComm(0x4A6F0C, "'TColorDialog.CustomColors:TStrings'");
MakeComm(0x4A6F14, "'TStrings.Get'");
MakeComm(0x4A6F4D, "'TColorDialog.CustomColors:TStrings'");
MakeComm(0x4A6F55, "'TStrings.Get'");
MakeCode(0x4A6F77);
MakeCode(0x4A6F7F);
MakeComm(0x4A6F8C, "'TDFSColorButtonPalette.?f374:TColorArrayClass'");
MakeCode(0x4A6FA8);
MakeCode(0x4A6FB5);
MakeComm(0x4A6FB8, "'TDFSColorButtonPalette.?f366:byte'");
MakeCode(0x4A6FC8);
MakeCode(0x4A6FCD);
MakeComm(0x4A6FD8, "'TDFSColorButtonPalette.?f38A:word'");
MakeComm(0x4A6FE5, "'TDFSColorButtonPalette.?f37C:TColor'");
MakeComm(0x4A6FF4, "'TDFSColorButtonPalette.?f38C:TdfsColorButton'");
MakeCode(0x4A7000);
MakeCode(0x4A7008);
MakeCode(0x4A7015);
MakeCode(0x4A7023);
MakeCode(0x4A7028);
MakeFunction(0x4A6DD4, 0x4A7030);
MakeByte(0x4A7030);
MakeUnkn(0x4A7030, 1);
MakeNameEx(0x4A7030, "gvar_004A7030", 0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4A703C, -1);
MakeDword(0x4A7038);
MakeDword(0x4A7034);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4A704C, -1);
MakeDword(0x4A7048);
MakeDword(0x4A7044);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4A7058, -1);
MakeDword(0x4A7054);
MakeDword(0x4A7050);
MakeUnkn(0x4A705C, 1);
MakeNameEx(0x4A705C, "TDFSColorButtonPalette.FormCloseQuery", 0x20);
MakeComm(0x4A705C, "'procedure TDFSColorButtonPalette.FormCloseQuery(Sender:TObject; var CanClose:Boolean);'");
MakeCode(0x4A705C);
MakeComm(0x4A705C, "'TDFSColorButtonPalette.?f366:byte'");
MakeFunction(0x4A705C, 0x4A7068);
MakeCode(0x4A7068);
MakeCode(0x4A707A);
MakeCode(0x4A7081);
MakeFunction(0x4A7068, 0x4A7084);
MakeCode(0x4A7084);
MakeCode(0x4A7092);
MakeCode(0x4A7095);
MakeFunction(0x4A7084, 0x4A7098);
MakeCode(0x4A7098);
MakeComm(0x4A70A7, "'TDFSColorButtonPalette.?f380:dword'");
MakeComm(0x4A70D2, "'TDFSColorButtonPalette.?f384:dword'");
MakeComm(0x4A70D8, "'TDFSColorButtonPalette.?f380:dword'");
MakeComm(0x4A70E9, "'TDFSColorButtonPalette.?f384:dword'");
MakeComm(0x4A70F3, "'TDFSColorButtonPalette.?f37C:TColor'");
MakeCode(0x4A70FB);
MakeComm(0x4A70FD, "'TDFSColorButtonPalette.?f380:dword'");
MakeComm(0x4A7103, "'TDFSColorButtonPalette.?f370:TColorArrayClass'");
MakeComm(0x4A710E, "'TDFSColorButtonPalette.?f380:dword'");
MakeCode(0x4A710E);
MakeCode(0x4A7123);
MakeComm(0x4A712B, "'TDFSColorButtonPalette.?f37C:TColor'");
MakeCode(0x4A7133);
MakeComm(0x4A7138, "'TDFSColorButtonPalette.?f370:TColorArrayClass'");
MakeCode(0x4A7143);
MakeComm(0x4A7158, "'TDFSColorButtonPalette.?f380:dword'");
MakeComm(0x4A7162, "'TDFSColorButtonPalette.?f384:dword'");
MakeCode(0x4A7168);
MakeFunction(0x4A7098, 0x4A716E);
MakeUnkn(0x4A7170, 1);
MakeNameEx(0x4A7170, "TDFSColorButtonPalette.FormMouseMove", 0x20);
MakeComm(0x4A7170, "'procedure TDFSColorButtonPalette.FormMouseMove(Sender:TObject; Shift:TShiftState; X:Integer; Y:Integer);'");
MakeCode(0x4A7170);
MakeFunction(0x4A7170, 0x4A7194);
MakeUnkn(0x4A7194, 1);
MakeNameEx(0x4A7194, "TDFSColorButtonPalette.FormClick", 0x20);
MakeComm(0x4A7194, "'procedure TDFSColorButtonPalette.FormClick(Sender:TObject);'");
MakeCode(0x4A7194);
MakeComm(0x4A719C, "'TDFSColorButtonPalette.?f38A:word'");
MakeComm(0x4A71C9, "'TDFSColorButtonPalette.?f37C:TColor'");
MakeCode(0x4A71D1);
MakeComm(0x4A71D5, "'TDFSColorButtonPalette.?f370:TColorArrayClass'");
MakeCode(0x4A71E0);
MakeComm(0x4A71E8, "'TDFSColorButtonPalette.?f38C:TdfsColorButton'");
MakeCode(0x4A71F4);
MakeFunction(0x4A7194, 0x4A7201);
MakeCode(0x4A7204);
MakeCode(0x4A7243);
MakeCode(0x4A7247);
MakeCode(0x4A7249);
MakeFunction(0x4A7204, 0x4A724F);
MakeCode(0x4A7250);
MakeCode(0x4A72BB);
MakeCode(0x4A72D9);
MakeFunction(0x4A7250, 0x4A72DE);
MakeUnkn(0x4A72E0, 1);
MakeNameEx(0x4A72E0, "TDFSColorButtonPalette.FormKeyPress", 0x20);
MakeComm(0x4A72E0, "'procedure TDFSColorButtonPalette.FormKeyPress(Sender:TObject; var Key:Char);'");
MakeCode(0x4A72E0);
MakeComm(0x4A72F7, "'TDFSColorButtonPalette.?f365:byte'");
MakeComm(0x4A7307, "'TDFSColorButtonPalette.?f38A:word'");
MakeCode(0x4A7307);
MakeComm(0x4A7311, "'TDFSColorButtonPalette.?f380:dword'");
MakeComm(0x4A731A, "'TDFSColorButtonPalette.?f384:dword'");
MakeComm(0x4A733E, "'TDFSColorButtonPalette.?f37C:TColor'");
MakeCode(0x4A7346);
MakeComm(0x4A734A, "'TDFSColorButtonPalette.?f370:TColorArrayClass'");
MakeCode(0x4A7355);
MakeComm(0x4A735D, "'TDFSColorButtonPalette.?f38C:TdfsColorButton'");
MakeComm(0x4A7369, "'TDFSColorButtonPalette.?f365:byte'");
MakeCode(0x4A7369);
MakeCode(0x4A7377);
MakeFunction(0x4A72E0, 0x4A737D);
MakeUnkn(0x4A7380, 1);
MakeNameEx(0x4A7380, "TDFSColorButtonPalette.FormDestroy", 0x20);
MakeComm(0x4A7380, "'procedure TDFSColorButtonPalette.FormDestroy(Sender:TObject);'");
MakeCode(0x4A7380);
MakeComm(0x4A7388, "'TDFSColorButtonPalette.?f368:TNotifyEvent'");
MakeComm(0x4A738E, "'TApplication.FOnDeactivate:TNotifyEvent'");
MakeComm(0x4A7394, "'TDFSColorButtonPalette.?f36C:dword'");
MakeComm(0x4A739A, "'TApplication.?f134:TDFSColorButtonPalette'");
MakeComm(0x4A73A8, "'TDFSColorButtonPalette.?f398:TShowHintEvent'");
MakeComm(0x4A73AE, "'TApplication.FOnShowHint:TShowHintEvent'");
MakeComm(0x4A73B4, "'TDFSColorButtonPalette.?f39C:dword'");
MakeComm(0x4A73BA, "'TApplication.?f15C:TDFSColorButtonPalette'");
MakeFunction(0x4A7380, 0x4A73C1);
MakeCode(0x4A73C4);
MakeFunction(0x4A73C4, 0x4A73D0);
MakeCode(0x4A73D0);
MakeFunction(0x4A73D0, 0x4A73DC);
MakeUnkn(0x4A73DC, 1);
MakeNameEx(0x4A73DC, "TDFSColorButtonPalette.FormKeyDown", 0x20);
MakeComm(0x4A73DC, "'procedure TDFSColorButtonPalette.FormKeyDown(Sender:TObject; var Key:Word; Shift:TShiftState);'");
MakeCode(0x4A73DC);
MakeComm(0x4A73EB, "'TDFSColorButtonPalette.?f380:dword'");
MakeComm(0x4A73F4, "'TDFSColorButtonPalette.?f384:dword'");
MakeCode(0x4A742F);
MakeCode(0x4A7450);
MakeCode(0x4A7462);
MakeCode(0x4A7475);
MakeCode(0x4A7481);
MakeCode(0x4A749B);
MakeCode(0x4A74A9);
MakeCode(0x4A74BC);
MakeCode(0x4A74C8);
MakeCode(0x4A74CC);
MakeCode(0x4A74DE);
MakeCode(0x4A74EC);
MakeFunction(0x4A73DC, 0x4A74F5);
MakeComm(0x4A74F8, "'SResString146'");
MakeDword(0x4A74F8);
MakeDword(0x4A74FC);
MakeUnkn(0x4A7500, 1);
MakeNameEx(0x4A7500, "VMT_4A7500_TdfsColorButton", 0);
MakeDword(0x4A7500);
MakeDword(0x4A7504);
MakeDword(0x4A7508);
MakeDword(0x4A750C);
MakeUnkn(0x4A7644, 1);
MakeNameEx(0x4A7644, "TdfsColorButton_InitTable", 0);
MakeByte(0x4A7644);
MakeByte(0x4A7645);
MakeDword(0x4A7646);
MakeDword(0x4A764A);
MakeDword(0x4A764E);
MakeDword(0x4A7652);
MakeDword(0x4A7656);
MakeDword(0x4A765A);
MakeDword(0x4A765E);
MakeDword(0x4A7662);
MakeDword(0x4A7510);
MakeDword(0x4A7514);
MakeDword(0x4A7518);
MakeDword(0x4A751C);
MakeUnkn(0x4A7666, 1);
MakeNameEx(0x4A7666, "TdfsColorButton_DynamicTable", 0);
MakeWord(0x4A7666);
MakeWord(0x4A7668);
MakeWord(0x4A766A);
MakeWord(0x4A766C);
MakeWord(0x4A766E);
MakeWord(0x4A7670);
MakeWord(0x4A7672);
MakeWord(0x4A7674);
MakeWord(0x4A7676);
MakeDword(0x4A7678);
MakeDword(0x4A767C);
MakeDword(0x4A7680);
MakeDword(0x4A7684);
MakeDword(0x4A7688);
MakeDword(0x4A768C);
MakeDword(0x4A7690);
MakeDword(0x4A7694);
MakeDword(0x4A7520);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A7698, 0x4A76A8);
MakeDword(0x4A7524);
MakeDword(0x4A7528);
MakeDword(0x4A752C);
MakeDword(0x4A7530);
MakeDword(0x4A7534);
MakeDword(0x4A7538);
MakeDword(0x4A753C);
MakeDword(0x4A7540);
MakeDword(0x4A7544);
MakeDword(0x4A7548);
MakeComm(0x4A754C, "'+0'");
MakeDword(0x4A754C);
MakeComm(0x4A7550, "'+4'");
MakeDword(0x4A7550);
MakeComm(0x4A7554, "'+8'");
MakeDword(0x4A7554);
MakeComm(0x4A7558, "'+C'");
MakeDword(0x4A7558);
MakeComm(0x4A755C, "'+10'");
MakeDword(0x4A755C);
MakeComm(0x4A7560, "'+14'");
MakeDword(0x4A7560);
MakeComm(0x4A7564, "'+18'");
MakeDword(0x4A7564);
MakeComm(0x4A7568, "'+1C'");
MakeDword(0x4A7568);
MakeComm(0x4A756C, "'+20'");
MakeDword(0x4A756C);
MakeComm(0x4A7570, "'+24'");
MakeDword(0x4A7570);
MakeComm(0x4A7574, "'+28'");
MakeDword(0x4A7574);
MakeComm(0x4A7578, "'+2C'");
MakeDword(0x4A7578);
MakeComm(0x4A757C, "'+30'");
MakeDword(0x4A757C);
MakeComm(0x4A7580, "'+34'");
MakeDword(0x4A7580);
MakeComm(0x4A7584, "'+38'");
MakeDword(0x4A7584);
MakeComm(0x4A7588, "'+3C'");
MakeDword(0x4A7588);
MakeComm(0x4A758C, "'+40'");
MakeDword(0x4A758C);
MakeComm(0x4A7590, "'+44'");
MakeDword(0x4A7590);
MakeComm(0x4A7594, "'+48'");
MakeDword(0x4A7594);
MakeComm(0x4A7598, "'+4C'");
MakeDword(0x4A7598);
MakeComm(0x4A759C, "'+50'");
MakeDword(0x4A759C);
MakeComm(0x4A75A0, "'+54'");
MakeDword(0x4A75A0);
MakeComm(0x4A75A4, "'+58'");
MakeDword(0x4A75A4);
MakeComm(0x4A75A8, "'+5C'");
MakeDword(0x4A75A8);
MakeComm(0x4A75AC, "'+60'");
MakeDword(0x4A75AC);
MakeComm(0x4A75B0, "'+64'");
MakeDword(0x4A75B0);
MakeComm(0x4A75B4, "'+68'");
MakeDword(0x4A75B4);
MakeComm(0x4A75B8, "'+6C'");
MakeDword(0x4A75B8);
MakeComm(0x4A75BC, "'+70'");
MakeDword(0x4A75BC);
MakeComm(0x4A75C0, "'+74'");
MakeDword(0x4A75C0);
MakeComm(0x4A75C4, "'+78'");
MakeDword(0x4A75C4);
MakeComm(0x4A75C8, "'+7C'");
MakeDword(0x4A75C8);
MakeComm(0x4A75CC, "'+80'");
MakeDword(0x4A75CC);
MakeComm(0x4A75D0, "'+84'");
MakeDword(0x4A75D0);
MakeComm(0x4A75D4, "'+88'");
MakeDword(0x4A75D4);
MakeComm(0x4A75D8, "'+8C'");
MakeDword(0x4A75D8);
MakeComm(0x4A75DC, "'+90'");
MakeDword(0x4A75DC);
MakeComm(0x4A75E0, "'+94'");
MakeDword(0x4A75E0);
MakeComm(0x4A75E4, "'+98'");
MakeDword(0x4A75E4);
MakeComm(0x4A75E8, "'+9C'");
MakeDword(0x4A75E8);
MakeComm(0x4A75EC, "'+A0'");
MakeDword(0x4A75EC);
MakeComm(0x4A75F0, "'+A4'");
MakeDword(0x4A75F0);
MakeComm(0x4A75F4, "'+A8'");
MakeDword(0x4A75F4);
MakeComm(0x4A75F8, "'+AC'");
MakeDword(0x4A75F8);
MakeComm(0x4A75FC, "'+B0'");
MakeDword(0x4A75FC);
MakeComm(0x4A7600, "'+B4'");
MakeDword(0x4A7600);
MakeComm(0x4A7604, "'+B8'");
MakeDword(0x4A7604);
MakeComm(0x4A7608, "'+BC'");
MakeDword(0x4A7608);
MakeComm(0x4A760C, "'+C0'");
MakeDword(0x4A760C);
MakeComm(0x4A7610, "'+C4'");
MakeDword(0x4A7610);
MakeComm(0x4A7614, "'+C8'");
MakeDword(0x4A7614);
MakeComm(0x4A7618, "'+CC'");
MakeDword(0x4A7618);
MakeComm(0x4A761C, "'+D0'");
MakeDword(0x4A761C);
MakeComm(0x4A7620, "'+D4'");
MakeDword(0x4A7620);
MakeComm(0x4A7624, "'+D8'");
MakeDword(0x4A7624);
MakeComm(0x4A7628, "'+DC'");
MakeDword(0x4A7628);
MakeComm(0x4A762C, "'+E0'");
MakeDword(0x4A762C);
MakeComm(0x4A7630, "'+E4'");
MakeDword(0x4A7630);
MakeComm(0x4A7634, "'+E8'");
MakeDword(0x4A7634);
MakeComm(0x4A7638, "'+EC'");
MakeDword(0x4A7638);
MakeComm(0x4A763C, "'+F0'");
MakeDword(0x4A763C);
MakeComm(0x4A7640, "'+F4'");
MakeDword(0x4A7640);
MakeUnkn(0x4A76A8, 1);
MakeNameEx(0x4A76A8, "RTTI_4A76A8_Class_TdfsColorButton", 0);
MakeDword(0x4A76A8);
MakeUnkn(0x4A76AC, 1);
MakeNameEx(0x4A76AC, "", 0);
MakeByte(0x4A76AC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A76AD, 0x4A76BD);
MakeDword(0x4A76BD);
MakeDword(0x4A76C1);
MakeWord(0x4A76C5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A76C7, 0x4A76D0);
MakeWord(0x4A76D0);
MakeDword(0x4A76D2);
MakeDword(0x4A76D6);
MakeDword(0x4A76DA);
MakeDword(0x4A76DE);
MakeDword(0x4A76E2);
MakeDword(0x4A76E6);
MakeWord(0x4A76EA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A76EC, 0x4A76F4);
MakeDword(0x4A76F4);
MakeDword(0x4A76F8);
MakeDword(0x4A76FC);
MakeDword(0x4A7700);
MakeDword(0x4A7704);
MakeDword(0x4A7708);
MakeWord(0x4A770C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A770E, 0x4A771D);
MakeDword(0x4A771D);
MakeDword(0x4A7721);
MakeDword(0x4A7725);
MakeDword(0x4A7729);
MakeDword(0x4A772D);
MakeDword(0x4A7731);
MakeWord(0x4A7735);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A7737, 0x4A773D);
MakeDword(0x4A773D);
MakeDword(0x4A7741);
MakeDword(0x4A7745);
MakeDword(0x4A7749);
MakeDword(0x4A774D);
MakeDword(0x4A7751);
MakeWord(0x4A7755);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A7757, 0x4A7767);
MakeDword(0x4A7767);
MakeDword(0x4A776B);
MakeDword(0x4A776F);
MakeDword(0x4A7773);
MakeDword(0x4A7777);
MakeDword(0x4A777B);
MakeWord(0x4A777F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A7781, 0x4A778C);
MakeDword(0x4A778C);
MakeDword(0x4A7790);
MakeDword(0x4A7794);
MakeDword(0x4A7798);
MakeDword(0x4A779C);
MakeDword(0x4A77A0);
MakeWord(0x4A77A4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A77A6, 0x4A77B2);
MakeDword(0x4A77B2);
MakeDword(0x4A77B6);
MakeDword(0x4A77BA);
MakeDword(0x4A77BE);
MakeDword(0x4A77C2);
MakeDword(0x4A77C6);
MakeWord(0x4A77CA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A77CC, 0x4A77DA);
MakeDword(0x4A77DA);
MakeDword(0x4A77DE);
MakeDword(0x4A77E2);
MakeDword(0x4A77E6);
MakeDword(0x4A77EA);
MakeDword(0x4A77EE);
MakeWord(0x4A77F2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A77F4, 0x4A7801);
MakeDword(0x4A7801);
MakeDword(0x4A7805);
MakeDword(0x4A7809);
MakeDword(0x4A780D);
MakeDword(0x4A7811);
MakeDword(0x4A7815);
MakeWord(0x4A7819);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A781B, 0x4A7821);
MakeDword(0x4A7821);
MakeDword(0x4A7825);
MakeDword(0x4A7829);
MakeDword(0x4A782D);
MakeDword(0x4A7831);
MakeDword(0x4A7835);
MakeWord(0x4A7839);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A783B, 0x4A7840);
MakeDword(0x4A7840);
MakeDword(0x4A7844);
MakeDword(0x4A7848);
MakeDword(0x4A784C);
MakeDword(0x4A7850);
MakeDword(0x4A7854);
MakeWord(0x4A7858);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A785A, 0x4A786A);
MakeDword(0x4A786A);
MakeDword(0x4A786E);
MakeDword(0x4A7872);
MakeDword(0x4A7876);
MakeDword(0x4A787A);
MakeDword(0x4A787E);
MakeWord(0x4A7882);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A7884, 0x4A7892);
MakeDword(0x4A7892);
MakeDword(0x4A7896);
MakeDword(0x4A789A);
MakeDword(0x4A789E);
MakeDword(0x4A78A2);
MakeDword(0x4A78A6);
MakeWord(0x4A78AA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A78AC, 0x4A78BF);
MakeUnkn(0x4A78C0, 1);
MakeNameEx(0x4A78C0, "TdfsColorButton.Create", 0x20);
MakeComm(0x4A78C0, "'constructor TdfsColorButton.Create(AOwner:TComponent);'");
MakeCode(0x4A78C0);
MakeCode(0x4A78CE);
MakeComm(0x4A78DB, "'TdfsColorButton.?f2A0:byte'");
MakeComm(0x4A78E2, "'TdfsColorButton.?f2B9:byte'");
MakeComm(0x4A78E9, "'TdfsColorButton.ShowColorHints:Boolean'");
MakeComm(0x4A78F2, "'TdfsColorButton.?f270:dword'");
MakeComm(0x4A78F8, "'TdfsColorButton.CycleColors:Boolean'");
MakeComm(0x4A7906, "'TBitmap.Create'");
MakeComm(0x4A790B, "'TdfsColorButton.?f2B0:TBitmap'");
MakeComm(0x4A7918, "'TBitmap.Create'");
MakeComm(0x4A791D, "'TdfsColorButton.?f2B4:TBitmap'");
MakeComm(0x4A7923, "'TdfsColorButton.?f2B0:TBitmap'");
MakeComm(0x4A7939, "'TdfsColorButton.?f2B4:TBitmap'");
MakeComm(0x4A795D, "'TColorArrayClass.Create'");
MakeComm(0x4A7962, "'TdfsColorButton.PaletteColors:TColorArrayClass'");
MakeComm(0x4A7976, "'TColorArrayClass.Create'");
MakeComm(0x4A797B, "'TdfsColorButton.CustomColors:TColorArrayClass'");
MakeComm(0x4A7983, "'TdfsColorButton.?f274:TDFSColorButtonPalette'");
MakeComm(0x4A7989, "'TdfsColorButton.OtherBtnCaption:string'");
MakeComm(0x4A7999, "'TdfsColorButton.?f280:byte'");
MakeComm(0x4A79A7, "'TCanvas.Create'");
MakeComm(0x4A79AC, "'TdfsColorButton.?f284:TCanvas'");
MakeComm(0x4A79B2, "'TdfsColorButton.Style:TButtonStyle'");
MakeComm(0x4A79BB, "'TdfsColorButton.Color:TColor'");
MakeComm(0x4A79C1, "'TdfsColorButton.?f290:byte'");
MakeComm(0x4A79D1, "'TdfsColorButton.?f2B8:byte'");
MakeComm(0x4A79D8, "'TdfsColorButton.FControlStyle:TControlStyle'");
MakeComm(0x4A79DB, "'0x4000'");
MakeComm(0x4A79E1, "'TdfsColorButton.FControlStyle:TControlStyle'");
MakeComm(0x4A79E4, "'TdfsColorButton.Flat:Boolean'");
MakeComm(0x4A79EB, "'TdfsColorButton.CustomColorsKey:string'");
MakeComm(0x4A79FA, "'TdfsColorButton.sub_004A872C'");
MakeCode(0x4A7A2D);
MakeFunction(0x4A78C0, 0x4A7A32);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4A7A3C, -1);
MakeDword(0x4A7A38);
MakeDword(0x4A7A34);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4A7A54, -1);
MakeDword(0x4A7A50);
MakeDword(0x4A7A4C);
MakeByte(0x4A7A6C);
MakeUnkn(0x4A7A6C, 1);
MakeNameEx(0x4A7A6C, "gvar_004A7A6C", 0);
MakeUnkn(0x4A7A70, 1);
MakeNameEx(0x4A7A70, "TdfsColorButton.Destroy", 0x20);
MakeComm(0x4A7A70, "'destructor TdfsColorButton.Destroy;'");
MakeCode(0x4A7A70);
MakeComm(0x4A7A7F, "'TdfsColorButton.sub_004A8AA4'");
MakeComm(0x4A7A85, "'TdfsColorButton.?f284:TCanvas'");
MakeComm(0x4A7A90, "'TdfsColorButton.PaletteColors:TColorArrayClass'");
MakeComm(0x4A7A9B, "'TdfsColorButton.CustomColors:TColorArrayClass'");
MakeComm(0x4A7AA6, "'TdfsColorButton.?f2B0:TBitmap'");
MakeComm(0x4A7AB1, "'TdfsColorButton.?f2B4:TBitmap'");
MakeCode(0x4A7AD3);
MakeFunction(0x4A7A70, 0x4A7AD6);
MakeUnkn(0x4A7AD8, 1);
MakeNameEx(0x4A7AD8, "TdfsColorButton.CreateWnd", 0x20);
MakeComm(0x4A7AD8, "'procedure TdfsColorButton.CreateWnd;'");
MakeCode(0x4A7AD8);
MakeComm(0x4A7AE2, "'TdfsColorButton.?f280:byte'");
MakeComm(0x4A7AEF, "'TdfsColorButton.sub_004A8BE8'");
MakeCode(0x4A7AF5);
MakeFunction(0x4A7AD8, 0x4A7AF7);
MakeUnkn(0x4A7AF8, 1);
MakeNameEx(0x4A7AF8, "TdfsColorButton.Loaded", 0x20);
MakeComm(0x4A7AF8, "'procedure TdfsColorButton.Loaded;'");
MakeCode(0x4A7AF8);
MakeComm(0x4A7B06, "'TdfsColorButton.sub_004A8BE8'");
MakeFunction(0x4A7AF8, 0x4A7B0E);
MakeUnkn(0x4A7B10, 1);
MakeNameEx(0x4A7B10, "TdfsColorButton.CreateParams", 0x20);
MakeComm(0x4A7B10, "'procedure TdfsColorButton.CreateParams(var Params:TCreateParams);'");
MakeCode(0x4A7B10);
MakeComm(0x4A7B1A, "'TCreateParams.Style:DWORD'");
MakeFunction(0x4A7B10, 0x4A7B20);
MakeUnkn(0x4A7B20, 1);
MakeNameEx(0x4A7B20, "TdfsColorButton.SetStyle", 0x20);
MakeComm(0x4A7B20, "'procedure TdfsColorButton.SetStyle(Value:TButtonStyle);'");
MakeCode(0x4A7B20);
MakeComm(0x4A7B20, "'TdfsColorButton.Style:TButtonStyle'");
MakeComm(0x4A7B28, "'TdfsColorButton.Style:TButtonStyle'");
MakeComm(0x4A7B30, "'TWinControl.Invalidate'");
MakeFunction(0x4A7B20, 0x4A7B37);
MakeUnkn(0x4A7B38, 1);
MakeNameEx(0x4A7B38, "TdfsColorButton.SetColor", 0x20);
MakeComm(0x4A7B38, "'procedure TdfsColorButton.SetColor(Value:TColor);'");
MakeCode(0x4A7B38);
MakeComm(0x4A7B3E, "'TdfsColorButton.Color:TColor'");
MakeComm(0x4A7B46, "'TdfsColorButton.Color:TColor'");
MakeComm(0x4A7B4E, "'TdfsColorButton.PaletteColors:TColorArrayClass'");
MakeComm(0x4A7B54, "'TColorArrayClass.?fC:dword'");
MakeCode(0x4A7B60);
MakeComm(0x4A7B62, "'TdfsColorButton.PaletteColors:TColorArrayClass'");
MakeComm(0x4A7B6D, "'TdfsColorButton.Color:TColor'");
MakeComm(0x4A7B75, "'TdfsColorButton.?f270:dword'");
MakeCode(0x4A7B7F);
MakeCode(0x4A7B83);
MakeComm(0x4A7B89, "'TdfsColorButton.?f270:dword'");
MakeCode(0x4A7B8F);
MakeComm(0x4A7B93, "'TWinControl.Invalidate'");
MakeComm(0x4A7B9D, "'TdfsColorButton.sub_004A8D90'");
MakeCode(0x4A7BA3);
MakeFunction(0x4A7B38, 0x4A7BA8);
MakeCode(0x4A7BA8);
MakeCode(0x4A7BDD);
MakeCode(0x4A7BF0);
MakeCode(0x4A7C04);
MakeFunction(0x4A7BA8, 0x4A7C07);
MakeUnkn(0x4A7C08, 1);
MakeNameEx(0x4A7C08, "TdfsColorButton.sub_004A7C08", 0x20);
MakeComm(0x4A7C08, "'procedure TdfsColorButton.sub_004A7C08(?:?);'");
MakeCode(0x4A7C08);
MakeComm(0x4A7C0C, "'TdfsColorButton.Width:Integer'");
MakeComm(0x4A7C12, "'TdfsColorButton.Height:Integer'");
MakeFunction(0x4A7C08, 0x4A7C21);
MakeUnkn(0x4A7C24, 1);
MakeNameEx(0x4A7C24, "TdfsColorButton.sub_004A7C24", 0x20);
MakeComm(0x4A7C24, "'procedure TdfsColorButton.sub_004A7C24(?:?);'");
MakeCode(0x4A7C24);
MakeFunction(0x4A7C24, 0x4A7C38);
MakeCode(0x4A7C38);
MakeCode(0x4A7CD2);
MakeCode(0x4A7CDF);
MakeCode(0x4A7CFC);
MakeCode(0x4A7D01);
MakeFunction(0x4A7C38, 0x4A7D0A);
MakeCode(0x4A7D0C);
MakeComm(0x4A7D23, "'TdfsColorButton.?f284:TCanvas'");
MakeComm(0x4A7D43, "'TWinControl.GetClientRect'");
MakeComm(0x4A7D50, "'TdfsColorButton.?f290:byte'");
MakeCode(0x4A7D5D);
MakeCode(0x4A7D5F);
MakeComm(0x4A7D77, "'TdfsColorButton.Top:Integer'");
MakeComm(0x4A7D7D, "'TdfsColorButton.Left:Integer'");
MakeComm(0x4A7D8E, "'TdfsColorButton.FParent:TWinControl'");
MakeComm(0x4A7DA5, "'TdfsColorButton.Top:Integer'");
MakeComm(0x4A7DAB, "'TdfsColorButton.Height:Integer'");
MakeComm(0x4A7DB1, "'TdfsColorButton.Left:Integer'");
MakeComm(0x4A7DCB, "'TdfsColorButton.FParent:TWinControl'");
MakeComm(0x4A7DF7, "'TdfsColorButton.?f2B8:byte'");
MakeCode(0x4A7E11);
MakeCode(0x4A7E1E);
MakeComm(0x4A7E21, "'TdfsColorButton.Flat:Boolean'");
MakeComm(0x4A7E2D, "'TdfsColorButton.?f2B8:byte'");
MakeComm(0x4A7E3D, "'TWinControl.Focused'");
MakeCode(0x4A7E4D);
MakeComm(0x4A7E56, "'TdfsColorButton.?f284:TCanvas'");
MakeComm(0x4A7E5C, "'TCanvas.Pen:TPen'");
MakeComm(0x4A7E6C, "'TdfsColorButton.?f284:TCanvas'");
MakeComm(0x4A7E72, "'TCanvas.Pen:TPen'");
MakeComm(0x4A7E82, "'TdfsColorButton.?f284:TCanvas'");
MakeComm(0x4A7E88, "'TCanvas.Brush:TBrush'");
MakeComm(0x4A7E9D, "'TdfsColorButton.?f284:TCanvas'");
MakeCode(0x4A7EB7);
MakeComm(0x4A7EC0, "'TdfsColorButton.?f284:TCanvas'");
MakeComm(0x4A7EC6, "'TCanvas.Pen:TPen'");
MakeComm(0x4A7ED6, "'TdfsColorButton.?f284:TCanvas'");
MakeComm(0x4A7EDC, "'TCanvas.Pen:TPen'");
MakeComm(0x4A7EEC, "'TdfsColorButton.?f284:TCanvas'");
MakeComm(0x4A7EF2, "'TCanvas.Brush:TBrush'");
MakeComm(0x4A7F0A, "'TdfsColorButton.?f284:TCanvas'");
MakeCode(0x4A7F29);
MakeComm(0x4A7F2C, "'TdfsColorButton.FComponentState:TComponentState'");
MakeComm(0x4A7F35, "'TdfsColorButton.Flat:Boolean'");
MakeCode(0x4A7F4C);
MakeComm(0x4A7F4F, "'TdfsColorButton.?f284:TCanvas'");
MakeComm(0x4A7F55, "'TCanvas.Pen:TPen'");
MakeComm(0x4A7F69, "'TdfsColorButton.?f284:TCanvas'");
MakeComm(0x4A7F79, "'TdfsColorButton.?f284:TCanvas'");
MakeComm(0x4A7F90, "'TdfsColorButton.?f284:TCanvas'");
MakeComm(0x4A7FA1, "'TdfsColorButton.?f284:TCanvas'");
MakeComm(0x4A7FA7, "'TCanvas.Pen:TPen'");
MakeComm(0x4A7FBF, "'TdfsColorButton.?f284:TCanvas'");
MakeComm(0x4A7FD1, "'TdfsColorButton.?f284:TCanvas'");
MakeComm(0x4A7FEB, "'TdfsColorButton.?f284:TCanvas'");
MakeComm(0x4A7FF1, "'TCanvas.Brush:TBrush'");
MakeComm(0x4A8003, "'TdfsColorButton.?f284:TCanvas'");
MakeCode(0x4A8010);
MakeComm(0x4A8033, "'TdfsColorButton.?f284:TCanvas'");
MakeComm(0x4A8039, "'TCanvas.Brush:TBrush'");
MakeComm(0x4A804B, "'TdfsColorButton.?f284:TCanvas'");
MakeCode(0x4A8060);
MakeComm(0x4A8067, "'TWinControl.GetClientRect'");
MakeCode(0x4A807A);
MakeComm(0x4A8087, "'TdfsColorButton.?f288:byte'");
MakeComm(0x4A8096, "'TdfsColorButton.?f284:TCanvas'");
MakeComm(0x4A809C, "'TCanvas.Pen:TPen'");
MakeComm(0x4A80AC, "'TdfsColorButton.?f284:TCanvas'");
MakeComm(0x4A80B2, "'TCanvas.Brush:TBrush'");
MakeComm(0x4A80C3, "'TdfsColorButton.?f284:TCanvas'");
MakeCode(0x4A80D4);
MakeComm(0x4A80F1, "'TLabel.GetEnabled'");
MakeCode(0x4A80FE);
MakeComm(0x4A8101, "'TdfsColorButton.?f284:TCanvas'");
MakeComm(0x4A8107, "'TCanvas.Brush:TBrush'");
MakeComm(0x4A8119, "'TdfsColorButton.?f284:TCanvas'");
MakeComm(0x4A8131, "'TdfsColorButton.?f284:TCanvas'");
MakeCode(0x4A8148);
MakeComm(0x4A814B, "'TdfsColorButton.?f284:TCanvas'");
MakeComm(0x4A8151, "'TCanvas.Pen:TPen'");
MakeComm(0x4A8161, "'TdfsColorButton.?f284:TCanvas'");
MakeComm(0x4A8167, "'TCanvas.Pen:TPen'");
MakeComm(0x4A8177, "'TdfsColorButton.?f284:TCanvas'");
MakeComm(0x4A817D, "'TCanvas.Brush:TBrush'");
MakeComm(0x4A8192, "'TdfsColorButton.?f284:TCanvas'");
MakeComm(0x4A81A5, "'TdfsColorButton.Color:TColor'");
MakeComm(0x4A81AE, "'TdfsColorButton.?f284:TCanvas'");
MakeComm(0x4A81B4, "'TCanvas.Brush:TBrush'");
MakeComm(0x4A81C7, "'TdfsColorButton.?f284:TCanvas'");
MakeCode(0x4A81D7);
MakeComm(0x4A81E2, "'TdfsColorButton.?f284:TCanvas'");
MakeComm(0x4A81E8, "'TCanvas.Pen:TPen'");
MakeComm(0x4A81F8, "'TdfsColorButton.?f284:TCanvas'");
MakeComm(0x4A820B, "'TdfsColorButton.?f284:TCanvas'");
MakeComm(0x4A8220, "'TdfsColorButton.?f284:TCanvas'");
MakeComm(0x4A8226, "'TCanvas.Pen:TPen'");
MakeComm(0x4A8236, "'TdfsColorButton.?f284:TCanvas'");
MakeComm(0x4A8249, "'TdfsColorButton.?f284:TCanvas'");
MakeComm(0x4A825E, "'TLabel.GetEnabled'");
MakeCode(0x4A826B);
MakeComm(0x4A826E, "'TdfsColorButton.?f2B0:TBitmap'");
MakeCode(0x4A8276);
MakeComm(0x4A8279, "'TdfsColorButton.?f2B4:TBitmap'");
MakeCode(0x4A827F);
MakeComm(0x4A8285, "'TBitmap.GetHeight'");
MakeCode(0x4A828F);
MakeCode(0x4A829C);
MakeComm(0x4A82A5, "'TBitmap.GetWidth'");
MakeComm(0x4A82B2, "'TBitmap.GetHeight'");
MakeComm(0x4A82BF, "'TdfsColorButton.?f284:TCanvas'");
MakeComm(0x4A82C5, "'TCanvas.Brush:TBrush'");
MakeComm(0x4A82D6, "'TBitmap.GetHeight'");
MakeComm(0x4A82E3, "'TBitmap.GetWidth'");
MakeComm(0x4A82FA, "'TBitmap.GetHeight'");
MakeComm(0x4A8314, "'TdfsColorButton.?f284:TCanvas'");
MakeCode(0x4A8321);
MakeCode(0x4A832E);
MakeComm(0x4A8331, "'TdfsColorButton.?f284:TCanvas'");
MakeCode(0x4A833F);
MakeCode(0x4A8344);
MakeFunction(0x4A7D0C, 0x4A834D);
MakeUnkn(0x4A8350, 1);
MakeNameEx(0x4A8350, "TdfsColorButton.CMFontChanged", 0x20);
MakeComm(0x4A8350, "'procedure TdfsColorButton.CMFontChanged(var Message:TMessage);'");
MakeCode(0x4A8350);
MakeComm(0x4A835E, "'TWinControl.Invalidate'");
MakeFunction(0x4A8350, 0x4A8366);
MakeUnkn(0x4A8368, 1);
MakeNameEx(0x4A8368, "TdfsColorButton.CMEnabledChanged", 0x20);
MakeComm(0x4A8368, "'procedure TdfsColorButton.CMEnabledChanged(var Message:TMessage);'");
MakeCode(0x4A8368);
MakeComm(0x4A8376, "'TWinControl.Invalidate'");
MakeFunction(0x4A8368, 0x4A837E);
MakeUnkn(0x4A8380, 1);
MakeNameEx(0x4A8380, "TdfsColorButton.WMLButtonDblClk", 0x20);
MakeComm(0x4A8380, "'procedure TdfsColorButton.WMLButtonDblClk(Message:TWMLButtonDblClk);'");
MakeCode(0x4A8380);
MakeFunction(0x4A8380, 0x4A8392);
MakeUnkn(0x4A8394, 1);
MakeNameEx(0x4A8394, "TdfsColorButton.SetButtonStyle", 0x20);
MakeComm(0x4A8394, "'procedure TdfsColorButton.SetButtonStyle(ADefault:Boolean);'");
MakeCode(0x4A8394);
MakeComm(0x4A8394, "'TdfsColorButton.?f288:byte'");
MakeComm(0x4A839C, "'TdfsColorButton.?f288:byte'");
MakeFunction(0x4A8394, 0x4A83A8);
MakeUnkn(0x4A83A8, 1);
MakeNameEx(0x4A83A8, "TdfsColorButton.Click", 0x20);
MakeComm(0x4A83A8, "'procedure TdfsColorButton.Click;'");
MakeCode(0x4A83A8);
MakeComm(0x4A83AF, "'TdfsColorButton.?f2B9:byte'");
MakeComm(0x4A83B8, "'TdfsColorButton.?f2B9:byte'");
MakeComm(0x4A83C4, "'TdfsColorButton.?f2A0:byte'");
MakeCode(0x4A83C4);
MakeCode(0x4A83D9);
MakeComm(0x4A8402, "'TdfsColorButton.Width:Integer'");
MakeComm(0x4A840F, "'TdfsColorButton.CycleColors:Boolean'");
MakeComm(0x4A841C, "'TdfsColorButton.?f270:dword'");
MakeComm(0x4A8423, "'TdfsColorButton.PaletteColors:TColorArrayClass'");
MakeComm(0x4A8429, "'TColorArrayClass.?fC:dword'");
MakeCode(0x4A843C);
MakeCode(0x4A844A);
MakeComm(0x4A8453, "'TDFSColorButtonPalette.Create'");
MakeComm(0x4A8458, "'TdfsColorButton.?f274:TDFSColorButtonPalette'");
MakeComm(0x4A8462, "'TdfsColorButton.Top:Integer'");
MakeComm(0x4A8465, "'TdfsColorButton.Height:Integer'");
MakeComm(0x4A8468, "'TdfsColorButton.Left:Integer'");
MakeComm(0x4A8476, "'TdfsColorButton.FParent:TWinControl'");
MakeComm(0x4A848E, "'TdfsColorButton.?f274:TDFSColorButtonPalette'");
MakeComm(0x4A8494, "'TDFSColorButtonPalette.Height:Integer'");
MakeComm(0x4A84A5, "'TdfsColorButton.Top:Integer'");
MakeComm(0x4A84AB, "'TdfsColorButton.Left:Integer'");
MakeComm(0x4A84B9, "'TdfsColorButton.FParent:TWinControl'");
MakeCode(0x4A84C1);
MakeComm(0x4A84D1, "'TdfsColorButton.?f274:TDFSColorButtonPalette'");
MakeCode(0x4A84D1);
MakeComm(0x4A84D7, "'TDFSColorButtonPalette.Width:Integer'");
MakeComm(0x4A84EA, "'TdfsColorButton.?f274:TDFSColorButtonPalette'");
MakeCode(0x4A84EA);
MakeComm(0x4A84F0, "'TDFSColorButtonPalette.Width:Integer'");
MakeComm(0x4A84F4, "'TDFSColorButtonPalette.Height:Integer'");
MakeComm(0x4A8504, "'TWinControl.SetBounds'");
MakeComm(0x4A850A, "'TdfsColorButton.ShowColorHints:Boolean'");
MakeComm(0x4A8511, "'TdfsColorButton.?f274:TDFSColorButtonPalette'");
MakeComm(0x4A851C, "'TdfsColorButton.?f274:TDFSColorButtonPalette'");
MakeComm(0x4A8522, "'TDFSColorButtonPalette.btnOther:TButton'");
MakeComm(0x4A8528, "'TdfsColorButton.OtherBtnCaption:string'");
MakeComm(0x4A8533, "'TdfsColorButton.?f274:TDFSColorButtonPalette'");
MakeComm(0x4A8539, "'TdfsColorButton.OtherColor:TColor'");
MakeComm(0x4A853F, "'TDFSColorButtonPalette.?f37C:TColor'");
MakeComm(0x4A8545, "'TdfsColorButton.Color:TColor'");
MakeComm(0x4A8550, "'TdfsColorButton.?f274:TDFSColorButtonPalette'");
MakeComm(0x4A8556, "'TDFSColorButtonPalette.?f38C:TdfsColorButton'");
MakeComm(0x4A855C, "'TDFSColorButtonPalette.?f388:?'");
MakeComm(0x4A8566, "'TDFSColorButtonPalette.?f394:TdfsColorButton'");
MakeComm(0x4A856C, "'TDFSColorButtonPalette.?f390:?'");
MakeComm(0x4A8576, "'TdfsColorButton.PaletteColors:TColorArrayClass'");
MakeComm(0x4A8581, "'TdfsColorButton.CustomColors:TColorArrayClass'");
MakeComm(0x4A8587, "'TdfsColorButton.?f274:TDFSColorButtonPalette'");
MakeComm(0x4A8592, "'TdfsColorButton.?f274:TDFSColorButtonPalette'");
MakeComm(0x4A8598, "'TdfsColorButton.OnGetColorHintText:TDFSColorHintTextEvent'");
MakeComm(0x4A859E, "'TDFSColorButtonPalette.?f3A0:TDFSColorHintTextEvent'");
MakeComm(0x4A85A4, "'TdfsColorButton.?f26C:dword'");
MakeComm(0x4A85AA, "'TDFSColorButtonPalette.?f3A4:dword'");
MakeComm(0x4A85B0, "'TdfsColorButton.?f290:byte'");
MakeComm(0x4A85BE, "'TdfsColorButton.?f274:TDFSColorButtonPalette'");
MakeCode(0x4A85E7);
MakeFunction(0x4A83A8, 0x4A85ED);
MakeCode(0x4A85F0);
MakeCode(0x4A8610);
MakeFunction(0x4A85F0, 0x4A8617);
MakeCode(0x4A8618);
MakeCode(0x4A863D);
MakeCode(0x4A8699);
MakeCode(0x4A86DA);
MakeFunction(0x4A8618, 0x4A86E0);
MakeUnkn(0x4A86E0, 1);
MakeNameEx(0x4A86E0, "TdfsColorButton.SetPaletteColors", 0x20);
MakeComm(0x4A86E0, "'procedure TdfsColorButton.SetPaletteColors(Value:TColorArrayClass);'");
MakeCode(0x4A86E0);
MakeComm(0x4A86E0, "'TdfsColorButton.PaletteColors:TColorArrayClass'");
MakeComm(0x4A86E8, "'TColorArrayClass.Assign'");
MakeFunction(0x4A86E0, 0x4A86EC);
MakeUnkn(0x4A86EC, 1);
MakeNameEx(0x4A86EC, "TdfsColorButton.SetCustomColors", 0x20);
MakeComm(0x4A86EC, "'procedure TdfsColorButton.SetCustomColors(Value:TColorArrayClass);'");
MakeCode(0x4A86EC);
MakeComm(0x4A86EC, "'TdfsColorButton.CustomColors:TColorArrayClass'");
MakeComm(0x4A86F4, "'TColorArrayClass.Assign'");
MakeFunction(0x4A86EC, 0x4A86F8);
MakeCode(0x4A872C);
MakeCode(0x4A878B);
MakeCode(0x4A8790);
MakeComm(0x4A87A0, "'TdfsColorButton.PaletteColors:TColorArrayClass'");
MakeCode(0x4A87C0);
MakeComm(0x4A87C8, "'TdfsColorButton.PaletteColors:TColorArrayClass'");
MakeComm(0x4A87E5, "'TdfsColorButton.PaletteColors:TColorArrayClass'");
MakeComm(0x4A8802, "'TdfsColorButton.PaletteColors:TColorArrayClass'");
MakeComm(0x4A881F, "'TdfsColorButton.PaletteColors:TColorArrayClass'");
MakeComm(0x4A883C, "'TdfsColorButton.PaletteColors:TColorArrayClass'");
MakeComm(0x4A8856, "'TdfsColorButton.PaletteColors:TColorArrayClass'");
MakeComm(0x4A8870, "'TdfsColorButton.PaletteColors:TColorArrayClass'");
MakeComm(0x4A888D, "'TdfsColorButton.PaletteColors:TColorArrayClass'");
MakeComm(0x4A88AA, "'TdfsColorButton.PaletteColors:TColorArrayClass'");
MakeComm(0x4A88C7, "'TdfsColorButton.PaletteColors:TColorArrayClass'");
MakeComm(0x4A88E4, "'TdfsColorButton.PaletteColors:TColorArrayClass'");
MakeComm(0x4A8901, "'TdfsColorButton.PaletteColors:TColorArrayClass'");
MakeComm(0x4A891E, "'TdfsColorButton.PaletteColors:TColorArrayClass'");
MakeComm(0x4A893B, "'TdfsColorButton.PaletteColors:TColorArrayClass'");
MakeComm(0x4A8958, "'TdfsColorButton.PaletteColors:TColorArrayClass'");
MakeComm(0x4A8975, "'TdfsColorButton.PaletteColors:TColorArrayClass'");
MakeComm(0x4A8992, "'TdfsColorButton.PaletteColors:TColorArrayClass'");
MakeComm(0x4A89AF, "'TdfsColorButton.PaletteColors:TColorArrayClass'");
MakeComm(0x4A89CC, "'TdfsColorButton.PaletteColors:TColorArrayClass'");
MakeComm(0x4A89E9, "'TdfsColorButton.PaletteColors:TColorArrayClass'");
MakeCode(0x4A89FE);
MakeCode(0x4A8A0B);
MakeCode(0x4A8A1B);
MakeCode(0x4A8A20);
MakeCode(0x4A8A27);
MakeCode(0x4A8A2C);
MakeComm(0x4A8A34, "'TdfsColorButton.CustomColors:TColorArrayClass'");
MakeComm(0x4A8A52, "'TdfsColorButton.OtherColor:TColor'");
MakeFunction(0x4A872C, 0x4A8A62);
MakeCode(0x4A8A64);
MakeComm(0x4A8A6D, "'TdfsColorButton.Name:TComponentName'");
MakeComm(0x4A8A75, "'TdfsColorButton.FParent:TWinControl'");
MakeComm(0x4A8A7C, "'TWinControl.Name:TComponentName'");
MakeCode(0x4A8A92);
MakeFunction(0x4A8A64, 0x4A8A96);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4A8AA0, -1);
MakeDword(0x4A8A9C);
MakeDword(0x4A8A98);
MakeCode(0x4A8AA4);
MakeCode(0x4A8ACD);
MakeCode(0x4A8AD2);
MakeComm(0x4A8ADA, "'TdfsColorButton.CustomColors:TColorArrayClass'");
MakeCode(0x4A8B23);
MakeComm(0x4A8B31, "'TdfsColorButton.CustomColorsKey:string'");
MakeComm(0x4A8B3A, "'TdfsColorButton.CustomColorsKey:string'");
MakeComm(0x4A8B47, "'TRegIniFile.Create'");
MakeComm(0x4A8B61, "'TdfsColorButton.?f278:string'");
MakeCode(0x4A8B74);
MakeCode(0x4A8B81);
MakeCode(0x4A8B8A);
MakeCode(0x4A8B8F);
MakeCode(0x4A8B91);
MakeCode(0x4A8B9E);
MakeCode(0x4A8BAF);
MakeCode(0x4A8BB4);
MakeFunction(0x4A8AA4, 0x4A8BBD);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4A8BC8, -1);
MakeDword(0x4A8BC4);
MakeDword(0x4A8BC0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4A8BD4, -1);
MakeDword(0x4A8BD0);
MakeDword(0x4A8BCC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4A8BE0, -1);
MakeDword(0x4A8BDC);
MakeDword(0x4A8BD8);
MakeCode(0x4A8BE8);
MakeComm(0x4A8C1D, "'TdfsColorButton.sub_004A8A64'");
MakeComm(0x4A8C29, "'TdfsColorButton.?f278:string'");
MakeComm(0x4A8C36, "'TdfsColorButton.?f280:byte'");
MakeComm(0x4A8C40, "'TdfsColorButton.CustomColorsKey:string'");
MakeComm(0x4A8C50, "'TdfsColorButton.CustomColorsKey:string'");
MakeComm(0x4A8C5D, "'TRegIniFile.Create'");
MakeComm(0x4A8C7C, "'TdfsColorButton.?f278:string'");
MakeCode(0x4A8C8F);
MakeCode(0x4A8C9C);
MakeCode(0x4A8CA5);
MakeCode(0x4A8CAA);
MakeCode(0x4A8CD5);
MakeComm(0x4A8CFB, "'TdfsColorButton.CustomColors:TColorArrayClass'");
MakeCode(0x4A8D1F);
MakeCode(0x4A8D2B);
MakeCode(0x4A8D41);
MakeCode(0x4A8D4E);
MakeCode(0x4A8D64);
MakeCode(0x4A8D69);
MakeFunction(0x4A8BE8, 0x4A8D72);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4A8D7C, -1);
MakeDword(0x4A8D78);
MakeDword(0x4A8D74);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4A8D8C, -1);
MakeDword(0x4A8D88);
MakeDword(0x4A8D84);
MakeCode(0x4A8D90);
MakeComm(0x4A8D91, "'TdfsColorButton.?f2AA:word'");
MakeComm(0x4A8D9F, "'TdfsColorButton.?f2AC:dword'");
MakeComm(0x4A8DA5, "'TdfsColorButton.OnColorChange'");
MakeCode(0x4A8DAB);
MakeFunction(0x4A8D90, 0x4A8DAD);
MakeUnkn(0x4A8DB0, 1);
MakeNameEx(0x4A8DB0, "TdfsColorButton.SetFlat", 0x20);
MakeComm(0x4A8DB0, "'procedure TdfsColorButton.SetFlat(Value:Boolean);'");
MakeCode(0x4A8DB0);
MakeComm(0x4A8DB0, "'TdfsColorButton.Flat:Boolean'");
MakeComm(0x4A8DB8, "'TdfsColorButton.Flat:Boolean'");
MakeComm(0x4A8DC0, "'TWinControl.Invalidate'");
MakeFunction(0x4A8DB0, 0x4A8DC7);
MakeUnkn(0x4A8DC8, 1);
MakeNameEx(0x4A8DC8, "TdfsColorButton.CMMouseEnter", 0x20);
MakeComm(0x4A8DC8, "'procedure TdfsColorButton.CMMouseEnter(var Message:TMessage);'");
MakeCode(0x4A8DC8);
MakeComm(0x4A8DC8, "'TdfsColorButton.Flat:Boolean'");
MakeComm(0x4A8DD1, "'TdfsColorButton.?f2B8:byte'");
MakeComm(0x4A8DDC, "'TWinControl.Invalidate'");
MakeFunction(0x4A8DC8, 0x4A8DE3);
MakeUnkn(0x4A8DE4, 1);
MakeNameEx(0x4A8DE4, "TdfsColorButton.CMMouseLeave", 0x20);
MakeComm(0x4A8DE4, "'procedure TdfsColorButton.CMMouseLeave(var Message:TMessage);'");
MakeCode(0x4A8DE4);
MakeComm(0x4A8DE4, "'TdfsColorButton.Flat:Boolean'");
MakeComm(0x4A8DED, "'TdfsColorButton.?f2B8:byte'");
MakeComm(0x4A8DF8, "'TWinControl.Invalidate'");
MakeFunction(0x4A8DE4, 0x4A8DFF);
MakeUnkn(0x4A8E00, 1);
MakeNameEx(0x4A8E00, "TdfsColorButton.GetVersion", 0x20);
MakeComm(0x4A8E00, "'procedure TdfsColorButton.GetVersion(?:?);'");
MakeCode(0x4A8E00);
MakeFunction(0x4A8E00, 0x4A8E11);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4A8E1C, -1);
MakeDword(0x4A8E18);
MakeDword(0x4A8E14);
MakeUnkn(0x4A8E34, 1);
MakeNameEx(0x4A8E34, "TdfsColorButton.SetVersion", 0x20);
MakeComm(0x4A8E34, "'procedure TdfsColorButton.SetVersion(Value:string);'");
MakeCode(0x4A8E34);
MakeFunction(0x4A8E34, 0x4A8E35);
MakeUnkn(0x4A8E38, 1);
MakeNameEx(0x4A8E38, "VMT_4A8E38_TFontSelectionFrame", 0);
MakeDword(0x4A8E38);
MakeDword(0x4A8E3C);
MakeDword(0x4A8E40);
MakeDword(0x4A8E44);
MakeDword(0x4A8E48);
MakeDword(0x4A8E4C);
MakeUnkn(0x4A8F68, 1);
MakeNameEx(0x4A8F68, "TFontSelectionFrame_FieldTable", 0);
MakeWord(0x4A8F68);
MakeDword(0x4A8F6A);
MakeWord(0x4A8FC0);
MakeDword(0x4A8FC2);
MakeDword(0x4A8FC6);
MakeDword(0x4A8FCA);
MakeDword(0x4A8F6E);
MakeWord(0x4A8F72);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A8F74, 0x4A8F7E);
MakeDword(0x4A8F7E);
MakeWord(0x4A8F82);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A8F84, 0x4A8F8B);
MakeDword(0x4A8F8B);
MakeWord(0x4A8F8F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A8F91, 0x4A8F9C);
MakeDword(0x4A8F9C);
MakeWord(0x4A8FA0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A8FA2, 0x4A8FAC);
MakeDword(0x4A8E50);
MakeDword(0x4A8E54);
MakeDword(0x4A8E58);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A8FAC, 0x4A8FC0);
MakeDword(0x4A8E5C);
MakeDword(0x4A8E60);
MakeDword(0x4A8E64);
MakeDword(0x4A8E68);
MakeDword(0x4A8E6C);
MakeDword(0x4A8E70);
MakeDword(0x4A8E74);
MakeDword(0x4A8E78);
MakeDword(0x4A8E7C);
MakeDword(0x4A8E80);
MakeComm(0x4A8E84, "'+0'");
MakeDword(0x4A8E84);
MakeComm(0x4A8E88, "'+4'");
MakeDword(0x4A8E88);
MakeComm(0x4A8E8C, "'+8'");
MakeDword(0x4A8E8C);
MakeComm(0x4A8E90, "'+C'");
MakeDword(0x4A8E90);
MakeComm(0x4A8E94, "'+10'");
MakeDword(0x4A8E94);
MakeComm(0x4A8E98, "'+14'");
MakeDword(0x4A8E98);
MakeComm(0x4A8E9C, "'+18'");
MakeDword(0x4A8E9C);
MakeComm(0x4A8EA0, "'+1C'");
MakeDword(0x4A8EA0);
MakeComm(0x4A8EA4, "'+20'");
MakeDword(0x4A8EA4);
MakeComm(0x4A8EA8, "'+24'");
MakeDword(0x4A8EA8);
MakeComm(0x4A8EAC, "'+28'");
MakeDword(0x4A8EAC);
MakeComm(0x4A8EB0, "'+2C'");
MakeDword(0x4A8EB0);
MakeComm(0x4A8EB4, "'+30'");
MakeDword(0x4A8EB4);
MakeComm(0x4A8EB8, "'+34'");
MakeDword(0x4A8EB8);
MakeComm(0x4A8EBC, "'+38'");
MakeDword(0x4A8EBC);
MakeComm(0x4A8EC0, "'+3C'");
MakeDword(0x4A8EC0);
MakeComm(0x4A8EC4, "'+40'");
MakeDword(0x4A8EC4);
MakeComm(0x4A8EC8, "'+44'");
MakeDword(0x4A8EC8);
MakeComm(0x4A8ECC, "'+48'");
MakeDword(0x4A8ECC);
MakeComm(0x4A8ED0, "'+4C'");
MakeDword(0x4A8ED0);
MakeComm(0x4A8ED4, "'+50'");
MakeDword(0x4A8ED4);
MakeComm(0x4A8ED8, "'+54'");
MakeDword(0x4A8ED8);
MakeComm(0x4A8EDC, "'+58'");
MakeDword(0x4A8EDC);
MakeComm(0x4A8EE0, "'+5C'");
MakeDword(0x4A8EE0);
MakeComm(0x4A8EE4, "'+60'");
MakeDword(0x4A8EE4);
MakeComm(0x4A8EE8, "'+64'");
MakeDword(0x4A8EE8);
MakeComm(0x4A8EEC, "'+68'");
MakeDword(0x4A8EEC);
MakeComm(0x4A8EF0, "'+6C'");
MakeDword(0x4A8EF0);
MakeComm(0x4A8EF4, "'+70'");
MakeDword(0x4A8EF4);
MakeComm(0x4A8EF8, "'+74'");
MakeDword(0x4A8EF8);
MakeComm(0x4A8EFC, "'+78'");
MakeDword(0x4A8EFC);
MakeComm(0x4A8F00, "'+7C'");
MakeDword(0x4A8F00);
MakeComm(0x4A8F04, "'+80'");
MakeDword(0x4A8F04);
MakeComm(0x4A8F08, "'+84'");
MakeDword(0x4A8F08);
MakeComm(0x4A8F0C, "'+88'");
MakeDword(0x4A8F0C);
MakeComm(0x4A8F10, "'+8C'");
MakeDword(0x4A8F10);
MakeComm(0x4A8F14, "'+90'");
MakeDword(0x4A8F14);
MakeComm(0x4A8F18, "'+94'");
MakeDword(0x4A8F18);
MakeComm(0x4A8F1C, "'+98'");
MakeDword(0x4A8F1C);
MakeComm(0x4A8F20, "'+9C'");
MakeDword(0x4A8F20);
MakeComm(0x4A8F24, "'+A0'");
MakeDword(0x4A8F24);
MakeComm(0x4A8F28, "'+A4'");
MakeDword(0x4A8F28);
MakeComm(0x4A8F2C, "'+A8'");
MakeDword(0x4A8F2C);
MakeComm(0x4A8F30, "'+AC'");
MakeDword(0x4A8F30);
MakeComm(0x4A8F34, "'+B0'");
MakeDword(0x4A8F34);
MakeComm(0x4A8F38, "'+B4'");
MakeDword(0x4A8F38);
MakeComm(0x4A8F3C, "'+B8'");
MakeDword(0x4A8F3C);
MakeComm(0x4A8F40, "'+BC'");
MakeDword(0x4A8F40);
MakeComm(0x4A8F44, "'+C0'");
MakeDword(0x4A8F44);
MakeComm(0x4A8F48, "'+C4'");
MakeDword(0x4A8F48);
MakeComm(0x4A8F4C, "'+C8'");
MakeDword(0x4A8F4C);
MakeComm(0x4A8F50, "'+CC'");
MakeDword(0x4A8F50);
MakeComm(0x4A8F54, "'+D0'");
MakeDword(0x4A8F54);
MakeComm(0x4A8F58, "'+D4'");
MakeDword(0x4A8F58);
MakeComm(0x4A8F5C, "'+D8'");
MakeDword(0x4A8F5C);
MakeComm(0x4A8F60, "'+DC'");
MakeDword(0x4A8F60);
MakeComm(0x4A8F64, "'+E0'");
MakeDword(0x4A8F64);
MakeUnkn(0x4A8FD0, 1);
MakeNameEx(0x4A8FD0, "RTTI_4A8FD0_Class_TFontSelectionFrame", 0);
MakeDword(0x4A8FD0);
MakeUnkn(0x4A8FD4, 1);
MakeNameEx(0x4A8FD4, "", 0);
MakeByte(0x4A8FD4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A8FD5, 0x4A8FE9);
MakeDword(0x4A8FE9);
MakeDword(0x4A8FED);
MakeWord(0x4A8FF1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A8FF3, 0x4A8FFD);
MakeWord(0x4A8FFD);
MakeUnkn(0x4A9000, 1);
MakeNameEx(0x4A9000, "TFontSelectionFrame.Loaded", 0x20);
MakeComm(0x4A9000, "'procedure TFontSelectionFrame.Loaded;'");
MakeCode(0x4A9000);
MakeComm(0x4A9018, "'TFontSelectionFrame.NameCombo:TComboBox'");
MakeComm(0x4A901E, "'TComboBox.FItems:TStrings'");
MakeComm(0x4A9026, "'TStrings.Assign'");
MakeComm(0x4A9029, "'TFontSelectionFrame.NameCombo:TComboBox'");
MakeComm(0x4A902F, "'TComboBox.FItems:TStrings'");
MakeComm(0x4A903C, "'TStrings.IndexOf'");
MakeComm(0x4A9044, "'TFontSelectionFrame.NameCombo:TComboBox'");
MakeComm(0x4A904A, "'TComboBox.FItems:TStrings'");
MakeComm(0x4A9053, "'TStrings.Delete'");
MakeCode(0x4A9056);
MakeFunction(0x4A9000, 0x4A9058);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4A9060, -1);
MakeDword(0x4A905C);
MakeDword(0x4A9058);
MakeCode(0x4A9068);
MakeCode(0x4A90DE);
MakeCode(0x4A910E);
MakeCode(0x4A9160);
MakeCode(0x4A916D);
MakeCode(0x4A917A);
MakeCode(0x4A9198);
MakeCode(0x4A919D);
MakeFunction(0x4A9068, 0x4A91A6);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4A91B0, -1);
MakeDword(0x4A91AC);
MakeDword(0x4A91A8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4A91FC, -1);
MakeDword(0x4A91F8);
MakeDword(0x4A91F4);
MakeCode(0x4A9228);
MakeCode(0x4A9267);
MakeCode(0x4A9274);
MakeCode(0x4A927D);
MakeCode(0x4A9282);
MakeFunction(0x4A9228, 0x4A9289);
MakeUnkn(0x4A928C, 1);
MakeNameEx(0x4A928C, "VMT_4A928C_TSelectDirCallback", 0);
MakeDword(0x4A928C);
MakeDword(0x4A9290);
MakeDword(0x4A9294);
MakeDword(0x4A9298);
MakeUnkn(0x4A92D8, 1);
MakeNameEx(0x4A92D8, "TSelectDirCallback_InitTable", 0);
MakeByte(0x4A92D8);
MakeByte(0x4A92D9);
MakeDword(0x4A92DA);
MakeDword(0x4A92DE);
MakeDword(0x4A92E2);
MakeDword(0x4A92E6);
MakeDword(0x4A929C);
MakeDword(0x4A92A0);
MakeDword(0x4A92A4);
MakeDword(0x4A92A8);
MakeDword(0x4A92AC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A92EA, 0x4A92FD);
MakeDword(0x4A92B0);
MakeDword(0x4A92B4);
MakeDword(0x4A92B8);
MakeDword(0x4A92BC);
MakeDword(0x4A92C0);
MakeDword(0x4A92C4);
MakeDword(0x4A92C8);
MakeDword(0x4A92CC);
MakeDword(0x4A92D0);
MakeDword(0x4A92D4);
MakeCode(0x4A9300);
MakeFunction(0x4A9300, 0x4A931A);
MakeCode(0x4A931C);
MakeCode(0x4A935F);
MakeComm(0x4A93DE, "'TApplication.FHandle:HWND'");
MakeCode(0x4A93EB);
MakeCode(0x4A93FA);
MakeComm(0x4A9401, "'TApplication.FHandle:HWND'");
MakeCode(0x4A9409);
MakeCode(0x4A9413);
MakeCode(0x4A943F);
MakeCode(0x4A944C);
MakeCode(0x4A9456);
MakeCode(0x4A9463);
MakeCode(0x4A9470);
MakeCode(0x4A947A);
MakeComm(0x4A948D, "'TSelectDirCallback.Create'");
MakeCode(0x4A94C8);
MakeCode(0x4A9504);
MakeCode(0x4A9511);
MakeCode(0x4A9523);
MakeCode(0x4A9528);
MakeCode(0x4A952A);
MakeCode(0x4A9537);
MakeCode(0x4A9542);
MakeCode(0x4A9543);
MakeCode(0x4A9548);
MakeCode(0x4A954A);
MakeCode(0x4A9557);
MakeCode(0x4A9560);
MakeCode(0x4A9565);
MakeCode(0x4A959A);
MakeCode(0x4A95A7);
MakeCode(0x4A95B5);
MakeCode(0x4A95BA);
MakeCode(0x4A95BC);
MakeCode(0x4A95C9);
MakeCode(0x4A95DA);
MakeCode(0x4A95DF);
MakeFunction(0x4A931C, 0x4A95EE);
MakeCode(0x4A95F0);
MakeFunction(0x4A95F0, 0x4A95F6);
MakeUnkn(0x4A95F8, 1);
MakeNameEx(0x4A95F8, "TSelectDirCallback.Create", 0x20);
MakeComm(0x4A95F8, "'constructor TSelectDirCallback.Create;'");
MakeCode(0x4A95F8);
MakeCode(0x4A9607);
MakeComm(0x4A9616, "'TSelectDirCallback...:string'");
MakeCode(0x4A9635);
MakeFunction(0x4A95F8, 0x4A963B);
MakeCode(0x4A963C);
MakeComm(0x4A9674, "'TApplication.FMainForm:TForm'");
MakeCode(0x4A96B7);
MakeCode(0x4A96CE);
MakeCode(0x4A96FB);
MakeComm(0x4A972D, "'0x4'");
MakeCode(0x4A9742);
MakeCode(0x4A974F);
MakeCode(0x4A975D);
MakeCode(0x4A9762);
MakeFunction(0x4A963C, 0x4A976F);
MakeByte(0x4A9770);
MakeUnkn(0x4A9770, 1);
MakeNameEx(0x4A9770, "gvar_004A9770", 0);
MakeUnkn(0x4A9774, 1);
MakeNameEx(0x4A9774, "VMT_4A9774_TConfigForm", 0);
MakeDword(0x4A9774);
MakeDword(0x4A9778);
MakeDword(0x4A977C);
MakeDword(0x4A9780);
MakeUnkn(0x4A98C4, 1);
MakeNameEx(0x4A98C4, "TConfigForm_InitTable", 0);
MakeByte(0x4A98C4);
MakeByte(0x4A98C5);
MakeDword(0x4A98C6);
MakeDword(0x4A98CA);
MakeDword(0x4A98CE);
MakeDword(0x4A98D2);
MakeDword(0x4A98D6);
MakeDword(0x4A98DA);
MakeDword(0x4A98DE);
MakeDword(0x4A98E2);
MakeDword(0x4A9784);
MakeDword(0x4A9788);
MakeUnkn(0x4A98E6, 1);
MakeNameEx(0x4A98E6, "TConfigForm_FieldTable", 0);
MakeWord(0x4A98E6);
MakeDword(0x4A98E8);
MakeWord(0x4A9FA3);
MakeDword(0x4A9FA5);
MakeDword(0x4A9FA9);
MakeDword(0x4A9FAD);
MakeDword(0x4A9FB1);
MakeDword(0x4A9FB5);
MakeDword(0x4A9FB9);
MakeDword(0x4A9FBD);
MakeDword(0x4A9FC1);
MakeDword(0x4A9FC5);
MakeDword(0x4A9FC9);
MakeDword(0x4A9FCD);
MakeDword(0x4A9FD1);
MakeDword(0x4A9FD5);
MakeDword(0x4A98EC);
MakeWord(0x4A98F0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A98F2, 0x4A98FB);
MakeDword(0x4A98FB);
MakeWord(0x4A98FF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9901, 0x4A990E);
MakeDword(0x4A990E);
MakeWord(0x4A9912);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9914, 0x4A9920);
MakeDword(0x4A9920);
MakeWord(0x4A9924);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9926, 0x4A9930);
MakeDword(0x4A9930);
MakeWord(0x4A9934);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9936, 0x4A9940);
MakeDword(0x4A9940);
MakeWord(0x4A9944);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9946, 0x4A9951);
MakeDword(0x4A9951);
MakeWord(0x4A9955);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9957, 0x4A995E);
MakeDword(0x4A995E);
MakeWord(0x4A9962);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9964, 0x4A9973);
MakeDword(0x4A9973);
MakeWord(0x4A9977);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9979, 0x4A9980);
MakeDword(0x4A9980);
MakeWord(0x4A9984);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9986, 0x4A998D);
MakeDword(0x4A998D);
MakeWord(0x4A9991);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9993, 0x4A99A4);
MakeDword(0x4A99A4);
MakeWord(0x4A99A8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A99AA, 0x4A99BE);
MakeDword(0x4A99BE);
MakeWord(0x4A99C2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A99C4, 0x4A99CB);
MakeDword(0x4A99CB);
MakeWord(0x4A99CF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A99D1, 0x4A99E1);
MakeDword(0x4A99E1);
MakeWord(0x4A99E5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A99E7, 0x4A99EE);
MakeDword(0x4A99EE);
MakeWord(0x4A99F2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A99F4, 0x4A9A07);
MakeDword(0x4A9A07);
MakeWord(0x4A9A0B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9A0D, 0x4A9A25);
MakeDword(0x4A9A25);
MakeWord(0x4A9A29);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9A2B, 0x4A9A32);
MakeDword(0x4A9A32);
MakeWord(0x4A9A36);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9A38, 0x4A9A3F);
MakeDword(0x4A9A3F);
MakeWord(0x4A9A43);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9A45, 0x4A9A5A);
MakeDword(0x4A9A5A);
MakeWord(0x4A9A5E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9A60, 0x4A9A67);
MakeDword(0x4A9A67);
MakeWord(0x4A9A6B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9A6D, 0x4A9A83);
MakeDword(0x4A9A83);
MakeWord(0x4A9A87);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9A89, 0x4A9A93);
MakeDword(0x4A9A93);
MakeWord(0x4A9A97);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9A99, 0x4A9AA4);
MakeDword(0x4A9AA4);
MakeWord(0x4A9AA8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9AAA, 0x4A9AB1);
MakeDword(0x4A9AB1);
MakeWord(0x4A9AB5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9AB7, 0x4A9AC5);
MakeDword(0x4A9AC5);
MakeWord(0x4A9AC9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9ACB, 0x4A9AD6);
MakeDword(0x4A9AD6);
MakeWord(0x4A9ADA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9ADC, 0x4A9AE6);
MakeDword(0x4A9AE6);
MakeWord(0x4A9AEA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9AEC, 0x4A9AF6);
MakeDword(0x4A9AF6);
MakeWord(0x4A9AFA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9AFC, 0x4A9B0C);
MakeDword(0x4A9B0C);
MakeWord(0x4A9B10);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9B12, 0x4A9B26);
MakeDword(0x4A9B26);
MakeWord(0x4A9B2A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9B2C, 0x4A9B3B);
MakeDword(0x4A9B3B);
MakeWord(0x4A9B3F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9B41, 0x4A9B50);
MakeDword(0x4A9B50);
MakeWord(0x4A9B54);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9B56, 0x4A9B5E);
MakeDword(0x4A9B5E);
MakeWord(0x4A9B62);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9B64, 0x4A9B7D);
MakeDword(0x4A9B7D);
MakeWord(0x4A9B81);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9B83, 0x4A9B93);
MakeDword(0x4A9B93);
MakeWord(0x4A9B97);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9B99, 0x4A9BA3);
MakeDword(0x4A9BA3);
MakeWord(0x4A9BA7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9BA9, 0x4A9BB3);
MakeDword(0x4A9BB3);
MakeWord(0x4A9BB7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9BB9, 0x4A9BC1);
MakeDword(0x4A9BC1);
MakeWord(0x4A9BC5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9BC7, 0x4A9BD8);
MakeDword(0x4A9BD8);
MakeWord(0x4A9BDC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9BDE, 0x4A9BEF);
MakeDword(0x4A9BEF);
MakeWord(0x4A9BF3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9BF5, 0x4A9C06);
MakeDword(0x4A9C06);
MakeWord(0x4A9C0A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9C0C, 0x4A9C14);
MakeDword(0x4A9C14);
MakeWord(0x4A9C18);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9C1A, 0x4A9C29);
MakeDword(0x4A9C29);
MakeWord(0x4A9C2D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9C2F, 0x4A9C48);
MakeDword(0x4A9C48);
MakeWord(0x4A9C4C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9C4E, 0x4A9C58);
MakeDword(0x4A9C58);
MakeWord(0x4A9C5C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9C5E, 0x4A9C68);
MakeDword(0x4A9C68);
MakeWord(0x4A9C6C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9C6E, 0x4A9C76);
MakeDword(0x4A9C76);
MakeWord(0x4A9C7A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9C7C, 0x4A9C88);
MakeDword(0x4A9C88);
MakeWord(0x4A9C8C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9C8E, 0x4A9C9F);
MakeDword(0x4A9C9F);
MakeWord(0x4A9CA3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9CA5, 0x4A9CB8);
MakeDword(0x4A9CB8);
MakeWord(0x4A9CBC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9CBE, 0x4A9CC5);
MakeDword(0x4A9CC5);
MakeWord(0x4A9CC9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9CCB, 0x4A9CDE);
MakeDword(0x4A9CDE);
MakeWord(0x4A9CE2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9CE4, 0x4A9CF8);
MakeDword(0x4A9CF8);
MakeWord(0x4A9CFC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9CFE, 0x4A9D08);
MakeDword(0x4A9D08);
MakeWord(0x4A9D0C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9D0E, 0x4A9D18);
MakeDword(0x4A9D18);
MakeWord(0x4A9D1C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9D1E, 0x4A9D2B);
MakeDword(0x4A9D2B);
MakeWord(0x4A9D2F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9D31, 0x4A9D43);
MakeDword(0x4A9D43);
MakeWord(0x4A9D47);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9D49, 0x4A9D5B);
MakeDword(0x4A9D5B);
MakeWord(0x4A9D5F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9D61, 0x4A9D7B);
MakeDword(0x4A9D7B);
MakeWord(0x4A9D7F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9D81, 0x4A9D95);
MakeDword(0x4A9D95);
MakeWord(0x4A9D99);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9D9B, 0x4A9DB0);
MakeDword(0x4A9DB0);
MakeWord(0x4A9DB4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9DB6, 0x4A9DCF);
MakeDword(0x4A9DCF);
MakeWord(0x4A9DD3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9DD5, 0x4A9DE6);
MakeDword(0x4A9DE6);
MakeWord(0x4A9DEA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9DEC, 0x4A9DFC);
MakeDword(0x4A9DFC);
MakeWord(0x4A9E00);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9E02, 0x4A9E1A);
MakeDword(0x4A978C);
MakeUnkn(0x4A9E1A, 1);
MakeNameEx(0x4A9E1A, "TConfigForm_MethodTable", 0);
MakeWord(0x4A9E1A);
MakeWord(0x4A9E1C);
MakeDword(0x4A9E1E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9E22, 0x4A9E2E);
MakeWord(0x4A9E2E);
MakeDword(0x4A9E30);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9E34, 0x4A9E3F);
MakeWord(0x4A9E3F);
MakeDword(0x4A9E41);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9E45, 0x4A9E55);
MakeWord(0x4A9E55);
MakeDword(0x4A9E57);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9E5B, 0x4A9E72);
MakeWord(0x4A9E72);
MakeDword(0x4A9E74);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9E78, 0x4A9E90);
MakeWord(0x4A9E90);
MakeDword(0x4A9E92);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9E96, 0x4A9EAC);
MakeWord(0x4A9EAC);
MakeDword(0x4A9EAE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9EB2, 0x4A9EC3);
MakeWord(0x4A9EC3);
MakeDword(0x4A9EC5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9EC9, 0x4A9ED2);
MakeWord(0x4A9ED2);
MakeDword(0x4A9ED4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9ED8, 0x4A9EF0);
MakeWord(0x4A9EF0);
MakeDword(0x4A9EF2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9EF6, 0x4A9F0D);
MakeWord(0x4A9F0D);
MakeDword(0x4A9F0F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9F13, 0x4A9F1E);
MakeWord(0x4A9F1E);
MakeDword(0x4A9F20);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9F24, 0x4A9F33);
MakeWord(0x4A9F33);
MakeDword(0x4A9F35);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9F39, 0x4A9F58);
MakeWord(0x4A9F58);
MakeDword(0x4A9F5A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9F5E, 0x4A9F74);
MakeWord(0x4A9F74);
MakeDword(0x4A9F76);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9F7A, 0x4A9F97);
MakeDword(0x4A9790);
MakeDword(0x4A9794);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9F97, 0x4A9FA3);
MakeDword(0x4A9798);
MakeDword(0x4A979C);
MakeDword(0x4A97A0);
MakeDword(0x4A97A4);
MakeDword(0x4A97A8);
MakeDword(0x4A97AC);
MakeDword(0x4A97B0);
MakeDword(0x4A97B4);
MakeDword(0x4A97B8);
MakeDword(0x4A97BC);
MakeComm(0x4A97C0, "'+0'");
MakeDword(0x4A97C0);
MakeComm(0x4A97C4, "'+4'");
MakeDword(0x4A97C4);
MakeComm(0x4A97C8, "'+8'");
MakeDword(0x4A97C8);
MakeComm(0x4A97CC, "'+C'");
MakeDword(0x4A97CC);
MakeComm(0x4A97D0, "'+10'");
MakeDword(0x4A97D0);
MakeComm(0x4A97D4, "'+14'");
MakeDword(0x4A97D4);
MakeComm(0x4A97D8, "'+18'");
MakeDword(0x4A97D8);
MakeComm(0x4A97DC, "'+1C'");
MakeDword(0x4A97DC);
MakeComm(0x4A97E0, "'+20'");
MakeDword(0x4A97E0);
MakeComm(0x4A97E4, "'+24'");
MakeDword(0x4A97E4);
MakeComm(0x4A97E8, "'+28'");
MakeDword(0x4A97E8);
MakeComm(0x4A97EC, "'+2C'");
MakeDword(0x4A97EC);
MakeComm(0x4A97F0, "'+30'");
MakeDword(0x4A97F0);
MakeComm(0x4A97F4, "'+34'");
MakeDword(0x4A97F4);
MakeComm(0x4A97F8, "'+38'");
MakeDword(0x4A97F8);
MakeComm(0x4A97FC, "'+3C'");
MakeDword(0x4A97FC);
MakeComm(0x4A9800, "'+40'");
MakeDword(0x4A9800);
MakeComm(0x4A9804, "'+44'");
MakeDword(0x4A9804);
MakeComm(0x4A9808, "'+48'");
MakeDword(0x4A9808);
MakeComm(0x4A980C, "'+4C'");
MakeDword(0x4A980C);
MakeComm(0x4A9810, "'+50'");
MakeDword(0x4A9810);
MakeComm(0x4A9814, "'+54'");
MakeDword(0x4A9814);
MakeComm(0x4A9818, "'+58'");
MakeDword(0x4A9818);
MakeComm(0x4A981C, "'+5C'");
MakeDword(0x4A981C);
MakeComm(0x4A9820, "'+60'");
MakeDword(0x4A9820);
MakeComm(0x4A9824, "'+64'");
MakeDword(0x4A9824);
MakeComm(0x4A9828, "'+68'");
MakeDword(0x4A9828);
MakeComm(0x4A982C, "'+6C'");
MakeDword(0x4A982C);
MakeComm(0x4A9830, "'+70'");
MakeDword(0x4A9830);
MakeComm(0x4A9834, "'+74'");
MakeDword(0x4A9834);
MakeComm(0x4A9838, "'+78'");
MakeDword(0x4A9838);
MakeComm(0x4A983C, "'+7C'");
MakeDword(0x4A983C);
MakeComm(0x4A9840, "'+80'");
MakeDword(0x4A9840);
MakeComm(0x4A9844, "'+84'");
MakeDword(0x4A9844);
MakeComm(0x4A9848, "'+88'");
MakeDword(0x4A9848);
MakeComm(0x4A984C, "'+8C'");
MakeDword(0x4A984C);
MakeComm(0x4A9850, "'+90'");
MakeDword(0x4A9850);
MakeComm(0x4A9854, "'+94'");
MakeDword(0x4A9854);
MakeComm(0x4A9858, "'+98'");
MakeDword(0x4A9858);
MakeComm(0x4A985C, "'+9C'");
MakeDword(0x4A985C);
MakeComm(0x4A9860, "'+A0'");
MakeDword(0x4A9860);
MakeComm(0x4A9864, "'+A4'");
MakeDword(0x4A9864);
MakeComm(0x4A9868, "'+A8'");
MakeDword(0x4A9868);
MakeComm(0x4A986C, "'+AC'");
MakeDword(0x4A986C);
MakeComm(0x4A9870, "'+B0'");
MakeDword(0x4A9870);
MakeComm(0x4A9874, "'+B4'");
MakeDword(0x4A9874);
MakeComm(0x4A9878, "'+B8'");
MakeDword(0x4A9878);
MakeComm(0x4A987C, "'+BC'");
MakeDword(0x4A987C);
MakeComm(0x4A9880, "'+C0'");
MakeDword(0x4A9880);
MakeComm(0x4A9884, "'+C4'");
MakeDword(0x4A9884);
MakeComm(0x4A9888, "'+C8'");
MakeDword(0x4A9888);
MakeComm(0x4A988C, "'+CC'");
MakeDword(0x4A988C);
MakeComm(0x4A9890, "'+D0'");
MakeDword(0x4A9890);
MakeComm(0x4A9894, "'+D4'");
MakeDword(0x4A9894);
MakeComm(0x4A9898, "'+D8'");
MakeDword(0x4A9898);
MakeComm(0x4A989C, "'+DC'");
MakeDword(0x4A989C);
MakeComm(0x4A98A0, "'+E0'");
MakeDword(0x4A98A0);
MakeComm(0x4A98A4, "'+E4'");
MakeDword(0x4A98A4);
MakeComm(0x4A98A8, "'+E8'");
MakeDword(0x4A98A8);
MakeComm(0x4A98AC, "'+EC'");
MakeDword(0x4A98AC);
MakeComm(0x4A98B0, "'+F0'");
MakeDword(0x4A98B0);
MakeComm(0x4A98B4, "'+F4'");
MakeDword(0x4A98B4);
MakeComm(0x4A98B8, "'+F8'");
MakeDword(0x4A98B8);
MakeComm(0x4A98BC, "'+FC'");
MakeDword(0x4A98BC);
MakeComm(0x4A98C0, "'+100'");
MakeDword(0x4A98C0);
MakeUnkn(0x4A9FDC, 1);
MakeNameEx(0x4A9FDC, "RTTI_4A9FDC_Class_TConfigForm", 0);
MakeDword(0x4A9FDC);
MakeUnkn(0x4A9FE0, 1);
MakeNameEx(0x4A9FE0, "", 0);
MakeByte(0x4A9FE0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9FE1, 0x4A9FED);
MakeDword(0x4A9FED);
MakeDword(0x4A9FF1);
MakeWord(0x4A9FF5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4A9FF7, 0x4A9FFE);
MakeWord(0x4A9FFE);
MakeCode(0x4AA000);
MakeCode(0x4AA059);
MakeCode(0x4AA066);
MakeCode(0x4AA06F);
MakeCode(0x4AA074);
MakeFunction(0x4AA000, 0x4AA07B);
MakeUnkn(0x4AA07C, 1);
MakeNameEx(0x4AA07C, "TConfigForm.FormCreate", 0x20);
MakeComm(0x4AA07C, "'procedure TConfigForm.FormCreate(Sender:TObject);'");
MakeCode(0x4AA07C);
MakeComm(0x4AA0AB, "'TRegIniFile.Create'");
MakeComm(0x4AA0C4, "'TConfigForm.SchemeCombo:TComboBox'");
MakeComm(0x4AA0CA, "'TComboBox.FItems:TStrings'");
MakeCode(0x4AA0D8);
MakeCode(0x4AA0E5);
MakeCode(0x4AA0EE);
MakeCode(0x4AA0F3);
MakeComm(0x4AA0F8, "'TConfigForm.SchemeCombo:TComboBox'");
MakeComm(0x4AA0FE, "'TComboBox.FItems:TStrings'");
MakeComm(0x4AA10D, "'TStrings.Insert'");
MakeCode(0x4AA129);
MakeCode(0x4AA136);
MakeCode(0x4AA144);
MakeCode(0x4AA176);
MakeCode(0x4AA180);
MakeComm(0x4AA183, "'TConfigForm.MetroDrumCombo:TComboBox'");
MakeComm(0x4AA189, "'TComboBox.FItems:TStrings'");
MakeComm(0x4AA194, "'TStrings.Add'");
MakeCode(0x4AA1A3);
MakeCode(0x4AA1B0);
MakeCode(0x4AA1B9);
MakeCode(0x4AA1BE);
MakeFunction(0x4AA07C, 0x4AA1C6);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4AA1D0, -1);
MakeDword(0x4AA1CC);
MakeDword(0x4AA1C8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4AA208, -1);
MakeDword(0x4AA204);
MakeDword(0x4AA200);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4AA21C, -1);
MakeDword(0x4AA218);
MakeDword(0x4AA214);
MakeUnkn(0x4AA224, 1);
MakeNameEx(0x4AA224, "TConfigForm.FormCloseQuery", 0x20);
MakeComm(0x4AA224, "'procedure TConfigForm.FormCloseQuery(Sender:TObject; var CanClose:Boolean);'");
MakeCode(0x4AA224);
MakeComm(0x4AA224, "'TConfigForm.FModalResult:TModalResult'");
MakeFunction(0x4AA224, 0x4AA233);
MakeUnkn(0x4AA234, 1);
MakeNameEx(0x4AA234, "TConfigForm.FormHide", 0x20);
MakeComm(0x4AA234, "'procedure TConfigForm.FormHide(Sender:TObject);'");
MakeCode(0x4AA234);
MakeComm(0x4AA239, "'TConfigForm.?f469:byte'");
MakeComm(0x4AA255, "'TConfigForm.?f46C:?'");
MakeCode(0x4AA26D);
MakeComm(0x4AA282, "'TConfigForm.?f4B8:TTabFontSettings'");
MakeCode(0x4AA2A5);
MakeFunction(0x4AA234, 0x4AA2A9);
MakeCode(0x4AA2AC);
MakeCode(0x4AA39A);
MakeCode(0x4AA3A7);
MakeCode(0x4AA3B2);
MakeCode(0x4AA3B7);
MakeFunction(0x4AA2AC, 0x4AA3BC);
MakeCode(0x4AA3BC);
MakeFunction(0x4AA3BC, 0x4AA45F);
MakeUnkn(0x4AA460, 1);
MakeNameEx(0x4AA460, "TConfigForm.ColorChange", 0x20);
MakeComm(0x4AA460, "'procedure TConfigForm.ColorChange;'");
MakeCode(0x4AA460);
MakeComm(0x4AA463, "'TConfigForm.?f468:byte'");
MakeComm(0x4AA476, "'TConfigForm.SchemeCombo:TComboBox'");
MakeComm(0x4AA47E, "'TCustomCombo.SetItemIndex'");
MakeComm(0x4AA484, "'TConfigForm.?f508:string'");
MakeComm(0x4AA491, "'TConfigForm.ColorPreviewButton:TButton'");
MakeComm(0x4AA499, "'TControl.SetEnabled'");
MakeCode(0x4AA49C);
MakeFunction(0x4AA460, 0x4AA49E);
MakeUnkn(0x4AA4A0, 1);
MakeNameEx(0x4AA4A0, "TConfigForm.HelpButtonClick", 0x20);
MakeComm(0x4AA4A0, "'procedure TConfigForm.HelpButtonClick(Sender:TObject);'");
MakeCode(0x4AA4A0);
MakeComm(0x4AA4A8, "'TConfigForm.HelpContext:THelpContext'");
MakeFunction(0x4AA4A0, 0x4AA4B5);
MakeUnkn(0x4AA4B8, 1);
MakeNameEx(0x4AA4B8, "TConfigForm.MetroVolumeTrackChange", 0x20);
MakeComm(0x4AA4B8, "'procedure TConfigForm.MetroVolumeTrackChange;'");
MakeCode(0x4AA4B8);
MakeComm(0x4AA4D1, "'TConfigForm.MetroVolumeTrack:TTrackBarEx'");
MakeComm(0x4AA4D7, "'TTrackBarEx.Position:Integer'");
MakeComm(0x4AA4E5, "'TConfigForm.MetroVolumePanel:TPanel'");
MakeCode(0x4AA4F0);
MakeCode(0x4AA4FD);
MakeCode(0x4AA506);
MakeCode(0x4AA50B);
MakeFunction(0x4AA4B8, 0x4AA511);
MakeUnkn(0x4AA514, 1);
MakeNameEx(0x4AA514, "TConfigForm.SchemeComboClick", 0x20);
MakeComm(0x4AA514, "'procedure TConfigForm.SchemeComboClick(Sender:TObject);'");
MakeCode(0x4AA514);
MakeComm(0x4AA535, "'TConfigForm.SchemeCombo:TComboBox'");
MakeComm(0x4AA53D, "'TCustomCombo.GetItemIndex'");
MakeComm(0x4AA553, "'TConfigForm.SchemeCombo:TComboBox'");
MakeComm(0x4AA559, "'TComboBox.FItems:TStrings'");
MakeComm(0x4AA563, "'TStrings.Get'");
MakeCode(0x4AA591);
MakeComm(0x4AA5A2, "'TRegIniFile.Create'");
MakeCode(0x4AA5C0);
MakeCode(0x4AA60E);
MakeCode(0x4AA61B);
MakeCode(0x4AA624);
MakeCode(0x4AA629);
MakeCode(0x4AA62B);
MakeComm(0x4AA636, "'TConfigForm.?f508:string'");
MakeComm(0x4AA646, "'TConfigForm.ColorPreviewButton:TButton'");
MakeComm(0x4AA650, "'TControl.SetEnabled'");
MakeCode(0x4AA653);
MakeCode(0x4AA660);
MakeCode(0x4AA676);
MakeCode(0x4AA67B);
MakeFunction(0x4AA514, 0x4AA684);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4AA68C, -1);
MakeDword(0x4AA688);
MakeDword(0x4AA684);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4AA6A0, -1);
MakeDword(0x4AA69C);
MakeDword(0x4AA698);
MakeUnkn(0x4AA6D0, 1);
MakeNameEx(0x4AA6D0, "TConfigForm.SchemeSaveButtonClick", 0x20);
MakeComm(0x4AA6D0, "'procedure TConfigForm.SchemeSaveButtonClick(Sender:TObject);'");
MakeCode(0x4AA6D0);
MakeCode(0x4AA741);
MakeCode(0x4AA76F);
MakeComm(0x4AA77B, "'TRegIniFile.Create'");
MakeCode(0x4AA793);
MakeCode(0x4AA7DC);
MakeCode(0x4AA7E9);
MakeCode(0x4AA7F2);
MakeCode(0x4AA7F7);
MakeComm(0x4AA7FC, "'TConfigForm.SchemeCombo:TComboBox'");
MakeComm(0x4AA802, "'TComboBox.FItems:TStrings'");
MakeComm(0x4AA80D, "'TStrings.IndexOf'");
MakeComm(0x4AA817, "'TConfigForm.SchemeCombo:TComboBox'");
MakeComm(0x4AA81D, "'TComboBox.FItems:TStrings'");
MakeComm(0x4AA828, "'TStrings.Add'");
MakeCode(0x4AA82B);
MakeComm(0x4AA82E, "'TConfigForm.SchemeCombo:TComboBox'");
MakeComm(0x4AA837, "'TCustomCombo.SetItemIndex'");
MakeComm(0x4AA840, "'TConfigForm.?f508:string'");
MakeCode(0x4AA84D);
MakeCode(0x4AA85A);
MakeCode(0x4AA870);
MakeCode(0x4AA875);
MakeFunction(0x4AA6D0, 0x4AA87D);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4AA888, -1);
MakeDword(0x4AA884);
MakeDword(0x4AA880);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4AA898, -1);
MakeDword(0x4AA894);
MakeDword(0x4AA890);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4AA8D0, -1);
MakeDword(0x4AA8CC);
MakeDword(0x4AA8C8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4AA90C, -1);
MakeDword(0x4AA908);
MakeDword(0x4AA904);
MakeUnkn(0x4AA93C, 1);
MakeNameEx(0x4AA93C, "TConfigForm.SchemeDeleteButtonClick", 0x20);
MakeComm(0x4AA93C, "'procedure TConfigForm.SchemeDeleteButtonClick(Sender:TObject);'");
MakeCode(0x4AA93C);
MakeComm(0x4AA95F, "'TConfigForm.SchemeCombo:TComboBox'");
MakeComm(0x4AA967, "'TCustomCombo.GetItemIndex'");
MakeComm(0x4AA980, "'TConfigForm.SchemeCombo:TComboBox'");
MakeComm(0x4AA986, "'TComboBox.FItems:TStrings'");
MakeComm(0x4AA991, "'TStrings.Get'");
MakeCode(0x4AA9C0);
MakeComm(0x4AAA0E, "'TRegIniFile.Create'");
MakeCode(0x4AAA2F);
MakeCode(0x4AAA3C);
MakeCode(0x4AAA45);
MakeCode(0x4AAA4A);
MakeComm(0x4AAA4F, "'TConfigForm.SchemeCombo:TComboBox'");
MakeComm(0x4AAA5A, "'TCustomCombo.SetItemIndex'");
MakeComm(0x4AAA63, "'TConfigForm.SchemeCombo:TComboBox'");
MakeComm(0x4AAA69, "'TComboBox.FItems:TStrings'");
MakeComm(0x4AAA74, "'TStrings.Delete'");
MakeCode(0x4AAA77);
MakeCode(0x4AAA84);
MakeCode(0x4AAA95);
MakeCode(0x4AAA9A);
MakeFunction(0x4AA93C, 0x4AAAA1);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4AAAAC, -1);
MakeDword(0x4AAAA8);
MakeDword(0x4AAAA4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4AAAF8, -1);
MakeDword(0x4AAAF4);
MakeDword(0x4AAAF0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4AAB34, -1);
MakeDword(0x4AAB30);
MakeDword(0x4AAB2C);
MakeUnkn(0x4AAB64, 1);
MakeNameEx(0x4AAB64, "TConfigForm.ColorPreviewButtonClick", 0x20);
MakeComm(0x4AAB64, "'procedure TConfigForm.ColorPreviewButtonClick(Sender:TObject);'");
MakeCode(0x4AAB64);
MakeComm(0x4AAB69, "'TConfigForm.?f469:byte'");
MakeComm(0x4AAB85, "'TConfigForm.?f46C:?'");
MakeComm(0x4AAB92, "'TConfigForm.?f469:byte'");
MakeCode(0x4AAB99);
MakeComm(0x4AABC6, "'TConfigForm.ColorPreviewButton:TButton'");
MakeComm(0x4AABCE, "'TControl.SetEnabled'");
MakeFunction(0x4AAB64, 0x4AABD5);
MakeCode(0x4AABD8);
MakeCode(0x4AAC82);
MakeCode(0x4AAC8F);
MakeCode(0x4AAC9A);
MakeCode(0x4AAC9F);
MakeCode(0x4AAD95);
MakeCode(0x4AAD97);
MakeFunction(0x4AABD8, 0x4AADA9);
MakeCode(0x4AADAC);
MakeComm(0x4AADD4, "'TConfigForm.?f490:TTabFontSettings'");
MakeComm(0x4AADE8, "'TConfigForm.TabFontFrame:TFontSelectionFrame'");
MakeComm(0x4AADF6, "'TConfigForm.TabSmallFontFrame:TFontSelectionFrame'");
MakeComm(0x4AAE04, "'TConfigForm.PrintTitleFontFrame:TFontSelectionFrame'");
MakeComm(0x4AAE12, "'TConfigForm.PrintArtistFontFrame:TFontSelectionFrame'");
MakeComm(0x4AAE20, "'TConfigForm.PrintPageNumberFontFrame:TFontSelectionFrame'");
MakeComm(0x4AAE2B, "'TConfigForm.?f490:TTabFontSettings'");
MakeCode(0x4AAE3F);
MakeCode(0x4AAE4C);
MakeCode(0x4AAE5B);
MakeCode(0x4AAE60);
MakeFunction(0x4AADAC, 0x4AAE67);
MakeUnkn(0x4AAE68, 1);
MakeNameEx(0x4AAE68, "TConfigForm.FontChange", 0x20);
MakeComm(0x4AAE68, "'procedure TConfigForm.FontChange;'");
MakeCode(0x4AAE68);
MakeComm(0x4AAE74, "'TConfigForm.?f50C:byte'");
MakeComm(0x4AAE7D, "'TConfigForm.FontPreviewButton:TButton'");
MakeComm(0x4AAE85, "'TControl.SetEnabled'");
MakeComm(0x4AAE8A, "'TConfigForm.FontRestoreDefaultsButton:TButton'");
MakeComm(0x4AAE92, "'TControl.SetEnabled'");
MakeCode(0x4AAE95);
MakeFunction(0x4AAE68, 0x4AAE97);
MakeUnkn(0x4AAE98, 1);
MakeNameEx(0x4AAE98, "TConfigForm.FontPreviewButtonClick", 0x20);
MakeComm(0x4AAE98, "'procedure TConfigForm.FontPreviewButtonClick(Sender:TObject);'");
MakeCode(0x4AAE98);
MakeComm(0x4AAEAB, "'TConfigForm.?f4B8:TTabFontSettings'");
MakeCode(0x4AAED1);
MakeComm(0x4AAEDD, "'TConfigForm.?f490:TTabFontSettings'");
MakeComm(0x4AAF02, "'TConfigForm.FontPreviewButton:TButton'");
MakeComm(0x4AAF0A, "'TControl.SetEnabled'");
MakeFunction(0x4AAE98, 0x4AAF0F);
MakeUnkn(0x4AAF10, 1);
MakeNameEx(0x4AAF10, "TConfigForm.FontRestoreDefaultsButtonClick", 0x20);
MakeComm(0x4AAF10, "'procedure TConfigForm.FontRestoreDefaultsButtonClick(Sender:TObject);'");
MakeCode(0x4AAF10);
MakeComm(0x4AAF13, "'TConfigForm.?f50C:byte'");
MakeComm(0x4AAF29, "'TConfigForm.FontPreviewButton:TButton'");
MakeComm(0x4AAF31, "'TControl.SetEnabled'");
MakeFunction(0x4AAF10, 0x4AAF36);
MakeUnkn(0x4AAF38, 1);
MakeNameEx(0x4AAF38, "TConfigForm.DefaultPathCheckClick", 0x20);
MakeComm(0x4AAF38, "'procedure TConfigForm.DefaultPathCheckClick(Sender:TObject);'");
MakeCode(0x4AAF38);
MakeComm(0x4AAF3B, "'TConfigForm.DefaultPathCheck:TCheckBox'");
MakeComm(0x4AAF43, "'TCustomCheckBox.GetChecked'");
MakeComm(0x4AAF4B, "'TConfigForm.DefaultPathEdit:TEdit'");
MakeComm(0x4AAF56, "'TConfigForm.DefaultPathCheck:TCheckBox'");
MakeComm(0x4AAF5E, "'TCustomCheckBox.GetChecked'");
MakeComm(0x4AAF66, "'TConfigForm.DefaultPathBrowseButton:TButton'");
MakeComm(0x4AAF6E, "'TControl.SetEnabled'");
MakeFunction(0x4AAF38, 0x4AAF73);
MakeUnkn(0x4AAF74, 1);
MakeNameEx(0x4AAF74, "TConfigForm.DefaultPathBrowseButtonClick", 0x20);
MakeComm(0x4AAF74, "'procedure TConfigForm.DefaultPathBrowseButtonClick(Sender:TObject);'");
MakeCode(0x4AAF74);
MakeComm(0x4AAF91, "'TConfigForm.DefaultPathEdit:TEdit'");
MakeComm(0x4AAFB2, "'0x9'");
MakeComm(0x4AAFD7, "'TConfigForm.DefaultPathEdit:TEdit'");
MakeCode(0x4AAFE2);
MakeCode(0x4AAFEF);
MakeCode(0x4AB005);
MakeCode(0x4AB00A);
MakeFunction(0x4AAF74, 0x4AB011);
MakeByte(0x4AB014);
MakeUnkn(0x4AB014, 1);
MakeNameEx(0x4AB014, "gvar_004AB014", 0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4AB020, -1);
MakeDword(0x4AB01C);
MakeDword(0x4AB018);
MakeUnkn(0x4AB034, 1);
MakeNameEx(0x4AB034, "VMT_4AB034_TRowInfo", 0);
MakeDword(0x4AB034);
MakeDword(0x4AB038);
MakeDword(0x4AB03C);
MakeDword(0x4AB040);
MakeDword(0x4AB044);
MakeDword(0x4AB048);
MakeDword(0x4AB04C);
MakeDword(0x4AB050);
MakeDword(0x4AB054);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AB080, 0x4AB089);
MakeDword(0x4AB058);
MakeDword(0x4AB05C);
MakeDword(0x4AB060);
MakeDword(0x4AB064);
MakeDword(0x4AB068);
MakeDword(0x4AB06C);
MakeDword(0x4AB070);
MakeDword(0x4AB074);
MakeDword(0x4AB078);
MakeDword(0x4AB07C);
MakeUnkn(0x4AB08C, 1);
MakeNameEx(0x4AB08C, "VMT_4AB08C_TPrintSurfaceControl", 0);
MakeDword(0x4AB08C);
MakeDword(0x4AB090);
MakeDword(0x4AB094);
MakeDword(0x4AB098);
MakeDword(0x4AB09C);
MakeDword(0x4AB0A0);
MakeDword(0x4AB0A4);
MakeDword(0x4AB0A8);
MakeDword(0x4AB0AC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AB1BC, 0x4AB1D1);
MakeDword(0x4AB0B0);
MakeDword(0x4AB0B4);
MakeDword(0x4AB0B8);
MakeDword(0x4AB0BC);
MakeDword(0x4AB0C0);
MakeDword(0x4AB0C4);
MakeDword(0x4AB0C8);
MakeDword(0x4AB0CC);
MakeDword(0x4AB0D0);
MakeDword(0x4AB0D4);
MakeComm(0x4AB0D8, "'+0'");
MakeDword(0x4AB0D8);
MakeComm(0x4AB0DC, "'+4'");
MakeDword(0x4AB0DC);
MakeComm(0x4AB0E0, "'+8'");
MakeDword(0x4AB0E0);
MakeComm(0x4AB0E4, "'+C'");
MakeDword(0x4AB0E4);
MakeComm(0x4AB0E8, "'+10'");
MakeDword(0x4AB0E8);
MakeComm(0x4AB0EC, "'+14'");
MakeDword(0x4AB0EC);
MakeComm(0x4AB0F0, "'+18'");
MakeDword(0x4AB0F0);
MakeComm(0x4AB0F4, "'+1C'");
MakeDword(0x4AB0F4);
MakeComm(0x4AB0F8, "'+20'");
MakeDword(0x4AB0F8);
MakeComm(0x4AB0FC, "'+24'");
MakeDword(0x4AB0FC);
MakeComm(0x4AB100, "'+28'");
MakeDword(0x4AB100);
MakeComm(0x4AB104, "'+2C'");
MakeDword(0x4AB104);
MakeComm(0x4AB108, "'+30'");
MakeDword(0x4AB108);
MakeComm(0x4AB10C, "'+34'");
MakeDword(0x4AB10C);
MakeComm(0x4AB110, "'+38'");
MakeDword(0x4AB110);
MakeComm(0x4AB114, "'+3C'");
MakeDword(0x4AB114);
MakeComm(0x4AB118, "'+40'");
MakeDword(0x4AB118);
MakeComm(0x4AB11C, "'+44'");
MakeDword(0x4AB11C);
MakeComm(0x4AB120, "'+48'");
MakeDword(0x4AB120);
MakeComm(0x4AB124, "'+4C'");
MakeDword(0x4AB124);
MakeComm(0x4AB128, "'+50'");
MakeDword(0x4AB128);
MakeComm(0x4AB12C, "'+54'");
MakeDword(0x4AB12C);
MakeComm(0x4AB130, "'+58'");
MakeDword(0x4AB130);
MakeComm(0x4AB134, "'+5C'");
MakeDword(0x4AB134);
MakeComm(0x4AB138, "'+60'");
MakeDword(0x4AB138);
MakeComm(0x4AB13C, "'+64'");
MakeDword(0x4AB13C);
MakeComm(0x4AB140, "'+68'");
MakeDword(0x4AB140);
MakeComm(0x4AB144, "'+6C'");
MakeDword(0x4AB144);
MakeComm(0x4AB148, "'+70'");
MakeDword(0x4AB148);
MakeComm(0x4AB14C, "'+74'");
MakeDword(0x4AB14C);
MakeComm(0x4AB150, "'+78'");
MakeDword(0x4AB150);
MakeComm(0x4AB154, "'+7C'");
MakeDword(0x4AB154);
MakeComm(0x4AB158, "'+80'");
MakeDword(0x4AB158);
MakeComm(0x4AB15C, "'+84'");
MakeDword(0x4AB15C);
MakeComm(0x4AB160, "'+88'");
MakeDword(0x4AB160);
MakeComm(0x4AB164, "'+8C'");
MakeDword(0x4AB164);
MakeComm(0x4AB168, "'+90'");
MakeDword(0x4AB168);
MakeComm(0x4AB16C, "'+94'");
MakeDword(0x4AB16C);
MakeComm(0x4AB170, "'+98'");
MakeDword(0x4AB170);
MakeComm(0x4AB174, "'+9C'");
MakeDword(0x4AB174);
MakeComm(0x4AB178, "'+A0'");
MakeDword(0x4AB178);
MakeComm(0x4AB17C, "'+A4'");
MakeDword(0x4AB17C);
MakeComm(0x4AB180, "'+A8'");
MakeDword(0x4AB180);
MakeComm(0x4AB184, "'+AC'");
MakeDword(0x4AB184);
MakeComm(0x4AB188, "'+B0'");
MakeDword(0x4AB188);
MakeComm(0x4AB18C, "'+B4'");
MakeDword(0x4AB18C);
MakeComm(0x4AB190, "'+B8'");
MakeDword(0x4AB190);
MakeComm(0x4AB194, "'+BC'");
MakeDword(0x4AB194);
MakeComm(0x4AB198, "'+C0'");
MakeDword(0x4AB198);
MakeComm(0x4AB19C, "'+C4'");
MakeDword(0x4AB19C);
MakeComm(0x4AB1A0, "'+C8'");
MakeDword(0x4AB1A0);
MakeComm(0x4AB1A4, "'+CC'");
MakeDword(0x4AB1A4);
MakeComm(0x4AB1A8, "'+D0'");
MakeDword(0x4AB1A8);
MakeComm(0x4AB1AC, "'+D4'");
MakeDword(0x4AB1AC);
MakeComm(0x4AB1B0, "'+D8'");
MakeDword(0x4AB1B0);
MakeComm(0x4AB1B4, "'+DC'");
MakeDword(0x4AB1B4);
MakeComm(0x4AB1B8, "'+E0'");
MakeDword(0x4AB1B8);
MakeUnkn(0x4AB1D4, 1);
MakeNameEx(0x4AB1D4, "RTTI_4AB1D4_Class_TPrintSurfaceControl", 0);
MakeDword(0x4AB1D4);
MakeUnkn(0x4AB1D8, 1);
MakeNameEx(0x4AB1D8, "", 0);
MakeByte(0x4AB1D8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AB1D9, 0x4AB1EE);
MakeDword(0x4AB1EE);
MakeDword(0x4AB1F2);
MakeWord(0x4AB1F6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AB1F8, 0x4AB205);
MakeWord(0x4AB205);
MakeUnkn(0x4AB208, 1);
MakeNameEx(0x4AB208, "VMT_4AB208_TPrintPreviewScrollBox", 0);
MakeDword(0x4AB208);
MakeDword(0x4AB20C);
MakeDword(0x4AB210);
MakeDword(0x4AB214);
MakeDword(0x4AB218);
MakeDword(0x4AB21C);
MakeDword(0x4AB220);
MakeDword(0x4AB224);
MakeUnkn(0x4AB338, 1);
MakeNameEx(0x4AB338, "TPrintPreviewScrollBox_DynamicTable", 0);
MakeWord(0x4AB338);
MakeWord(0x4AB33A);
MakeDword(0x4AB33C);
MakeDword(0x4AB228);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AB340, 0x4AB357);
MakeDword(0x4AB22C);
MakeDword(0x4AB230);
MakeDword(0x4AB234);
MakeDword(0x4AB238);
MakeDword(0x4AB23C);
MakeDword(0x4AB240);
MakeDword(0x4AB244);
MakeDword(0x4AB248);
MakeDword(0x4AB24C);
MakeDword(0x4AB250);
MakeComm(0x4AB254, "'+0'");
MakeDword(0x4AB254);
MakeComm(0x4AB258, "'+4'");
MakeDword(0x4AB258);
MakeComm(0x4AB25C, "'+8'");
MakeDword(0x4AB25C);
MakeComm(0x4AB260, "'+C'");
MakeDword(0x4AB260);
MakeComm(0x4AB264, "'+10'");
MakeDword(0x4AB264);
MakeComm(0x4AB268, "'+14'");
MakeDword(0x4AB268);
MakeComm(0x4AB26C, "'+18'");
MakeDword(0x4AB26C);
MakeComm(0x4AB270, "'+1C'");
MakeDword(0x4AB270);
MakeComm(0x4AB274, "'+20'");
MakeDword(0x4AB274);
MakeComm(0x4AB278, "'+24'");
MakeDword(0x4AB278);
MakeComm(0x4AB27C, "'+28'");
MakeDword(0x4AB27C);
MakeComm(0x4AB280, "'+2C'");
MakeDword(0x4AB280);
MakeComm(0x4AB284, "'+30'");
MakeDword(0x4AB284);
MakeComm(0x4AB288, "'+34'");
MakeDword(0x4AB288);
MakeComm(0x4AB28C, "'+38'");
MakeDword(0x4AB28C);
MakeComm(0x4AB290, "'+3C'");
MakeDword(0x4AB290);
MakeComm(0x4AB294, "'+40'");
MakeDword(0x4AB294);
MakeComm(0x4AB298, "'+44'");
MakeDword(0x4AB298);
MakeComm(0x4AB29C, "'+48'");
MakeDword(0x4AB29C);
MakeComm(0x4AB2A0, "'+4C'");
MakeDword(0x4AB2A0);
MakeComm(0x4AB2A4, "'+50'");
MakeDword(0x4AB2A4);
MakeComm(0x4AB2A8, "'+54'");
MakeDword(0x4AB2A8);
MakeComm(0x4AB2AC, "'+58'");
MakeDword(0x4AB2AC);
MakeComm(0x4AB2B0, "'+5C'");
MakeDword(0x4AB2B0);
MakeComm(0x4AB2B4, "'+60'");
MakeDword(0x4AB2B4);
MakeComm(0x4AB2B8, "'+64'");
MakeDword(0x4AB2B8);
MakeComm(0x4AB2BC, "'+68'");
MakeDword(0x4AB2BC);
MakeComm(0x4AB2C0, "'+6C'");
MakeDword(0x4AB2C0);
MakeComm(0x4AB2C4, "'+70'");
MakeDword(0x4AB2C4);
MakeComm(0x4AB2C8, "'+74'");
MakeDword(0x4AB2C8);
MakeComm(0x4AB2CC, "'+78'");
MakeDword(0x4AB2CC);
MakeComm(0x4AB2D0, "'+7C'");
MakeDword(0x4AB2D0);
MakeComm(0x4AB2D4, "'+80'");
MakeDword(0x4AB2D4);
MakeComm(0x4AB2D8, "'+84'");
MakeDword(0x4AB2D8);
MakeComm(0x4AB2DC, "'+88'");
MakeDword(0x4AB2DC);
MakeComm(0x4AB2E0, "'+8C'");
MakeDword(0x4AB2E0);
MakeComm(0x4AB2E4, "'+90'");
MakeDword(0x4AB2E4);
MakeComm(0x4AB2E8, "'+94'");
MakeDword(0x4AB2E8);
MakeComm(0x4AB2EC, "'+98'");
MakeDword(0x4AB2EC);
MakeComm(0x4AB2F0, "'+9C'");
MakeDword(0x4AB2F0);
MakeComm(0x4AB2F4, "'+A0'");
MakeDword(0x4AB2F4);
MakeComm(0x4AB2F8, "'+A4'");
MakeDword(0x4AB2F8);
MakeComm(0x4AB2FC, "'+A8'");
MakeDword(0x4AB2FC);
MakeComm(0x4AB300, "'+AC'");
MakeDword(0x4AB300);
MakeComm(0x4AB304, "'+B0'");
MakeDword(0x4AB304);
MakeComm(0x4AB308, "'+B4'");
MakeDword(0x4AB308);
MakeComm(0x4AB30C, "'+B8'");
MakeDword(0x4AB30C);
MakeComm(0x4AB310, "'+BC'");
MakeDword(0x4AB310);
MakeComm(0x4AB314, "'+C0'");
MakeDword(0x4AB314);
MakeComm(0x4AB318, "'+C4'");
MakeDword(0x4AB318);
MakeComm(0x4AB31C, "'+C8'");
MakeDword(0x4AB31C);
MakeComm(0x4AB320, "'+CC'");
MakeDword(0x4AB320);
MakeComm(0x4AB324, "'+D0'");
MakeDword(0x4AB324);
MakeComm(0x4AB328, "'+D4'");
MakeDword(0x4AB328);
MakeComm(0x4AB32C, "'+D8'");
MakeDword(0x4AB32C);
MakeComm(0x4AB330, "'+DC'");
MakeDword(0x4AB330);
MakeComm(0x4AB334, "'+E0'");
MakeDword(0x4AB334);
MakeUnkn(0x4AB358, 1);
MakeNameEx(0x4AB358, "RTTI_4AB358_Class_TPrintPreviewScrollBox", 0);
MakeDword(0x4AB358);
MakeUnkn(0x4AB35C, 1);
MakeNameEx(0x4AB35C, "", 0);
MakeByte(0x4AB35C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AB35D, 0x4AB374);
MakeDword(0x4AB374);
MakeDword(0x4AB378);
MakeWord(0x4AB37C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AB37E, 0x4AB38B);
MakeWord(0x4AB38B);
MakeUnkn(0x4AB390, 1);
MakeNameEx(0x4AB390, "VMT_4AB390_TPrintPreviewForm", 0);
MakeDword(0x4AB390);
MakeDword(0x4AB394);
MakeDword(0x4AB398);
MakeDword(0x4AB39C);
MakeDword(0x4AB3A0);
MakeDword(0x4AB3A4);
MakeUnkn(0x4AB4E0, 1);
MakeNameEx(0x4AB4E0, "TPrintPreviewForm_FieldTable", 0);
MakeWord(0x4AB4E0);
MakeDword(0x4AB4E2);
MakeWord(0x4AB5F8);
MakeDword(0x4AB5FA);
MakeDword(0x4AB5FE);
MakeDword(0x4AB4E6);
MakeWord(0x4AB4EA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AB4EC, 0x4AB4F5);
MakeDword(0x4AB4F5);
MakeWord(0x4AB4F9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AB4FB, 0x4AB507);
MakeDword(0x4AB507);
MakeWord(0x4AB50B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AB50D, 0x4AB519);
MakeDword(0x4AB519);
MakeWord(0x4AB51D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AB51F, 0x4AB52A);
MakeDword(0x4AB52A);
MakeWord(0x4AB52E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AB530, 0x4AB53B);
MakeDword(0x4AB53B);
MakeWord(0x4AB53F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AB541, 0x4AB54E);
MakeDword(0x4AB54E);
MakeWord(0x4AB552);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AB554, 0x4AB562);
MakeDword(0x4AB3A8);
MakeUnkn(0x4AB562, 1);
MakeNameEx(0x4AB562, "TPrintPreviewForm_MethodTable", 0);
MakeWord(0x4AB562);
MakeWord(0x4AB564);
MakeDword(0x4AB566);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AB56A, 0x4AB578);
MakeWord(0x4AB578);
MakeDword(0x4AB57A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AB57E, 0x4AB590);
MakeWord(0x4AB590);
MakeDword(0x4AB592);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AB596, 0x4AB5A9);
MakeWord(0x4AB5A9);
MakeDword(0x4AB5AB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AB5AF, 0x4AB5BA);
MakeWord(0x4AB5BA);
MakeDword(0x4AB5BC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AB5C0, 0x4AB5D0);
MakeWord(0x4AB5D0);
MakeDword(0x4AB5D2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AB5D6, 0x4AB5E6);
MakeDword(0x4AB3AC);
MakeDword(0x4AB3B0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AB5E6, 0x4AB5F8);
MakeDword(0x4AB3B4);
MakeDword(0x4AB3B8);
MakeDword(0x4AB3BC);
MakeDword(0x4AB3C0);
MakeDword(0x4AB3C4);
MakeDword(0x4AB3C8);
MakeDword(0x4AB3CC);
MakeDword(0x4AB3D0);
MakeDword(0x4AB3D4);
MakeDword(0x4AB3D8);
MakeComm(0x4AB3DC, "'+0'");
MakeDword(0x4AB3DC);
MakeComm(0x4AB3E0, "'+4'");
MakeDword(0x4AB3E0);
MakeComm(0x4AB3E4, "'+8'");
MakeDword(0x4AB3E4);
MakeComm(0x4AB3E8, "'+C'");
MakeDword(0x4AB3E8);
MakeComm(0x4AB3EC, "'+10'");
MakeDword(0x4AB3EC);
MakeComm(0x4AB3F0, "'+14'");
MakeDword(0x4AB3F0);
MakeComm(0x4AB3F4, "'+18'");
MakeDword(0x4AB3F4);
MakeComm(0x4AB3F8, "'+1C'");
MakeDword(0x4AB3F8);
MakeComm(0x4AB3FC, "'+20'");
MakeDword(0x4AB3FC);
MakeComm(0x4AB400, "'+24'");
MakeDword(0x4AB400);
MakeComm(0x4AB404, "'+28'");
MakeDword(0x4AB404);
MakeComm(0x4AB408, "'+2C'");
MakeDword(0x4AB408);
MakeComm(0x4AB40C, "'+30'");
MakeDword(0x4AB40C);
MakeComm(0x4AB410, "'+34'");
MakeDword(0x4AB410);
MakeComm(0x4AB414, "'+38'");
MakeDword(0x4AB414);
MakeComm(0x4AB418, "'+3C'");
MakeDword(0x4AB418);
MakeComm(0x4AB41C, "'+40'");
MakeDword(0x4AB41C);
MakeComm(0x4AB420, "'+44'");
MakeDword(0x4AB420);
MakeComm(0x4AB424, "'+48'");
MakeDword(0x4AB424);
MakeComm(0x4AB428, "'+4C'");
MakeDword(0x4AB428);
MakeComm(0x4AB42C, "'+50'");
MakeDword(0x4AB42C);
MakeComm(0x4AB430, "'+54'");
MakeDword(0x4AB430);
MakeComm(0x4AB434, "'+58'");
MakeDword(0x4AB434);
MakeComm(0x4AB438, "'+5C'");
MakeDword(0x4AB438);
MakeComm(0x4AB43C, "'+60'");
MakeDword(0x4AB43C);
MakeComm(0x4AB440, "'+64'");
MakeDword(0x4AB440);
MakeComm(0x4AB444, "'+68'");
MakeDword(0x4AB444);
MakeComm(0x4AB448, "'+6C'");
MakeDword(0x4AB448);
MakeComm(0x4AB44C, "'+70'");
MakeDword(0x4AB44C);
MakeComm(0x4AB450, "'+74'");
MakeDword(0x4AB450);
MakeComm(0x4AB454, "'+78'");
MakeDword(0x4AB454);
MakeComm(0x4AB458, "'+7C'");
MakeDword(0x4AB458);
MakeComm(0x4AB45C, "'+80'");
MakeDword(0x4AB45C);
MakeComm(0x4AB460, "'+84'");
MakeDword(0x4AB460);
MakeComm(0x4AB464, "'+88'");
MakeDword(0x4AB464);
MakeComm(0x4AB468, "'+8C'");
MakeDword(0x4AB468);
MakeComm(0x4AB46C, "'+90'");
MakeDword(0x4AB46C);
MakeComm(0x4AB470, "'+94'");
MakeDword(0x4AB470);
MakeComm(0x4AB474, "'+98'");
MakeDword(0x4AB474);
MakeComm(0x4AB478, "'+9C'");
MakeDword(0x4AB478);
MakeComm(0x4AB47C, "'+A0'");
MakeDword(0x4AB47C);
MakeComm(0x4AB480, "'+A4'");
MakeDword(0x4AB480);
MakeComm(0x4AB484, "'+A8'");
MakeDword(0x4AB484);
MakeComm(0x4AB488, "'+AC'");
MakeDword(0x4AB488);
MakeComm(0x4AB48C, "'+B0'");
MakeDword(0x4AB48C);
MakeComm(0x4AB490, "'+B4'");
MakeDword(0x4AB490);
MakeComm(0x4AB494, "'+B8'");
MakeDword(0x4AB494);
MakeComm(0x4AB498, "'+BC'");
MakeDword(0x4AB498);
MakeComm(0x4AB49C, "'+C0'");
MakeDword(0x4AB49C);
MakeComm(0x4AB4A0, "'+C4'");
MakeDword(0x4AB4A0);
MakeComm(0x4AB4A4, "'+C8'");
MakeDword(0x4AB4A4);
MakeComm(0x4AB4A8, "'+CC'");
MakeDword(0x4AB4A8);
MakeComm(0x4AB4AC, "'+D0'");
MakeDword(0x4AB4AC);
MakeComm(0x4AB4B0, "'+D4'");
MakeDword(0x4AB4B0);
MakeComm(0x4AB4B4, "'+D8'");
MakeDword(0x4AB4B4);
MakeComm(0x4AB4B8, "'+DC'");
MakeDword(0x4AB4B8);
MakeComm(0x4AB4BC, "'+E0'");
MakeDword(0x4AB4BC);
MakeComm(0x4AB4C0, "'+E4'");
MakeDword(0x4AB4C0);
MakeComm(0x4AB4C4, "'+E8'");
MakeDword(0x4AB4C4);
MakeComm(0x4AB4C8, "'+EC'");
MakeDword(0x4AB4C8);
MakeComm(0x4AB4CC, "'+F0'");
MakeDword(0x4AB4CC);
MakeComm(0x4AB4D0, "'+F4'");
MakeDword(0x4AB4D0);
MakeComm(0x4AB4D4, "'+F8'");
MakeDword(0x4AB4D4);
MakeComm(0x4AB4D8, "'+FC'");
MakeDword(0x4AB4D8);
MakeComm(0x4AB4DC, "'+100'");
MakeDword(0x4AB4DC);
MakeUnkn(0x4AB604, 1);
MakeNameEx(0x4AB604, "RTTI_4AB604_Class_TPrintPreviewForm", 0);
MakeDword(0x4AB604);
MakeUnkn(0x4AB608, 1);
MakeNameEx(0x4AB608, "", 0);
MakeByte(0x4AB608);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AB609, 0x4AB61B);
MakeDword(0x4AB61B);
MakeDword(0x4AB61F);
MakeWord(0x4AB623);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AB625, 0x4AB632);
MakeWord(0x4AB632);
MakeCode(0x4AB634);
MakeComm(0x4AB672, "'TPrintPreviewForm.Create'");
MakeComm(0x4AB68B, "'TPrintPreviewForm.?f384:TPrintSurfaceControl'");
MakeCode(0x4AB747);
MakeCode(0x4AB779);
MakeCode(0x4AB7AB);
MakeCode(0x4AB7DD);
MakeCode(0x4AB816);
MakeCode(0x4AB837);
MakeCode(0x4AB89B);
MakeCode(0x4AB8E9);
MakeCode(0x4AB8F7);
MakeCode(0x4AB901);
MakeCode(0x4AB918);
MakeFunction(0x4AB634, 0x4AB924);
MakeUnkn(0x4AB924, 1);
MakeNameEx(0x4AB924, "TPrintSurfaceControl.Create", 0x20);
MakeComm(0x4AB924, "'constructor TPrintSurfaceControl.Create(AOwner:TComponent);'");
MakeCode(0x4AB924);
MakeCode(0x4AB936);
MakeComm(0x4AB94B, "'TFont.Create'");
MakeComm(0x4AB952, "'TPrintSurfaceControl..:TFont'");
MakeComm(0x4AB979, "'TPrintSurfaceControl..:TFont'");
MakeComm(0x4AB98B, "'TFont.Create'");
MakeComm(0x4AB992, "'TPrintSurfaceControl.?fE50:TFont'");
MakeComm(0x4AB9B9, "'TPrintSurfaceControl.?fE50:TFont'");
MakeComm(0x4AB9CB, "'TFont.Create'");
MakeComm(0x4AB9D2, "'TPrintSurfaceControl.?fE54:TFont'");
MakeComm(0x4AB9F9, "'TPrintSurfaceControl.?fE54:TFont'");
MakeCode(0x4ABA1B);
MakeFunction(0x4AB924, 0x4ABA22);
MakeUnkn(0x4ABA24, 1);
MakeNameEx(0x4ABA24, "TPrintSurfaceControl.Destroy", 0x20);
MakeComm(0x4ABA24, "'destructor TPrintSurfaceControl.Destroy;'");
MakeCode(0x4ABA24);
MakeComm(0x4ABA31, "'TPrintSurfaceControl.?fE48:dword'");
MakeCode(0x4ABA3B);
MakeComm(0x4ABA4B, "'TPrintSurfaceControl.?fE54:TFont'");
MakeCode(0x4ABA4B);
MakeComm(0x4ABA56, "'TPrintSurfaceControl.?fE50:TFont'");
MakeComm(0x4ABA61, "'TPrintSurfaceControl..:TFont'");
MakeCode(0x4ABA83);
MakeFunction(0x4ABA24, 0x4ABA88);
MakeCode(0x4ABA88);
MakeCode(0x4ABAB2);
MakeCode(0x4ABAD9);
MakeCode(0x4ABADD);
MakeCode(0x4ABB35);
MakeFunction(0x4ABA88, 0x4ABB4F);
MakeCode(0x4ABB50);
MakeCode(0x4ABB6E);
MakeComm(0x4ABB75, "'TRowInfo.Create'");
MakeComm(0x4ABB87, "'TRowInfo.?f8:dword'");
MakeComm(0x4ABB8A, "'TRowInfo.?fC:dword'");
MakeComm(0x4ABB8D, "'TRowInfo.?f10:dword'");
MakeComm(0x4ABB94, "'TRowInfo.?f14:dword'");
MakeCode(0x4ABBAB);
MakeCode(0x4ABBB7);
MakeFunction(0x4ABB50, 0x4ABBE4);
MakeCode(0x4ABBE4);
MakeCode(0x4ABC2C);
MakeCode(0x4ABC4C);
MakeFunction(0x4ABBE4, 0x4ABC4E);
MakeCode(0x4ABC50);
MakeCode(0x4ABD60);
MakeCode(0x4ABD97);
MakeCode(0x4ABDC2);
MakeCode(0x4ABE08);
MakeCode(0x4ABE11);
MakeCode(0x4ABE66);
MakeCode(0x4ABE7D);
MakeComm(0x4ABE9F, "'Exception.Create'");
MakeCode(0x4ABEA9);
MakeCode(0x4ABEBB);
MakeCode(0x4ABED8);
MakeCode(0x4ABEFA);
MakeCode(0x4ABF36);
MakeCode(0x4ABF44);
MakeFunction(0x4ABC50, 0x4ABF67);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4ABF70, -1);
MakeDword(0x4ABF6C);
MakeDword(0x4ABF68);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4ABF9C, -1);
MakeDword(0x4ABF98);
MakeDword(0x4ABF94);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4ABFB8, -1);
MakeDword(0x4ABFB4);
MakeDword(0x4ABFB0);
MakeCode(0x4ABFEC);
MakeCode(0x4AC055);
MakeCode(0x4AC066);
MakeCode(0x4AC078);
MakeCode(0x4AC0AC);
MakeFunction(0x4ABFEC, 0x4AC0B8);
MakeCode(0x4AC0B8);
MakeCode(0x4AC121);
MakeCode(0x4AC132);
MakeCode(0x4AC144);
MakeCode(0x4AC178);
MakeFunction(0x4AC0B8, 0x4AC184);
MakeCode(0x4AC184);
MakeComm(0x4AC1CF, "'0x2'");
MakeCode(0x4AC204);
MakeCode(0x4AC213);
MakeCode(0x4AC247);
MakeCode(0x4AC254);
MakeCode(0x4AC25D);
MakeCode(0x4AC262);
MakeFunction(0x4AC184, 0x4AC26F);
MakeByte(0x4AC270);
MakeUnkn(0x4AC270, 1);
MakeNameEx(0x4AC270, "gvar_004AC270", 0);
MakeCode(0x4AC274);
MakeFunction(0x4AC274, 0x4AC2C6);
MakeCode(0x4AC2C8);
MakeComm(0x4AC2E2, "'TPrintSurfaceControl.?fE0D:dword'");
MakeComm(0x4AC2E9, "'TPrintSurfaceControl.?fE15:dword'");
MakeComm(0x4AC2FC, "'TPrintSurfaceControl.?fE0D:dword'");
MakeComm(0x4AC303, "'TPrintSurfaceControl.?fE15:dword'");
MakeComm(0x4AC316, "'TPrintSurfaceControl.?fE0D:dword'");
MakeComm(0x4AC320, "'TPrintSurfaceControl.?fE15:dword'");
MakeCode(0x4AC337);
MakeComm(0x4AC33A, "'TPrintSurfaceControl.?fE11:dword'");
MakeComm(0x4AC341, "'TPrintSurfaceControl.?fE19:dword'");
MakeComm(0x4AC354, "'TPrintSurfaceControl.?fE11:dword'");
MakeComm(0x4AC35B, "'TPrintSurfaceControl.?fE19:dword'");
MakeComm(0x4AC36E, "'TPrintSurfaceControl.?fE11:dword'");
MakeComm(0x4AC378, "'TPrintSurfaceControl.?fE19:dword'");
MakeCode(0x4AC38F);
MakeFunction(0x4AC2C8, 0x4AC3BD);
MakeCode(0x4AC3C0);
MakeComm(0x4AC3F5, "'TPrintSurfaceControl.sub_004AC2C8'");
MakeFunction(0x4AC3C0, 0x4AC404);
MakeCode(0x4AC404);
MakeCode(0x4AC438);
MakeCode(0x4AC49D);
MakeCode(0x4AC509);
MakeCode(0x4AC50F);
MakeCode(0x4AC527);
MakeCode(0x4AC531);
MakeCode(0x4AC58A);
MakeCode(0x4AC58E);
MakeFunction(0x4AC404, 0x4AC596);
MakeCode(0x4AC598);
MakeComm(0x4AC598, "'TPrintSurfaceControl.?fE08:dword'");
MakeComm(0x4AC59E, "'TPrintSurfaceControl......................................FCanvas:TCanvas'");
MakeFunction(0x4AC598, 0x4AC5AA);
MakeCode(0x4AC5AC);
MakeComm(0x4AC5CB, "'TPrintPreviewForm.?f384:TPrintSurfaceControl'");
MakeComm(0x4AC5DB, "'TPrintPreviewForm.?f380:TPrintPreviewScrollBox'");
MakeComm(0x4AC5F7, "'TPrintPreviewForm.?f380:TPrintPreviewScrollBox'");
MakeComm(0x4AC60A, "'TPrintPreviewForm.?f384:TPrintSurfaceControl'");
MakeComm(0x4AC629, "'TPrintPreviewForm.?f380:TPrintPreviewScrollBox'");
MakeComm(0x4AC63E, "'TPrintPreviewForm.?f380:TPrintPreviewScrollBox'");
MakeComm(0x4AC651, "'TPrintPreviewForm.?f384:TPrintSurfaceControl'");
MakeCode(0x4AC66D);
MakeComm(0x4AC670, "'TPrintPreviewForm.?f37C:dword'");
MakeCode(0x4AC685);
MakeCode(0x4AC690);
MakeComm(0x4AC695, "'TPrintPreviewForm.?f380:TPrintPreviewScrollBox'");
MakeCode(0x4AC6AB);
MakeCode(0x4AC6B5);
MakeComm(0x4AC6B8, "'TPrintPreviewForm.?f380:TPrintPreviewScrollBox'");
MakeCode(0x4AC6CC);
MakeCode(0x4AC6DC);
MakeComm(0x4AC70A, "'TPrintPreviewForm.?f388:TPaintBox'");
MakeComm(0x4AC71B, "'TPrintPreviewForm.?f384:TPrintSurfaceControl'");
MakeComm(0x4AC72C, "'TPrintPreviewForm.?f384:TPrintSurfaceControl'");
MakeComm(0x4AC73A, "'TPrintPreviewForm.?f384:TPrintSurfaceControl'");
MakeCode(0x4AC752);
MakeCode(0x4AC75F);
MakeComm(0x4AC762, "'TPrintPreviewForm.?f380:TPrintPreviewScrollBox'");
MakeCode(0x4AC76E);
MakeCode(0x4AC773);
MakeCode(0x4AC775);
MakeFunction(0x4AC5AC, 0x4AC77C);
MakeUnkn(0x4AC77C, 1);
MakeNameEx(0x4AC77C, "TPrintPreviewScrollBox.WMSize", 0x20);
MakeComm(0x4AC77C, "'procedure TPrintPreviewScrollBox.WMSize(var Message:TWMSize);'");
MakeCode(0x4AC77C);
MakeFunction(0x4AC77C, 0x4AC77D);
MakeUnkn(0x4AC780, 1);
MakeNameEx(0x4AC780, "TPrintPreviewForm.Create", 0x20);
MakeComm(0x4AC780, "'constructor TPrintPreviewForm.Create(AOwner:TComponent);'");
MakeCode(0x4AC780);
MakeCode(0x4AC792);
MakeComm(0x4AC7A9, "'TPrintPreviewScrollBox.Create'");
MakeComm(0x4AC7B0, "'TPrintPreviewForm.?f380:TPrintPreviewScrollBox'");
MakeComm(0x4AC7B6, "'TPrintPreviewScrollBox.HorzScrollBar:TControlScrollBar'");
MakeComm(0x4AC7BC, "'TControlScrollBar.Tracking:Boolean'");
MakeComm(0x4AC7C0, "'TPrintPreviewScrollBox.VertScrollBar:TControlScrollBar'");
MakeComm(0x4AC7C6, "'TControlScrollBar.Tracking:Boolean'");
MakeComm(0x4AC7D6, "'TPrintPreviewForm.?f380:TPrintPreviewScrollBox'");
MakeComm(0x4AC7E3, "'TPrintPreviewForm.?f380:TPrintPreviewScrollBox'");
MakeComm(0x4AC7ED, "'TWinControl.SetParent'");
MakeComm(0x4AC7F9, "'TPaintBox.Create'");
MakeComm(0x4AC800, "'TPrintPreviewForm.?f388:TPaintBox'");
MakeComm(0x4AC806, "'TPaintBox.?f19C:TPrintPreviewForm'");
MakeComm(0x4AC80C, "'TPaintBox.OnPaint:TNotifyEvent'");
MakeComm(0x4AC816, "'TPrintPreviewForm.?f380:TPrintPreviewScrollBox'");
MakeComm(0x4AC820, "'TControl.SetParent'");
MakeComm(0x4AC82C, "'TPrintSurfaceControl.Create'");
MakeComm(0x4AC833, "'TPrintPreviewForm.?f384:TPrintSurfaceControl'");
MakeComm(0x4AC839, "'TPrintPreviewForm.?f380:TPrintPreviewScrollBox'");
MakeComm(0x4AC843, "'TWinControl.SetParent'");
MakeCode(0x4AC85D);
MakeFunction(0x4AC780, 0x4AC864);
MakeUnkn(0x4AC864, 1);
MakeNameEx(0x4AC864, "TPrintPreviewForm.FormResize", 0x20);
MakeComm(0x4AC864, "'procedure TPrintPreviewForm.FormResize(Sender:TObject);'");
MakeCode(0x4AC864);
MakeComm(0x4AC864, "'TPrintPreviewForm.?f380:TPrintPreviewScrollBox'");
MakeFunction(0x4AC864, 0x4AC870);
MakeCode(0x4AC870);
MakeFunction(0x4AC870, 0x4AC8B5);
MakeUnkn(0x4AC8B8, 1);
MakeNameEx(0x4AC8B8, "TPrintPreviewForm.PaintBoxPaint", 0x20);
MakeComm(0x4AC8B8, "'procedure TPrintPreviewForm.PaintBoxPaint;'");
MakeCode(0x4AC8B8);
MakeComm(0x4AC8BC, "'TPrintPreviewForm.?f388:TPaintBox'");
MakeComm(0x4AC8C2, "'TPaintBox...........FCanvas:TCanvas'");
MakeComm(0x4AC8C8, "'TCanvas.Brush:TBrush'");
MakeComm(0x4AC8DB, "'TControl.GetClientRect'");
MakeComm(0x4AC8EE, "'TPaintBox............FCanvas:TCanvas'");
MakeComm(0x4AC909, "'TPaintBox.............FCanvas:TCanvas'");
MakeFunction(0x4AC8B8, 0x4AC919);
MakeUnkn(0x4AC91C, 1);
MakeNameEx(0x4AC91C, "TPrintPreviewForm.ZoomInButtonClick", 0x20);
MakeComm(0x4AC91C, "'procedure TPrintPreviewForm.ZoomInButtonClick(Sender:TObject);'");
MakeCode(0x4AC91C);
MakeComm(0x4AC91F, "'TPrintPreviewForm.?f37C:dword'");
MakeComm(0x4AC928, "'TPrintPreviewForm.?f37C:dword'");
MakeComm(0x4AC92E, "'TPrintPreviewForm.?f37C:dword'");
MakeCode(0x4AC92E);
MakeComm(0x4AC938, "'TPrintPreviewForm.ZoomInButton:TButton'");
MakeComm(0x4AC940, "'TControl.SetEnabled'");
MakeComm(0x4AC943, "'TPrintPreviewForm.?f37C:dword'");
MakeComm(0x4AC94D, "'TPrintPreviewForm.ZoomOutButton:TButton'");
MakeComm(0x4AC955, "'TControl.SetEnabled'");
MakeComm(0x4AC958, "'TPrintPreviewForm.?f380:TPrintPreviewScrollBox'");
MakeComm(0x4AC95E, "'TPrintPreviewScrollBox.HorzScrollBar:TControlScrollBar'");
MakeComm(0x4AC96B, "'TPrintPreviewForm.?f380:TPrintPreviewScrollBox'");
MakeComm(0x4AC971, "'TPrintPreviewScrollBox.VertScrollBar:TControlScrollBar'");
MakeComm(0x4AC97E, "'TPrintPreviewForm.?f380:TPrintPreviewScrollBox'");
MakeFunction(0x4AC91C, 0x4AC98B);
MakeUnkn(0x4AC98C, 1);
MakeNameEx(0x4AC98C, "TPrintPreviewForm.ZoomOutButtonClick", 0x20);
MakeComm(0x4AC98C, "'procedure TPrintPreviewForm.ZoomOutButtonClick(Sender:TObject);'");
MakeCode(0x4AC98C);
MakeComm(0x4AC98F, "'TPrintPreviewForm.?f37C:dword'");
MakeComm(0x4AC998, "'TPrintPreviewForm.?f37C:dword'");
MakeComm(0x4AC99E, "'TPrintPreviewForm.?f37C:dword'");
MakeCode(0x4AC99E);
MakeComm(0x4AC9A8, "'TPrintPreviewForm.ZoomInButton:TButton'");
MakeComm(0x4AC9B0, "'TControl.SetEnabled'");
MakeComm(0x4AC9B3, "'TPrintPreviewForm.?f37C:dword'");
MakeComm(0x4AC9BD, "'TPrintPreviewForm.ZoomOutButton:TButton'");
MakeComm(0x4AC9C5, "'TControl.SetEnabled'");
MakeComm(0x4AC9C8, "'TPrintPreviewForm.?f380:TPrintPreviewScrollBox'");
MakeComm(0x4AC9CE, "'TPrintPreviewScrollBox.HorzScrollBar:TControlScrollBar'");
MakeComm(0x4AC9DB, "'TPrintPreviewForm.?f380:TPrintPreviewScrollBox'");
MakeComm(0x4AC9E1, "'TPrintPreviewScrollBox.VertScrollBar:TControlScrollBar'");
MakeComm(0x4AC9EE, "'TPrintPreviewForm.?f380:TPrintPreviewScrollBox'");
MakeFunction(0x4AC98C, 0x4AC9FB);
MakeUnkn(0x4AC9FC, 1);
MakeNameEx(0x4AC9FC, "TPrintPreviewForm.NextButtonClick", 0x20);
MakeComm(0x4AC9FC, "'procedure TPrintPreviewForm.NextButtonClick(Sender:TObject);'");
MakeCode(0x4AC9FC);
MakeComm(0x4AC9FF, "'TPrintPreviewForm.?f384:TPrintSurfaceControl'");
MakeComm(0x4ACA05, "'TPrintSurfaceControl.?fE60:dword'");
MakeComm(0x4ACA0C, "'TPrintSurfaceControl.?fE08:dword'");
MakeComm(0x4ACA14, "'TPrintSurfaceControl.?fE08:dword'");
MakeComm(0x4ACA1C, "'TWinControl.Invalidate'");
MakeCode(0x4ACA29);
MakeFunction(0x4AC9FC, 0x4ACA2B);
MakeUnkn(0x4ACA2C, 1);
MakeNameEx(0x4ACA2C, "TPrintPreviewForm.PrevButtonClick", 0x20);
MakeComm(0x4ACA2C, "'procedure TPrintPreviewForm.PrevButtonClick(Sender:TObject);'");
MakeCode(0x4ACA2C);
MakeComm(0x4ACA2F, "'TPrintPreviewForm.?f384:TPrintSurfaceControl'");
MakeComm(0x4ACA35, "'TPrintSurfaceControl.?fE08:dword'");
MakeComm(0x4ACA3E, "'TPrintSurfaceControl.?fE08:dword'");
MakeComm(0x4ACA46, "'TWinControl.Invalidate'");
MakeCode(0x4ACA53);
MakeFunction(0x4ACA2C, 0x4ACA55);
MakeUnkn(0x4ACA58, 1);
MakeNameEx(0x4ACA58, "VMT_4ACA58_TPrintStatusForm", 0);
MakeDword(0x4ACA58);
MakeDword(0x4ACA5C);
MakeDword(0x4ACA60);
MakeDword(0x4ACA64);
MakeDword(0x4ACA68);
MakeDword(0x4ACA6C);
MakeUnkn(0x4ACBA8, 1);
MakeNameEx(0x4ACBA8, "TPrintStatusForm_FieldTable", 0);
MakeWord(0x4ACBA8);
MakeDword(0x4ACBAA);
MakeWord(0x4ACC19);
MakeDword(0x4ACC1B);
MakeDword(0x4ACC1F);
MakeDword(0x4ACBAE);
MakeWord(0x4ACBB2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4ACBB4, 0x4ACBC1);
MakeDword(0x4ACBC1);
MakeWord(0x4ACBC5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4ACBC7, 0x4ACBCE);
MakeDword(0x4ACBCE);
MakeWord(0x4ACBD2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4ACBD4, 0x4ACBDE);
MakeDword(0x4ACA70);
MakeUnkn(0x4ACBDE, 1);
MakeNameEx(0x4ACBDE, "TPrintStatusForm_MethodTable", 0);
MakeWord(0x4ACBDE);
MakeWord(0x4ACBE0);
MakeDword(0x4ACBE2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4ACBE6, 0x4ACBF0);
MakeWord(0x4ACBF0);
MakeDword(0x4ACBF2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4ACBF6, 0x4ACC08);
MakeDword(0x4ACA74);
MakeDword(0x4ACA78);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4ACC08, 0x4ACC19);
MakeDword(0x4ACA7C);
MakeDword(0x4ACA80);
MakeDword(0x4ACA84);
MakeDword(0x4ACA88);
MakeDword(0x4ACA8C);
MakeDword(0x4ACA90);
MakeDword(0x4ACA94);
MakeDword(0x4ACA98);
MakeDword(0x4ACA9C);
MakeDword(0x4ACAA0);
MakeComm(0x4ACAA4, "'+0'");
MakeDword(0x4ACAA4);
MakeComm(0x4ACAA8, "'+4'");
MakeDword(0x4ACAA8);
MakeComm(0x4ACAAC, "'+8'");
MakeDword(0x4ACAAC);
MakeComm(0x4ACAB0, "'+C'");
MakeDword(0x4ACAB0);
MakeComm(0x4ACAB4, "'+10'");
MakeDword(0x4ACAB4);
MakeComm(0x4ACAB8, "'+14'");
MakeDword(0x4ACAB8);
MakeComm(0x4ACABC, "'+18'");
MakeDword(0x4ACABC);
MakeComm(0x4ACAC0, "'+1C'");
MakeDword(0x4ACAC0);
MakeComm(0x4ACAC4, "'+20'");
MakeDword(0x4ACAC4);
MakeComm(0x4ACAC8, "'+24'");
MakeDword(0x4ACAC8);
MakeComm(0x4ACACC, "'+28'");
MakeDword(0x4ACACC);
MakeComm(0x4ACAD0, "'+2C'");
MakeDword(0x4ACAD0);
MakeComm(0x4ACAD4, "'+30'");
MakeDword(0x4ACAD4);
MakeComm(0x4ACAD8, "'+34'");
MakeDword(0x4ACAD8);
MakeComm(0x4ACADC, "'+38'");
MakeDword(0x4ACADC);
MakeComm(0x4ACAE0, "'+3C'");
MakeDword(0x4ACAE0);
MakeComm(0x4ACAE4, "'+40'");
MakeDword(0x4ACAE4);
MakeComm(0x4ACAE8, "'+44'");
MakeDword(0x4ACAE8);
MakeComm(0x4ACAEC, "'+48'");
MakeDword(0x4ACAEC);
MakeComm(0x4ACAF0, "'+4C'");
MakeDword(0x4ACAF0);
MakeComm(0x4ACAF4, "'+50'");
MakeDword(0x4ACAF4);
MakeComm(0x4ACAF8, "'+54'");
MakeDword(0x4ACAF8);
MakeComm(0x4ACAFC, "'+58'");
MakeDword(0x4ACAFC);
MakeComm(0x4ACB00, "'+5C'");
MakeDword(0x4ACB00);
MakeComm(0x4ACB04, "'+60'");
MakeDword(0x4ACB04);
MakeComm(0x4ACB08, "'+64'");
MakeDword(0x4ACB08);
MakeComm(0x4ACB0C, "'+68'");
MakeDword(0x4ACB0C);
MakeComm(0x4ACB10, "'+6C'");
MakeDword(0x4ACB10);
MakeComm(0x4ACB14, "'+70'");
MakeDword(0x4ACB14);
MakeComm(0x4ACB18, "'+74'");
MakeDword(0x4ACB18);
MakeComm(0x4ACB1C, "'+78'");
MakeDword(0x4ACB1C);
MakeComm(0x4ACB20, "'+7C'");
MakeDword(0x4ACB20);
MakeComm(0x4ACB24, "'+80'");
MakeDword(0x4ACB24);
MakeComm(0x4ACB28, "'+84'");
MakeDword(0x4ACB28);
MakeComm(0x4ACB2C, "'+88'");
MakeDword(0x4ACB2C);
MakeComm(0x4ACB30, "'+8C'");
MakeDword(0x4ACB30);
MakeComm(0x4ACB34, "'+90'");
MakeDword(0x4ACB34);
MakeComm(0x4ACB38, "'+94'");
MakeDword(0x4ACB38);
MakeComm(0x4ACB3C, "'+98'");
MakeDword(0x4ACB3C);
MakeComm(0x4ACB40, "'+9C'");
MakeDword(0x4ACB40);
MakeComm(0x4ACB44, "'+A0'");
MakeDword(0x4ACB44);
MakeComm(0x4ACB48, "'+A4'");
MakeDword(0x4ACB48);
MakeComm(0x4ACB4C, "'+A8'");
MakeDword(0x4ACB4C);
MakeComm(0x4ACB50, "'+AC'");
MakeDword(0x4ACB50);
MakeComm(0x4ACB54, "'+B0'");
MakeDword(0x4ACB54);
MakeComm(0x4ACB58, "'+B4'");
MakeDword(0x4ACB58);
MakeComm(0x4ACB5C, "'+B8'");
MakeDword(0x4ACB5C);
MakeComm(0x4ACB60, "'+BC'");
MakeDword(0x4ACB60);
MakeComm(0x4ACB64, "'+C0'");
MakeDword(0x4ACB64);
MakeComm(0x4ACB68, "'+C4'");
MakeDword(0x4ACB68);
MakeComm(0x4ACB6C, "'+C8'");
MakeDword(0x4ACB6C);
MakeComm(0x4ACB70, "'+CC'");
MakeDword(0x4ACB70);
MakeComm(0x4ACB74, "'+D0'");
MakeDword(0x4ACB74);
MakeComm(0x4ACB78, "'+D4'");
MakeDword(0x4ACB78);
MakeComm(0x4ACB7C, "'+D8'");
MakeDword(0x4ACB7C);
MakeComm(0x4ACB80, "'+DC'");
MakeDword(0x4ACB80);
MakeComm(0x4ACB84, "'+E0'");
MakeDword(0x4ACB84);
MakeComm(0x4ACB88, "'+E4'");
MakeDword(0x4ACB88);
MakeComm(0x4ACB8C, "'+E8'");
MakeDword(0x4ACB8C);
MakeComm(0x4ACB90, "'+EC'");
MakeDword(0x4ACB90);
MakeComm(0x4ACB94, "'+F0'");
MakeDword(0x4ACB94);
MakeComm(0x4ACB98, "'+F4'");
MakeDword(0x4ACB98);
MakeComm(0x4ACB9C, "'+F8'");
MakeDword(0x4ACB9C);
MakeComm(0x4ACBA0, "'+FC'");
MakeDword(0x4ACBA0);
MakeComm(0x4ACBA4, "'+100'");
MakeDword(0x4ACBA4);
MakeUnkn(0x4ACC24, 1);
MakeNameEx(0x4ACC24, "RTTI_4ACC24_Class_TPrintStatusForm", 0);
MakeDword(0x4ACC24);
MakeUnkn(0x4ACC28, 1);
MakeNameEx(0x4ACC28, "", 0);
MakeByte(0x4ACC28);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4ACC29, 0x4ACC3A);
MakeDword(0x4ACC3A);
MakeDword(0x4ACC3E);
MakeWord(0x4ACC42);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4ACC44, 0x4ACC50);
MakeWord(0x4ACC50);
MakeUnkn(0x4ACC54, 1);
MakeNameEx(0x4ACC54, "TPrintStatusForm.FormClose", 0x20);
MakeComm(0x4ACC54, "'procedure TPrintStatusForm.FormClose(Sender:TObject; var Action:TCloseAction);'");
MakeCode(0x4ACC54);
MakeComm(0x4ACC54, "'TPrintStatusForm.?f36C:byte'");
MakeFunction(0x4ACC54, 0x4ACC5C);
MakeUnkn(0x4ACC5C, 1);
MakeNameEx(0x4ACC5C, "TPrintStatusForm.CancelButtonClick", 0x20);
MakeComm(0x4ACC5C, "'procedure TPrintStatusForm.CancelButtonClick(Sender:TObject);'");
MakeCode(0x4ACC5C);
MakeFunction(0x4ACC5C, 0x4ACC62);
MakeUnkn(0x4ACC64, 1);
MakeNameEx(0x4ACC64, "VMT_4ACC64_TPrintForm", 0);
MakeDword(0x4ACC64);
MakeDword(0x4ACC68);
MakeDword(0x4ACC6C);
MakeDword(0x4ACC70);
MakeDword(0x4ACC74);
MakeDword(0x4ACC78);
MakeUnkn(0x4ACDB4, 1);
MakeNameEx(0x4ACDB4, "TPrintForm_FieldTable", 0);
MakeWord(0x4ACDB4);
MakeDword(0x4ACDB6);
MakeWord(0x4ACE8E);
MakeDword(0x4ACE90);
MakeDword(0x4ACE94);
MakeDword(0x4ACE98);
MakeDword(0x4ACE9C);
MakeDword(0x4ACEA0);
MakeDword(0x4ACDBA);
MakeWord(0x4ACDBE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4ACDC0, 0x4ACDC9);
MakeDword(0x4ACDC9);
MakeWord(0x4ACDCD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4ACDCF, 0x4ACDDC);
MakeDword(0x4ACDDC);
MakeWord(0x4ACDE0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4ACDE2, 0x4ACDE9);
MakeDword(0x4ACDE9);
MakeWord(0x4ACDED);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4ACDEF, 0x4ACDF6);
MakeDword(0x4ACDF6);
MakeWord(0x4ACDFA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4ACDFC, 0x4ACE07);
MakeDword(0x4ACE07);
MakeWord(0x4ACE0B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4ACE0D, 0x4ACE14);
MakeDword(0x4ACE14);
MakeWord(0x4ACE18);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4ACE1A, 0x4ACE21);
MakeDword(0x4ACE21);
MakeWord(0x4ACE25);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4ACE27, 0x4ACE32);
MakeDword(0x4ACE32);
MakeWord(0x4ACE36);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4ACE38, 0x4ACE43);
MakeDword(0x4ACE43);
MakeWord(0x4ACE47);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4ACE49, 0x4ACE56);
MakeDword(0x4ACC7C);
MakeUnkn(0x4ACE56, 1);
MakeNameEx(0x4ACE56, "TPrintForm_MethodTable", 0);
MakeWord(0x4ACE56);
MakeWord(0x4ACE58);
MakeDword(0x4ACE5A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4ACE5E, 0x4ACE6D);
MakeWord(0x4ACE6D);
MakeDword(0x4ACE6F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4ACE73, 0x4ACE83);
MakeDword(0x4ACC80);
MakeDword(0x4ACC84);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4ACE83, 0x4ACE8E);
MakeDword(0x4ACC88);
MakeDword(0x4ACC8C);
MakeDword(0x4ACC90);
MakeDword(0x4ACC94);
MakeDword(0x4ACC98);
MakeDword(0x4ACC9C);
MakeDword(0x4ACCA0);
MakeDword(0x4ACCA4);
MakeDword(0x4ACCA8);
MakeDword(0x4ACCAC);
MakeComm(0x4ACCB0, "'+0'");
MakeDword(0x4ACCB0);
MakeComm(0x4ACCB4, "'+4'");
MakeDword(0x4ACCB4);
MakeComm(0x4ACCB8, "'+8'");
MakeDword(0x4ACCB8);
MakeComm(0x4ACCBC, "'+C'");
MakeDword(0x4ACCBC);
MakeComm(0x4ACCC0, "'+10'");
MakeDword(0x4ACCC0);
MakeComm(0x4ACCC4, "'+14'");
MakeDword(0x4ACCC4);
MakeComm(0x4ACCC8, "'+18'");
MakeDword(0x4ACCC8);
MakeComm(0x4ACCCC, "'+1C'");
MakeDword(0x4ACCCC);
MakeComm(0x4ACCD0, "'+20'");
MakeDword(0x4ACCD0);
MakeComm(0x4ACCD4, "'+24'");
MakeDword(0x4ACCD4);
MakeComm(0x4ACCD8, "'+28'");
MakeDword(0x4ACCD8);
MakeComm(0x4ACCDC, "'+2C'");
MakeDword(0x4ACCDC);
MakeComm(0x4ACCE0, "'+30'");
MakeDword(0x4ACCE0);
MakeComm(0x4ACCE4, "'+34'");
MakeDword(0x4ACCE4);
MakeComm(0x4ACCE8, "'+38'");
MakeDword(0x4ACCE8);
MakeComm(0x4ACCEC, "'+3C'");
MakeDword(0x4ACCEC);
MakeComm(0x4ACCF0, "'+40'");
MakeDword(0x4ACCF0);
MakeComm(0x4ACCF4, "'+44'");
MakeDword(0x4ACCF4);
MakeComm(0x4ACCF8, "'+48'");
MakeDword(0x4ACCF8);
MakeComm(0x4ACCFC, "'+4C'");
MakeDword(0x4ACCFC);
MakeComm(0x4ACD00, "'+50'");
MakeDword(0x4ACD00);
MakeComm(0x4ACD04, "'+54'");
MakeDword(0x4ACD04);
MakeComm(0x4ACD08, "'+58'");
MakeDword(0x4ACD08);
MakeComm(0x4ACD0C, "'+5C'");
MakeDword(0x4ACD0C);
MakeComm(0x4ACD10, "'+60'");
MakeDword(0x4ACD10);
MakeComm(0x4ACD14, "'+64'");
MakeDword(0x4ACD14);
MakeComm(0x4ACD18, "'+68'");
MakeDword(0x4ACD18);
MakeComm(0x4ACD1C, "'+6C'");
MakeDword(0x4ACD1C);
MakeComm(0x4ACD20, "'+70'");
MakeDword(0x4ACD20);
MakeComm(0x4ACD24, "'+74'");
MakeDword(0x4ACD24);
MakeComm(0x4ACD28, "'+78'");
MakeDword(0x4ACD28);
MakeComm(0x4ACD2C, "'+7C'");
MakeDword(0x4ACD2C);
MakeComm(0x4ACD30, "'+80'");
MakeDword(0x4ACD30);
MakeComm(0x4ACD34, "'+84'");
MakeDword(0x4ACD34);
MakeComm(0x4ACD38, "'+88'");
MakeDword(0x4ACD38);
MakeComm(0x4ACD3C, "'+8C'");
MakeDword(0x4ACD3C);
MakeComm(0x4ACD40, "'+90'");
MakeDword(0x4ACD40);
MakeComm(0x4ACD44, "'+94'");
MakeDword(0x4ACD44);
MakeComm(0x4ACD48, "'+98'");
MakeDword(0x4ACD48);
MakeComm(0x4ACD4C, "'+9C'");
MakeDword(0x4ACD4C);
MakeComm(0x4ACD50, "'+A0'");
MakeDword(0x4ACD50);
MakeComm(0x4ACD54, "'+A4'");
MakeDword(0x4ACD54);
MakeComm(0x4ACD58, "'+A8'");
MakeDword(0x4ACD58);
MakeComm(0x4ACD5C, "'+AC'");
MakeDword(0x4ACD5C);
MakeComm(0x4ACD60, "'+B0'");
MakeDword(0x4ACD60);
MakeComm(0x4ACD64, "'+B4'");
MakeDword(0x4ACD64);
MakeComm(0x4ACD68, "'+B8'");
MakeDword(0x4ACD68);
MakeComm(0x4ACD6C, "'+BC'");
MakeDword(0x4ACD6C);
MakeComm(0x4ACD70, "'+C0'");
MakeDword(0x4ACD70);
MakeComm(0x4ACD74, "'+C4'");
MakeDword(0x4ACD74);
MakeComm(0x4ACD78, "'+C8'");
MakeDword(0x4ACD78);
MakeComm(0x4ACD7C, "'+CC'");
MakeDword(0x4ACD7C);
MakeComm(0x4ACD80, "'+D0'");
MakeDword(0x4ACD80);
MakeComm(0x4ACD84, "'+D4'");
MakeDword(0x4ACD84);
MakeComm(0x4ACD88, "'+D8'");
MakeDword(0x4ACD88);
MakeComm(0x4ACD8C, "'+DC'");
MakeDword(0x4ACD8C);
MakeComm(0x4ACD90, "'+E0'");
MakeDword(0x4ACD90);
MakeComm(0x4ACD94, "'+E4'");
MakeDword(0x4ACD94);
MakeComm(0x4ACD98, "'+E8'");
MakeDword(0x4ACD98);
MakeComm(0x4ACD9C, "'+EC'");
MakeDword(0x4ACD9C);
MakeComm(0x4ACDA0, "'+F0'");
MakeDword(0x4ACDA0);
MakeComm(0x4ACDA4, "'+F4'");
MakeDword(0x4ACDA4);
MakeComm(0x4ACDA8, "'+F8'");
MakeDword(0x4ACDA8);
MakeComm(0x4ACDAC, "'+FC'");
MakeDword(0x4ACDAC);
MakeComm(0x4ACDB0, "'+100'");
MakeDword(0x4ACDB0);
MakeUnkn(0x4ACEA4, 1);
MakeNameEx(0x4ACEA4, "RTTI_4ACEA4_Class_TPrintForm", 0);
MakeDword(0x4ACEA4);
MakeUnkn(0x4ACEA8, 1);
MakeNameEx(0x4ACEA8, "", 0);
MakeByte(0x4ACEA8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4ACEA9, 0x4ACEB4);
MakeDword(0x4ACEB4);
MakeDword(0x4ACEB8);
MakeWord(0x4ACEBC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4ACEBE, 0x4ACEC7);
MakeWord(0x4ACEC7);
MakeUnkn(0x4ACECC, 1);
MakeNameEx(0x4ACECC, "TPrintForm.FormCloseQuery", 0x20);
MakeComm(0x4ACECC, "'procedure TPrintForm.FormCloseQuery(Sender:TObject; var CanClose:Boolean);'");
MakeCode(0x4ACECC);
MakeComm(0x4ACED6, "'TPrintForm.FModalResult:TModalResult'");
MakeComm(0x4ACEE1, "'TPrintForm.TracksList:TCheckListBox'");
MakeComm(0x4ACEE7, "'TCheckListBox.FItems:TStrings'");
MakeComm(0x4ACEEF, "'TStrings.GetCount'");
MakeCode(0x4ACEFC);
MakeComm(0x4ACEFE, "'TPrintForm.TracksList:TCheckListBox'");
MakeCode(0x4ACF11);
MakeCode(0x4ACF15);
MakeComm(0x4ACF1F, "'TPrintForm.TracksList:TCheckListBox'");
MakeComm(0x4ACF27, "'TWinControl.SetFocus'");
MakeCode(0x4ACF42);
MakeFunction(0x4ACECC, 0x4ACF48);
MakeUnkn(0x4ACF6C, 1);
MakeNameEx(0x4ACF6C, "TPrintForm.HelpButtonClick", 0x20);
MakeComm(0x4ACF6C, "'procedure TPrintForm.HelpButtonClick(Sender:TObject);'");
MakeCode(0x4ACF6C);
MakeComm(0x4ACF74, "'TPrintForm.HelpContext:THelpContext'");
MakeFunction(0x4ACF6C, 0x4ACF81);
MakeUnkn(0x4ACF84, 1);
MakeNameEx(0x4ACF84, "VMT_4ACF84_TUpdateStatusForm", 0);
MakeDword(0x4ACF84);
MakeDword(0x4ACF88);
MakeDword(0x4ACF8C);
MakeDword(0x4ACF90);
MakeDword(0x4ACF94);
MakeDword(0x4ACF98);
MakeUnkn(0x4AD0D4, 1);
MakeNameEx(0x4AD0D4, "TUpdateStatusForm_FieldTable", 0);
MakeWord(0x4AD0D4);
MakeDword(0x4AD0D6);
MakeWord(0x4AD13D);
MakeDword(0x4AD13F);
MakeDword(0x4AD143);
MakeDword(0x4AD147);
MakeDword(0x4AD0DA);
MakeWord(0x4AD0DE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AD0E0, 0x4AD0EC);
MakeDword(0x4AD0EC);
MakeWord(0x4AD0F0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AD0F2, 0x4AD0FF);
MakeDword(0x4AD0FF);
MakeWord(0x4AD103);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AD105, 0x4AD111);
MakeDword(0x4ACF9C);
MakeUnkn(0x4AD111, 1);
MakeNameEx(0x4AD111, "TUpdateStatusForm_MethodTable", 0);
MakeWord(0x4AD111);
MakeWord(0x4AD113);
MakeDword(0x4AD115);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AD119, 0x4AD12B);
MakeDword(0x4ACFA0);
MakeDword(0x4ACFA4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AD12B, 0x4AD13D);
MakeDword(0x4ACFA8);
MakeDword(0x4ACFAC);
MakeDword(0x4ACFB0);
MakeDword(0x4ACFB4);
MakeDword(0x4ACFB8);
MakeDword(0x4ACFBC);
MakeDword(0x4ACFC0);
MakeDword(0x4ACFC4);
MakeDword(0x4ACFC8);
MakeDword(0x4ACFCC);
MakeComm(0x4ACFD0, "'+0'");
MakeDword(0x4ACFD0);
MakeComm(0x4ACFD4, "'+4'");
MakeDword(0x4ACFD4);
MakeComm(0x4ACFD8, "'+8'");
MakeDword(0x4ACFD8);
MakeComm(0x4ACFDC, "'+C'");
MakeDword(0x4ACFDC);
MakeComm(0x4ACFE0, "'+10'");
MakeDword(0x4ACFE0);
MakeComm(0x4ACFE4, "'+14'");
MakeDword(0x4ACFE4);
MakeComm(0x4ACFE8, "'+18'");
MakeDword(0x4ACFE8);
MakeComm(0x4ACFEC, "'+1C'");
MakeDword(0x4ACFEC);
MakeComm(0x4ACFF0, "'+20'");
MakeDword(0x4ACFF0);
MakeComm(0x4ACFF4, "'+24'");
MakeDword(0x4ACFF4);
MakeComm(0x4ACFF8, "'+28'");
MakeDword(0x4ACFF8);
MakeComm(0x4ACFFC, "'+2C'");
MakeDword(0x4ACFFC);
MakeComm(0x4AD000, "'+30'");
MakeDword(0x4AD000);
MakeComm(0x4AD004, "'+34'");
MakeDword(0x4AD004);
MakeComm(0x4AD008, "'+38'");
MakeDword(0x4AD008);
MakeComm(0x4AD00C, "'+3C'");
MakeDword(0x4AD00C);
MakeComm(0x4AD010, "'+40'");
MakeDword(0x4AD010);
MakeComm(0x4AD014, "'+44'");
MakeDword(0x4AD014);
MakeComm(0x4AD018, "'+48'");
MakeDword(0x4AD018);
MakeComm(0x4AD01C, "'+4C'");
MakeDword(0x4AD01C);
MakeComm(0x4AD020, "'+50'");
MakeDword(0x4AD020);
MakeComm(0x4AD024, "'+54'");
MakeDword(0x4AD024);
MakeComm(0x4AD028, "'+58'");
MakeDword(0x4AD028);
MakeComm(0x4AD02C, "'+5C'");
MakeDword(0x4AD02C);
MakeComm(0x4AD030, "'+60'");
MakeDword(0x4AD030);
MakeComm(0x4AD034, "'+64'");
MakeDword(0x4AD034);
MakeComm(0x4AD038, "'+68'");
MakeDword(0x4AD038);
MakeComm(0x4AD03C, "'+6C'");
MakeDword(0x4AD03C);
MakeComm(0x4AD040, "'+70'");
MakeDword(0x4AD040);
MakeComm(0x4AD044, "'+74'");
MakeDword(0x4AD044);
MakeComm(0x4AD048, "'+78'");
MakeDword(0x4AD048);
MakeComm(0x4AD04C, "'+7C'");
MakeDword(0x4AD04C);
MakeComm(0x4AD050, "'+80'");
MakeDword(0x4AD050);
MakeComm(0x4AD054, "'+84'");
MakeDword(0x4AD054);
MakeComm(0x4AD058, "'+88'");
MakeDword(0x4AD058);
MakeComm(0x4AD05C, "'+8C'");
MakeDword(0x4AD05C);
MakeComm(0x4AD060, "'+90'");
MakeDword(0x4AD060);
MakeComm(0x4AD064, "'+94'");
MakeDword(0x4AD064);
MakeComm(0x4AD068, "'+98'");
MakeDword(0x4AD068);
MakeComm(0x4AD06C, "'+9C'");
MakeDword(0x4AD06C);
MakeComm(0x4AD070, "'+A0'");
MakeDword(0x4AD070);
MakeComm(0x4AD074, "'+A4'");
MakeDword(0x4AD074);
MakeComm(0x4AD078, "'+A8'");
MakeDword(0x4AD078);
MakeComm(0x4AD07C, "'+AC'");
MakeDword(0x4AD07C);
MakeComm(0x4AD080, "'+B0'");
MakeDword(0x4AD080);
MakeComm(0x4AD084, "'+B4'");
MakeDword(0x4AD084);
MakeComm(0x4AD088, "'+B8'");
MakeDword(0x4AD088);
MakeComm(0x4AD08C, "'+BC'");
MakeDword(0x4AD08C);
MakeComm(0x4AD090, "'+C0'");
MakeDword(0x4AD090);
MakeComm(0x4AD094, "'+C4'");
MakeDword(0x4AD094);
MakeComm(0x4AD098, "'+C8'");
MakeDword(0x4AD098);
MakeComm(0x4AD09C, "'+CC'");
MakeDword(0x4AD09C);
MakeComm(0x4AD0A0, "'+D0'");
MakeDword(0x4AD0A0);
MakeComm(0x4AD0A4, "'+D4'");
MakeDword(0x4AD0A4);
MakeComm(0x4AD0A8, "'+D8'");
MakeDword(0x4AD0A8);
MakeComm(0x4AD0AC, "'+DC'");
MakeDword(0x4AD0AC);
MakeComm(0x4AD0B0, "'+E0'");
MakeDword(0x4AD0B0);
MakeComm(0x4AD0B4, "'+E4'");
MakeDword(0x4AD0B4);
MakeComm(0x4AD0B8, "'+E8'");
MakeDword(0x4AD0B8);
MakeComm(0x4AD0BC, "'+EC'");
MakeDword(0x4AD0BC);
MakeComm(0x4AD0C0, "'+F0'");
MakeDword(0x4AD0C0);
MakeComm(0x4AD0C4, "'+F4'");
MakeDword(0x4AD0C4);
MakeComm(0x4AD0C8, "'+F8'");
MakeDword(0x4AD0C8);
MakeComm(0x4AD0CC, "'+FC'");
MakeDword(0x4AD0CC);
MakeComm(0x4AD0D0, "'+100'");
MakeDword(0x4AD0D0);
MakeUnkn(0x4AD14C, 1);
MakeNameEx(0x4AD14C, "RTTI_4AD14C_Class_TUpdateStatusForm", 0);
MakeDword(0x4AD14C);
MakeUnkn(0x4AD150, 1);
MakeNameEx(0x4AD150, "", 0);
MakeByte(0x4AD150);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AD151, 0x4AD163);
MakeDword(0x4AD163);
MakeDword(0x4AD167);
MakeWord(0x4AD16B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AD16D, 0x4AD17A);
MakeWord(0x4AD17A);
MakeUnkn(0x4AD17C, 1);
MakeNameEx(0x4AD17C, "TUpdateStatusForm.CancelButtonClick", 0x20);
MakeComm(0x4AD17C, "'procedure TUpdateStatusForm.CancelButtonClick(Sender:TObject);'");
MakeCode(0x4AD17C);
MakeComm(0x4AD17C, "'TUpdateStatusForm.?f36C:byte'");
MakeComm(0x4AD185, "'TUpdateStatusForm.CancelButton:TButton'");
MakeComm(0x4AD18D, "'TControl.SetEnabled'");
MakeFunction(0x4AD17C, 0x4AD191);
MakeUnkn(0x4AD194, 1);
MakeNameEx(0x4AD194, "VMT_4AD194_EInternetStreamError", 0);
MakeDword(0x4AD194);
MakeDword(0x4AD198);
MakeDword(0x4AD19C);
MakeDword(0x4AD1A0);
MakeDword(0x4AD1A4);
MakeDword(0x4AD1A8);
MakeDword(0x4AD1AC);
MakeDword(0x4AD1B0);
MakeDword(0x4AD1B4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AD1E0, 0x4AD1F5);
MakeDword(0x4AD1B8);
MakeDword(0x4AD1BC);
MakeDword(0x4AD1C0);
MakeDword(0x4AD1C4);
MakeDword(0x4AD1C8);
MakeDword(0x4AD1CC);
MakeDword(0x4AD1D0);
MakeDword(0x4AD1D4);
MakeDword(0x4AD1D8);
MakeDword(0x4AD1DC);
MakeUnkn(0x4AD1F8, 1);
MakeNameEx(0x4AD1F8, "VMT_4AD1F8_TInternetStream", 0);
MakeDword(0x4AD1F8);
MakeDword(0x4AD1FC);
MakeDword(0x4AD200);
MakeDword(0x4AD204);
MakeDword(0x4AD208);
MakeDword(0x4AD20C);
MakeDword(0x4AD210);
MakeDword(0x4AD214);
MakeDword(0x4AD218);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AD260, 0x4AD270);
MakeDword(0x4AD21C);
MakeDword(0x4AD220);
MakeDword(0x4AD224);
MakeDword(0x4AD228);
MakeDword(0x4AD22C);
MakeDword(0x4AD230);
MakeDword(0x4AD234);
MakeDword(0x4AD238);
MakeDword(0x4AD23C);
MakeDword(0x4AD240);
MakeComm(0x4AD244, "'+0'");
MakeDword(0x4AD244);
MakeComm(0x4AD248, "'+4'");
MakeDword(0x4AD248);
MakeComm(0x4AD24C, "'+8'");
MakeDword(0x4AD24C);
MakeComm(0x4AD250, "'+C'");
MakeDword(0x4AD250);
MakeComm(0x4AD254, "'+10'");
MakeDword(0x4AD254);
MakeComm(0x4AD258, "'+14'");
MakeDword(0x4AD258);
MakeComm(0x4AD25C, "'+18'");
MakeDword(0x4AD25C);
MakeCode(0x4AD270);
MakeCode(0x4AD29D);
MakeCode(0x4AD29E);
MakeCode(0x4AD2B1);
MakeCode(0x4AD2C9);
MakeFunction(0x4AD270, 0x4AD2D2);
MakeCode(0x4AD2D4);
MakeComm(0x4AD32C, "'EInternetStreamError.Create'");
MakeCode(0x4AD336);
MakeCode(0x4AD343);
MakeCode(0x4AD34C);
MakeCode(0x4AD351);
MakeFunction(0x4AD2D4, 0x4AD359);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4AD364, -1);
MakeDword(0x4AD360);
MakeDword(0x4AD35C);
MakeCode(0x4AD378);
MakeComm(0x4AD3AB, "'EInternetStreamError.Create'");
MakeCode(0x4AD3B5);
MakeFunction(0x4AD378, 0x4AD3BA);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4AD3C4, -1);
MakeDword(0x4AD3C0);
MakeDword(0x4AD3BC);
MakeCode(0x4AD3FC);
MakeCode(0x4AD431);
MakeComm(0x4AD43D, "'EInternetStreamError.Create'");
MakeCode(0x4AD449);
MakeCode(0x4AD453);
MakeCode(0x4AD4B7);
MakeFunction(0x4AD3FC, 0x4AD4BA);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4AD4BC, 0x4AD4C8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4AD4D0, -1);
MakeDword(0x4AD4CC);
MakeDword(0x4AD4C8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4AD544, -1);
MakeDword(0x4AD540);
MakeDword(0x4AD53C);
MakeUnkn(0x4AD5AC, 1);
MakeNameEx(0x4AD5AC, "TInternetStream.Create", 0x20);
MakeComm(0x4AD5AC, "'constructor TInternetStream.Create(?:?);'");
MakeCode(0x4AD5AC);
MakeCode(0x4AD5BF);
MakeCode(0x4AD5F7);
MakeCode(0x4AD626);
MakeCode(0x4AD63D);
MakeFunction(0x4AD5AC, 0x4AD647);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4AD650, -1);
MakeDword(0x4AD64C);
MakeDword(0x4AD648);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4AD668, -1);
MakeDword(0x4AD664);
MakeDword(0x4AD660);
MakeUnkn(0x4AD678, 1);
MakeNameEx(0x4AD678, "TInternetStream.Destroy", 0x20);
MakeComm(0x4AD678, "'destructor TInternetStream.Destroy;'");
MakeCode(0x4AD678);
MakeComm(0x4AD683, "'TInternetStream.?f8:dword'");
MakeComm(0x4AD691, "'TInternetStream.?f4:dword'");
MakeCode(0x4AD691);
MakeCode(0x4AD69F);
MakeCode(0x4AD6B6);
MakeFunction(0x4AD678, 0x4AD6B9);
MakeUnkn(0x4AD6BC, 1);
MakeNameEx(0x4AD6BC, "TInternetStream.Read", 0x20);
MakeComm(0x4AD6BC, "'function TInternetStream.Read(?:?; ?:?):?;'");
MakeCode(0x4AD6BC);
MakeComm(0x4AD6C9, "'TInternetStream.?f8:dword'");
MakeCode(0x4AD6E1);
MakeFunction(0x4AD6BC, 0x4AD6E9);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4AD6F4, -1);
MakeDword(0x4AD6F0);
MakeDword(0x4AD6EC);
MakeUnkn(0x4AD708, 1);
MakeNameEx(0x4AD708, "TInternetStream.Seek", 0x20);
MakeComm(0x4AD708, "'function TInternetStream.Seek(Offset:Longint; Origin:Word):?;'");
MakeCode(0x4AD708);
MakeComm(0x4AD719, "'EInternetStreamError.Create'");
MakeCode(0x4AD723);
MakeCode(0x4AD73A);
MakeFunction(0x4AD708, 0x4AD73F);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4AD748, -1);
MakeDword(0x4AD744);
MakeDword(0x4AD740);
MakeUnkn(0x4AD764, 1);
MakeNameEx(0x4AD764, "TInternetStream.Write", 0x20);
MakeComm(0x4AD764, "'function TInternetStream.Write:?;'");
MakeCode(0x4AD764);
MakeFunction(0x4AD764, 0x4AD767);
MakeCode(0x4AD768);
MakeComm(0x4AD793, "'TInternetStream.?f8:dword'");
MakeCode(0x4AD7AB);
MakeFunction(0x4AD768, 0x4AD7B1);
MakeCode(0x4AD7B4);
MakeFunction(0x4AD7B4, 0x4AD7C6);
MakeCode(0x4AD7C8);
MakeFunction(0x4AD7C8, 0x4AD7EA);
MakeCode(0x4AD7EC);
MakeCode(0x4AD852);
MakeComm(0x4AD85C, "'TInternetStream.Create'");
MakeComm(0x4AD8A6, "'Exception.Create'");
MakeCode(0x4AD8B0);
MakeComm(0x4AD8B5, "'TStream.GetSize'");
MakeCode(0x4AD8CF);
MakeComm(0x4AD8E4, "'TInternetStream.Read'");
MakeCode(0x4AD909);
MakeCode(0x4AD931);
MakeCode(0x4AD968);
MakeCode(0x4AD975);
MakeCode(0x4AD97E);
MakeCode(0x4AD983);
MakeCode(0x4AD985);
MakeCode(0x4AD98F);
MakeDword(0x4AD994);
MakeDword(0x4AD998);
MakeDword(0x4AD99C);
MakeCode(0x4AD9A0);
MakeComm(0x4AD9A2, "'EInternetStreamError.FMessage:string'");
MakeComm(0x4AD9C7, "'Exception.Create'");
MakeCode(0x4AD9D6);
MakeFunction(0x4AD7EC, 0x4AD9DD);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4AD9E8, -1);
MakeDword(0x4AD9E4);
MakeDword(0x4AD9E0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4ADA4C, -1);
MakeDword(0x4ADA48);
MakeDword(0x4ADA44);
MakeCode(0x4ADA78);
MakeCode(0x4ADAA8);
MakeCode(0x4ADAAB);
MakeFunction(0x4ADA78, 0x4ADAD2);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4ADADC, -1);
MakeDword(0x4ADAD8);
MakeDword(0x4ADAD4);
MakeCode(0x4ADAE0);
MakeCode(0x4ADAE8);
MakeComm(0x4ADB06, "'TUpdateStatusForm.Create'");
MakeCode(0x4ADB9F);
MakeCode(0x4ADBAC);
MakeCode(0x4ADBB5);
MakeCode(0x4ADBBA);
MakeCode(0x4ADBBC);
MakeCode(0x4ADBC9);
MakeCode(0x4ADBD4);
MakeCode(0x4ADBD9);
MakeCode(0x4ADC3D);
MakeCode(0x4ADC9B);
MakeCode(0x4ADCC8);
MakeCode(0x4ADCD5);
MakeCode(0x4ADCF8);
MakeCode(0x4ADCFD);
MakeFunction(0x4ADAE0, 0x4ADD03);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4ADD0C, -1);
MakeDword(0x4ADD08);
MakeDword(0x4ADD04);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4ADD4C, -1);
MakeDword(0x4ADD48);
MakeDword(0x4ADD44);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4ADD58, -1);
MakeDword(0x4ADD54);
MakeDword(0x4ADD50);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4ADD5C, 0x4ADD61);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4ADD6C, -1);
MakeDword(0x4ADD68);
MakeDword(0x4ADD64);
MakeUnkn(0x4ADD9C, 1);
MakeNameEx(0x4ADD9C, "VMT_4ADD9C_TAddBarsForm", 0);
MakeDword(0x4ADD9C);
MakeDword(0x4ADDA0);
MakeDword(0x4ADDA4);
MakeDword(0x4ADDA8);
MakeDword(0x4ADDAC);
MakeDword(0x4ADDB0);
MakeUnkn(0x4ADEEC, 1);
MakeNameEx(0x4ADEEC, "TAddBarsForm_FieldTable", 0);
MakeWord(0x4ADEEC);
MakeDword(0x4ADEEE);
MakeWord(0x4ADFD5);
MakeDword(0x4ADFD7);
MakeDword(0x4ADFDB);
MakeDword(0x4ADFDF);
MakeDword(0x4ADFE3);
MakeDword(0x4ADEF2);
MakeWord(0x4ADEF6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4ADEF8, 0x4ADF04);
MakeDword(0x4ADF04);
MakeWord(0x4ADF08);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4ADF0A, 0x4ADF16);
MakeDword(0x4ADF16);
MakeWord(0x4ADF1A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4ADF1C, 0x4ADF25);
MakeDword(0x4ADF25);
MakeWord(0x4ADF29);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4ADF2B, 0x4ADF38);
MakeDword(0x4ADF38);
MakeWord(0x4ADF3C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4ADF3E, 0x4ADF49);
MakeDword(0x4ADF49);
MakeWord(0x4ADF4D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4ADF4F, 0x4ADF56);
MakeDword(0x4ADF56);
MakeWord(0x4ADF5A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4ADF5C, 0x4ADF69);
MakeDword(0x4ADF69);
MakeWord(0x4ADF6D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4ADF6F, 0x4ADF7D);
MakeDword(0x4ADF7D);
MakeWord(0x4ADF81);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4ADF83, 0x4ADF8A);
MakeDword(0x4ADDB4);
MakeUnkn(0x4ADF8A, 1);
MakeNameEx(0x4ADF8A, "TAddBarsForm_MethodTable", 0);
MakeWord(0x4ADF8A);
MakeWord(0x4ADF8C);
MakeDword(0x4ADF8E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4ADF92, 0x4ADFA1);
MakeWord(0x4ADFA1);
MakeDword(0x4ADFA3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4ADFA7, 0x4ADFB7);
MakeWord(0x4ADFB7);
MakeDword(0x4ADFB9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4ADFBD, 0x4ADFC8);
MakeDword(0x4ADDB8);
MakeDword(0x4ADDBC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4ADFC8, 0x4ADFD5);
MakeDword(0x4ADDC0);
MakeDword(0x4ADDC4);
MakeDword(0x4ADDC8);
MakeDword(0x4ADDCC);
MakeDword(0x4ADDD0);
MakeDword(0x4ADDD4);
MakeDword(0x4ADDD8);
MakeDword(0x4ADDDC);
MakeDword(0x4ADDE0);
MakeDword(0x4ADDE4);
MakeComm(0x4ADDE8, "'+0'");
MakeDword(0x4ADDE8);
MakeComm(0x4ADDEC, "'+4'");
MakeDword(0x4ADDEC);
MakeComm(0x4ADDF0, "'+8'");
MakeDword(0x4ADDF0);
MakeComm(0x4ADDF4, "'+C'");
MakeDword(0x4ADDF4);
MakeComm(0x4ADDF8, "'+10'");
MakeDword(0x4ADDF8);
MakeComm(0x4ADDFC, "'+14'");
MakeDword(0x4ADDFC);
MakeComm(0x4ADE00, "'+18'");
MakeDword(0x4ADE00);
MakeComm(0x4ADE04, "'+1C'");
MakeDword(0x4ADE04);
MakeComm(0x4ADE08, "'+20'");
MakeDword(0x4ADE08);
MakeComm(0x4ADE0C, "'+24'");
MakeDword(0x4ADE0C);
MakeComm(0x4ADE10, "'+28'");
MakeDword(0x4ADE10);
MakeComm(0x4ADE14, "'+2C'");
MakeDword(0x4ADE14);
MakeComm(0x4ADE18, "'+30'");
MakeDword(0x4ADE18);
MakeComm(0x4ADE1C, "'+34'");
MakeDword(0x4ADE1C);
MakeComm(0x4ADE20, "'+38'");
MakeDword(0x4ADE20);
MakeComm(0x4ADE24, "'+3C'");
MakeDword(0x4ADE24);
MakeComm(0x4ADE28, "'+40'");
MakeDword(0x4ADE28);
MakeComm(0x4ADE2C, "'+44'");
MakeDword(0x4ADE2C);
MakeComm(0x4ADE30, "'+48'");
MakeDword(0x4ADE30);
MakeComm(0x4ADE34, "'+4C'");
MakeDword(0x4ADE34);
MakeComm(0x4ADE38, "'+50'");
MakeDword(0x4ADE38);
MakeComm(0x4ADE3C, "'+54'");
MakeDword(0x4ADE3C);
MakeComm(0x4ADE40, "'+58'");
MakeDword(0x4ADE40);
MakeComm(0x4ADE44, "'+5C'");
MakeDword(0x4ADE44);
MakeComm(0x4ADE48, "'+60'");
MakeDword(0x4ADE48);
MakeComm(0x4ADE4C, "'+64'");
MakeDword(0x4ADE4C);
MakeComm(0x4ADE50, "'+68'");
MakeDword(0x4ADE50);
MakeComm(0x4ADE54, "'+6C'");
MakeDword(0x4ADE54);
MakeComm(0x4ADE58, "'+70'");
MakeDword(0x4ADE58);
MakeComm(0x4ADE5C, "'+74'");
MakeDword(0x4ADE5C);
MakeComm(0x4ADE60, "'+78'");
MakeDword(0x4ADE60);
MakeComm(0x4ADE64, "'+7C'");
MakeDword(0x4ADE64);
MakeComm(0x4ADE68, "'+80'");
MakeDword(0x4ADE68);
MakeComm(0x4ADE6C, "'+84'");
MakeDword(0x4ADE6C);
MakeComm(0x4ADE70, "'+88'");
MakeDword(0x4ADE70);
MakeComm(0x4ADE74, "'+8C'");
MakeDword(0x4ADE74);
MakeComm(0x4ADE78, "'+90'");
MakeDword(0x4ADE78);
MakeComm(0x4ADE7C, "'+94'");
MakeDword(0x4ADE7C);
MakeComm(0x4ADE80, "'+98'");
MakeDword(0x4ADE80);
MakeComm(0x4ADE84, "'+9C'");
MakeDword(0x4ADE84);
MakeComm(0x4ADE88, "'+A0'");
MakeDword(0x4ADE88);
MakeComm(0x4ADE8C, "'+A4'");
MakeDword(0x4ADE8C);
MakeComm(0x4ADE90, "'+A8'");
MakeDword(0x4ADE90);
MakeComm(0x4ADE94, "'+AC'");
MakeDword(0x4ADE94);
MakeComm(0x4ADE98, "'+B0'");
MakeDword(0x4ADE98);
MakeComm(0x4ADE9C, "'+B4'");
MakeDword(0x4ADE9C);
MakeComm(0x4ADEA0, "'+B8'");
MakeDword(0x4ADEA0);
MakeComm(0x4ADEA4, "'+BC'");
MakeDword(0x4ADEA4);
MakeComm(0x4ADEA8, "'+C0'");
MakeDword(0x4ADEA8);
MakeComm(0x4ADEAC, "'+C4'");
MakeDword(0x4ADEAC);
MakeComm(0x4ADEB0, "'+C8'");
MakeDword(0x4ADEB0);
MakeComm(0x4ADEB4, "'+CC'");
MakeDword(0x4ADEB4);
MakeComm(0x4ADEB8, "'+D0'");
MakeDword(0x4ADEB8);
MakeComm(0x4ADEBC, "'+D4'");
MakeDword(0x4ADEBC);
MakeComm(0x4ADEC0, "'+D8'");
MakeDword(0x4ADEC0);
MakeComm(0x4ADEC4, "'+DC'");
MakeDword(0x4ADEC4);
MakeComm(0x4ADEC8, "'+E0'");
MakeDword(0x4ADEC8);
MakeComm(0x4ADECC, "'+E4'");
MakeDword(0x4ADECC);
MakeComm(0x4ADED0, "'+E8'");
MakeDword(0x4ADED0);
MakeComm(0x4ADED4, "'+EC'");
MakeDword(0x4ADED4);
MakeComm(0x4ADED8, "'+F0'");
MakeDword(0x4ADED8);
MakeComm(0x4ADEDC, "'+F4'");
MakeDword(0x4ADEDC);
MakeComm(0x4ADEE0, "'+F8'");
MakeDword(0x4ADEE0);
MakeComm(0x4ADEE4, "'+FC'");
MakeDword(0x4ADEE4);
MakeComm(0x4ADEE8, "'+100'");
MakeDword(0x4ADEE8);
MakeUnkn(0x4ADFE8, 1);
MakeNameEx(0x4ADFE8, "RTTI_4ADFE8_Class_TAddBarsForm", 0);
MakeDword(0x4ADFE8);
MakeUnkn(0x4ADFEC, 1);
MakeNameEx(0x4ADFEC, "", 0);
MakeByte(0x4ADFEC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4ADFED, 0x4ADFFA);
MakeDword(0x4ADFFA);
MakeDword(0x4ADFFE);
MakeWord(0x4AE002);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AE004, 0x4AE00C);
MakeWord(0x4AE00C);
MakeUnkn(0x4AE010, 1);
MakeNameEx(0x4AE010, "TAddBarsForm.FormCreate", 0x20);
MakeComm(0x4AE010, "'procedure TAddBarsForm.FormCreate(Sender:TObject);'");
MakeCode(0x4AE010);
MakeComm(0x4AE012, "'TAddBarsForm.FractionCombo:TComboBox'");
MakeComm(0x4AE01A, "'TCustomCombo.SetItemIndex'");
MakeFunction(0x4AE010, 0x4AE021);
MakeUnkn(0x4AE024, 1);
MakeNameEx(0x4AE024, "TAddBarsForm.FormCloseQuery", 0x20);
MakeComm(0x4AE024, "'procedure TAddBarsForm.FormCloseQuery(Sender:TObject; var CanClose:Boolean);'");
MakeCode(0x4AE024);
MakeComm(0x4AE045, "'TAddBarsForm.FModalResult:TModalResult'");
MakeComm(0x4AE055, "'TAddBarsForm.NumBarsEdit:TEdit'");
MakeComm(0x4AE076, "'TAddBarsForm.?f384:Longint'");
MakeComm(0x4AE082, "'TAddBarsForm.?f384:Longint'");
MakeComm(0x4AE08B, "'TAddBarsForm.?f384:Longint'");
MakeCode(0x4AE097);
MakeComm(0x4AE09A, "'TAddBarsForm.NumBarsEdit:TEdit'");
MakeComm(0x4AE0A2, "'TWinControl.SetFocus'");
MakeCode(0x4AE0C2);
MakeComm(0x4AE0C5, "'TAddBarsForm.BarLinesEdit:TEdit'");
MakeComm(0x4AE0E6, "'TAddBarsForm.?f388:Longint'");
MakeComm(0x4AE0F2, "'TAddBarsForm.?f388:Longint'");
MakeComm(0x4AE0FB, "'TAddBarsForm.?f388:Longint'");
MakeCode(0x4AE104);
MakeComm(0x4AE107, "'TAddBarsForm.BarLinesEdit:TEdit'");
MakeComm(0x4AE10F, "'TWinControl.SetFocus'");
MakeComm(0x4AE12C, "'TAddBarsForm.FractionCombo:TComboBox'");
MakeCode(0x4AE12C);
MakeComm(0x4AE134, "'TCustomCombo.GetItemIndex'");
MakeComm(0x4AE13A, "'TAddBarsForm.?f388:Longint'");
MakeComm(0x4AE146, "'TAddBarsForm.?f388:Longint'");
MakeCode(0x4AE14C);
MakeCode(0x4AE159);
MakeCode(0x4AE17A);
MakeCode(0x4AE17F);
MakeFunction(0x4AE024, 0x4AE187);
MakeUnkn(0x4AE1D4, 1);
MakeNameEx(0x4AE1D4, "TAddBarsForm.HelpButtonClick", 0x20);
MakeComm(0x4AE1D4, "'procedure TAddBarsForm.HelpButtonClick(Sender:TObject);'");
MakeCode(0x4AE1D4);
MakeComm(0x4AE1DC, "'TAddBarsForm.HelpContext:THelpContext'");
MakeFunction(0x4AE1D4, 0x4AE1E9);
MakeUnkn(0x4AE1EC, 1);
MakeNameEx(0x4AE1EC, "VMT_4AE1EC_TOddTimeForm", 0);
MakeDword(0x4AE1EC);
MakeDword(0x4AE1F0);
MakeDword(0x4AE1F4);
MakeDword(0x4AE1F8);
MakeDword(0x4AE1FC);
MakeDword(0x4AE200);
MakeUnkn(0x4AE33C, 1);
MakeNameEx(0x4AE33C, "TOddTimeForm_FieldTable", 0);
MakeWord(0x4AE33C);
MakeDword(0x4AE33E);
MakeWord(0x4AE495);
MakeDword(0x4AE497);
MakeDword(0x4AE49B);
MakeDword(0x4AE49F);
MakeDword(0x4AE4A3);
MakeDword(0x4AE4A7);
MakeDword(0x4AE342);
MakeWord(0x4AE346);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AE348, 0x4AE352);
MakeDword(0x4AE352);
MakeWord(0x4AE356);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AE358, 0x4AE361);
MakeDword(0x4AE361);
MakeWord(0x4AE365);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AE367, 0x4AE374);
MakeDword(0x4AE374);
MakeWord(0x4AE378);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AE37A, 0x4AE381);
MakeDword(0x4AE381);
MakeWord(0x4AE385);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AE387, 0x4AE394);
MakeDword(0x4AE394);
MakeWord(0x4AE398);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AE39A, 0x4AE3A5);
MakeDword(0x4AE3A5);
MakeWord(0x4AE3A9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AE3AB, 0x4AE3B7);
MakeDword(0x4AE3B7);
MakeWord(0x4AE3BB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AE3BD, 0x4AE3C5);
MakeDword(0x4AE3C5);
MakeWord(0x4AE3C9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AE3CB, 0x4AE3D6);
MakeDword(0x4AE3D6);
MakeWord(0x4AE3DA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AE3DC, 0x4AE3E5);
MakeDword(0x4AE3E5);
MakeWord(0x4AE3E9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AE3EB, 0x4AE3F6);
MakeDword(0x4AE3F6);
MakeWord(0x4AE3FA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AE3FC, 0x4AE405);
MakeDword(0x4AE204);
MakeUnkn(0x4AE405, 1);
MakeNameEx(0x4AE405, "TOddTimeForm_MethodTable", 0);
MakeWord(0x4AE405);
MakeWord(0x4AE407);
MakeDword(0x4AE409);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AE40D, 0x4AE41D);
MakeWord(0x4AE41D);
MakeDword(0x4AE41F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AE423, 0x4AE435);
MakeWord(0x4AE435);
MakeDword(0x4AE437);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AE43B, 0x4AE44B);
MakeWord(0x4AE44B);
MakeDword(0x4AE44D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AE451, 0x4AE462);
MakeWord(0x4AE462);
MakeDword(0x4AE464);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AE468, 0x4AE477);
MakeWord(0x4AE477);
MakeDword(0x4AE479);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AE47D, 0x4AE488);
MakeDword(0x4AE208);
MakeDword(0x4AE20C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AE488, 0x4AE495);
MakeDword(0x4AE210);
MakeDword(0x4AE214);
MakeDword(0x4AE218);
MakeDword(0x4AE21C);
MakeDword(0x4AE220);
MakeDword(0x4AE224);
MakeDword(0x4AE228);
MakeDword(0x4AE22C);
MakeDword(0x4AE230);
MakeDword(0x4AE234);
MakeComm(0x4AE238, "'+0'");
MakeDword(0x4AE238);
MakeComm(0x4AE23C, "'+4'");
MakeDword(0x4AE23C);
MakeComm(0x4AE240, "'+8'");
MakeDword(0x4AE240);
MakeComm(0x4AE244, "'+C'");
MakeDword(0x4AE244);
MakeComm(0x4AE248, "'+10'");
MakeDword(0x4AE248);
MakeComm(0x4AE24C, "'+14'");
MakeDword(0x4AE24C);
MakeComm(0x4AE250, "'+18'");
MakeDword(0x4AE250);
MakeComm(0x4AE254, "'+1C'");
MakeDword(0x4AE254);
MakeComm(0x4AE258, "'+20'");
MakeDword(0x4AE258);
MakeComm(0x4AE25C, "'+24'");
MakeDword(0x4AE25C);
MakeComm(0x4AE260, "'+28'");
MakeDword(0x4AE260);
MakeComm(0x4AE264, "'+2C'");
MakeDword(0x4AE264);
MakeComm(0x4AE268, "'+30'");
MakeDword(0x4AE268);
MakeComm(0x4AE26C, "'+34'");
MakeDword(0x4AE26C);
MakeComm(0x4AE270, "'+38'");
MakeDword(0x4AE270);
MakeComm(0x4AE274, "'+3C'");
MakeDword(0x4AE274);
MakeComm(0x4AE278, "'+40'");
MakeDword(0x4AE278);
MakeComm(0x4AE27C, "'+44'");
MakeDword(0x4AE27C);
MakeComm(0x4AE280, "'+48'");
MakeDword(0x4AE280);
MakeComm(0x4AE284, "'+4C'");
MakeDword(0x4AE284);
MakeComm(0x4AE288, "'+50'");
MakeDword(0x4AE288);
MakeComm(0x4AE28C, "'+54'");
MakeDword(0x4AE28C);
MakeComm(0x4AE290, "'+58'");
MakeDword(0x4AE290);
MakeComm(0x4AE294, "'+5C'");
MakeDword(0x4AE294);
MakeComm(0x4AE298, "'+60'");
MakeDword(0x4AE298);
MakeComm(0x4AE29C, "'+64'");
MakeDword(0x4AE29C);
MakeComm(0x4AE2A0, "'+68'");
MakeDword(0x4AE2A0);
MakeComm(0x4AE2A4, "'+6C'");
MakeDword(0x4AE2A4);
MakeComm(0x4AE2A8, "'+70'");
MakeDword(0x4AE2A8);
MakeComm(0x4AE2AC, "'+74'");
MakeDword(0x4AE2AC);
MakeComm(0x4AE2B0, "'+78'");
MakeDword(0x4AE2B0);
MakeComm(0x4AE2B4, "'+7C'");
MakeDword(0x4AE2B4);
MakeComm(0x4AE2B8, "'+80'");
MakeDword(0x4AE2B8);
MakeComm(0x4AE2BC, "'+84'");
MakeDword(0x4AE2BC);
MakeComm(0x4AE2C0, "'+88'");
MakeDword(0x4AE2C0);
MakeComm(0x4AE2C4, "'+8C'");
MakeDword(0x4AE2C4);
MakeComm(0x4AE2C8, "'+90'");
MakeDword(0x4AE2C8);
MakeComm(0x4AE2CC, "'+94'");
MakeDword(0x4AE2CC);
MakeComm(0x4AE2D0, "'+98'");
MakeDword(0x4AE2D0);
MakeComm(0x4AE2D4, "'+9C'");
MakeDword(0x4AE2D4);
MakeComm(0x4AE2D8, "'+A0'");
MakeDword(0x4AE2D8);
MakeComm(0x4AE2DC, "'+A4'");
MakeDword(0x4AE2DC);
MakeComm(0x4AE2E0, "'+A8'");
MakeDword(0x4AE2E0);
MakeComm(0x4AE2E4, "'+AC'");
MakeDword(0x4AE2E4);
MakeComm(0x4AE2E8, "'+B0'");
MakeDword(0x4AE2E8);
MakeComm(0x4AE2EC, "'+B4'");
MakeDword(0x4AE2EC);
MakeComm(0x4AE2F0, "'+B8'");
MakeDword(0x4AE2F0);
MakeComm(0x4AE2F4, "'+BC'");
MakeDword(0x4AE2F4);
MakeComm(0x4AE2F8, "'+C0'");
MakeDword(0x4AE2F8);
MakeComm(0x4AE2FC, "'+C4'");
MakeDword(0x4AE2FC);
MakeComm(0x4AE300, "'+C8'");
MakeDword(0x4AE300);
MakeComm(0x4AE304, "'+CC'");
MakeDword(0x4AE304);
MakeComm(0x4AE308, "'+D0'");
MakeDword(0x4AE308);
MakeComm(0x4AE30C, "'+D4'");
MakeDword(0x4AE30C);
MakeComm(0x4AE310, "'+D8'");
MakeDword(0x4AE310);
MakeComm(0x4AE314, "'+DC'");
MakeDword(0x4AE314);
MakeComm(0x4AE318, "'+E0'");
MakeDword(0x4AE318);
MakeComm(0x4AE31C, "'+E4'");
MakeDword(0x4AE31C);
MakeComm(0x4AE320, "'+E8'");
MakeDword(0x4AE320);
MakeComm(0x4AE324, "'+EC'");
MakeDword(0x4AE324);
MakeComm(0x4AE328, "'+F0'");
MakeDword(0x4AE328);
MakeComm(0x4AE32C, "'+F4'");
MakeDword(0x4AE32C);
MakeComm(0x4AE330, "'+F8'");
MakeDword(0x4AE330);
MakeComm(0x4AE334, "'+FC'");
MakeDword(0x4AE334);
MakeComm(0x4AE338, "'+100'");
MakeDword(0x4AE338);
MakeUnkn(0x4AE4AC, 1);
MakeNameEx(0x4AE4AC, "RTTI_4AE4AC_Class_TOddTimeForm", 0);
MakeDword(0x4AE4AC);
MakeUnkn(0x4AE4B0, 1);
MakeNameEx(0x4AE4B0, "", 0);
MakeByte(0x4AE4B0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AE4B1, 0x4AE4BE);
MakeDword(0x4AE4BE);
MakeDword(0x4AE4C2);
MakeWord(0x4AE4C6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AE4C8, 0x4AE4D0);
MakeWord(0x4AE4D0);
MakeUnkn(0x4AE4D4, 1);
MakeNameEx(0x4AE4D4, "TOddTimeForm.FormCreate", 0x20);
MakeComm(0x4AE4D4, "'procedure TOddTimeForm.FormCreate(Sender:TObject);'");
MakeCode(0x4AE4D4);
MakeComm(0x4AE4D8, "'TOddTimeForm.DenomLabel:TLabel'");
MakeComm(0x4AE4DE, "'TLabel.Left:Integer'");
MakeComm(0x4AE4E1, "'TLabel.Width:Integer'");
MakeComm(0x4AE4E6, "'TOddTimeForm.DenomEdit:TEdit'");
MakeComm(0x4AE4F1, "'TOddTimeForm.DenomEdit:TEdit'");
MakeComm(0x4AE4F7, "'TEdit.Width:Integer'");
MakeComm(0x4AE4FC, "'TOddTimeForm.NumLabel:TLabel'");
MakeComm(0x4AE507, "'TOddTimeForm.NumLabel:TLabel'");
MakeComm(0x4AE50D, "'TLabel.Width:Integer'");
MakeComm(0x4AE512, "'TOddTimeForm.NumEdit:TEdit'");
MakeComm(0x4AE51D, "'TOddTimeForm.DenomLabel:TLabel'");
MakeComm(0x4AE523, "'TLabel.Height:Integer'");
MakeComm(0x4AE52C, "'TOddTimeForm.NumLabel:TLabel'");
MakeComm(0x4AE532, "'TLabel.Height:Integer'");
MakeFunction(0x4AE4D4, 0x4AE53E);
MakeUnkn(0x4AE540, 1);
MakeNameEx(0x4AE540, "TOddTimeForm.HelpButtonClick", 0x20);
MakeComm(0x4AE540, "'procedure TOddTimeForm.HelpButtonClick(Sender:TObject);'");
MakeCode(0x4AE540);
MakeComm(0x4AE548, "'TOddTimeForm.HelpContext:THelpContext'");
MakeFunction(0x4AE540, 0x4AE555);
MakeCode(0x4AE558);
MakeCode(0x4AE59C);
MakeCode(0x4AE5A9);
MakeCode(0x4AE5DA);
MakeFunction(0x4AE558, 0x4AE5EA);
MakeUnkn(0x4AE5EC, 1);
MakeNameEx(0x4AE5EC, "TOddTimeForm.TripletRadioClick", 0x20);
MakeComm(0x4AE5EC, "'procedure TOddTimeForm.TripletRadioClick(Sender:TObject);'");
MakeCode(0x4AE5EC);
MakeComm(0x4AE5F4, "'TOddTimeForm.NumEdit:TEdit'");
MakeComm(0x4AE604, "'TOddTimeForm.DenomEdit:TEdit'");
MakeFunction(0x4AE5EC, 0x4AE618);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4AE620, -1);
MakeDword(0x4AE61C);
MakeDword(0x4AE618);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4AE62C, -1);
MakeDword(0x4AE628);
MakeDword(0x4AE624);
MakeUnkn(0x4AE630, 1);
MakeNameEx(0x4AE630, "TOddTimeForm.X32ndRatioClick", 0x20);
MakeComm(0x4AE630, "'procedure TOddTimeForm.X32ndRatioClick(Sender:TObject);'");
MakeCode(0x4AE630);
MakeComm(0x4AE638, "'TOddTimeForm.NumEdit:TEdit'");
MakeComm(0x4AE648, "'TOddTimeForm.DenomEdit:TEdit'");
MakeFunction(0x4AE630, 0x4AE65C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4AE664, -1);
MakeDword(0x4AE660);
MakeDword(0x4AE65C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4AE670, -1);
MakeDword(0x4AE66C);
MakeDword(0x4AE668);
MakeUnkn(0x4AE674, 1);
MakeNameEx(0x4AE674, "TOddTimeForm.CustomRadioClick", 0x20);
MakeComm(0x4AE674, "'procedure TOddTimeForm.CustomRadioClick(Sender:TObject);'");
MakeCode(0x4AE674);
MakeFunction(0x4AE674, 0x4AE67A);
MakeCode(0x4AE67C);
MakeCode(0x4AE686);
MakeCode(0x4AE695);
MakeFunction(0x4AE67C, 0x4AE69A);
MakeUnkn(0x4AE69C, 1);
MakeNameEx(0x4AE69C, "TOddTimeForm.FormCloseQuery", 0x20);
MakeComm(0x4AE69C, "'procedure TOddTimeForm.FormCloseQuery(Sender:TObject; var CanClose:Boolean);'");
MakeCode(0x4AE69C);
MakeComm(0x4AE6D8, "'TOddTimeForm.FModalResult:TModalResult'");
MakeCode(0x4AE6E5);
MakeComm(0x4AE6E8, "'TOddTimeForm.DenomEdit:TEdit'");
MakeCode(0x4AE716);
MakeComm(0x4AE71C, "'TOddTimeForm.DenomEdit:TEdit'");
MakeComm(0x4AE724, "'TWinControl.SetFocus'");
MakeCode(0x4AE739);
MakeComm(0x4AE73C, "'TOddTimeForm.NumEdit:TEdit'");
MakeCode(0x4AE76A);
MakeComm(0x4AE770, "'TOddTimeForm.NumEdit:TEdit'");
MakeComm(0x4AE778, "'TWinControl.SetFocus'");
MakeCode(0x4AE78D);
MakeCode(0x4AE806);
MakeComm(0x4AE813, "'TOddTimeForm.NumEdit:TEdit'");
MakeComm(0x4AE82B, "'TOddTimeForm.DenomEdit:TEdit'");
MakeCode(0x4AE83B);
MakeComm(0x4AE845, "'TOddTimeForm.DenomEdit:TEdit'");
MakeComm(0x4AE84D, "'TWinControl.SetFocus'");
MakeCode(0x4AE862);
MakeComm(0x4AE86D, "'TOddTimeForm.DenomEdit:TEdit'");
MakeComm(0x4AE875, "'TWinControl.SetFocus'");
MakeComm(0x4AE8A6, "'TOddTimeForm.?f390:dword'");
MakeCode(0x4AE8A6);
MakeComm(0x4AE8B9, "'TOddTimeForm.TripletRadio:TRadioButton'");
MakeComm(0x4AE8C1, "'TRadioButton.GetChecked'");
MakeCode(0x4AE8EF);
MakeComm(0x4AE924, "'TOddTimeForm.?f394:Integer'");
MakeCode(0x4AE924);
MakeComm(0x4AE92A, "'TOddTimeForm.?f398:Longint'");
MakeCode(0x4AE930);
MakeCode(0x4AE93D);
MakeCode(0x4AE980);
MakeCode(0x4AE985);
MakeFunction(0x4AE69C, 0x4AE98E);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4AE998, -1);
MakeDword(0x4AE994);
MakeDword(0x4AE990);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4AE9C4, -1);
MakeDword(0x4AE9C0);
MakeDword(0x4AE9BC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4AE9F0, -1);
MakeDword(0x4AE9EC);
MakeDword(0x4AE9E8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4AEA34, -1);
MakeDword(0x4AEA30);
MakeDword(0x4AEA2C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4AEA74, -1);
MakeDword(0x4AEA70);
MakeDword(0x4AEA6C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4AEAA8, -1);
MakeDword(0x4AEAA4);
MakeDword(0x4AEAA0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4AEB14, -1);
MakeDword(0x4AEB10);
MakeDword(0x4AEB0C);
MakeUnkn(0x4AEB78, 1);
MakeNameEx(0x4AEB78, "VMT_4AEB78_TRemoveOddTimeForm", 0);
MakeDword(0x4AEB78);
MakeDword(0x4AEB7C);
MakeDword(0x4AEB80);
MakeDword(0x4AEB84);
MakeDword(0x4AEB88);
MakeDword(0x4AEB8C);
MakeUnkn(0x4AECC8, 1);
MakeNameEx(0x4AECC8, "TRemoveOddTimeForm_FieldTable", 0);
MakeWord(0x4AECC8);
MakeDword(0x4AECCA);
MakeWord(0x4AED6C);
MakeDword(0x4AED6E);
MakeDword(0x4AED72);
MakeDword(0x4AED76);
MakeDword(0x4AECCE);
MakeWord(0x4AECD2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AECD4, 0x4AECDD);
MakeDword(0x4AECDD);
MakeWord(0x4AECE1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AECE3, 0x4AECF0);
MakeDword(0x4AECF0);
MakeWord(0x4AECF4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AECF6, 0x4AECFD);
MakeDword(0x4AECFD);
MakeWord(0x4AED01);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AED03, 0x4AED0D);
MakeDword(0x4AED0D);
MakeWord(0x4AED11);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AED13, 0x4AED1E);
MakeDword(0x4AED1E);
MakeWord(0x4AED22);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AED24, 0x4AED30);
MakeDword(0x4AEB90);
MakeUnkn(0x4AED30, 1);
MakeNameEx(0x4AED30, "TRemoveOddTimeForm_MethodTable", 0);
MakeWord(0x4AED30);
MakeWord(0x4AED32);
MakeDword(0x4AED34);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AED38, 0x4AED43);
MakeWord(0x4AED43);
MakeDword(0x4AED45);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AED49, 0x4AED59);
MakeDword(0x4AEB94);
MakeDword(0x4AEB98);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AED59, 0x4AED6C);
MakeDword(0x4AEB9C);
MakeDword(0x4AEBA0);
MakeDword(0x4AEBA4);
MakeDword(0x4AEBA8);
MakeDword(0x4AEBAC);
MakeDword(0x4AEBB0);
MakeDword(0x4AEBB4);
MakeDword(0x4AEBB8);
MakeDword(0x4AEBBC);
MakeDword(0x4AEBC0);
MakeComm(0x4AEBC4, "'+0'");
MakeDword(0x4AEBC4);
MakeComm(0x4AEBC8, "'+4'");
MakeDword(0x4AEBC8);
MakeComm(0x4AEBCC, "'+8'");
MakeDword(0x4AEBCC);
MakeComm(0x4AEBD0, "'+C'");
MakeDword(0x4AEBD0);
MakeComm(0x4AEBD4, "'+10'");
MakeDword(0x4AEBD4);
MakeComm(0x4AEBD8, "'+14'");
MakeDword(0x4AEBD8);
MakeComm(0x4AEBDC, "'+18'");
MakeDword(0x4AEBDC);
MakeComm(0x4AEBE0, "'+1C'");
MakeDword(0x4AEBE0);
MakeComm(0x4AEBE4, "'+20'");
MakeDword(0x4AEBE4);
MakeComm(0x4AEBE8, "'+24'");
MakeDword(0x4AEBE8);
MakeComm(0x4AEBEC, "'+28'");
MakeDword(0x4AEBEC);
MakeComm(0x4AEBF0, "'+2C'");
MakeDword(0x4AEBF0);
MakeComm(0x4AEBF4, "'+30'");
MakeDword(0x4AEBF4);
MakeComm(0x4AEBF8, "'+34'");
MakeDword(0x4AEBF8);
MakeComm(0x4AEBFC, "'+38'");
MakeDword(0x4AEBFC);
MakeComm(0x4AEC00, "'+3C'");
MakeDword(0x4AEC00);
MakeComm(0x4AEC04, "'+40'");
MakeDword(0x4AEC04);
MakeComm(0x4AEC08, "'+44'");
MakeDword(0x4AEC08);
MakeComm(0x4AEC0C, "'+48'");
MakeDword(0x4AEC0C);
MakeComm(0x4AEC10, "'+4C'");
MakeDword(0x4AEC10);
MakeComm(0x4AEC14, "'+50'");
MakeDword(0x4AEC14);
MakeComm(0x4AEC18, "'+54'");
MakeDword(0x4AEC18);
MakeComm(0x4AEC1C, "'+58'");
MakeDword(0x4AEC1C);
MakeComm(0x4AEC20, "'+5C'");
MakeDword(0x4AEC20);
MakeComm(0x4AEC24, "'+60'");
MakeDword(0x4AEC24);
MakeComm(0x4AEC28, "'+64'");
MakeDword(0x4AEC28);
MakeComm(0x4AEC2C, "'+68'");
MakeDword(0x4AEC2C);
MakeComm(0x4AEC30, "'+6C'");
MakeDword(0x4AEC30);
MakeComm(0x4AEC34, "'+70'");
MakeDword(0x4AEC34);
MakeComm(0x4AEC38, "'+74'");
MakeDword(0x4AEC38);
MakeComm(0x4AEC3C, "'+78'");
MakeDword(0x4AEC3C);
MakeComm(0x4AEC40, "'+7C'");
MakeDword(0x4AEC40);
MakeComm(0x4AEC44, "'+80'");
MakeDword(0x4AEC44);
MakeComm(0x4AEC48, "'+84'");
MakeDword(0x4AEC48);
MakeComm(0x4AEC4C, "'+88'");
MakeDword(0x4AEC4C);
MakeComm(0x4AEC50, "'+8C'");
MakeDword(0x4AEC50);
MakeComm(0x4AEC54, "'+90'");
MakeDword(0x4AEC54);
MakeComm(0x4AEC58, "'+94'");
MakeDword(0x4AEC58);
MakeComm(0x4AEC5C, "'+98'");
MakeDword(0x4AEC5C);
MakeComm(0x4AEC60, "'+9C'");
MakeDword(0x4AEC60);
MakeComm(0x4AEC64, "'+A0'");
MakeDword(0x4AEC64);
MakeComm(0x4AEC68, "'+A4'");
MakeDword(0x4AEC68);
MakeComm(0x4AEC6C, "'+A8'");
MakeDword(0x4AEC6C);
MakeComm(0x4AEC70, "'+AC'");
MakeDword(0x4AEC70);
MakeComm(0x4AEC74, "'+B0'");
MakeDword(0x4AEC74);
MakeComm(0x4AEC78, "'+B4'");
MakeDword(0x4AEC78);
MakeComm(0x4AEC7C, "'+B8'");
MakeDword(0x4AEC7C);
MakeComm(0x4AEC80, "'+BC'");
MakeDword(0x4AEC80);
MakeComm(0x4AEC84, "'+C0'");
MakeDword(0x4AEC84);
MakeComm(0x4AEC88, "'+C4'");
MakeDword(0x4AEC88);
MakeComm(0x4AEC8C, "'+C8'");
MakeDword(0x4AEC8C);
MakeComm(0x4AEC90, "'+CC'");
MakeDword(0x4AEC90);
MakeComm(0x4AEC94, "'+D0'");
MakeDword(0x4AEC94);
MakeComm(0x4AEC98, "'+D4'");
MakeDword(0x4AEC98);
MakeComm(0x4AEC9C, "'+D8'");
MakeDword(0x4AEC9C);
MakeComm(0x4AECA0, "'+DC'");
MakeDword(0x4AECA0);
MakeComm(0x4AECA4, "'+E0'");
MakeDword(0x4AECA4);
MakeComm(0x4AECA8, "'+E4'");
MakeDword(0x4AECA8);
MakeComm(0x4AECAC, "'+E8'");
MakeDword(0x4AECAC);
MakeComm(0x4AECB0, "'+EC'");
MakeDword(0x4AECB0);
MakeComm(0x4AECB4, "'+F0'");
MakeDword(0x4AECB4);
MakeComm(0x4AECB8, "'+F4'");
MakeDword(0x4AECB8);
MakeComm(0x4AECBC, "'+F8'");
MakeDword(0x4AECBC);
MakeComm(0x4AECC0, "'+FC'");
MakeDword(0x4AECC0);
MakeComm(0x4AECC4, "'+100'");
MakeDword(0x4AECC4);
MakeUnkn(0x4AED7C, 1);
MakeNameEx(0x4AED7C, "RTTI_4AED7C_Class_TRemoveOddTimeForm", 0);
MakeDword(0x4AED7C);
MakeUnkn(0x4AED80, 1);
MakeNameEx(0x4AED80, "", 0);
MakeByte(0x4AED80);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AED81, 0x4AED94);
MakeDword(0x4AED94);
MakeDword(0x4AED98);
MakeWord(0x4AED9C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AED9E, 0x4AEDAC);
MakeWord(0x4AEDAC);
MakeUnkn(0x4AEDB0, 1);
MakeNameEx(0x4AEDB0, "TRemoveOddTimeForm.RadioClick", 0x20);
MakeComm(0x4AEDB0, "'procedure TRemoveOddTimeForm.RadioClick(Sender:TObject);'");
MakeCode(0x4AEDB0);
MakeComm(0x4AEDB5, "'TRemoveOddTimeForm.EntireRadio:TRadioButton'");
MakeComm(0x4AEDBD, "'TRadioButton.GetChecked'");
MakeFunction(0x4AEDB0, 0x4AEE08);
MakeUnkn(0x4AEE08, 1);
MakeNameEx(0x4AEE08, "TRemoveOddTimeForm.HelpButtonClick", 0x20);
MakeComm(0x4AEE08, "'procedure TRemoveOddTimeForm.HelpButtonClick(Sender:TObject);'");
MakeCode(0x4AEE08);
MakeComm(0x4AEE10, "'TRemoveOddTimeForm.HelpContext:THelpContext'");
MakeFunction(0x4AEE08, 0x4AEE1D);
MakeUnkn(0x4AEE20, 1);
MakeNameEx(0x4AEE20, "VMT_4AEE20_TSliderFrame", 0);
MakeDword(0x4AEE20);
MakeDword(0x4AEE24);
MakeDword(0x4AEE28);
MakeDword(0x4AEE2C);
MakeDword(0x4AEE30);
MakeDword(0x4AEE34);
MakeUnkn(0x4AEF50, 1);
MakeNameEx(0x4AEF50, "TSliderFrame_FieldTable", 0);
MakeWord(0x4AEF50);
MakeDword(0x4AEF52);
MakeWord(0x4AEFAD);
MakeDword(0x4AEFAF);
MakeDword(0x4AEFB3);
MakeDword(0x4AEF56);
MakeWord(0x4AEF5A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AEF5C, 0x4AEF65);
MakeDword(0x4AEF65);
MakeWord(0x4AEF69);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AEF6B, 0x4AEF70);
MakeDword(0x4AEE38);
MakeUnkn(0x4AEF70, 1);
MakeNameEx(0x4AEF70, "TSliderFrame_MethodTable", 0);
MakeWord(0x4AEF70);
MakeWord(0x4AEF72);
MakeDword(0x4AEF74);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AEF78, 0x4AEF87);
MakeWord(0x4AEF87);
MakeDword(0x4AEF89);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AEF8D, 0x4AEF98);
MakeDword(0x4AEE3C);
MakeUnkn(0x4AEF98, 1);
MakeNameEx(0x4AEF98, "TSliderFrame_DynamicTable", 0);
MakeWord(0x4AEF98);
MakeWord(0x4AEF9A);
MakeDword(0x4AEF9C);
MakeDword(0x4AEE40);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AEFA0, 0x4AEFAD);
MakeDword(0x4AEE44);
MakeDword(0x4AEE48);
MakeDword(0x4AEE4C);
MakeDword(0x4AEE50);
MakeDword(0x4AEE54);
MakeDword(0x4AEE58);
MakeDword(0x4AEE5C);
MakeDword(0x4AEE60);
MakeDword(0x4AEE64);
MakeDword(0x4AEE68);
MakeComm(0x4AEE6C, "'+0'");
MakeDword(0x4AEE6C);
MakeComm(0x4AEE70, "'+4'");
MakeDword(0x4AEE70);
MakeComm(0x4AEE74, "'+8'");
MakeDword(0x4AEE74);
MakeComm(0x4AEE78, "'+C'");
MakeDword(0x4AEE78);
MakeComm(0x4AEE7C, "'+10'");
MakeDword(0x4AEE7C);
MakeComm(0x4AEE80, "'+14'");
MakeDword(0x4AEE80);
MakeComm(0x4AEE84, "'+18'");
MakeDword(0x4AEE84);
MakeComm(0x4AEE88, "'+1C'");
MakeDword(0x4AEE88);
MakeComm(0x4AEE8C, "'+20'");
MakeDword(0x4AEE8C);
MakeComm(0x4AEE90, "'+24'");
MakeDword(0x4AEE90);
MakeComm(0x4AEE94, "'+28'");
MakeDword(0x4AEE94);
MakeComm(0x4AEE98, "'+2C'");
MakeDword(0x4AEE98);
MakeComm(0x4AEE9C, "'+30'");
MakeDword(0x4AEE9C);
MakeComm(0x4AEEA0, "'+34'");
MakeDword(0x4AEEA0);
MakeComm(0x4AEEA4, "'+38'");
MakeDword(0x4AEEA4);
MakeComm(0x4AEEA8, "'+3C'");
MakeDword(0x4AEEA8);
MakeComm(0x4AEEAC, "'+40'");
MakeDword(0x4AEEAC);
MakeComm(0x4AEEB0, "'+44'");
MakeDword(0x4AEEB0);
MakeComm(0x4AEEB4, "'+48'");
MakeDword(0x4AEEB4);
MakeComm(0x4AEEB8, "'+4C'");
MakeDword(0x4AEEB8);
MakeComm(0x4AEEBC, "'+50'");
MakeDword(0x4AEEBC);
MakeComm(0x4AEEC0, "'+54'");
MakeDword(0x4AEEC0);
MakeComm(0x4AEEC4, "'+58'");
MakeDword(0x4AEEC4);
MakeComm(0x4AEEC8, "'+5C'");
MakeDword(0x4AEEC8);
MakeComm(0x4AEECC, "'+60'");
MakeDword(0x4AEECC);
MakeComm(0x4AEED0, "'+64'");
MakeDword(0x4AEED0);
MakeComm(0x4AEED4, "'+68'");
MakeDword(0x4AEED4);
MakeComm(0x4AEED8, "'+6C'");
MakeDword(0x4AEED8);
MakeComm(0x4AEEDC, "'+70'");
MakeDword(0x4AEEDC);
MakeComm(0x4AEEE0, "'+74'");
MakeDword(0x4AEEE0);
MakeComm(0x4AEEE4, "'+78'");
MakeDword(0x4AEEE4);
MakeComm(0x4AEEE8, "'+7C'");
MakeDword(0x4AEEE8);
MakeComm(0x4AEEEC, "'+80'");
MakeDword(0x4AEEEC);
MakeComm(0x4AEEF0, "'+84'");
MakeDword(0x4AEEF0);
MakeComm(0x4AEEF4, "'+88'");
MakeDword(0x4AEEF4);
MakeComm(0x4AEEF8, "'+8C'");
MakeDword(0x4AEEF8);
MakeComm(0x4AEEFC, "'+90'");
MakeDword(0x4AEEFC);
MakeComm(0x4AEF00, "'+94'");
MakeDword(0x4AEF00);
MakeComm(0x4AEF04, "'+98'");
MakeDword(0x4AEF04);
MakeComm(0x4AEF08, "'+9C'");
MakeDword(0x4AEF08);
MakeComm(0x4AEF0C, "'+A0'");
MakeDword(0x4AEF0C);
MakeComm(0x4AEF10, "'+A4'");
MakeDword(0x4AEF10);
MakeComm(0x4AEF14, "'+A8'");
MakeDword(0x4AEF14);
MakeComm(0x4AEF18, "'+AC'");
MakeDword(0x4AEF18);
MakeComm(0x4AEF1C, "'+B0'");
MakeDword(0x4AEF1C);
MakeComm(0x4AEF20, "'+B4'");
MakeDword(0x4AEF20);
MakeComm(0x4AEF24, "'+B8'");
MakeDword(0x4AEF24);
MakeComm(0x4AEF28, "'+BC'");
MakeDword(0x4AEF28);
MakeComm(0x4AEF2C, "'+C0'");
MakeDword(0x4AEF2C);
MakeComm(0x4AEF30, "'+C4'");
MakeDword(0x4AEF30);
MakeComm(0x4AEF34, "'+C8'");
MakeDword(0x4AEF34);
MakeComm(0x4AEF38, "'+CC'");
MakeDword(0x4AEF38);
MakeComm(0x4AEF3C, "'+D0'");
MakeDword(0x4AEF3C);
MakeComm(0x4AEF40, "'+D4'");
MakeDword(0x4AEF40);
MakeComm(0x4AEF44, "'+D8'");
MakeDword(0x4AEF44);
MakeComm(0x4AEF48, "'+DC'");
MakeDword(0x4AEF48);
MakeComm(0x4AEF4C, "'+E0'");
MakeDword(0x4AEF4C);
MakeUnkn(0x4AEFB8, 1);
MakeNameEx(0x4AEFB8, "RTTI_4AEFB8_Class_TSliderFrame", 0);
MakeDword(0x4AEFB8);
MakeUnkn(0x4AEFBC, 1);
MakeNameEx(0x4AEFBC, "", 0);
MakeByte(0x4AEFBC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AEFBD, 0x4AEFCA);
MakeDword(0x4AEFCA);
MakeDword(0x4AEFCE);
MakeWord(0x4AEFD2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AEFD4, 0x4AEFDE);
MakeWord(0x4AEFDE);
MakeUnkn(0x4AEFE0, 1);
MakeNameEx(0x4AEFE0, "TSliderFrame.TrackBarChange", 0x20);
MakeComm(0x4AEFE0, "'procedure TSliderFrame.TrackBarChange;'");
MakeCode(0x4AEFE0);
MakeComm(0x4AEFF7, "'TSliderFrame.Edit:TEdit'");
MakeComm(0x4AF001, "'TWinControl.Focused'");
MakeComm(0x4AF00D, "'TSliderFrame.TrackBar:TTrackBarEx'");
MakeComm(0x4AF013, "'TTrackBarEx.Position:Integer'");
MakeComm(0x4AF021, "'TSliderFrame.Edit:TEdit'");
MakeCode(0x4AF02C);
MakeCode(0x4AF039);
MakeCode(0x4AF042);
MakeCode(0x4AF047);
MakeFunction(0x4AEFE0, 0x4AF04E);
MakeUnkn(0x4AF050, 1);
MakeNameEx(0x4AF050, "TSliderFrame.EditChange", 0x20);
MakeComm(0x4AF050, "'procedure TSliderFrame.EditChange;'");
MakeCode(0x4AF050);
MakeComm(0x4AF069, "'TSliderFrame.Edit:TEdit'");
MakeComm(0x4AF073, "'TWinControl.Focused'");
MakeComm(0x4AF07F, "'TSliderFrame.Edit:TEdit'");
MakeComm(0x4AF0A1, "'TSliderFrame.TrackBar:TTrackBarEx'");
MakeCode(0x4AF0AC);
MakeCode(0x4AF0B9);
MakeCode(0x4AF0CA);
MakeCode(0x4AF0CF);
MakeFunction(0x4AF050, 0x4AF0D7);
MakeCode(0x4AF0D8);
MakeFunction(0x4AF0D8, 0x4AF0E5);
MakeCode(0x4AF0E8);
MakeFunction(0x4AF0E8, 0x4AF0F4);
MakeUnkn(0x4AF0F4, 1);
MakeNameEx(0x4AF0F4, "TSliderFrame.CMEnabledChanged", 0x20);
MakeComm(0x4AF0F4, "'procedure TSliderFrame.CMEnabledChanged(var Message:TMessage);'");
MakeCode(0x4AF0F4);
MakeComm(0x4AF102, "'TLabel.GetEnabled'");
MakeComm(0x4AF107, "'TSliderFrame.TrackBar:TTrackBarEx'");
MakeComm(0x4AF10F, "'TControl.SetEnabled'");
MakeComm(0x4AF116, "'TLabel.GetEnabled'");
MakeComm(0x4AF11B, "'TSliderFrame.Edit:TEdit'");
MakeFunction(0x4AF0F4, 0x4AF128);
MakeCode(0x4AF128);
MakeCode(0x4AF177);
MakeCode(0x4AF184);
MakeCode(0x4AF195);
MakeCode(0x4AF19A);
MakeFunction(0x4AF128, 0x4AF1A3);
MakeUnkn(0x4AF1A4, 1);
MakeNameEx(0x4AF1A4, "VMT_4AF1A4_TTrackEffectForm", 0);
MakeDword(0x4AF1A4);
MakeDword(0x4AF1A8);
MakeDword(0x4AF1AC);
MakeDword(0x4AF1B0);
MakeDword(0x4AF1B4);
MakeDword(0x4AF1B8);
MakeUnkn(0x4AF2F4, 1);
MakeNameEx(0x4AF2F4, "TTrackEffectForm_FieldTable", 0);
MakeWord(0x4AF2F4);
MakeDword(0x4AF2F6);
MakeWord(0x4AF5D3);
MakeDword(0x4AF5D5);
MakeDword(0x4AF5D9);
MakeDword(0x4AF5DD);
MakeDword(0x4AF5E1);
MakeDword(0x4AF5E5);
MakeDword(0x4AF5E9);
MakeDword(0x4AF5ED);
MakeDword(0x4AF2FA);
MakeWord(0x4AF2FE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AF300, 0x4AF309);
MakeDword(0x4AF309);
MakeWord(0x4AF30D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AF30F, 0x4AF31C);
MakeDword(0x4AF31C);
MakeWord(0x4AF320);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AF322, 0x4AF32D);
MakeDword(0x4AF32D);
MakeWord(0x4AF331);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AF333, 0x4AF33F);
MakeDword(0x4AF33F);
MakeWord(0x4AF343);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AF345, 0x4AF352);
MakeDword(0x4AF352);
MakeWord(0x4AF356);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AF358, 0x4AF361);
MakeDword(0x4AF361);
MakeWord(0x4AF365);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AF367, 0x4AF374);
MakeDword(0x4AF374);
MakeWord(0x4AF378);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AF37A, 0x4AF384);
MakeDword(0x4AF384);
MakeWord(0x4AF388);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AF38A, 0x4AF394);
MakeDword(0x4AF394);
MakeWord(0x4AF398);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AF39A, 0x4AF3A4);
MakeDword(0x4AF3A4);
MakeWord(0x4AF3A8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AF3AA, 0x4AF3B5);
MakeDword(0x4AF3B5);
MakeWord(0x4AF3B9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AF3BB, 0x4AF3C5);
MakeDword(0x4AF3C5);
MakeWord(0x4AF3C9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AF3CB, 0x4AF3D7);
MakeDword(0x4AF3D7);
MakeWord(0x4AF3DB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AF3DD, 0x4AF3EE);
MakeDword(0x4AF3EE);
MakeWord(0x4AF3F2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AF3F4, 0x4AF401);
MakeDword(0x4AF401);
MakeWord(0x4AF405);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AF407, 0x4AF418);
MakeDword(0x4AF418);
MakeWord(0x4AF41C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AF41E, 0x4AF42E);
MakeDword(0x4AF42E);
MakeWord(0x4AF432);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AF434, 0x4AF442);
MakeDword(0x4AF442);
MakeWord(0x4AF446);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AF448, 0x4AF457);
MakeDword(0x4AF457);
MakeWord(0x4AF45B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AF45D, 0x4AF466);
MakeDword(0x4AF466);
MakeWord(0x4AF46A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AF46C, 0x4AF476);
MakeDword(0x4AF476);
MakeWord(0x4AF47A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AF47C, 0x4AF488);
MakeDword(0x4AF488);
MakeWord(0x4AF48C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AF48E, 0x4AF49B);
MakeDword(0x4AF49B);
MakeWord(0x4AF49F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AF4A1, 0x4AF4AD);
MakeDword(0x4AF4AD);
MakeWord(0x4AF4B1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AF4B3, 0x4AF4C0);
MakeDword(0x4AF4C0);
MakeWord(0x4AF4C4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AF4C6, 0x4AF4D4);
MakeDword(0x4AF4D4);
MakeWord(0x4AF4D8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AF4DA, 0x4AF4EA);
MakeDword(0x4AF4EA);
MakeWord(0x4AF4EE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AF4F0, 0x4AF4FF);
MakeDword(0x4AF1BC);
MakeUnkn(0x4AF4FF, 1);
MakeNameEx(0x4AF4FF, "TTrackEffectForm_MethodTable", 0);
MakeWord(0x4AF4FF);
MakeWord(0x4AF501);
MakeDword(0x4AF503);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AF507, 0x4AF512);
MakeWord(0x4AF512);
MakeDword(0x4AF514);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AF518, 0x4AF527);
MakeWord(0x4AF527);
MakeDword(0x4AF529);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AF52D, 0x4AF53D);
MakeWord(0x4AF53D);
MakeDword(0x4AF53F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AF543, 0x4AF553);
MakeWord(0x4AF553);
MakeDword(0x4AF555);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AF559, 0x4AF56E);
MakeWord(0x4AF56E);
MakeDword(0x4AF570);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AF574, 0x4AF589);
MakeWord(0x4AF589);
MakeDword(0x4AF58B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AF58F, 0x4AF5A0);
MakeWord(0x4AF5A0);
MakeDword(0x4AF5A2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AF5A6, 0x4AF5BA);
MakeDword(0x4AF1C0);
MakeUnkn(0x4AF5BA, 1);
MakeNameEx(0x4AF5BA, "TTrackEffectForm_DynamicTable", 0);
MakeWord(0x4AF5BA);
MakeWord(0x4AF5BC);
MakeDword(0x4AF5BE);
MakeDword(0x4AF1C4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AF5C2, 0x4AF5D3);
MakeDword(0x4AF1C8);
MakeDword(0x4AF1CC);
MakeDword(0x4AF1D0);
MakeDword(0x4AF1D4);
MakeDword(0x4AF1D8);
MakeDword(0x4AF1DC);
MakeDword(0x4AF1E0);
MakeDword(0x4AF1E4);
MakeDword(0x4AF1E8);
MakeDword(0x4AF1EC);
MakeComm(0x4AF1F0, "'+0'");
MakeDword(0x4AF1F0);
MakeComm(0x4AF1F4, "'+4'");
MakeDword(0x4AF1F4);
MakeComm(0x4AF1F8, "'+8'");
MakeDword(0x4AF1F8);
MakeComm(0x4AF1FC, "'+C'");
MakeDword(0x4AF1FC);
MakeComm(0x4AF200, "'+10'");
MakeDword(0x4AF200);
MakeComm(0x4AF204, "'+14'");
MakeDword(0x4AF204);
MakeComm(0x4AF208, "'+18'");
MakeDword(0x4AF208);
MakeComm(0x4AF20C, "'+1C'");
MakeDword(0x4AF20C);
MakeComm(0x4AF210, "'+20'");
MakeDword(0x4AF210);
MakeComm(0x4AF214, "'+24'");
MakeDword(0x4AF214);
MakeComm(0x4AF218, "'+28'");
MakeDword(0x4AF218);
MakeComm(0x4AF21C, "'+2C'");
MakeDword(0x4AF21C);
MakeComm(0x4AF220, "'+30'");
MakeDword(0x4AF220);
MakeComm(0x4AF224, "'+34'");
MakeDword(0x4AF224);
MakeComm(0x4AF228, "'+38'");
MakeDword(0x4AF228);
MakeComm(0x4AF22C, "'+3C'");
MakeDword(0x4AF22C);
MakeComm(0x4AF230, "'+40'");
MakeDword(0x4AF230);
MakeComm(0x4AF234, "'+44'");
MakeDword(0x4AF234);
MakeComm(0x4AF238, "'+48'");
MakeDword(0x4AF238);
MakeComm(0x4AF23C, "'+4C'");
MakeDword(0x4AF23C);
MakeComm(0x4AF240, "'+50'");
MakeDword(0x4AF240);
MakeComm(0x4AF244, "'+54'");
MakeDword(0x4AF244);
MakeComm(0x4AF248, "'+58'");
MakeDword(0x4AF248);
MakeComm(0x4AF24C, "'+5C'");
MakeDword(0x4AF24C);
MakeComm(0x4AF250, "'+60'");
MakeDword(0x4AF250);
MakeComm(0x4AF254, "'+64'");
MakeDword(0x4AF254);
MakeComm(0x4AF258, "'+68'");
MakeDword(0x4AF258);
MakeComm(0x4AF25C, "'+6C'");
MakeDword(0x4AF25C);
MakeComm(0x4AF260, "'+70'");
MakeDword(0x4AF260);
MakeComm(0x4AF264, "'+74'");
MakeDword(0x4AF264);
MakeComm(0x4AF268, "'+78'");
MakeDword(0x4AF268);
MakeComm(0x4AF26C, "'+7C'");
MakeDword(0x4AF26C);
MakeComm(0x4AF270, "'+80'");
MakeDword(0x4AF270);
MakeComm(0x4AF274, "'+84'");
MakeDword(0x4AF274);
MakeComm(0x4AF278, "'+88'");
MakeDword(0x4AF278);
MakeComm(0x4AF27C, "'+8C'");
MakeDword(0x4AF27C);
MakeComm(0x4AF280, "'+90'");
MakeDword(0x4AF280);
MakeComm(0x4AF284, "'+94'");
MakeDword(0x4AF284);
MakeComm(0x4AF288, "'+98'");
MakeDword(0x4AF288);
MakeComm(0x4AF28C, "'+9C'");
MakeDword(0x4AF28C);
MakeComm(0x4AF290, "'+A0'");
MakeDword(0x4AF290);
MakeComm(0x4AF294, "'+A4'");
MakeDword(0x4AF294);
MakeComm(0x4AF298, "'+A8'");
MakeDword(0x4AF298);
MakeComm(0x4AF29C, "'+AC'");
MakeDword(0x4AF29C);
MakeComm(0x4AF2A0, "'+B0'");
MakeDword(0x4AF2A0);
MakeComm(0x4AF2A4, "'+B4'");
MakeDword(0x4AF2A4);
MakeComm(0x4AF2A8, "'+B8'");
MakeDword(0x4AF2A8);
MakeComm(0x4AF2AC, "'+BC'");
MakeDword(0x4AF2AC);
MakeComm(0x4AF2B0, "'+C0'");
MakeDword(0x4AF2B0);
MakeComm(0x4AF2B4, "'+C4'");
MakeDword(0x4AF2B4);
MakeComm(0x4AF2B8, "'+C8'");
MakeDword(0x4AF2B8);
MakeComm(0x4AF2BC, "'+CC'");
MakeDword(0x4AF2BC);
MakeComm(0x4AF2C0, "'+D0'");
MakeDword(0x4AF2C0);
MakeComm(0x4AF2C4, "'+D4'");
MakeDword(0x4AF2C4);
MakeComm(0x4AF2C8, "'+D8'");
MakeDword(0x4AF2C8);
MakeComm(0x4AF2CC, "'+DC'");
MakeDword(0x4AF2CC);
MakeComm(0x4AF2D0, "'+E0'");
MakeDword(0x4AF2D0);
MakeComm(0x4AF2D4, "'+E4'");
MakeDword(0x4AF2D4);
MakeComm(0x4AF2D8, "'+E8'");
MakeDword(0x4AF2D8);
MakeComm(0x4AF2DC, "'+EC'");
MakeDword(0x4AF2DC);
MakeComm(0x4AF2E0, "'+F0'");
MakeDword(0x4AF2E0);
MakeComm(0x4AF2E4, "'+F4'");
MakeDword(0x4AF2E4);
MakeComm(0x4AF2E8, "'+F8'");
MakeDword(0x4AF2E8);
MakeComm(0x4AF2EC, "'+FC'");
MakeDword(0x4AF2EC);
MakeComm(0x4AF2F0, "'+100'");
MakeDword(0x4AF2F0);
MakeUnkn(0x4AF5F4, 1);
MakeNameEx(0x4AF5F4, "RTTI_4AF5F4_Class_TTrackEffectForm", 0);
MakeDword(0x4AF5F4);
MakeUnkn(0x4AF5F8, 1);
MakeNameEx(0x4AF5F8, "", 0);
MakeByte(0x4AF5F8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AF5F9, 0x4AF60A);
MakeDword(0x4AF60A);
MakeDword(0x4AF60E);
MakeWord(0x4AF612);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AF614, 0x4AF623);
MakeWord(0x4AF623);
MakeUnkn(0x4AF628, 1);
MakeNameEx(0x4AF628, "TTrackEffectForm.FormCreate", 0x20);
MakeComm(0x4AF628, "'procedure TTrackEffectForm.FormCreate(Sender:TObject);'");
MakeCode(0x4AF628);
MakeCode(0x4AF641);
MakeComm(0x4AF64E, "'TTrackEffectForm.BankCombo:TComboBox'");
MakeComm(0x4AF654, "'TComboBox.FItems:TStrings'");
MakeComm(0x4AF65C, "'TStrings.Add'");
MakeCode(0x4AF668);
MakeCode(0x4AF675);
MakeCode(0x4AF67E);
MakeCode(0x4AF683);
MakeFunction(0x4AF628, 0x4AF68A);
MakeCode(0x4AF68C);
MakeCode(0x4AF6C7);
MakeCode(0x4AF6C9);
MakeCode(0x4AF735);
MakeCode(0x4AF742);
MakeCode(0x4AF74B);
MakeCode(0x4AF750);
MakeFunction(0x4AF68C, 0x4AF75B);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4AF764, -1);
MakeDword(0x4AF760);
MakeDword(0x4AF75C);
MakeUnkn(0x4AF784, 1);
MakeNameEx(0x4AF784, "TTrackEffectForm.FormCloseQuery", 0x20);
MakeComm(0x4AF784, "'procedure TTrackEffectForm.FormCloseQuery(Sender:TObject; var CanClose:Boolean);'");
MakeCode(0x4AF784);
MakeComm(0x4AF7A9, "'TTrackEffectForm.FModalResult:TModalResult'");
MakeComm(0x4AF7B6, "'TTrackEffectForm.TempoCheck:TCheckBox'");
MakeComm(0x4AF7BE, "'TCustomCheckBox.GetChecked'");
MakeComm(0x4AF7CF, "'TTrackEffectForm.TempoEdit:TEdit'");
MakeComm(0x4AF7F0, "'TTrackEffectForm.?f3D0:Longint'");
MakeComm(0x4AF7FC, "'TTrackEffectForm.?f3D0:Longint'");
MakeComm(0x4AF805, "'TTrackEffectForm.?f3D0:Longint'");
MakeCode(0x4AF811);
MakeComm(0x4AF814, "'TTrackEffectForm.TempoEdit:TEdit'");
MakeComm(0x4AF81F, "'TTrackEffectForm.TempoEdit:TEdit'");
MakeComm(0x4AF827, "'TWinControl.SetFocus'");
MakeComm(0x4AF82D, "'TTrackEffectForm.TempoEdit:TEdit'");
MakeCode(0x4AF86E);
MakeComm(0x4AF873, "'TTrackEffectForm.VolumeSlider:TSliderFrame'");
MakeComm(0x4AF887, "'TTrackEffectForm.PitchWheelSlider:TSliderFrame'");
MakeComm(0x4AF89B, "'TTrackEffectForm.ModWheelSlider:TSliderFrame'");
MakeComm(0x4AF8AF, "'TTrackEffectForm.PanSlider:TSliderFrame'");
MakeComm(0x4AF8C3, "'TTrackEffectForm.ReverbSlider:TSliderFrame'");
MakeComm(0x4AF8D7, "'TTrackEffectForm.ChorusSlider:TSliderFrame'");
MakeCode(0x4AF8E6);
MakeCode(0x4AF8E9);
MakeCode(0x4AF8F6);
MakeCode(0x4AF90F);
MakeCode(0x4AF914);
MakeFunction(0x4AF784, 0x4AF91C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4AF924, -1);
MakeDword(0x4AF920);
MakeDword(0x4AF91C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4AF950, -1);
MakeDword(0x4AF94C);
MakeDword(0x4AF948);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4AF960, -1);
MakeDword(0x4AF95C);
MakeDword(0x4AF958);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4AF974, -1);
MakeDword(0x4AF970);
MakeDword(0x4AF96C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4AF988, -1);
MakeDword(0x4AF984);
MakeDword(0x4AF980);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4AF994, -1);
MakeDword(0x4AF990);
MakeDword(0x4AF98C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4AF9A4, -1);
MakeDword(0x4AF9A0);
MakeDword(0x4AF99C);
MakeCode(0x4AF9AC);
MakeCode(0x4AF9D5);
MakeCode(0x4AFA26);
MakeCode(0x4AFA33);
MakeCode(0x4AFA3C);
MakeCode(0x4AFA41);
MakeFunction(0x4AF9AC, 0x4AFA49);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4AFA54, -1);
MakeDword(0x4AFA50);
MakeDword(0x4AFA4C);
MakeUnkn(0x4AFA5C, 1);
MakeNameEx(0x4AFA5C, "TTrackEffectForm.HelpButtonClick", 0x20);
MakeComm(0x4AFA5C, "'procedure TTrackEffectForm.HelpButtonClick(Sender:TObject);'");
MakeCode(0x4AFA5C);
MakeComm(0x4AFA64, "'TTrackEffectForm.HelpContext:THelpContext'");
MakeFunction(0x4AFA5C, 0x4AFA71);
MakeUnkn(0x4AFA74, 1);
MakeNameEx(0x4AFA74, "TTrackEffectForm.TempoCheckClick", 0x20);
MakeComm(0x4AFA74, "'procedure TTrackEffectForm.TempoCheckClick(Sender:TObject);'");
MakeCode(0x4AFA74);
MakeComm(0x4AFA78, "'TTrackEffectForm.TempoCheck:TCheckBox'");
MakeComm(0x4AFA80, "'TCustomCheckBox.GetChecked'");
MakeComm(0x4AFA8A, "'TTrackEffectForm.TempoEdit:TEdit'");
MakeComm(0x4AFA97, "'TTrackEffectForm.TempoTapButton:TButton'");
MakeComm(0x4AFA9F, "'TControl.SetEnabled'");
MakeComm(0x4AFAA2, "'TTrackEffectForm.FVisible:Boolean'");
MakeComm(0x4AFAA7, "'TTrackEffectForm.TempoEdit:TEdit'");
MakeCode(0x4AFAB4);
MakeFunction(0x4AFA74, 0x4AFAB7);
MakeUnkn(0x4AFAB8, 1);
MakeNameEx(0x4AFAB8, "TTrackEffectForm.TempoTapButtonClick", 0x20);
MakeComm(0x4AFAB8, "'procedure TTrackEffectForm.TempoTapButtonClick(Sender:TObject);'");
MakeCode(0x4AFAB8);
MakeComm(0x4AFAE4, "'TTempoTapForm.Create'");
MakeComm(0x4AFAFF, "'TCustomForm.ShowModal'");
MakeComm(0x4AFB0E, "'TTempoTapForm.?f3E8:dword'");
MakeComm(0x4AFB1C, "'TTrackEffectForm.TempoEdit:TEdit'");
MakeComm(0x4AFB27, "'TTrackEffectForm.TempoEdit:TEdit'");
MakeComm(0x4AFB31, "'TWinControl.Focused'");
MakeComm(0x4AFB3A, "'TTrackEffectForm.TempoEdit:TEdit'");
MakeCode(0x4AFB45);
MakeCode(0x4AFB52);
MakeCode(0x4AFB5B);
MakeCode(0x4AFB60);
MakeCode(0x4AFB62);
MakeCode(0x4AFB6F);
MakeCode(0x4AFB78);
MakeCode(0x4AFB7D);
MakeFunction(0x4AFAB8, 0x4AFB85);
MakeUnkn(0x4AFB88, 1);
MakeNameEx(0x4AFB88, "TTrackEffectForm.InstOrBankCheckClick", 0x20);
MakeComm(0x4AFB88, "'procedure TTrackEffectForm.InstOrBankCheckClick(Sender:TObject);'");
MakeCode(0x4AFB88);
MakeComm(0x4AFB8F, "'TTrackEffectForm.InstCheck:TCheckBox'");
MakeComm(0x4AFB97, "'TCustomCheckBox.GetChecked'");
MakeComm(0x4AFBA1, "'TTrackEffectForm.InstList:TComboBox'");
MakeComm(0x4AFBAE, "'TTrackEffectForm.LetRingCheck:TCheckBox'");
MakeComm(0x4AFBB6, "'TControl.SetEnabled'");
MakeComm(0x4AFBBB, "'TTrackEffectForm.BankCheck:TCheckBox'");
MakeComm(0x4AFBC3, "'TControl.SetEnabled'");
MakeComm(0x4AFBCA, "'TTrackEffectForm.BankCheck:TCheckBox'");
MakeComm(0x4AFBD2, "'TCustomCheckBox.GetChecked'");
MakeCode(0x4AFBDC);
MakeCode(0x4AFBE0);
MakeComm(0x4AFBE2, "'TTrackEffectForm.BankCombo:TComboBox'");
MakeCode(0x4AFBE2);
MakeComm(0x4AFBED, "'TTrackEffectForm.FVisible:Boolean'");
MakeComm(0x4AFBF3, "'TTrackEffectForm.InstCheck:TCheckBox'");
MakeComm(0x4AFBFF, "'TTrackEffectForm.InstList:TComboBox'");
MakeCode(0x4AFC0C);
MakeFunction(0x4AFB88, 0x4AFC10);
MakeUnkn(0x4AFC10, 1);
MakeNameEx(0x4AFC10, "TTrackEffectForm.ControllerCheckClick", 0x20);
MakeComm(0x4AFC10, "'procedure TTrackEffectForm.ControllerCheckClick(Sender:TObject);'");
MakeCode(0x4AFC10);
MakeComm(0x4AFC29, "'TCheckBox.FParent:TWinControl'");
MakeCode(0x4AFC3F);
MakeComm(0x4AFC41, "'TCheckBox.FParent:TWinControl'");
MakeComm(0x4AFC5A, "'TCheckBox.FParent:TWinControl'");
MakeComm(0x4AFC8E, "'TCustomCheckBox.GetChecked'");
MakeComm(0x4AFC9A, "'TControl.SetEnabled'");
MakeComm(0x4AFCAA, "'TCustomCheckBox.GetChecked'");
MakeComm(0x4AFCB4, "'TSliderFrame.Edit:TEdit'");
MakeCode(0x4AFCC2);
MakeCode(0x4AFCCA);
MakeFunction(0x4AFC10, 0x4AFCD0);
MakeUnkn(0x4AFCD0, 1);
MakeNameEx(0x4AFCD0, "TTrackEffectForm.StrokeCheckClick", 0x20);
MakeComm(0x4AFCD0, "'procedure TTrackEffectForm.StrokeCheckClick(Sender:TObject);'");
MakeCode(0x4AFCD0);
MakeComm(0x4AFCD7, "'TTrackEffectForm.StrokeDownCheck:TCheckBox'");
MakeComm(0x4AFCE5, "'TCustomCheckBox.GetChecked'");
MakeComm(0x4AFCF1, "'TTrackEffectForm.StrokeUpCheck:TCheckBox'");
MakeComm(0x4AFCF9, "'TCustomCheckBox.SetChecked'");
MakeComm(0x4AFD01, "'TTrackEffectForm.StrokeUpCheck:TCheckBox'");
MakeCode(0x4AFD01);
MakeComm(0x4AFD0F, "'TCustomCheckBox.GetChecked'");
MakeComm(0x4AFD1B, "'TTrackEffectForm.StrokeDownCheck:TCheckBox'");
MakeComm(0x4AFD23, "'TCustomCheckBox.SetChecked'");
MakeCode(0x4AFD29);
MakeFunction(0x4AFCD0, 0x4AFD2D);
MakeUnkn(0x4AFD30, 1);
MakeNameEx(0x4AFD30, "TTrackEffectForm.CMDialogChar", 0x20);
MakeComm(0x4AFD30, "'procedure TTrackEffectForm.CMDialogChar(Message:TWMKey);'");
MakeCode(0x4AFD30);
MakeComm(0x4AFD44, "'TTrackEffectForm.PageControl:TPageControl'");
MakeCode(0x4AFD44);
MakeComm(0x4AFD4A, "'TPageControl.ActivePage:TTabSheet'");
MakeComm(0x4AFD50, "'TTrackEffectForm.GeneralSheet:TTabSheet'");
MakeComm(0x4AFD5A, "'TTrackEffectForm.ControllersSheet:TTabSheet'");
MakeCode(0x4AFD68);
MakeCode(0x4AFD70);
MakeCode(0x4AFD7A);
MakeFunction(0x4AFD30, 0x4AFD84);
MakeUnkn(0x4AFD84, 1);
MakeNameEx(0x4AFD84, "VMT_4AFD84_TMainForm", 0);
MakeDword(0x4AFD84);
MakeDword(0x4AFD88);
MakeDword(0x4AFD8C);
MakeDword(0x4AFD90);
MakeUnkn(0x4AFED4, 1);
MakeNameEx(0x4AFED4, "TMainForm_InitTable", 0);
MakeByte(0x4AFED4);
MakeByte(0x4AFED5);
MakeDword(0x4AFED6);
MakeDword(0x4AFEDA);
MakeDword(0x4AFEDE);
MakeDword(0x4AFEE2);
MakeDword(0x4AFEE6);
MakeDword(0x4AFEEA);
MakeDword(0x4AFEEE);
MakeDword(0x4AFEF2);
MakeDword(0x4AFD94);
MakeDword(0x4AFD98);
MakeUnkn(0x4AFEF6, 1);
MakeNameEx(0x4AFEF6, "TMainForm_FieldTable", 0);
MakeWord(0x4AFEF6);
MakeDword(0x4AFEF8);
MakeWord(0x4B1279);
MakeDword(0x4B127B);
MakeDword(0x4B127F);
MakeDword(0x4B1283);
MakeDword(0x4B1287);
MakeDword(0x4B128B);
MakeDword(0x4B128F);
MakeDword(0x4B1293);
MakeDword(0x4B1297);
MakeDword(0x4B129B);
MakeDword(0x4B129F);
MakeDword(0x4B12A3);
MakeDword(0x4B12A7);
MakeDword(0x4B12AB);
MakeDword(0x4B12AF);
MakeDword(0x4AFEFC);
MakeWord(0x4AFF00);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AFF02, 0x4AFF0C);
MakeDword(0x4AFF0C);
MakeWord(0x4AFF10);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AFF12, 0x4AFF1D);
MakeDword(0x4AFF1D);
MakeWord(0x4AFF21);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AFF23, 0x4AFF2E);
MakeDword(0x4AFF2E);
MakeWord(0x4AFF32);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AFF34, 0x4AFF45);
MakeDword(0x4AFF45);
MakeWord(0x4AFF49);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AFF4B, 0x4AFF56);
MakeDword(0x4AFF56);
MakeWord(0x4AFF5A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AFF5C, 0x4AFF68);
MakeDword(0x4AFF68);
MakeWord(0x4AFF6C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AFF6E, 0x4AFF76);
MakeDword(0x4AFF76);
MakeWord(0x4AFF7A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AFF7C, 0x4AFF84);
MakeDword(0x4AFF84);
MakeWord(0x4AFF88);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AFF8A, 0x4AFF95);
MakeDword(0x4AFF95);
MakeWord(0x4AFF99);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AFF9B, 0x4AFFA7);
MakeDword(0x4AFFA7);
MakeWord(0x4AFFAB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AFFAD, 0x4AFFB9);
MakeDword(0x4AFFB9);
MakeWord(0x4AFFBD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AFFBF, 0x4AFFCD);
MakeDword(0x4AFFCD);
MakeWord(0x4AFFD1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AFFD3, 0x4AFFE0);
MakeDword(0x4AFFE0);
MakeWord(0x4AFFE4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AFFE6, 0x4AFFF2);
MakeDword(0x4AFFF2);
MakeWord(0x4AFFF6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4AFFF8, 0x4B0005);
MakeDword(0x4B0005);
MakeWord(0x4B0009);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B000B, 0x4B0018);
MakeDword(0x4B0018);
MakeWord(0x4B001C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B001E, 0x4B002F);
MakeDword(0x4B002F);
MakeWord(0x4B0033);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0035, 0x4B0046);
MakeDword(0x4B0046);
MakeWord(0x4B004A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B004C, 0x4B0057);
MakeDword(0x4B0057);
MakeWord(0x4B005B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B005D, 0x4B0069);
MakeDword(0x4B0069);
MakeWord(0x4B006D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B006F, 0x4B007B);
MakeDword(0x4B007B);
MakeWord(0x4B007F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0081, 0x4B008C);
MakeDword(0x4B008C);
MakeWord(0x4B0090);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0092, 0x4B009F);
MakeDword(0x4B009F);
MakeWord(0x4B00A3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B00A5, 0x4B00B9);
MakeDword(0x4B00B9);
MakeWord(0x4B00BD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B00BF, 0x4B00D0);
MakeDword(0x4B00D0);
MakeWord(0x4B00D4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B00D6, 0x4B00E6);
MakeDword(0x4B00E6);
MakeWord(0x4B00EA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B00EC, 0x4B00F9);
MakeDword(0x4B00F9);
MakeWord(0x4B00FD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B00FF, 0x4B0105);
MakeDword(0x4B0105);
MakeWord(0x4B0109);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B010B, 0x4B0110);
MakeDword(0x4B0110);
MakeWord(0x4B0114);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0116, 0x4B011D);
MakeDword(0x4B011D);
MakeWord(0x4B0121);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0123, 0x4B012A);
MakeDword(0x4B012A);
MakeWord(0x4B012E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0130, 0x4B0134);
MakeDword(0x4B0134);
MakeWord(0x4B0138);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B013A, 0x4B013E);
MakeDword(0x4B013E);
MakeWord(0x4B0142);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0144, 0x4B0155);
MakeDword(0x4B0155);
MakeWord(0x4B0159);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B015B, 0x4B016C);
MakeDword(0x4B016C);
MakeWord(0x4B0170);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0172, 0x4B017A);
MakeDword(0x4B017A);
MakeWord(0x4B017E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0180, 0x4B018C);
MakeDword(0x4B018C);
MakeWord(0x4B0190);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0192, 0x4B0198);
MakeDword(0x4B0198);
MakeWord(0x4B019C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B019E, 0x4B01A3);
MakeDword(0x4B01A3);
MakeWord(0x4B01A7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B01A9, 0x4B01AF);
MakeDword(0x4B01AF);
MakeWord(0x4B01B3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B01B5, 0x4B01BB);
MakeDword(0x4B01BB);
MakeWord(0x4B01BF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B01C1, 0x4B01C9);
MakeDword(0x4B01C9);
MakeWord(0x4B01CD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B01CF, 0x4B01D2);
MakeDword(0x4B01D2);
MakeWord(0x4B01D6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B01D8, 0x4B01DF);
MakeDword(0x4B01DF);
MakeWord(0x4B01E3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B01E5, 0x4B01F3);
MakeDword(0x4B01F3);
MakeWord(0x4B01F7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B01F9, 0x4B0204);
MakeDword(0x4B0204);
MakeWord(0x4B0208);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B020A, 0x4B020E);
MakeDword(0x4B020E);
MakeWord(0x4B0212);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0214, 0x4B0220);
MakeDword(0x4B0220);
MakeWord(0x4B0224);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0226, 0x4B0232);
MakeDword(0x4B0232);
MakeWord(0x4B0236);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0238, 0x4B023C);
MakeDword(0x4B023C);
MakeWord(0x4B0240);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0242, 0x4B024A);
MakeDword(0x4B024A);
MakeWord(0x4B024E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0250, 0x4B0256);
MakeDword(0x4B0256);
MakeWord(0x4B025A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B025C, 0x4B0262);
MakeDword(0x4B0262);
MakeWord(0x4B0266);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0268, 0x4B026E);
MakeDword(0x4B026E);
MakeWord(0x4B0272);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0274, 0x4B0278);
MakeDword(0x4B0278);
MakeWord(0x4B027C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B027E, 0x4B0283);
MakeDword(0x4B0283);
MakeWord(0x4B0287);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0289, 0x4B028F);
MakeDword(0x4B028F);
MakeWord(0x4B0293);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0295, 0x4B029C);
MakeDword(0x4B029C);
MakeWord(0x4B02A0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B02A2, 0x4B02A5);
MakeDword(0x4B02A5);
MakeWord(0x4B02A9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B02AB, 0x4B02B2);
MakeDword(0x4B02B2);
MakeWord(0x4B02B6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B02B8, 0x4B02C6);
MakeDword(0x4B02C6);
MakeWord(0x4B02CA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B02CC, 0x4B02CF);
MakeDword(0x4B02CF);
MakeWord(0x4B02D3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B02D5, 0x4B02E0);
MakeDword(0x4B02E0);
MakeWord(0x4B02E4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B02E6, 0x4B02F2);
MakeDword(0x4B02F2);
MakeWord(0x4B02F6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B02F8, 0x4B0305);
MakeDword(0x4B0305);
MakeWord(0x4B0309);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B030B, 0x4B0318);
MakeDword(0x4B0318);
MakeWord(0x4B031C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B031E, 0x4B0321);
MakeDword(0x4B0321);
MakeWord(0x4B0325);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0327, 0x4B0333);
MakeDword(0x4B0333);
MakeWord(0x4B0337);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0339, 0x4B0347);
MakeDword(0x4B0347);
MakeWord(0x4B034B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B034D, 0x4B0353);
MakeDword(0x4B0353);
MakeWord(0x4B0357);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0359, 0x4B0363);
MakeDword(0x4B0363);
MakeWord(0x4B0367);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0369, 0x4B0370);
MakeDword(0x4B0370);
MakeWord(0x4B0374);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0376, 0x4B037D);
MakeDword(0x4B037D);
MakeWord(0x4B0381);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0383, 0x4B038E);
MakeDword(0x4B038E);
MakeWord(0x4B0392);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0394, 0x4B039A);
MakeDword(0x4B039A);
MakeWord(0x4B039E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B03A0, 0x4B03AF);
MakeDword(0x4B03AF);
MakeWord(0x4B03B3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B03B5, 0x4B03B8);
MakeDword(0x4B03B8);
MakeWord(0x4B03BC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B03BE, 0x4B03CF);
MakeDword(0x4B03CF);
MakeWord(0x4B03D3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B03D5, 0x4B03DF);
MakeDword(0x4B03DF);
MakeWord(0x4B03E3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B03E5, 0x4B03F2);
MakeDword(0x4B03F2);
MakeWord(0x4B03F6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B03F8, 0x4B0404);
MakeDword(0x4B0404);
MakeWord(0x4B0408);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B040A, 0x4B040D);
MakeDword(0x4B040D);
MakeWord(0x4B0411);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0413, 0x4B041A);
MakeDword(0x4B041A);
MakeWord(0x4B041E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0420, 0x4B0426);
MakeDword(0x4B0426);
MakeWord(0x4B042A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B042C, 0x4B0435);
MakeDword(0x4B0435);
MakeWord(0x4B0439);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B043B, 0x4B0443);
MakeDword(0x4B0443);
MakeWord(0x4B0447);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0449, 0x4B0456);
MakeDword(0x4B0456);
MakeWord(0x4B045A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B045C, 0x4B0468);
MakeDword(0x4B0468);
MakeWord(0x4B046C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B046E, 0x4B0471);
MakeDword(0x4B0471);
MakeWord(0x4B0475);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0477, 0x4B0485);
MakeDword(0x4B0485);
MakeWord(0x4B0489);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B048B, 0x4B0498);
MakeDword(0x4B0498);
MakeWord(0x4B049C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B049E, 0x4B04A6);
MakeDword(0x4B04A6);
MakeWord(0x4B04AA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B04AC, 0x4B04B7);
MakeDword(0x4B04B7);
MakeWord(0x4B04BB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B04BD, 0x4B04C7);
MakeDword(0x4B04C7);
MakeWord(0x4B04CB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B04CD, 0x4B04D7);
MakeDword(0x4B04D7);
MakeWord(0x4B04DB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B04DD, 0x4B04E9);
MakeDword(0x4B04E9);
MakeWord(0x4B04ED);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B04EF, 0x4B04F8);
MakeDword(0x4B04F8);
MakeWord(0x4B04FC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B04FE, 0x4B0505);
MakeDword(0x4B0505);
MakeWord(0x4B0509);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B050B, 0x4B0519);
MakeDword(0x4B0519);
MakeWord(0x4B051D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B051F, 0x4B0529);
MakeDword(0x4B0529);
MakeWord(0x4B052D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B052F, 0x4B0535);
MakeDword(0x4B0535);
MakeWord(0x4B0539);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B053B, 0x4B0542);
MakeDword(0x4B0542);
MakeWord(0x4B0546);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0548, 0x4B054F);
MakeDword(0x4B054F);
MakeWord(0x4B0553);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0555, 0x4B0560);
MakeDword(0x4B0560);
MakeWord(0x4B0564);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0566, 0x4B0570);
MakeDword(0x4B0570);
MakeWord(0x4B0574);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0576, 0x4B0586);
MakeDword(0x4B0586);
MakeWord(0x4B058A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B058C, 0x4B0590);
MakeDword(0x4B0590);
MakeWord(0x4B0594);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0596, 0x4B05AB);
MakeDword(0x4B05AB);
MakeWord(0x4B05AF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B05B1, 0x4B05BE);
MakeDword(0x4B05BE);
MakeWord(0x4B05C2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B05C4, 0x4B05CF);
MakeDword(0x4B05CF);
MakeWord(0x4B05D3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B05D5, 0x4B05D9);
MakeDword(0x4B05D9);
MakeWord(0x4B05DD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B05DF, 0x4B05ED);
MakeDword(0x4B05ED);
MakeWord(0x4B05F1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B05F3, 0x4B0600);
MakeDword(0x4B0600);
MakeWord(0x4B0604);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0606, 0x4B0615);
MakeDword(0x4B0615);
MakeWord(0x4B0619);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B061B, 0x4B062E);
MakeDword(0x4B062E);
MakeWord(0x4B0632);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0634, 0x4B063A);
MakeDword(0x4B063A);
MakeWord(0x4B063E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0640, 0x4B0646);
MakeDword(0x4B0646);
MakeWord(0x4B064A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B064C, 0x4B0655);
MakeDword(0x4B0655);
MakeWord(0x4B0659);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B065B, 0x4B0661);
MakeDword(0x4B0661);
MakeWord(0x4B0665);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0667, 0x4B0674);
MakeDword(0x4B0674);
MakeWord(0x4B0678);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B067A, 0x4B067E);
MakeDword(0x4B067E);
MakeWord(0x4B0682);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0684, 0x4B068F);
MakeDword(0x4B068F);
MakeWord(0x4B0693);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0695, 0x4B069D);
MakeDword(0x4B069D);
MakeWord(0x4B06A1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B06A3, 0x4B06B2);
MakeDword(0x4B06B2);
MakeWord(0x4B06B6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B06B8, 0x4B06BC);
MakeDword(0x4B06BC);
MakeWord(0x4B06C0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B06C2, 0x4B06C5);
MakeDword(0x4B06C5);
MakeWord(0x4B06C9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B06CB, 0x4B06D1);
MakeDword(0x4B06D1);
MakeWord(0x4B06D5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B06D7, 0x4B06E6);
MakeDword(0x4B06E6);
MakeWord(0x4B06EA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B06EC, 0x4B06F8);
MakeDword(0x4B06F8);
MakeWord(0x4B06FC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B06FE, 0x4B0704);
MakeDword(0x4B0704);
MakeWord(0x4B0708);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B070A, 0x4B0712);
MakeDword(0x4B0712);
MakeWord(0x4B0716);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0718, 0x4B0729);
MakeDword(0x4B0729);
MakeWord(0x4B072D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B072F, 0x4B0732);
MakeDword(0x4B0732);
MakeWord(0x4B0736);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0738, 0x4B073B);
MakeDword(0x4B073B);
MakeWord(0x4B073F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0741, 0x4B0747);
MakeDword(0x4B0747);
MakeWord(0x4B074B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B074D, 0x4B0759);
MakeDword(0x4B0759);
MakeWord(0x4B075D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B075F, 0x4B0769);
MakeDword(0x4B0769);
MakeWord(0x4B076D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B076F, 0x4B0779);
MakeDword(0x4B0779);
MakeWord(0x4B077D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B077F, 0x4B0783);
MakeDword(0x4B0783);
MakeWord(0x4B0787);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0789, 0x4B0790);
MakeDword(0x4B0790);
MakeWord(0x4B0794);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0796, 0x4B079C);
MakeDword(0x4B079C);
MakeWord(0x4B07A0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B07A2, 0x4B07AB);
MakeDword(0x4B07AB);
MakeWord(0x4B07AF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B07B1, 0x4B07BB);
MakeDword(0x4B07BB);
MakeWord(0x4B07BF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B07C1, 0x4B07CD);
MakeDword(0x4B07CD);
MakeWord(0x4B07D1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B07D3, 0x4B07DD);
MakeDword(0x4B07DD);
MakeWord(0x4B07E1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B07E3, 0x4B07EE);
MakeDword(0x4B07EE);
MakeWord(0x4B07F2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B07F4, 0x4B07FD);
MakeDword(0x4B07FD);
MakeWord(0x4B0801);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0803, 0x4B080B);
MakeDword(0x4B080B);
MakeWord(0x4B080F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0811, 0x4B0822);
MakeDword(0x4B0822);
MakeWord(0x4B0826);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0828, 0x4B0830);
MakeDword(0x4B0830);
MakeWord(0x4B0834);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0836, 0x4B0847);
MakeDword(0x4B0847);
MakeWord(0x4B084B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B084D, 0x4B0855);
MakeDword(0x4B0855);
MakeWord(0x4B0859);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B085B, 0x4B0863);
MakeDword(0x4B0863);
MakeWord(0x4B0867);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0869, 0x4B087A);
MakeDword(0x4B087A);
MakeWord(0x4B087E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0880, 0x4B0888);
MakeDword(0x4B0888);
MakeWord(0x4B088C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B088E, 0x4B0896);
MakeDword(0x4B0896);
MakeWord(0x4B089A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B089C, 0x4B08A4);
MakeDword(0x4B08A4);
MakeWord(0x4B08A8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B08AA, 0x4B08B2);
MakeDword(0x4B08B2);
MakeWord(0x4B08B6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B08B8, 0x4B08C0);
MakeDword(0x4B08C0);
MakeWord(0x4B08C4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B08C6, 0x4B08D7);
MakeDword(0x4B08D7);
MakeWord(0x4B08DB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B08DD, 0x4B08E9);
MakeDword(0x4B08E9);
MakeWord(0x4B08ED);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B08EF, 0x4B08F8);
MakeDword(0x4B08F8);
MakeWord(0x4B08FC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B08FE, 0x4B0907);
MakeDword(0x4B0907);
MakeWord(0x4B090B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B090D, 0x4B0916);
MakeDword(0x4B0916);
MakeWord(0x4B091A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B091C, 0x4B092D);
MakeDword(0x4B092D);
MakeWord(0x4B0931);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0933, 0x4B093C);
MakeDword(0x4B093C);
MakeWord(0x4B0940);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0942, 0x4B094C);
MakeDword(0x4B094C);
MakeWord(0x4B0950);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0952, 0x4B0960);
MakeDword(0x4B0960);
MakeWord(0x4B0964);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0966, 0x4B0975);
MakeDword(0x4B0975);
MakeWord(0x4B0979);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B097B, 0x4B098C);
MakeDword(0x4B098C);
MakeWord(0x4B0990);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0992, 0x4B099C);
MakeDword(0x4B099C);
MakeWord(0x4B09A0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B09A2, 0x4B09A9);
MakeDword(0x4B09A9);
MakeWord(0x4B09AD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B09AF, 0x4B09C0);
MakeDword(0x4B09C0);
MakeWord(0x4B09C4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B09C6, 0x4B09D7);
MakeDword(0x4B09D7);
MakeWord(0x4B09DB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B09DD, 0x4B09EF);
MakeDword(0x4B09EF);
MakeWord(0x4B09F3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B09F5, 0x4B0A06);
MakeDword(0x4B0A06);
MakeWord(0x4B0A0A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0A0C, 0x4B0A12);
MakeDword(0x4B0A12);
MakeWord(0x4B0A16);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0A18, 0x4B0A22);
MakeDword(0x4B0A22);
MakeWord(0x4B0A26);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0A28, 0x4B0A31);
MakeDword(0x4B0A31);
MakeWord(0x4B0A35);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0A37, 0x4B0A49);
MakeDword(0x4B0A49);
MakeWord(0x4B0A4D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0A4F, 0x4B0A5D);
MakeDword(0x4B0A5D);
MakeWord(0x4B0A61);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0A63, 0x4B0A6C);
MakeDword(0x4B0A6C);
MakeWord(0x4B0A70);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0A72, 0x4B0A84);
MakeDword(0x4B0A84);
MakeWord(0x4B0A88);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0A8A, 0x4B0A9C);
MakeDword(0x4B0A9C);
MakeWord(0x4B0AA0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0AA2, 0x4B0AB4);
MakeDword(0x4B0AB4);
MakeWord(0x4B0AB8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0ABA, 0x4B0AC9);
MakeDword(0x4B0AC9);
MakeWord(0x4B0ACD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0ACF, 0x4B0AD6);
MakeDword(0x4B0AD6);
MakeWord(0x4B0ADA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0ADC, 0x4B0AEE);
MakeDword(0x4B0AEE);
MakeWord(0x4B0AF2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0AF4, 0x4B0B01);
MakeDword(0x4B0B01);
MakeWord(0x4B0B05);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0B07, 0x4B0B18);
MakeDword(0x4B0B18);
MakeWord(0x4B0B1C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0B1E, 0x4B0B30);
MakeDword(0x4B0B30);
MakeWord(0x4B0B34);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0B36, 0x4B0B48);
MakeDword(0x4AFD9C);
MakeUnkn(0x4B0B48, 1);
MakeNameEx(0x4B0B48, "TMainForm_MethodTable", 0);
MakeWord(0x4B0B48);
MakeWord(0x4B0B4A);
MakeDword(0x4B0B4C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0B50, 0x4B0B67);
MakeWord(0x4B0B67);
MakeDword(0x4B0B69);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0B6D, 0x4B0B80);
MakeWord(0x4B0B80);
MakeDword(0x4B0B82);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0B86, 0x4B0B9B);
MakeWord(0x4B0B9B);
MakeDword(0x4B0B9D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0BA1, 0x4B0BAC);
MakeWord(0x4B0BAC);
MakeDword(0x4B0BAE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0BB2, 0x4B0BC5);
MakeWord(0x4B0BC5);
MakeDword(0x4B0BC7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0BCB, 0x4B0BD6);
MakeWord(0x4B0BD6);
MakeDword(0x4B0BD8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0BDC, 0x4B0BEB);
MakeWord(0x4B0BEB);
MakeDword(0x4B0BED);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0BF1, 0x4B0C01);
MakeWord(0x4B0C01);
MakeDword(0x4B0C03);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0C07, 0x4B0C1B);
MakeWord(0x4B0C1B);
MakeDword(0x4B0C1D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0C21, 0x4B0C2D);
MakeWord(0x4B0C2D);
MakeDword(0x4B0C2F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0C33, 0x4B0C40);
MakeWord(0x4B0C40);
MakeDword(0x4B0C42);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0C46, 0x4B0C58);
MakeWord(0x4B0C58);
MakeDword(0x4B0C5A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0C5E, 0x4B0C6E);
MakeWord(0x4B0C6E);
MakeDword(0x4B0C70);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0C74, 0x4B0C85);
MakeWord(0x4B0C85);
MakeDword(0x4B0C87);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0C8B, 0x4B0C9E);
MakeWord(0x4B0C9E);
MakeDword(0x4B0CA0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0CA4, 0x4B0CB8);
MakeWord(0x4B0CB8);
MakeDword(0x4B0CBA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0CBE, 0x4B0CD0);
MakeWord(0x4B0CD0);
MakeDword(0x4B0CD2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0CD6, 0x4B0CE7);
MakeWord(0x4B0CE7);
MakeDword(0x4B0CE9);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0CED, 0x4B0CFB);
MakeWord(0x4B0CFB);
MakeDword(0x4B0CFD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0D01, 0x4B0D15);
MakeWord(0x4B0D15);
MakeDword(0x4B0D17);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0D1B, 0x4B0D2D);
MakeWord(0x4B0D2D);
MakeDword(0x4B0D2F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0D33, 0x4B0D42);
MakeWord(0x4B0D42);
MakeDword(0x4B0D44);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0D48, 0x4B0D5A);
MakeWord(0x4B0D5A);
MakeDword(0x4B0D5C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0D60, 0x4B0D6C);
MakeWord(0x4B0D6C);
MakeDword(0x4B0D6E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0D72, 0x4B0D7E);
MakeWord(0x4B0D7E);
MakeDword(0x4B0D80);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0D84, 0x4B0D93);
MakeWord(0x4B0D93);
MakeDword(0x4B0D95);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0D99, 0x4B0DA8);
MakeWord(0x4B0DA8);
MakeDword(0x4B0DAA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0DAE, 0x4B0DC6);
MakeWord(0x4B0DC6);
MakeDword(0x4B0DC8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0DCC, 0x4B0DDB);
MakeWord(0x4B0DDB);
MakeDword(0x4B0DDD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0DE1, 0x4B0DF3);
MakeWord(0x4B0DF3);
MakeDword(0x4B0DF5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0DF9, 0x4B0E0B);
MakeWord(0x4B0E0B);
MakeDword(0x4B0E0D);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0E11, 0x4B0E24);
MakeWord(0x4B0E24);
MakeDword(0x4B0E26);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0E2A, 0x4B0E3E);
MakeWord(0x4B0E3E);
MakeDword(0x4B0E40);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0E44, 0x4B0E55);
MakeWord(0x4B0E55);
MakeDword(0x4B0E57);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0E5B, 0x4B0E6C);
MakeWord(0x4B0E6C);
MakeDword(0x4B0E6E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0E72, 0x4B0E84);
MakeWord(0x4B0E84);
MakeDword(0x4B0E86);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0E8A, 0x4B0E9A);
MakeWord(0x4B0E9A);
MakeDword(0x4B0E9C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0EA0, 0x4B0EB3);
MakeWord(0x4B0EB3);
MakeDword(0x4B0EB5);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0EB9, 0x4B0EC6);
MakeWord(0x4B0EC6);
MakeDword(0x4B0EC8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0ECC, 0x4B0EDB);
MakeWord(0x4B0EDB);
MakeDword(0x4B0EDD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0EE1, 0x4B0EEC);
MakeWord(0x4B0EEC);
MakeDword(0x4B0EEE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0EF2, 0x4B0F06);
MakeWord(0x4B0F06);
MakeDword(0x4B0F08);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0F0C, 0x4B0F1F);
MakeWord(0x4B0F1F);
MakeDword(0x4B0F21);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0F25, 0x4B0F37);
MakeWord(0x4B0F37);
MakeDword(0x4B0F39);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0F3D, 0x4B0F48);
MakeWord(0x4B0F48);
MakeDword(0x4B0F4A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0F4E, 0x4B0F58);
MakeWord(0x4B0F58);
MakeDword(0x4B0F5A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0F5E, 0x4B0F79);
MakeWord(0x4B0F79);
MakeDword(0x4B0F7B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0F7F, 0x4B0F97);
MakeWord(0x4B0F97);
MakeDword(0x4B0F99);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0F9D, 0x4B0FB1);
MakeWord(0x4B0FB1);
MakeDword(0x4B0FB3);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0FB7, 0x4B0FC5);
MakeWord(0x4B0FC5);
MakeDword(0x4B0FC7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0FCB, 0x4B0FDC);
MakeWord(0x4B0FDC);
MakeDword(0x4B0FDE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0FE2, 0x4B0FF5);
MakeWord(0x4B0FF5);
MakeDword(0x4B0FF7);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B0FFB, 0x4B100C);
MakeWord(0x4B100C);
MakeDword(0x4B100E);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B1012, 0x4B1023);
MakeWord(0x4B1023);
MakeDword(0x4B1025);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B1029, 0x4B1038);
MakeWord(0x4B1038);
MakeDword(0x4B103A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B103E, 0x4B1050);
MakeWord(0x4B1050);
MakeDword(0x4B1052);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B1056, 0x4B1065);
MakeWord(0x4B1065);
MakeDword(0x4B1067);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B106B, 0x4B107A);
MakeWord(0x4B107A);
MakeDword(0x4B107C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B1080, 0x4B1098);
MakeWord(0x4B1098);
MakeDword(0x4B109A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B109E, 0x4B10AA);
MakeWord(0x4B10AA);
MakeDword(0x4B10AC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B10B0, 0x4B10BC);
MakeWord(0x4B10BC);
MakeDword(0x4B10BE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B10C2, 0x4B10D8);
MakeWord(0x4B10D8);
MakeDword(0x4B10DA);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B10DE, 0x4B10EF);
MakeWord(0x4B10EF);
MakeDword(0x4B10F1);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B10F5, 0x4B1100);
MakeWord(0x4B1100);
MakeDword(0x4B1102);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B1106, 0x4B1115);
MakeWord(0x4B1115);
MakeDword(0x4B1117);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B111B, 0x4B1132);
MakeWord(0x4B1132);
MakeDword(0x4B1134);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B1138, 0x4B1143);
MakeWord(0x4B1143);
MakeDword(0x4B1145);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B1149, 0x4B1159);
MakeWord(0x4B1159);
MakeDword(0x4B115B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B115F, 0x4B1172);
MakeWord(0x4B1172);
MakeDword(0x4B1174);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B1178, 0x4B1183);
MakeWord(0x4B1183);
MakeDword(0x4B1185);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B1189, 0x4B1197);
MakeWord(0x4B1197);
MakeDword(0x4B1199);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B119D, 0x4B11B4);
MakeWord(0x4B11B4);
MakeDword(0x4B11B6);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B11BA, 0x4B11CE);
MakeWord(0x4B11CE);
MakeDword(0x4B11D0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B11D4, 0x4B11E0);
MakeWord(0x4B11E0);
MakeDword(0x4B11E2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B11E6, 0x4B11F9);
MakeWord(0x4B11F9);
MakeDword(0x4B11FB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B11FF, 0x4B1213);
MakeWord(0x4B1213);
MakeDword(0x4B1215);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B1219, 0x4B1231);
MakeWord(0x4B1231);
MakeDword(0x4B1233);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B1237, 0x4B1249);
MakeWord(0x4B1249);
MakeDword(0x4B124B);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B124F, 0x4B1261);
MakeDword(0x4AFDA0);
MakeUnkn(0x4B1261, 1);
MakeNameEx(0x4B1261, "TMainForm_DynamicTable", 0);
MakeWord(0x4B1261);
MakeWord(0x4B1263);
MakeWord(0x4B1265);
MakeDword(0x4B1267);
MakeDword(0x4B126B);
MakeDword(0x4AFDA4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B126F, 0x4B1279);
MakeDword(0x4AFDA8);
MakeDword(0x4AFDAC);
MakeDword(0x4AFDB0);
MakeDword(0x4AFDB4);
MakeDword(0x4AFDB8);
MakeDword(0x4AFDBC);
MakeDword(0x4AFDC0);
MakeDword(0x4AFDC4);
MakeDword(0x4AFDC8);
MakeDword(0x4AFDCC);
MakeComm(0x4AFDD0, "'+0'");
MakeDword(0x4AFDD0);
MakeComm(0x4AFDD4, "'+4'");
MakeDword(0x4AFDD4);
MakeComm(0x4AFDD8, "'+8'");
MakeDword(0x4AFDD8);
MakeComm(0x4AFDDC, "'+C'");
MakeDword(0x4AFDDC);
MakeComm(0x4AFDE0, "'+10'");
MakeDword(0x4AFDE0);
MakeComm(0x4AFDE4, "'+14'");
MakeDword(0x4AFDE4);
MakeComm(0x4AFDE8, "'+18'");
MakeDword(0x4AFDE8);
MakeComm(0x4AFDEC, "'+1C'");
MakeDword(0x4AFDEC);
MakeComm(0x4AFDF0, "'+20'");
MakeDword(0x4AFDF0);
MakeComm(0x4AFDF4, "'+24'");
MakeDword(0x4AFDF4);
MakeComm(0x4AFDF8, "'+28'");
MakeDword(0x4AFDF8);
MakeComm(0x4AFDFC, "'+2C'");
MakeDword(0x4AFDFC);
MakeComm(0x4AFE00, "'+30'");
MakeDword(0x4AFE00);
MakeComm(0x4AFE04, "'+34'");
MakeDword(0x4AFE04);
MakeComm(0x4AFE08, "'+38'");
MakeDword(0x4AFE08);
MakeComm(0x4AFE0C, "'+3C'");
MakeDword(0x4AFE0C);
MakeComm(0x4AFE10, "'+40'");
MakeDword(0x4AFE10);
MakeComm(0x4AFE14, "'+44'");
MakeDword(0x4AFE14);
MakeComm(0x4AFE18, "'+48'");
MakeDword(0x4AFE18);
MakeComm(0x4AFE1C, "'+4C'");
MakeDword(0x4AFE1C);
MakeComm(0x4AFE20, "'+50'");
MakeDword(0x4AFE20);
MakeComm(0x4AFE24, "'+54'");
MakeDword(0x4AFE24);
MakeComm(0x4AFE28, "'+58'");
MakeDword(0x4AFE28);
MakeComm(0x4AFE2C, "'+5C'");
MakeDword(0x4AFE2C);
MakeComm(0x4AFE30, "'+60'");
MakeDword(0x4AFE30);
MakeComm(0x4AFE34, "'+64'");
MakeDword(0x4AFE34);
MakeComm(0x4AFE38, "'+68'");
MakeDword(0x4AFE38);
MakeComm(0x4AFE3C, "'+6C'");
MakeDword(0x4AFE3C);
MakeComm(0x4AFE40, "'+70'");
MakeDword(0x4AFE40);
MakeComm(0x4AFE44, "'+74'");
MakeDword(0x4AFE44);
MakeComm(0x4AFE48, "'+78'");
MakeDword(0x4AFE48);
MakeComm(0x4AFE4C, "'+7C'");
MakeDword(0x4AFE4C);
MakeComm(0x4AFE50, "'+80'");
MakeDword(0x4AFE50);
MakeComm(0x4AFE54, "'+84'");
MakeDword(0x4AFE54);
MakeComm(0x4AFE58, "'+88'");
MakeDword(0x4AFE58);
MakeComm(0x4AFE5C, "'+8C'");
MakeDword(0x4AFE5C);
MakeComm(0x4AFE60, "'+90'");
MakeDword(0x4AFE60);
MakeComm(0x4AFE64, "'+94'");
MakeDword(0x4AFE64);
MakeComm(0x4AFE68, "'+98'");
MakeDword(0x4AFE68);
MakeComm(0x4AFE6C, "'+9C'");
MakeDword(0x4AFE6C);
MakeComm(0x4AFE70, "'+A0'");
MakeDword(0x4AFE70);
MakeComm(0x4AFE74, "'+A4'");
MakeDword(0x4AFE74);
MakeComm(0x4AFE78, "'+A8'");
MakeDword(0x4AFE78);
MakeComm(0x4AFE7C, "'+AC'");
MakeDword(0x4AFE7C);
MakeComm(0x4AFE80, "'+B0'");
MakeDword(0x4AFE80);
MakeComm(0x4AFE84, "'+B4'");
MakeDword(0x4AFE84);
MakeComm(0x4AFE88, "'+B8'");
MakeDword(0x4AFE88);
MakeComm(0x4AFE8C, "'+BC'");
MakeDword(0x4AFE8C);
MakeComm(0x4AFE90, "'+C0'");
MakeDword(0x4AFE90);
MakeComm(0x4AFE94, "'+C4'");
MakeDword(0x4AFE94);
MakeComm(0x4AFE98, "'+C8'");
MakeDword(0x4AFE98);
MakeComm(0x4AFE9C, "'+CC'");
MakeDword(0x4AFE9C);
MakeComm(0x4AFEA0, "'+D0'");
MakeDword(0x4AFEA0);
MakeComm(0x4AFEA4, "'+D4'");
MakeDword(0x4AFEA4);
MakeComm(0x4AFEA8, "'+D8'");
MakeDword(0x4AFEA8);
MakeComm(0x4AFEAC, "'+DC'");
MakeDword(0x4AFEAC);
MakeComm(0x4AFEB0, "'+E0'");
MakeDword(0x4AFEB0);
MakeComm(0x4AFEB4, "'+E4'");
MakeDword(0x4AFEB4);
MakeComm(0x4AFEB8, "'+E8'");
MakeDword(0x4AFEB8);
MakeComm(0x4AFEBC, "'+EC'");
MakeDword(0x4AFEBC);
MakeComm(0x4AFEC0, "'+F0'");
MakeDword(0x4AFEC0);
MakeComm(0x4AFEC4, "'+F4'");
MakeDword(0x4AFEC4);
MakeComm(0x4AFEC8, "'+F8'");
MakeDword(0x4AFEC8);
MakeComm(0x4AFECC, "'+FC'");
MakeDword(0x4AFECC);
MakeComm(0x4AFED0, "'+100'");
MakeDword(0x4AFED0);
MakeUnkn(0x4B12B4, 1);
MakeNameEx(0x4B12B4, "RTTI_4B12B4_Class_TMainForm", 0);
MakeDword(0x4B12B4);
MakeUnkn(0x4B12B8, 1);
MakeNameEx(0x4B12B8, "", 0);
MakeByte(0x4B12B8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B12B9, 0x4B12C3);
MakeDword(0x4B12C3);
MakeDword(0x4B12C7);
MakeWord(0x4B12CB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B12CD, 0x4B12D2);
MakeWord(0x4B12D2);
MakeUnkn(0x4B12D4, 1);
MakeNameEx(0x4B12D4, "VMT_4B12D4_TConfigIniFile", 0);
MakeDword(0x4B12D4);
MakeDword(0x4B12D8);
MakeDword(0x4B12DC);
MakeDword(0x4B12E0);
MakeDword(0x4B12E4);
MakeDword(0x4B12E8);
MakeDword(0x4B12EC);
MakeDword(0x4B12F0);
MakeDword(0x4B12F4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4B1320, 0x4B132F);
MakeDword(0x4B12F8);
MakeDword(0x4B12FC);
MakeDword(0x4B1300);
MakeDword(0x4B1304);
MakeDword(0x4B1308);
MakeDword(0x4B130C);
MakeDword(0x4B1310);
MakeDword(0x4B1314);
MakeDword(0x4B1318);
MakeDword(0x4B131C);
MakeUnkn(0x4B1330, 1);
MakeNameEx(0x4B1330, "TConfigIniFile.Create", 0x20);
MakeComm(0x4B1330, "'constructor TConfigIniFile.Create;'");
MakeCode(0x4B1330);
MakeCode(0x4B133F);
MakeCode(0x4B1379);
MakeCode(0x4B138E);
MakeFunction(0x4B1330, 0x4B1394);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B139C, -1);
MakeDword(0x4B1398);
MakeDword(0x4B1394);
MakeCode(0x4B1418);
MakeCode(0x4B1426);
MakeComm(0x4B142F, "'TTBItem.Create'");
MakeComm(0x4B1436, "'TTBItem.Tag:Integer'");
MakeComm(0x4B143B, "'TTBItem.?f7C:TMainForm'");
MakeComm(0x4B143E, "'TTBItem.?f78:dword'");
MakeFunction(0x4B1418, 0x4B147F);
MakeCode(0x4B1480);
MakeCode(0x4B159E);
MakeCode(0x4B15BD);
MakeCode(0x4B15CE);
MakeCode(0x4B15ED);
MakeFunction(0x4B1480, 0x4B1664);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B166C, -1);
MakeDword(0x4B1668);
MakeDword(0x4B1664);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B1678, -1);
MakeDword(0x4B1674);
MakeDword(0x4B1670);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B168C, -1);
MakeDword(0x4B1688);
MakeDword(0x4B1684);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B16A0, -1);
MakeDword(0x4B169C);
MakeDword(0x4B1698);
MakeCode(0x4B16A8);
MakeComm(0x4B172A, "'TStrings.IndexOf'");
MakeCode(0x4B1747);
MakeCode(0x4B1754);
MakeCode(0x4B1762);
MakeCode(0x4B1767);
MakeFunction(0x4B16A8, 0x4B176F);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B1778, -1);
MakeDword(0x4B1774);
MakeDword(0x4B1770);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B1788, -1);
MakeDword(0x4B1784);
MakeDword(0x4B1780);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B1798, -1);
MakeDword(0x4B1794);
MakeDword(0x4B1790);
MakeCode(0x4B17A0);
MakeComm(0x4B17C8, "'TConfigIniFile.Create'");
MakeCode(0x4B18D8);
MakeCode(0x4B1941);
MakeCode(0x4B1950);
MakeCode(0x4B1A0A);
MakeCode(0x4B1A4D);
MakeCode(0x4B1A59);
MakeCode(0x4B1A9C);
MakeCode(0x4B1AA8);
MakeCode(0x4B1AEC);
MakeCode(0x4B1BBE);
MakeCode(0x4B1BCB);
MakeCode(0x4B1BD4);
MakeCode(0x4B1BD9);
MakeCode(0x4B1BDB);
MakeCode(0x4B1BE8);
MakeCode(0x4B1BF6);
MakeCode(0x4B1BFB);
MakeFunction(0x4B17A0, 0x4B1C04);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B1C0C, -1);
MakeDword(0x4B1C08);
MakeDword(0x4B1C04);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B1C28, -1);
MakeDword(0x4B1C24);
MakeDword(0x4B1C20);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B1C3C, -1);
MakeDword(0x4B1C38);
MakeDword(0x4B1C34);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B1C50, -1);
MakeDword(0x4B1C4C);
MakeDword(0x4B1C48);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B1C70, -1);
MakeDword(0x4B1C6C);
MakeDword(0x4B1C68);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B1C94, -1);
MakeDword(0x4B1C90);
MakeDword(0x4B1C8C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B1CAC, -1);
MakeDword(0x4B1CA8);
MakeDword(0x4B1CA4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B1CC0, -1);
MakeDword(0x4B1CBC);
MakeDword(0x4B1CB8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B1CD4, -1);
MakeDword(0x4B1CD0);
MakeDword(0x4B1CCC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B1CEC, -1);
MakeDword(0x4B1CE8);
MakeDword(0x4B1CE4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B1D00, -1);
MakeDword(0x4B1CFC);
MakeDword(0x4B1CF8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B1D1C, -1);
MakeDword(0x4B1D18);
MakeDword(0x4B1D14);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B1D34, -1);
MakeDword(0x4B1D30);
MakeDword(0x4B1D2C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B1D54, -1);
MakeDword(0x4B1D50);
MakeDword(0x4B1D4C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B1D6C, -1);
MakeDword(0x4B1D68);
MakeDword(0x4B1D64);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B1D7C, -1);
MakeDword(0x4B1D78);
MakeDword(0x4B1D74);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B1D94, -1);
MakeDword(0x4B1D90);
MakeDword(0x4B1D8C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B1DAC, -1);
MakeDword(0x4B1DA8);
MakeDword(0x4B1DA4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B1DC4, -1);
MakeDword(0x4B1DC0);
MakeDword(0x4B1DBC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B1DDC, -1);
MakeDword(0x4B1DD8);
MakeDword(0x4B1DD4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B1DF0, -1);
MakeDword(0x4B1DEC);
MakeDword(0x4B1DE8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B1E04, -1);
MakeDword(0x4B1E00);
MakeDword(0x4B1DFC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B1E1C, -1);
MakeDword(0x4B1E18);
MakeDword(0x4B1E14);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B1E34, -1);
MakeDword(0x4B1E30);
MakeDword(0x4B1E2C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B1E4C, -1);
MakeDword(0x4B1E48);
MakeDword(0x4B1E44);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B1E64, -1);
MakeDword(0x4B1E60);
MakeDword(0x4B1E5C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B1E7C, -1);
MakeDword(0x4B1E78);
MakeDword(0x4B1E74);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B1E8C, -1);
MakeDword(0x4B1E88);
MakeDword(0x4B1E84);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B1E98, -1);
MakeDword(0x4B1E94);
MakeDword(0x4B1E90);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B1EAC, -1);
MakeDword(0x4B1EA8);
MakeDword(0x4B1EA4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B1EC0, -1);
MakeDword(0x4B1EBC);
MakeDword(0x4B1EB8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B1ED4, -1);
MakeDword(0x4B1ED0);
MakeDword(0x4B1ECC);
MakeCode(0x4B1EE4);
MakeComm(0x4B1F42, "'TApplication.FHandle:HWND'");
MakeComm(0x4B1F89, "'TApplication.FHandle:HWND'");
MakeCode(0x4B1F92);
MakeCode(0x4B1FA9);
MakeCode(0x4B1FB6);
MakeComm(0x4B1FD2, "'TApplication.FHandle:HWND'");
MakeCode(0x4B1FDB);
MakeCode(0x4B1FDC);
MakeCode(0x4B1FE1);
MakeCode(0x4B1FE3);
MakeCode(0x4B1FF0);
MakeCode(0x4B2001);
MakeCode(0x4B2006);
MakeFunction(0x4B1EE4, 0x4B2011);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B201C, -1);
MakeDword(0x4B2018);
MakeDword(0x4B2014);
MakeCode(0x4B2020);
MakeCode(0x4B20A3);
MakeCode(0x4B20AF);
MakeCode(0x4B20B9);
MakeCode(0x4B20C6);
MakeCode(0x4B20D0);
MakeCode(0x4B20D5);
MakeCode(0x4B215A);
MakeCode(0x4B2172);
MakeCode(0x4B217F);
MakeCode(0x4B2189);
MakeCode(0x4B218E);
MakeCode(0x4B21F9);
MakeCode(0x4B2206);
MakeCode(0x4B2221);
MakeCode(0x4B2226);
MakeFunction(0x4B2020, 0x4B222C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B222C, 0x4B224C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B224C, 0x4B2258);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B2258, 0x4B2268);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B2270, -1);
MakeDword(0x4B226C);
MakeDword(0x4B2268);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B2284, -1);
MakeDword(0x4B2280);
MakeDword(0x4B227C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B22A8, -1);
MakeDword(0x4B22A4);
MakeDword(0x4B22A0);
MakeCode(0x4B22B0);
MakeCode(0x4B2320);
MakeCode(0x4B232D);
MakeCode(0x4B233B);
MakeCode(0x4B2340);
MakeFunction(0x4B22B0, 0x4B234A);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B2354, -1);
MakeDword(0x4B2350);
MakeDword(0x4B234C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B2368, -1);
MakeDword(0x4B2364);
MakeDword(0x4B2360);
MakeCode(0x4B2378);
MakeCode(0x4B2380);
MakeCode(0x4B23EA);
MakeCode(0x4B2405);
MakeCode(0x4B2409);
MakeCode(0x4B240B);
MakeCode(0x4B241B);
MakeCode(0x4B241D);
MakeCode(0x4B242D);
MakeCode(0x4B242F);
MakeCode(0x4B243F);
MakeCode(0x4B2447);
MakeCode(0x4B2449);
MakeCode(0x4B2463);
MakeCode(0x4B2467);
MakeCode(0x4B2469);
MakeCode(0x4B2479);
MakeCode(0x4B247B);
MakeCode(0x4B248B);
MakeCode(0x4B248D);
MakeCode(0x4B24F1);
MakeCode(0x4B250E);
MakeCode(0x4B2510);
MakeCode(0x4B257A);
MakeCode(0x4B25AB);
MakeCode(0x4B25B8);
MakeCode(0x4B25D3);
MakeCode(0x4B25D8);
MakeFunction(0x4B2378, 0x4B25DF);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B25E8, -1);
MakeDword(0x4B25E4);
MakeDword(0x4B25E0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B25F8, -1);
MakeDword(0x4B25F4);
MakeDword(0x4B25F0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B2610, -1);
MakeDword(0x4B260C);
MakeDword(0x4B2608);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B2624, 0x4B262A);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B262C, 0x4B27A8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B27B0, -1);
MakeDword(0x4B27AC);
MakeDword(0x4B27A8);
MakeUnkn(0x4B27B4, 1);
MakeNameEx(0x4B27B4, "TMainForm.Create", 0x20);
MakeComm(0x4B27B4, "'constructor TMainForm.Create(AOwner:TComponent);'");
MakeCode(0x4B27B4);
MakeCode(0x4B27CD);
MakeComm(0x4B27F9, "'TApplication.?fEC:TMainForm'");
MakeComm(0x4B27FF, "'TApplication.FOnException:TExceptionEvent'");
MakeComm(0x4B2815, "'TApplication.?f11C:TMainForm'");
MakeComm(0x4B281B, "'TApplication.FOnHelp:THelpEvent'");
MakeComm(0x4B2844, "'TMainForm.ImageList:TImageList'");
MakeComm(0x4B2860, "'TMainForm.?f664:HWND'");
MakeComm(0x4B2879, "'TMainForm.N3:TTBItem'");
MakeComm(0x4B2881, "'TTBItem.?f7C:TMainForm'");
MakeComm(0x4B2884, "'TTBItem.?f78:dword'");
MakeComm(0x4B2892, "'TStringList.Create'");
MakeComm(0x4B2899, "'TMainForm.?f6A8:TStringList'");
MakeComm(0x4B28AF, "'TMainForm.?f6DC:TTabFontSettings'");
MakeComm(0x4B28CE, "'TTabDocument.Create'");
MakeComm(0x4B28D5, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B28E4, "'TTabContainer.Create'");
MakeComm(0x4B28ED, "'TMainForm.?f66C:TTabContainer'");
MakeComm(0x4B2902, "'TWinControl.SetParent'");
MakeComm(0x4B290E, "'TTabEditorView.Create'");
MakeComm(0x4B2917, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B291F, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B292E, "'TMainForm.?f674:TTabEditorView'");
MakeCode(0x4B293E);
MakeComm(0x4B2940, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B2954, "'TTabScroller.Create'");
MakeComm(0x4B295D, "'TMainForm.?f670:TTabScroller'");
MakeComm(0x4B2965, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B296B, "'TTabEditorView.?f4F4:dword'");
MakeComm(0x4B2983, "'TMainForm.?f66C:TTabContainer'");
MakeComm(0x4B298D, "'TWinControl.SetParent'");
MakeComm(0x4B2999, "'TTabRulerParent.Create'");
MakeComm(0x4B29A2, "'TMainForm.?f67C:TTabRulerParent'");
MakeComm(0x4B29CB, "'TMainForm.?f66C:TTabContainer'");
MakeComm(0x4B29D5, "'TWinControl.SetParent'");
MakeComm(0x4B29E1, "'TTabRuler.Create'");
MakeComm(0x4B29EA, "'TMainForm.?f678:TTabRuler'");
MakeComm(0x4B29F2, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B29F8, "'TTabRuler.?f258:TTabDocument'");
MakeComm(0x4B2A00, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B2A06, "'TTabRuler.?f25C:TTabEditorView'");
MakeComm(0x4B2A0E, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B2A14, "'TTabEditorView.?fDD0:TTabRuler'");
MakeComm(0x4B2A1C, "'TMainForm.?f670:TTabScroller'");
MakeComm(0x4B2A22, "'TTabEditorView.?fDD4:TTabScroller'");
MakeComm(0x4B2A2A, "'TMainForm.?f670:TTabScroller'");
MakeComm(0x4B2A30, "'TTabScroller.?f25C:TTabEditorView'");
MakeComm(0x4B2A38, "'TMainForm.?f678:TTabRuler'");
MakeComm(0x4B2A49, "'TMainForm.?f67C:TTabRulerParent'");
MakeComm(0x4B2A53, "'TWinControl.SetParent'");
MakeComm(0x4B2A58, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B2A60, "'TMainForm.?f670:TTabScroller'");
MakeComm(0x4B2A68, "'TWinControl.SetParent'");
MakeComm(0x4B2A6D, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B2A7F, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B2ACB, "'TMainForm.?f668:TTabDocument'");
MakeCode(0x4B2AE0);
MakeComm(0x4B2AE2, "'TMainForm.?f660:byte'");
MakeCode(0x4B2AE9);
MakeCode(0x4B2AF6);
MakeCode(0x4B2AFF);
MakeCode(0x4B2B04);
MakeCode(0x4B2B1D);
MakeFunction(0x4B27B4, 0x4B2B25);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B2B28, 0x4B2B2F);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B2B38, -1);
MakeDword(0x4B2B34);
MakeDword(0x4B2B30);
MakeCode(0x4B2B64);
MakeCode(0x4B2BCA);
MakeCode(0x4B2BD7);
MakeCode(0x4B2BE5);
MakeCode(0x4B2BEA);
MakeFunction(0x4B2B64, 0x4B2BF2);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B2BFC, -1);
MakeDword(0x4B2BF8);
MakeDword(0x4B2BF4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B2C0C, -1);
MakeDword(0x4B2C08);
MakeDword(0x4B2C04);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B2C1C, -1);
MakeDword(0x4B2C18);
MakeDword(0x4B2C14);
MakeCode(0x4B2C24);
MakeComm(0x4B2C4B, "'TConfigIniFile.Create'");
MakeCode(0x4B2ED9);
MakeCode(0x4B2F8D);
MakeCode(0x4B2F9A);
MakeCode(0x4B2FA3);
MakeCode(0x4B2FA8);
MakeCode(0x4B2FAA);
MakeCode(0x4B2FB7);
MakeCode(0x4B2FC5);
MakeCode(0x4B2FCA);
MakeFunction(0x4B2C24, 0x4B2FD3);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B2FDC, -1);
MakeDword(0x4B2FD8);
MakeDword(0x4B2FD4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B2FF0, -1);
MakeDword(0x4B2FEC);
MakeDword(0x4B2FE8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B3004, -1);
MakeDword(0x4B3000);
MakeDword(0x4B2FFC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B3024, -1);
MakeDword(0x4B3020);
MakeDword(0x4B301C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B3048, -1);
MakeDword(0x4B3044);
MakeDword(0x4B3040);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B3060, -1);
MakeDword(0x4B305C);
MakeDword(0x4B3058);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B3074, -1);
MakeDword(0x4B3070);
MakeDword(0x4B306C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B3088, -1);
MakeDword(0x4B3084);
MakeDword(0x4B3080);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B30A0, -1);
MakeDword(0x4B309C);
MakeDword(0x4B3098);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B30B4, -1);
MakeDword(0x4B30B0);
MakeDword(0x4B30AC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B30D0, -1);
MakeDword(0x4B30CC);
MakeDword(0x4B30C8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B30E8, -1);
MakeDword(0x4B30E4);
MakeDword(0x4B30E0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B3108, -1);
MakeDword(0x4B3104);
MakeDword(0x4B3100);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B3120, -1);
MakeDword(0x4B311C);
MakeDword(0x4B3118);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B3130, -1);
MakeDword(0x4B312C);
MakeDword(0x4B3128);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B3148, -1);
MakeDword(0x4B3144);
MakeDword(0x4B3140);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B3160, -1);
MakeDword(0x4B315C);
MakeDword(0x4B3158);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B3178, -1);
MakeDword(0x4B3174);
MakeDword(0x4B3170);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B3190, -1);
MakeDword(0x4B318C);
MakeDword(0x4B3188);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B31A4, -1);
MakeDword(0x4B31A0);
MakeDword(0x4B319C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B31B8, -1);
MakeDword(0x4B31B4);
MakeDword(0x4B31B0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B31D0, -1);
MakeDword(0x4B31CC);
MakeDword(0x4B31C8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B31E8, -1);
MakeDword(0x4B31E4);
MakeDword(0x4B31E0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B3200, -1);
MakeDword(0x4B31FC);
MakeDword(0x4B31F8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B3218, -1);
MakeDword(0x4B3214);
MakeDword(0x4B3210);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B3230, -1);
MakeDword(0x4B322C);
MakeDword(0x4B3228);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B3240, -1);
MakeDword(0x4B323C);
MakeDword(0x4B3238);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B324C, -1);
MakeDword(0x4B3248);
MakeDword(0x4B3244);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B3260, -1);
MakeDword(0x4B325C);
MakeDword(0x4B3258);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B3274, -1);
MakeDword(0x4B3270);
MakeDword(0x4B326C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B3288, -1);
MakeDword(0x4B3284);
MakeDword(0x4B3280);
MakeUnkn(0x4B3298, 1);
MakeNameEx(0x4B3298, "TMainForm.Destroy", 0x20);
MakeComm(0x4B3298, "'destructor TMainForm.Destroy;'");
MakeCode(0x4B3298);
MakeComm(0x4B32AA, "'TMainForm.?f664:HWND'");
MakeComm(0x4B32BE, "'TMainForm.?f664:HWND'");
MakeCode(0x4B32C4);
MakeComm(0x4B32C7, "'TMainForm.?f660:byte'");
MakeCode(0x4B32E9);
MakeComm(0x4B32EC, "'TMainForm.?f6A8:TStringList'");
MakeCode(0x4B3310);
MakeFunction(0x4B3298, 0x4B3314);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B331C, -1);
MakeDword(0x4B3318);
MakeDword(0x4B3314);
MakeUnkn(0x4B342C, 1);
MakeNameEx(0x4B342C, "TMainForm.sub_004B342C", 0x20);
MakeComm(0x4B342C, "'procedure TMainForm.sub_004B342C(?:?);'");
MakeCode(0x4B342C);
MakeCode(0x4B3438);
MakeComm(0x4B3447, "'TRegisterForm.Create'");
MakeComm(0x4B344E, "'TCustomForm.ShowModal'");
MakeCode(0x4B3455);
MakeComm(0x4B3464, "'TReg2Form.Create'");
MakeComm(0x4B346B, "'TCustomForm.ShowModal'");
MakeFunction(0x4B342C, 0x4B3472);
MakeUnkn(0x4B3474, 1);
MakeNameEx(0x4B3474, "TMainForm.CreateWnd", 0x20);
MakeComm(0x4B3474, "'procedure TMainForm.CreateWnd;'");
MakeCode(0x4B3474);
MakeFunction(0x4B3474, 0x4B348A);
MakeCode(0x4B348C);
MakeFunction(0x4B348C, 0x4B34AF);
MakeUnkn(0x4B34B0, 1);
MakeNameEx(0x4B34B0, "TMainForm.WMActivate", 0x20);
MakeComm(0x4B34B0, "'procedure TMainForm.WMActivate(Message:TWMActivate);'");
MakeCode(0x4B34B0);
MakeCode(0x4B34CD);
MakeFunction(0x4B34B0, 0x4B34D0);
MakeCode(0x4B34D0);
MakeFunction(0x4B34D0, 0x4B34F0);
MakeUnkn(0x4B34F0, 1);
MakeNameEx(0x4B34F0, "TMainForm.actFileNewExecute", 0x20);
MakeComm(0x4B34F0, "'procedure TMainForm.actFileNewExecute;'");
MakeCode(0x4B34F0);
MakeComm(0x4B34FC, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B3522, "'TBarLinesForm.Create'");
MakeComm(0x4B353D, "'TCustomForm.ShowModal'");
MakeCode(0x4B354D);
MakeComm(0x4B3550, "'TBarLinesForm.?f384:Longint'");
MakeCode(0x4B3559);
MakeCode(0x4B3566);
MakeCode(0x4B356F);
MakeCode(0x4B3574);
MakeComm(0x4B3579, "'TMainForm.?f668:TTabDocument'");
MakeCode(0x4B3587);
MakeFunction(0x4B34F0, 0x4B358B);
MakeUnkn(0x4B358C, 1);
MakeNameEx(0x4B358C, "TMainForm.actFileOpenExecute", 0x20);
MakeComm(0x4B358C, "'procedure TMainForm.actFileOpenExecute;'");
MakeCode(0x4B358C);
MakeComm(0x4B35AF, "'TMainForm.OpenDialog:TOpenDialog'");
MakeComm(0x4B35B5, "'TOpenDialog.FileName:TFileName'");
MakeComm(0x4B35C2, "'TMainForm.?f6C0:string'");
MakeCode(0x4B35DB);
MakeComm(0x4B35DE, "'TMainForm.OpenDialog:TOpenDialog'");
MakeComm(0x4B35E9, "'TMainForm.OpenDialog:TOpenDialog'");
MakeComm(0x4B35F1, "'TCommonDialog.Execute'");
MakeComm(0x4B35F8, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B3606, "'TMainForm.OpenDialog:TOpenDialog'");
MakeComm(0x4B3614, "'TMainForm.?f668:TTabDocument'");
MakeCode(0x4B3626);
MakeCode(0x4B3633);
MakeCode(0x4B3644);
MakeCode(0x4B3649);
MakeFunction(0x4B358C, 0x4B3650);
MakeUnkn(0x4B3650, 1);
MakeNameEx(0x4B3650, "TMainForm.actFileSaveExecute", 0x20);
MakeComm(0x4B3650, "'procedure TMainForm.actFileSaveExecute(?:TMainForm);'");
MakeCode(0x4B3650);
MakeComm(0x4B3670, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B3676, "'TTabDocument.?fB4:string'");
MakeCode(0x4B368D);
MakeComm(0x4B3690, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B3696, "'TTabDocument.?fB4:string'");
MakeCode(0x4B36DB);
MakeCode(0x4B36F0);
MakeComm(0x4B3717, "'TMainForm.?f668:TTabDocument'");
MakeCode(0x4B3717);
MakeComm(0x4B371D, "'TTabDocument.?fB4:string'");
MakeCode(0x4B372F);
MakeCode(0x4B373C);
MakeCode(0x4B374A);
MakeCode(0x4B374F);
MakeFunction(0x4B3650, 0x4B3757);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B3760, -1);
MakeDword(0x4B375C);
MakeDword(0x4B3758);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B376C, -1);
MakeDword(0x4B3768);
MakeDword(0x4B3764);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B377C, -1);
MakeDword(0x4B3778);
MakeDword(0x4B3774);
MakeUnkn(0x4B37EC, 1);
MakeNameEx(0x4B37EC, "TMainForm.actFileSaveAsExecute", 0x20);
MakeComm(0x4B37EC, "'procedure TMainForm.actFileSaveAsExecute;'");
MakeCode(0x4B37EC);
MakeComm(0x4B3806, "'TMainForm.SaveDialog:TSaveDialog'");
MakeComm(0x4B380C, "'TSaveDialog.FileName:TFileName'");
MakeComm(0x4B3811, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B3817, "'TTabDocument.?fB4:string'");
MakeComm(0x4B3825, "'TMainForm.SaveDialog:TSaveDialog'");
MakeComm(0x4B3839, "'TMainForm.?f6C0:string'");
MakeCode(0x4B3852);
MakeComm(0x4B3855, "'TMainForm.SaveDialog:TSaveDialog'");
MakeCode(0x4B3862);
MakeComm(0x4B3864, "'TMainForm.SaveDialog:TSaveDialog'");
MakeComm(0x4B386F, "'TMainForm.SaveDialog:TSaveDialog'");
MakeCode(0x4B386F);
MakeComm(0x4B3877, "'TCommonDialog.Execute'");
MakeComm(0x4B3881, "'TMainForm.SaveDialog:TSaveDialog'");
MakeComm(0x4B388F, "'TMainForm.?f668:TTabDocument'");
MakeCode(0x4B38A1);
MakeCode(0x4B38AE);
MakeCode(0x4B38C4);
MakeCode(0x4B38C9);
MakeFunction(0x4B37EC, 0x4B38D0);
MakeCode(0x4B38D0);
MakeComm(0x4B38F6, "'TApplication.FTerminate:Boolean'");
MakeCode(0x4B3903);
MakeCode(0x4B3905);
MakeCode(0x4B390E);
MakeFunction(0x4B38D0, 0x4B3913);
MakeCode(0x4B3914);
MakeCode(0x4B398F);
MakeCode(0x4B399C);
MakeCode(0x4B39A6);
MakeCode(0x4B39AB);
MakeCode(0x4B3A0B);
MakeCode(0x4B3A18);
MakeCode(0x4B3A21);
MakeCode(0x4B3A26);
MakeCode(0x4B3A70);
MakeCode(0x4B3A7D);
MakeCode(0x4B3A87);
MakeCode(0x4B3A8C);
MakeComm(0x4B3AAD, "'TPrintStatusForm.Create'");
MakeComm(0x4B3AE2, "'TWinControl.Update'");
MakeComm(0x4B3AFF, "'TPrinter.FTitle:string'");
MakeCode(0x4B3B3F);
MakeCode(0x4B3B5C);
MakeCode(0x4B3B77);
MakeComm(0x4B3B7A, "'TPrintStatusForm.PageLabel:TLabel'");
MakeCode(0x4B3BB6);
MakeCode(0x4B3BC4);
MakeCode(0x4B3BCA);
MakeCode(0x4B3BFE);
MakeComm(0x4B3C02, "'TControl.Update'");
MakeCode(0x4B3C1D);
MakeCode(0x4B3C5B);
MakeCode(0x4B3C65);
MakeCode(0x4B3C80);
MakeCode(0x4B3C88);
MakeCode(0x4B3C92);
MakeComm(0x4B3C9A, "'TPrinter.FPrinting:Boolean'");
MakeCode(0x4B3CA8);
MakeCode(0x4B3CB2);
MakeCode(0x4B3CBF);
MakeCode(0x4B3CC8);
MakeCode(0x4B3CCD);
MakeCode(0x4B3CCF);
MakeCode(0x4B3CDC);
MakeCode(0x4B3CED);
MakeCode(0x4B3CF2);
MakeCode(0x4B3CF4);
MakeCode(0x4B3D01);
MakeCode(0x4B3D0F);
MakeCode(0x4B3D14);
MakeFunction(0x4B3914, 0x4B3D1D);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B3D28, -1);
MakeDword(0x4B3D24);
MakeDword(0x4B3D20);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B3D38, -1);
MakeDword(0x4B3D34);
MakeDword(0x4B3D30);
MakeUnkn(0x4B3D4C, 1);
MakeNameEx(0x4B3D4C, "TMainForm.actFilePrintExecute", 0x20);
MakeComm(0x4B3D4C, "'procedure TMainForm.actFilePrintExecute;'");
MakeCode(0x4B3D4C);
MakeComm(0x4B3D71, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B3D86, "'TPrintForm.Create'");
MakeComm(0x4B3D9F, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B3DA5, "'TTabDocument.?f60:dword'");
MakeCode(0x4B3DB0);
MakeComm(0x4B3DB3, "'TPrintForm.TracksList:TCheckListBox'");
MakeComm(0x4B3DD7, "'TCheckListBox.FItems:TStrings'");
MakeComm(0x4B3DDF, "'TStrings.Add'");
MakeCode(0x4B3DF1);
MakeComm(0x4B3DF6, "'TCustomForm.ShowModal'");
MakeComm(0x4B3E09, "'0x0'");
MakeCode(0x4B3E09);
MakeComm(0x4B3E16, "'TPrintForm.TitleCheck:TCheckBox'");
MakeComm(0x4B3E1E, "'TCustomCheckBox.GetChecked'");
MakeCode(0x4B3E2C);
MakeComm(0x4B3E2F, "'TPrintForm.PageNumCheck:TCheckBox'");
MakeComm(0x4B3E37, "'TCustomCheckBox.GetChecked'");
MakeCode(0x4B3E45);
MakeComm(0x4B3E57, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B3E5D, "'TTabDocument.?f60:dword'");
MakeCode(0x4B3E6B);
MakeComm(0x4B3E6E, "'TPrintForm.TracksList:TCheckListBox'");
MakeCode(0x4B3E82);
MakeCode(0x4B3E87);
MakeCode(0x4B3E94);
MakeCode(0x4B3E9D);
MakeCode(0x4B3EA2);
MakeCode(0x4B3EB3);
MakeCode(0x4B3EC0);
MakeCode(0x4B3ECE);
MakeCode(0x4B3ED3);
MakeFunction(0x4B3D4C, 0x4B3EDC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B3EE4, -1);
MakeDword(0x4B3EE0);
MakeDword(0x4B3EDC);
MakeByte(0x4B3EEC);
MakeUnkn(0x4B3EEC, 1);
MakeNameEx(0x4B3EEC, "gvar_004B3EEC", 0);
MakeUnkn(0x4B3EF0, 1);
MakeNameEx(0x4B3EF0, "TMainForm.actFilePrintPreviewExecute", 0x20);
MakeComm(0x4B3EF0, "'procedure TMainForm.actFilePrintPreviewExecute;'");
MakeCode(0x4B3EF0);
MakeComm(0x4B3F15, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B3F2A, "'TPrintForm.Create'");
MakeComm(0x4B3F5D, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B3F63, "'TTabDocument.?f60:dword'");
MakeCode(0x4B3F6E);
MakeComm(0x4B3F71, "'TPrintForm.TracksList:TCheckListBox'");
MakeComm(0x4B3F95, "'TCheckListBox.FItems:TStrings'");
MakeComm(0x4B3F9D, "'TStrings.Add'");
MakeCode(0x4B3FAF);
MakeComm(0x4B3FB4, "'TCustomForm.ShowModal'");
MakeComm(0x4B3FC7, "'0x0'");
MakeCode(0x4B3FC7);
MakeComm(0x4B3FD4, "'TPrintForm.TitleCheck:TCheckBox'");
MakeComm(0x4B3FDC, "'TCustomCheckBox.GetChecked'");
MakeCode(0x4B3FEA);
MakeComm(0x4B3FED, "'TPrintForm.PageNumCheck:TCheckBox'");
MakeComm(0x4B3FF5, "'TCustomCheckBox.GetChecked'");
MakeCode(0x4B4003);
MakeComm(0x4B4015, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B401B, "'TTabDocument.?f60:dword'");
MakeCode(0x4B4029);
MakeComm(0x4B402C, "'TPrintForm.TracksList:TCheckListBox'");
MakeCode(0x4B4040);
MakeCode(0x4B4045);
MakeCode(0x4B4052);
MakeCode(0x4B405B);
MakeCode(0x4B4060);
MakeComm(0x4B408C, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B4096, "'TMainForm.?f6B0:Integer'");
MakeCode(0x4B40E8);
MakeCode(0x4B40F5);
MakeCode(0x4B40FE);
MakeCode(0x4B4103);
MakeCode(0x4B4105);
MakeCode(0x4B4112);
MakeCode(0x4B4121);
MakeCode(0x4B4122);
MakeCode(0x4B4127);
MakeCode(0x4B413E);
MakeCode(0x4B414B);
MakeCode(0x4B4159);
MakeCode(0x4B415E);
MakeFunction(0x4B3EF0, 0x4B4167);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B4170, -1);
MakeDword(0x4B416C);
MakeDword(0x4B4168);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B4188, -1);
MakeDword(0x4B4184);
MakeDword(0x4B4180);
MakeByte(0x4B4190);
MakeUnkn(0x4B4190, 1);
MakeNameEx(0x4B4190, "gvar_004B4190", 0);
MakeUnkn(0x4B4194, 1);
MakeNameEx(0x4B4194, "TMainForm.actFilePageSetupExecute", 0x20);
MakeComm(0x4B4194, "'procedure TMainForm.actFilePageSetupExecute;'");
MakeCode(0x4B4194);
MakeComm(0x4B4198, "'TMainForm.PageSetupDialog:TMyPageSetupDialog'");
MakeComm(0x4B419E, "'TMainForm.?f6B0:Integer'");
MakeComm(0x4B41A4, "'TMyPageSetupDialog.MarginLeft:Integer'");
MakeComm(0x4B41A7, "'TMainForm.?f6B8:Integer'");
MakeComm(0x4B41AD, "'TMyPageSetupDialog.MarginRight:Integer'");
MakeComm(0x4B41B0, "'TMainForm.?f6B4:Integer'");
MakeComm(0x4B41B6, "'TMyPageSetupDialog.MarginTop:Integer'");
MakeComm(0x4B41B9, "'TMainForm.?f6BC:Integer'");
MakeComm(0x4B41BF, "'TMyPageSetupDialog.MarginBottom:Integer'");
MakeComm(0x4B41C6, "'TMyPageSetupDialog.Execute'");
MakeComm(0x4B41CD, "'TMainForm.PageSetupDialog:TMyPageSetupDialog'");
MakeComm(0x4B41D3, "'TMyPageSetupDialog.MarginLeft:Integer'");
MakeComm(0x4B41D6, "'TMainForm.?f6B0:Integer'");
MakeComm(0x4B41DC, "'TMainForm.PageSetupDialog:TMyPageSetupDialog'");
MakeComm(0x4B41E2, "'TMyPageSetupDialog.MarginRight:Integer'");
MakeComm(0x4B41E5, "'TMainForm.?f6B8:Integer'");
MakeComm(0x4B41EB, "'TMainForm.PageSetupDialog:TMyPageSetupDialog'");
MakeComm(0x4B41F1, "'TMyPageSetupDialog.MarginTop:Integer'");
MakeComm(0x4B41F4, "'TMainForm.?f6B4:Integer'");
MakeComm(0x4B41FA, "'TMainForm.PageSetupDialog:TMyPageSetupDialog'");
MakeComm(0x4B4200, "'TMyPageSetupDialog.MarginBottom:Integer'");
MakeComm(0x4B4203, "'TMainForm.?f6BC:Integer'");
MakeCode(0x4B4209);
MakeFunction(0x4B4194, 0x4B420C);
MakeUnkn(0x4B420C, 1);
MakeNameEx(0x4B420C, "TMainForm.FExportTextClick", 0x20);
MakeComm(0x4B420C, "'procedure TMainForm.FExportTextClick(Sender:TObject);'");
MakeCode(0x4B420C);
MakeComm(0x4B424D, "'TExportTextForm.Create'");
MakeComm(0x4B4266, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B426C, "'TTabDocument.?f60:dword'");
MakeCode(0x4B4277);
MakeComm(0x4B427A, "'TExportTextForm.TracksList:TCheckListBox'");
MakeComm(0x4B42AA, "'TCheckListBox.FItems:TStrings'");
MakeComm(0x4B42B2, "'TStrings.Add'");
MakeCode(0x4B42C4);
MakeComm(0x4B42C9, "'TCustomForm.ShowModal'");
MakeCode(0x4B42DC);
MakeComm(0x4B42E3, "'TExportTextForm.?f3A0:Longint'");
MakeComm(0x4B42EF, "'TExportTextForm.?f3A4:Longint'");
MakeComm(0x4B42F8, "'0x0'");
MakeComm(0x4B4305, "'TExportTextForm.BreakLinesAtBarCheck:TCheckBox'");
MakeComm(0x4B430D, "'TCustomCheckBox.GetChecked'");
MakeCode(0x4B431B);
MakeComm(0x4B431E, "'TExportTextForm.PageBreaksCheck:TCheckBox'");
MakeComm(0x4B4326, "'TCustomCheckBox.GetChecked'");
MakeCode(0x4B4334);
MakeComm(0x4B4349, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B434F, "'TTabDocument.?f60:dword'");
MakeCode(0x4B4360);
MakeComm(0x4B4363, "'TExportTextForm.TracksList:TCheckListBox'");
MakeCode(0x4B4377);
MakeCode(0x4B437C);
MakeCode(0x4B4389);
MakeCode(0x4B4392);
MakeCode(0x4B4397);
MakeComm(0x4B439C, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B43A2, "'TTabDocument.?fB4:string'");
MakeComm(0x4B43B4, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B43BA, "'TTabDocument.?fB4:string'");
MakeComm(0x4B43D3, "'TMainForm.ExportTextDialog:TSaveDialog'");
MakeComm(0x4B43D9, "'TSaveDialog.FileName:TFileName'");
MakeCode(0x4B43E5);
MakeComm(0x4B43E8, "'TMainForm.ExportTextDialog:TSaveDialog'");
MakeComm(0x4B43EE, "'TSaveDialog.FileName:TFileName'");
MakeCode(0x4B43F8);
MakeComm(0x4B43FB, "'TMainForm.ExportTextDialog:TSaveDialog'");
MakeComm(0x4B4403, "'TCommonDialog.Execute'");
MakeComm(0x4B4417, "'TMainForm.ExportTextDialog:TSaveDialog'");
MakeComm(0x4B446C, "'TMainForm.?f668:TTabDocument'");
MakeCode(0x4B4477);
MakeCode(0x4B4484);
MakeCode(0x4B4495);
MakeCode(0x4B449A);
MakeCode(0x4B449C);
MakeCode(0x4B44A9);
MakeCode(0x4B44C5);
MakeCode(0x4B44CA);
MakeFunction(0x4B420C, 0x4B44D3);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B44DC, -1);
MakeDword(0x4B44D8);
MakeDword(0x4B44D4);
MakeByte(0x4B44E4);
MakeUnkn(0x4B44E4, 1);
MakeNameEx(0x4B44E4, "gvar_004B44E4", 0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B44F0, -1);
MakeDword(0x4B44EC);
MakeDword(0x4B44E8);
MakeUnkn(0x4B44F8, 1);
MakeNameEx(0x4B44F8, "TMainForm.FExportMidiClick", 0x20);
MakeComm(0x4B44F8, "'procedure TMainForm.FExportMidiClick(Sender:TObject);'");
MakeCode(0x4B44F8);
MakeComm(0x4B452A, "'TExportMidiForm.Create'");
MakeComm(0x4B4543, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B4549, "'TTabDocument.?f60:dword'");
MakeCode(0x4B4554);
MakeComm(0x4B4557, "'TExportMidiForm.TracksList:TCheckListBox'");
MakeComm(0x4B457B, "'TCheckListBox.FItems:TStrings'");
MakeComm(0x4B4583, "'TStrings.Add'");
MakeCode(0x4B4595);
MakeComm(0x4B459A, "'TCustomForm.ShowModal'");
MakeCode(0x4B45AD);
MakeComm(0x4B45B0, "'TExportMidiForm.ExportMutedCheck:TCheckBox'");
MakeComm(0x4B45B8, "'TCustomCheckBox.GetChecked'");
MakeComm(0x4B45C4, "'TExportMidiForm.ExportBankSelectsCheck:TCheckBox'");
MakeComm(0x4B45CC, "'TCustomCheckBox.GetChecked'");
MakeComm(0x4B45E7, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B45ED, "'TTabDocument.?f60:dword'");
MakeCode(0x4B45FB);
MakeComm(0x4B45FE, "'TExportMidiForm.TracksList:TCheckListBox'");
MakeCode(0x4B4612);
MakeCode(0x4B4617);
MakeCode(0x4B4624);
MakeCode(0x4B462D);
MakeCode(0x4B4632);
MakeComm(0x4B4637, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B463D, "'TTabDocument.?fB4:string'");
MakeComm(0x4B464C, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B4652, "'TTabDocument.?fB4:string'");
MakeComm(0x4B4668, "'TMainForm.ExportMidiDialog:TSaveDialog'");
MakeComm(0x4B466E, "'TSaveDialog.FileName:TFileName'");
MakeCode(0x4B467A);
MakeComm(0x4B467D, "'TMainForm.ExportMidiDialog:TSaveDialog'");
MakeComm(0x4B4683, "'TSaveDialog.FileName:TFileName'");
MakeCode(0x4B468D);
MakeComm(0x4B4690, "'TMainForm.ExportMidiDialog:TSaveDialog'");
MakeComm(0x4B4698, "'TCommonDialog.Execute'");
MakeComm(0x4B46AF, "'TMainForm.ExportMidiDialog:TSaveDialog'");
MakeComm(0x4B46C3, "'TMainForm.?f668:TTabDocument'");
MakeCode(0x4B46CE);
MakeCode(0x4B46DB);
MakeCode(0x4B46F1);
MakeCode(0x4B46F6);
MakeFunction(0x4B44F8, 0x4B46FF);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B4708, -1);
MakeDword(0x4B4704);
MakeDword(0x4B4700);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B4718, -1);
MakeDword(0x4B4714);
MakeDword(0x4B4710);
MakeUnkn(0x4B4720, 1);
MakeNameEx(0x4B4720, "TMainForm.FExitClick", 0x20);
MakeComm(0x4B4720, "'procedure TMainForm.FExitClick(Sender:TObject);'");
MakeCode(0x4B4720);
MakeFunction(0x4B4720, 0x4B4726);
MakeUnkn(0x4B4728, 1);
MakeNameEx(0x4B4728, "TMainForm.VMenuClick", 0x20);
MakeComm(0x4B4728, "'procedure TMainForm.VMenuClick(Sender:TObject);'");
MakeCode(0x4B4728);
MakeComm(0x4B4728, "'TMainForm.StatusBar:TStatusBar'");
MakeComm(0x4B472E, "'TStatusBar.FVisible:Boolean'");
MakeComm(0x4B4732, "'TMainForm.VStatusBar:TTBItem'");
MakeFunction(0x4B4728, 0x4B473E);
MakeUnkn(0x4B4740, 1);
MakeNameEx(0x4B4740, "TMainForm.VToolbarsClick", 0x20);
MakeComm(0x4B4740, "'procedure TMainForm.VToolbarsClick(Sender:TObject);'");
MakeCode(0x4B4740);
MakeComm(0x4B4743, "'TMainForm.MainToolbar:TTBToolbar'");
MakeComm(0x4B4749, "'TTBToolbar.FVisible:Boolean'");
MakeComm(0x4B474D, "'TMainForm.VTMain:TTBItem'");
MakeComm(0x4B4758, "'TMainForm.PlayToolbar:TTBToolbar'");
MakeComm(0x4B475E, "'TTBToolbar.FVisible:Boolean'");
MakeComm(0x4B4762, "'TMainForm.VTPlay:TTBItem'");
MakeComm(0x4B476D, "'TMainForm.MenuToolbar:TTBToolbar'");
MakeComm(0x4B4773, "'TTBToolbar.?f2D4:byte'");
MakeComm(0x4B477A, "'TMainForm.VTMenuBarSpansRow:TTBItem'");
MakeFunction(0x4B4740, 0x4B4787);
MakeUnkn(0x4B4788, 1);
MakeNameEx(0x4B4788, "TMainForm.VTMainClick", 0x20);
MakeComm(0x4B4788, "'procedure TMainForm.VTMainClick(Sender:TObject);'");
MakeCode(0x4B4788);
MakeComm(0x4B4788, "'TMainForm.MainToolbar:TTBToolbar'");
MakeComm(0x4B478E, "'TTBToolbar.FVisible:Boolean'");
MakeFunction(0x4B4788, 0x4B479F);
MakeUnkn(0x4B47A0, 1);
MakeNameEx(0x4B47A0, "TMainForm.VTPlayClick", 0x20);
MakeComm(0x4B47A0, "'procedure TMainForm.VTPlayClick(Sender:TObject);'");
MakeCode(0x4B47A0);
MakeComm(0x4B47A0, "'TMainForm.PlayToolbar:TTBToolbar'");
MakeComm(0x4B47A6, "'TTBToolbar.FVisible:Boolean'");
MakeFunction(0x4B47A0, 0x4B47B7);
MakeUnkn(0x4B47B8, 1);
MakeNameEx(0x4B47B8, "TMainForm.VTMenuBarSpansRowClick", 0x20);
MakeComm(0x4B47B8, "'procedure TMainForm.VTMenuBarSpansRowClick(Sender:TObject);'");
MakeCode(0x4B47B8);
MakeComm(0x4B47B8, "'TMainForm.MenuToolbar:TTBToolbar'");
MakeComm(0x4B47BE, "'TTBToolbar.?f2D4:byte'");
MakeFunction(0x4B47B8, 0x4B47D2);
MakeUnkn(0x4B47D4, 1);
MakeNameEx(0x4B47D4, "TMainForm.VStatusBarClick", 0x20);
MakeComm(0x4B47D4, "'procedure TMainForm.VStatusBarClick(Sender:TObject);'");
MakeCode(0x4B47D4);
MakeComm(0x4B47D8, "'TMainForm.StatusBar:TStatusBar'");
MakeComm(0x4B47DE, "'TStatusBar.FVisible:Boolean'");
MakeComm(0x4B47F4, "'TMainForm.StatusBar:TStatusBar'");
MakeCode(0x4B47F4);
MakeComm(0x4B47FA, "'TStatusBar.FVisible:Boolean'");
MakeFunction(0x4B47D4, 0x4B4809);
MakeUnkn(0x4B480C, 1);
MakeNameEx(0x4B480C, "TMainForm.actSongTitleExecute", 0x20);
MakeComm(0x4B480C, "'procedure TMainForm.actSongTitleExecute;'");
MakeCode(0x4B480C);
MakeComm(0x4B4837, "'TTitleForm.Create'");
MakeComm(0x4B484D, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B4853, "'TTabDocument.?f4C:string'");
MakeComm(0x4B4859, "'TTitleForm.TitleEdit:TEdit'");
MakeComm(0x4B4864, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B486A, "'TTabDocument.?f50:string'");
MakeComm(0x4B4870, "'TTitleForm.ArtistEdit:TEdit'");
MakeComm(0x4B487B, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B4881, "'TTabDocument.?f54:string'");
MakeComm(0x4B4887, "'TTitleForm.AlbumEdit:TEdit'");
MakeComm(0x4B4892, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B4898, "'TTabDocument.?f58:string'");
MakeComm(0x4B489E, "'TTitleForm.TranscriberEdit:TEdit'");
MakeComm(0x4B48A9, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B48AF, "'TTabDocument.?f5C:string'");
MakeComm(0x4B48B5, "'TTitleForm.CommentsMemo:TMemo'");
MakeComm(0x4B48C5, "'TCustomForm.ShowModal'");
MakeComm(0x4B48D8, "'TMainForm.?f668:TTabDocument'");
MakeCode(0x4B48D8);
MakeComm(0x4B48DE, "'TTabDocument.?fB0:byte'");
MakeComm(0x4B48F0, "'TTitleForm.TitleEdit:TEdit'");
MakeComm(0x4B48FE, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B4904, "'TTabDocument.?f4C:string'");
MakeComm(0x4B4912, "'TTitleForm.ArtistEdit:TEdit'");
MakeComm(0x4B4920, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B4926, "'TTabDocument.?f50:string'");
MakeComm(0x4B4934, "'TTitleForm.AlbumEdit:TEdit'");
MakeComm(0x4B4942, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B4948, "'TTabDocument.?f54:string'");
MakeComm(0x4B4956, "'TTitleForm.TranscriberEdit:TEdit'");
MakeComm(0x4B4964, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B496A, "'TTabDocument.?f58:string'");
MakeComm(0x4B4978, "'TTitleForm.CommentsMemo:TMemo'");
MakeComm(0x4B4986, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B498C, "'TTabDocument.?f5C:string'");
MakeComm(0x4B4994, "'TMainForm.?f674:TTabEditorView'");
MakeCode(0x4B499F);
MakeCode(0x4B49AC);
MakeCode(0x4B49B5);
MakeCode(0x4B49BA);
MakeCode(0x4B49BC);
MakeCode(0x4B49C9);
MakeCode(0x4B49D7);
MakeCode(0x4B49DC);
MakeFunction(0x4B480C, 0x4B49E3);
MakeUnkn(0x4B49E4, 1);
MakeNameEx(0x4B49E4, "TMainForm.STempoClick", 0x20);
MakeComm(0x4B49E4, "'procedure TMainForm.STempoClick(Sender:TObject);'");
MakeCode(0x4B49E4);
MakeComm(0x4B4A0F, "'TTempoForm.Create'");
MakeComm(0x4B4A28, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B4A2E, "'TTabDocument.?f64:Longint'");
MakeComm(0x4B4A3C, "'TTempoForm.TempoEdit:TEdit'");
MakeComm(0x4B4A4C, "'TCustomForm.ShowModal'");
MakeComm(0x4B4A5C, "'TMainForm.?f674:TTabEditorView'");
MakeCode(0x4B4A5C);
MakeComm(0x4B4A67, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B4A6D, "'TTabDocument.?fB0:byte'");
MakeComm(0x4B4A7C, "'TTempoForm.?f378:Longint'");
MakeComm(0x4B4A82, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B4A88, "'TTabDocument.?f64:Longint'");
MakeCode(0x4B4A8B);
MakeCode(0x4B4A98);
MakeCode(0x4B4AA1);
MakeCode(0x4B4AA6);
MakeCode(0x4B4AA8);
MakeCode(0x4B4AB5);
MakeCode(0x4B4ABE);
MakeCode(0x4B4AC3);
MakeFunction(0x4B49E4, 0x4B4ACA);
MakeUnkn(0x4B4ACC, 1);
MakeNameEx(0x4B4ACC, "TMainForm.CBarLineClick", 0x20);
MakeComm(0x4B4ACC, "'procedure TMainForm.CBarLineClick(Sender:TObject);'");
MakeCode(0x4B4ACC);
MakeComm(0x4B4ACE, "'TMainForm.?f674:TTabEditorView'");
MakeFunction(0x4B4ACC, 0x4B4ADA);
MakeUnkn(0x4B4ADC, 1);
MakeNameEx(0x4B4ADC, "TMainForm.CRepeatClick", 0x20);
MakeComm(0x4B4ADC, "'procedure TMainForm.CRepeatClick(Sender:TObject);'");
MakeCode(0x4B4ADC);
MakeComm(0x4B4ADE, "'TMainForm.?f674:TTabEditorView'");
MakeFunction(0x4B4ADC, 0x4B4AEA);
MakeUnkn(0x4B4AEC, 1);
MakeNameEx(0x4B4AEC, "TMainForm.CRepeatStartClick", 0x20);
MakeComm(0x4B4AEC, "'procedure TMainForm.CRepeatStartClick(Sender:TObject);'");
MakeCode(0x4B4AEC);
MakeComm(0x4B4AEE, "'TMainForm.?f674:TTabEditorView'");
MakeFunction(0x4B4AEC, 0x4B4AFA);
MakeUnkn(0x4B4AFC, 1);
MakeNameEx(0x4B4AFC, "TMainForm.CStaffBreakClick", 0x20);
MakeComm(0x4B4AFC, "'procedure TMainForm.CStaffBreakClick(Sender:TObject);'");
MakeCode(0x4B4AFC);
MakeComm(0x4B4AFE, "'TMainForm.?f674:TTabEditorView'");
MakeFunction(0x4B4AFC, 0x4B4B0A);
MakeUnkn(0x4B4B0C, 1);
MakeNameEx(0x4B4B0C, "TMainForm.EShiftLeftClick", 0x20);
MakeComm(0x4B4B0C, "'procedure TMainForm.EShiftLeftClick(Sender:TObject);'");
MakeCode(0x4B4B0C);
MakeComm(0x4B4B16, "'0x0'");
MakeComm(0x4B4B1D, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B4B27, "'TTabEditorView.KeyDown'");
MakeFunction(0x4B4B0C, 0x4B4B2F);
MakeByte(0x4B4B30);
MakeUnkn(0x4B4B30, 1);
MakeNameEx(0x4B4B30, "gvar_004B4B30", 0);
MakeUnkn(0x4B4B34, 1);
MakeNameEx(0x4B4B34, "TMainForm.EShiftRightClick", 0x20);
MakeComm(0x4B4B34, "'procedure TMainForm.EShiftRightClick(Sender:TObject);'");
MakeCode(0x4B4B34);
MakeComm(0x4B4B3E, "'0x0'");
MakeComm(0x4B4B45, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B4B4F, "'TTabEditorView.KeyDown'");
MakeFunction(0x4B4B34, 0x4B4B57);
MakeByte(0x4B4B58);
MakeUnkn(0x4B4B58, 1);
MakeNameEx(0x4B4B58, "gvar_004B4B58", 0);
MakeUnkn(0x4B4B5C, 1);
MakeNameEx(0x4B4B5C, "TMainForm.EShiftAllLeftClick", 0x20);
MakeComm(0x4B4B5C, "'procedure TMainForm.EShiftAllLeftClick(Sender:TObject);'");
MakeCode(0x4B4B5C);
MakeComm(0x4B4B66, "'0x4'");
MakeComm(0x4B4B6D, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B4B77, "'TTabEditorView.KeyDown'");
MakeFunction(0x4B4B5C, 0x4B4B7F);
MakeByte(0x4B4B80);
MakeUnkn(0x4B4B80, 1);
MakeNameEx(0x4B4B80, "gvar_004B4B80", 0);
MakeUnkn(0x4B4B84, 1);
MakeNameEx(0x4B4B84, "TMainForm.EShiftAllRightClick", 0x20);
MakeComm(0x4B4B84, "'procedure TMainForm.EShiftAllRightClick(Sender:TObject);'");
MakeCode(0x4B4B84);
MakeComm(0x4B4B8E, "'0x4'");
MakeComm(0x4B4B95, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B4B9F, "'TTabEditorView.KeyDown'");
MakeFunction(0x4B4B84, 0x4B4BA7);
MakeByte(0x4B4BA8);
MakeUnkn(0x4B4BA8, 1);
MakeNameEx(0x4B4BA8, "gvar_004B4BA8", 0);
MakeUnkn(0x4B4BAC, 1);
MakeNameEx(0x4B4BAC, "TMainForm.EDeleteSpaceClick", 0x20);
MakeComm(0x4B4BAC, "'procedure TMainForm.EDeleteSpaceClick(Sender:TObject);'");
MakeCode(0x4B4BAC);
MakeComm(0x4B4BB6, "'0x1'");
MakeComm(0x4B4BBD, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B4BC7, "'TTabEditorView.KeyDown'");
MakeFunction(0x4B4BAC, 0x4B4BCF);
MakeByte(0x4B4BD0);
MakeUnkn(0x4B4BD0, 1);
MakeNameEx(0x4B4BD0, "gvar_004B4BD0", 0);
MakeUnkn(0x4B4BD4, 1);
MakeNameEx(0x4B4BD4, "TMainForm.EInsertSpaceClick", 0x20);
MakeComm(0x4B4BD4, "'procedure TMainForm.EInsertSpaceClick(Sender:TObject);'");
MakeCode(0x4B4BD4);
MakeComm(0x4B4BDE, "'0x1'");
MakeComm(0x4B4BE5, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B4BEF, "'TTabEditorView.KeyDown'");
MakeFunction(0x4B4BD4, 0x4B4BF7);
MakeByte(0x4B4BF8);
MakeUnkn(0x4B4BF8, 1);
MakeNameEx(0x4B4BF8, "gvar_004B4BF8", 0);
MakeUnkn(0x4B4BFC, 1);
MakeNameEx(0x4B4BFC, "TMainForm.EMoveNoteUpClick", 0x20);
MakeComm(0x4B4BFC, "'procedure TMainForm.EMoveNoteUpClick(Sender:TObject);'");
MakeCode(0x4B4BFC);
MakeComm(0x4B4C06, "'0x4'");
MakeComm(0x4B4C0D, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B4C17, "'TTabEditorView.KeyDown'");
MakeFunction(0x4B4BFC, 0x4B4C1F);
MakeByte(0x4B4C20);
MakeUnkn(0x4B4C20, 1);
MakeNameEx(0x4B4C20, "gvar_004B4C20", 0);
MakeUnkn(0x4B4C24, 1);
MakeNameEx(0x4B4C24, "TMainForm.EMoveNoteDownClick", 0x20);
MakeComm(0x4B4C24, "'procedure TMainForm.EMoveNoteDownClick(Sender:TObject);'");
MakeCode(0x4B4C24);
MakeComm(0x4B4C2E, "'0x4'");
MakeComm(0x4B4C35, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B4C3F, "'TTabEditorView.KeyDown'");
MakeFunction(0x4B4C24, 0x4B4C47);
MakeByte(0x4B4C48);
MakeUnkn(0x4B4C48, 1);
MakeNameEx(0x4B4C48, "gvar_004B4C48", 0);
MakeUnkn(0x4B4C4C, 1);
MakeNameEx(0x4B4C4C, "TMainForm.actPlayExecute", 0x20);
MakeComm(0x4B4C4C, "'procedure TMainForm.actPlayExecute;'");
MakeCode(0x4B4C4C);
MakeComm(0x4B4C50, "'TMainForm.?f674:TTabEditorView'");
MakeFunction(0x4B4C4C, 0x4B4C5C);
MakeUnkn(0x4B4C5C, 1);
MakeNameEx(0x4B4C5C, "TMainForm.actPlayAllExecute", 0x20);
MakeComm(0x4B4C5C, "'procedure TMainForm.actPlayAllExecute;'");
MakeCode(0x4B4C5C);
MakeComm(0x4B4C60, "'TMainForm.?f674:TTabEditorView'");
MakeFunction(0x4B4C5C, 0x4B4C6C);
MakeUnkn(0x4B4C6C, 1);
MakeNameEx(0x4B4C6C, "TMainForm.actStopExecute", 0x20);
MakeComm(0x4B4C6C, "'procedure TMainForm.actStopExecute;'");
MakeCode(0x4B4C6C);
MakeComm(0x4B4C6C, "'TMainForm.?f674:TTabEditorView'");
MakeFunction(0x4B4C6C, 0x4B4C78);
MakeUnkn(0x4B4C78, 1);
MakeNameEx(0x4B4C78, "TMainForm.PCloseDeviceClick", 0x20);
MakeComm(0x4B4C78, "'procedure TMainForm.PCloseDeviceClick(Sender:TObject);'");
MakeCode(0x4B4C78);
MakeComm(0x4B4C78, "'TMainForm.?f674:TTabEditorView'");
MakeFunction(0x4B4C78, 0x4B4C84);
MakeUnkn(0x4B4C84, 1);
MakeNameEx(0x4B4C84, "TMainForm.HAboutClick", 0x20);
MakeComm(0x4B4C84, "'procedure TMainForm.HAboutClick(Sender:TObject);'");
MakeCode(0x4B4C84);
MakeComm(0x4B4C97, "'TAboutForm.Create'");
MakeComm(0x4B4CB2, "'TCustomForm.ShowModal'");
MakeCode(0x4B4CB8);
MakeCode(0x4B4CC5);
MakeCode(0x4B4CCE);
MakeCode(0x4B4CD3);
MakeFunction(0x4B4C84, 0x4B4CD8);
MakeUnkn(0x4B4CD8, 1);
MakeNameEx(0x4B4CD8, "TMainForm.EffectClick", 0x20);
MakeComm(0x4B4CD8, "'procedure TMainForm.EffectClick(Sender:TObject);'");
MakeCode(0x4B4CD8);
MakeComm(0x4B4CFE, "'TTBCustomItem.?f38:string'");
MakeCode(0x4B4D26);
MakeComm(0x4B4D31, "'TMainForm.?f674:TTabEditorView'");
MakeCode(0x4B4D3C);
MakeCode(0x4B4D49);
MakeCode(0x4B4D52);
MakeCode(0x4B4D57);
MakeFunction(0x4B4CD8, 0x4B4D5E);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B4D68, -1);
MakeDword(0x4B4D64);
MakeDword(0x4B4D60);
MakeCode(0x4B4D6C);
MakeComm(0x4B4D88, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B4D8E, "'TTabDocument.?f48:byte'");
MakeComm(0x4B4D9A, "'TTabDocument.?fB4:string'");
MakeCode(0x4B4DB2);
MakeComm(0x4B4DB5, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B4DBB, "'TTabDocument.?fB4:string'");
MakeCode(0x4B4DC6);
MakeCode(0x4B4E07);
MakeComm(0x4B4E10, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B4E16, "'TTabDocument.?f48:byte'");
MakeCode(0x4B4E20);
MakeCode(0x4B4E22);
MakeCode(0x4B4E2F);
MakeCode(0x4B4E3D);
MakeCode(0x4B4E42);
MakeFunction(0x4B4D6C, 0x4B4E4D);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B4E58, -1);
MakeDword(0x4B4E54);
MakeDword(0x4B4E50);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B4E6C, -1);
MakeDword(0x4B4E68);
MakeDword(0x4B4E64);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B4E88, -1);
MakeDword(0x4B4E84);
MakeDword(0x4B4E80);
MakeUnkn(0x4B4EB4, 1);
MakeNameEx(0x4B4EB4, "TMainForm.FormCloseQuery", 0x20);
MakeComm(0x4B4EB4, "'procedure TMainForm.FormCloseQuery(Sender:TObject; var CanClose:Boolean);'");
MakeCode(0x4B4EB4);
MakeComm(0x4B4EBA, "'TMainForm.?f674:TTabEditorView'");
MakeFunction(0x4B4EB4, 0x4B4ED1);
MakeUnkn(0x4B4ED4, 1);
MakeNameEx(0x4B4ED4, "TMainForm.NotImplemented", 0x20);
MakeComm(0x4B4ED4, "'procedure TMainForm.NotImplemented;'");
MakeCode(0x4B4ED4);
MakeFunction(0x4B4ED4, 0x4B4EED);
MakeCode(0x4B4F28);
MakeComm(0x4B4F76, "'TTrackForm.Create'");
MakeComm(0x4B4F9D, "'TTrackForm.?f444:dword'");
MakeCode(0x4B4FB9);
MakeComm(0x4B4FBC, "'TTrackForm.N4Radio:TRadioButton'");
MakeComm(0x4B4FC6, "'TRadioButton.SetChecked'");
MakeCode(0x4B4FCE);
MakeComm(0x4B4FD7, "'TTrackForm.N5BassRadio:TRadioButton'");
MakeComm(0x4B4FE1, "'TRadioButton.SetChecked'");
MakeCode(0x4B4FE9);
MakeComm(0x4B4FEC, "'TTrackForm.N5BanjoRadio:TRadioButton'");
MakeComm(0x4B4FF6, "'TRadioButton.SetChecked'");
MakeCode(0x4B4FFE);
MakeComm(0x4B5007, "'TTrackForm.N6GuitarRadio:TRadioButton'");
MakeComm(0x4B5011, "'TRadioButton.SetChecked'");
MakeCode(0x4B5019);
MakeComm(0x4B501C, "'TTrackForm.N6DrumsRadio:TRadioButton'");
MakeComm(0x4B5026, "'TRadioButton.SetChecked'");
MakeCode(0x4B502E);
MakeComm(0x4B5031, "'TTrackForm.N7GuitarRadio:TRadioButton'");
MakeComm(0x4B503B, "'TRadioButton.SetChecked'");
MakeCode(0x4B5041);
MakeComm(0x4B5048, "'TTrackForm.NumbersCheck:TCheckBox'");
MakeComm(0x4B5050, "'TCustomCheckBox.SetChecked'");
MakeComm(0x4B505D, "'TTrackForm.BottomBlankCheck:TCheckBox'");
MakeComm(0x4B5065, "'TCustomCheckBox.SetChecked'");
MakeComm(0x4B5072, "'TTrackForm.TopBlankCheck:TCheckBox'");
MakeComm(0x4B507A, "'TCustomCheckBox.SetChecked'");
MakeComm(0x4B5091, "'TTrackForm.HighestNumberEdit:TEdit'");
MakeCode(0x4B50AF);
MakeCode(0x4B50D2);
MakeComm(0x4B50E8, "'TTrackForm.TransposeEdit:TEdit'");
MakeComm(0x4B5100, "'TTrackForm.TransposeDirCombo:TComboBox'");
MakeComm(0x4B5108, "'TCustomCombo.SetItemIndex'");
MakeComm(0x4B5114, "'TTrackForm.BankCombo:TComboBox'");
MakeComm(0x4B511C, "'TCustomCombo.SetItemIndex'");
MakeComm(0x4B5131, "'TTrackForm.BankLabel:TLabel'");
MakeComm(0x4B513D, "'TControl.SetEnabled'");
MakeComm(0x4B5140, "'TLabel.Width:Integer'");
MakeComm(0x4B5145, "'TLabel.Height:Integer'");
MakeComm(0x4B514A, "'TLabel.Top:Integer'");
MakeComm(0x4B514D, "'TLabel.Left:Integer'");
MakeComm(0x4B5154, "'TControl.SetBounds'");
MakeComm(0x4B515D, "'TTrackForm.BankCombo:TComboBox'");
MakeComm(0x4B5167, "'TControl.SetEnabled'");
MakeComm(0x4B516D, "'TTrackForm.BankCombo:TComboBox'");
MakeCode(0x4B517D);
MakeComm(0x4B5184, "'TTrackForm.LetRingCheck:TCheckBox'");
MakeComm(0x4B518C, "'TCustomCheckBox.SetChecked'");
MakeComm(0x4B5198, "'TTrackForm.VolumeTrack:TTrackBarEx'");
MakeComm(0x4B51A9, "'TTrackForm.?f458:dword'");
MakeComm(0x4B51B5, "'TTrackForm.?f45C:dword'");
MakeComm(0x4B51C1, "'TTrackForm.?f460:dword'");
MakeComm(0x4B51CD, "'TTrackForm.?f464:dword'");
MakeComm(0x4B51D9, "'TTrackForm.?f468:dword'");
MakeComm(0x4B521D, "'TTrackForm.ChannelCombo:TComboBox'");
MakeComm(0x4B5223, "'TComboBox.FItems:TStrings'");
MakeComm(0x4B522D, "'TStrings.Put'");
MakeCode(0x4B5230);
MakeComm(0x4B5237, "'TTrackForm.ChannelCombo:TComboBox'");
MakeComm(0x4B523F, "'TCustomCombo.SetItemIndex'");
MakeComm(0x4B5253, "'TTrackForm.InstList:TComboBox'");
MakeComm(0x4B525B, "'TCustomCombo.SetItemIndex'");
MakeComm(0x4B5266, "'TCustomForm.ShowModal'");
MakeCode(0x4B5279);
MakeComm(0x4B528A, "'TTrackForm.TopBlankCheck:TCheckBox'");
MakeComm(0x4B5292, "'TCustomCheckBox.GetChecked'");
MakeCode(0x4B52B2);
MakeCode(0x4B52E9);
MakeCode(0x4B52EF);
MakeComm(0x4B52F2, "'TTrackForm.BottomBlankCheck:TCheckBox'");
MakeComm(0x4B52FA, "'TCustomCheckBox.GetChecked'");
MakeCode(0x4B531A);
MakeCode(0x4B5351);
MakeCode(0x4B5357);
MakeComm(0x4B535D, "'TTrackForm.?f448:dword'");
MakeCode(0x4B537A);
MakeCode(0x4B5383);
MakeCode(0x4B539E);
MakeCode(0x4B53BB);
MakeCode(0x4B53D2);
MakeCode(0x4B53F9);
MakeCode(0x4B53FB);
MakeCode(0x4B5410);
MakeCode(0x4B5416);
MakeComm(0x4B5419, "'TTrackForm.TopBlankCheck:TCheckBox'");
MakeComm(0x4B5421, "'TCustomCheckBox.GetChecked'");
MakeCode(0x4B5441);
MakeCode(0x4B5455);
MakeComm(0x4B5458, "'TTrackForm.BottomBlankCheck:TCheckBox'");
MakeComm(0x4B5460, "'TCustomCheckBox.GetChecked'");
MakeCode(0x4B5480);
MakeCode(0x4B5494);
MakeComm(0x4B549B, "'TTrackForm.?f448:dword'");
MakeComm(0x4B54A7, "'TTrackForm.?f44C:dword'");
MakeComm(0x4B54B3, "'TTrackForm.NumbersCheck:TCheckBox'");
MakeComm(0x4B54BB, "'TCustomCheckBox.GetChecked'");
MakeComm(0x4B54C7, "'TTrackForm.?f450:Longint'");
MakeCode(0x4B54E0);
MakeCode(0x4B54FE);
MakeComm(0x4B5501, "'TTrackForm.?f454:Longint'");
MakeComm(0x4B550D, "'TTrackForm.InstList:TComboBox'");
MakeComm(0x4B5515, "'TCustomCombo.GetItemIndex'");
MakeCode(0x4B5529);
MakeComm(0x4B552C, "'TTrackForm.BankCombo:TComboBox'");
MakeComm(0x4B5534, "'TCustomCombo.GetItemIndex'");
MakeCode(0x4B5548);
MakeComm(0x4B554B, "'TTrackForm.LetRingCheck:TCheckBox'");
MakeComm(0x4B5553, "'TCustomCheckBox.GetChecked'");
MakeComm(0x4B555F, "'TTrackForm.VolumeTrack:TTrackBarEx'");
MakeComm(0x4B5565, "'TTrackBarEx.Position:Integer'");
MakeComm(0x4B5571, "'TTrackForm.?f458:dword'");
MakeComm(0x4B557D, "'TTrackForm.?f45C:dword'");
MakeComm(0x4B5589, "'TTrackForm.?f460:dword'");
MakeComm(0x4B5595, "'TTrackForm.?f464:dword'");
MakeComm(0x4B55A1, "'TTrackForm.?f468:dword'");
MakeComm(0x4B55AD, "'TTrackForm.ChannelCombo:TComboBox'");
MakeComm(0x4B55B5, "'TCustomCombo.GetItemIndex'");
MakeCode(0x4B55CA);
MakeComm(0x4B55CD, "'TTrackForm.BottomBlankCheck:TCheckBox'");
MakeComm(0x4B55D5, "'TCustomCheckBox.GetChecked'");
MakeComm(0x4B55E1, "'TTrackForm.TopBlankCheck:TCheckBox'");
MakeComm(0x4B55E9, "'TCustomCheckBox.GetChecked'");
MakeCode(0x4B55F2);
MakeCode(0x4B55FF);
MakeCode(0x4B5608);
MakeCode(0x4B560D);
MakeCode(0x4B560F);
MakeCode(0x4B561C);
MakeCode(0x4B562A);
MakeCode(0x4B562F);
MakeFunction(0x4B4F28, 0x4B563E);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B5648, -1);
MakeDword(0x4B5644);
MakeDword(0x4B5640);
MakeUnkn(0x4B58C0, 1);
MakeNameEx(0x4B58C0, "TMainForm.actSongTrackPropExecute", 0x20);
MakeComm(0x4B58C0, "'procedure TMainForm.actSongTrackPropExecute;'");
MakeCode(0x4B58C0);
MakeComm(0x4B58DE, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B58E7, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B58F1, "'TTabEditorView.?f49C:dword'");
MakeCode(0x4B5937);
MakeCode(0x4B5944);
MakeCode(0x4B594D);
MakeCode(0x4B5952);
MakeFunction(0x4B58C0, 0x4B595B);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B5964, -1);
MakeDword(0x4B5960);
MakeDword(0x4B595C);
MakeUnkn(0x4B5978, 1);
MakeNameEx(0x4B5978, "TMainForm.SAddTrackClick", 0x20);
MakeComm(0x4B5978, "'procedure TMainForm.SAddTrackClick(Sender:TObject);'");
MakeCode(0x4B5978);
MakeComm(0x4B599C, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B59A2, "'TTabDocument.?f60:dword'");
MakeCode(0x4B59E8);
MakeCode(0x4B59F8);
MakeComm(0x4B5A05, "'TTrackData.Create'");
MakeComm(0x4B5A1E, "'TTabDocument.?f60:dword'");
MakeCode(0x4B5A54);
MakeCode(0x4B5A5E);
MakeCode(0x4B5A68);
MakeComm(0x4B5A7F, "'TMainForm.?f674:TTabEditorView'");
MakeCode(0x4B5A7F);
MakeComm(0x4B5A91, "'TTabDocument.?f60:dword'");
MakeComm(0x4B5A9B, "'TTabDocument.?f60:dword'");
MakeComm(0x4B5A9E, "'TMainForm.?f674:TTabEditorView'");
MakeCode(0x4B5AA9);
MakeCode(0x4B5AB6);
MakeCode(0x4B5ACC);
MakeCode(0x4B5AD1);
MakeFunction(0x4B5978, 0x4B5ADA);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B5AE4, -1);
MakeDword(0x4B5AE0);
MakeDword(0x4B5ADC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B5B1C, -1);
MakeDword(0x4B5B18);
MakeDword(0x4B5B14);
MakeUnkn(0x4B5B28, 1);
MakeNameEx(0x4B5B28, "TMainForm.SDeleteTrackClick", 0x20);
MakeComm(0x4B5B28, "'procedure TMainForm.SDeleteTrackClick(Sender:TObject);'");
MakeCode(0x4B5B28);
MakeComm(0x4B5B44, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B5B4A, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B5B50, "'TTabDocument.?f60:dword'");
MakeCode(0x4B5B73);
MakeComm(0x4B5B79, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4B5BC1, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4B5BCB, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4B5BE6, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4B5BF5, "'TTabDocument.?f60:dword'");
MakeComm(0x4B5BF8, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4B5C16, "'TTabDocument.?f60:dword'");
MakeComm(0x4B5C1F, "'TTabDocument.?f60:dword'");
MakeComm(0x4B5C22, "'TTabDocument.?f60:dword'");
MakeComm(0x4B5C26, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4B5C2E, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4B5C34, "'0x0'");
MakeCode(0x4B5C34);
MakeComm(0x4B5C3E, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4B5C4B, "'TTabEditorView.?f4A0:dword'");
MakeCode(0x4B5C58);
MakeCode(0x4B5C65);
MakeCode(0x4B5C6E);
MakeCode(0x4B5C73);
MakeFunction(0x4B5B28, 0x4B5C7C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B5CB4, -1);
MakeDword(0x4B5CB0);
MakeDword(0x4B5CAC);
MakeByte(0x4B5CE0);
MakeUnkn(0x4B5CE0, 1);
MakeNameEx(0x4B5CE0, "gvar_004B5CE0", 0);
MakeUnkn(0x4B5CE4, 1);
MakeNameEx(0x4B5CE4, "TMainForm.SMoveTracksClick", 0x20);
MakeComm(0x4B5CE4, "'procedure TMainForm.SMoveTracksClick(Sender:TObject);'");
MakeCode(0x4B5CE4);
MakeComm(0x4B5D03, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B5D0C, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B5D18, "'TTabDocument.?f60:dword'");
MakeCode(0x4B5D3B);
MakeComm(0x4B5D4A, "'TTrackMoveForm.Create'");
MakeComm(0x4B5D63, "'TTabDocument.?f60:dword'");
MakeCode(0x4B5D6E);
MakeComm(0x4B5D91, "'TTrackMoveForm.TrackList:TListBox'");
MakeComm(0x4B5D97, "'TListBox.FItems:TStrings'");
MakeComm(0x4B5D9F, "'TStrings.AddObject'");
MakeCode(0x4B5DA6);
MakeComm(0x4B5DA9, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4B5DB2, "'TTrackMoveForm.TrackList:TListBox'");
MakeComm(0x4B5DBA, "'TCustomListBox.SetItemIndex'");
MakeComm(0x4B5DCF, "'TCustomForm.ShowModal'");
MakeCode(0x4B5DE2);
MakeComm(0x4B5E00, "'TTabDocument.?f68:TTrackData'");
MakeComm(0x4B5E10, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4B5E1C, "'TTabDocument.?f60:dword'");
MakeCode(0x4B5E2A);
MakeComm(0x4B5E2D, "'TTrackMoveForm.TrackList:TListBox'");
MakeComm(0x4B5E33, "'TListBox.FItems:TStrings'");
MakeComm(0x4B5E3D, "'TStrings.sub_00417BF0'");
MakeComm(0x4B5E4C, "'TTabEditorView.?f49C:dword'");
MakeCode(0x4B5E57);
MakeCode(0x4B5E5E);
MakeComm(0x4B5E61, "'TTabDocument.?f68:TTrackData'");
MakeComm(0x4B5E77, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4B5E88, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4B5E8E, "'0x0'");
MakeCode(0x4B5E9D);
MakeCode(0x4B5EAA);
MakeCode(0x4B5EB3);
MakeCode(0x4B5EB8);
MakeCode(0x4B5EBA);
MakeCode(0x4B5EC7);
MakeCode(0x4B5ED5);
MakeCode(0x4B5EDA);
MakeFunction(0x4B5CE4, 0x4B5EE3);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B5F2C, -1);
MakeDword(0x4B5F28);
MakeDword(0x4B5F24);
MakeByte(0x4B5F34);
MakeUnkn(0x4B5F34, 1);
MakeNameEx(0x4B5F34, "gvar_004B5F34", 0);
MakeCode(0x4B5F38);
MakeCode(0x4B5F4D);
MakeCode(0x4B5F57);
MakeFunction(0x4B5F38, 0x4B5F62);
MakeCode(0x4B5F64);
MakeCode(0x4B5F8D);
MakeCode(0x4B5FA5);
MakeCode(0x4B5FCB);
MakeCode(0x4B5FD6);
MakeComm(0x4B5FED, "'0x1C'");
MakeCode(0x4B5FFB);
MakeFunction(0x4B5F64, 0x4B5FFF);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B6008, -1);
MakeDword(0x4B6004);
MakeDword(0x4B6000);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B602C, -1);
MakeDword(0x4B6028);
MakeDword(0x4B6024);
MakeByte(0x4B6040);
MakeUnkn(0x4B6040, 1);
MakeNameEx(0x4B6040, "gvar_004B6040", 0);
MakeCode(0x4B6044);
MakeCode(0x4B60A8);
MakeCode(0x4B60C9);
MakeCode(0x4B6104);
MakeFunction(0x4B6044, 0x4B6130);
MakeUnkn(0x4B6130, 1);
MakeNameEx(0x4B6130, "TMainForm.actEditUndoExecute", 0x20);
MakeComm(0x4B6130, "'procedure TMainForm.actEditUndoExecute;'");
MakeCode(0x4B6130);
MakeComm(0x4B613F, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B614B, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B615F, "'TTabDocument.?fA8:dword'");
MakeComm(0x4B616B, "'TTabDocument.?fB1:byte'");
MakeCode(0x4B6187);
MakeComm(0x4B618A, "'TTabDocument.?fA8:dword'");
MakeCode(0x4B61A5);
MakeCode(0x4B61BF);
MakeCode(0x4B61CE);
MakeComm(0x4B61D1, "'TTabDocument.?fA8:dword'");
MakeCode(0x4B623B);
MakeCode(0x4B626E);
MakeCode(0x4B62A1);
MakeCode(0x4B62CB);
MakeCode(0x4B62F5);
MakeCode(0x4B6318);
MakeCode(0x4B6329);
MakeCode(0x4B6344);
MakeCode(0x4B6365);
MakeComm(0x4B63A2, "'TTabDocument.?f30:dword'");
MakeComm(0x4B63B0, "'TTabDocument.?f30:dword'");
MakeCode(0x4B63BC);
MakeComm(0x4B63C3, "'TTabDocument.?f30:dword'");
MakeComm(0x4B63D1, "'TTabDocument.?f30:dword'");
MakeCode(0x4B63DB);
MakeComm(0x4B63E2, "'TTabDocument.?f30:dword'");
MakeComm(0x4B63F0, "'TTabDocument.?f30:dword'");
MakeCode(0x4B6400);
MakeCode(0x4B6417);
MakeComm(0x4B642B, "'TTabDocument.?f30:dword'");
MakeCode(0x4B6448);
MakeComm(0x4B644F, "'TTabDocument.?f30:dword'");
MakeCode(0x4B6459);
MakeComm(0x4B6460, "'TTabDocument.?f30:dword'");
MakeCode(0x4B6484);
MakeCode(0x4B6498);
MakeCode(0x4B64A5);
MakeCode(0x4B64B1);
MakeCode(0x4B64B6);
MakeComm(0x4B64C1, "'TTabDocument.?fA8:dword'");
MakeCode(0x4B64CE);
MakeComm(0x4B64D1, "'TTabDocument.?fA8:dword'");
MakeComm(0x4B64DD, "'TTabDocument.?fB0:byte'");
MakeComm(0x4B64E9, "'TTabDocument.?f48:byte'");
MakeCode(0x4B64ED);
MakeComm(0x4B64F2, "'TTabDocument.sub_004BC64C'");
MakeComm(0x4B6500, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4B6515, "'TTabEditorView.?f49C:dword'");
MakeCode(0x4B6523);
MakeComm(0x4B6529, "'TTabEditorView.?f4A4:dword'");
MakeComm(0x4B653B, "'0x40'");
MakeComm(0x4B654F, "'0x0'");
MakeCode(0x4B654F);
MakeCode(0x4B6561);
MakeFunction(0x4B6130, 0x4B6568);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B6570, -1);
MakeDword(0x4B656C);
MakeDword(0x4B6568);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B65BC, -1);
MakeDword(0x4B65B8);
MakeDword(0x4B65B4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B6608, -1);
MakeDword(0x4B6604);
MakeDword(0x4B6600);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B662C, -1);
MakeDword(0x4B6628);
MakeDword(0x4B6624);
MakeByte(0x4B6640);
MakeUnkn(0x4B6640, 1);
MakeNameEx(0x4B6640, "gvar_004B6640", 0);
MakeByte(0x4B6644);
MakeUnkn(0x4B6644, 1);
MakeNameEx(0x4B6644, "gvar_004B6644", 0);
MakeUnkn(0x4B6648, 1);
MakeNameEx(0x4B6648, "TMainForm.actEditCutExecute", 0x20);
MakeComm(0x4B6648, "'procedure TMainForm.actEditCutExecute;'");
MakeCode(0x4B6648);
MakeComm(0x4B664B, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B665C, "'TMainForm.?f674:TTabEditorView'");
MakeCode(0x4B6667);
MakeFunction(0x4B6648, 0x4B6669);
MakeUnkn(0x4B666C, 1);
MakeNameEx(0x4B666C, "TMainForm.actEditCopyExecute", 0x20);
MakeComm(0x4B666C, "'procedure TMainForm.actEditCopyExecute;'");
MakeCode(0x4B666C);
MakeComm(0x4B666C, "'TMainForm.?f674:TTabEditorView'");
MakeFunction(0x4B666C, 0x4B6678);
MakeUnkn(0x4B6678, 1);
MakeNameEx(0x4B6678, "TMainForm.actEditPasteExecute", 0x20);
MakeComm(0x4B6678, "'procedure TMainForm.actEditPasteExecute(?:?);'");
MakeCode(0x4B6678);
MakeComm(0x4B66AF, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B66BB, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B66E0, "'TClipboard.Open'");
MakeCode(0x4B6710);
MakeCode(0x4B672F);
MakeCode(0x4B6746);
MakeCode(0x4B6763);
MakeCode(0x4B6786);
MakeCode(0x4B679E);
MakeCode(0x4B67B8);
MakeComm(0x4B67C5, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4B67D1, "'TTabEditorView.?f49C:dword'");
MakeCode(0x4B67DC);
MakeCode(0x4B67E8);
MakeComm(0x4B67EB, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4B67FB, "'TTabEditorView.?f4A0:dword'");
MakeCode(0x4B681A);
MakeCode(0x4B6832);
MakeCode(0x4B6877);
MakeComm(0x4B687A, "'TTabDocument.?f60:dword'");
MakeComm(0x4B6886, "'0x4'");
MakeComm(0x4B68E4, "'0x4'");
MakeCode(0x4B68E4);
MakeCode(0x4B6922);
MakeCode(0x4B6947);
MakeCode(0x4B697C);
MakeCode(0x4B6986);
MakeCode(0x4B699F);
MakeCode(0x4B69D1);
MakeCode(0x4B6A4B);
MakeCode(0x4B6A67);
MakeCode(0x4B6AAD);
MakeComm(0x4B6AB0, "'TTabDocument.?f60:dword'");
MakeCode(0x4B6BD7);
MakeCode(0x4B6C8E);
MakeCode(0x4B6CB9);
MakeCode(0x4B6CF5);
MakeCode(0x4B6D09);
MakeCode(0x4B6D20);
MakeCode(0x4B6D37);
MakeCode(0x4B6D46);
MakeCode(0x4B6D91);
MakeCode(0x4B6D99);
MakeCode(0x4B6DA6);
MakeCode(0x4B6DB5);
MakeComm(0x4B6DBC, "'TClipboard.Close'");
MakeCode(0x4B6DC0);
MakeCode(0x4B6DC5);
MakeCode(0x4B6DE9);
MakeComm(0x4B6DEF, "'TTabEditorView.?fD34:dword'");
MakeComm(0x4B6DFB, "'TTabEditorView.?fD38:dword'");
MakeComm(0x4B6E04, "'TTabEditorView.?fD30:byte'");
MakeCode(0x4B6E1B);
MakeCode(0x4B6E28);
MakeCode(0x4B6E44);
MakeCode(0x4B6E49);
MakeFunction(0x4B6678, 0x4B6E52);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B6E5C, -1);
MakeDword(0x4B6E58);
MakeDword(0x4B6E54);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B6ED8, -1);
MakeDword(0x4B6ED4);
MakeDword(0x4B6ED0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B6EFC, -1);
MakeDword(0x4B6EF8);
MakeDword(0x4B6EF4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B6F18, -1);
MakeDword(0x4B6F14);
MakeDword(0x4B6F10);
MakeByte(0x4B6F50);
MakeUnkn(0x4B6F50, 1);
MakeNameEx(0x4B6F50, "gvar_004B6F50", 0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B6F5C, -1);
MakeDword(0x4B6F58);
MakeDword(0x4B6F54);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B6FC4, -1);
MakeDword(0x4B6FC0);
MakeDword(0x4B6FBC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B7040, -1);
MakeDword(0x4B703C);
MakeDword(0x4B7038);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B70C0, -1);
MakeDword(0x4B70BC);
MakeDword(0x4B70B8);
MakeUnkn(0x4B713C, 1);
MakeNameEx(0x4B713C, "TMainForm.actEditClearExecute", 0x20);
MakeComm(0x4B713C, "'procedure TMainForm.actEditClearExecute;'");
MakeCode(0x4B713C);
MakeComm(0x4B713C, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B7142, "'TTabEditorView.?fD30:byte'");
MakeCode(0x4B7155);
MakeFunction(0x4B713C, 0x4B715F);
MakeUnkn(0x4B7160, 1);
MakeNameEx(0x4B7160, "TMainForm.CTStrokeDownClick", 0x20);
MakeComm(0x4B7160, "'procedure TMainForm.CTStrokeDownClick(Sender:TObject);'");
MakeCode(0x4B7160);
MakeComm(0x4B7162, "'TMainForm.?f674:TTabEditorView'");
MakeFunction(0x4B7160, 0x4B716E);
MakeUnkn(0x4B7170, 1);
MakeNameEx(0x4B7170, "TMainForm.CTStrokeUpClick", 0x20);
MakeComm(0x4B7170, "'procedure TMainForm.CTStrokeUpClick(Sender:TObject);'");
MakeCode(0x4B7170);
MakeComm(0x4B7172, "'TMainForm.?f674:TTabEditorView'");
MakeFunction(0x4B7170, 0x4B717E);
MakeUnkn(0x4B7180, 1);
MakeNameEx(0x4B7180, "TMainForm.SAddBarsClick", 0x20);
MakeComm(0x4B7180, "'procedure TMainForm.SAddBarsClick(Sender:TObject);'");
MakeCode(0x4B7180);
MakeComm(0x4B719A, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B71A3, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B71BB, "'TAddBarsForm.Create'");
MakeCode(0x4B71D1);
MakeComm(0x4B71D4, "'TAddBarsForm.NumBarsEdit:TEdit'");
MakeComm(0x4B71E7, "'TCustomForm.ShowModal'");
MakeCode(0x4B71FA);
MakeComm(0x4B71FD, "'TAddBarsForm.?f384:Longint'");
MakeComm(0x4B7206, "'TAddBarsForm.?f388:Longint'");
MakeCode(0x4B7262);
MakeCode(0x4B7264);
MakeCode(0x4B726C);
MakeCode(0x4B7279);
MakeCode(0x4B7282);
MakeCode(0x4B7287);
MakeCode(0x4B72D5);
MakeCode(0x4B72E2);
MakeCode(0x4B72EB);
MakeCode(0x4B72F0);
MakeFunction(0x4B7180, 0x4B72F7);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B7300, -1);
MakeDword(0x4B72FC);
MakeDword(0x4B72F8);
MakeUnkn(0x4B7380, 1);
MakeNameEx(0x4B7380, "TMainForm.SRemoveUnusedBarsClick", 0x20);
MakeComm(0x4B7380, "'procedure TMainForm.SRemoveUnusedBarsClick(Sender:TObject);'");
MakeCode(0x4B7380);
MakeComm(0x4B7387, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B7391, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B73CE, "'TTabDocument.?f38:dword'");
MakeCode(0x4B73F5);
MakeComm(0x4B73FB, "'TTabDocument.?f30:dword'");
MakeComm(0x4B7405, "'TTabDocument.?f60:dword'");
MakeComm(0x4B7414, "'0x1'");
MakeCode(0x4B7414);
MakeCode(0x4B7455);
MakeCode(0x4B7472);
MakeCode(0x4B7479);
MakeComm(0x4B74C4, "'TTabDocument.?f60:dword'");
MakeCode(0x4B74D3);
MakeCode(0x4B7508);
MakeComm(0x4B750F, "'TTabDocument.?f38:dword'");
MakeCode(0x4B750F);
MakeCode(0x4B751D);
MakeCode(0x4B752C);
MakeCode(0x4B7533);
MakeFunction(0x4B7380, 0x4B753B);
MakeByte(0x4B7568);
MakeUnkn(0x4B7568, 1);
MakeNameEx(0x4B7568, "gvar_004B7568", 0);
MakeCode(0x4B7614);
MakeCode(0x4B763F);
MakeCode(0x4B766E);
MakeCode(0x4B7688);
MakeCode(0x4B768E);
MakeCode(0x4B7694);
MakeFunction(0x4B7614, 0x4B769C);
MakeCode(0x4B769C);
MakeCode(0x4B76C1);
MakeCode(0x4B76F0);
MakeCode(0x4B76F6);
MakeFunction(0x4B769C, 0x4B76FC);
MakeCode(0x4B76FC);
MakeCode(0x4B7716);
MakeCode(0x4B772C);
MakeCode(0x4B772E);
MakeCode(0x4B7734);
MakeCode(0x4B7754);
MakeCode(0x4B775B);
MakeFunction(0x4B76FC, 0x4B776D);
MakeCode(0x4B7770);
MakeCode(0x4B778E);
MakeCode(0x4B77A4);
MakeCode(0x4B77A9);
MakeFunction(0x4B7770, 0x4B77AE);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B77B8, -1);
MakeDword(0x4B77B4);
MakeDword(0x4B77B0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B77DC, -1);
MakeDword(0x4B77D8);
MakeDword(0x4B77D4);
MakeCode(0x4B77F0);
MakeComm(0x4B784C, "'TTrackEffectForm.Create'");
MakeCode(0x4B7885);
MakeComm(0x4B78B0, "'TTrackEffectForm.TempoEdit:TEdit'");
MakeComm(0x4B78C3, "'TTrackEffectForm.TempoCheck:TCheckBox'");
MakeComm(0x4B78CD, "'TCustomCheckBox.SetChecked'");
MakeCode(0x4B78D3);
MakeComm(0x4B7901, "'TTrackEffectForm.InstCheck:TCheckBox'");
MakeComm(0x4B790B, "'TCustomCheckBox.SetChecked'");
MakeCode(0x4B7911);
MakeComm(0x4B791D, "'TTrackEffectForm.InstList:TComboBox'");
MakeComm(0x4B7925, "'TCustomCombo.SetItemIndex'");
MakeComm(0x4B7936, "'TTrackEffectForm.LetRingCheck:TCheckBox'");
MakeComm(0x4B793E, "'TCustomCheckBox.SetChecked'");
MakeComm(0x4B7950, "'TTrackEffectForm.BankCombo:TComboBox'");
MakeComm(0x4B7958, "'TCustomCombo.SetItemIndex'");
MakeComm(0x4B796E, "'TTrackEffectForm.BankCheck:TCheckBox'");
MakeComm(0x4B7978, "'TCustomCheckBox.SetChecked'");
MakeCode(0x4B797E);
MakeComm(0x4B7998, "'TTrackEffectForm.VolumeSlider:TSliderFrame'");
MakeComm(0x4B79AB, "'TTrackEffectForm.VolumeCheck:TCheckBox'");
MakeComm(0x4B79B5, "'TCustomCheckBox.SetChecked'");
MakeCode(0x4B79BB);
MakeComm(0x4B79D2, "'TTrackEffectForm.StrokeDownCheck:TCheckBox'");
MakeComm(0x4B79DC, "'TCustomCheckBox.SetChecked'");
MakeCode(0x4B79E2);
MakeComm(0x4B79F9, "'TTrackEffectForm.StrokeUpCheck:TCheckBox'");
MakeComm(0x4B7A03, "'TCustomCheckBox.SetChecked'");
MakeCode(0x4B7A09);
MakeComm(0x4B7A23, "'TTrackEffectForm.PitchWheelSlider:TSliderFrame'");
MakeComm(0x4B7A36, "'TTrackEffectForm.PitchWheelCheck:TCheckBox'");
MakeComm(0x4B7A40, "'TCustomCheckBox.SetChecked'");
MakeCode(0x4B7A46);
MakeComm(0x4B7A60, "'TTrackEffectForm.ModWheelSlider:TSliderFrame'");
MakeComm(0x4B7A73, "'TTrackEffectForm.ModWheelCheck:TCheckBox'");
MakeComm(0x4B7A7D, "'TCustomCheckBox.SetChecked'");
MakeCode(0x4B7A83);
MakeComm(0x4B7A9D, "'TTrackEffectForm.PanSlider:TSliderFrame'");
MakeComm(0x4B7AB0, "'TTrackEffectForm.PanCheck:TCheckBox'");
MakeComm(0x4B7ABA, "'TCustomCheckBox.SetChecked'");
MakeCode(0x4B7AC0);
MakeComm(0x4B7ADA, "'TTrackEffectForm.ReverbSlider:TSliderFrame'");
MakeComm(0x4B7AED, "'TTrackEffectForm.ReverbCheck:TCheckBox'");
MakeComm(0x4B7AF7, "'TCustomCheckBox.SetChecked'");
MakeCode(0x4B7AFD);
MakeComm(0x4B7B17, "'TTrackEffectForm.ChorusSlider:TSliderFrame'");
MakeComm(0x4B7B2A, "'TTrackEffectForm.ChorusCheck:TCheckBox'");
MakeComm(0x4B7B34, "'TCustomCheckBox.SetChecked'");
MakeCode(0x4B7B3A);
MakeCode(0x4B7B9C);
MakeComm(0x4B7BA0, "'TTrackEffectForm.TempoEdit:TEdit'");
MakeComm(0x4B7BA9, "'TTrackEffectForm.TempoCheck:TCheckBox'");
MakeCode(0x4B7BBC);
MakeComm(0x4B7BC0, "'TTrackEffectForm.InstList:TComboBox'");
MakeComm(0x4B7BC9, "'TTrackEffectForm.InstCheck:TCheckBox'");
MakeCode(0x4B7BDC);
MakeComm(0x4B7BE0, "'TTrackEffectForm.VolumeSlider:TSliderFrame'");
MakeComm(0x4B7BE6, "'TSliderFrame.Edit:TEdit'");
MakeComm(0x4B7BEF, "'TTrackEffectForm.VolumeCheck:TCheckBox'");
MakeCode(0x4B7C02);
MakeComm(0x4B7C06, "'TTrackEffectForm.StrokeDownCheck:TCheckBox'");
MakeCode(0x4B7C1B);
MakeComm(0x4B7C1F, "'TTrackEffectForm.StrokeUpCheck:TCheckBox'");
MakeCode(0x4B7C34);
MakeComm(0x4B7C38, "'TTrackEffectForm.PitchWheelSlider:TSliderFrame'");
MakeComm(0x4B7C3E, "'TSliderFrame.Edit:TEdit'");
MakeComm(0x4B7C47, "'TTrackEffectForm.PitchWheelCheck:TCheckBox'");
MakeCode(0x4B7C5A);
MakeComm(0x4B7C5E, "'TTrackEffectForm.ModWheelSlider:TSliderFrame'");
MakeComm(0x4B7C64, "'TSliderFrame.Edit:TEdit'");
MakeComm(0x4B7C6D, "'TTrackEffectForm.ModWheelCheck:TCheckBox'");
MakeCode(0x4B7C7D);
MakeComm(0x4B7C81, "'TTrackEffectForm.PanSlider:TSliderFrame'");
MakeComm(0x4B7C87, "'TSliderFrame.Edit:TEdit'");
MakeComm(0x4B7C90, "'TTrackEffectForm.PanCheck:TCheckBox'");
MakeCode(0x4B7CA0);
MakeComm(0x4B7CA4, "'TTrackEffectForm.ReverbSlider:TSliderFrame'");
MakeComm(0x4B7CAA, "'TSliderFrame.Edit:TEdit'");
MakeComm(0x4B7CB3, "'TTrackEffectForm.ReverbCheck:TCheckBox'");
MakeCode(0x4B7CC3);
MakeComm(0x4B7CC7, "'TTrackEffectForm.ChorusSlider:TSliderFrame'");
MakeComm(0x4B7CCD, "'TSliderFrame.Edit:TEdit'");
MakeComm(0x4B7CD6, "'TTrackEffectForm.ChorusCheck:TCheckBox'");
MakeCode(0x4B7CE4);
MakeCode(0x4B7CFA);
MakeComm(0x4B7CFE, "'TTrackEffectForm.TempoEdit:TEdit'");
MakeComm(0x4B7D07, "'TTrackEffectForm.TempoCheck:TCheckBox'");
MakeCode(0x4B7D17);
MakeComm(0x4B7D1B, "'TTrackEffectForm.InstList:TComboBox'");
MakeComm(0x4B7D24, "'TTrackEffectForm.InstCheck:TCheckBox'");
MakeCode(0x4B7D34);
MakeComm(0x4B7D38, "'TTrackEffectForm.VolumeSlider:TSliderFrame'");
MakeComm(0x4B7D3E, "'TSliderFrame.Edit:TEdit'");
MakeComm(0x4B7D47, "'TTrackEffectForm.VolumeCheck:TCheckBox'");
MakeCode(0x4B7D57);
MakeComm(0x4B7D5A, "'TTrackEffectForm.ControllersSheet:TTabSheet'");
MakeComm(0x4B7D63, "'TTrackEffectForm.PageControl:TPageControl'");
MakeCode(0x4B7D6E);
MakeComm(0x4B7D73, "'TCustomForm.ShowModal'");
MakeCode(0x4B7D86);
MakeComm(0x4B7DD3, "'TTrackEffectForm.?f3D0:Longint'");
MakeComm(0x4B7DE4, "'TTrackEffectForm.TempoCheck:TCheckBox'");
MakeComm(0x4B7DEC, "'TCustomCheckBox.GetChecked'");
MakeComm(0x4B7E04, "'TTrackEffectForm.InstCheck:TCheckBox'");
MakeComm(0x4B7E0C, "'TCustomCheckBox.GetChecked'");
MakeComm(0x4B7E1D, "'TTrackEffectForm.InstList:TComboBox'");
MakeComm(0x4B7E25, "'TCustomCombo.GetItemIndex'");
MakeComm(0x4B7E39, "'TTrackEffectForm.LetRingCheck:TCheckBox'");
MakeComm(0x4B7E41, "'TCustomCheckBox.GetChecked'");
MakeCode(0x4B7E51);
MakeComm(0x4B7E54, "'TTrackEffectForm.BankCheck:TCheckBox'");
MakeComm(0x4B7E5C, "'TCustomCheckBox.GetChecked'");
MakeComm(0x4B7E69, "'TTrackEffectForm.BankCombo:TComboBox'");
MakeComm(0x4B7E71, "'TCustomCombo.GetItemIndex'");
MakeCode(0x4B7E8D);
MakeCode(0x4B7EA1);
MakeCode(0x4B7EB0);
MakeCode(0x4B7EC6);
MakeCode(0x4B7ED1);
MakeComm(0x4B7ED4, "'TTrackEffectForm.VolumeSlider:TSliderFrame'");
MakeComm(0x4B7EE7, "'TTrackEffectForm.VolumeCheck:TCheckBox'");
MakeComm(0x4B7EEF, "'TCustomCheckBox.GetChecked'");
MakeComm(0x4B7F0D, "'TTrackEffectForm.StrokeDownCheck:TCheckBox'");
MakeComm(0x4B7F15, "'TCustomCheckBox.GetChecked'");
MakeComm(0x4B7F31, "'TTrackEffectForm.StrokeUpCheck:TCheckBox'");
MakeComm(0x4B7F39, "'TCustomCheckBox.GetChecked'");
MakeComm(0x4B7F4F, "'TTrackEffectForm.PitchWheelSlider:TSliderFrame'");
MakeComm(0x4B7F68, "'TTrackEffectForm.PitchWheelCheck:TCheckBox'");
MakeComm(0x4B7F70, "'TCustomCheckBox.GetChecked'");
MakeComm(0x4B7F86, "'TTrackEffectForm.ModWheelSlider:TSliderFrame'");
MakeComm(0x4B7F99, "'TTrackEffectForm.ModWheelCheck:TCheckBox'");
MakeComm(0x4B7FA1, "'TCustomCheckBox.GetChecked'");
MakeComm(0x4B7FB7, "'TTrackEffectForm.PanSlider:TSliderFrame'");
MakeComm(0x4B7FCA, "'TTrackEffectForm.PanCheck:TCheckBox'");
MakeComm(0x4B7FD2, "'TCustomCheckBox.GetChecked'");
MakeComm(0x4B7FE8, "'TTrackEffectForm.ReverbSlider:TSliderFrame'");
MakeComm(0x4B7FFB, "'TTrackEffectForm.ReverbCheck:TCheckBox'");
MakeComm(0x4B8003, "'TCustomCheckBox.GetChecked'");
MakeComm(0x4B8019, "'TTrackEffectForm.ChorusSlider:TSliderFrame'");
MakeComm(0x4B802C, "'TTrackEffectForm.ChorusCheck:TCheckBox'");
MakeComm(0x4B8034, "'TCustomCheckBox.GetChecked'");
MakeCode(0x4B8047);
MakeCode(0x4B8054);
MakeCode(0x4B805A);
MakeCode(0x4B805F);
MakeCode(0x4B8061);
MakeCode(0x4B806E);
MakeCode(0x4B8077);
MakeCode(0x4B807C);
MakeCode(0x4B807E);
MakeCode(0x4B808B);
MakeCode(0x4B8094);
MakeCode(0x4B8099);
MakeFunction(0x4B77F0, 0x4B80A2);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B80AC, -1);
MakeDword(0x4B80A8);
MakeDword(0x4B80A4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B80D4, -1);
MakeDword(0x4B80D0);
MakeDword(0x4B80CC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B80F8, -1);
MakeDword(0x4B80F4);
MakeDword(0x4B80F0);
MakeUnkn(0x4B810C, 1);
MakeNameEx(0x4B810C, "TMainForm.CTrackEffectClick", 0x20);
MakeComm(0x4B810C, "'procedure TMainForm.CTrackEffectClick(Sender:TObject);'");
MakeCode(0x4B810C);
MakeFunction(0x4B810C, 0x4B8116);
MakeUnkn(0x4B8118, 1);
MakeNameEx(0x4B8118, "TMainForm.CTTempoChangeClick", 0x20);
MakeComm(0x4B8118, "'procedure TMainForm.CTTempoChangeClick(Sender:TObject);'");
MakeCode(0x4B8118);
MakeFunction(0x4B8118, 0x4B8122);
MakeUnkn(0x4B8124, 1);
MakeNameEx(0x4B8124, "TMainForm.CTInstChangeClick", 0x20);
MakeComm(0x4B8124, "'procedure TMainForm.CTInstChangeClick(Sender:TObject);'");
MakeCode(0x4B8124);
MakeFunction(0x4B8124, 0x4B812E);
MakeUnkn(0x4B8130, 1);
MakeNameEx(0x4B8130, "TMainForm.CTVolumeChangeClick", 0x20);
MakeComm(0x4B8130, "'procedure TMainForm.CTVolumeChangeClick(Sender:TObject);'");
MakeCode(0x4B8130);
MakeFunction(0x4B8130, 0x4B813A);
MakeUnkn(0x4B813C, 1);
MakeNameEx(0x4B813C, "TMainForm.CTControllerChangeClick", 0x20);
MakeComm(0x4B813C, "'procedure TMainForm.CTControllerChangeClick(Sender:TObject);'");
MakeCode(0x4B813C);
MakeFunction(0x4B813C, 0x4B8146);
MakeUnkn(0x4B8148, 1);
MakeNameEx(0x4B8148, "TMainForm.ETClearEffectClick", 0x20);
MakeComm(0x4B8148, "'procedure TMainForm.ETClearEffectClick(Sender:TObject);'");
MakeCode(0x4B8148);
MakeComm(0x4B8152, "'0x4'");
MakeComm(0x4B8159, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B8163, "'TTabEditorView.KeyDown'");
MakeFunction(0x4B8148, 0x4B816B);
MakeByte(0x4B816C);
MakeUnkn(0x4B816C, 1);
MakeNameEx(0x4B816C, "gvar_004B816C", 0);
MakeCode(0x4B8170);
MakeComm(0x4B8191, "'TRegistry.Create'");
MakeCode(0x4B8296);
MakeCode(0x4B829A);
MakeCode(0x4B829C);
MakeCode(0x4B829F);
MakeCode(0x4B82AC);
MakeCode(0x4B82B5);
MakeCode(0x4B82BA);
MakeCode(0x4B82BC);
MakeCode(0x4B82C9);
MakeCode(0x4B82D7);
MakeCode(0x4B82DC);
MakeFunction(0x4B8170, 0x4B82E6);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B82F0, -1);
MakeDword(0x4B82EC);
MakeDword(0x4B82E8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B8300, -1);
MakeDword(0x4B82FC);
MakeDword(0x4B82F8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B8318, -1);
MakeDword(0x4B8314);
MakeDword(0x4B8310);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B8330, -1);
MakeDword(0x4B832C);
MakeDword(0x4B8328);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B8358, -1);
MakeDword(0x4B8354);
MakeDword(0x4B8350);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B8384, -1);
MakeDword(0x4B8380);
MakeDword(0x4B837C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B8390, -1);
MakeDword(0x4B838C);
MakeDword(0x4B8388);
MakeCode(0x4B8398);
MakeComm(0x4B83FE, "'ERegistryException.Create'");
MakeCode(0x4B8408);
MakeCode(0x4B8415);
MakeCode(0x4B8426);
MakeCode(0x4B842B);
MakeFunction(0x4B8398, 0x4B8432);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B843C, -1);
MakeDword(0x4B8438);
MakeDword(0x4B8434);
MakeCode(0x4B8440);
MakeComm(0x4B845E, "'TRegistry.Create'");
MakeCode(0x4B8592);
MakeCode(0x4B859F);
MakeCode(0x4B85A8);
MakeCode(0x4B85AD);
MakeCode(0x4B85AF);
MakeCode(0x4B85BC);
MakeCode(0x4B85CA);
MakeCode(0x4B85CF);
MakeFunction(0x4B8440, 0x4B85D5);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B85E0, -1);
MakeDword(0x4B85DC);
MakeDword(0x4B85D8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B85F0, -1);
MakeDword(0x4B85EC);
MakeDword(0x4B85E8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B8608, -1);
MakeDword(0x4B8604);
MakeDword(0x4B8600);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B8618, -1);
MakeDword(0x4B8614);
MakeDword(0x4B8610);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B8630, -1);
MakeDword(0x4B862C);
MakeDword(0x4B8628);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B8658, -1);
MakeDword(0x4B8654);
MakeDword(0x4B8650);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B8670, -1);
MakeDword(0x4B866C);
MakeDword(0x4B8668);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B8688, -1);
MakeDword(0x4B8684);
MakeDword(0x4B8680);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B86AC, -1);
MakeDword(0x4B86A8);
MakeDword(0x4B86A4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B86B8, -1);
MakeDword(0x4B86B4);
MakeDword(0x4B86B0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B86E4, -1);
MakeDword(0x4B86E0);
MakeDword(0x4B86DC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B86F0, -1);
MakeDword(0x4B86EC);
MakeDword(0x4B86E8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B8700, -1);
MakeDword(0x4B86FC);
MakeDword(0x4B86F8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B874C, -1);
MakeDword(0x4B8748);
MakeDword(0x4B8744);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B8760, -1);
MakeDword(0x4B875C);
MakeDword(0x4B8758);
MakeCode(0x4B8768);
MakeComm(0x4B8788, "'TRegistry.Create'");
MakeCode(0x4B880C);
MakeCode(0x4B8819);
MakeCode(0x4B8822);
MakeCode(0x4B8827);
MakeCode(0x4B8829);
MakeCode(0x4B8836);
MakeCode(0x4B883F);
MakeCode(0x4B8844);
MakeFunction(0x4B8768, 0x4B884A);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B8854, -1);
MakeDword(0x4B8850);
MakeDword(0x4B884C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B886C, -1);
MakeDword(0x4B8868);
MakeDword(0x4B8864);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B887C, -1);
MakeDword(0x4B8878);
MakeDword(0x4B8874);
MakeUnkn(0x4B888C, 1);
MakeNameEx(0x4B888C, "TMainForm.TConfigClick", 0x20);
MakeComm(0x4B888C, "'procedure TMainForm.TConfigClick(Sender:TObject);'");
MakeCode(0x4B888C);
MakeCode(0x4B8894);
MakeComm(0x4B88D9, "'TConfigForm.Create'");
MakeComm(0x4B88E1, "'TMainForm.?f6C0:string'");
MakeComm(0x4B88EE, "'TConfigForm.DefaultPathCheck:TCheckBox'");
MakeComm(0x4B88F6, "'TCustomCheckBox.SetChecked'");
MakeComm(0x4B88FF, "'TConfigForm.DefaultPathCheck:TCheckBox'");
MakeComm(0x4B8907, "'TCheckBox.?f114:TMessageForm'");
MakeComm(0x4B890D, "'TCheckBox.FOnClick'");
MakeComm(0x4B8913, "'TMainForm.?f6C0:string'");
MakeComm(0x4B891F, "'TMainForm.?f6C0:string'");
MakeComm(0x4B8930, "'TConfigForm.DefaultPathEdit:TEdit'");
MakeCode(0x4B893D);
MakeComm(0x4B8950, "'TConfigForm.DefaultPathEdit:TEdit'");
MakeCode(0x4B895B);
MakeComm(0x4B895E, "'TConfigForm.AssocCheck:TCheckBox'");
MakeComm(0x4B896A, "'TCustomCheckBox.SetChecked'");
MakeComm(0x4B8970, "'TMainForm.?f6C4:Boolean'");
MakeComm(0x4B897A, "'TConfigForm.SameInstCheck:TCheckBox'");
MakeComm(0x4B8982, "'TCustomCheckBox.SetChecked'");
MakeComm(0x4B8988, "'TMainForm.?f6C9:Boolean'");
MakeComm(0x4B8992, "'TConfigForm.ScrollABarCheck:TCheckBox'");
MakeComm(0x4B899A, "'TCustomCheckBox.SetChecked'");
MakeComm(0x4B89A0, "'TMainForm.?f6CA:Boolean'");
MakeComm(0x4B89AA, "'TConfigForm.MouseWheelVertCheck:TCheckBox'");
MakeComm(0x4B89B2, "'TCustomCheckBox.SetChecked'");
MakeComm(0x4B89B8, "'TMainForm.?f6C6:Boolean'");
MakeComm(0x4B89C2, "'TConfigForm.DrawTransCheck:TCheckBox'");
MakeComm(0x4B89CA, "'TCustomCheckBox.SetChecked'");
MakeComm(0x4B89D0, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B89D6, "'TTabEditorView.?fD2D:byte'");
MakeComm(0x4B89E0, "'TConfigForm.TuningAlwaysVisibleCheck:TCheckBox'");
MakeComm(0x4B89E8, "'TCustomCheckBox.SetChecked'");
MakeComm(0x4B89EE, "'TMainForm.?f6C5:Boolean'");
MakeComm(0x4B89F8, "'TConfigForm.HideCursorCheck:TCheckBox'");
MakeComm(0x4B8A00, "'TCustomCheckBox.SetChecked'");
MakeComm(0x4B8A06, "'TMainForm.?f6C8:Boolean'");
MakeComm(0x4B8A10, "'TConfigForm.HighlightNotesCheck:TCheckBox'");
MakeComm(0x4B8A18, "'TCustomCheckBox.SetChecked'");
MakeComm(0x4B8A1E, "'TMainForm.?f6C7:Boolean'");
MakeComm(0x4B8A28, "'TConfigForm.MovingBarCheck:TCheckBox'");
MakeComm(0x4B8A30, "'TCustomCheckBox.SetChecked'");
MakeComm(0x4B8A36, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B8A3F, "'TTabEditorView.?f4F4:dword'");
MakeComm(0x4B8A5D, "'TConfigForm.?f508:string'");
MakeComm(0x4B8A62, "'TMainForm.?f6D8:string'");
MakeComm(0x4B8A6D, "'TMainForm.?f6D8:string'");
MakeComm(0x4B8A76, "'TConfigForm.SchemeCombo:TComboBox'");
MakeComm(0x4B8A7C, "'TComboBox.FItems:TStrings'");
MakeComm(0x4B8A84, "'TStrings.IndexOf'");
MakeComm(0x4B8A8D, "'TCustomCombo.SetItemIndex'");
MakeComm(0x4B8A93, "'TMainForm.?f6DC:TTabFontSettings'");
MakeComm(0x4B8AA4, "'TConfigForm.DeviceList:TComboBox'");
MakeComm(0x4B8AB2, "'TConfigForm.DeviceList:TComboBox'");
MakeComm(0x4B8ABE, "'TComboBox.FItems:TStrings'");
MakeComm(0x4B8AC6, "'TStrings.GetCount'");
MakeCode(0x4B8AD3);
MakeComm(0x4B8AD6, "'TComboBox.FItems:TStrings'");
MakeComm(0x4B8AE0, "'TStrings.sub_00417BF0'");
MakeComm(0x4B8AE4, "'TMainForm.?f6AC:dword'");
MakeComm(0x4B8AF3, "'TCustomCombo.SetItemIndex'");
MakeCode(0x4B8AFB);
MakeComm(0x4B8AFF, "'TMainForm.?f6CC:Boolean'");
MakeCode(0x4B8AFF);
MakeComm(0x4B8B09, "'TConfigForm.BankCheck:TCheckBox'");
MakeComm(0x4B8B11, "'TCustomCheckBox.SetChecked'");
MakeComm(0x4B8B17, "'TMainForm.?f6D0:Integer'");
MakeComm(0x4B8B20, "'TConfigForm.MetroVolumeTrack:TTrackBarEx'");
MakeComm(0x4B8B2B, "'TMainForm.?f6CB:Boolean'");
MakeComm(0x4B8B35, "'TConfigForm.MetroAccentCheck:TCheckBox'");
MakeComm(0x4B8B3D, "'TCustomCheckBox.SetChecked'");
MakeComm(0x4B8B43, "'TMainForm.?f6D4:Integer'");
MakeComm(0x4B8B4C, "'TConfigForm.MetroDrumCombo:TComboBox'");
MakeComm(0x4B8B54, "'TCustomCombo.SetItemIndex'");
MakeComm(0x4B8B5F, "'TCustomForm.ShowModal'");
MakeCode(0x4B8B72);
MakeComm(0x4B8B75, "'TConfigForm.DefaultPathCheck:TCheckBox'");
MakeComm(0x4B8B7D, "'TCustomCheckBox.GetChecked'");
MakeComm(0x4B8B87, "'TMainForm.?f6C0:string'");
MakeCode(0x4B8B94);
MakeComm(0x4B8B9A, "'TConfigForm.DefaultPathEdit:TEdit'");
MakeComm(0x4B8BC9, "'TMainForm.?f6C0:string'");
MakeCode(0x4B8BD4);
MakeComm(0x4B8BD7, "'TConfigForm.SameInstCheck:TCheckBox'");
MakeComm(0x4B8BDF, "'TCustomCheckBox.GetChecked'");
MakeComm(0x4B8BE5, "'TMainForm.?f6C4:Boolean'");
MakeComm(0x4B8BEE, "'TConfigForm.ScrollABarCheck:TCheckBox'");
MakeComm(0x4B8BF6, "'TCustomCheckBox.GetChecked'");
MakeComm(0x4B8BFC, "'TMainForm.?f6C9:Boolean'");
MakeComm(0x4B8C05, "'TConfigForm.MouseWheelVertCheck:TCheckBox'");
MakeComm(0x4B8C0D, "'TCustomCheckBox.GetChecked'");
MakeComm(0x4B8C13, "'TMainForm.?f6CA:Boolean'");
MakeComm(0x4B8C1C, "'TConfigForm.DrawTransCheck:TCheckBox'");
MakeComm(0x4B8C24, "'TCustomCheckBox.GetChecked'");
MakeComm(0x4B8C2A, "'TMainForm.?f6C6:Boolean'");
MakeComm(0x4B8C33, "'TConfigForm.TuningAlwaysVisibleCheck:TCheckBox'");
MakeComm(0x4B8C3B, "'TCustomCheckBox.GetChecked'");
MakeComm(0x4B8C43, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B8C51, "'TConfigForm.HideCursorCheck:TCheckBox'");
MakeComm(0x4B8C59, "'TCustomCheckBox.GetChecked'");
MakeComm(0x4B8C5F, "'TMainForm.?f6C5:Boolean'");
MakeComm(0x4B8C68, "'TConfigForm.HighlightNotesCheck:TCheckBox'");
MakeComm(0x4B8C70, "'TCustomCheckBox.GetChecked'");
MakeComm(0x4B8C76, "'TMainForm.?f6C8:Boolean'");
MakeComm(0x4B8C7F, "'TConfigForm.MovingBarCheck:TCheckBox'");
MakeComm(0x4B8C87, "'TCustomCheckBox.GetChecked'");
MakeComm(0x4B8C8D, "'TMainForm.?f6C7:Boolean'");
MakeComm(0x4B8C93, "'TMainForm.?f6D8:string'");
MakeComm(0x4B8C9C, "'TConfigForm.?f508:string'");
MakeComm(0x4B8CAA, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B8CB6, "'TTabEditorView.?f4F4:dword'");
MakeComm(0x4B8CCB, "'TConfigForm.?f50C:byte'");
MakeComm(0x4B8CD4, "'TMainForm.?f6DC:TTabFontSettings'");
MakeComm(0x4B8CDD, "'TConfigForm.?f490:TTabFontSettings'");
MakeComm(0x4B8CEE, "'TMainForm.?f674:TTabEditorView'");
MakeCode(0x4B8CF9);
MakeComm(0x4B8CFC, "'TConfigForm.DeviceList:TComboBox'");
MakeComm(0x4B8D06, "'TCustomCombo.GetItemIndex'");
MakeComm(0x4B8D0F, "'TMainForm.?f6AC:dword'");
MakeComm(0x4B8D19, "'TCustomCombo.GetItemIndex'");
MakeComm(0x4B8D21, "'TComboBox.FItems:TStrings'");
MakeComm(0x4B8D29, "'TStrings.sub_00417BF0'");
MakeComm(0x4B8D2D, "'TMainForm.?f6AC:dword'");
MakeComm(0x4B8D33, "'TMainForm.?f6AC:dword'");
MakeComm(0x4B8D3B, "'TMainForm.?f674:TTabEditorView'");
MakeCode(0x4B8D46);
MakeComm(0x4B8D49, "'TConfigForm.BankCheck:TCheckBox'");
MakeComm(0x4B8D51, "'TCustomCheckBox.GetChecked'");
MakeComm(0x4B8D57, "'TMainForm.?f6CC:Boolean'");
MakeComm(0x4B8D5F, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B8D6D, "'TConfigForm.BankCheck:TCheckBox'");
MakeComm(0x4B8D75, "'TCustomCheckBox.GetChecked'");
MakeComm(0x4B8D7B, "'TMainForm.?f6CC:Boolean'");
MakeCode(0x4B8D81);
MakeComm(0x4B8D84, "'TConfigForm.MetroVolumeTrack:TTrackBarEx'");
MakeComm(0x4B8D8A, "'TTrackBarEx.Position:Integer'");
MakeComm(0x4B8D90, "'TMainForm.?f6D0:Integer'");
MakeComm(0x4B8D99, "'TConfigForm.MetroAccentCheck:TCheckBox'");
MakeComm(0x4B8DA1, "'TCustomCheckBox.GetChecked'");
MakeComm(0x4B8DA7, "'TMainForm.?f6CB:Boolean'");
MakeComm(0x4B8DB0, "'TConfigForm.MetroDrumCombo:TComboBox'");
MakeComm(0x4B8DB8, "'TCustomCombo.GetItemIndex'");
MakeComm(0x4B8DC4, "'TConfigForm.MetroDrumCombo:TComboBox'");
MakeComm(0x4B8DCC, "'TCustomCombo.GetItemIndex'");
MakeComm(0x4B8DD2, "'TMainForm.?f6D4:Integer'");
MakeCode(0x4B8DD8);
MakeComm(0x4B8DDB, "'TConfigForm.AssocCheck:TCheckBox'");
MakeComm(0x4B8DE3, "'TCustomCheckBox.GetChecked'");
MakeComm(0x4B8DF1, "'TConfigForm.AssocCheck:TCheckBox'");
MakeComm(0x4B8DF9, "'TCustomCheckBox.GetChecked'");
MakeCode(0x4B8E0C);
MakeCode(0x4B8E11);
MakeCode(0x4B8E21);
MakeCode(0x4B8E2E);
MakeCode(0x4B8E37);
MakeCode(0x4B8E3C);
MakeCode(0x4B8E3E);
MakeCode(0x4B8E4B);
MakeCode(0x4B8E61);
MakeCode(0x4B8E66);
MakeFunction(0x4B888C, 0x4B8E6F);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B8E78, -1);
MakeDword(0x4B8E74);
MakeDword(0x4B8E70);
MakeUnkn(0x4B8E8C, 1);
MakeNameEx(0x4B8E8C, "TMainForm.TCheckForUpdatesClick", 0x20);
MakeComm(0x4B8E8C, "'procedure TMainForm.TCheckForUpdatesClick(Sender:TObject);'");
MakeCode(0x4B8E8C);
MakeFunction(0x4B8E8C, 0x4B8E92);
MakeUnkn(0x4B8E94, 1);
MakeNameEx(0x4B8E94, "TMainForm.PMenuClick", 0x20);
MakeComm(0x4B8E94, "'procedure TMainForm.PMenuClick(Sender:TObject);'");
MakeCode(0x4B8E94);
MakeComm(0x4B8E97, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B8E9D, "'TTabEditorView.?fD40:TPlayer'");
MakeComm(0x4B8EA7, "'TMainForm.PCloseDevice:TTBItem'");
MakeComm(0x4B8EB2, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B8EB8, "'TTabEditorView.?fD2C:byte'");
MakeComm(0x4B8EBF, "'TMainForm.PIgnoreRepeats:TTBItem'");
MakeComm(0x4B8ECA, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B8ED0, "'TTabEditorView.?fD2F:byte'");
MakeComm(0x4B8EDA, "'TMainForm.PNOff:TTBItem'");
MakeComm(0x4B8EE5, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B8EEB, "'TTabEditorView.?fD2F:byte'");
MakeComm(0x4B8EF5, "'TMainForm.PNCurrentTrack:TTBItem'");
MakeComm(0x4B8F00, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B8F06, "'TTabEditorView.?fD2F:byte'");
MakeComm(0x4B8F10, "'TMainForm.PNAllTracks:TTBItem'");
MakeFunction(0x4B8E94, 0x4B8F1D);
MakeUnkn(0x4B8F20, 1);
MakeNameEx(0x4B8F20, "TMainForm.actRewindExecute", 0x20);
MakeComm(0x4B8F20, "'procedure TMainForm.actRewindExecute;'");
MakeCode(0x4B8F20);
MakeComm(0x4B8F20, "'TMainForm.actRewind:TAction'");
MakeComm(0x4B8F26, "'TAction.FChecked:Boolean'");
MakeFunction(0x4B8F20, 0x4B8F37);
MakeUnkn(0x4B8F38, 1);
MakeNameEx(0x4B8F38, "TMainForm.PIgnoreRepeatsClick", 0x20);
MakeComm(0x4B8F38, "'procedure TMainForm.PIgnoreRepeatsClick(Sender:TObject);'");
MakeCode(0x4B8F38);
MakeComm(0x4B8F38, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B8F3E, "'TTabEditorView.?fD2C:byte'");
MakeComm(0x4B8F48, "'TTabEditorView.?fD2C:byte'");
MakeFunction(0x4B8F38, 0x4B8F4F);
MakeUnkn(0x4B8F50, 1);
MakeNameEx(0x4B8F50, "TMainForm.PNoteTrigClick", 0x20);
MakeComm(0x4B8F50, "'procedure TMainForm.PNoteTrigClick(Sender:TObject);'");
MakeCode(0x4B8F50);
MakeComm(0x4B8F50, "'TMainForm.PNOff:TTBItem'");
MakeComm(0x4B8F58, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B8F5E, "'TTabEditorView.?fD2F:byte'");
MakeComm(0x4B8F66, "'TMainForm.PNCurrentTrack:TTBItem'");
MakeCode(0x4B8F66);
MakeComm(0x4B8F6E, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B8F74, "'TTabEditorView.?fD2F:byte'");
MakeComm(0x4B8F7D, "'TMainForm.PNAllTracks:TTBItem'");
MakeCode(0x4B8F7D);
MakeComm(0x4B8F85, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B8F8B, "'TTabEditorView.?fD2F:byte'");
MakeFunction(0x4B8F50, 0x4B8F93);
MakeCode(0x4B8F94);
MakeCode(0x4B8FAB);
MakeCode(0x4B8FC6);
MakeCode(0x4B8FD1);
MakeFunction(0x4B8F94, 0x4B8FE0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B8FE8, -1);
MakeDword(0x4B8FE4);
MakeDword(0x4B8FE0);
MakeUnkn(0x4B8FEC, 1);
MakeNameEx(0x4B8FEC, "TMainForm.FMenuClick", 0x20);
MakeComm(0x4B8FEC, "'procedure TMainForm.FMenuClick(Sender:TObject);'");
MakeCode(0x4B8FEC);
MakeComm(0x4B9012, "'TMainForm.?f6A8:TStringList'");
MakeCode(0x4B9012);
MakeComm(0x4B901A, "'TStringList.GetCount'");
MakeComm(0x4B9043, "'TMainForm.?f6A8:TStringList'");
MakeComm(0x4B904B, "'TStringList.Get'");
MakeCode(0x4B90BA);
MakeComm(0x4B90C4, "'TMainForm.?f6A8:TStringList'");
MakeComm(0x4B90CC, "'TStringList.GetCount'");
MakeComm(0x4B90D4, "'TMainForm.FMRUSep:TTBSeparatorItem'");
MakeCode(0x4B90DF);
MakeCode(0x4B90EC);
MakeCode(0x4B90FA);
MakeCode(0x4B90FF);
MakeFunction(0x4B8FEC, 0x4B9108);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B9110, -1);
MakeDword(0x4B910C);
MakeDword(0x4B9108);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B911C, -1);
MakeDword(0x4B9118);
MakeDword(0x4B9114);
MakeCode(0x4B9120);
MakeComm(0x4B9151, "'TConfigIniFile.Create'");
MakeComm(0x4B9167, "'TMainForm.?f6A8:TStringList'");
MakeComm(0x4B916F, "'TStringList.Clear'");
MakeCode(0x4B9174);
MakeComm(0x4B919A, "'TMainForm.?f6A8:TStringList'");
MakeComm(0x4B91A5, "'TStringList.Add'");
MakeCode(0x4B91A8);
MakeCode(0x4B91AE);
MakeCode(0x4B91BB);
MakeCode(0x4B91C4);
MakeCode(0x4B91C9);
MakeCode(0x4B91CB);
MakeCode(0x4B91D5);
MakeCode(0x4B91DF);
MakeCode(0x4B91EC);
MakeCode(0x4B91FD);
MakeCode(0x4B9202);
MakeFunction(0x4B9120, 0x4B920B);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B9214, -1);
MakeDword(0x4B9210);
MakeDword(0x4B920C);
MakeCode(0x4B9218);
MakeComm(0x4B924E, "'TConfigIniFile.Create'");
MakeComm(0x4B9272, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B9278, "'TTabDocument.?fB4:string'");
MakeComm(0x4B9286, "'TMainForm.?f6A8:TStringList'");
MakeComm(0x4B928E, "'TStringList.GetCount'");
MakeCode(0x4B929C);
MakeComm(0x4B92A2, "'TMainForm.?f6A8:TStringList'");
MakeComm(0x4B92AC, "'TStringList.Get'");
MakeCode(0x4B92C8);
MakeComm(0x4B92DA, "'TMainForm.?f6A8:TStringList'");
MakeComm(0x4B92E4, "'TStringList.Delete'");
MakeCode(0x4B92E9);
MakeCode(0x4B92EF);
MakeComm(0x4B9318, "'TMainForm.?f6A8:TStringList'");
MakeComm(0x4B9322, "'TStringList.Insert'");
MakeCode(0x4B9327);
MakeComm(0x4B932A, "'TMainForm.?f6A8:TStringList'");
MakeComm(0x4B9334, "'TStringList.GetCount'");
MakeComm(0x4B933E, "'TStringList.Delete'");
MakeCode(0x4B9341);
MakeComm(0x4B9344, "'TMainForm.?f6A8:TStringList'");
MakeComm(0x4B934C, "'TStringList.GetCount'");
MakeCode(0x4B9356);
MakeComm(0x4B9359, "'TMainForm.?f6A8:TStringList'");
MakeComm(0x4B9361, "'TStringList.GetCount'");
MakeComm(0x4B936E, "'TMainForm.?f6A8:TStringList'");
MakeComm(0x4B9378, "'TStringList.Get'");
MakeCode(0x4B937D);
MakeCode(0x4B9385);
MakeCode(0x4B93A9);
MakeCode(0x4B93B6);
MakeCode(0x4B93BF);
MakeCode(0x4B93C4);
MakeCode(0x4B93C6);
MakeCode(0x4B93D0);
MakeCode(0x4B93E9);
MakeCode(0x4B93F6);
MakeCode(0x4B9411);
MakeCode(0x4B9416);
MakeFunction(0x4B9218, 0x4B941F);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B9428, -1);
MakeDword(0x4B9424);
MakeDword(0x4B9420);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B9434, -1);
MakeDword(0x4B9430);
MakeDword(0x4B942C);
MakeUnkn(0x4B9438, 1);
MakeNameEx(0x4B9438, "TMainForm.FMRUClick", 0x20);
MakeComm(0x4B9438, "'procedure TMainForm.FMRUClick(?:?);'");
MakeCode(0x4B9438);
MakeComm(0x4B9451, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B9474, "'TTBCustomItem.Tag:Integer'");
MakeComm(0x4B947A, "'TMainForm.?f6A8:TStringList'");
MakeComm(0x4B9482, "'TStringList.Get'");
MakeCode(0x4B949E);
MakeComm(0x4B94A1, "'TMainForm.?f668:TTabDocument'");
MakeCode(0x4B94B3);
MakeCode(0x4B94C0);
MakeCode(0x4B94C9);
MakeCode(0x4B94CE);
MakeFunction(0x4B9438, 0x4B94D5);
MakeCode(0x4B94D8);
MakeFunction(0x4B94D8, 0x4B94D9);
MakeCode(0x4B94DC);
MakeFunction(0x4B94DC, 0x4B94ED);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B94F0, 0x4B9531);
MakeCode(0x4B9534);
MakeCode(0x4B95B3);
MakeComm(0x4B95BF, "'TFileStream.Create'");
MakeComm(0x4B95DA, "'TStream.GetSize'");
MakeComm(0x4B95F7, "'THandleStream.Read'");
MakeComm(0x4B960E, "'THandleStream.Read'");
MakeCode(0x4B9616);
MakeCode(0x4B9625);
MakeCode(0x4B9632);
MakeCode(0x4B963B);
MakeCode(0x4B9640);
MakeCode(0x4B96C8);
MakeCode(0x4B96CF);
MakeCode(0x4B96D3);
MakeCode(0x4B96E0);
MakeCode(0x4B96F9);
MakeCode(0x4B96FE);
MakeFunction(0x4B9534, 0x4B9709);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B9714, -1);
MakeDword(0x4B9710);
MakeDword(0x4B970C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B9720, 0x4B9768);
MakeUnkn(0x4B9768, 1);
MakeNameEx(0x4B9768, "TMainForm.DRefreshClick", 0x20);
MakeComm(0x4B9768, "'procedure TMainForm.DRefreshClick(Sender:TObject);'");
MakeCode(0x4B9768);
MakeFunction(0x4B9768, 0x4B9769);
MakeUnkn(0x4B976C, 1);
MakeNameEx(0x4B976C, "TMainForm.DBoxesClick", 0x20);
MakeComm(0x4B976C, "'procedure TMainForm.DBoxesClick(Sender:TObject);'");
MakeCode(0x4B976C);
MakeComm(0x4B976F, "'TMainForm.DBoxes:TTBItem'");
MakeComm(0x4B9775, "'TTBItem.?f3C:Boolean'");
MakeComm(0x4B9781, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B9789, "'TWinControl.Invalidate'");
MakeFunction(0x4B976C, 0x4B9791);
MakeUnkn(0x4B9794, 1);
MakeNameEx(0x4B9794, "TMainForm.HHelpTopicsClick", 0x20);
MakeComm(0x4B9794, "'procedure TMainForm.HHelpTopicsClick(Sender:TObject);'");
MakeCode(0x4B9794);
MakeFunction(0x4B9794, 0x4B97A8);
MakeUnkn(0x4B97A8, 1);
MakeNameEx(0x4B97A8, "TMainForm.HKeyboardClick", 0x20);
MakeComm(0x4B97A8, "'procedure TMainForm.HKeyboardClick(Sender:TObject);'");
MakeCode(0x4B97A8);
MakeFunction(0x4B97A8, 0x4B97BA);
MakeUnkn(0x4B97BC, 1);
MakeNameEx(0x4B97BC, "TMainForm.HDrumKeysClick", 0x20);
MakeComm(0x4B97BC, "'procedure TMainForm.HDrumKeysClick(Sender:TObject);'");
MakeCode(0x4B97BC);
MakeFunction(0x4B97BC, 0x4B97CE);
MakeCode(0x4B97D0);
MakeCode(0x4B9837);
MakeCode(0x4B9844);
MakeCode(0x4B9852);
MakeCode(0x4B9857);
MakeFunction(0x4B97D0, 0x4B985F);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B9868, -1);
MakeDword(0x4B9864);
MakeDword(0x4B9860);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B987C, -1);
MakeDword(0x4B9878);
MakeDword(0x4B9874);
MakeCode(0x4B9894);
MakeCode(0x4B98AD);
MakeCode(0x4B98BD);
MakeFunction(0x4B9894, 0x4B98C9);
MakeUnkn(0x4B99B0, 1);
MakeNameEx(0x4B99B0, "TMainForm.actPlayMetronomeExecute", 0x20);
MakeComm(0x4B99B0, "'procedure TMainForm.actPlayMetronomeExecute;'");
MakeCode(0x4B99B0);
MakeComm(0x4B99B0, "'TMainForm.actPlayMetronome:TAction'");
MakeComm(0x4B99B6, "'TAction.FChecked:Boolean'");
MakeFunction(0x4B99B0, 0x4B99C7);
MakeUnkn(0x4B99C8, 1);
MakeNameEx(0x4B99C8, "TMainForm.CMenuClick", 0x20);
MakeComm(0x4B99C8, "'procedure TMainForm.CMenuClick(Sender:TObject);'");
MakeCode(0x4B99C8);
MakeComm(0x4B99CF, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B99D5, "'TTabEditorView.?f258:TTabDocument'");
MakeComm(0x4B99DB, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4B99E5, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4B99F7, "'TMainForm.CBarLine:TTBItem'");
MakeCode(0x4B9A15);
MakeCode(0x4B9A19);
MakeComm(0x4B9A1B, "'TMainForm.CBarLine:TTBItem'");
MakeCode(0x4B9A1B);
MakeComm(0x4B9A40, "'TMainForm.CRepeat:TTBItem'");
MakeComm(0x4B9A5B, "'TMainForm.CRepeatStart:TTBItem'");
MakeCode(0x4B9A7F);
MakeComm(0x4B9A81, "'TMainForm.CStaffBreak:TTBItem'");
MakeCode(0x4B9A81);
MakeComm(0x4B9A99, "'TMainForm.CStaffBreak:TTBItem'");
MakeComm(0x4B9AA4, "'TTabEditorView.?fD30:byte'");
MakeComm(0x4B9AAD, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4B9ABA, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4B9ACA, "'TTabEditorView.?f49C:dword'");
MakeCode(0x4B9ADE);
MakeCode(0x4B9AE2);
MakeComm(0x4B9AE4, "'TMainForm.CAltTimeRegion:TTBItem'");
MakeCode(0x4B9AE4);
MakeFunction(0x4B99C8, 0x4B9AF5);
MakeCode(0x4B9AF8);
MakeCode(0x4B9B22);
MakeCode(0x4B9B37);
MakeFunction(0x4B9AF8, 0x4B9B3C);
MakeUnkn(0x4B9B3C, 1);
MakeNameEx(0x4B9B3C, "TMainForm.TShowTimeClick", 0x20);
MakeComm(0x4B9B3C, "'procedure TMainForm.TShowTimeClick(Sender:TObject);'");
MakeCode(0x4B9B3C);
MakeComm(0x4B9B67, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B9B6D, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4B9B76, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B9B80, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4B9B92, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B9B98, "'TTabDocument.?f64:Longint'");
MakeComm(0x4B9BD2, "'TMainForm.?f668:TTabDocument'");
MakeCode(0x4B9BDB);
MakeComm(0x4B9BE9, "'TTabDocument.?f60:dword'");
MakeCode(0x4B9BFA);
MakeCode(0x4B9C27);
MakeCode(0x4B9C30);
MakeComm(0x4B9C38, "'TTabDocument.?f30:dword'");
MakeComm(0x4B9C4C, "'TTabDocument.?f30:dword'");
MakeCode(0x4B9C56);
MakeCode(0x4B9C72);
MakeCode(0x4B9CA4);
MakeCode(0x4B9CBA);
MakeComm(0x4B9CC8, "'TTabDocument.?f30:dword'");
MakeComm(0x4B9CE0, "'TTabDocument.?f30:dword'");
MakeComm(0x4B9CFC, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B9D02, "'TTabDocument.?f30:dword'");
MakeCode(0x4B9D0E);
MakeCode(0x4B9D11);
MakeComm(0x4B9D1A, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4B9D33, "'TTabDocument.?f30:dword'");
MakeComm(0x4B9D3F, "'TTabDocument.?f60:dword'");
MakeComm(0x4B9D57, "'0x1'");
MakeCode(0x4B9D57);
MakeCode(0x4B9D80);
MakeComm(0x4B9D83, "'TTabDocument.?f38:dword'");
MakeCode(0x4B9D98);
MakeCode(0x4B9DB4);
MakeComm(0x4B9DBF, "'TTabDocument.?f60:dword'");
MakeCode(0x4B9DD4);
MakeCode(0x4B9E27);
MakeCode(0x4B9E29);
MakeCode(0x4B9E37);
MakeCode(0x4B9F10);
MakeCode(0x4B9F1D);
MakeCode(0x4B9F2E);
MakeCode(0x4B9F33);
MakeFunction(0x4B9B3C, 0x4B9F3C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B9F44, -1);
MakeDword(0x4B9F40);
MakeDword(0x4B9F3C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B9F68, -1);
MakeDword(0x4B9F64);
MakeDword(0x4B9F60);
MakeByte(0x4B9F7C);
MakeUnkn(0x4B9F7C, 1);
MakeNameEx(0x4B9F7C, "gvar_004B9F7C", 0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B9F88, -1);
MakeDword(0x4B9F84);
MakeDword(0x4B9F80);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4B9FA0, -1);
MakeDword(0x4B9F9C);
MakeDword(0x4B9F98);
MakeUnkn(0x4B9FD0, 1);
MakeNameEx(0x4B9FD0, "TMainForm.SRecreateBarLinesClick", 0x20);
MakeComm(0x4B9FD0, "'procedure TMainForm.SRecreateBarLinesClick(Sender:TObject);'");
MakeCode(0x4B9FD0);
MakeComm(0x4B9FD7, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4B9FE3, "'TTabEditorView.?f258:TTabDocument'");
MakeComm(0x4B9FF9, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4BA002, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4BA012, "'0x0'");
MakeComm(0x4BA030, "'TBarLinesForm.Create'");
MakeComm(0x4BA065, "'TCustomForm.ShowModal'");
MakeCode(0x4BA078);
MakeComm(0x4BA07B, "'TBarLinesForm.?f384:Longint'");
MakeCode(0x4BA084);
MakeCode(0x4BA091);
MakeCode(0x4BA09A);
MakeCode(0x4BA09F);
MakeCode(0x4BA111);
MakeFunction(0x4B9FD0, 0x4BA116);
MakeByte(0x4BA118);
MakeUnkn(0x4BA118, 1);
MakeNameEx(0x4BA118, "gvar_004BA118", 0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4BA124, -1);
MakeDword(0x4BA120);
MakeDword(0x4BA11C);
MakeUnkn(0x4BA194, 1);
MakeNameEx(0x4BA194, "TMainForm.EGotoClick", 0x20);
MakeComm(0x4BA194, "'procedure TMainForm.EGotoClick(Sender:TObject);'");
MakeCode(0x4BA194);
MakeComm(0x4BA1AD, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4BA1B3, "'TTabEditorView.?f258:TTabDocument'");
MakeCode(0x4BA200);
MakeCode(0x4BA20C);
MakeComm(0x4BA217, "'0x0'");
MakeCode(0x4BA217);
MakeComm(0x4BA227, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4BA234, "'0x2'");
MakeCode(0x4BA244);
MakeCode(0x4BA251);
MakeCode(0x4BA262);
MakeCode(0x4BA267);
MakeFunction(0x4BA194, 0x4BA26F);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4BA278, -1);
MakeDword(0x4BA274);
MakeDword(0x4BA270);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4BA28C, -1);
MakeDword(0x4BA288);
MakeDword(0x4BA284);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4BA2A0, -1);
MakeDword(0x4BA29C);
MakeDword(0x4BA298);
MakeByte(0x4BA2C0);
MakeUnkn(0x4BA2C0, 1);
MakeNameEx(0x4BA2C0, "gvar_004BA2C0", 0);
MakeByte(0x4BA2C4);
MakeUnkn(0x4BA2C4, 1);
MakeNameEx(0x4BA2C4, "gvar_004BA2C4", 0);
MakeUnkn(0x4BA2C8, 1);
MakeNameEx(0x4BA2C8, "TMainForm.StatusBarResize", 0x20);
MakeComm(0x4BA2C8, "'procedure TMainForm.StatusBarResize(Sender:TObject);'");
MakeCode(0x4BA2C8);
MakeComm(0x4BA2CB, "'TMainForm.StatusBar:TStatusBar'");
MakeComm(0x4BA2DE, "'TMainForm.StatusBar:TStatusBar'");
MakeCode(0x4BA2EF);
MakeFunction(0x4BA2C8, 0x4BA2F1);
MakeUnkn(0x4BA2F4, 1);
MakeNameEx(0x4BA2F4, "TMainForm.EMenuClick", 0x20);
MakeComm(0x4BA2F4, "'procedure TMainForm.EMenuClick(Sender:TObject);'");
MakeCode(0x4BA2F4);
MakeComm(0x4BA2F7, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4BA2FD, "'TTabEditorView.?fD30:byte'");
MakeComm(0x4BA304, "'TMainForm.ESelAllTracks:TTBItem'");
MakeComm(0x4BA30F, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4BA315, "'TTabEditorView.?fD2E:byte'");
MakeComm(0x4BA31C, "'TMainForm.ESelAllTracks:TTBItem'");
MakeFunction(0x4BA2F4, 0x4BA329);
MakeUnkn(0x4BA32C, 1);
MakeNameEx(0x4BA32C, "TMainForm.ESelAllTracksClick", 0x20);
MakeComm(0x4BA32C, "'procedure TMainForm.ESelAllTracksClick(Sender:TObject);'");
MakeCode(0x4BA32C);
MakeComm(0x4BA336, "'0x1'");
MakeComm(0x4BA33D, "'TMainForm.?f674:TTabEditorView'");
MakeComm(0x4BA347, "'TTabEditorView.KeyDown'");
MakeFunction(0x4BA32C, 0x4BA34F);
MakeByte(0x4BA350);
MakeUnkn(0x4BA350, 1);
MakeNameEx(0x4BA350, "gvar_004BA350", 0);
MakeCode(0x4BA354);
MakeCode(0x4BA373);
MakeCode(0x4BA379);
MakeCode(0x4BA3AE);
MakeCode(0x4BA3D5);
MakeCode(0x4BA3DB);
MakeCode(0x4BA3E1);
MakeFunction(0x4BA354, 0x4BA3F3);
MakeCode(0x4BA3F4);
MakeCode(0x4BA472);
MakeCode(0x4BA48D);
MakeCode(0x4BA48E);
MakeCode(0x4BA4B7);
MakeCode(0x4BA4FD);
MakeCode(0x4BA4FE);
MakeCode(0x4BA54E);
MakeCode(0x4BA552);
MakeCode(0x4BA562);
MakeCode(0x4BA563);
MakeCode(0x4BA5A9);
MakeCode(0x4BA5AC);
MakeCode(0x4BA5EB);
MakeComm(0x4BA5FA, "'TRemoveOddTimeForm.Create'");
MakeComm(0x4BA62A, "'TRemoveOddTimeForm.?f378:dword'");
MakeComm(0x4BA64A, "'TRemoveOddTimeForm.?f380:dword'");
MakeComm(0x4BA66A, "'TRemoveOddTimeForm.?f37C:dword'");
MakeComm(0x4BA68B, "'TRemoveOddTimeForm.?f384:dword'");
MakeComm(0x4BA6A0, "'TCustomForm.ShowModal'");
MakeCode(0x4BA6B3);
MakeComm(0x4BA6B6, "'TRemoveOddTimeForm.EntireRadio:TRadioButton'");
MakeComm(0x4BA6BE, "'TRadioButton.GetChecked'");
MakeCode(0x4BA6D3);
MakeCode(0x4BA6D9);
MakeCode(0x4BA6E6);
MakeCode(0x4BA6F7);
MakeCode(0x4BA6FC);
MakeCode(0x4BA71A);
MakeComm(0x4BA732, "'0x0'");
MakeCode(0x4BA732);
MakeCode(0x4BA841);
MakeCode(0x4BA849);
MakeComm(0x4BA864, "'0x0'");
MakeCode(0x4BA876);
MakeFunction(0x4BA3F4, 0x4BA881);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4BA88C, -1);
MakeDword(0x4BA888);
MakeDword(0x4BA884);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4BA8B0, -1);
MakeDword(0x4BA8AC);
MakeDword(0x4BA8A8);
MakeByte(0x4BA8C4);
MakeUnkn(0x4BA8C4, 1);
MakeNameEx(0x4BA8C4, "gvar_004BA8C4", 0);
MakeUnkn(0x4BA8C8, 1);
MakeNameEx(0x4BA8C8, "TMainForm.CAltTimeRegionClick", 0x20);
MakeComm(0x4BA8C8, "'procedure TMainForm.CAltTimeRegionClick(Sender:TObject);'");
MakeCode(0x4BA8C8);
MakeComm(0x4BA8ED, "'TMainForm.?f668:TTabDocument'");
MakeComm(0x4BA8F9, "'TMainForm.?f674:TTabEditorView'");
MakeCode(0x4BA93E);
MakeComm(0x4BA941, "'TTabEditorView.?fD2E:byte'");
MakeCode(0x4BA959);
MakeComm(0x4BA968, "'TTabEditorView.?f49C:dword'");
MakeCode(0x4BA98C);
MakeCode(0x4BA997);
MakeComm(0x4BA99A, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4BA9B7, "'TTabEditorView.?f49C:dword'");
MakeCode(0x4BA9CE);
MakeCode(0x4BA9DD);
MakeCode(0x4BA9E1);
MakeComm(0x4BA9FA, "'TOddTimeForm.Create'");
MakeComm(0x4BAA16, "'TOddTimeForm.?f390:dword'");
MakeComm(0x4BAA25, "'TOddTimeForm.SelLabel:TLabel'");
MakeCode(0x4BAA37);
MakeComm(0x4BAA57, "'TOddTimeForm.SelLabel:TLabel'");
MakeCode(0x4BAA62);
MakeComm(0x4BAA67, "'TCustomForm.ShowModal'");
MakeCode(0x4BAA7A);
MakeComm(0x4BAA7D, "'TOddTimeForm.?f394:Integer'");
MakeComm(0x4BAA89, "'TOddTimeForm.?f398:Longint'");
MakeCode(0x4BAA92);
MakeCode(0x4BAA9F);
MakeCode(0x4BAAA8);
MakeCode(0x4BAAAD);
MakeCode(0x4BAACE);
MakeCode(0x4BAAF3);
MakeComm(0x4BAAF6, "'TTabEditorView.?f49C:dword'");
MakeCode(0x4BAB40);
MakeComm(0x4BAB48, "'0x0'");
MakeComm(0x4BAB67, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4BAB91, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4BABC0, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4BABD5, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4BABF3, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4BAC16, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4BAC32, "'TTabEditorView.?f49C:dword'");
MakeCode(0x4BAC51);
MakeComm(0x4BAC54, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4BAC6C, "'0x0'");
MakeCode(0x4BAC7E);
MakeCode(0x4BAC8B);
MakeCode(0x4BAC9C);
MakeCode(0x4BACA1);
MakeFunction(0x4BA8C8, 0x4BACAA);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4BACB4, -1);
MakeDword(0x4BACB0);
MakeDword(0x4BACAC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4BAD74, -1);
MakeDword(0x4BAD70);
MakeDword(0x4BAD6C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4BADC4, -1);
MakeDword(0x4BADC0);
MakeDword(0x4BADBC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4BAE28, -1);
MakeDword(0x4BAE24);
MakeDword(0x4BAE20);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4BAE6C, -1);
MakeDword(0x4BAE68);
MakeDword(0x4BAE64);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4BAE8C, -1);
MakeDword(0x4BAE88);
MakeDword(0x4BAE84);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4BAEAC, -1);
MakeDword(0x4BAEA8);
MakeDword(0x4BAEA4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4BAED0, -1);
MakeDword(0x4BAECC);
MakeDword(0x4BAEC8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4BAEEC, -1);
MakeDword(0x4BAEE8);
MakeDword(0x4BAEE4);
MakeByte(0x4BAF60);
MakeUnkn(0x4BAF60, 1);
MakeNameEx(0x4BAF60, "gvar_004BAF60", 0);
MakeCode(0x4BAF64);
MakeCode(0x4BAF87);
MakeCode(0x4BAF94);
MakeCode(0x4BAF95);
MakeCode(0x4BAF9A);
MakeFunction(0x4BAF64, 0x4BAF9E);
MakeUnkn(0x4BAFA0, 1);
MakeNameEx(0x4BAFA0, "VMT_4BAFA0_TTabContainer", 0);
MakeDword(0x4BAFA0);
MakeDword(0x4BAFA4);
MakeDword(0x4BAFA8);
MakeDword(0x4BAFAC);
MakeDword(0x4BAFB0);
MakeDword(0x4BAFB4);
MakeDword(0x4BAFB8);
MakeDword(0x4BAFBC);
MakeDword(0x4BAFC0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4BB0C4, 0x4BB0D2);
MakeDword(0x4BAFC4);
MakeDword(0x4BAFC8);
MakeDword(0x4BAFCC);
MakeDword(0x4BAFD0);
MakeDword(0x4BAFD4);
MakeDword(0x4BAFD8);
MakeDword(0x4BAFDC);
MakeDword(0x4BAFE0);
MakeDword(0x4BAFE4);
MakeDword(0x4BAFE8);
MakeComm(0x4BAFEC, "'+0'");
MakeDword(0x4BAFEC);
MakeComm(0x4BAFF0, "'+4'");
MakeDword(0x4BAFF0);
MakeComm(0x4BAFF4, "'+8'");
MakeDword(0x4BAFF4);
MakeComm(0x4BAFF8, "'+C'");
MakeDword(0x4BAFF8);
MakeComm(0x4BAFFC, "'+10'");
MakeDword(0x4BAFFC);
MakeComm(0x4BB000, "'+14'");
MakeDword(0x4BB000);
MakeComm(0x4BB004, "'+18'");
MakeDword(0x4BB004);
MakeComm(0x4BB008, "'+1C'");
MakeDword(0x4BB008);
MakeComm(0x4BB00C, "'+20'");
MakeDword(0x4BB00C);
MakeComm(0x4BB010, "'+24'");
MakeDword(0x4BB010);
MakeComm(0x4BB014, "'+28'");
MakeDword(0x4BB014);
MakeComm(0x4BB018, "'+2C'");
MakeDword(0x4BB018);
MakeComm(0x4BB01C, "'+30'");
MakeDword(0x4BB01C);
MakeComm(0x4BB020, "'+34'");
MakeDword(0x4BB020);
MakeComm(0x4BB024, "'+38'");
MakeDword(0x4BB024);
MakeComm(0x4BB028, "'+3C'");
MakeDword(0x4BB028);
MakeComm(0x4BB02C, "'+40'");
MakeDword(0x4BB02C);
MakeComm(0x4BB030, "'+44'");
MakeDword(0x4BB030);
MakeComm(0x4BB034, "'+48'");
MakeDword(0x4BB034);
MakeComm(0x4BB038, "'+4C'");
MakeDword(0x4BB038);
MakeComm(0x4BB03C, "'+50'");
MakeDword(0x4BB03C);
MakeComm(0x4BB040, "'+54'");
MakeDword(0x4BB040);
MakeComm(0x4BB044, "'+58'");
MakeDword(0x4BB044);
MakeComm(0x4BB048, "'+5C'");
MakeDword(0x4BB048);
MakeComm(0x4BB04C, "'+60'");
MakeDword(0x4BB04C);
MakeComm(0x4BB050, "'+64'");
MakeDword(0x4BB050);
MakeComm(0x4BB054, "'+68'");
MakeDword(0x4BB054);
MakeComm(0x4BB058, "'+6C'");
MakeDword(0x4BB058);
MakeComm(0x4BB05C, "'+70'");
MakeDword(0x4BB05C);
MakeComm(0x4BB060, "'+74'");
MakeDword(0x4BB060);
MakeComm(0x4BB064, "'+78'");
MakeDword(0x4BB064);
MakeComm(0x4BB068, "'+7C'");
MakeDword(0x4BB068);
MakeComm(0x4BB06C, "'+80'");
MakeDword(0x4BB06C);
MakeComm(0x4BB070, "'+84'");
MakeDword(0x4BB070);
MakeComm(0x4BB074, "'+88'");
MakeDword(0x4BB074);
MakeComm(0x4BB078, "'+8C'");
MakeDword(0x4BB078);
MakeComm(0x4BB07C, "'+90'");
MakeDword(0x4BB07C);
MakeComm(0x4BB080, "'+94'");
MakeDword(0x4BB080);
MakeComm(0x4BB084, "'+98'");
MakeDword(0x4BB084);
MakeComm(0x4BB088, "'+9C'");
MakeDword(0x4BB088);
MakeComm(0x4BB08C, "'+A0'");
MakeDword(0x4BB08C);
MakeComm(0x4BB090, "'+A4'");
MakeDword(0x4BB090);
MakeComm(0x4BB094, "'+A8'");
MakeDword(0x4BB094);
MakeComm(0x4BB098, "'+AC'");
MakeDword(0x4BB098);
MakeComm(0x4BB09C, "'+B0'");
MakeDword(0x4BB09C);
MakeComm(0x4BB0A0, "'+B4'");
MakeDword(0x4BB0A0);
MakeComm(0x4BB0A4, "'+B8'");
MakeDword(0x4BB0A4);
MakeComm(0x4BB0A8, "'+BC'");
MakeDword(0x4BB0A8);
MakeComm(0x4BB0AC, "'+C0'");
MakeDword(0x4BB0AC);
MakeComm(0x4BB0B0, "'+C4'");
MakeDword(0x4BB0B0);
MakeComm(0x4BB0B4, "'+C8'");
MakeDword(0x4BB0B4);
MakeComm(0x4BB0B8, "'+CC'");
MakeDword(0x4BB0B8);
MakeComm(0x4BB0BC, "'+D0'");
MakeDword(0x4BB0BC);
MakeComm(0x4BB0C0, "'+D4'");
MakeDword(0x4BB0C0);
MakeUnkn(0x4BB0D4, 1);
MakeNameEx(0x4BB0D4, "RTTI_4BB0D4_Class_TTabContainer", 0);
MakeDword(0x4BB0D4);
MakeUnkn(0x4BB0D8, 1);
MakeNameEx(0x4BB0D8, "", 0);
MakeByte(0x4BB0D8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4BB0D9, 0x4BB0E7);
MakeDword(0x4BB0E7);
MakeDword(0x4BB0EB);
MakeWord(0x4BB0EF);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4BB0F1, 0x4BB0F9);
MakeWord(0x4BB0F9);
MakeUnkn(0x4BB0FC, 1);
MakeNameEx(0x4BB0FC, "VMT_4BB0FC_TTabDocument", 0);
MakeDword(0x4BB0FC);
MakeDword(0x4BB100);
MakeDword(0x4BB104);
MakeDword(0x4BB108);
MakeDword(0x4BB10C);
MakeDword(0x4BB110);
MakeDword(0x4BB114);
MakeDword(0x4BB118);
MakeDword(0x4BB11C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4BB184, 0x4BB191);
MakeDword(0x4BB120);
MakeDword(0x4BB124);
MakeDword(0x4BB128);
MakeDword(0x4BB12C);
MakeDword(0x4BB130);
MakeDword(0x4BB134);
MakeDword(0x4BB138);
MakeDword(0x4BB13C);
MakeDword(0x4BB140);
MakeDword(0x4BB144);
MakeComm(0x4BB148, "'+0'");
MakeDword(0x4BB148);
MakeComm(0x4BB14C, "'+4'");
MakeDword(0x4BB14C);
MakeComm(0x4BB150, "'+8'");
MakeDword(0x4BB150);
MakeComm(0x4BB154, "'+C'");
MakeDword(0x4BB154);
MakeComm(0x4BB158, "'+10'");
MakeDword(0x4BB158);
MakeComm(0x4BB15C, "'+14'");
MakeDword(0x4BB15C);
MakeComm(0x4BB160, "'+18'");
MakeDword(0x4BB160);
MakeComm(0x4BB164, "'+1C'");
MakeDword(0x4BB164);
MakeComm(0x4BB168, "'+20'");
MakeDword(0x4BB168);
MakeComm(0x4BB16C, "'+24'");
MakeDword(0x4BB16C);
MakeComm(0x4BB170, "'+28'");
MakeDword(0x4BB170);
MakeComm(0x4BB174, "'+2C'");
MakeDword(0x4BB174);
MakeComm(0x4BB178, "'+30'");
MakeDword(0x4BB178);
MakeComm(0x4BB17C, "'+34'");
MakeDword(0x4BB17C);
MakeComm(0x4BB180, "'+38'");
MakeDword(0x4BB180);
MakeUnkn(0x4BB194, 1);
MakeNameEx(0x4BB194, "RTTI_4BB194_Class_TTabDocument", 0);
MakeDword(0x4BB194);
MakeUnkn(0x4BB198, 1);
MakeNameEx(0x4BB198, "", 0);
MakeByte(0x4BB198);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4BB199, 0x4BB1A6);
MakeDword(0x4BB1A6);
MakeDword(0x4BB1AA);
MakeWord(0x4BB1AE);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4BB1B0, 0x4BB1B8);
MakeWord(0x4BB1B8);
MakeUnkn(0x4BB1BC, 1);
MakeNameEx(0x4BB1BC, "VMT_4BB1BC_TTabScroller", 0);
MakeDword(0x4BB1BC);
MakeDword(0x4BB1C0);
MakeDword(0x4BB1C4);
MakeDword(0x4BB1C8);
MakeDword(0x4BB1CC);
MakeDword(0x4BB1D0);
MakeDword(0x4BB1D4);
MakeDword(0x4BB1D8);
MakeUnkn(0x4BB2E0, 1);
MakeNameEx(0x4BB2E0, "TTabScroller_DynamicTable", 0);
MakeWord(0x4BB2E0);
MakeWord(0x4BB2E2);
MakeWord(0x4BB2E4);
MakeWord(0x4BB2E6);
MakeWord(0x4BB2E8);
MakeWord(0x4BB2EA);
MakeDword(0x4BB2EC);
MakeDword(0x4BB2F0);
MakeDword(0x4BB2F4);
MakeDword(0x4BB2F8);
MakeDword(0x4BB2FC);
MakeDword(0x4BB1DC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4BB300, 0x4BB30D);
MakeDword(0x4BB1E0);
MakeDword(0x4BB1E4);
MakeDword(0x4BB1E8);
MakeDword(0x4BB1EC);
MakeDword(0x4BB1F0);
MakeDword(0x4BB1F4);
MakeDword(0x4BB1F8);
MakeDword(0x4BB1FC);
MakeDword(0x4BB200);
MakeDword(0x4BB204);
MakeComm(0x4BB208, "'+0'");
MakeDword(0x4BB208);
MakeComm(0x4BB20C, "'+4'");
MakeDword(0x4BB20C);
MakeComm(0x4BB210, "'+8'");
MakeDword(0x4BB210);
MakeComm(0x4BB214, "'+C'");
MakeDword(0x4BB214);
MakeComm(0x4BB218, "'+10'");
MakeDword(0x4BB218);
MakeComm(0x4BB21C, "'+14'");
MakeDword(0x4BB21C);
MakeComm(0x4BB220, "'+18'");
MakeDword(0x4BB220);
MakeComm(0x4BB224, "'+1C'");
MakeDword(0x4BB224);
MakeComm(0x4BB228, "'+20'");
MakeDword(0x4BB228);
MakeComm(0x4BB22C, "'+24'");
MakeDword(0x4BB22C);
MakeComm(0x4BB230, "'+28'");
MakeDword(0x4BB230);
MakeComm(0x4BB234, "'+2C'");
MakeDword(0x4BB234);
MakeComm(0x4BB238, "'+30'");
MakeDword(0x4BB238);
MakeComm(0x4BB23C, "'+34'");
MakeDword(0x4BB23C);
MakeComm(0x4BB240, "'+38'");
MakeDword(0x4BB240);
MakeComm(0x4BB244, "'+3C'");
MakeDword(0x4BB244);
MakeComm(0x4BB248, "'+40'");
MakeDword(0x4BB248);
MakeComm(0x4BB24C, "'+44'");
MakeDword(0x4BB24C);
MakeComm(0x4BB250, "'+48'");
MakeDword(0x4BB250);
MakeComm(0x4BB254, "'+4C'");
MakeDword(0x4BB254);
MakeComm(0x4BB258, "'+50'");
MakeDword(0x4BB258);
MakeComm(0x4BB25C, "'+54'");
MakeDword(0x4BB25C);
MakeComm(0x4BB260, "'+58'");
MakeDword(0x4BB260);
MakeComm(0x4BB264, "'+5C'");
MakeDword(0x4BB264);
MakeComm(0x4BB268, "'+60'");
MakeDword(0x4BB268);
MakeComm(0x4BB26C, "'+64'");
MakeDword(0x4BB26C);
MakeComm(0x4BB270, "'+68'");
MakeDword(0x4BB270);
MakeComm(0x4BB274, "'+6C'");
MakeDword(0x4BB274);
MakeComm(0x4BB278, "'+70'");
MakeDword(0x4BB278);
MakeComm(0x4BB27C, "'+74'");
MakeDword(0x4BB27C);
MakeComm(0x4BB280, "'+78'");
MakeDword(0x4BB280);
MakeComm(0x4BB284, "'+7C'");
MakeDword(0x4BB284);
MakeComm(0x4BB288, "'+80'");
MakeDword(0x4BB288);
MakeComm(0x4BB28C, "'+84'");
MakeDword(0x4BB28C);
MakeComm(0x4BB290, "'+88'");
MakeDword(0x4BB290);
MakeComm(0x4BB294, "'+8C'");
MakeDword(0x4BB294);
MakeComm(0x4BB298, "'+90'");
MakeDword(0x4BB298);
MakeComm(0x4BB29C, "'+94'");
MakeDword(0x4BB29C);
MakeComm(0x4BB2A0, "'+98'");
MakeDword(0x4BB2A0);
MakeComm(0x4BB2A4, "'+9C'");
MakeDword(0x4BB2A4);
MakeComm(0x4BB2A8, "'+A0'");
MakeDword(0x4BB2A8);
MakeComm(0x4BB2AC, "'+A4'");
MakeDword(0x4BB2AC);
MakeComm(0x4BB2B0, "'+A8'");
MakeDword(0x4BB2B0);
MakeComm(0x4BB2B4, "'+AC'");
MakeDword(0x4BB2B4);
MakeComm(0x4BB2B8, "'+B0'");
MakeDword(0x4BB2B8);
MakeComm(0x4BB2BC, "'+B4'");
MakeDword(0x4BB2BC);
MakeComm(0x4BB2C0, "'+B8'");
MakeDword(0x4BB2C0);
MakeComm(0x4BB2C4, "'+BC'");
MakeDword(0x4BB2C4);
MakeComm(0x4BB2C8, "'+C0'");
MakeDword(0x4BB2C8);
MakeComm(0x4BB2CC, "'+C4'");
MakeDword(0x4BB2CC);
MakeComm(0x4BB2D0, "'+C8'");
MakeDword(0x4BB2D0);
MakeComm(0x4BB2D4, "'+CC'");
MakeDword(0x4BB2D4);
MakeComm(0x4BB2D8, "'+D0'");
MakeDword(0x4BB2D8);
MakeComm(0x4BB2DC, "'+D4'");
MakeDword(0x4BB2DC);
MakeUnkn(0x4BB310, 1);
MakeNameEx(0x4BB310, "RTTI_4BB310_Class_TTabScroller", 0);
MakeDword(0x4BB310);
MakeUnkn(0x4BB314, 1);
MakeNameEx(0x4BB314, "", 0);
MakeByte(0x4BB314);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4BB315, 0x4BB322);
MakeDword(0x4BB322);
MakeDword(0x4BB326);
MakeWord(0x4BB32A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4BB32C, 0x4BB334);
MakeWord(0x4BB334);
MakeUnkn(0x4BB338, 1);
MakeNameEx(0x4BB338, "VMT_4BB338_TTabRulerParent", 0);
MakeDword(0x4BB338);
MakeDword(0x4BB33C);
MakeDword(0x4BB340);
MakeDword(0x4BB344);
MakeDword(0x4BB348);
MakeDword(0x4BB34C);
MakeDword(0x4BB350);
MakeDword(0x4BB354);
MakeDword(0x4BB358);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4BB45C, 0x4BB46C);
MakeDword(0x4BB35C);
MakeDword(0x4BB360);
MakeDword(0x4BB364);
MakeDword(0x4BB368);
MakeDword(0x4BB36C);
MakeDword(0x4BB370);
MakeDword(0x4BB374);
MakeDword(0x4BB378);
MakeDword(0x4BB37C);
MakeDword(0x4BB380);
MakeComm(0x4BB384, "'+0'");
MakeDword(0x4BB384);
MakeComm(0x4BB388, "'+4'");
MakeDword(0x4BB388);
MakeComm(0x4BB38C, "'+8'");
MakeDword(0x4BB38C);
MakeComm(0x4BB390, "'+C'");
MakeDword(0x4BB390);
MakeComm(0x4BB394, "'+10'");
MakeDword(0x4BB394);
MakeComm(0x4BB398, "'+14'");
MakeDword(0x4BB398);
MakeComm(0x4BB39C, "'+18'");
MakeDword(0x4BB39C);
MakeComm(0x4BB3A0, "'+1C'");
MakeDword(0x4BB3A0);
MakeComm(0x4BB3A4, "'+20'");
MakeDword(0x4BB3A4);
MakeComm(0x4BB3A8, "'+24'");
MakeDword(0x4BB3A8);
MakeComm(0x4BB3AC, "'+28'");
MakeDword(0x4BB3AC);
MakeComm(0x4BB3B0, "'+2C'");
MakeDword(0x4BB3B0);
MakeComm(0x4BB3B4, "'+30'");
MakeDword(0x4BB3B4);
MakeComm(0x4BB3B8, "'+34'");
MakeDword(0x4BB3B8);
MakeComm(0x4BB3BC, "'+38'");
MakeDword(0x4BB3BC);
MakeComm(0x4BB3C0, "'+3C'");
MakeDword(0x4BB3C0);
MakeComm(0x4BB3C4, "'+40'");
MakeDword(0x4BB3C4);
MakeComm(0x4BB3C8, "'+44'");
MakeDword(0x4BB3C8);
MakeComm(0x4BB3CC, "'+48'");
MakeDword(0x4BB3CC);
MakeComm(0x4BB3D0, "'+4C'");
MakeDword(0x4BB3D0);
MakeComm(0x4BB3D4, "'+50'");
MakeDword(0x4BB3D4);
MakeComm(0x4BB3D8, "'+54'");
MakeDword(0x4BB3D8);
MakeComm(0x4BB3DC, "'+58'");
MakeDword(0x4BB3DC);
MakeComm(0x4BB3E0, "'+5C'");
MakeDword(0x4BB3E0);
MakeComm(0x4BB3E4, "'+60'");
MakeDword(0x4BB3E4);
MakeComm(0x4BB3E8, "'+64'");
MakeDword(0x4BB3E8);
MakeComm(0x4BB3EC, "'+68'");
MakeDword(0x4BB3EC);
MakeComm(0x4BB3F0, "'+6C'");
MakeDword(0x4BB3F0);
MakeComm(0x4BB3F4, "'+70'");
MakeDword(0x4BB3F4);
MakeComm(0x4BB3F8, "'+74'");
MakeDword(0x4BB3F8);
MakeComm(0x4BB3FC, "'+78'");
MakeDword(0x4BB3FC);
MakeComm(0x4BB400, "'+7C'");
MakeDword(0x4BB400);
MakeComm(0x4BB404, "'+80'");
MakeDword(0x4BB404);
MakeComm(0x4BB408, "'+84'");
MakeDword(0x4BB408);
MakeComm(0x4BB40C, "'+88'");
MakeDword(0x4BB40C);
MakeComm(0x4BB410, "'+8C'");
MakeDword(0x4BB410);
MakeComm(0x4BB414, "'+90'");
MakeDword(0x4BB414);
MakeComm(0x4BB418, "'+94'");
MakeDword(0x4BB418);
MakeComm(0x4BB41C, "'+98'");
MakeDword(0x4BB41C);
MakeComm(0x4BB420, "'+9C'");
MakeDword(0x4BB420);
MakeComm(0x4BB424, "'+A0'");
MakeDword(0x4BB424);
MakeComm(0x4BB428, "'+A4'");
MakeDword(0x4BB428);
MakeComm(0x4BB42C, "'+A8'");
MakeDword(0x4BB42C);
MakeComm(0x4BB430, "'+AC'");
MakeDword(0x4BB430);
MakeComm(0x4BB434, "'+B0'");
MakeDword(0x4BB434);
MakeComm(0x4BB438, "'+B4'");
MakeDword(0x4BB438);
MakeComm(0x4BB43C, "'+B8'");
MakeDword(0x4BB43C);
MakeComm(0x4BB440, "'+BC'");
MakeDword(0x4BB440);
MakeComm(0x4BB444, "'+C0'");
MakeDword(0x4BB444);
MakeComm(0x4BB448, "'+C4'");
MakeDword(0x4BB448);
MakeComm(0x4BB44C, "'+C8'");
MakeDword(0x4BB44C);
MakeComm(0x4BB450, "'+CC'");
MakeDword(0x4BB450);
MakeComm(0x4BB454, "'+D0'");
MakeDword(0x4BB454);
MakeComm(0x4BB458, "'+D4'");
MakeDword(0x4BB458);
MakeUnkn(0x4BB46C, 1);
MakeNameEx(0x4BB46C, "RTTI_4BB46C_Class_TTabRulerParent", 0);
MakeDword(0x4BB46C);
MakeUnkn(0x4BB470, 1);
MakeNameEx(0x4BB470, "", 0);
MakeByte(0x4BB470);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4BB471, 0x4BB481);
MakeDword(0x4BB481);
MakeDword(0x4BB485);
MakeWord(0x4BB489);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4BB48B, 0x4BB493);
MakeWord(0x4BB493);
MakeUnkn(0x4BB498, 1);
MakeNameEx(0x4BB498, "VMT_4BB498_TTabRuler", 0);
MakeDword(0x4BB498);
MakeDword(0x4BB49C);
MakeDword(0x4BB4A0);
MakeDword(0x4BB4A4);
MakeDword(0x4BB4A8);
MakeDword(0x4BB4AC);
MakeDword(0x4BB4B0);
MakeDword(0x4BB4B4);
MakeUnkn(0x4BB5C0, 1);
MakeNameEx(0x4BB5C0, "TTabRuler_DynamicTable", 0);
MakeWord(0x4BB5C0);
MakeWord(0x4BB5C2);
MakeDword(0x4BB5C4);
MakeDword(0x4BB4B8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4BB5C8, 0x4BB5D2);
MakeDword(0x4BB4BC);
MakeDword(0x4BB4C0);
MakeDword(0x4BB4C4);
MakeDword(0x4BB4C8);
MakeDword(0x4BB4CC);
MakeDword(0x4BB4D0);
MakeDword(0x4BB4D4);
MakeDword(0x4BB4D8);
MakeDword(0x4BB4DC);
MakeDword(0x4BB4E0);
MakeComm(0x4BB4E4, "'+0'");
MakeDword(0x4BB4E4);
MakeComm(0x4BB4E8, "'+4'");
MakeDword(0x4BB4E8);
MakeComm(0x4BB4EC, "'+8'");
MakeDword(0x4BB4EC);
MakeComm(0x4BB4F0, "'+C'");
MakeDword(0x4BB4F0);
MakeComm(0x4BB4F4, "'+10'");
MakeDword(0x4BB4F4);
MakeComm(0x4BB4F8, "'+14'");
MakeDword(0x4BB4F8);
MakeComm(0x4BB4FC, "'+18'");
MakeDword(0x4BB4FC);
MakeComm(0x4BB500, "'+1C'");
MakeDword(0x4BB500);
MakeComm(0x4BB504, "'+20'");
MakeDword(0x4BB504);
MakeComm(0x4BB508, "'+24'");
MakeDword(0x4BB508);
MakeComm(0x4BB50C, "'+28'");
MakeDword(0x4BB50C);
MakeComm(0x4BB510, "'+2C'");
MakeDword(0x4BB510);
MakeComm(0x4BB514, "'+30'");
MakeDword(0x4BB514);
MakeComm(0x4BB518, "'+34'");
MakeDword(0x4BB518);
MakeComm(0x4BB51C, "'+38'");
MakeDword(0x4BB51C);
MakeComm(0x4BB520, "'+3C'");
MakeDword(0x4BB520);
MakeComm(0x4BB524, "'+40'");
MakeDword(0x4BB524);
MakeComm(0x4BB528, "'+44'");
MakeDword(0x4BB528);
MakeComm(0x4BB52C, "'+48'");
MakeDword(0x4BB52C);
MakeComm(0x4BB530, "'+4C'");
MakeDword(0x4BB530);
MakeComm(0x4BB534, "'+50'");
MakeDword(0x4BB534);
MakeComm(0x4BB538, "'+54'");
MakeDword(0x4BB538);
MakeComm(0x4BB53C, "'+58'");
MakeDword(0x4BB53C);
MakeComm(0x4BB540, "'+5C'");
MakeDword(0x4BB540);
MakeComm(0x4BB544, "'+60'");
MakeDword(0x4BB544);
MakeComm(0x4BB548, "'+64'");
MakeDword(0x4BB548);
MakeComm(0x4BB54C, "'+68'");
MakeDword(0x4BB54C);
MakeComm(0x4BB550, "'+6C'");
MakeDword(0x4BB550);
MakeComm(0x4BB554, "'+70'");
MakeDword(0x4BB554);
MakeComm(0x4BB558, "'+74'");
MakeDword(0x4BB558);
MakeComm(0x4BB55C, "'+78'");
MakeDword(0x4BB55C);
MakeComm(0x4BB560, "'+7C'");
MakeDword(0x4BB560);
MakeComm(0x4BB564, "'+80'");
MakeDword(0x4BB564);
MakeComm(0x4BB568, "'+84'");
MakeDword(0x4BB568);
MakeComm(0x4BB56C, "'+88'");
MakeDword(0x4BB56C);
MakeComm(0x4BB570, "'+8C'");
MakeDword(0x4BB570);
MakeComm(0x4BB574, "'+90'");
MakeDword(0x4BB574);
MakeComm(0x4BB578, "'+94'");
MakeDword(0x4BB578);
MakeComm(0x4BB57C, "'+98'");
MakeDword(0x4BB57C);
MakeComm(0x4BB580, "'+9C'");
MakeDword(0x4BB580);
MakeComm(0x4BB584, "'+A0'");
MakeDword(0x4BB584);
MakeComm(0x4BB588, "'+A4'");
MakeDword(0x4BB588);
MakeComm(0x4BB58C, "'+A8'");
MakeDword(0x4BB58C);
MakeComm(0x4BB590, "'+AC'");
MakeDword(0x4BB590);
MakeComm(0x4BB594, "'+B0'");
MakeDword(0x4BB594);
MakeComm(0x4BB598, "'+B4'");
MakeDword(0x4BB598);
MakeComm(0x4BB59C, "'+B8'");
MakeDword(0x4BB59C);
MakeComm(0x4BB5A0, "'+BC'");
MakeDword(0x4BB5A0);
MakeComm(0x4BB5A4, "'+C0'");
MakeDword(0x4BB5A4);
MakeComm(0x4BB5A8, "'+C4'");
MakeDword(0x4BB5A8);
MakeComm(0x4BB5AC, "'+C8'");
MakeDword(0x4BB5AC);
MakeComm(0x4BB5B0, "'+CC'");
MakeDword(0x4BB5B0);
MakeComm(0x4BB5B4, "'+D0'");
MakeDword(0x4BB5B4);
MakeComm(0x4BB5B8, "'+D4'");
MakeDword(0x4BB5B8);
MakeComm(0x4BB5BC, "'+D8'");
MakeDword(0x4BB5BC);
MakeUnkn(0x4BB5D4, 1);
MakeNameEx(0x4BB5D4, "RTTI_4BB5D4_Class_TTabRuler", 0);
MakeDword(0x4BB5D4);
MakeUnkn(0x4BB5D8, 1);
MakeNameEx(0x4BB5D8, "", 0);
MakeByte(0x4BB5D8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4BB5D9, 0x4BB5E3);
MakeDword(0x4BB5E3);
MakeDword(0x4BB5E7);
MakeWord(0x4BB5EB);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4BB5ED, 0x4BB5F5);
MakeWord(0x4BB5F5);
MakeUnkn(0x4BB5F8, 1);
MakeNameEx(0x4BB5F8, "RTTI_4BB5F8_Enumeration_TTabViewColors", 0);
MakeDword(0x4BB5F8);
MakeUnkn(0x4BB5FC, 1);
MakeNameEx(0x4BB5FC, "", 0);
MakeByte(0x4BB5FC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4BB5FD, 0x4BB60C);
MakeByte(0x4BB60C);
MakeDword(0x4BB60D);
MakeDword(0x4BB611);
MakeDword(0x4BB615);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4BB619, 0x4BB61F);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4BB61F, 0x4BB629);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4BB629, 0x4BB633);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4BB633, 0x4BB63A);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4BB63A, 0x4BB647);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4BB647, 0x4BB659);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4BB659, 0x4BB669);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4BB669, 0x4BB676);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4BB676, 0x4BB686);
MakeUnkn(0x4BB714, 1);
MakeNameEx(0x4BB714, "VMT_4BB714_TTabView", 0);
MakeDword(0x4BB714);
MakeDword(0x4BB718);
MakeUnkn(0x4BB6F3, 1);
MakeNameEx(0x4BB6F3, "TTabView_IntfTable", 0);
MakeDword(0x4BB6F3);
MakeByte(0x4BB6F7);
MakeArray(0x4BB6F7, 16);
MakeDword(0x4BB707);
MakeDword(0x4BB6DB);
MakeFunction(0x4BB6AF, -1);
MakeCode(0x4BB6AF);
MakeDword(0x4BB6DF);
MakeFunction(0x4BB6C0, -1);
MakeCode(0x4BB6C0);
MakeDword(0x4BB6E3);
MakeFunction(0x4BB6CD, -1);
MakeCode(0x4BB6CD);
MakeDword(0x4BB6E7);
MakeFunction(0x4BB691, -1);
MakeCode(0x4BB691);
MakeDword(0x4BB6EB);
MakeFunction(0x4BB69B, -1);
MakeCode(0x4BB69B);
MakeDword(0x4BB6EF);
MakeFunction(0x4BB6A5, -1);
MakeCode(0x4BB6A5);
MakeByte(0x4BB690);
MakeDword(0x4BB70B);
MakeDword(0x4BB70F);
MakeDword(0x4BB71C);
MakeDword(0x4BB720);
MakeDword(0x4BB724);
MakeDword(0x4BB728);
MakeDword(0x4BB72C);
MakeDword(0x4BB730);
MakeUnkn(0x4BB844, 1);
MakeNameEx(0x4BB844, "TTabView_DynamicTable", 0);
MakeWord(0x4BB844);
MakeWord(0x4BB846);
MakeWord(0x4BB848);
MakeWord(0x4BB84A);
MakeWord(0x4BB84C);
MakeWord(0x4BB84E);
MakeWord(0x4BB850);
MakeWord(0x4BB852);
MakeWord(0x4BB854);
MakeWord(0x4BB856);
MakeWord(0x4BB858);
MakeDword(0x4BB85A);
MakeDword(0x4BB85E);
MakeDword(0x4BB862);
MakeDword(0x4BB866);
MakeDword(0x4BB86A);
MakeDword(0x4BB86E);
MakeDword(0x4BB872);
MakeDword(0x4BB876);
MakeDword(0x4BB87A);
MakeDword(0x4BB87E);
MakeDword(0x4BB734);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4BB882, 0x4BB88B);
MakeDword(0x4BB738);
MakeDword(0x4BB73C);
MakeDword(0x4BB740);
MakeDword(0x4BB744);
MakeDword(0x4BB748);
MakeDword(0x4BB74C);
MakeDword(0x4BB750);
MakeDword(0x4BB754);
MakeDword(0x4BB758);
MakeDword(0x4BB75C);
MakeComm(0x4BB760, "'+0'");
MakeDword(0x4BB760);
MakeComm(0x4BB764, "'+4'");
MakeDword(0x4BB764);
MakeComm(0x4BB768, "'+8'");
MakeDword(0x4BB768);
MakeComm(0x4BB76C, "'+C'");
MakeDword(0x4BB76C);
MakeComm(0x4BB770, "'+10'");
MakeDword(0x4BB770);
MakeComm(0x4BB774, "'+14'");
MakeDword(0x4BB774);
MakeComm(0x4BB778, "'+18'");
MakeDword(0x4BB778);
MakeComm(0x4BB77C, "'+1C'");
MakeDword(0x4BB77C);
MakeComm(0x4BB780, "'+20'");
MakeDword(0x4BB780);
MakeComm(0x4BB784, "'+24'");
MakeDword(0x4BB784);
MakeComm(0x4BB788, "'+28'");
MakeDword(0x4BB788);
MakeComm(0x4BB78C, "'+2C'");
MakeDword(0x4BB78C);
MakeComm(0x4BB790, "'+30'");
MakeDword(0x4BB790);
MakeComm(0x4BB794, "'+34'");
MakeDword(0x4BB794);
MakeComm(0x4BB798, "'+38'");
MakeDword(0x4BB798);
MakeComm(0x4BB79C, "'+3C'");
MakeDword(0x4BB79C);
MakeComm(0x4BB7A0, "'+40'");
MakeDword(0x4BB7A0);
MakeComm(0x4BB7A4, "'+44'");
MakeDword(0x4BB7A4);
MakeComm(0x4BB7A8, "'+48'");
MakeDword(0x4BB7A8);
MakeComm(0x4BB7AC, "'+4C'");
MakeDword(0x4BB7AC);
MakeComm(0x4BB7B0, "'+50'");
MakeDword(0x4BB7B0);
MakeComm(0x4BB7B4, "'+54'");
MakeDword(0x4BB7B4);
MakeComm(0x4BB7B8, "'+58'");
MakeDword(0x4BB7B8);
MakeComm(0x4BB7BC, "'+5C'");
MakeDword(0x4BB7BC);
MakeComm(0x4BB7C0, "'+60'");
MakeDword(0x4BB7C0);
MakeComm(0x4BB7C4, "'+64'");
MakeDword(0x4BB7C4);
MakeComm(0x4BB7C8, "'+68'");
MakeDword(0x4BB7C8);
MakeComm(0x4BB7CC, "'+6C'");
MakeDword(0x4BB7CC);
MakeComm(0x4BB7D0, "'+70'");
MakeDword(0x4BB7D0);
MakeComm(0x4BB7D4, "'+74'");
MakeDword(0x4BB7D4);
MakeComm(0x4BB7D8, "'+78'");
MakeDword(0x4BB7D8);
MakeComm(0x4BB7DC, "'+7C'");
MakeDword(0x4BB7DC);
MakeComm(0x4BB7E0, "'+80'");
MakeDword(0x4BB7E0);
MakeComm(0x4BB7E4, "'+84'");
MakeDword(0x4BB7E4);
MakeComm(0x4BB7E8, "'+88'");
MakeDword(0x4BB7E8);
MakeComm(0x4BB7EC, "'+8C'");
MakeDword(0x4BB7EC);
MakeComm(0x4BB7F0, "'+90'");
MakeDword(0x4BB7F0);
MakeComm(0x4BB7F4, "'+94'");
MakeDword(0x4BB7F4);
MakeComm(0x4BB7F8, "'+98'");
MakeDword(0x4BB7F8);
MakeComm(0x4BB7FC, "'+9C'");
MakeDword(0x4BB7FC);
MakeComm(0x4BB800, "'+A0'");
MakeDword(0x4BB800);
MakeComm(0x4BB804, "'+A4'");
MakeDword(0x4BB804);
MakeComm(0x4BB808, "'+A8'");
MakeDword(0x4BB808);
MakeComm(0x4BB80C, "'+AC'");
MakeDword(0x4BB80C);
MakeComm(0x4BB810, "'+B0'");
MakeDword(0x4BB810);
MakeComm(0x4BB814, "'+B4'");
MakeDword(0x4BB814);
MakeComm(0x4BB818, "'+B8'");
MakeDword(0x4BB818);
MakeComm(0x4BB81C, "'+BC'");
MakeDword(0x4BB81C);
MakeComm(0x4BB820, "'+C0'");
MakeDword(0x4BB820);
MakeComm(0x4BB824, "'+C4'");
MakeDword(0x4BB824);
MakeComm(0x4BB828, "'+C8'");
MakeDword(0x4BB828);
MakeComm(0x4BB82C, "'+CC'");
MakeDword(0x4BB82C);
MakeComm(0x4BB830, "'+D0'");
MakeDword(0x4BB830);
MakeComm(0x4BB834, "'+D4'");
MakeDword(0x4BB834);
MakeComm(0x4BB838, "'+D8'");
MakeDword(0x4BB838);
MakeComm(0x4BB83C, "'+DC'");
MakeDword(0x4BB83C);
MakeComm(0x4BB840, "'+E0'");
MakeDword(0x4BB840);
MakeUnkn(0x4BB88C, 1);
MakeNameEx(0x4BB88C, "RTTI_4BB88C_Class_TTabView", 0);
MakeDword(0x4BB88C);
MakeUnkn(0x4BB890, 1);
MakeNameEx(0x4BB890, "", 0);
MakeByte(0x4BB890);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4BB891, 0x4BB89A);
MakeDword(0x4BB89A);
MakeDword(0x4BB89E);
MakeWord(0x4BB8A2);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4BB8A4, 0x4BB8AC);
MakeWord(0x4BB8AC);
MakeUnkn(0x4BB8B0, 1);
MakeNameEx(0x4BB8B0, "VMT_4BB8B0_TTabEditorView", 0);
MakeDword(0x4BB8B0);
MakeDword(0x4BB8B4);
MakeDword(0x4BB8B8);
MakeDword(0x4BB8BC);
MakeDword(0x4BB8C0);
MakeDword(0x4BB8C4);
MakeDword(0x4BB8C8);
MakeDword(0x4BB8CC);
MakeUnkn(0x4BB9E0, 1);
MakeNameEx(0x4BB9E0, "TTabEditorView_DynamicTable", 0);
MakeWord(0x4BB9E0);
MakeWord(0x4BB9E2);
MakeWord(0x4BB9E4);
MakeWord(0x4BB9E6);
MakeWord(0x4BB9E8);
MakeWord(0x4BB9EA);
MakeWord(0x4BB9EC);
MakeWord(0x4BB9EE);
MakeWord(0x4BB9F0);
MakeWord(0x4BB9F2);
MakeWord(0x4BB9F4);
MakeDword(0x4BB9F6);
MakeDword(0x4BB9FA);
MakeDword(0x4BB9FE);
MakeDword(0x4BBA02);
MakeDword(0x4BBA06);
MakeDword(0x4BBA0A);
MakeDword(0x4BBA0E);
MakeDword(0x4BBA12);
MakeDword(0x4BBA16);
MakeDword(0x4BBA1A);
MakeDword(0x4BB8D0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4BBA1E, 0x4BBA2D);
MakeDword(0x4BB8D4);
MakeDword(0x4BB8D8);
MakeDword(0x4BB8DC);
MakeDword(0x4BB8E0);
MakeDword(0x4BB8E4);
MakeDword(0x4BB8E8);
MakeDword(0x4BB8EC);
MakeDword(0x4BB8F0);
MakeDword(0x4BB8F4);
MakeDword(0x4BB8F8);
MakeComm(0x4BB8FC, "'+0'");
MakeDword(0x4BB8FC);
MakeComm(0x4BB900, "'+4'");
MakeDword(0x4BB900);
MakeComm(0x4BB904, "'+8'");
MakeDword(0x4BB904);
MakeComm(0x4BB908, "'+C'");
MakeDword(0x4BB908);
MakeComm(0x4BB90C, "'+10'");
MakeDword(0x4BB90C);
MakeComm(0x4BB910, "'+14'");
MakeDword(0x4BB910);
MakeComm(0x4BB914, "'+18'");
MakeDword(0x4BB914);
MakeComm(0x4BB918, "'+1C'");
MakeDword(0x4BB918);
MakeComm(0x4BB91C, "'+20'");
MakeDword(0x4BB91C);
MakeComm(0x4BB920, "'+24'");
MakeDword(0x4BB920);
MakeComm(0x4BB924, "'+28'");
MakeDword(0x4BB924);
MakeComm(0x4BB928, "'+2C'");
MakeDword(0x4BB928);
MakeComm(0x4BB92C, "'+30'");
MakeDword(0x4BB92C);
MakeComm(0x4BB930, "'+34'");
MakeDword(0x4BB930);
MakeComm(0x4BB934, "'+38'");
MakeDword(0x4BB934);
MakeComm(0x4BB938, "'+3C'");
MakeDword(0x4BB938);
MakeComm(0x4BB93C, "'+40'");
MakeDword(0x4BB93C);
MakeComm(0x4BB940, "'+44'");
MakeDword(0x4BB940);
MakeComm(0x4BB944, "'+48'");
MakeDword(0x4BB944);
MakeComm(0x4BB948, "'+4C'");
MakeDword(0x4BB948);
MakeComm(0x4BB94C, "'+50'");
MakeDword(0x4BB94C);
MakeComm(0x4BB950, "'+54'");
MakeDword(0x4BB950);
MakeComm(0x4BB954, "'+58'");
MakeDword(0x4BB954);
MakeComm(0x4BB958, "'+5C'");
MakeDword(0x4BB958);
MakeComm(0x4BB95C, "'+60'");
MakeDword(0x4BB95C);
MakeComm(0x4BB960, "'+64'");
MakeDword(0x4BB960);
MakeComm(0x4BB964, "'+68'");
MakeDword(0x4BB964);
MakeComm(0x4BB968, "'+6C'");
MakeDword(0x4BB968);
MakeComm(0x4BB96C, "'+70'");
MakeDword(0x4BB96C);
MakeComm(0x4BB970, "'+74'");
MakeDword(0x4BB970);
MakeComm(0x4BB974, "'+78'");
MakeDword(0x4BB974);
MakeComm(0x4BB978, "'+7C'");
MakeDword(0x4BB978);
MakeComm(0x4BB97C, "'+80'");
MakeDword(0x4BB97C);
MakeComm(0x4BB980, "'+84'");
MakeDword(0x4BB980);
MakeComm(0x4BB984, "'+88'");
MakeDword(0x4BB984);
MakeComm(0x4BB988, "'+8C'");
MakeDword(0x4BB988);
MakeComm(0x4BB98C, "'+90'");
MakeDword(0x4BB98C);
MakeComm(0x4BB990, "'+94'");
MakeDword(0x4BB990);
MakeComm(0x4BB994, "'+98'");
MakeDword(0x4BB994);
MakeComm(0x4BB998, "'+9C'");
MakeDword(0x4BB998);
MakeComm(0x4BB99C, "'+A0'");
MakeDword(0x4BB99C);
MakeComm(0x4BB9A0, "'+A4'");
MakeDword(0x4BB9A0);
MakeComm(0x4BB9A4, "'+A8'");
MakeDword(0x4BB9A4);
MakeComm(0x4BB9A8, "'+AC'");
MakeDword(0x4BB9A8);
MakeComm(0x4BB9AC, "'+B0'");
MakeDword(0x4BB9AC);
MakeComm(0x4BB9B0, "'+B4'");
MakeDword(0x4BB9B0);
MakeComm(0x4BB9B4, "'+B8'");
MakeDword(0x4BB9B4);
MakeComm(0x4BB9B8, "'+BC'");
MakeDword(0x4BB9B8);
MakeComm(0x4BB9BC, "'+C0'");
MakeDword(0x4BB9BC);
MakeComm(0x4BB9C0, "'+C4'");
MakeDword(0x4BB9C0);
MakeComm(0x4BB9C4, "'+C8'");
MakeDword(0x4BB9C4);
MakeComm(0x4BB9C8, "'+CC'");
MakeDword(0x4BB9C8);
MakeComm(0x4BB9CC, "'+D0'");
MakeDword(0x4BB9CC);
MakeComm(0x4BB9D0, "'+D4'");
MakeDword(0x4BB9D0);
MakeComm(0x4BB9D4, "'+D8'");
MakeDword(0x4BB9D4);
MakeComm(0x4BB9D8, "'+DC'");
MakeDword(0x4BB9D8);
MakeComm(0x4BB9DC, "'+E0'");
MakeDword(0x4BB9DC);
MakeUnkn(0x4BBA30, 1);
MakeNameEx(0x4BBA30, "RTTI_4BBA30_Class_TTabEditorView", 0);
MakeDword(0x4BBA30);
MakeUnkn(0x4BBA34, 1);
MakeNameEx(0x4BBA34, "", 0);
MakeByte(0x4BBA34);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4BBA35, 0x4BBA44);
MakeDword(0x4BBA44);
MakeDword(0x4BBA48);
MakeWord(0x4BBA4C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4BBA4E, 0x4BBA56);
MakeWord(0x4BBA56);
MakeUnkn(0x4BBA58, 1);
MakeNameEx(0x4BBA58, "TTabContainer.Create", 0x20);
MakeComm(0x4BBA58, "'constructor TTabContainer.Create(AOwner:TComponent);'");
MakeCode(0x4BBA58);
MakeCode(0x4BBA66);
MakeComm(0x4BBA73, "'TTabContainer.FControlStyle:TControlStyle'");
MakeComm(0x4BBA76, "'0x1'");
MakeComm(0x4BBA7C, "'TTabContainer.FControlStyle:TControlStyle'");
MakeCode(0x4BBA94);
MakeFunction(0x4BBA58, 0x4BBA99);
MakeByte(0x4BBA9C);
MakeUnkn(0x4BBA9C, 1);
MakeNameEx(0x4BBA9C, "gvar_004BBA9C", 0);
MakeUnkn(0x4BBAA0, 1);
MakeNameEx(0x4BBAA0, "TTabContainer.CreateParams", 0x20);
MakeComm(0x4BBAA0, "'procedure TTabContainer.CreateParams(var Params:TCreateParams);'");
MakeCode(0x4BBAA0);
MakeComm(0x4BBAAA, "'TCreateParams.ExStyle:DWORD'");
MakeComm(0x4BBAB1, "'TCreateParams.WindowClass:TWndClass'");
MakeFunction(0x4BBAA0, 0x4BBAB7);
MakeUnkn(0x4BBAB8, 1);
MakeNameEx(0x4BBAB8, "TTabRulerParent.CreateParams", 0x20);
MakeComm(0x4BBAB8, "'procedure TTabRulerParent.CreateParams(var Params:TCreateParams);'");
MakeCode(0x4BBAB8);
MakeComm(0x4BBAC2, "'TCreateParams.WindowClass:TWndClass'");
MakeFunction(0x4BBAB8, 0x4BBAC8);
MakeUnkn(0x4BBAC8, 1);
MakeNameEx(0x4BBAC8, "TTabRuler.Create", 0x20);
MakeComm(0x4BBAC8, "'constructor TTabRuler.Create(AOwner:TComponent);'");
MakeCode(0x4BBAC8);
MakeCode(0x4BBAD6);
MakeCode(0x4BBB10);
MakeFunction(0x4BBAC8, 0x4BBB15);
MakeUnkn(0x4BBB18, 1);
MakeNameEx(0x4BBB18, "TTabRuler.CreateParams", 0x20);
MakeComm(0x4BBB18, "'procedure TTabRuler.CreateParams(var Params:TCreateParams);'");
MakeCode(0x4BBB18);
MakeComm(0x4BBB22, "'TCreateParams.WindowClass:TWndClass'");
MakeFunction(0x4BBB18, 0x4BBB28);
MakeUnkn(0x4BBB28, 1);
MakeNameEx(0x4BBB28, "TTabRuler.WMEraseBkgnd", 0x20);
MakeComm(0x4BBB28, "'procedure TTabRuler.WMEraseBkgnd(Message:TWMEraseBkgnd);'");
MakeCode(0x4BBB28);
MakeComm(0x4BBB3D, "'TWinControl.GetClientRect'");
MakeComm(0x4BBBC5, "'TTabRuler.FColor:TColor'");
MakeFunction(0x4BBB28, 0x4BBBF5);
MakeCode(0x4BBBF8);
MakeCode(0x4BBCBA);
MakeCode(0x4BBCCE);
MakeCode(0x4BBCEA);
MakeCode(0x4BBCF4);
MakeCode(0x4BBCFE);
MakeCode(0x4BBD08);
MakeCode(0x4BBD12);
MakeCode(0x4BBD1A);
MakeCode(0x4BBD46);
MakeCode(0x4BBD59);
MakeCode(0x4BBD6A);
MakeCode(0x4BBD86);
MakeCode(0x4BBDB5);
MakeCode(0x4BBDC8);
MakeCode(0x4BBDD9);
MakeCode(0x4BBDF7);
MakeFunction(0x4BBBF8, 0x4BBDFF);
MakeCode(0x4BBE00);
MakeFunction(0x4BBE00, 0x4BBE48);
MakeCode(0x4BBE48);
MakeCode(0x4BBEE7);
MakeCode(0x4BBF76);
MakeCode(0x4BBF77);
MakeCode(0x4BBFAA);
MakeCode(0x4BBFD8);
MakeCode(0x4BC011);
MakeCode(0x4BC01E);
MakeCode(0x4BC0AF);
MakeCode(0x4BC0B9);
MakeCode(0x4BC0BA);
MakeCode(0x4BC0C7);
MakeFunction(0x4BBE48, 0x4BC0CF);
MakeCode(0x4BC0D0);
MakeFunction(0x4BC0D0, 0x4BC189);
MakeUnkn(0x4BC18C, 1);
MakeNameEx(0x4BC18C, "TTabScroller.sub_004BC18C", 0x20);
MakeComm(0x4BC18C, "'procedure TTabScroller.sub_004BC18C;'");
MakeCode(0x4BC18C);
MakeComm(0x4BC18C, "'TTabScroller.?f258:byte'");
MakeFunction(0x4BC18C, 0x4BC199);
MakeUnkn(0x4BC19C, 1);
MakeNameEx(0x4BC19C, "TTabScroller.WMTimer", 0x20);
MakeComm(0x4BC19C, "'procedure TTabScroller.WMTimer(?:?);'");
MakeCode(0x4BC19C);
MakeComm(0x4BC1A5, "'TTabScroller.?f250:byte'");
MakeCode(0x4BC1C2);
MakeFunction(0x4BC19C, 0x4BC1C4);
MakeCode(0x4BC1C4);
MakeCode(0x4BC208);
MakeCode(0x4BC231);
MakeCode(0x4BC271);
MakeFunction(0x4BC1C4, 0x4BC275);
MakeUnkn(0x4BC278, 1);
MakeNameEx(0x4BC278, "TTabScroller.CreateParams", 0x20);
MakeComm(0x4BC278, "'procedure TTabScroller.CreateParams(var Params:TCreateParams);'");
MakeCode(0x4BC278);
MakeComm(0x4BC282, "'TCreateParams.WindowClass:TWndClass'");
MakeFunction(0x4BC278, 0x4BC288);
MakeUnkn(0x4BC288, 1);
MakeNameEx(0x4BC288, "TTabScroller.CreateWnd", 0x20);
MakeComm(0x4BC288, "'procedure TTabScroller.CreateWnd;'");
MakeCode(0x4BC288);
MakeComm(0x4BC28B, "'TTabScroller.?f258:byte'");
MakeComm(0x4BC292, "'TTabScroller.?f250:byte'");
MakeFunction(0x4BC288, 0x4BC2AB);
MakeUnkn(0x4BC2AC, 1);
MakeNameEx(0x4BC2AC, "TTabScroller.AlignControls", 0x20);
MakeComm(0x4BC2AC, "'procedure TTabScroller.AlignControls(AControl:TControl; var Rect:TRect);'");
MakeCode(0x4BC2AC);
MakeComm(0x4BC2BF, "'TTabScroller.?f25C:TTabEditorView'");
MakeFunction(0x4BC2AC, 0x4BC2D5);
MakeUnkn(0x4BC2D8, 1);
MakeNameEx(0x4BC2D8, "TTabScroller.WMNCMouseMove", 0x20);
MakeComm(0x4BC2D8, "'procedure TTabScroller.WMNCMouseMove(?:?);'");
MakeCode(0x4BC2D8);
MakeComm(0x4BC2E4, "'TWinControl.DefaultHandler'");
MakeCode(0x4BC2F4);
MakeFunction(0x4BC2D8, 0x4BC2F7);
MakeUnkn(0x4BC2F8, 1);
MakeNameEx(0x4BC2F8, "TTabScroller.WMHScroll", 0x20);
MakeComm(0x4BC2F8, "'procedure TTabScroller.WMHScroll(Message:TWMCommand);'");
MakeCode(0x4BC2F8);
MakeComm(0x4BC2FF, "'TTabScroller.?f25C:TTabEditorView'");
MakeComm(0x4BC305, "'TTabEditorView.?f498:dword'");
MakeCode(0x4BC33F);
MakeCode(0x4BC343);
MakeComm(0x4BC34A, "'TTabEditorView.?f524:dword'");
MakeCode(0x4BC34A);
MakeComm(0x4BC356, "'TTabEditorView.?f524:dword'");
MakeCode(0x4BC356);
MakeCode(0x4BC362);
MakeCode(0x4BC370);
MakeCode(0x4BC374);
MakeCode(0x4BC382);
MakeCode(0x4BC386);
MakeCode(0x4BC3AD);
MakeComm(0x4BC3AF, "'TTabScroller.?f25C:TTabEditorView'");
MakeFunction(0x4BC2F8, 0x4BC3C0);
MakeCode(0x4BC3C0);
MakeCode(0x4BC3EE);
MakeCode(0x4BC3F4);
MakeFunction(0x4BC3C0, 0x4BC418);
MakeUnkn(0x4BC418, 1);
MakeNameEx(0x4BC418, "TTabScroller.WMVScroll", 0x20);
MakeComm(0x4BC418, "'procedure TTabScroller.WMVScroll(Message:TWMHScroll);'");
MakeCode(0x4BC418);
MakeComm(0x4BC41C, "'TTabScroller.?f25C:TTabEditorView'");
MakeComm(0x4BC422, "'TTabEditorView.Top:Integer'");
MakeCode(0x4BC457);
MakeCode(0x4BC45B);
MakeCode(0x4BC462);
MakeCode(0x4BC467);
MakeCode(0x4BC46C);
MakeCode(0x4BC477);
MakeCode(0x4BC482);
MakeCode(0x4BC486);
MakeFunction(0x4BC418, 0x4BC492);
MakeCode(0x4BC494);
MakeCode(0x4BC4C1);
MakeCode(0x4BC4C7);
MakeFunction(0x4BC494, 0x4BC4D5);
MakeCode(0x4BC4D8);
MakeCode(0x4BC4F5);
MakeCode(0x4BC502);
MakeFunction(0x4BC4D8, 0x4BC511);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4BC51C, -1);
MakeDword(0x4BC518);
MakeDword(0x4BC514);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4BC530, -1);
MakeDword(0x4BC52C);
MakeDword(0x4BC528);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4BC544, -1);
MakeDword(0x4BC540);
MakeDword(0x4BC53C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4BC560, -1);
MakeDword(0x4BC55C);
MakeDword(0x4BC558);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4BC570, -1);
MakeDword(0x4BC56C);
MakeDword(0x4BC568);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4BC57C, -1);
MakeDword(0x4BC578);
MakeDword(0x4BC574);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4BC58C, -1);
MakeDword(0x4BC588);
MakeDword(0x4BC584);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4BC5A0, -1);
MakeDword(0x4BC59C);
MakeDword(0x4BC598);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4BC5B4, -1);
MakeDword(0x4BC5B0);
MakeDword(0x4BC5AC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4BC5CC, -1);
MakeDword(0x4BC5C8);
MakeDword(0x4BC5C4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4BC5E8, -1);
MakeDword(0x4BC5E4);
MakeDword(0x4BC5E0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4BC608, -1);
MakeDword(0x4BC604);
MakeDword(0x4BC600);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4BC61C, -1);
MakeDword(0x4BC618);
MakeDword(0x4BC614);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4BC638, -1);
MakeDword(0x4BC634);
MakeDword(0x4BC630);
MakeCode(0x4BC64C);
MakeComm(0x4BC665, "'TTabDocument.?fA8:dword'");
MakeComm(0x4BC66F, "'TTabDocument.?fB1:byte'");
MakeComm(0x4BC6A8, "'TTabDocument.?fB2:byte'");
MakeCode(0x4BC6A8);
MakeCode(0x4BC6EE);
MakeCode(0x4BC72F);
MakeCode(0x4BC73C);
MakeCode(0x4BC74A);
MakeCode(0x4BC74F);
MakeFunction(0x4BC64C, 0x4BC757);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4BC760, -1);
MakeDword(0x4BC75C);
MakeDword(0x4BC758);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4BC774, -1);
MakeDword(0x4BC770);
MakeDword(0x4BC76C);
MakeCode(0x4BC77C);
MakeCode(0x4BC7C9);
MakeCode(0x4BC7D6);
MakeCode(0x4BC7DF);
MakeCode(0x4BC7E4);
MakeFunction(0x4BC77C, 0x4BC7EA);
MakeCode(0x4BC7EC);
MakeFunction(0x4BC7EC, 0x4BC815);
MakeUnkn(0x4BC818, 1);
MakeNameEx(0x4BC818, "TTabView.Create", 0x20);
MakeComm(0x4BC818, "'constructor TTabView.Create(AOwner:TComponent);'");
MakeCode(0x4BC818);
MakeCode(0x4BC82A);
MakeComm(0x4BC844, "'TVirtualMemory.Create'");
MakeComm(0x4BC84B, "'TTabView.?f260:TVirtualMemory'");
MakeComm(0x4BC851, "'TVirtualMemory.....:dword'");
MakeComm(0x4BC854, "'TTabView.?f4AC:dword'");
MakeCode(0x4BC85C);
MakeComm(0x4BC868, "'TVirtualMemory.Create'");
MakeComm(0x4BC87C, "'TTabView.?fD4C:dword'");
MakeComm(0x4BC882, "'TTabView.?fD50:dword'");
MakeComm(0x4BC88C, "'TTabView.?fD48:dword'");
MakeCode(0x4BC898);
MakeComm(0x4BC8B4, "'TTabView.?f4F4:dword'");
MakeComm(0x4BC8C6, "'TTabView.?f4F4:dword'");
MakeComm(0x4BC8E0, "'TFont.Create'");
MakeComm(0x4BC8E5, "'TTabView.?fDD8:TFont'");
MakeComm(0x4BC902, "'TTimer.Create'");
MakeComm(0x4BC909, "'TTabView.?fD3C:TTimer'");
MakeComm(0x4BC918, "'TTabView.?fD3C:TTimer'");
MakeComm(0x4BC92E, "'TTabView.?fD3C:TTimer'");
MakeCode(0x4BC950);
MakeFunction(0x4BC818, 0x4BC957);
MakeUnkn(0x4BC958, 1);
MakeNameEx(0x4BC958, "TTabView.Destroy", 0x20);
MakeComm(0x4BC958, "'destructor TTabView.Destroy;'");
MakeCode(0x4BC958);
MakeComm(0x4BC977, "'TTabView.?fDD8:TFont'");
MakeCode(0x4BC987);
MakeComm(0x4BC999, "'TTabView.?f260:TVirtualMemory'");
MakeCode(0x4BC9AF);
MakeFunction(0x4BC958, 0x4BC9B3);
MakeCode(0x4BC9B4);
MakeComm(0x4BC9B7, "'TTabEditorView.?f258:TTabDocument'");
MakeComm(0x4BC9C4, "'TTabEditorView.?f258:TTabDocument'");
MakeComm(0x4BC9CA, "'TTabDocument.?f38:dword'");
MakeComm(0x4BC9D0, "'TTabEditorView.?f260:TVirtualMemory'");
MakeComm(0x4BC9DB, "'TTabEditorView.?f258:TTabDocument'");
MakeComm(0x4BC9E1, "'TTabDocument.?f38:dword'");
MakeComm(0x4BC9E7, "'TTabEditorView.?f4AC:dword'");
MakeComm(0x4BC9F4, "'TTabEditorView.?f258:TTabDocument'");
MakeComm(0x4BC9FA, "'TTabDocument.?f38:dword'");
MakeComm(0x4BC9FD, "'TTabEditorView.?f4B0:dword'");
MakeFunction(0x4BC9B4, 0x4BCA05);
MakeCode(0x4BCA08);
MakeFunction(0x4BCA08, 0x4BCA09);
MakeCode(0x4BCA0C);
MakeComm(0x4BCA0F, "'TTabView.?f4F4:dword'");
MakeComm(0x4BCA1C, "'TTabView.?f500:dword'");
MakeComm(0x4BCA22, "'TTabView.FFont:TFont'");
MakeComm(0x4BCA2A, "'TTabView.?f508:dword'");
MakeComm(0x4BCA30, "'TTabView.?fDD8:TFont'");
MakeComm(0x4BCA3F, "'TWinControl.Invalidate'");
MakeComm(0x4BCA45, "'TTabView.?fDD4:TTabScroller'");
MakeComm(0x4BCA4F, "'TTabView.FColor:TColor'");
MakeComm(0x4BCA57, "'TTabView.?fDD0:TTabRuler'");
MakeCode(0x4BCA57);
MakeComm(0x4BCA61, "'TTabView.FColor:TColor'");
MakeCode(0x4BCA69);
MakeFunction(0x4BCA0C, 0x4BCA6B);
MakeCode(0x4BCA6C);
MakeComm(0x4BCA9C, "'TTabView.FFont:TFont'");
MakeComm(0x4BCAAF, "'TTabView.FFont:TFont'");
MakeComm(0x4BCAC2, "'TTabView.?fDE0:dword'");
MakeComm(0x4BCACB, "'TTabView.?fDDC:Integer'");
MakeComm(0x4BCAD4, "'TTabView.?fDE0:dword'");
MakeComm(0x4BCADD, "'TTabView.?fDE4:dword'");
MakeComm(0x4BCAE6, "'TTabView.?fDE0:dword'");
MakeComm(0x4BCAEF, "'TTabView.?fDE8:dword'");
MakeComm(0x4BCB00, "'TTabView.?fDD8:TFont'");
MakeComm(0x4BCB16, "'TTabView.?fDD8:TFont'");
MakeComm(0x4BCB2C, "'TTabView.?fDF0:dword'");
MakeComm(0x4BCB38, "'TTabView.?fDEC:dword'");
MakeComm(0x4BCB41, "'TTabView.?fDDC:Integer'");
MakeCode(0x4BCB4E);
MakeComm(0x4BCB52, "'TTabView.?fDFC:dword'");
MakeComm(0x4BCB73, "'TTabView.?fDD8:TFont'");
MakeCode(0x4BCB8C);
MakeCode(0x4BCBBF);
MakeCode(0x4BCBD3);
MakeComm(0x4BCBDF, "'TTabView.?fDF8:dword'");
MakeComm(0x4BCBE8, "'TTabView.FFont:TFont'");
MakeCode(0x4BCBFE);
MakeCode(0x4BCC2F);
MakeCode(0x4BCC45);
MakeCode(0x4BCC65);
MakeComm(0x4BCC71, "'TTabView.?f524:dword'");
MakeCode(0x4BCC7E);
MakeCode(0x4BCC94);
MakeCode(0x4BCCB4);
MakeComm(0x4BCCC0, "'TTabView.?f528:dword'");
MakeCode(0x4BCCCC);
MakeCode(0x4BCD0A);
MakeCode(0x4BCD2A);
MakeCode(0x4BCD35);
MakeCode(0x4BCD4B);
MakeCode(0x4BCD6B);
MakeComm(0x4BCD7A, "'TTabView.?fDF4:dword'");
MakeCode(0x4BCD80);
MakeCode(0x4BCD8D);
MakeCode(0x4BCD99);
MakeCode(0x4BCD9E);
MakeComm(0x4BCDA3, "'TTabView.?f258:TTabDocument'");
MakeCode(0x4BCDB4);
MakeCode(0x4BCDC1);
MakeCode(0x4BCDCA);
MakeCode(0x4BCDCF);
MakeFunction(0x4BCA6C, 0x4BCDD8);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4BCDD8, 0x4BCDDA);
MakeCode(0x4BCDDC);
MakeComm(0x4BCDEE, "'TTabEditorView.?f518:dword'");
MakeComm(0x4BCE08, "'TTabEditorView.?f518:dword'");
MakeComm(0x4BCE1B, "'TTabEditorView.?f518:dword'");
MakeCode(0x4BCE23);
MakeComm(0x4BCE29, "'TTabEditorView.?f498:dword'");
MakeCode(0x4BCE29);
MakeComm(0x4BCE3F, "'TTabEditorView.?f498:dword'");
MakeCode(0x4BCE3F);
MakeComm(0x4BCE45, "'TTabEditorView.?f498:dword'");
MakeComm(0x4BCE4B, "'TTabEditorView.?fDD4:TTabScroller'");
MakeComm(0x4BCE57, "'TTabEditorView.?f498:dword'");
MakeComm(0x4BCE6D, "'TTabEditorView.?f51C:byte'");
MakeCode(0x4BCE6D);
MakeCode(0x4BCE83);
MakeComm(0x4BCE8B, "'TTabEditorView.?fD2D:byte'");
MakeCode(0x4BCE9D);
MakeComm(0x4BCEA5, "'TWinControl.GetClientRect'");
MakeComm(0x4BCEA8, "'TTabEditorView.?fDF4:dword'");
MakeComm(0x4BCEB6, "'TTabEditorView.?fDD0:TTabRuler'");
MakeComm(0x4BCEBE, "'TWinControl.GetClientRect'");
MakeComm(0x4BCEC1, "'TTabEditorView.?fDF4:dword'");
MakeCode(0x4BCED6);
MakeComm(0x4BCEEA, "'TTabEditorView.?fDD0:TTabRuler'");
MakeComm(0x4BCF06, "'TTabEditorView.?fDD0:TTabRuler'");
MakeCode(0x4BCF17);
MakeComm(0x4BCF31, "'TTabEditorView.?fDD0:TTabRuler'");
MakeCode(0x4BCF31);
MakeCode(0x4BCF4F);
MakeComm(0x4BCF5F, "'TTabEditorView.?fD2D:byte'");
MakeCode(0x4BCF5F);
MakeComm(0x4BCF6D, "'TTabEditorView.?f498:dword'");
MakeComm(0x4BCF88, "'TTabEditorView.?fDF4:dword'");
MakeComm(0x4BCFAE, "'TTabEditorView.?fDD0:TTabRuler'");
MakeCode(0x4BCFAE);
MakeComm(0x4BCFBA, "'TWinControl.Update'");
MakeCode(0x4BCFC0);
MakeComm(0x4BCFC4, "'TWinControl.Update'");
MakeComm(0x4BCFD3, "'TTabEditorView.?f51C:byte'");
MakeCode(0x4BCFE9);
MakeFunction(0x4BCDDC, 0x4BCFF1);
MakeCode(0x4BCFF4);
MakeCode(0x4BD024);
MakeFunction(0x4BCFF4, 0x4BD065);
MakeCode(0x4BD068);
MakeComm(0x4BD068, "'TTabEditorView.?f258:TTabDocument'");
MakeComm(0x4BD06E, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4BD07B, "'TTabEditorView.?f4A4:dword'");
MakeComm(0x4BD084, "'TTabEditorView.?f4A4:dword'");
MakeComm(0x4BD08A, "'TTabEditorView.?f4A4:dword'");
MakeCode(0x4BD08A);
MakeComm(0x4BD093, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4BD0A3, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4BD0B1, "'TTabEditorView.?f4A4:dword'");
MakeComm(0x4BD0B7, "'TTabEditorView.?f4A4:dword'");
MakeCode(0x4BD0B7);
MakeComm(0x4BD0C0, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4BD0D2, "'TTabEditorView.?f4A4:dword'");
MakeFunction(0x4BD068, 0x4BD0D9);
MakeCode(0x4BD0DC);
MakeComm(0x4BD0E3, "'TTabEditorView.?f258:TTabDocument'");
MakeComm(0x4BD0E9, "'TTabDocument.?f60:dword'");
MakeCode(0x4BD0F7);
MakeComm(0x4BD112, "'TTabEditorView.?f258:TTabDocument'");
MakeCode(0x4BD112);
MakeComm(0x4BD118, "'TTabDocument.?f60:dword'");
MakeCode(0x4BD123);
MakeComm(0x4BD130, "'TTabEditorView.?f258:TTabDocument'");
MakeCode(0x4BD178);
MakeCode(0x4BD17C);
MakeFunction(0x4BD0DC, 0x4BD182);
MakeCode(0x4BD184);
MakeComm(0x4BD18B, "'TTabView.?f258:TTabDocument'");
MakeComm(0x4BD193, "'TTabDocument.?f60:dword'");
MakeComm(0x4BD1A5, "'TTabView.?f2A0:byte'");
MakeCode(0x4BD1A5);
MakeComm(0x4BD1D6, "'TTabView.?fDFC:dword'");
MakeCode(0x4BD1D6);
MakeComm(0x4BD1FA, "'TTabView.?fDE4:dword'");
MakeComm(0x4BD200, "'TTabView.?fDDC:Integer'");
MakeCode(0x4BD200);
MakeCode(0x4BD20D);
MakeCode(0x4BD22D);
MakeComm(0x4BD23B, "'TTabView.?fDDC:Integer'");
MakeComm(0x4BD252, "'TTabView.?fDEC:dword'");
MakeComm(0x4BD269, "'TTabView.?fDE4:dword'");
MakeCode(0x4BD26F);
MakeComm(0x4BD286, "'TTabView.?fDFC:dword'");
MakeCode(0x4BD28C);
MakeCode(0x4BD296);
MakeComm(0x4BD298, "'TTabView.?f4A8:dword'");
MakeComm(0x4BD2C0, "'TWinControl.Invalidate'");
MakeFunction(0x4BD184, 0x4BD2D5);
MakeCode(0x4BD2D8);
MakeCode(0x4BD2E8);
MakeFunction(0x4BD2D8, 0x4BD2FD);
MakeCode(0x4BD300);
MakeCode(0x4BD32E);
MakeCode(0x4BD34F);
MakeFunction(0x4BD300, 0x4BD355);
MakeCode(0x4BD358);
MakeCode(0x4BD376);
MakeCode(0x4BD384);
MakeFunction(0x4BD358, 0x4BD395);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4BD3A0, -1);
MakeDword(0x4BD39C);
MakeDword(0x4BD398);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4BD3C8, -1);
MakeDword(0x4BD3C4);
MakeDword(0x4BD3C0);
MakeCode(0x4BD3DC);
MakeCode(0x4BD423);
MakeCode(0x4BD42D);
MakeCode(0x4BD467);
MakeCode(0x4BD473);
MakeCode(0x4BD47A);
MakeFunction(0x4BD3DC, 0x4BD482);
MakeCode(0x4BD484);
MakeCode(0x4BD4FB);
MakeCode(0x4BD542);
MakeComm(0x4BD55B, "'0x1'");
MakeCode(0x4BD55B);
MakeCode(0x4BD573);
MakeCode(0x4BD57C);
MakeCode(0x4BD5B4);
MakeCode(0x4BD5D2);
MakeCode(0x4BD5FF);
MakeCode(0x4BD609);
MakeCode(0x4BD62B);
MakeCode(0x4BD655);
MakeCode(0x4BD667);
MakeCode(0x4BD675);
MakeCode(0x4BD67B);
MakeCode(0x4BD6A7);
MakeCode(0x4BD6B2);
MakeCode(0x4BD6F2);
MakeCode(0x4BD711);
MakeCode(0x4BD757);
MakeCode(0x4BD78A);
MakeCode(0x4BD7A3);
MakeCode(0x4BD7AF);
MakeCode(0x4BD7D4);
MakeCode(0x4BD829);
MakeCode(0x4BD82D);
MakeCode(0x4BD83B);
MakeCode(0x4BD846);
MakeCode(0x4BD84F);
MakeCode(0x4BD861);
MakeCode(0x4BD89D);
MakeCode(0x4BD924);
MakeCode(0x4BD985);
MakeCode(0x4BD9C8);
MakeCode(0x4BDA18);
MakeCode(0x4BDA22);
MakeCode(0x4BDA2F);
MakeCode(0x4BDA3D);
MakeCode(0x4BDA4B);
MakeCode(0x4BDA57);
MakeCode(0x4BDA65);
MakeCode(0x4BDA73);
MakeCode(0x4BDA7F);
MakeCode(0x4BDAC4);
MakeCode(0x4BDAF8);
MakeCode(0x4BDB2C);
MakeCode(0x4BDB53);
MakeCode(0x4BDB76);
MakeCode(0x4BDB7B);
MakeCode(0x4BDBC1);
MakeCode(0x4BDC0C);
MakeCode(0x4BDC1B);
MakeCode(0x4BDC32);
MakeCode(0x4BDC49);
MakeCode(0x4BDC4F);
MakeCode(0x4BDC83);
MakeCode(0x4BDCA0);
MakeCode(0x4BDCBB);
MakeCode(0x4BDD12);
MakeCode(0x4BDD17);
MakeCode(0x4BDD26);
MakeCode(0x4BDD5B);
MakeCode(0x4BDD72);
MakeCode(0x4BDD81);
MakeCode(0x4BDD93);
MakeCode(0x4BDD9A);
MakeCode(0x4BDDBB);
MakeCode(0x4BDDC0);
MakeFunction(0x4BD484, 0x4BDE25);
MakeByte(0x4BDE28);
MakeUnkn(0x4BDE28, 1);
MakeNameEx(0x4BDE28, "gvar_004BDE28", 0);
MakeCode(0x4BDE2C);
MakeCode(0x4BDE4D);
MakeFunction(0x4BDE2C, 0x4BDE55);
MakeCode(0x4BDE58);
MakeCode(0x4BDE9D);
MakeCode(0x4BDEB2);
MakeCode(0x4BDEF1);
MakeCode(0x4BDF02);
MakeCode(0x4BDF3F);
MakeCode(0x4BDF6B);
MakeCode(0x4BDF7B);
MakeCode(0x4BDF81);
MakeCode(0x4BDFA8);
MakeCode(0x4BDFBA);
MakeCode(0x4BDFCC);
MakeCode(0x4BDFD9);
MakeCode(0x4BDFE8);
MakeCode(0x4BDFE9);
MakeCode(0x4BDFEE);
MakeCode(0x4BE017);
MakeFunction(0x4BDE58, 0x4BE01E);
MakeCode(0x4BE020);
MakeFunction(0x4BE020, 0x4BE055);
MakeCode(0x4BE058);
MakeFunction(0x4BE058, 0x4BE082);
MakeCode(0x4BE084);
MakeCode(0x4BE0B7);
MakeFunction(0x4BE084, 0x4BE0BA);
MakeCode(0x4BE0BC);
MakeFunction(0x4BE0BC, 0x4BE0F4);
MakeCode(0x4BE0F4);
MakeCode(0x4BE13C);
MakeComm(0x4BE14F, "'0x4'");
MakeCode(0x4BE14F);
MakeCode(0x4BE182);
MakeCode(0x4BE187);
MakeCode(0x4BE1A2);
MakeCode(0x4BE1A7);
MakeCode(0x4BE1AB);
MakeCode(0x4BE1B1);
MakeCode(0x4BE1CF);
MakeFunction(0x4BE0F4, 0x4BE1DB);
MakeByte(0x4BE1DC);
MakeUnkn(0x4BE1DC, 1);
MakeNameEx(0x4BE1DC, "gvar_004BE1DC", 0);
MakeCode(0x4BE1E0);
MakeFunction(0x4BE1E0, 0x4BE20F);
MakeCode(0x4BE210);
MakeCode(0x4BE2E7);
MakeCode(0x4BE2ED);
MakeFunction(0x4BE210, 0x4BE2F4);
MakeCode(0x4BE2F4);
MakeCode(0x4BE3B7);
MakeCode(0x4BE3C4);
MakeCode(0x4BE3D3);
MakeCode(0x4BE3E2);
MakeCode(0x4BE3E3);
MakeCode(0x4BE3E8);
MakeFunction(0x4BE2F4, 0x4BE3EE);
MakeCode(0x4BE3F0);
MakeCode(0x4BE414);
MakeComm(0x4BE417, "'TTabEditorView.......................................FCanvas:TCanvas'");
MakeComm(0x4BE42B, "'TTabEditorView........................................FCanvas:TCanvas'");
MakeComm(0x4BE44B, "'TTabEditorView.?fD2E:byte'");
MakeComm(0x4BE458, "'TTabEditorView.?f49C:dword'");
MakeCode(0x4BE466);
MakeComm(0x4BE469, "'TTabEditorView.?f258:TTabDocument'");
MakeComm(0x4BE46F, "'TTabDocument.?f60:dword'");
MakeCode(0x4BE47A);
MakeCode(0x4BE489);
MakeComm(0x4BE48C, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4BE497, "'TTabEditorView.?fD2E:byte'");
MakeCode(0x4BE4A0);
MakeCode(0x4BE4A9);
MakeFunction(0x4BE3F0, 0x4BE4B1);
MakeCode(0x4BE4B4);
MakeCode(0x4BE5A8);
MakeFunction(0x4BE4B4, 0x4BE5B0);
MakeCode(0x4BE5B0);
MakeCode(0x4BE5FE);
MakeCode(0x4BE69C);
MakeCode(0x4BE6C9);
MakeCode(0x4BE76A);
MakeCode(0x4BE787);
MakeCode(0x4BE7AB);
MakeCode(0x4BE7B9);
MakeCode(0x4BE7C8);
MakeCode(0x4BE7D7);
MakeCode(0x4BE7E4);
MakeCode(0x4BE82A);
MakeCode(0x4BE835);
MakeCode(0x4BE853);
MakeCode(0x4BE862);
MakeCode(0x4BE871);
MakeCode(0x4BE884);
MakeCode(0x4BE891);
MakeCode(0x4BE8B0);
MakeCode(0x4BE8C3);
MakeCode(0x4BE8D4);
MakeCode(0x4BE8EA);
MakeCode(0x4BE930);
MakeCode(0x4BE93B);
MakeCode(0x4BE945);
MakeCode(0x4BE952);
MakeCode(0x4BE95F);
MakeCode(0x4BE968);
MakeCode(0x4BE96D);
MakeFunction(0x4BE5B0, 0x4BE978);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4BE980, -1);
MakeDword(0x4BE97C);
MakeDword(0x4BE978);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4BE98C, -1);
MakeDword(0x4BE988);
MakeDword(0x4BE984);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4BE998, -1);
MakeDword(0x4BE994);
MakeDword(0x4BE990);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4BE9A4, -1);
MakeDword(0x4BE9A0);
MakeDword(0x4BE99C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4BE9B0, -1);
MakeDword(0x4BE9AC);
MakeDword(0x4BE9A8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4BE9BC, -1);
MakeDword(0x4BE9B8);
MakeDword(0x4BE9B4);
MakeCode(0x4BE9C0);
MakeFunction(0x4BE9C0, 0x4BE9E4);
MakeCode(0x4BE9E4);
MakeFunction(0x4BE9E4, 0x4BEA10);
MakeCode(0x4BEA10);
MakeFunction(0x4BEA10, 0x4BEA56);
MakeCode(0x4BEA58);
MakeCode(0x4BEADA);
MakeCode(0x4BEAEF);
MakeFunction(0x4BEA58, 0x4BEAF8);
MakeCode(0x4BEAF8);
MakeCode(0x4BEB73);
MakeCode(0x4BEB99);
MakeCode(0x4BEBE1);
MakeCode(0x4BEBFA);
MakeCode(0x4BEC20);
MakeCode(0x4BEC25);
MakeCode(0x4BEC45);
MakeCode(0x4BEC60);
MakeCode(0x4BEC6A);
MakeCode(0x4BEC8D);
MakeCode(0x4BECB5);
MakeComm(0x4BECE0, "'0x1'");
MakeCode(0x4BED10);
MakeCode(0x4BED76);
MakeCode(0x4BEDB7);
MakeCode(0x4BEDD0);
MakeCode(0x4BEDED);
MakeCode(0x4BEE14);
MakeCode(0x4BEE1E);
MakeComm(0x4BEE29, "'0x1'");
MakeCode(0x4BEE61);
MakeCode(0x4BEE73);
MakeCode(0x4BEE90);
MakeCode(0x4BEEE2);
MakeCode(0x4BEEF4);
MakeCode(0x4BEEFF);
MakeCode(0x4BEF56);
MakeCode(0x4BEF66);
MakeCode(0x4BEF96);
MakeCode(0x4BEFA3);
MakeCode(0x4BEFCE);
MakeCode(0x4BF019);
MakeCode(0x4BF069);
MakeCode(0x4BF087);
MakeCode(0x4BF0A1);
MakeCode(0x4BF1E1);
MakeCode(0x4BF1FC);
MakeCode(0x4BF262);
MakeCode(0x4BF2C6);
MakeCode(0x4BF343);
MakeCode(0x4BF4CA);
MakeCode(0x4BF51C);
MakeCode(0x4BF51F);
MakeCode(0x4BF52B);
MakeCode(0x4BF54A);
MakeCode(0x4BF569);
MakeCode(0x4BF584);
MakeCode(0x4BF5D6);
MakeCode(0x4BF659);
MakeCode(0x4BF6B5);
MakeCode(0x4BF6D0);
MakeCode(0x4BF737);
MakeCode(0x4BF793);
MakeCode(0x4BF79D);
MakeCode(0x4BF7F1);
MakeCode(0x4BF84D);
MakeCode(0x4BF857);
MakeCode(0x4BF85A);
MakeCode(0x4BF86A);
MakeCode(0x4BF874);
MakeCode(0x4BF881);
MakeCode(0x4BF88A);
MakeCode(0x4BF88F);
MakeFunction(0x4BEAF8, 0x4BF89A);
MakeByte(0x4BF89C);
MakeUnkn(0x4BF89C, 1);
MakeNameEx(0x4BF89C, "gvar_004BF89C", 0);
MakeCode(0x4BF8A0);
MakeComm(0x4BF8A9, "'TTabView.?f51C:byte'");
MakeComm(0x4BF8B8, "'TTabView.?f4A0:dword'");
MakeComm(0x4BF8BE, "'TTabView.?f49C:dword'");
MakeComm(0x4BF8CB, "'TTabView.?f4A0:dword'");
MakeComm(0x4BF8D4, "'TTabView.?f49C:dword'");
MakeComm(0x4BF8E6, "'TTabView.?f520:dword'");
MakeComm(0x4BF8F7, "'TTabView.?f4A0:dword'");
MakeCode(0x4BF8F7);
MakeComm(0x4BF8FD, "'TTabView.?f49C:dword'");
MakeComm(0x4BF90C, "'TTabView.?f4A0:dword'");
MakeComm(0x4BF915, "'TTabView.?f49C:dword'");
MakeComm(0x4BF93F, "'TTabView.?f520:dword'");
MakeCode(0x4BF93F);
MakeComm(0x4BF947, "'TTabView.?f4A4:dword'");
MakeCode(0x4BF947);
MakeComm(0x4BF957, "'TTabView.?f49C:dword'");
MakeComm(0x4BF96A, "'TTabView.?f49C:dword'");
MakeCode(0x4BF96A);
MakeComm(0x4BF97D, "'TTabView.?f49C:dword'");
MakeCode(0x4BF97D);
MakeComm(0x4BF98E, "'TTabView.?fDDC:Integer'");
MakeCode(0x4BF99C);
MakeCode(0x4BF9BA);
MakeFunction(0x4BF8A0, 0x4BF9BF);
MakeCode(0x4BF9C0);
MakeComm(0x4BF9C0, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4BF9C6, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4BF9CC, "'TTabEditorView.?f258:TTabDocument'");
MakeFunction(0x4BF9C0, 0x4BF9D8);
MakeCode(0x4BF9D8);
MakeCode(0x4BF9E0);
MakeComm(0x4BF9FA, "'TTabEditorView.?f2A0:byte'");
MakeComm(0x4BFA07, "'TTabEditorView.?f258:TTabDocument'");
MakeComm(0x4BFA1D, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4BFA8A, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4BFA97, "'TTabEditorView.?f4A0:dword'");
MakeCode(0x4BFAC0);
MakeComm(0x4BFAC4, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4BFAD1, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4BFAE6, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4BFAF3, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4BFB34, "'TTabEditorView.?f4A4:dword'");
MakeCode(0x4BFB34);
MakeComm(0x4BFB3E, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4BFB4B, "'TTabEditorView.?f4A0:dword'");
MakeCode(0x4BFB60);
MakeCode(0x4BFB65);
MakeCode(0x4BFB77);
MakeCode(0x4BFBC1);
MakeComm(0x4BFBC6, "'TTabEditorView.?f4A4:dword'");
MakeComm(0x4BFBD0, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4BFBDA, "'TTabEditorView.?f4A4:dword'");
MakeCode(0x4BFC6D);
MakeComm(0x4BFC75, "'TTabDocument.?f4C:string'");
MakeComm(0x4BFC7B, "'TTabDocument.?f4C:string'");
MakeComm(0x4BFC8B, "'TTabDocument.?f50:string'");
MakeComm(0x4BFC99, "'TTabDocument.?f50:string'");
MakeComm(0x4BFCA9, "'TTabDocument.?f58:string'");
MakeCode(0x4BFCA9);
MakeComm(0x4BFCB7, "'TTabDocument.?f58:string'");
MakeCode(0x4BFCC7);
MakeCode(0x4BFCDF);
MakeCode(0x4BFCEC);
MakeCode(0x4BFD0A);
MakeCode(0x4BFD0F);
MakeFunction(0x4BF9D8, 0x4BFD18);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4BFD20, -1);
MakeDword(0x4BFD1C);
MakeDword(0x4BFD18);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4BFD34, -1);
MakeDword(0x4BFD30);
MakeDword(0x4BFD2C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4BFD44, -1);
MakeDword(0x4BFD40);
MakeDword(0x4BFD3C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4BFD54, -1);
MakeDword(0x4BFD50);
MakeDword(0x4BFD4C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4BFD60, -1);
MakeDword(0x4BFD5C);
MakeDword(0x4BFD58);
MakeCode(0x4BFD64);
MakeComm(0x4BFD67, "'TTabView.?f51C:byte'");
MakeComm(0x4BFD70, "'TTabView.?f4A0:dword'");
MakeComm(0x4BFD76, "'TTabView.?f49C:dword'");
MakeComm(0x4BFD83, "'TTabView.?f4A0:dword'");
MakeComm(0x4BFD8C, "'TTabView.?f49C:dword'");
MakeComm(0x4BFD9E, "'TTabView.?f520:dword'");
MakeComm(0x4BFDA4, "'TTabView.?fDDC:Integer'");
MakeComm(0x4BFDAB, "'TTabView.?f520:dword'");
MakeCode(0x4BFDC1);
MakeFunction(0x4BFD64, 0x4BFDC3);
MakeCode(0x4BFDC4);
MakeCode(0x4BFDEB);
MakeCode(0x4BFE0F);
MakeFunction(0x4BFDC4, 0x4BFE11);
MakeCode(0x4BFE14);
MakeFunction(0x4BFE14, 0x4BFE2A);
MakeUnkn(0x4BFE2C, 1);
MakeNameEx(0x4BFE2C, "TTabView.WMDestroy", 0x20);
MakeComm(0x4BFE2C, "'procedure TTabView.WMDestroy(var Message:TWMDestroy);'");
MakeCode(0x4BFE2C);
MakeComm(0x4BFE2C, "'TTabView.?f25C:byte'");
MakeFunction(0x4BFE2C, 0x4BFE39);
MakeUnkn(0x4BFE3C, 1);
MakeNameEx(0x4BFE3C, "TTabView.sub_004BFE3C", 0x20);
MakeComm(0x4BFE3C, "'procedure TTabView.sub_004BFE3C;'");
MakeCode(0x4BFE3C);
MakeComm(0x4BFE3C, "'TTabView.?f25C:byte'");
MakeComm(0x4BFE43, "'TTabView.?f25D:byte'");
MakeFunction(0x4BFE3C, 0x4BFE52);
MakeUnkn(0x4BFE54, 1);
MakeNameEx(0x4BFE54, "TTabView.WMSetFocus", 0x20);
MakeComm(0x4BFE54, "'procedure TTabView.WMSetFocus(var Message:TWMSetFocus);'");
MakeCode(0x4BFE54);
MakeFunction(0x4BFE54, 0x4BFE67);
MakeUnkn(0x4BFE68, 1);
MakeNameEx(0x4BFE68, "TTabView.WMWindowPosChangedMsg", 0x20);
MakeComm(0x4BFE68, "'procedure TTabView.WMWindowPosChangedMsg(Message:TWMWindowPosChanged);'");
MakeCode(0x4BFE68);
MakeComm(0x4BFE6E, "'TTabView.?f2A0:byte'");
MakeComm(0x4BFE7E, "'TTabView.?f2B0:Integer'");
MakeComm(0x4BFE8B, "'TTabView.?f2B4:Integer'");
MakeCode(0x4BFE91);
MakeComm(0x4BFE9A, "'TTabView.?fDD0:TTabRuler'");
MakeCode(0x4BFEB4);
MakeFunction(0x4BFE68, 0x4BFEB7);
MakeUnkn(0x4BFEB8, 1);
MakeNameEx(0x4BFEB8, "TTabView.WMKillFocus", 0x20);
MakeComm(0x4BFEB8, "'procedure TTabView.WMKillFocus(var Message:TWMSetFocus);'");
MakeCode(0x4BFEB8);
MakeFunction(0x4BFEB8, 0x4BFECB);
MakeUnkn(0x4BFECC, 1);
MakeNameEx(0x4BFECC, "TTabView.WMGetDlgCode", 0x20);
MakeComm(0x4BFECC, "'procedure TTabView.WMGetDlgCode(?:?);'");
MakeCode(0x4BFECC);
MakeComm(0x4BFED3, "'TWinControl.DefaultHandler'");
MakeFunction(0x4BFECC, 0x4BFEDC);
MakeCode(0x4BFEDC);
MakeCode(0x4BFEFB);
MakeCode(0x4BFF25);
MakeFunction(0x4BFEDC, 0x4BFF29);
MakeUnkn(0x4BFF2C, 1);
MakeNameEx(0x4BFF2C, "TTabView.sub_004BFF2C", 0x20);
MakeComm(0x4BFF2C, "'procedure TTabView.sub_004BFF2C;'");
MakeCode(0x4BFF2C);
MakeComm(0x4BFF37, "'TTabView.?fD44:dword'");
MakeComm(0x4BFF4C, "'TTabView.?fD40:TPlayer'");
MakeComm(0x4BFF5E, "'TTabView.?f258:TTabDocument'");
MakeComm(0x4BFF69, "'TTabView.?fD48:dword'");
MakeCode(0x4BFF77);
MakeCode(0x4BFF7B);
MakeCode(0x4BFF7D);
MakeComm(0x4BFF81, "'TTabView.?fD48:dword'");
MakeComm(0x4BFF87, "'TTabView.?fD4C:dword'");
MakeComm(0x4BFF8D, "'TTabView.?fD50:dword'");
MakeCode(0x4BFFA0);
MakeComm(0x4BFFA7, "'TTabView.?fD40:TPlayer'");
MakeCode(0x4BFFDE);
MakeComm(0x4BFFF5, "'TTabView.?fD40:TPlayer'");
MakeCode(0x4C0026);
MakeCode(0x4C003A);
MakeCode(0x4C005D);
MakeComm(0x4C0068, "'0x2'");
MakeCode(0x4C0068);
MakeComm(0x4C0074, "'TTabView.?f49C:dword'");
MakeComm(0x4C007A, "'TTabView.?f258:TTabDocument'");
MakeComm(0x4C0087, "'0xC'");
MakeCode(0x4C00B5);
MakeFunction(0x4BFF2C, 0x4C00BD);
MakeByte(0x4C00C0);
MakeUnkn(0x4C00C0, 1);
MakeNameEx(0x4C00C0, "gvar_004C00C0", 0);
MakeByte(0x4C00C4);
MakeUnkn(0x4C00C4, 1);
MakeNameEx(0x4C00C4, "gvar_004C00C4", 0);
MakeUnkn(0x4C00C8, 1);
MakeNameEx(0x4C00C8, "TTabView.sub_004C00C8", 0x20);
MakeComm(0x4C00C8, "'procedure TTabView.sub_004C00C8;'");
MakeCode(0x4C00C8);
MakeFunction(0x4C00C8, 0x4C00CE);
MakeUnkn(0x4C00D0, 1);
MakeNameEx(0x4C00D0, "TTabView.sub_004C00D0", 0x20);
MakeComm(0x4C00D0, "'procedure TTabView.sub_004C00D0(?:?);'");
MakeCode(0x4C00D0);
MakeComm(0x4C0100, "'TTabView.?fD40:TPlayer'");
MakeComm(0x4C0134, "'Exception.Create'");
MakeCode(0x4C013E);
MakeCode(0x4C014B);
MakeCode(0x4C0159);
MakeCode(0x4C015E);
MakeFunction(0x4C00D0, 0x4C0167);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C0170, -1);
MakeDword(0x4C016C);
MakeDword(0x4C0168);
MakeUnkn(0x4C018C, 1);
MakeNameEx(0x4C018C, "TTabView.sub_004C018C", 0x20);
MakeComm(0x4C018C, "'procedure TTabView.sub_004C018C(?:?);'");
MakeCode(0x4C018C);
MakeFunction(0x4C018C, 0x4C019D);
MakeCode(0x4C01A0);
MakeComm(0x4C01B0, "'TTabEditorView.?fD30:byte'");
MakeComm(0x4C01C9, "'TTabEditorView.?fD30:byte'");
MakeFunction(0x4C01A0, 0x4C01D7);
MakeCode(0x4C01D8);
MakeComm(0x4C01E2, "'TTabEditorView.?fD30:byte'");
MakeFunction(0x4C01D8, 0x4C01FB);
MakeCode(0x4C01FC);
MakeComm(0x4C020C, "'TTabView.?fDD4:TTabScroller'");
MakeCode(0x4C0225);
MakeComm(0x4C0237, "'TTabView.?fD2D:byte'");
MakeCode(0x4C0237);
MakeComm(0x4C0240, "'TTabView.?fDF4:dword'");
MakeCode(0x4C024B);
MakeComm(0x4C0250, "'TTabView.?f2B0:Integer'");
MakeCode(0x4C0250);
MakeComm(0x4C025F, "'TTabView.?f524:dword'");
MakeCode(0x4C0278);
MakeComm(0x4C0282, "'TTabView.?f258:TTabDocument'");
MakeComm(0x4C02A4, "'TTabView.?f4AC:dword'");
MakeCode(0x4C02C3);
MakeCode(0x4C02D2);
MakeCode(0x4C02F5);
MakeComm(0x4C0304, "'TTabView.?f498:dword'");
MakeCode(0x4C0304);
MakeCode(0x4C0313);
MakeFunction(0x4C01FC, 0x4C031C);
MakeCode(0x4C031C);
MakeCode(0x4C0341);
MakeCode(0x4C0348);
MakeComm(0x4C035F, "'TWinControl.Focused'");
MakeCode(0x4C0374);
MakeCode(0x4C0378);
MakeCode(0x4C037A);
MakeCode(0x4C037E);
MakeComm(0x4C038C, "'TTabView.?f258:TTabDocument'");
MakeCode(0x4C038C);
MakeComm(0x4C0392, "'TTabView.?f49C:dword'");
MakeCode(0x4C03A7);
MakeCode(0x4C03A9);
MakeCode(0x4C03B6);
MakeCode(0x4C03B8);
MakeCode(0x4C03D2);
MakeComm(0x4C03E5, "'TTabView.?f49C:dword'");
MakeComm(0x4C03EB, "'TTabView.?f258:TTabDocument'");
MakeComm(0x4C03F6, "'TTabView.?fD48:dword'");
MakeComm(0x4C03FC, "'TTabView.?f258:TTabDocument'");
MakeComm(0x4C0402, "'TTabView.?f49C:dword'");
MakeComm(0x4C0415, "'TTabView.?fD40:TPlayer'");
MakeComm(0x4C0420, "'TTabView.?f4A0:dword'");
MakeCode(0x4C0420);
MakeComm(0x4C0435, "'TTabView.?f4A0:dword'");
MakeComm(0x4C0446, "'TTabView.?fD30:byte'");
MakeComm(0x4C044F, "'TTabView.?f258:TTabDocument'");
MakeComm(0x4C0455, "'TTabView.?f49C:dword'");
MakeComm(0x4C0466, "'TTabView.?fD34:dword'");
MakeComm(0x4C046C, "'TTabView.?f258:TTabDocument'");
MakeCode(0x4C046C);
MakeComm(0x4C0472, "'TTabView.?f49C:dword'");
MakeComm(0x4C048A, "'TTabView.?fD38:dword'");
MakeCode(0x4C0492);
MakeComm(0x4C0499, "'TTabView.?fD38:dword'");
MakeComm(0x4C049F, "'TTabView.?fD34:dword'");
MakeCode(0x4C049F);
MakeComm(0x4C04A5, "'TTabView.?fD38:dword'");
MakeComm(0x4C04AE, "'TTabView.?fD30:byte'");
MakeComm(0x4C04B6, "'TTabView.?fD30:byte'");
MakeCode(0x4C04C3);
MakeCode(0x4C04EF);
MakeComm(0x4C051C, "'TTabView.?f49C:dword'");
MakeComm(0x4C0522, "'TTabView.?f258:TTabDocument'");
MakeComm(0x4C052F, "'TTabView.?f4A0:dword'");
MakeComm(0x4C0535, "'TTabView.?f49C:dword'");
MakeComm(0x4C053B, "'TTabView.?f258:TTabDocument'");
MakeCode(0x4C054F);
MakeComm(0x4C0555, "'TTabView.?f258:TTabDocument'");
MakeComm(0x4C055B, "'TTabView.?f49C:dword'");
MakeComm(0x4C0565, "'TTabView.?f4A0:dword'");
MakeCode(0x4C0584);
MakeComm(0x4C058D, "'TTabView.?fDD0:TTabRuler'");
MakeComm(0x4C0597, "'TTabView.?f4A0:dword'");
MakeComm(0x4C05AC, "'TTabView.?f4A0:dword'");
MakeComm(0x4C05B2, "'TTabView.?fDD0:TTabRuler'");
MakeCode(0x4C05BD);
MakeComm(0x4C05C3, "'TTabView.?fDD4:TTabScroller'");
MakeComm(0x4C05CC, "'TTabView.?f49C:dword'");
MakeComm(0x4C05DD, "'TTabView.?f49C:dword'");
MakeComm(0x4C05F5, "'TTabView.?fDD4:TTabScroller'");
MakeCode(0x4C0600);
MakeFunction(0x4C031C, 0x4C060F);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C0618, -1);
MakeDword(0x4C0614);
MakeDword(0x4C0610);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C0640, -1);
MakeDword(0x4C063C);
MakeDword(0x4C0638);
MakeCode(0x4C0654);
MakeComm(0x4C0659, "'TTabView.?f258:TTabDocument'");
MakeComm(0x4C065F, "'TTabDocument.?f38:dword'");
MakeCode(0x4C066A);
MakeComm(0x4C0677, "'TTabView.?fDD0:TTabRuler'");
MakeCode(0x4C0677);
MakeComm(0x4C0683, "'TWinControl.Invalidate'");
MakeCode(0x4C0689);
MakeComm(0x4C068D, "'TWinControl.Invalidate'");
MakeComm(0x4C0693, "'TTabView.?f25D:byte'");
MakeFunction(0x4C0654, 0x4C06A7);
MakeCode(0x4C06A8);
MakeCode(0x4C07DE);
MakeCode(0x4C07EB);
MakeCode(0x4C07FA);
MakeCode(0x4C0809);
MakeCode(0x4C0817);
MakeCode(0x4C081C);
MakeCode(0x4C081E);
MakeFunction(0x4C06A8, 0x4C0824);
MakeCode(0x4C0824);
MakeCode(0x4C085F);
MakeCode(0x4C0867);
MakeCode(0x4C0880);
MakeCode(0x4C0894);
MakeCode(0x4C08A9);
MakeFunction(0x4C0824, 0x4C08B2);
MakeCode(0x4C08B4);
MakeCode(0x4C08EB);
MakeCode(0x4C08F3);
MakeCode(0x4C08FB);
MakeCode(0x4C0912);
MakeFunction(0x4C08B4, 0x4C0919);
MakeCode(0x4C091C);
MakeComm(0x4C092B, "'TTabView.?f25D:byte'");
MakeComm(0x4C094A, "'TTabView.?f258:TTabDocument'");
MakeComm(0x4C0950, "'TTabDocument.?f38:dword'");
MakeCode(0x4C095B);
MakeComm(0x4C0962, "'TTabView.?f4AC:dword'");
MakeComm(0x4C096F, "'TTabView.?f498:dword'");
MakeComm(0x4C0981, "'TTabView.?f4AC:dword'");
MakeCode(0x4C0994);
MakeCode(0x4C0997);
MakeCode(0x4C099B);
MakeComm(0x4C09A7, "'TTabView.?f498:dword'");
MakeComm(0x4C09B9, "'TTabView.?f4AC:dword'");
MakeComm(0x4C09D1, "'TTabView.?f4AC:dword'");
MakeComm(0x4C09E1, "'TTabView.?f4AC:dword'");
MakeComm(0x4C09FB, "'TTabView.?f4AC:dword'");
MakeComm(0x4C0A0B, "'TTabView.?f4AC:dword'");
MakeComm(0x4C0A1C, "'TTabView.?fDD0:TTabRuler'");
MakeCode(0x4C0A3D);
MakeCode(0x4C0A57);
MakeComm(0x4C0A5E, "'TTabView.?fDD0:TTabRuler'");
MakeCode(0x4C0A7F);
MakeCode(0x4C0A95);
MakeComm(0x4C0A98, "'TTabView.?fDD0:TTabRuler'");
MakeCode(0x4C0AB5);
MakeCode(0x4C0AC9);
MakeComm(0x4C0ACC, "'TTabView.?fDD0:TTabRuler'");
MakeComm(0x4C0AD8, "'TWinControl.Update'");
MakeCode(0x4C0ADE);
MakeComm(0x4C0AE3, "'TWinControl.Update'");
MakeFunction(0x4C091C, 0x4C0AFA);
MakeCode(0x4C0AFC);
MakeComm(0x4C0B06, "'TTabEditorView.?f25C:byte'");
MakeComm(0x4C0B29, "'TTabEditorView.?f25C:byte'");
MakeComm(0x4C0B30, "'TTabEditorView.?f25D:byte'");
MakeCode(0x4C0B30);
MakeFunction(0x4C0AFC, 0x4C0B42);
MakeCode(0x4C0B44);
MakeComm(0x4C0B4B, "'TTabEditorView.?f258:TTabDocument'");
MakeComm(0x4C0B51, "'TTabDocument.?f38:dword'");
MakeCode(0x4C0B5A);
MakeCode(0x4C0B67);
MakeFunction(0x4C0B44, 0x4C0B6B);
MakeCode(0x4C0B6C);
MakeFunction(0x4C0B6C, 0x4C0B91);
MakeCode(0x4C0B94);
MakeComm(0x4C0BA1, "'TTabEditorView.?f258:TTabDocument'");
MakeFunction(0x4C0B94, 0x4C0BB9);
MakeCode(0x4C0BBC);
MakeComm(0x4C0BCA, "'TTabEditorView.?f258:TTabDocument'");
MakeComm(0x4C0BDC, "'TTabEditorView.?f258:TTabDocument'");
MakeCode(0x4C0BF3);
MakeCode(0x4C0C00);
MakeFunction(0x4C0BBC, 0x4C0C08);
MakeCode(0x4C0C08);
MakeFunction(0x4C0C08, 0x4C0C1A);
MakeCode(0x4C0C1C);
MakeFunction(0x4C0C1C, 0x4C0C22);
MakeCode(0x4C0C24);
MakeComm(0x4C0C27, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4C0C2D, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C0C33, "'TTabEditorView.?f258:TTabDocument'");
MakeFunction(0x4C0C24, 0x4C0C49);
MakeCode(0x4C0C4C);
MakeComm(0x4C0C50, "'TTabEditorView.?fDD0:TTabRuler'");
MakeCode(0x4C0C6B);
MakeFunction(0x4C0C4C, 0x4C0C6E);
MakeCode(0x4C0C70);
MakeCode(0x4C0C95);
MakeCode(0x4C0CC6);
MakeCode(0x4C0CE2);
MakeFunction(0x4C0C70, 0x4C0CEE);
MakeCode(0x4C0CF0);
MakeCode(0x4C0D53);
MakeCode(0x4C0D88);
MakeCode(0x4C0D8C);
MakeCode(0x4C0D8E);
MakeCode(0x4C0DC8);
MakeCode(0x4C0DFF);
MakeCode(0x4C0E2A);
MakeCode(0x4C0E42);
MakeCode(0x4C0E76);
MakeCode(0x4C0E80);
MakeFunction(0x4C0CF0, 0x4C0E89);
MakeCode(0x4C0E8C);
MakeCode(0x4C0EF7);
MakeCode(0x4C0F09);
MakeCode(0x4C0F10);
MakeComm(0x4C0F16, "'0x43'");
MakeComm(0x4C0F29, "'0x3'");
MakeCode(0x4C0F29);
MakeCode(0x4C0F3A);
MakeCode(0x4C0F56);
MakeFunction(0x4C0E8C, 0x4C0F5E);
MakeByte(0x4C0F60);
MakeUnkn(0x4C0F60, 1);
MakeNameEx(0x4C0F60, "gvar_004C0F60", 0);
MakeByte(0x4C0F64);
MakeUnkn(0x4C0F64, 1);
MakeNameEx(0x4C0F64, "gvar_004C0F64", 0);
MakeCode(0x4C0F68);
MakeComm(0x4C0F7D, "'TTabEditorView.?fD40:TPlayer'");
MakeCode(0x4C0FA5);
MakeComm(0x4C0FA8, "'TTabEditorView.?f258:TTabDocument'");
MakeCode(0x4C0FBC);
MakeComm(0x4C0FE1, "'TTabEditorView.?fD40:TPlayer'");
MakeComm(0x4C1009, "'Exception.Create'");
MakeCode(0x4C1015);
MakeCode(0x4C1022);
MakeCode(0x4C1040);
MakeComm(0x4C1057, "'TPlayer.Create'");
MakeComm(0x4C105F, "'TTabEditorView.?fD40:TPlayer'");
MakeCode(0x4C1065);
MakeCode(0x4C106F);
MakeCode(0x4C1081);
MakeCode(0x4C1086);
MakeCode(0x4C1093);
MakeCode(0x4C1098);
MakeCode(0x4C10A6);
MakeComm(0x4C10B1, "'TTabEditorView.?fD4C:dword'");
MakeComm(0x4C10B7, "'TTabDocument.?f60:dword'");
MakeComm(0x4C10BE, "'TTabEditorView.?fD50:dword'");
MakeCode(0x4C10C6);
MakeComm(0x4C10C9, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C10D2, "'TTabEditorView.?fD4C:dword'");
MakeComm(0x4C10DB, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C10E4, "'TTabEditorView.?fD50:dword'");
MakeCode(0x4C10EA);
MakeComm(0x4C10ED, "'TTabEditorView.?fD48:dword'");
MakeCode(0x4C10F9);
MakeComm(0x4C111E, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C112B, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4C113B, "'TTabEditorView.?fD54:dword'");
MakeComm(0x4C1146, "'TTabEditorView.?fD40:TPlayer'");
MakeCode(0x4C11B1);
MakeComm(0x4C11B4, "'TTabEditorView.?fD3C:TTimer'");
MakeComm(0x4C11C4, "'TTabEditorView.?fD3C:TTimer'");
MakeCode(0x4C11D1);
MakeCode(0x4C11DB);
MakeCode(0x4C11F2);
MakeFunction(0x4C0F68, 0x4C11F9);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C1204, -1);
MakeDword(0x4C1200);
MakeDword(0x4C11FC);
MakeCode(0x4C124C);
MakeComm(0x4C1251, "'TTabView.?fD40:TPlayer'");
MakeComm(0x4C125F, "'TPlayer.?f744:byte'");
MakeComm(0x4C1271, "'TTabView.?fD48:dword'");
MakeComm(0x4C127B, "'TTabView.?fD4C:dword'");
MakeComm(0x4C1281, "'TTabView.?fD50:dword'");
MakeCode(0x4C128C);
MakeCode(0x4C12BE);
MakeCode(0x4C12F0);
MakeCode(0x4C12F4);
MakeComm(0x4C12F6, "'TTabView.?fD4C:dword'");
MakeComm(0x4C12FC, "'TTabView.?fD50:dword'");
MakeComm(0x4C1355, "'TTabView.?fD40:TPlayer'");
MakeComm(0x4C135B, "'TPlayer.?f745:byte'");
MakeComm(0x4C1364, "'0x2'");
MakeComm(0x4C136C, "'TTabView.?fD54:dword'");
MakeComm(0x4C1372, "'TTabView.?f49C:dword'");
MakeComm(0x4C1378, "'TTabView.?f258:TTabDocument'");
MakeComm(0x4C1385, "'0x3'");
MakeCode(0x4C1393);
MakeComm(0x4C1399, "'TWinControl.Focused'");
MakeCode(0x4C13A9);
MakeFunction(0x4C124C, 0x4C13AD);
MakeByte(0x4C13B0);
MakeUnkn(0x4C13B0, 1);
MakeNameEx(0x4C13B0, "gvar_004C13B0", 0);
MakeByte(0x4C13B4);
MakeUnkn(0x4C13B4, 1);
MakeNameEx(0x4C13B4, "gvar_004C13B4", 0);
MakeCode(0x4C13B8);
MakeComm(0x4C13C2, "'TTabView.?fD40:TPlayer'");
MakeFunction(0x4C13B8, 0x4C13CF);
MakeCode(0x4C13D0);
MakeComm(0x4C13D0, "'TTabView.?fD40:TPlayer'");
MakeComm(0x4C13DA, "'TPlayer.?f744:byte'");
MakeComm(0x4C13E3, "'TPlayer.?f745:byte'");
MakeCode(0x4C13EC);
MakeCode(0x4C13EF);
MakeFunction(0x4C13D0, 0x4C13F2);
MakeCode(0x4C13F4);
MakeComm(0x4C140A, "'TTabEditorView.?fD30:byte'");
MakeComm(0x4C141A, "'TTabEditorView.?fD2E:byte'");
MakeComm(0x4C142B, "'TTabEditorView.?f258:TTabDocument'");
MakeComm(0x4C1431, "'TTabDocument.?f60:dword'");
MakeCode(0x4C143A);
MakeComm(0x4C143D, "'TTabEditorView.?f49C:dword'");
MakeCode(0x4C1449);
MakeCode(0x4C149E);
MakeCode(0x4C14C5);
MakeCode(0x4C14E4);
MakeComm(0x4C14F3, "'TTabEditorView.?f258:TTabDocument'");
MakeCode(0x4C1515);
MakeCode(0x4C1528);
MakeComm(0x4C152B, "'TTabEditorView.?f258:TTabDocument'");
MakeComm(0x4C1543, "'TTabEditorView.?f258:TTabDocument'");
MakeCode(0x4C156E);
MakeCode(0x4C1585);
MakeComm(0x4C1588, "'TTabEditorView.?f258:TTabDocument'");
MakeComm(0x4C15A0, "'TTabEditorView.?f258:TTabDocument'");
MakeCode(0x4C15CD);
MakeComm(0x4C15D0, "'TTabEditorView.?f258:TTabDocument'");
MakeComm(0x4C15E8, "'TTabEditorView.?f258:TTabDocument'");
MakeCode(0x4C1613);
MakeComm(0x4C162D, "'TTabEditorView.?f258:TTabDocument'");
MakeCode(0x4C1661);
MakeCode(0x4C168D);
MakeCode(0x4C16AF);
MakeCode(0x4C16E1);
MakeCode(0x4C16F0);
MakeCode(0x4C1723);
MakeComm(0x4C1726, "'TTabEditorView.?f258:TTabDocument'");
MakeComm(0x4C1776, "'TTabEditorView.?f258:TTabDocument'");
MakeCode(0x4C179A);
MakeCode(0x4C17B9);
MakeCode(0x4C17C3);
MakeCode(0x4C17DB);
MakeCode(0x4C17EB);
MakeFunction(0x4C13F4, 0x4C17F6);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C1800, -1);
MakeDword(0x4C17FC);
MakeDword(0x4C17F8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C1870, -1);
MakeDword(0x4C186C);
MakeDword(0x4C1868);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C1898, -1);
MakeDword(0x4C1894);
MakeDword(0x4C1890);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C18B4, -1);
MakeDword(0x4C18B0);
MakeDword(0x4C18AC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C1918, -1);
MakeDword(0x4C1914);
MakeDword(0x4C1910);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C1958, -1);
MakeDword(0x4C1954);
MakeDword(0x4C1950);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C19C0, -1);
MakeDword(0x4C19BC);
MakeDword(0x4C19B8);
MakeCode(0x4C1A28);
MakeComm(0x4C1A34, "'TTabEditorView.?fD30:byte'");
MakeComm(0x4C1A57, "'TTabEditorView.?fD2E:byte'");
MakeComm(0x4C1A62, "'TTabEditorView.?f258:TTabDocument'");
MakeComm(0x4C1A68, "'TTabDocument.?f60:dword'");
MakeComm(0x4C1A6E, "'TTabEditorView.?f49C:dword'");
MakeCode(0x4C1A6E);
MakeCode(0x4C1A78);
MakeComm(0x4C1A7C, "'TTabEditorView.?f258:TTabDocument'");
MakeCode(0x4C1A94);
MakeComm(0x4C1ADA, "'TTabEditorView.?f258:TTabDocument'");
MakeCode(0x4C1AF2);
MakeComm(0x4C1AF6, "'TTabEditorView.?f258:TTabDocument'");
MakeCode(0x4C1B11);
MakeCode(0x4C1B15);
MakeComm(0x4C1B1F, "'TTabEditorView.?f258:TTabDocument'");
MakeCode(0x4C1B40);
MakeCode(0x4C1B44);
MakeCode(0x4C1B54);
MakeCode(0x4C1B58);
MakeComm(0x4C1B62, "'TTabEditorView.?f258:TTabDocument'");
MakeCode(0x4C1B83);
MakeCode(0x4C1B87);
MakeComm(0x4C1BA2, "'TTabEditorView.?f258:TTabDocument'");
MakeComm(0x4C1BB7, "'TTabEditorView.?f258:TTabDocument'");
MakeCode(0x4C1BD6);
MakeCode(0x4C1BFE);
MakeComm(0x4C1C02, "'TTabEditorView.?f258:TTabDocument'");
MakeComm(0x4C1C16, "'TTabEditorView.?f258:TTabDocument'");
MakeCode(0x4C1C2A);
MakeCode(0x4C1C31);
MakeCode(0x4C1C35);
MakeComm(0x4C1C4D, "'TTabEditorView.?f258:TTabDocument'");
MakeCode(0x4C1C64);
MakeComm(0x4C1C72, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C1C82, "'TTabEditorView.?f4A0:dword'");
MakeCode(0x4C1C8E);
MakeComm(0x4C1C90, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4C1C96, "'TTabEditorView.?f258:TTabDocument'");
MakeComm(0x4C1C9C, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C1CBA, "'TTabEditorView.?f4A0:dword'");
MakeCode(0x4C1CBA);
MakeCode(0x4C1CC0);
MakeComm(0x4C1CDE, "'TTabEditorView.?f258:TTabDocument'");
MakeComm(0x4C1CF5, "'TTabEditorView.?f258:TTabDocument'");
MakeComm(0x4C1D04, "'TTabEditorView.?f258:TTabDocument'");
MakeComm(0x4C1D25, "'TTabEditorView.?f258:TTabDocument'");
MakeCode(0x4C1D40);
MakeComm(0x4C1D4B, "'TTabEditorView.?f258:TTabDocument'");
MakeCode(0x4C1D4B);
MakeCode(0x4C1D5D);
MakeFunction(0x4C1A28, 0x4C1D65);
MakeCode(0x4C1D68);
MakeComm(0x4C1D6A, "'TTabView.?fD30:byte'");
MakeComm(0x4C1D7E, "'TTabView.?fD34:dword'");
MakeCode(0x4C1D7E);
MakeComm(0x4C1D84, "'TTabView.?fD38:dword'");
MakeCode(0x4C1D94);
MakeCode(0x4C1D98);
MakeFunction(0x4C1D68, 0x4C1D9B);
MakeCode(0x4C1D9C);
MakeComm(0x4C1DB1, "'0x1'");
MakeComm(0x4C1DBE, "'TTabEditorView.?f258:TTabDocument'");
MakeComm(0x4C1DCE, "'0x2'");
MakeComm(0x4C1DDC, "'TTabEditorView.?f258:TTabDocument'");
MakeCode(0x4C1DFC);
MakeCode(0x4C1DFE);
MakeFunction(0x4C1D9C, 0x4C1E06);
MakeByte(0x4C1E08);
MakeUnkn(0x4C1E08, 1);
MakeNameEx(0x4C1E08, "gvar_004C1E08", 0);
MakeByte(0x4C1E0C);
MakeUnkn(0x4C1E0C, 1);
MakeNameEx(0x4C1E0C, "gvar_004C1E0C", 0);
MakeCode(0x4C1E10);
MakeFunction(0x4C1E10, 0x4C1E29);
MakeCode(0x4C1E64);
MakeComm(0x4C1E6A, "'TTabEditorView.?fD2E:byte'");
MakeComm(0x4C1E79, "'TTabEditorView.?fD2E:byte'");
MakeCode(0x4C1E86);
MakeFunction(0x4C1E64, 0x4C1E89);
MakeCode(0x4C1E8C);
MakeComm(0x4C1E8F, "'TTabEditorView.?fD2D:byte'");
MakeComm(0x4C1E97, "'TTabEditorView.?fD2D:byte'");
MakeComm(0x4C1E9D, "'TTabEditorView.?fDD0:TTabRuler'");
MakeComm(0x4C1EA9, "'TWinControl.Invalidate'");
MakeCode(0x4C1EAF);
MakeComm(0x4C1EB3, "'TWinControl.Invalidate'");
MakeCode(0x4C1EC2);
MakeFunction(0x4C1E8C, 0x4C1EC4);
MakeCode(0x4C1EC4);
MakeCode(0x4C1EE3);
MakeCode(0x4C1EF1);
MakeCode(0x4C1F68);
MakeCode(0x4C1F88);
MakeCode(0x4C1FCC);
MakeCode(0x4C1FE1);
MakeFunction(0x4C1EC4, 0x4C1FE5);
MakeCode(0x4C1FE8);
MakeCode(0x4C1FFB);
MakeCode(0x4C2017);
MakeFunction(0x4C1FE8, 0x4C201D);
MakeCode(0x4C2020);
MakeComm(0x4C2027, "'0x1'");
MakeFunction(0x4C2020, 0x4C2051);
MakeByte(0x4C2054);
MakeUnkn(0x4C2054, 1);
MakeNameEx(0x4C2054, "gvar_004C2054", 0);
MakeCode(0x4C2058);
MakeComm(0x4C2062, "'TTabEditorView.?f4B0:dword'");
MakeComm(0x4C207C, "'TTabEditorView.?f4AC:dword'");
MakeComm(0x4C2086, "'TTabEditorView.?f4AC:dword'");
MakeComm(0x4C2092, "'TTabEditorView.?f518:dword'");
MakeCode(0x4C2092);
MakeFunction(0x4C2058, 0x4C209E);
MakeCode(0x4C20A0);
MakeComm(0x4C20A0, "'TTabView.?fDD4:TTabScroller'");
MakeFunction(0x4C20A0, 0x4C20B2);
MakeUnkn(0x4C20B4, 1);
MakeNameEx(0x4C20B4, "TTabEditorView.Create", 0x20);
MakeComm(0x4C20B4, "'constructor TTabEditorView.Create(AOwner:TComponent);'");
MakeCode(0x4C20B4);
MakeCode(0x4C20C6);
MakeComm(0x4C20D4, "'0x2'");
MakeComm(0x4C20DB, "'TTabEditorView.FControlStyle:TControlStyle'");
MakeComm(0x4C20DE, "'TTabEditorView.FControlStyle:TControlStyle'");
MakeComm(0x4C20F3, "'TTimer.Create'");
MakeComm(0x4C20FA, "'TTabEditorView.......:TTimer'");
MakeComm(0x4C2109, "'TTabEditorView.......:TTimer'");
MakeComm(0x4C211F, "'TTabEditorView.......:TTimer'");
MakeCode(0x4C2141);
MakeFunction(0x4C20B4, 0x4C2148);
MakeByte(0x4C2148);
MakeUnkn(0x4C2148, 1);
MakeNameEx(0x4C2148, "gvar_004C2148", 0);
MakeUnkn(0x4C214C, 1);
MakeNameEx(0x4C214C, "TTabEditorView.CreateParams", 0x20);
MakeComm(0x4C214C, "'procedure TTabEditorView.CreateParams(var Params:TCreateParams);'");
MakeCode(0x4C214C);
MakeComm(0x4C2156, "'TCreateParams.WindowClass:TWndClass'");
MakeFunction(0x4C214C, 0x4C215C);
MakeCode(0x4C215C);
MakeCode(0x4C21A4);
MakeCode(0x4C21C9);
MakeFunction(0x4C215C, 0x4C21CC);
MakeCode(0x4C21CC);
MakeFunction(0x4C21CC, 0x4C2248);
MakeCode(0x4C2248);
MakeComm(0x4C224E, "'TTabEditorView.?f258:TTabDocument'");
MakeComm(0x4C2254, "'TTabDocument.?f60:dword'");
MakeCode(0x4C225F);
MakeCode(0x4C2277);
MakeCode(0x4C2290);
MakeCode(0x4C2294);
MakeCode(0x4C2296);
MakeFunction(0x4C2248, 0x4C229B);
MakeCode(0x4C229C);
MakeCode(0x4C22CA);
MakeCode(0x4C22E4);
MakeCode(0x4C2309);
MakeCode(0x4C235C);
MakeCode(0x4C2364);
MakeCode(0x4C2383);
MakeFunction(0x4C229C, 0x4C238B);
MakeCode(0x4C238C);
MakeComm(0x4C2396, "'TTabEditorView.........................................FCanvas:TCanvas'");
MakeComm(0x4C23B3, "'TTabEditorView.?fD4C:dword'");
MakeComm(0x4C23B9, "'TTabEditorView.?fD50:dword'");
MakeCode(0x4C23C4);
MakeCode(0x4C23DA);
MakeCode(0x4C23DE);
MakeFunction(0x4C238C, 0x4C23E9);
MakeCode(0x4C23EC);
MakeCode(0x4C2434);
MakeCode(0x4C2447);
MakeCode(0x4C2468);
MakeCode(0x4C24C5);
MakeCode(0x4C24E7);
MakeCode(0x4C24F1);
MakeFunction(0x4C23EC, 0x4C2509);
MakeCode(0x4C250C);
MakeCode(0x4C2597);
MakeCode(0x4C25A4);
MakeCode(0x4C25AA);
MakeCode(0x4C25AF);
MakeCode(0x4C25BC);
MakeCode(0x4C25C3);
MakeFunction(0x4C250C, 0x4C25C6);
MakeCode(0x4C25C8);
MakeCode(0x4C2611);
MakeCode(0x4C2613);
MakeCode(0x4C2658);
MakeCode(0x4C266B);
MakeCode(0x4C268B);
MakeCode(0x4C2697);
MakeComm(0x4C26AF, "'0x4'");
MakeCode(0x4C26AF);
MakeCode(0x4C26F8);
MakeCode(0x4C2700);
MakeCode(0x4C2715);
MakeCode(0x4C274F);
MakeCode(0x4C2755);
MakeCode(0x4C2760);
MakeCode(0x4C27A8);
MakeCode(0x4C27AC);
MakeCode(0x4C27D1);
MakeCode(0x4C280A);
MakeCode(0x4C283E);
MakeCode(0x4C2856);
MakeCode(0x4C28A1);
MakeCode(0x4C28B3);
MakeCode(0x4C28C0);
MakeCode(0x4C28D6);
MakeCode(0x4C28DB);
MakeFunction(0x4C25C8, 0x4C28E4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C28EC, -1);
MakeDword(0x4C28E8);
MakeDword(0x4C28E4);
MakeByte(0x4C2920);
MakeUnkn(0x4C2920, 1);
MakeNameEx(0x4C2920, "gvar_004C2920", 0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C292C, -1);
MakeDword(0x4C2928);
MakeDword(0x4C2924);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C2994, -1);
MakeDword(0x4C2990);
MakeDword(0x4C298C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C2A10, -1);
MakeDword(0x4C2A0C);
MakeDword(0x4C2A08);
MakeCode(0x4C2A54);
MakeCode(0x4C2A6C);
MakeCode(0x4C2A84);
MakeCode(0x4C2AC8);
MakeCode(0x4C2AF4);
MakeCode(0x4C2B35);
MakeFunction(0x4C2A54, 0x4C2B3A);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C2B44, -1);
MakeDword(0x4C2B40);
MakeDword(0x4C2B3C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C2B6C, -1);
MakeDword(0x4C2B68);
MakeDword(0x4C2B64);
MakeCode(0x4C2B80);
MakeCode(0x4C2BCC);
MakeCode(0x4C2BCE);
MakeCode(0x4C2C13);
MakeCode(0x4C2C26);
MakeCode(0x4C2C46);
MakeCode(0x4C2C52);
MakeComm(0x4C2C72, "'0x4'");
MakeCode(0x4C2C72);
MakeCode(0x4C2CB2);
MakeCode(0x4C2CD4);
MakeCode(0x4C2CFC);
MakeCode(0x4C2D0B);
MakeCode(0x4C2D27);
MakeCode(0x4C2D59);
MakeCode(0x4C2DA3);
MakeCode(0x4C2DAD);
MakeComm(0x4C2DDC, "'0x20'");
MakeCode(0x4C2DE8);
MakeCode(0x4C2E14);
MakeCode(0x4C2E54);
MakeCode(0x4C2E68);
MakeCode(0x4C2EA3);
MakeCode(0x4C2EAD);
MakeCode(0x4C2EBF);
MakeCode(0x4C2ECC);
MakeCode(0x4C2EE2);
MakeCode(0x4C2EE7);
MakeFunction(0x4C2B80, 0x4C2EF0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C2EF8, -1);
MakeDword(0x4C2EF4);
MakeDword(0x4C2EF0);
MakeByte(0x4C2F2C);
MakeUnkn(0x4C2F2C, 1);
MakeNameEx(0x4C2F2C, "gvar_004C2F2C", 0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C2F38, -1);
MakeDword(0x4C2F34);
MakeDword(0x4C2F30);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C2F9C, -1);
MakeDword(0x4C2F98);
MakeDword(0x4C2F94);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C2FFC, -1);
MakeDword(0x4C2FF8);
MakeDword(0x4C2FF4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C3050, -1);
MakeDword(0x4C304C);
MakeDword(0x4C3048);
MakeByte(0x4C3098);
MakeUnkn(0x4C3098, 1);
MakeNameEx(0x4C3098, "gvar_004C3098", 0);
MakeUnkn(0x4C309C, 1);
MakeNameEx(0x4C309C, "TTabEditorView.KeyDown", 0x20);
MakeComm(0x4C309C, "'procedure TTabEditorView.KeyDown(Key:Word; Shift:TShiftState);'");
MakeCode(0x4C309C);
MakeComm(0x4C30B0, "'TTabEditorView.?f258:TTabDocument'");
MakeCode(0x4C30EC);
MakeCode(0x4C3101);
MakeCode(0x4C3121);
MakeCode(0x4C3138);
MakeCode(0x4C314F);
MakeComm(0x4C3158, "'TTabEditorView.?f4A4:dword'");
MakeComm(0x4C316D, "'TTabEditorView.?f4A4:dword'");
MakeCode(0x4C3175);
MakeComm(0x4C3178, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C3189, "'TTabEditorView.?f4A4:dword'");
MakeComm(0x4C319C, "'TTabEditorView.?f4A4:dword'");
MakeCode(0x4C31A8);
MakeComm(0x4C31AF, "'TTabEditorView.?f4A4:dword'");
MakeCode(0x4C31B5);
MakeComm(0x4C31B8, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4C31BE, "'0x0'");
MakeCode(0x4C31D2);
MakeComm(0x4C31D5, "'TTabEditorView.?f4A4:dword'");
MakeComm(0x4C31E6, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C31FF, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C320F, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4C322E, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C3241, "'TTabEditorView.?f4A4:dword'");
MakeCode(0x4C324E);
MakeCode(0x4C325A);
MakeComm(0x4C325D, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C326D, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4C327C, "'TTabEditorView.?f4A4:dword'");
MakeComm(0x4C3297, "'TTabEditorView.?f4A4:dword'");
MakeComm(0x4C32AA, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C32CF, "'TTabEditorView.?f4A4:dword'");
MakeComm(0x4C32F0, "'TTabEditorView.?f4A4:dword'");
MakeComm(0x4C3308, "'TTabEditorView.?f49C:dword'");
MakeCode(0x4C3317);
MakeCode(0x4C3323);
MakeCode(0x4C3329);
MakeComm(0x4C334F, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C335F, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4C336E, "'TTabEditorView.?f4A4:dword'");
MakeComm(0x4C338D, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4C339C, "'TTabEditorView.?f4A4:dword'");
MakeComm(0x4C33AE, "'TTabEditorView.?f4A4:dword'");
MakeComm(0x4C33BB, "'TTabEditorView.?f4A4:dword'");
MakeCode(0x4C33C6);
MakeCode(0x4C33D3);
MakeCode(0x4C33D9);
MakeCode(0x4C33DE);
MakeComm(0x4C33F3, "'TTabEditorView.?f4A4:dword'");
MakeComm(0x4C33FC, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4C3402, "'0x0'");
MakeCode(0x4C3416);
MakeComm(0x4C3423, "'TTabEditorView.?f4A4:dword'");
MakeComm(0x4C3434, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C3445, "'TTabEditorView.?f4A4:dword'");
MakeCode(0x4C344D);
MakeComm(0x4C3450, "'TTabEditorView.?f4A4:dword'");
MakeComm(0x4C345D, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C3470, "'TTabEditorView.?f4A4:dword'");
MakeCode(0x4C347C);
MakeComm(0x4C3483, "'TTabEditorView.?f4A4:dword'");
MakeCode(0x4C3489);
MakeComm(0x4C348C, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4C3492, "'0x0'");
MakeCode(0x4C34A6);
MakeComm(0x4C34A9, "'TTabEditorView.?f4A4:dword'");
MakeComm(0x4C34B9, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C34C9, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4C34E8, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C34FB, "'TTabEditorView.?f4A4:dword'");
MakeCode(0x4C3508);
MakeCode(0x4C3514);
MakeComm(0x4C3517, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C3527, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4C3536, "'TTabEditorView.?f4A4:dword'");
MakeComm(0x4C3551, "'TTabEditorView.?f4A4:dword'");
MakeComm(0x4C3564, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C3589, "'TTabEditorView.?f4A4:dword'");
MakeComm(0x4C35AA, "'TTabEditorView.?f4A4:dword'");
MakeComm(0x4C35C2, "'TTabEditorView.?f49C:dword'");
MakeCode(0x4C35D1);
MakeCode(0x4C35DD);
MakeCode(0x4C35E3);
MakeComm(0x4C3609, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C3619, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4C3628, "'TTabEditorView.?f4A4:dword'");
MakeComm(0x4C3647, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4C3656, "'TTabEditorView.?f4A4:dword'");
MakeComm(0x4C3668, "'TTabEditorView.?f4A4:dword'");
MakeComm(0x4C3675, "'TTabEditorView.?f4A4:dword'");
MakeCode(0x4C3680);
MakeCode(0x4C368D);
MakeCode(0x4C3693);
MakeCode(0x4C3698);
MakeComm(0x4C36AD, "'TTabEditorView.?f4A4:dword'");
MakeComm(0x4C36B6, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4C36BC, "'0x0'");
MakeCode(0x4C36D0);
MakeComm(0x4C36D9, "'TTabEditorView.?f4A0:dword'");
MakeCode(0x4C36E2);
MakeComm(0x4C36ED, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4C36F6, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C370C, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C371E, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4C3724, "'0x2'");
MakeCode(0x4C3724);
MakeCode(0x4C373A);
MakeComm(0x4C373D, "'TTabEditorView.?f4A0:dword'");
MakeCode(0x4C3750);
MakeComm(0x4C375D, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C376F, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4C3783, "'TTabEditorView.?f49C:dword'");
MakeCode(0x4C3794);
MakeComm(0x4C3796, "'0x2'");
MakeCode(0x4C3796);
MakeCode(0x4C37AC);
MakeComm(0x4C37AE, "'0x0'");
MakeCode(0x4C37C2);
MakeComm(0x4C37CF, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C37E3, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C37F9, "'0x0'");
MakeComm(0x4C3804, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C3811, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4C3829, "'0x40'");
MakeCode(0x4C383D);
MakeComm(0x4C3840, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4C3846, "'0x0'");
MakeCode(0x4C385A);
MakeComm(0x4C3867, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C386D, "'TTabDocument.?f60:dword'");
MakeComm(0x4C3880, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C3896, "'0x0'");
MakeComm(0x4C38A1, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C38AE, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4C38C6, "'0x40'");
MakeCode(0x4C38DA);
MakeComm(0x4C38DD, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4C38E3, "'0x0'");
MakeCode(0x4C38F7);
MakeComm(0x4C38FA, "'TTabEditorView.?fD30:byte'");
MakeComm(0x4C390A, "'TTabEditorView.?fD2E:byte'");
MakeCode(0x4C3921);
MakeComm(0x4C392B, "'0x2'");
MakeCode(0x4C3941);
MakeComm(0x4C394E, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C395F, "'0x2'");
MakeCode(0x4C3970);
MakeCode(0x4C3989);
MakeCode(0x4C39A2);
MakeComm(0x4C39A5, "'TTabEditorView.?f4A4:dword'");
MakeCode(0x4C39D6);
MakeCode(0x4C39DE);
MakeFunction(0x4C309C, 0x4C39E4);
MakeByte(0x4C39E4);
MakeUnkn(0x4C39E4, 1);
MakeNameEx(0x4C39E4, "gvar_004C39E4", 0);
MakeByte(0x4C39E8);
MakeUnkn(0x4C39E8, 1);
MakeNameEx(0x4C39E8, "gvar_004C39E8", 0);
MakeByte(0x4C39EC);
MakeUnkn(0x4C39EC, 1);
MakeNameEx(0x4C39EC, "gvar_004C39EC", 0);
MakeCode(0x4C39F0);
MakeFunction(0x4C39F0, 0x4C39FD);
MakeCode(0x4C3A00);
MakeComm(0x4C3A27, "'TTabEditorView.?f258:TTabDocument'");
MakeCode(0x4C3A7D);
MakeComm(0x4C3A80, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C3A93, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4C3ACE, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C3AE1, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4C3AF9, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C3B0C, "'TTabEditorView.?f4A0:dword'");
MakeCode(0x4C3B23);
MakeCode(0x4C3B30);
MakeCode(0x4C3B36);
MakeCode(0x4C3B3B);
MakeCode(0x4C3B4A);
MakeComm(0x4C3B4D, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C3B60, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4C3B9B, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C3BAE, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4C3BC6, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C3BD9, "'TTabEditorView.?f4A0:dword'");
MakeCode(0x4C3BF0);
MakeCode(0x4C3BFD);
MakeCode(0x4C3C03);
MakeCode(0x4C3C08);
MakeCode(0x4C3C17);
MakeComm(0x4C3C2A, "'TTabDocument.?f30:dword'");
MakeCode(0x4C3C85);
MakeCode(0x4C3C94);
MakeComm(0x4C3CBA, "'TTabDocument.?f30:dword'");
MakeCode(0x4C3CC7);
MakeCode(0x4C3CD4);
MakeCode(0x4C3CDA);
MakeCode(0x4C3CDF);
MakeCode(0x4C3CEE);
MakeComm(0x4C3D14, "'TTabDocument.?f30:dword'");
MakeCode(0x4C3D23);
MakeCode(0x4C3D30);
MakeCode(0x4C3D36);
MakeCode(0x4C3D3B);
MakeCode(0x4C3D4A);
MakeComm(0x4C3D7B, "'TTabDocument.?f30:dword'");
MakeCode(0x4C3D8D);
MakeCode(0x4C3D91);
MakeCode(0x4C3D9E);
MakeCode(0x4C3DA4);
MakeCode(0x4C3DA9);
MakeCode(0x4C3DB8);
MakeComm(0x4C3DD1, "'TTabDocument.?f30:dword'");
MakeCode(0x4C3DDB);
MakeComm(0x4C3E01, "'TTabDocument.?f30:dword'");
MakeCode(0x4C3E10);
MakeCode(0x4C3E1D);
MakeCode(0x4C3E23);
MakeCode(0x4C3E28);
MakeCode(0x4C3E3E);
MakeCode(0x4C3E42);
MakeComm(0x4C3E53, "'TTabEditorView.?f4A4:dword'");
MakeCode(0x4C3E81);
MakeComm(0x4C3E84, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4C3E91, "'0x2'");
MakeCode(0x4C3EA0);
MakeComm(0x4C3EA3, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C3EB6, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4C3EC5, "'TTabEditorView.?f4A4:dword'");
MakeCode(0x4C3EF7);
MakeCode(0x4C3F04);
MakeCode(0x4C3F0A);
MakeCode(0x4C3F0F);
MakeCode(0x4C3F1E);
MakeCode(0x4C3F47);
MakeCode(0x4C3F54);
MakeCode(0x4C3F5A);
MakeCode(0x4C3F5F);
MakeCode(0x4C3F6E);
MakeCode(0x4C3F79);
MakeComm(0x4C3F7C, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C3F8F, "'TTabEditorView.?f4A0:dword'");
MakeCode(0x4C3FC5);
MakeCode(0x4C3FD2);
MakeCode(0x4C3FD8);
MakeCode(0x4C3FDD);
MakeCode(0x4C3FF1);
MakeCode(0x4C4014);
MakeCode(0x4C4021);
MakeCode(0x4C4027);
MakeCode(0x4C402C);
MakeCode(0x4C403E);
MakeComm(0x4C4041, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C4055, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4C4066, "'0x22'");
MakeCode(0x4C407A);
MakeCode(0x4C40C5);
MakeCode(0x4C40F1);
MakeCode(0x4C4126);
MakeCode(0x4C4144);
MakeComm(0x4C4147, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C415A, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4C4169, "'TTabEditorView.?f4A4:dword'");
MakeComm(0x4C4194, "'TTabEditorView.?f4A4:dword'");
MakeCode(0x4C419F);
MakeCode(0x4C41AC);
MakeCode(0x4C41B2);
MakeCode(0x4C41B7);
MakeCode(0x4C41CE);
MakeComm(0x4C41F6, "'TTabEditorView.?f4A4:dword'");
MakeCode(0x4C4200);
MakeCode(0x4C420D);
MakeCode(0x4C4213);
MakeCode(0x4C4218);
MakeCode(0x4C4237);
MakeComm(0x4C423A, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C424D, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4C4263, "'TTabEditorView.?f4A4:dword'");
MakeComm(0x4C428C, "'TTabEditorView.?f49C:dword'");
MakeCode(0x4C42A4);
MakeComm(0x4C42AD, "'TTabEditorView.?f4A4:dword'");
MakeComm(0x4C42D9, "'TTabEditorView.?f4A4:dword'");
MakeCode(0x4C42E2);
MakeCode(0x4C42EF);
MakeCode(0x4C42F5);
MakeCode(0x4C42FA);
MakeCode(0x4C430C);
MakeCode(0x4C4319);
MakeComm(0x4C431C, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C432F, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4C433E, "'TTabEditorView.?f4A4:dword'");
MakeComm(0x4C436C, "'TTabEditorView.?f4A4:dword'");
MakeCode(0x4C4376);
MakeCode(0x4C4383);
MakeCode(0x4C4389);
MakeCode(0x4C438E);
MakeCode(0x4C43AD);
MakeComm(0x4C43B0, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C43C3, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4C43D2, "'TTabEditorView.?f4A4:dword'");
MakeComm(0x4C4400, "'TTabEditorView.?f4A4:dword'");
MakeCode(0x4C440A);
MakeCode(0x4C4417);
MakeCode(0x4C441D);
MakeCode(0x4C4422);
MakeCode(0x4C4441);
MakeComm(0x4C4444, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C4457, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4C446F, "'TTabEditorView.?f4A4:dword'");
MakeComm(0x4C44A6, "'TTabEditorView.?f4A4:dword'");
MakeCode(0x4C44B0);
MakeCode(0x4C44BD);
MakeCode(0x4C44C3);
MakeCode(0x4C44C8);
MakeCode(0x4C44D7);
MakeComm(0x4C44E2, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C44F2, "'TTabEditorView.?f4A0:dword'");
MakeCode(0x4C450F);
MakeCode(0x4C451F);
MakeComm(0x4C4537, "'TTabEditorView.?f258:TTabDocument'");
MakeComm(0x4C4554, "'TTabEditorView.?f258:TTabDocument'");
MakeCode(0x4C4561);
MakeComm(0x4C4564, "'TTabEditorView.?f258:TTabDocument'");
MakeComm(0x4C4583, "'TTabEditorView.?f258:TTabDocument'");
MakeCode(0x4C458E);
MakeCode(0x4C4598);
MakeCode(0x4C459C);
MakeCode(0x4C45A9);
MakeCode(0x4C45BA);
MakeCode(0x4C45BF);
MakeFunction(0x4C3A00, 0x4C45CB);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C45D4, -1);
MakeDword(0x4C45D0);
MakeDword(0x4C45CC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C45F8, -1);
MakeDword(0x4C45F4);
MakeDword(0x4C45F0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C4614, -1);
MakeDword(0x4C4610);
MakeDword(0x4C460C);
MakeByte(0x4C464C);
MakeUnkn(0x4C464C, 1);
MakeNameEx(0x4C464C, "gvar_004C464C", 0);
MakeByte(0x4C4650);
MakeUnkn(0x4C4650, 1);
MakeNameEx(0x4C4650, "gvar_004C4650", 0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C465C, -1);
MakeDword(0x4C4658);
MakeDword(0x4C4654);
MakeUnkn(0x4C4694, 1);
MakeNameEx(0x4C4694, "TTabEditorView.KeyPress", 0x20);
MakeComm(0x4C4694, "'procedure TTabEditorView.KeyPress(Key:Char);'");
MakeCode(0x4C4694);
MakeCode(0x4C46AB);
MakeFunction(0x4C4694, 0x4C46AE);
MakeUnkn(0x4C46B0, 1);
MakeNameEx(0x4C46B0, "TTabEditorView.MouseDown", 0x20);
MakeComm(0x4C46B0, "'procedure TTabEditorView.MouseDown(Button:TMouseButton; Shift:TShiftState; X:Integer; Y:Integer);'");
MakeCode(0x4C46B0);
MakeCode(0x4C46C9);
MakeComm(0x4C46CD, "'TWinControl.SetFocus'");
MakeComm(0x4C46E2, "'TTabEditorView.?fD30:byte'");
MakeCode(0x4C46FB);
MakeCode(0x4C46FD);
MakeCode(0x4C4715);
MakeComm(0x4C473C, "'TTabEditorView.?fD30:byte'");
MakeComm(0x4C4748, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C4750, "'TTabEditorView.?fD2E:byte'");
MakeCode(0x4C4759);
MakeCode(0x4C476E);
MakeFunction(0x4C46B0, 0x4C4776);
MakeUnkn(0x4C47CC, 1);
MakeNameEx(0x4C47CC, "TTabEditorView.MouseMove", 0x20);
MakeComm(0x4C47CC, "'procedure TTabEditorView.MouseMove(Shift:TShiftState; X:Integer; Y:Integer);'");
MakeCode(0x4C47CC);
MakeComm(0x4C47E6, "'TTabEditorView.......:TTimer'");
MakeCode(0x4C47F6);
MakeCode(0x4C4813);
MakeComm(0x4C4815, "'TTabEditorView.......:TTimer'");
MakeComm(0x4C4820, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4C4829, "'TTabEditorView.?f498:dword'");
MakeComm(0x4C4838, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C4847, "'0x3'");
MakeComm(0x4C4855, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4C4864, "'TTabEditorView.?f498:dword'");
MakeComm(0x4C487E, "'0x3'");
MakeCode(0x4C4891);
MakeComm(0x4C489B, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C48A8, "'TTabEditorView.?f258:TTabDocument'");
MakeComm(0x4C48AE, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C48C1, "'0x3'");
MakeCode(0x4C48C1);
MakeComm(0x4C48D1, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4C48DC, "'TTabEditorView.?f498:dword'");
MakeComm(0x4C48E7, "'TTabEditorView.?f258:TTabDocument'");
MakeComm(0x4C48ED, "'TTabEditorView.?f49C:dword'");
MakeComm(0x4C4902, "'0x3'");
MakeCode(0x4C4912);
MakeComm(0x4C4914, "'TTabEditorView.......:TTimer'");
MakeComm(0x4C491F, "'TTabEditorView.?f4A0:dword'");
MakeComm(0x4C4936, "'TTabEditorView.?f4A0:dword'");
MakeCode(0x4C493F);
MakeFunction(0x4C47CC, 0x4C4948);
MakeByte(0x4C4948);
MakeUnkn(0x4C4948, 1);
MakeNameEx(0x4C4948, "gvar_004C4948", 0);
MakeUnkn(0x4C494C, 1);
MakeNameEx(0x4C494C, "TTabEditorView.MouseUp", 0x20);
MakeComm(0x4C494C, "'procedure TTabEditorView.MouseUp(Button:TMouseButton; Shift:TShiftState; X:Integer; Y:Integer);'");
MakeCode(0x4C494C);
MakeCode(0x4C495E);
MakeComm(0x4C4969, "'TTabEditorView.......:TTimer'");
MakeCode(0x4C4976);
MakeCode(0x4C49B6);
MakeFunction(0x4C494C, 0x4C49BD);
MakeUnkn(0x4C49C0, 1);
MakeNameEx(0x4C49C0, "TTabEditorView.DoMouseWheel", 0x20);
MakeComm(0x4C49C0, "'procedure TTabEditorView.DoMouseWheel(Shift:TShiftState; WheelDelta:Integer; MousePos:TPoint);'");
MakeCode(0x4C49C0);
MakeCode(0x4C49FE);
MakeComm(0x4C4A00, "'TTabEditorView.?fE08:byte'");
MakeCode(0x4C4A00);
MakeComm(0x4C4A08, "'TTabEditorView.?fE08:byte'");
MakeComm(0x4C4A10, "'TTabEditorView.FWheelAccumulator:Integer'");
MakeComm(0x4C4A16, "'TTabEditorView.?fE08:byte'");
MakeCode(0x4C4A16);
MakeCode(0x4C4A32);
MakeComm(0x4C4A3C, "'TTabEditorView.Top:Integer'");
MakeComm(0x4C4A43, "'TTabEditorView.?fDD4:TTabScroller'");
MakeCode(0x4C4A50);
MakeFunction(0x4C49C0, 0x4C4A59);
MakeUnkn(0x4C4A5C, 1);
MakeNameEx(0x4C4A5C, "TTabEditorView.DoMouseWheelDown", 0x20);
MakeComm(0x4C4A5C, "'procedure TTabEditorView.DoMouseWheelDown(Shift:TShiftState; MousePos:TPoint);'");
MakeCode(0x4C4A5C);
MakeComm(0x4C4A6F, "'TTabEditorView.?f498:dword'");
MakeCode(0x4C4A6F);
MakeFunction(0x4C4A5C, 0x4C4A80);
MakeUnkn(0x4C4A80, 1);
MakeNameEx(0x4C4A80, "TTabEditorView.DoMouseWheelUp", 0x20);
MakeComm(0x4C4A80, "'procedure TTabEditorView.DoMouseWheelUp(Shift:TShiftState; MousePos:TPoint);'");
MakeCode(0x4C4A80);
MakeComm(0x4C4A91, "'TTabEditorView.?f498:dword'");
MakeCode(0x4C4A91);
MakeFunction(0x4C4A80, 0x4C4AA4);
MakeCode(0x4C4AA4);
MakeCode(0x4C4AC9);
MakeFunction(0x4C4AA4, 0x4C4AD7);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C4AE0, -1);
MakeDword(0x4C4ADC);
MakeDword(0x4C4AD8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C4AEC, -1);
MakeDword(0x4C4AE8);
MakeDword(0x4C4AE4);
MakeUnkn(0x4C4AFC, 1);
MakeNameEx(0x4C4AFC, "TTabEditorView.CMHintShow", 0x20);
MakeComm(0x4C4AFC, "'procedure TTabEditorView.CMHintShow(Message:TMessage);'");
MakeCode(0x4C4AFC);
MakeCode(0x4C4B52);
MakeComm(0x4C4B96, "'TTabEditorView.?fDEC:dword'");
MakeCode(0x4C4B96);
MakeComm(0x4C4BF8, "'TTabEditorView.?f258:TTabDocument'");
MakeCode(0x4C4C1A);
MakeCode(0x4C4C5A);
MakeCode(0x4C4C6B);
MakeCode(0x4C4C7C);
MakeCode(0x4C4CA9);
MakeComm(0x4C4CC2, "'TTabEditorView.?f258:TTabDocument'");
MakeCode(0x4C4D33);
MakeCode(0x4C4D60);
MakeCode(0x4C4D8D);
MakeCode(0x4C4DB7);
MakeCode(0x4C4DE1);
MakeCode(0x4C4E0B);
MakeCode(0x4C4E33);
MakeCode(0x4C4E3D);
MakeCode(0x4C4E4A);
MakeCode(0x4C4E68);
MakeCode(0x4C4E6D);
MakeFunction(0x4C4AFC, 0x4C4E76);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C4E80, -1);
MakeDword(0x4C4E7C);
MakeDword(0x4C4E78);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C4E94, -1);
MakeDword(0x4C4E90);
MakeDword(0x4C4E8C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C4EA8, -1);
MakeDword(0x4C4EA4);
MakeDword(0x4C4EA0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C4EC4, -1);
MakeDword(0x4C4EC0);
MakeDword(0x4C4EBC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C4EEC, -1);
MakeDword(0x4C4EE8);
MakeDword(0x4C4EE4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C4F08, -1);
MakeDword(0x4C4F04);
MakeDword(0x4C4F00);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C4F20, -1);
MakeDword(0x4C4F1C);
MakeDword(0x4C4F18);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C4F3C, -1);
MakeDword(0x4C4F38);
MakeDword(0x4C4F34);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C4F58, -1);
MakeDword(0x4C4F54);
MakeDword(0x4C4F50);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C4F78, -1);
MakeDword(0x4C4F74);
MakeDword(0x4C4F70);
MakeUnkn(0x4C4F90, 1);
MakeNameEx(0x4C4F90, "TTabEditorView.CMHintShowPause", 0x20);
MakeComm(0x4C4F90, "'procedure TTabEditorView.CMHintShowPause(?:?);'");
MakeCode(0x4C4F90);
MakeComm(0x4C4F97, "'TWinControl.DefaultHandler'");
MakeCode(0x4C4FA8);
MakeFunction(0x4C4F90, 0x4C4FAA);
MakeCode(0x4C4FAC);
MakeCode(0x4C4FEF);
MakeCode(0x4C4FFC);
MakeCode(0x4C4FFD);
MakeCode(0x4C5002);
MakeFunction(0x4C4FAC, 0x4C5006);
MakeUnkn(0x4C5008, 1);
MakeNameEx(0x4C5008, "VMT_4C5008_TPlayer", 0);
MakeDword(0x4C5008);
MakeDword(0x4C500C);
MakeDword(0x4C5010);
MakeDword(0x4C5014);
MakeDword(0x4C5018);
MakeDword(0x4C501C);
MakeDword(0x4C5020);
MakeDword(0x4C5024);
MakeDword(0x4C5028);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4C5054, 0x4C505C);
MakeDword(0x4C502C);
MakeDword(0x4C5030);
MakeDword(0x4C5034);
MakeDword(0x4C5038);
MakeDword(0x4C503C);
MakeDword(0x4C5040);
MakeDword(0x4C5044);
MakeDword(0x4C5048);
MakeDword(0x4C504C);
MakeDword(0x4C5050);
MakeUnkn(0x4C505C, 1);
MakeNameEx(0x4C505C, "VMT_4C505C_EPlayerError", 0);
MakeDword(0x4C505C);
MakeDword(0x4C5060);
MakeDword(0x4C5064);
MakeDword(0x4C5068);
MakeDword(0x4C506C);
MakeDword(0x4C5070);
MakeDword(0x4C5074);
MakeDword(0x4C5078);
MakeDword(0x4C507C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4C50A8, 0x4C50B5);
MakeDword(0x4C5080);
MakeDword(0x4C5084);
MakeDword(0x4C5088);
MakeDword(0x4C508C);
MakeDword(0x4C5090);
MakeDword(0x4C5094);
MakeDword(0x4C5098);
MakeDword(0x4C509C);
MakeDword(0x4C50A0);
MakeDword(0x4C50A4);
MakeCode(0x4C50B8);
MakeFunction(0x4C50B8, 0x4C50C3);
MakeCode(0x4C50C4);
MakeFunction(0x4C50C4, 0x4C50CF);
MakeCode(0x4C50D0);
MakeCode(0x4C5100);
MakeCode(0x4C510C);
MakeFunction(0x4C50D0, 0x4C5115);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C5120, -1);
MakeDword(0x4C511C);
MakeDword(0x4C5118);
MakeUnkn(0x4C5130, 1);
MakeNameEx(0x4C5130, "TPlayer.Create", 0x20);
MakeComm(0x4C5130, "'constructor TPlayer.Create;'");
MakeCode(0x4C5130);
MakeCode(0x4C514F);
MakeCode(0x4C5172);
MakeCode(0x4C5174);
MakeComm(0x4C51A5, "'TPlayer.?f3C:byte'");
MakeComm(0x4C51E6, "'TPlayer.?f4:THandle'");
MakeCode(0x4C51F2);
MakeComm(0x4C520A, "'TPlayer.?f4:THandle'");
MakeComm(0x4C5218, "'TPlayer.?f8:Pointer'");
MakeCode(0x4C5224);
MakeComm(0x4C523F, "'TPlayer.?f8:Pointer'");
MakeCode(0x4C5253);
MakeCode(0x4C525D);
MakeComm(0x4C526D, "'EPlayerError.Create'");
MakeCode(0x4C5279);
MakeCode(0x4C5280);
MakeComm(0x4C5285, "'TPlayer.?f8:Pointer'");
MakeComm(0x4C52A3, "'TPlayer.?f8:Pointer'");
MakeComm(0x4C52C0, "'TPlayer.?f8:Pointer'");
MakeCode(0x4C52C6);
MakeCode(0x4C52D3);
MakeComm(0x4C52D8, "'TPlayer.?f8:Pointer'");
MakeCode(0x4C52E2);
MakeCode(0x4C52E7);
MakeComm(0x4C52F6, "'TPlayer.?f10:dword'");
MakeComm(0x4C530A, "'TPlayer.?f10:dword'");
MakeComm(0x4C5331, "'EPlayerError.Create'");
MakeCode(0x4C533B);
MakeCode(0x4C5348);
MakeCode(0x4C535E);
MakeCode(0x4C5363);
MakeCode(0x4C537D);
MakeFunction(0x4C5130, 0x4C5386);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C5390, -1);
MakeDword(0x4C538C);
MakeDword(0x4C5388);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C53AC, -1);
MakeDword(0x4C53A8);
MakeDword(0x4C53A4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C5448, -1);
MakeDword(0x4C5444);
MakeDword(0x4C5440);
MakeCode(0x4C54F8);
MakeComm(0x4C5507, "'TPlayer.?f744:byte'");
MakeComm(0x4C5517, "'TPlayer.?f740:dword'");
MakeComm(0x4C5527, "'TPlayer.?f14:UINT'");
MakeComm(0x4C5539, "'TPlayer.?f14:UINT'");
MakeCode(0x4C553C);
MakeCode(0x4C5560);
MakeCode(0x4C556D);
MakeCode(0x4C5573);
MakeCode(0x4C5578);
MakeComm(0x4C557D, "'TPlayer.?fC:byte'");
MakeComm(0x4C5586, "'TPlayer.?f18:dword'");
MakeCode(0x4C558F);
MakeComm(0x4C55A0, "'TPlayer.?f3C:byte'");
MakeComm(0x4C55AB, "'TPlayer.?f3C:byte'");
MakeComm(0x4C55BC, "'TPlayer.?f3C:byte'");
MakeCode(0x4C55C3);
MakeCode(0x4C55E2);
MakeCode(0x4C5609);
MakeComm(0x4C561F, "'TPlayer.?f10:dword'");
MakeCode(0x4C5647);
MakeCode(0x4C5655);
MakeComm(0x4C567C, "'TPlayer.?f745:byte'");
MakeCode(0x4C5697);
MakeCode(0x4C56A1);
MakeCode(0x4C56AE);
MakeComm(0x4C56B1, "'TPlayer.?f744:byte'");
MakeCode(0x4C56B9);
MakeCode(0x4C56BE);
MakeCode(0x4C56C0);
MakeFunction(0x4C54F8, 0x4C56C7);
MakeCode(0x4C56C8);
MakeComm(0x4C56E1, "'TPlayer.?f10:dword'");
MakeFunction(0x4C56C8, 0x4C56EF);
MakeCode(0x4C56F0);
MakeFunction(0x4C56F0, 0x4C56FC);
MakeCode(0x4C56FC);
MakeFunction(0x4C56FC, 0x4C5712);
MakeCode(0x4C5714);
MakeFunction(0x4C5714, 0x4C5760);
MakeCode(0x4C5760);
MakeCode(0x4C577E);
MakeCode(0x4C578A);
MakeFunction(0x4C5760, 0x4C57A4);
MakeCode(0x4C57A4);
MakeCode(0x4C5801);
MakeFunction(0x4C57A4, 0x4C5819);
MakeCode(0x4C581C);
MakeCode(0x4C5863);
MakeCode(0x4C58B6);
MakeCode(0x4C58D1);
MakeCode(0x4C58DA);
MakeCode(0x4C5931);
MakeCode(0x4C5944);
MakeFunction(0x4C581C, 0x4C594A);
MakeCode(0x4C594C);
MakeFunction(0x4C594C, 0x4C59CA);
MakeCode(0x4C59CC);
MakeCode(0x4C5A01);
MakeCode(0x4C5A4A);
MakeCode(0x4C5A71);
MakeCode(0x4C5ABC);
MakeCode(0x4C5AC2);
MakeCode(0x4C5AC8);
MakeCode(0x4C5AE3);
MakeCode(0x4C5B1E);
MakeCode(0x4C5B36);
MakeCode(0x4C5B60);
MakeCode(0x4C5B66);
MakeCode(0x4C5B7A);
MakeCode(0x4C5B91);
MakeCode(0x4C5BE2);
MakeCode(0x4C5C62);
MakeCode(0x4C5C7E);
MakeCode(0x4C5CA5);
MakeCode(0x4C5CB4);
MakeCode(0x4C5CB9);
MakeCode(0x4C5CCB);
MakeCode(0x4C5D11);
MakeCode(0x4C5D1F);
MakeCode(0x4C5D51);
MakeCode(0x4C5D77);
MakeCode(0x4C5D7D);
MakeCode(0x4C5D97);
MakeCode(0x4C5DB3);
MakeCode(0x4C5DCB);
MakeCode(0x4C5DD1);
MakeCode(0x4C5E16);
MakeCode(0x4C5E25);
MakeCode(0x4C5E2F);
MakeCode(0x4C5E4E);
MakeCode(0x4C5E9F);
MakeCode(0x4C5EDF);
MakeCode(0x4C5EEF);
MakeCode(0x4C5EFF);
MakeCode(0x4C5F2E);
MakeCode(0x4C5F76);
MakeCode(0x4C5F93);
MakeCode(0x4C5FA6);
MakeCode(0x4C5FD8);
MakeCode(0x4C6010);
MakeCode(0x4C6041);
MakeCode(0x4C6072);
MakeCode(0x4C6094);
MakeCode(0x4C609E);
MakeCode(0x4C60A8);
MakeCode(0x4C60AD);
MakeCode(0x4C60CB);
MakeCode(0x4C6111);
MakeCode(0x4C611F);
MakeCode(0x4C6189);
MakeCode(0x4C6207);
MakeCode(0x4C6228);
MakeCode(0x4C622E);
MakeCode(0x4C6283);
MakeCode(0x4C6290);
MakeCode(0x4C62D5);
MakeCode(0x4C62E9);
MakeCode(0x4C6390);
MakeCode(0x4C63B7);
MakeCode(0x4C63BD);
MakeCode(0x4C6408);
MakeCode(0x4C6415);
MakeCode(0x4C643B);
MakeCode(0x4C6445);
MakeCode(0x4C6460);
MakeCode(0x4C64B3);
MakeCode(0x4C64BD);
MakeCode(0x4C64C3);
MakeCode(0x4C6505);
MakeCode(0x4C6515);
MakeCode(0x4C6545);
MakeCode(0x4C6555);
MakeCode(0x4C6561);
MakeCode(0x4C656B);
MakeCode(0x4C65AB);
MakeCode(0x4C65C9);
MakeCode(0x4C65D6);
MakeCode(0x4C65DC);
MakeCode(0x4C65E1);
MakeCode(0x4C65E3);
MakeFunction(0x4C59CC, 0x4C65EA);
MakeCode(0x4C6640);
MakeComm(0x4C666F, "'0x1'");
MakeCode(0x4C666F);
MakeCode(0x4C668F);
MakeCode(0x4C66AB);
MakeCode(0x4C66C6);
MakeCode(0x4C66D1);
MakeCode(0x4C66DC);
MakeFunction(0x4C6640, 0x4C66E2);
MakeByte(0x4C66E4);
MakeUnkn(0x4C66E4, 1);
MakeNameEx(0x4C66E4, "gvar_004C66E4", 0);
MakeCode(0x4C66E8);
MakeCode(0x4C674A);
MakeCode(0x4C6756);
MakeCode(0x4C6763);
MakeCode(0x4C6769);
MakeCode(0x4C676E);
MakeFunction(0x4C66E8, 0x4C6775);
MakeCode(0x4C6778);
MakeComm(0x4C67A5, "'TPlayer.?f704:?'");
MakeComm(0x4C67FA, "'EPlayerError.Create'");
MakeCode(0x4C6804);
MakeComm(0x4C680A, "'TPlayer.?f18:dword'");
MakeComm(0x4C6815, "'TPlayer.?f18:dword'");
MakeCode(0x4C681C);
MakeComm(0x4C681F, "'TPlayer.?f18:dword'");
MakeComm(0x4C6850, "'EPlayerError.Create'");
MakeCode(0x4C685A);
MakeComm(0x4C685D, "'TPlayer.?fC:byte'");
MakeCode(0x4C6861);
MakeComm(0x4C6864, "'TPlayer.?f744:byte'");
MakeComm(0x4C6872, "'TPlayer.?f745:byte'");
MakeComm(0x4C687D, "'TPlayer.?f740:dword'");
MakeComm(0x4C6886, "'TPlayer.?f20:byte'");
MakeComm(0x4C688D, "'TPlayer.?f30:dword'");
MakeComm(0x4C6899, "'TPlayer.?f34:dword'");
MakeComm(0x4C68BD, "'TPlayer.?f1C:dword'");
MakeCode(0x4C690B);
MakeCode(0x4C69BD);
MakeCode(0x4C6A10);
MakeCode(0x4C6A2E);
MakeCode(0x4C6A47);
MakeCode(0x4C6A87);
MakeCode(0x4C6A97);
MakeCode(0x4C6AA7);
MakeComm(0x4C6AC3, "'TPlayer.?f1C:dword'");
MakeCode(0x4C6ADA);
MakeCode(0x4C6AED);
MakeCode(0x4C6B28);
MakeCode(0x4C6B3A);
MakeCode(0x4C6B4C);
MakeCode(0x4C6B5E);
MakeCode(0x4C6B70);
MakeCode(0x4C6B79);
MakeCode(0x4C6B83);
MakeCode(0x4C6B8F);
MakeCode(0x4C6BB5);
MakeCode(0x4C6C03);
MakeCode(0x4C6C40);
MakeCode(0x4C6CCA);
MakeCode(0x4C6CF0);
MakeComm(0x4C6CFD, "'TPlayer.?f49:byte'");
MakeCode(0x4C6D22);
MakeCode(0x4C6D9F);
MakeCode(0x4C6DCE);
MakeCode(0x4C6DDB);
MakeCode(0x4C6DE1);
MakeCode(0x4C6DE6);
MakeComm(0x4C6E09, "'TPlayer.?f14:UINT'");
MakeCode(0x4C6E0C);
MakeCode(0x4C6E16);
MakeCode(0x4C6E2D);
MakeFunction(0x4C6778, 0x4C6E34);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C6E3C, -1);
MakeDword(0x4C6E38);
MakeDword(0x4C6E34);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C6E64, -1);
MakeDword(0x4C6E60);
MakeDword(0x4C6E5C);
MakeCode(0x4C6E88);
MakeCode(0x4C6EAB);
MakeCode(0x4C6EB8);
MakeCode(0x4C6EB9);
MakeCode(0x4C6EBE);
MakeFunction(0x4C6E88, 0x4C6EC2);
MakeUnkn(0x4C6EC4, 1);
MakeNameEx(0x4C6EC4, "VMT_4C6EC4_TTrackData", 0);
MakeDword(0x4C6EC4);
MakeDword(0x4C6EC8);
MakeDword(0x4C6ECC);
MakeDword(0x4C6ED0);
MakeDword(0x4C6ED4);
MakeDword(0x4C6ED8);
MakeDword(0x4C6EDC);
MakeDword(0x4C6EE0);
MakeDword(0x4C6EE4);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4C6F10, 0x4C6F1B);
MakeDword(0x4C6EE8);
MakeDword(0x4C6EEC);
MakeDword(0x4C6EF0);
MakeDword(0x4C6EF4);
MakeDword(0x4C6EF8);
MakeDword(0x4C6EFC);
MakeDword(0x4C6F00);
MakeDword(0x4C6F04);
MakeDword(0x4C6F08);
MakeDword(0x4C6F0C);
MakeUnkn(0x4C6F1C, 1);
MakeNameEx(0x4C6F1C, "VMT_4C6F1C_TCustomTabDoc", 0);
MakeDword(0x4C6F1C);
MakeDword(0x4C6F20);
MakeDword(0x4C6F24);
MakeDword(0x4C6F28);
MakeUnkn(0x4C6FA4, 1);
MakeNameEx(0x4C6FA4, "TCustomTabDoc_InitTable", 0);
MakeByte(0x4C6FA4);
MakeByte(0x4C6FA5);
MakeDword(0x4C6FA6);
MakeDword(0x4C6FAA);
MakeDword(0x4C6FAE);
MakeDword(0x4C6FB2);
MakeDword(0x4C6FB6);
MakeDword(0x4C6FBA);
MakeDword(0x4C6FBE);
MakeDword(0x4C6FC2);
MakeDword(0x4C6FC6);
MakeDword(0x4C6FCA);
MakeDword(0x4C6FCE);
MakeDword(0x4C6FD2);
MakeDword(0x4C6FD6);
MakeDword(0x4C6FDA);
MakeDword(0x4C6F2C);
MakeDword(0x4C6F30);
MakeDword(0x4C6F34);
MakeDword(0x4C6F38);
MakeDword(0x4C6F3C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4C6FDE, 0x4C6FEC);
MakeDword(0x4C6F40);
MakeDword(0x4C6F44);
MakeDword(0x4C6F48);
MakeDword(0x4C6F4C);
MakeDword(0x4C6F50);
MakeDword(0x4C6F54);
MakeDword(0x4C6F58);
MakeDword(0x4C6F5C);
MakeDword(0x4C6F60);
MakeDword(0x4C6F64);
MakeComm(0x4C6F68, "'+0'");
MakeDword(0x4C6F68);
MakeComm(0x4C6F6C, "'+4'");
MakeDword(0x4C6F6C);
MakeComm(0x4C6F70, "'+8'");
MakeDword(0x4C6F70);
MakeComm(0x4C6F74, "'+C'");
MakeDword(0x4C6F74);
MakeComm(0x4C6F78, "'+10'");
MakeDword(0x4C6F78);
MakeComm(0x4C6F7C, "'+14'");
MakeDword(0x4C6F7C);
MakeComm(0x4C6F80, "'+18'");
MakeDword(0x4C6F80);
MakeComm(0x4C6F84, "'+1C'");
MakeDword(0x4C6F84);
MakeComm(0x4C6F88, "'+20'");
MakeDword(0x4C6F88);
MakeComm(0x4C6F8C, "'+24'");
MakeDword(0x4C6F8C);
MakeComm(0x4C6F90, "'+28'");
MakeDword(0x4C6F90);
MakeComm(0x4C6F94, "'+2C'");
MakeDword(0x4C6F94);
MakeComm(0x4C6F98, "'+30'");
MakeDword(0x4C6F98);
MakeComm(0x4C6F9C, "'+34'");
MakeDword(0x4C6F9C);
MakeComm(0x4C6FA0, "'+38'");
MakeDword(0x4C6FA0);
MakeUnkn(0x4C6FEC, 1);
MakeNameEx(0x4C6FEC, "RTTI_4C6FEC_Class_TCustomTabDoc", 0);
MakeDword(0x4C6FEC);
MakeUnkn(0x4C6FF0, 1);
MakeNameEx(0x4C6FF0, "", 0);
MakeByte(0x4C6FF0);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4C6FF1, 0x4C6FFF);
MakeDword(0x4C6FFF);
MakeDword(0x4C7003);
MakeWord(0x4C7007);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4C7009, 0x4C7010);
MakeWord(0x4C7010);
MakeCode(0x4C7014);
MakeCode(0x4C7021);
MakeCode(0x4C7032);
MakeCode(0x4C705D);
MakeCode(0x4C7061);
MakeFunction(0x4C7014, 0x4C7068);
MakeCode(0x4C7068);
MakeCode(0x4C7072);
MakeCode(0x4C7081);
MakeFunction(0x4C7068, 0x4C7099);
MakeCode(0x4C709C);
MakeCode(0x4C70AE);
MakeCode(0x4C70B1);
MakeFunction(0x4C709C, 0x4C70B4);
MakeCode(0x4C70B4);
MakeCode(0x4C70BD);
MakeCode(0x4C70C6);
MakeCode(0x4C7102);
MakeCode(0x4C7106);
MakeCode(0x4C710A);
MakeCode(0x4C710E);
MakeCode(0x4C7112);
MakeCode(0x4C7116);
MakeCode(0x4C711A);
MakeCode(0x4C711E);
MakeCode(0x4C7122);
MakeCode(0x4C7126);
MakeCode(0x4C712A);
MakeCode(0x4C712C);
MakeCode(0x4C7132);
MakeFunction(0x4C70B4, 0x4C7135);
MakeCode(0x4C7138);
MakeCode(0x4C713F);
MakeFunction(0x4C7138, 0x4C714C);
MakeCode(0x4C714C);
MakeCode(0x4C7155);
MakeCode(0x4C7159);
MakeCode(0x4C7167);
MakeCode(0x4C7174);
MakeFunction(0x4C714C, 0x4C717F);
MakeCode(0x4C7180);
MakeCode(0x4C719F);
MakeCode(0x4C71DF);
MakeCode(0x4C71E8);
MakeFunction(0x4C7180, 0x4C71ED);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C71F8, -1);
MakeDword(0x4C71F4);
MakeDword(0x4C71F0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C7220, -1);
MakeDword(0x4C721C);
MakeDword(0x4C7218);
MakeCode(0x4C7234);
MakeCode(0x4C7242);
MakeCode(0x4C7251);
MakeFunction(0x4C7234, 0x4C7254);
MakeCode(0x4C7254);
MakeCode(0x4C7272);
MakeCode(0x4C727C);
MakeCode(0x4C7282);
MakeCode(0x4C7289);
MakeFunction(0x4C7254, 0x4C728B);
MakeCode(0x4C728C);
MakeCode(0x4C72A2);
MakeFunction(0x4C728C, 0x4C72A5);
MakeUnkn(0x4C72A8, 1);
MakeNameEx(0x4C72A8, "TTrackData.Create", 0x20);
MakeComm(0x4C72A8, "'constructor TTrackData.Create(?:?);'");
MakeCode(0x4C72A8);
MakeCode(0x4C72C3);
MakeComm(0x4C72F0, "'TVirtualMemory.Create'");
MakeComm(0x4C72FA, "'TTrackData.?f10:TVirtualMemory'");
MakeComm(0x4C72FD, "'TVirtualMemory......:dword'");
MakeComm(0x4C7303, "'TTrackData.?f4:dword'");
MakeComm(0x4C7312, "'TVirtualMemory.Create'");
MakeComm(0x4C731C, "'TTrackData.?f14:TVirtualMemory'");
MakeComm(0x4C731F, "'TVirtualMemory.......:dword'");
MakeComm(0x4C7325, "'TTrackData.?f8:dword'");
MakeComm(0x4C732B, "'TTrackData.?f1C:dword'");
MakeComm(0x4C7335, "'TTrackData.?f20:dword'");
MakeComm(0x4C733F, "'TTrackData.?f24:dword'");
MakeComm(0x4C7349, "'TTrackData.?f28:dword'");
MakeComm(0x4C7353, "'TTrackData.?f2C:dword'");
MakeComm(0x4C735D, "'TTrackData.?f40:dword'");
MakeComm(0x4C7367, "'TTrackData.?f50:byte'");
MakeComm(0x4C736E, "'TTrackData.?f44:dword'");
MakeComm(0x4C7386, "'TRegistry.Create'");
MakeComm(0x4C73A2, "'TTrackData.?f5C:dword'");
MakeComm(0x4C73A8, "'TTrackData.?f1C:dword'");
MakeComm(0x4C7424, "'TTrackData.?f1C:dword'");
MakeComm(0x4C742C, "'TTrackData.?f1C:dword'");
MakeCode(0x4C744B);
MakeComm(0x4C745B, "'TTrackData.?f54:void '");
MakeComm(0x4C7461, "'TTrackData.?f58:dword'");
MakeCode(0x4C7464);
MakeCode(0x4C7471);
MakeCode(0x4C747A);
MakeCode(0x4C747F);
MakeCode(0x4C7481);
MakeCode(0x4C748C);
MakeCode(0x4C7499);
MakeCode(0x4C74AA);
MakeCode(0x4C74AF);
MakeCode(0x4C74C9);
MakeFunction(0x4C72A8, 0x4C74D3);
MakeCode(0x4C751C);
MakeCode(0x4C752E);
MakeCode(0x4C7542);
MakeComm(0x4C7549, "'TTrackData.?f60:dword'");
MakeCode(0x4C755D);
MakeComm(0x4C7568, "'TTrackData.?f10:TVirtualMemory'");
MakeComm(0x4C7576, "'TTrackData.?f14:TVirtualMemory'");
MakeComm(0x4C757E, "'TTrackData.?f60:dword'");
MakeComm(0x4C7592, "'TTrackData.?f8:dword'");
MakeComm(0x4C7595, "'TTrackData.?f60:dword'");
MakeComm(0x4C75AD, "'TTrackData.?f60:dword'");
MakeCode(0x4C75AD);
MakeFunction(0x4C751C, 0x4C75B3);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C75BC, -1);
MakeDword(0x4C75B8);
MakeDword(0x4C75B4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C75E4, -1);
MakeDword(0x4C75E0);
MakeDword(0x4C75DC);
MakeCode(0x4C75F8);
MakeFunction(0x4C75F8, 0x4C760E);
MakeCode(0x4C7610);
MakeCode(0x4C761D);
MakeFunction(0x4C7610, 0x4C7623);
MakeCode(0x4C7624);
MakeCode(0x4C7633);
MakeFunction(0x4C7624, 0x4C7639);
MakeCode(0x4C763C);
MakeCode(0x4C764C);
MakeFunction(0x4C763C, 0x4C7651);
MakeCode(0x4C7654);
MakeComm(0x4C7656, "'TTrackData.?fC:dword'");
MakeFunction(0x4C7654, 0x4C765A);
MakeCode(0x4C765C);
MakeCode(0x4C7694);
MakeCode(0x4C76AE);
MakeCode(0x4C76CA);
MakeCode(0x4C7702);
MakeCode(0x4C7708);
MakeCode(0x4C7721);
MakeCode(0x4C772E);
MakeCode(0x4C7734);
MakeCode(0x4C7739);
MakeCode(0x4C773B);
MakeFunction(0x4C765C, 0x4C7742);
MakeCode(0x4C7744);
MakeCode(0x4C7754);
MakeComm(0x4C7757, "'TTrackData.?f4:dword'");
MakeCode(0x4C7766);
MakeFunction(0x4C7744, 0x4C776A);
MakeCode(0x4C776C);
MakeComm(0x4C777F, "'TTrackData.?f4:dword'");
MakeFunction(0x4C776C, 0x4C77AA);
MakeCode(0x4C77AC);
MakeCode(0x4C77CA);
MakeComm(0x4C77CD, "'TTrackData.?f4:dword'");
MakeComm(0x4C77DC, "'TTrackData.?f4:dword'");
MakeCode(0x4C77EF);
MakeFunction(0x4C77AC, 0x4C77F6);
MakeCode(0x4C77F8);
MakeCode(0x4C7821);
MakeCode(0x4C782B);
MakeCode(0x4C783F);
MakeCode(0x4C7847);
MakeCode(0x4C7864);
MakeFunction(0x4C77F8, 0x4C78BB);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C78C4, -1);
MakeDword(0x4C78C0);
MakeDword(0x4C78BC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C78EC, -1);
MakeDword(0x4C78E8);
MakeDword(0x4C78E4);
MakeCode(0x4C7900);
MakeCode(0x4C7929);
MakeCode(0x4C7933);
MakeCode(0x4C7947);
MakeCode(0x4C794F);
MakeCode(0x4C796C);
MakeFunction(0x4C7900, 0x4C79C3);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C79CC, -1);
MakeDword(0x4C79C8);
MakeDword(0x4C79C4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C79F4, -1);
MakeDword(0x4C79F0);
MakeDword(0x4C79EC);
MakeUnkn(0x4C7A08, 1);
MakeNameEx(0x4C7A08, "TCustomTabDoc.Create", 0x20);
MakeComm(0x4C7A08, "'constructor TCustomTabDoc.Create(AOwner:TComponent);'");
MakeCode(0x4C7A08);
MakeCode(0x4C7A1A);
MakeComm(0x4C7A2F, "'TList.Create'");
MakeComm(0x4C7A34, "'TCustomTabDoc.?f3C:TList'");
MakeComm(0x4C7A43, "'TVirtualMemory.Create'");
MakeComm(0x4C7A4A, "'TCustomTabDoc.?f34:TVirtualMemory'");
MakeComm(0x4C7A4D, "'TVirtualMemory........:dword'");
MakeComm(0x4C7A50, "'TCustomTabDoc.?f30:dword'");
MakeCode(0x4C7A6A);
MakeFunction(0x4C7A08, 0x4C7A71);
MakeUnkn(0x4C7A74, 1);
MakeNameEx(0x4C7A74, "TCustomTabDoc.Destroy", 0x20);
MakeComm(0x4C7A74, "'destructor TCustomTabDoc.Destroy;'");
MakeCode(0x4C7A74);
MakeComm(0x4C7A80, "'TCustomTabDoc.?f34:TVirtualMemory'");
MakeCode(0x4C7A99);
MakeComm(0x4C7AA8, "'TCustomTabDoc.?f3C:TList'");
MakeCode(0x4C7AC2);
MakeFunction(0x4C7A74, 0x4C7AC6);
MakeCode(0x4C7AC8);
MakeComm(0x4C7AC8, "'TTabDocument.?f3C:TList'");
MakeFunction(0x4C7AC8, 0x4C7AD1);
MakeCode(0x4C7AD4);
MakeCode(0x4C7AF1);
MakeCode(0x4C7B13);
MakeCode(0x4C7B19);
MakeCode(0x4C7B33);
MakeCode(0x4C7B47);
MakeCode(0x4C7B4F);
MakeComm(0x4C7B53, "'TTabDocument.?f30:dword'");
MakeComm(0x4C7B5D, "'TTabDocument.?f30:dword'");
MakeComm(0x4C7B67, "'TTabDocument.?f30:dword'");
MakeCode(0x4C7B85);
MakeCode(0x4C7B93);
MakeComm(0x4C7B94, "'TTabDocument.?f38:dword'");
MakeCode(0x4C7B94);
MakeComm(0x4C7BA0, "'TTabDocument.?f30:dword'");
MakeCode(0x4C7BAC);
MakeCode(0x4C7BB8);
MakeFunction(0x4C7AD4, 0x4C7BC1);
MakeCode(0x4C7BC4);
MakeCode(0x4C7BDF);
MakeFunction(0x4C7BC4, 0x4C7C4D);
MakeCode(0x4C7C50);
MakeCode(0x4C7C56);
MakeComm(0x4C7C68, "'TCustomTabDoc.?fA8:dword'");
MakeCode(0x4C7C68);
MakeComm(0x4C7C72, "'TCustomTabDoc.?fB1:byte'");
MakeFunction(0x4C7C50, 0x4C7C7C);
MakeCode(0x4C7C7C);
MakeComm(0x4C7C7C, "'TCustomTabDoc.?fA4:dword'");
MakeComm(0x4C7C87, "'TCustomTabDoc.?fA4:dword'");
MakeComm(0x4C7C8D, "'TCustomTabDoc.?fA8:dword'");
MakeCode(0x4C7C8D);
MakeComm(0x4C7C98, "'TCustomTabDoc.?fA8:dword'");
MakeCode(0x4C7C9E);
MakeCode(0x4C7CB0);
MakeCode(0x4C7CC2);
MakeFunction(0x4C7C7C, 0x4C7CC5);
MakeCode(0x4C7CC8);
MakeFunction(0x4C7CC8, 0x4C7CD8);
MakeCode(0x4C7CD8);
MakeFunction(0x4C7CD8, 0x4C7CEB);
MakeCode(0x4C7CEC);
MakeComm(0x4C7CEC, "'TTabDocument.?f48:byte'");
MakeFunction(0x4C7CEC, 0x4C7CF1);
MakeCode(0x4C7CF4);
MakeComm(0x4C7CF4, "'TTabDocument.?f48:byte'");
MakeFunction(0x4C7CF4, 0x4C7CFE);
MakeCode(0x4C7D00);
MakeComm(0x4C7D00, "'TTabDocument.?f40:byte'");
MakeComm(0x4C7D04, "'TTabDocument.?f41:byte'");
MakeComm(0x4C7D09, "'TTabDocument.?f44:dword'");
MakeFunction(0x4C7D00, 0x4C7D0D);
MakeCode(0x4C7D10);
MakeComm(0x4C7D13, "'TTabDocument.?f40:byte'");
MakeComm(0x4C7D2D, "'TTabDocument.?f44:dword'");
MakeCode(0x4C7D2D);
MakeComm(0x4C7D33, "'TTabDocument.?fA8:dword'");
MakeComm(0x4C7D3D, "'TTabDocument.?f40:byte'");
MakeCode(0x4C7D3D);
MakeFunction(0x4C7D10, 0x4C7D43);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C7D4C, -1);
MakeDword(0x4C7D48);
MakeDword(0x4C7D44);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C7D74, -1);
MakeDword(0x4C7D70);
MakeDword(0x4C7D6C);
MakeCode(0x4C7D88);
MakeCode(0x4C7DB5);
MakeCode(0x4C7DD0);
MakeFunction(0x4C7D88, 0x4C7DDE);
MakeCode(0x4C7DE0);
MakeComm(0x4C7DF6, "'TTabDocument.?f40:byte'");
MakeCode(0x4C7E10);
MakeComm(0x4C7E2D, "'TTabDocument.?f44:dword'");
MakeComm(0x4C7E33, "'0x1'");
MakeComm(0x4C7E3F, "'0x0'");
MakeCode(0x4C7E3F);
MakeCode(0x4C7E49);
MakeComm(0x4C7E4B, "'TTabDocument.?f41:byte'");
MakeComm(0x4C7E98, "'TTabDocument.?fA8:dword'");
MakeComm(0x4C7EA3, "'TTabDocument.?f48:byte'");
MakeComm(0x4C7EAB, "'TTabDocument.?fB0:byte'");
MakeCode(0x4C7EB3);
MakeComm(0x4C7EB5, "'TTabDocument.?fB0:byte'");
MakeComm(0x4C7EBE, "'TTabDocument.?fB1:byte'");
MakeCode(0x4C7EC5);
MakeComm(0x4C7EC7, "'TTabDocument.?fA4:dword'");
MakeComm(0x4C7ED3, "'TTabDocument.?fB2:byte'");
MakeComm(0x4C7EDB, "'TTabDocument.?fA4:dword'");
MakeComm(0x4C7EF3, "'TTabDocument.?fA4:dword'");
MakeCode(0x4C7F03);
MakeComm(0x4C7F05, "'TTabDocument.?fAC:dword'");
MakeComm(0x4C7F13, "'TTabDocument.?fA4:dword'");
MakeCode(0x4C7F1C);
MakeComm(0x4C7F21, "'TTabDocument.?fAC:dword'");
MakeComm(0x4C7F32, "'TTabDocument.?f44:dword'");
MakeFunction(0x4C7DE0, 0x4C7F4C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C7F54, -1);
MakeDword(0x4C7F50);
MakeDword(0x4C7F4C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C7F7C, -1);
MakeDword(0x4C7F78);
MakeDword(0x4C7F74);
MakeByte(0x4C7F90);
MakeUnkn(0x4C7F90, 1);
MakeNameEx(0x4C7F90, "gvar_004C7F90", 0);
MakeByte(0x4C7F94);
MakeUnkn(0x4C7F94, 1);
MakeNameEx(0x4C7F94, "gvar_004C7F94", 0);
MakeCode(0x4C7F98);
MakeCode(0x4C8029);
MakeCode(0x4C8036);
MakeCode(0x4C803F);
MakeCode(0x4C8044);
MakeFunction(0x4C7F98, 0x4C804F);
MakeCode(0x4C8050);
MakeCode(0x4C806F);
MakeCode(0x4C8087);
MakeComm(0x4C80C3, "'Exception.Create'");
MakeCode(0x4C80CD);
MakeCode(0x4C80D9);
MakeCode(0x4C80DF);
MakeFunction(0x4C8050, 0x4C80EA);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C80F4, -1);
MakeDword(0x4C80F0);
MakeDword(0x4C80EC);
MakeCode(0x4C8154);
MakeCode(0x4C8184);
MakeCode(0x4C819F);
MakeComm(0x4C81B7, "'Exception.Create'");
MakeCode(0x4C81C1);
MakeCode(0x4C81DD);
MakeCode(0x4C8219);
MakeCode(0x4C8226);
MakeComm(0x4C8238, "'Exception.Create'");
MakeCode(0x4C8242);
MakeFunction(0x4C8154, 0x4C824B);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C8254, -1);
MakeDword(0x4C8250);
MakeDword(0x4C824C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C8288, -1);
MakeDword(0x4C8284);
MakeDword(0x4C8280);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C82B0, -1);
MakeDword(0x4C82AC);
MakeDword(0x4C82A8);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C82CC, -1);
MakeDword(0x4C82C8);
MakeDword(0x4C82C4);
MakeCode(0x4C82FC);
MakeCode(0x4C8324);
MakeCode(0x4C837A);
MakeCode(0x4C839E);
MakeComm(0x4C8429, "'Exception.Create'");
MakeCode(0x4C8433);
MakeCode(0x4C843D);
MakeCode(0x4C8454);
MakeCode(0x4C8478);
MakeCode(0x4C8490);
MakeFunction(0x4C82FC, 0x4C8499);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C84A4, -1);
MakeDword(0x4C84A0);
MakeDword(0x4C849C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C84CC, -1);
MakeDword(0x4C84C8);
MakeDword(0x4C84C4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C84E8, -1);
MakeDword(0x4C84E4);
MakeDword(0x4C84E0);
MakeCode(0x4C8548);
MakeComm(0x4C8571, "'TTabDocument.?f30:dword'");
MakeComm(0x4C857D, "'TTabDocument.?f30:dword'");
MakeCode(0x4C858A);
MakeComm(0x4C858E, "'TTabDocument.?f30:dword'");
MakeComm(0x4C859A, "'TTabDocument.?f30:dword'");
MakeCode(0x4C85A5);
MakeComm(0x4C85A9, "'TTabDocument.?f30:dword'");
MakeComm(0x4C85B5, "'TTabDocument.?f30:dword'");
MakeComm(0x4C85C1, "'TTabDocument.?f30:dword'");
MakeComm(0x4C85D6, "'TTabDocument.?f30:dword'");
MakeFunction(0x4C8548, 0x4C85F7);
MakeCode(0x4C85F8);
MakeCode(0x4C860C);
MakeFunction(0x4C85F8, 0x4C8624);
MakeCode(0x4C8624);
MakeCode(0x4C862C);
MakeCode(0x4C8646);
MakeCode(0x4C866B);
MakeFunction(0x4C8624, 0x4C867A);
MakeCode(0x4C867C);
MakeCode(0x4C8695);
MakeCode(0x4C86A4);
MakeCode(0x4C86B4);
MakeComm(0x4C86C1, "'TTrackData.Create'");
MakeComm(0x4C86C6, "'TTabDocument.?f68:TTrackData'");
MakeComm(0x4C86C9, "'TTabDocument.?f60:dword'");
MakeComm(0x4C86CC, "'TTabDocument.?f48:byte'");
MakeComm(0x4C86D0, "'TTabDocument.?f3C:TList'");
MakeComm(0x4C86D3, "'TList.FCount:Integer'");
MakeCode(0x4C86DE);
MakeComm(0x4C86E0, "'TTabDocument.?f3C:TList'");
MakeCode(0x4C86F1);
MakeFunction(0x4C867C, 0x4C86F5);
MakeCode(0x4C86F8);
MakeCode(0x4C8714);
MakeFunction(0x4C86F8, 0x4C8724);
MakeCode(0x4C8724);
MakeFunction(0x4C8724, 0x4C8741);
MakeCode(0x4C8744);
MakeFunction(0x4C8744, 0x4C8761);
MakeCode(0x4C8764);
MakeFunction(0x4C8764, 0x4C8780);
MakeCode(0x4C8780);
MakeCode(0x4C87A4);
MakeCode(0x4C87B6);
MakeCode(0x4C87DA);
MakeFunction(0x4C8780, 0x4C87DE);
MakeCode(0x4C87E0);
MakeCode(0x4C8805);
MakeCode(0x4C8815);
MakeCode(0x4C8823);
MakeFunction(0x4C87E0, 0x4C8825);
MakeUnkn(0x4C8828, 1);
MakeNameEx(0x4C8828, "RTTI_4C8828_DynArray_.8", 0);
MakeDword(0x4C8828);
MakeUnkn(0x4C882C, 1);
MakeNameEx(0x4C882C, "", 0);
MakeByte(0x4C882C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4C882D, 0x4C8830);
MakeDword(0x4C8830);
MakeDword(0x4C8834);
MakeDword(0x4C8838);
MakeDword(0x4C883C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4C8840, 0x4C8847);
MakeCode(0x4C8848);
MakeCode(0x4C88A5);
MakeCode(0x4C88B3);
MakeCode(0x4C88C7);
MakeCode(0x4C88D4);
MakeCode(0x4C88DC);
MakeCode(0x4C88E1);
MakeCode(0x4C891C);
MakeCode(0x4C8935);
MakeCode(0x4C895E);
MakeCode(0x4C896E);
MakeCode(0x4C899C);
MakeCode(0x4C89A0);
MakeCode(0x4C89AA);
MakeCode(0x4C89B7);
MakeCode(0x4C89C6);
MakeCode(0x4C89CB);
MakeFunction(0x4C8848, 0x4C89D4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C89DC, -1);
MakeDword(0x4C89D8);
MakeDword(0x4C89D4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C8A04, -1);
MakeDword(0x4C8A00);
MakeDword(0x4C89FC);
MakeUnkn(0x4C8A18, 1);
MakeNameEx(0x4C8A18, "RTTI_4C8A18_DynArray_.9", 0);
MakeDword(0x4C8A18);
MakeUnkn(0x4C8A1C, 1);
MakeNameEx(0x4C8A1C, "", 0);
MakeByte(0x4C8A1C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4C8A1D, 0x4C8A20);
MakeDword(0x4C8A20);
MakeDword(0x4C8A24);
MakeDword(0x4C8A28);
MakeDword(0x4C8A2C);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4C8A30, 0x4C8A37);
MakeCode(0x4C8A38);
MakeCode(0x4C8A95);
MakeCode(0x4C8AD1);
MakeCode(0x4C8AED);
MakeCode(0x4C8B09);
MakeCode(0x4C8B3A);
MakeCode(0x4C8B4A);
MakeCode(0x4C8B57);
MakeCode(0x4C8B66);
MakeCode(0x4C8B6B);
MakeFunction(0x4C8A38, 0x4C8B74);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C8B7C, -1);
MakeDword(0x4C8B78);
MakeDword(0x4C8B74);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C8BA4, -1);
MakeDword(0x4C8BA0);
MakeDword(0x4C8B9C);
MakeCode(0x4C8BB8);
MakeCode(0x4C8BD9);
MakeCode(0x4C8BEE);
MakeCode(0x4C8BFD);
MakeCode(0x4C8C09);
MakeCode(0x4C8C18);
MakeCode(0x4C8C27);
MakeCode(0x4C8C36);
MakeCode(0x4C8C45);
MakeCode(0x4C8C51);
MakeCode(0x4C8C60);
MakeFunction(0x4C8BB8, 0x4C8C74);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C8C94, -1);
MakeDword(0x4C8C90);
MakeDword(0x4C8C8C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C8CBC, -1);
MakeDword(0x4C8CB8);
MakeDword(0x4C8CB4);
MakeCode(0x4C8CD0);
MakeCode(0x4C8CDF);
MakeCode(0x4C8CFB);
MakeCode(0x4C8D26);
MakeFunction(0x4C8CD0, 0x4C8D3E);
MakeUnkn(0x4C8D40, 1);
MakeNameEx(0x4C8D40, "RTTI_4C8D40_DynArray_.01", 0);
MakeDword(0x4C8D40);
MakeUnkn(0x4C8D44, 1);
MakeNameEx(0x4C8D44, "", 0);
MakeByte(0x4C8D44);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4C8D45, 0x4C8D49);
MakeDword(0x4C8D49);
MakeDword(0x4C8D4D);
MakeDword(0x4C8D51);
MakeDword(0x4C8D55);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4C8D59, 0x4C8D60);
MakeCode(0x4C8D60);
MakeCode(0x4C8DAA);
MakeCode(0x4C8DD6);
MakeCode(0x4C8DE3);
MakeCode(0x4C8DF2);
MakeCode(0x4C8DF7);
MakeFunction(0x4C8D60, 0x4C8DFE);
MakeCode(0x4C8E00);
MakeCode(0x4C8E19);
MakeCode(0x4C8E34);
MakeCode(0x4C8E61);
MakeFunction(0x4C8E00, 0x4C8E81);
MakeUnkn(0x4C8E84, 1);
MakeNameEx(0x4C8E84, "RTTI_4C8E84_DynArray_.11", 0);
MakeDword(0x4C8E84);
MakeUnkn(0x4C8E88, 1);
MakeNameEx(0x4C8E88, "", 0);
MakeByte(0x4C8E88);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4C8E89, 0x4C8E8D);
MakeDword(0x4C8E8D);
MakeDword(0x4C8E91);
MakeDword(0x4C8E95);
MakeDword(0x4C8E99);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4C8E9D, 0x4C8EA4);
MakeCode(0x4C8EA4);
MakeCode(0x4C8EF3);
MakeCode(0x4C8F20);
MakeCode(0x4C8F2D);
MakeCode(0x4C8F3C);
MakeCode(0x4C8F41);
MakeFunction(0x4C8EA4, 0x4C8F49);
MakeUnkn(0x4C8F4C, 1);
MakeNameEx(0x4C8F4C, "RTTI_4C8F4C_DynArray_.21", 0);
MakeDword(0x4C8F4C);
MakeUnkn(0x4C8F50, 1);
MakeNameEx(0x4C8F50, "", 0);
MakeByte(0x4C8F50);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4C8F51, 0x4C8F55);
MakeDword(0x4C8F55);
MakeDword(0x4C8F59);
MakeDword(0x4C8F5D);
MakeDword(0x4C8F61);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4C8F65, 0x4C8F6C);
MakeCode(0x4C8F6C);
MakeCode(0x4C8FDF);
MakeCode(0x4C9031);
MakeCode(0x4C9045);
MakeCode(0x4C9049);
MakeCode(0x4C9056);
MakeCode(0x4C9065);
MakeCode(0x4C906A);
MakeFunction(0x4C8F6C, 0x4C9073);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C907C, -1);
MakeDword(0x4C9078);
MakeDword(0x4C9074);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C90A4, -1);
MakeDword(0x4C90A0);
MakeDword(0x4C909C);
MakeCode(0x4C90B8);
MakeCode(0x4C9115);
MakeCode(0x4C9122);
MakeCode(0x4C912B);
MakeCode(0x4C9130);
MakeFunction(0x4C90B8, 0x4C9137);
MakeCode(0x4C9138);
MakeCode(0x4C914C);
MakeComm(0x4C9161, "'0x1'");
MakeCode(0x4C9161);
MakeCode(0x4C91AD);
MakeCode(0x4C91B1);
MakeComm(0x4C91C8, "'0x1'");
MakeCode(0x4C91C8);
MakeCode(0x4C91FF);
MakeCode(0x4C9203);
MakeCode(0x4C9226);
MakeCode(0x4C923D);
MakeCode(0x4C9280);
MakeFunction(0x4C9138, 0x4C928B);
MakeByte(0x4C928C);
MakeUnkn(0x4C928C, 1);
MakeNameEx(0x4C928C, "gvar_004C928C", 0);
MakeCode(0x4C9290);
MakeComm(0x4C9318, "'TFileStream.Create'");
MakeComm(0x4C933B, "'THandleStream.Read'");
MakeComm(0x4C934F, "'Exception.Create'");
MakeCode(0x4C9359);
MakeComm(0x4C9379, "'Exception.Create'");
MakeCode(0x4C9383);
MakeComm(0x4C93A9, "'Exception.Create'");
MakeCode(0x4C93B3);
MakeComm(0x4C93D0, "'TStream.GetSize'");
MakeCode(0x4C93E1);
MakeCode(0x4C93F2);
MakeComm(0x4C93FE, "'Exception.Create'");
MakeCode(0x4C9408);
MakeComm(0x4C9414, "'TStream.Seek'");
MakeCode(0x4C9417);
MakeCode(0x4C942A);
MakeComm(0x4C9436, "'Exception.Create'");
MakeCode(0x4C9440);
MakeCode(0x4C9456);
MakeComm(0x4C9462, "'Exception.Create'");
MakeCode(0x4C946C);
MakeCode(0x4C9489);
MakeCode(0x4C94AB);
MakeCode(0x4C94D9);
MakeCode(0x4C94EC);
MakeCode(0x4C94F6);
MakeCode(0x4C94FB);
MakeCode(0x4C9507);
MakeCode(0x4C951B);
MakeComm(0x4C9525, "'TTrackData.Create'");
MakeComm(0x4C9537, "'TTabDocument.?f60:dword'");
MakeCode(0x4C9540);
MakeComm(0x4C9550, "'TTabDocument.?f64:Longint'");
MakeCode(0x4C9555);
MakeComm(0x4C955B, "'TTabDocument.?f64:Longint'");
MakeCode(0x4C955E);
MakeCode(0x4C956E);
MakeCode(0x4C958B);
MakeCode(0x4C959B);
MakeCode(0x4C95CF);
MakeCode(0x4C95DF);
MakeCode(0x4C95FC);
MakeCode(0x4C960C);
MakeCode(0x4C9629);
MakeCode(0x4C963F);
MakeCode(0x4C965C);
MakeCode(0x4C966C);
MakeCode(0x4C9689);
MakeCode(0x4C969F);
MakeCode(0x4C96BC);
MakeCode(0x4C96CC);
MakeCode(0x4C96E9);
MakeCode(0x4C96FF);
MakeCode(0x4C971C);
MakeCode(0x4C972C);
MakeCode(0x4C9749);
MakeCode(0x4C975F);
MakeCode(0x4C977C);
MakeCode(0x4C978C);
MakeCode(0x4C97A9);
MakeCode(0x4C97BF);
MakeCode(0x4C97DE);
MakeCode(0x4C97EE);
MakeCode(0x4C980B);
MakeCode(0x4C981B);
MakeCode(0x4C9835);
MakeCode(0x4C9845);
MakeCode(0x4C985F);
MakeCode(0x4C986F);
MakeCode(0x4C989D);
MakeCode(0x4C98AC);
MakeCode(0x4C98C8);
MakeCode(0x4C98D8);
MakeCode(0x4C9912);
MakeCode(0x4C9918);
MakeComm(0x4C993A, "'TTabDocument.?f4C:string'");
MakeComm(0x4C9954, "'TTabDocument.?f50:string'");
MakeComm(0x4C996E, "'TTabDocument.?f5C:string'");
MakeCode(0x4C997B);
MakeComm(0x4C9993, "'TTabDocument.?f4C:string'");
MakeComm(0x4C99B3, "'TTabDocument.?f50:string'");
MakeComm(0x4C99D3, "'TTabDocument.?f54:string'");
MakeComm(0x4C99F3, "'TTabDocument.?f58:string'");
MakeComm(0x4C9A13, "'TTabDocument.?f5C:string'");
MakeCode(0x4C9A1B);
MakeCode(0x4C9A29);
MakeCode(0x4C9A36);
MakeCode(0x4C9A44);
MakeCode(0x4C9A45);
MakeCode(0x4C9A4A);
MakeCode(0x4C9A66);
MakeCode(0x4C9A87);
MakeComm(0x4C9A8B, "'TTabDocument.?f68:TTrackData'");
MakeComm(0x4C9A8E, "'TTrackData.?f60:dword'");
MakeCode(0x4C9A97);
MakeComm(0x4C9A9A, "'TTabDocument.?f60:dword'");
MakeCode(0x4C9AAE);
MakeCode(0x4C9ACC);
MakeCode(0x4C9AE6);
MakeCode(0x4C9B10);
MakeCode(0x4C9B12);
MakeCode(0x4C9B43);
MakeCode(0x4C9B4D);
MakeCode(0x4C9B6F);
MakeCode(0x4C9B8B);
MakeCode(0x4C9B95);
MakeComm(0x4C9B9E, "'TTabDocument.?f60:dword'");
MakeCode(0x4C9BAE);
MakeCode(0x4C9BBE);
MakeComm(0x4C9BC7, "'TTabDocument.?f60:dword'");
MakeCode(0x4C9BD7);
MakeCode(0x4C9BE7);
MakeCode(0x4C9BF5);
MakeCode(0x4C9C02);
MakeCode(0x4C9C10);
MakeCode(0x4C9C11);
MakeCode(0x4C9C16);
MakeCode(0x4C9C18);
MakeCode(0x4C9C25);
MakeCode(0x4C9C38);
MakeCode(0x4C9C39);
MakeCode(0x4C9C3E);
MakeCode(0x4C9C40);
MakeCode(0x4C9C4D);
MakeCode(0x4C9C56);
MakeCode(0x4C9C5B);
MakeCode(0x4C9C6F);
MakeCode(0x4C9C73);
MakeCode(0x4C9C7D);
MakeCode(0x4C9C95);
MakeCode(0x4C9C9F);
MakeComm(0x4C9CA2, "'TTabDocument.?f48:byte'");
MakeComm(0x4C9CA9, "'TTabDocument.?f3C:TList'");
MakeComm(0x4C9CAC, "'TList.FCount:Integer'");
MakeCode(0x4C9CB7);
MakeComm(0x4C9CBA, "'TTabDocument.?f3C:TList'");
MakeCode(0x4C9CCD);
MakeComm(0x4C9CD0, "'TTabDocument.?fB4:string'");
MakeComm(0x4C9CE2, "'TTabDocument.sub_004BC77C'");
MakeCode(0x4C9D03);
MakeCode(0x4C9D10);
MakeCode(0x4C9D31);
MakeCode(0x4C9D36);
MakeFunction(0x4C9290, 0x4C9D3F);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C9D48, -1);
MakeDword(0x4C9D44);
MakeDword(0x4C9D40);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C9D9C, -1);
MakeDword(0x4C9D98);
MakeDword(0x4C9D94);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C9E2C, -1);
MakeDword(0x4C9E28);
MakeDword(0x4C9E24);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C9E68, -1);
MakeDword(0x4C9E64);
MakeDword(0x4C9E60);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C9ECC, -1);
MakeDword(0x4C9EC8);
MakeDword(0x4C9EC4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C9F30, -1);
MakeDword(0x4C9F2C);
MakeDword(0x4C9F28);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4C9F58, -1);
MakeDword(0x4C9F54);
MakeDword(0x4C9F50);
MakeCode(0x4CA040);
MakeFunction(0x4CA040, 0x4CA053);
MakeCode(0x4CA054);
MakeFunction(0x4CA054, 0x4CA070);
MakeCode(0x4CA070);
MakeFunction(0x4CA070, 0x4CA08D);
MakeCode(0x4CA090);
MakeFunction(0x4CA090, 0x4CA0AC);
MakeCode(0x4CA0AC);
MakeCode(0x4CA0BE);
MakeCode(0x4CA0E0);
MakeCode(0x4CA0F9);
MakeCode(0x4CA113);
MakeFunction(0x4CA0AC, 0x4CA117);
MakeCode(0x4CA118);
MakeFunction(0x4CA118, 0x4CA12B);
MakeUnkn(0x4CA12C, 1);
MakeNameEx(0x4CA12C, "RTTI_4CA12C_DynArray_.31", 0);
MakeDword(0x4CA12C);
MakeUnkn(0x4CA130, 1);
MakeNameEx(0x4CA130, "", 0);
MakeByte(0x4CA130);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4CA131, 0x4CA135);
MakeDword(0x4CA135);
MakeDword(0x4CA139);
MakeDword(0x4CA13D);
MakeDword(0x4CA141);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4CA145, 0x4CA14C);
MakeCode(0x4CA14C);
MakeCode(0x4CA180);
MakeCode(0x4CA19E);
MakeCode(0x4CA1BA);
MakeCode(0x4CA1D6);
MakeCode(0x4CA1F2);
MakeCode(0x4CA206);
MakeCode(0x4CA215);
MakeFunction(0x4CA14C, 0x4CA21C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4CA224, -1);
MakeDword(0x4CA220);
MakeDword(0x4CA21C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4CA24C, -1);
MakeDword(0x4CA248);
MakeDword(0x4CA244);
MakeCode(0x4CA260);
MakeCode(0x4CA2BE);
MakeCode(0x4CA2E8);
MakeCode(0x4CA2FF);
MakeCode(0x4CA315);
MakeCode(0x4CA32B);
MakeCode(0x4CA341);
MakeCode(0x4CA355);
MakeCode(0x4CA36F);
MakeCode(0x4CA397);
MakeCode(0x4CA39B);
MakeCode(0x4CA3AF);
MakeCode(0x4CA3C6);
MakeCode(0x4CA3DC);
MakeCode(0x4CA3E4);
MakeCode(0x4CA3FA);
MakeCode(0x4CA3FC);
MakeCode(0x4CA409);
MakeCode(0x4CA418);
MakeCode(0x4CA41D);
MakeFunction(0x4CA260, 0x4CA428);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4CA430, -1);
MakeDword(0x4CA42C);
MakeDword(0x4CA428);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4CA458, -1);
MakeDword(0x4CA454);
MakeDword(0x4CA450);
MakeUnkn(0x4CA46C, 1);
MakeNameEx(0x4CA46C, "RTTI_4CA46C_DynArray_.41", 0);
MakeDword(0x4CA46C);
MakeUnkn(0x4CA470, 1);
MakeNameEx(0x4CA470, "", 0);
MakeByte(0x4CA470);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4CA471, 0x4CA475);
MakeDword(0x4CA475);
MakeDword(0x4CA479);
MakeDword(0x4CA47D);
MakeDword(0x4CA481);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4CA485, 0x4CA48C);
MakeCode(0x4CA48C);
MakeCode(0x4CA4BE);
MakeCode(0x4CA4D2);
MakeCode(0x4CA516);
MakeCode(0x4CA534);
MakeCode(0x4CA560);
MakeCode(0x4CA577);
MakeCode(0x4CA58E);
MakeCode(0x4CA5BE);
MakeCode(0x4CA5D2);
MakeCode(0x4CA5E6);
MakeCode(0x4CA5F0);
MakeCode(0x4CA607);
MakeCode(0x4CA614);
MakeCode(0x4CA623);
MakeCode(0x4CA628);
MakeFunction(0x4CA48C, 0x4CA631);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4CA63C, -1);
MakeDword(0x4CA638);
MakeDword(0x4CA634);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4CA664, -1);
MakeDword(0x4CA660);
MakeDword(0x4CA65C);
MakeCode(0x4CA678);
MakeCode(0x4CA6C6);
MakeCode(0x4CA6CE);
MakeCode(0x4CA6D6);
MakeCode(0x4CA6EC);
MakeCode(0x4CA6FD);
MakeCode(0x4CA71B);
MakeCode(0x4CA71F);
MakeCode(0x4CA72D);
MakeCode(0x4CA73B);
MakeCode(0x4CA749);
MakeCode(0x4CA757);
MakeCode(0x4CA759);
MakeCode(0x4CA760);
MakeFunction(0x4CA678, 0x4CA767);
MakeCode(0x4CA768);
MakeFunction(0x4CA768, 0x4CA77A);
MakeCode(0x4CA77C);
MakeCode(0x4CA795);
MakeCode(0x4CA7B0);
MakeCode(0x4CA7EA);
MakeFunction(0x4CA77C, 0x4CA80A);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4CA814, -1);
MakeDword(0x4CA810);
MakeDword(0x4CA80C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4CA83C, -1);
MakeDword(0x4CA838);
MakeDword(0x4CA834);
MakeUnkn(0x4CA850, 1);
MakeNameEx(0x4CA850, "RTTI_4CA850_DynArray_.51", 0);
MakeDword(0x4CA850);
MakeUnkn(0x4CA854, 1);
MakeNameEx(0x4CA854, "", 0);
MakeByte(0x4CA854);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4CA855, 0x4CA859);
MakeDword(0x4CA859);
MakeDword(0x4CA85D);
MakeDword(0x4CA861);
MakeDword(0x4CA865);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4CA869, 0x4CA870);
MakeCode(0x4CA870);
MakeCode(0x4CA8AE);
MakeCode(0x4CA8C2);
MakeCode(0x4CA8F6);
MakeCode(0x4CA922);
MakeCode(0x4CA938);
MakeCode(0x4CA945);
MakeCode(0x4CA954);
MakeCode(0x4CA959);
MakeFunction(0x4CA870, 0x4CA962);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4CA96C, -1);
MakeDword(0x4CA968);
MakeDword(0x4CA964);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4CA994, -1);
MakeDword(0x4CA990);
MakeDword(0x4CA98C);
MakeUnkn(0x4CA9A8, 1);
MakeNameEx(0x4CA9A8, "RTTI_4CA9A8_DynArray_.61", 0);
MakeDword(0x4CA9A8);
MakeUnkn(0x4CA9AC, 1);
MakeNameEx(0x4CA9AC, "", 0);
MakeByte(0x4CA9AC);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4CA9AD, 0x4CA9B1);
MakeDword(0x4CA9B1);
MakeDword(0x4CA9B5);
MakeDword(0x4CA9B9);
MakeDword(0x4CA9BD);
SetLongPrm(INF_STRTYPE, ASCSTR_PASCAL);
MakeStr(0x4CA9C1, 0x4CA9C8);
MakeCode(0x4CA9C8);
MakeCode(0x4CAA2A);
MakeCode(0x4CAA8A);
MakeCode(0x4CAA8E);
MakeCode(0x4CAAA0);
MakeCode(0x4CAAAD);
MakeCode(0x4CAABC);
MakeCode(0x4CAAC1);
MakeFunction(0x4CA9C8, 0x4CAACA);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4CAAD4, -1);
MakeDword(0x4CAAD0);
MakeDword(0x4CAACC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4CAAFC, -1);
MakeDword(0x4CAAF8);
MakeDword(0x4CAAF4);
MakeCode(0x4CAB10);
MakeCode(0x4CAB80);
MakeCode(0x4CAB8D);
MakeCode(0x4CAB96);
MakeCode(0x4CAB9B);
MakeFunction(0x4CAB10, 0x4CABA3);
MakeCode(0x4CABA4);
MakeComm(0x4CABEB, "'TMemoryStream.Create'");
MakeComm(0x4CAC10, "'0x4254'");
MakeComm(0x4CAC1B, "'0x54'");
MakeComm(0x4CAC24, "'0xB'");
MakeComm(0x4CAC31, "'TTabDocument.?f64:Longint'");
MakeComm(0x4CAC3D, "'TTabDocument.?f64:Longint'");
MakeCode(0x4CAC46);
MakeCode(0x4CAC4A);
MakeComm(0x4CAC4D, "'TTabDocument.?f64:Longint'");
MakeComm(0x4CAC58, "'TTabDocument.?f60:dword'");
MakeComm(0x4CAC66, "'TTabDocument.?f60:dword'");
MakeCode(0x4CAC73);
MakeComm(0x4CAC80, "'TTabDocument.?f68:TTrackData'");
MakeComm(0x4CAC83, "'TTrackData.?f60:dword'");
MakeCode(0x4CAC8E);
MakeCode(0x4CAC92);
MakeComm(0x4CAC95, "'TTabDocument.?f60:dword'");
MakeCode(0x4CACA0);
MakeCode(0x4CACB5);
MakeCode(0x4CACDA);
MakeCode(0x4CACE4);
MakeCode(0x4CACEA);
MakeCode(0x4CACF0);
MakeCode(0x4CACFA);
MakeComm(0x4CAD03, "'TTabDocument.?f60:dword'");
MakeCode(0x4CAD0E);
MakeCode(0x4CAD23);
MakeCode(0x4CAD42);
MakeCode(0x4CAD48);
MakeCode(0x4CAD52);
MakeComm(0x4CAD5B, "'TTabDocument.?f60:dword'");
MakeCode(0x4CAD66);
MakeCode(0x4CAD79);
MakeCode(0x4CAD7F);
MakeCode(0x4CAD83);
MakeComm(0x4CAD8D, "'TTabDocument.?f68:TTrackData'");
MakeComm(0x4CAD90, "'TTrackData.?f60:dword'");
MakeCode(0x4CADA3);
MakeComm(0x4CADB3, "'TTabDocument.?f38:dword'");
MakeCode(0x4CADCD);
MakeComm(0x4CADD0, "'TTabDocument.?f38:dword'");
MakeCode(0x4CADED);
MakeComm(0x4CADF0, "'TTabDocument.?f38:dword'");
MakeCode(0x4CADFA);
MakeComm(0x4CAE04, "'TTabDocument.?f68:TTrackData'");
MakeComm(0x4CAE07, "'TTrackData.?f60:dword'");
MakeComm(0x4CAE12, "'TTabDocument.?f60:dword'");
MakeCode(0x4CAE1D);
MakeCode(0x4CAE47);
MakeCode(0x4CAE53);
MakeCode(0x4CAE57);
MakeComm(0x4CAEA6, "'TTabDocument.?f60:dword'");
MakeCode(0x4CAEB1);
MakeCode(0x4CAEC6);
MakeComm(0x4CAEC9, "'TTabDocument.?f60:dword'");
MakeCode(0x4CAED4);
MakeCode(0x4CAEEA);
MakeComm(0x4CAEED, "'TTabDocument.?f60:dword'");
MakeCode(0x4CAEF8);
MakeCode(0x4CAF0B);
MakeCode(0x4CAF16);
MakeComm(0x4CAF19, "'TTabDocument.?f60:dword'");
MakeCode(0x4CAF24);
MakeCode(0x4CAF3A);
MakeComm(0x4CAF3D, "'TTabDocument.?f60:dword'");
MakeCode(0x4CAF48);
MakeCode(0x4CAF5E);
MakeComm(0x4CAF67, "'TTabDocument.?f60:dword'");
MakeCode(0x4CAF72);
MakeCode(0x4CAF88);
MakeComm(0x4CAF8B, "'TTabDocument.?f60:dword'");
MakeCode(0x4CAF96);
MakeCode(0x4CAFAC);
MakeComm(0x4CAFAF, "'TTabDocument.?f60:dword'");
MakeCode(0x4CAFBA);
MakeCode(0x4CAFD0);
MakeComm(0x4CAFD3, "'TTabDocument.?f60:dword'");
MakeCode(0x4CAFDE);
MakeCode(0x4CAFF4);
MakeComm(0x4CAFF7, "'TTabDocument.?f60:dword'");
MakeCode(0x4CB002);
MakeCode(0x4CB018);
MakeComm(0x4CB01B, "'TTabDocument.?f60:dword'");
MakeCode(0x4CB026);
MakeCode(0x4CB03C);
MakeComm(0x4CB03F, "'TTabDocument.?f60:dword'");
MakeCode(0x4CB04A);
MakeCode(0x4CB060);
MakeComm(0x4CB063, "'TTabDocument.?f60:dword'");
MakeCode(0x4CB06E);
MakeCode(0x4CB084);
MakeComm(0x4CB087, "'TTabDocument.?f60:dword'");
MakeCode(0x4CB092);
MakeCode(0x4CB0A8);
MakeComm(0x4CB0AB, "'TTabDocument.?f60:dword'");
MakeCode(0x4CB0B6);
MakeCode(0x4CB0CC);
MakeComm(0x4CB0CF, "'TTabDocument.?f60:dword'");
MakeCode(0x4CB0DA);
MakeCode(0x4CB0F0);
MakeComm(0x4CB0F3, "'TTabDocument.?f60:dword'");
MakeCode(0x4CB0FE);
MakeCode(0x4CB114);
MakeComm(0x4CB117, "'TTabDocument.?f60:dword'");
MakeCode(0x4CB122);
MakeCode(0x4CB148);
MakeComm(0x4CB14B, "'TTabDocument.?f60:dword'");
MakeCode(0x4CB156);
MakeCode(0x4CB16C);
MakeComm(0x4CB170, "'TTabDocument.?f4C:string'");
MakeComm(0x4CB17F, "'TTabDocument.?f50:string'");
MakeComm(0x4CB18E, "'TTabDocument.?f54:string'");
MakeComm(0x4CB19D, "'TTabDocument.?f58:string'");
MakeComm(0x4CB1AC, "'TTabDocument.?f5C:string'");
MakeCode(0x4CB1CD);
MakeCode(0x4CB1D7);
MakeCode(0x4CB1EE);
MakeCode(0x4CB218);
MakeComm(0x4CB21C, "'TTabDocument.?f68:TTrackData'");
MakeComm(0x4CB21F, "'TTrackData.?f60:dword'");
MakeCode(0x4CB242);
MakeComm(0x4CB245, "'TTabDocument.?f60:dword'");
MakeCode(0x4CB250);
MakeCode(0x4CB264);
MakeComm(0x4CB26D, "'TTabDocument.?f60:dword'");
MakeCode(0x4CB278);
MakeCode(0x4CB285);
MakeComm(0x4CB28E, "'TTabDocument.?f60:dword'");
MakeCode(0x4CB299);
MakeCode(0x4CB2A6);
MakeCode(0x4CB2AE);
MakeCode(0x4CB2B8);
MakeCode(0x4CB2CF);
MakeCode(0x4CB2DC);
MakeCode(0x4CB2EA);
MakeCode(0x4CB2EF);
MakeComm(0x4CB2FD, "'TCustomMemoryStream.Seek'");
MakeComm(0x4CB310, "'TStream.GetSize'");
MakeComm(0x4CB32E, "'TCustomMemoryStream.Seek'");
MakeCode(0x4CB34C);
MakeCode(0x4CB359);
MakeCode(0x4CB362);
MakeCode(0x4CB367);
MakeComm(0x4CB36C, "'TTabDocument.?f48:byte'");
MakeComm(0x4CB37B, "'TTabDocument.?fB4:string'");
MakeComm(0x4CB38D, "'TTabDocument.sub_004BC77C'");
MakeCode(0x4CB390);
MakeCode(0x4CB39D);
MakeCode(0x4CB3AE);
MakeCode(0x4CB3B3);
MakeFunction(0x4CABA4, 0x4CB3BC);
MakeByte(0x4CB3BC);
MakeUnkn(0x4CB3BC, 1);
MakeNameEx(0x4CB3BC, "gvar_004CB3BC", 0);
MakeByte(0x4CB3BE);
MakeUnkn(0x4CB3BE, 1);
MakeNameEx(0x4CB3BE, "gvar_004CB3BE", 0);
MakeByte(0x4CB3C0);
MakeUnkn(0x4CB3C0, 1);
MakeNameEx(0x4CB3C0, "gvar_004CB3C0", 0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4CB3CC, -1);
MakeDword(0x4CB3C8);
MakeDword(0x4CB3C4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4CB3F4, -1);
MakeDword(0x4CB3F0);
MakeDword(0x4CB3EC);
MakeCode(0x4CB408);
MakeFunction(0x4CB408, 0x4CB409);
MakeCode(0x4CB40C);
MakeCode(0x4CB433);
MakeCode(0x4CB43F);
MakeCode(0x4CB44D);
MakeCode(0x4CB470);
MakeCode(0x4CB476);
MakeCode(0x4CB47D);
MakeCode(0x4CB489);
MakeCode(0x4CB498);
MakeCode(0x4CB4A9);
MakeCode(0x4CB4B0);
MakeCode(0x4CB4B6);
MakeFunction(0x4CB40C, 0x4CB4BD);
MakeCode(0x4CB4C0);
MakeCode(0x4CB4E1);
MakeCode(0x4CB4E2);
MakeComm(0x4CB4EA, "'TTabDocument.?f30:dword'");
MakeComm(0x4CB4F4, "'0x0'");
MakeCode(0x4CB4F4);
MakeComm(0x4CB4FE, "'TTabDocument.?f30:dword'");
MakeFunction(0x4CB4C0, 0x4CB514);
MakeByte(0x4CB514);
MakeUnkn(0x4CB514, 1);
MakeNameEx(0x4CB514, "gvar_004CB514", 0);
MakeCode(0x4CB518);
MakeCode(0x4CB535);
MakeComm(0x4CB53F, "'TTabDocument.?f30:dword'");
MakeComm(0x4CB549, "'0x1'");
MakeCode(0x4CB549);
MakeComm(0x4CB555, "'TTabDocument.?f30:dword'");
MakeCode(0x4CB569);
MakeComm(0x4CB56A, "'TTabDocument.?f38:dword'");
MakeCode(0x4CB56A);
MakeCode(0x4CB579);
MakeFunction(0x4CB518, 0x4CB584);
MakeByte(0x4CB584);
MakeUnkn(0x4CB584, 1);
MakeNameEx(0x4CB584, "gvar_004CB584", 0);
MakeCode(0x4CB588);
MakeCode(0x4CB59F);
MakeCode(0x4CB5BC);
MakeCode(0x4CB5C2);
MakeCode(0x4CB5C4);
MakeFunction(0x4CB588, 0x4CB5C9);
MakeCode(0x4CB5CC);
MakeCode(0x4CB5E8);
MakeCode(0x4CB60A);
MakeCode(0x4CB60E);
MakeFunction(0x4CB5CC, 0x4CB61F);
MakeCode(0x4CB620);
MakeCode(0x4CB629);
MakeComm(0x4CB62F, "'TTabDocument.?f30:dword'");
MakeComm(0x4CB641, "'TTabDocument.?f30:dword'");
MakeCode(0x4CB64B);
MakeCode(0x4CB651);
MakeFunction(0x4CB620, 0x4CB656);
MakeCode(0x4CB658);
MakeFunction(0x4CB658, 0x4CB659);
MakeCode(0x4CB65C);
MakeFunction(0x4CB65C, 0x4CB65D);
MakeCode(0x4CB660);
MakeCode(0x4CB694);
MakeCode(0x4CB69E);
MakeCode(0x4CB6B8);
MakeCode(0x4CB6C2);
MakeCode(0x4CB6C5);
MakeCode(0x4CB6C9);
MakeCode(0x4CB6D8);
MakeCode(0x4CB6E4);
MakeCode(0x4CB70D);
MakeCode(0x4CB727);
MakeFunction(0x4CB660, 0x4CB732);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4CB73C, -1);
MakeDword(0x4CB738);
MakeDword(0x4CB734);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4CB764, -1);
MakeDword(0x4CB760);
MakeDword(0x4CB75C);
MakeCode(0x4CB778);
MakeFunction(0x4CB778, 0x4CB799);
MakeCode(0x4CB79C);
MakeComm(0x4CB7A3, "'TTabDocument.?f30:dword'");
MakeComm(0x4CB7AB, "'TTabDocument.?f38:dword'");
MakeCode(0x4CB7B4);
MakeComm(0x4CB7B8, "'TTabDocument.?f30:dword'");
MakeComm(0x4CB7C2, "'TTabDocument.?f30:dword'");
MakeCode(0x4CB7CD);
MakeFunction(0x4CB79C, 0x4CB7D1);
MakeCode(0x4CB7D4);
MakeFunction(0x4CB7D4, 0x4CB7F4);
MakeCode(0x4CB7F4);
MakeCode(0x4CB819);
MakeFunction(0x4CB7F4, 0x4CB81E);
MakeCode(0x4CB820);
MakeCode(0x4CB83E);
MakeCode(0x4CB859);
MakeFunction(0x4CB820, 0x4CB860);
MakeCode(0x4CB860);
MakeComm(0x4CB86D, "'TTabDocument.?f38:dword'");
MakeCode(0x4CB872);
MakeCode(0x4CB886);
MakeComm(0x4CB899, "'TTabDocument.?f38:dword'");
MakeCode(0x4CB8A1);
MakeComm(0x4CB8A5, "'TTabDocument.?f30:dword'");
MakeCode(0x4CB8B0);
MakeComm(0x4CB8B8, "'TTabDocument.?f30:dword'");
MakeComm(0x4CB8C4, "'TTabDocument.?f30:dword'");
MakeCode(0x4CB8CF);
MakeComm(0x4CB8D3, "'TTabDocument.?f30:dword'");
MakeComm(0x4CB8D9, "'TTabDocument.?f30:dword'");
MakeComm(0x4CB8E0, "'TTabDocument.?f38:dword'");
MakeComm(0x4CB8EE, "'TTabDocument.?f38:dword'");
MakeComm(0x4CB8F1, "'TTabDocument.?f38:dword'");
MakeComm(0x4CB8F7, "'TTabDocument.?f34:TVirtualMemory'");
MakeFunction(0x4CB860, 0x4CB903);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4CB90C, -1);
MakeDword(0x4CB908);
MakeDword(0x4CB904);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4CB934, -1);
MakeDword(0x4CB930);
MakeDword(0x4CB92C);
MakeCode(0x4CB948);
MakeCode(0x4CB961);
MakeFunction(0x4CB948, 0x4CB968);
MakeCode(0x4CB968);
MakeCode(0x4CB982);
MakeCode(0x4CB98C);
MakeCode(0x4CB9A2);
MakeCode(0x4CB9B3);
MakeCode(0x4CB9B6);
MakeCode(0x4CB9BA);
MakeCode(0x4CB9C5);
MakeFunction(0x4CB968, 0x4CB9D1);
MakeCode(0x4CB9D4);
MakeCode(0x4CB9E6);
MakeFunction(0x4CB9D4, 0x4CB9EC);
MakeCode(0x4CB9EC);
MakeComm(0x4CB9EC, "'TTabDocument.?f38:dword'");
MakeComm(0x4CB9F5, "'TTabDocument.?f30:dword'");
MakeCode(0x4CB9FD);
MakeFunction(0x4CB9EC, 0x4CBA00);
MakeCode(0x4CBA00);
MakeCode(0x4CBA27);
MakeCode(0x4CBA37);
MakeCode(0x4CBA4F);
MakeCode(0x4CBA67);
MakeCode(0x4CBA77);
MakeCode(0x4CBA8F);
MakeComm(0x4CBAA6, "'TTabDocument.?f38:dword'");
MakeComm(0x4CBAB0, "'TTabDocument.?f30:dword'");
MakeComm(0x4CBAB8, "'TTabDocument.?f38:dword'");
MakeCode(0x4CBAB8);
MakeComm(0x4CBAC3, "'TTabDocument.?f30:dword'");
MakeComm(0x4CBACE, "'TTabDocument.?f30:dword'");
MakeCode(0x4CBAD7);
MakeCode(0x4CBAF6);
MakeCode(0x4CBAF8);
MakeComm(0x4CBB03, "'TTabDocument.?f30:dword'");
MakeCode(0x4CBB0C);
MakeCode(0x4CBB10);
MakeCode(0x4CBB12);
MakeComm(0x4CBB35, "'TTabDocument.?f38:dword'");
MakeCode(0x4CBB35);
MakeComm(0x4CBB5B, "'Exception.Create'");
MakeComm(0x4CBB65, "'TTabDocument.?f38:dword'");
MakeCode(0x4CBB65);
MakeComm(0x4CBB6E, "'TTabDocument.?f34:TVirtualMemory'");
MakeComm(0x4CBB7B, "'TTabDocument.?f30:dword'");
MakeComm(0x4CBB83, "'TTabDocument.?f30:dword'");
MakeComm(0x4CBB89, "'TTabDocument.?f38:dword'");
MakeComm(0x4CBB9F, "'TTabDocument.?f30:dword'");
MakeComm(0x4CBBB1, "'TTabDocument.?f38:dword'");
MakeComm(0x4CBBB9, "'TTabDocument.?f30:dword'");
MakeComm(0x4CBBC4, "'TTabDocument.?f30:dword'");
MakeComm(0x4CBBD6, "'TTabDocument.?f30:dword'");
MakeComm(0x4CBBE8, "'TTabDocument.?f30:dword'");
MakeComm(0x4CBBF9, "'TTabDocument.?f30:dword'");
MakeComm(0x4CBC09, "'TTabDocument.?f30:dword'");
MakeComm(0x4CBC16, "'TTabDocument.?f30:dword'");
MakeCode(0x4CBC1F);
MakeCode(0x4CBC2B);
MakeFunction(0x4CBA00, 0x4CBC37);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4CBC40, -1);
MakeDword(0x4CBC3C);
MakeDword(0x4CBC38);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4CBC68, -1);
MakeDword(0x4CBC64);
MakeDword(0x4CBC60);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4CBC84, -1);
MakeDword(0x4CBC80);
MakeDword(0x4CBC7C);
MakeCode(0x4CBCF8);
MakeFunction(0x4CBCF8, 0x4CBD00);
MakeCode(0x4CBD00);
MakeFunction(0x4CBD00, 0x4CBD1C);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4CBD3C, 0x4CBD47);
MakeCode(0x4CBD5C);
MakeCode(0x4CBDBC);
MakeCode(0x4CBE06);
MakeCode(0x4CBE08);
MakeCode(0x4CBE15);
MakeCode(0x4CBE1E);
MakeCode(0x4CBE23);
MakeFunction(0x4CBD5C, 0x4CBE2D);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4CBE30, 0x4CBE3D);
MakeCode(0x4CBE40);
MakeCode(0x4CBE51);
MakeCode(0x4CBE5E);
MakeCode(0x4CBE5F);
MakeCode(0x4CBE64);
MakeFunction(0x4CBE40, 0x4CBE68);
MakeCode(0x4CD000);
MakeCode(0x4CD04C);
MakeFunction(0x4CD000, 0x4CD095);
MakeCode(0x4CD098);
MakeFunction(0x4CD098, 0x4CD0A9);
MakeCode(0x4CD0AC);
MakeFunction(0x4CD0AC, 0x4CD0BB);
MakeCode(0x4CD0BC);
MakeCode(0x4CD102);
MakeCode(0x4CD120);
MakeCode(0x4CD12D);
MakeCode(0x4CD12E);
MakeCode(0x4CD133);
MakeFunction(0x4CD0BC, 0x4CD137);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4CD140, -1);
MakeDword(0x4CD13C);
MakeDword(0x4CD138);
MakeCode(0x4CD144);
MakeFunction(0x4CD144, 0x4CD153);
MakeCode(0x4CD154);
MakeCode(0x4CD1E7);
MakeCode(0x4CD1F4);
MakeCode(0x4CD1F5);
MakeCode(0x4CD1FA);
MakeFunction(0x4CD154, 0x4CD1FE);
MakeCode(0x4CD200);
MakeFunction(0x4CD200, 0x4CD208);
MakeUnkn(0x4CD208, 1);
MakeNameEx(0x4CD208, "Classes", 0x20);
MakeComm(0x4CD208, "'procedure Classes;'");
MakeCode(0x4CD208);
MakeCode(0x4CD246);
MakeCode(0x4CD283);
MakeCode(0x4CD290);
MakeCode(0x4CD291);
MakeCode(0x4CD296);
MakeFunction(0x4CD208, 0x4CD29A);
MakeCode(0x4CD29C);
MakeFunction(0x4CD29C, 0x4CD2A4);
MakeCode(0x4CD2A4);
MakeFunction(0x4CD2A4, 0x4CD2AC);
MakeUnkn(0x4CD2AC, 1);
MakeNameEx(0x4CD2AC, "Graphics", 0x20);
MakeComm(0x4CD2AC, "'procedure Graphics;'");
MakeCode(0x4CD2AC);
MakeFunction(0x4CD2AC, 0x4CD3A7);
MakeCode(0x4CD3A8);
MakeFunction(0x4CD3A8, 0x4CD3B0);
MakeCode(0x4CD3B0);
MakeFunction(0x4CD3B0, 0x4CD3BF);
MakeCode(0x4CD3C0);
MakeComm(0x4CD3D0, "'TCriticalSection.Create'");
MakeFunction(0x4CD3C0, 0x4CD3DB);
MakeCode(0x4CD3DC);
MakeFunction(0x4CD3DC, 0x4CD3E4);
MakeCode(0x4CD3E4);
MakeFunction(0x4CD3E4, 0x4CD463);
MakeUnkn(0x4CD464, 1);
MakeNameEx(0x4CD464, "ExtCtrls", 0x20);
MakeComm(0x4CD464, "'procedure ExtCtrls;'");
MakeCode(0x4CD464);
MakeFunction(0x4CD464, 0x4CD497);
MakeUnkn(0x4CD4A8, 1);
MakeNameEx(0x4CD4A8, "Dialogs", 0x20);
MakeComm(0x4CD4A8, "'procedure Dialogs;'");
MakeCode(0x4CD4A8);
MakeFunction(0x4CD4A8, 0x4CD4E5);
MakeUnkn(0x4CD4E8, 1);
MakeNameEx(0x4CD4E8, "Clipbrd", 0x20);
MakeComm(0x4CD4E8, "'procedure Clipbrd;'");
MakeCode(0x4CD4E8);
MakeFunction(0x4CD4E8, 0x4CD519);
MakeCode(0x4CD540);
MakeFunction(0x4CD540, 0x4CD54F);
MakeCode(0x4CD550);
MakeFunction(0x4CD550, 0x4CD558);
MakeUnkn(0x4CD558, 1);
MakeNameEx(0x4CD558, "Menus", 0x20);
MakeComm(0x4CD558, "'procedure Menus;'");
MakeCode(0x4CD558);
MakeFunction(0x4CD558, 0x4CD5DD);
MakeUnkn(0x4CD5E0, 1);
MakeNameEx(0x4CD5E0, "Controls", 0x20);
MakeComm(0x4CD5E0, "'procedure Controls;'");
MakeCode(0x4CD5E0);
MakeCode(0x4CD658);
MakeCode(0x4CD665);
MakeCode(0x4CD666);
MakeCode(0x4CD66B);
MakeFunction(0x4CD5E0, 0x4CD66F);
MakeUnkn(0x4CD670, 1);
MakeNameEx(0x4CD670, "ActnList", 0x20);
MakeComm(0x4CD670, "'procedure ActnList;'");
MakeCode(0x4CD670);
MakeFunction(0x4CD670, 0x4CD69A);
MakeUnkn(0x4CD69C, 1);
MakeNameEx(0x4CD69C, "Forms", 0x20);
MakeComm(0x4CD69C, "'procedure Forms;'");
MakeCode(0x4CD69C);
MakeFunction(0x4CD69C, 0x4CD6D5);
MakeCode(0x4CD6E8);
MakeFunction(0x4CD6E8, 0x4CD70D);
MakeCode(0x4CD710);
MakeFunction(0x4CD710, 0x4CD724);
MakeCode(0x4CD724);
MakeFunction(0x4CD724, 0x4CD72C);
MakeCode(0x4CD72C);
MakeFunction(0x4CD72C, 0x4CD734);
MakeCode(0x4CD734);
MakeFunction(0x4CD734, 0x4CD73C);
MakeCode(0x4CD73C);
MakeFunction(0x4CD73C, 0x4CD744);
MakeCode(0x4CD744);
MakeFunction(0x4CD744, 0x4CD753);
MakeCode(0x4CD754);
MakeFunction(0x4CD754, 0x4CD768);
MakeCode(0x4CD768);
MakeFunction(0x4CD768, 0x4CD791);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4CD7AC, 0x4CD7B7);
MakeCode(0x4CD7B8);
MakeFunction(0x4CD7B8, 0x4CD7DC);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4CD7F0, 0x4CD7FB);
MakeCode(0x4CD7FC);
MakeFunction(0x4CD7FC, 0x4CD831);
MakeCode(0x4CD834);
MakeComm(0x4CD844, "'TFont.Create'");
MakeFunction(0x4CD834, 0x4CD854);
MakeCode(0x4CD854);
MakeFunction(0x4CD854, 0x4CD87C);
MakeCode(0x4CD87C);
MakeFunction(0x4CD87C, 0x4CD884);
MakeCode(0x4CD884);
MakeFunction(0x4CD884, 0x4CD88C);
MakeCode(0x4CD88C);
MakeFunction(0x4CD88C, 0x4CD894);
MakeUnkn(0x4CD894, 1);
MakeNameEx(0x4CD894, "CheckLst", 0x20);
MakeComm(0x4CD894, "'procedure CheckLst;'");
MakeCode(0x4CD894);
MakeFunction(0x4CD894, 0x4CD8A3);
MakeCode(0x4CD8A4);
MakeCode(0x4CD8DC);
MakeCode(0x4CD8E9);
MakeCode(0x4CD8EA);
MakeCode(0x4CD8EF);
MakeFunction(0x4CD8A4, 0x4CD8F3);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4CD8FC, -1);
MakeDword(0x4CD8F8);
MakeDword(0x4CD8F4);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4CD914, 0x4CD922);
MakeCode(0x4CD924);
MakeFunction(0x4CD924, 0x4CD92C);
MakeCode(0x4CD92C);
MakeFunction(0x4CD92C, 0x4CD940);
MakeUnkn(0x4CD940, 1);
MakeNameEx(0x4CD940, "EntryPoint", 0x20);
MakeComm(0x4CD940, "'procedure EntryPoint;'");
MakeCode(0x4CD940);
MakeComm(0x4CD98E, "'TApplication.FModalPopupMode:TPopupMode'");
MakeCode(0x4CDA24);
MakeCode(0x4CDA2E);
MakeCode(0x4CDA53);
MakeCode(0x4CDA5F);
MakeCode(0x4CDA6C);
MakeCode(0x4CDA78);
MakeCode(0x4CDA7D);
MakeFunction(0x4CD940, 0x4CDA87);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4CDAA0, -1);
MakeDword(0x4CDA9C);
MakeDword(0x4CDA98);
MakeByte(0x4CE00C);
MakeUnkn(0x4CE00C, 1);
MakeNameEx(0x4CE00C, "gvar_004CE00C", 0);
MakeByte(0x4CE010);
MakeUnkn(0x4CE010, 1);
MakeNameEx(0x4CE010, "gvar_004CE010", 0);
MakeByte(0x4CE014);
MakeUnkn(0x4CE014, 1);
MakeNameEx(0x4CE014, "gvar_004CE014", 0);
MakeByte(0x4CE018);
MakeUnkn(0x4CE018, 1);
MakeNameEx(0x4CE018, "gvar_004CE018", 0);
MakeByte(0x4CE01C);
MakeUnkn(0x4CE01C, 1);
MakeNameEx(0x4CE01C, "gvar_004CE01C", 0);
MakeByte(0x4CE020);
MakeUnkn(0x4CE020, 1);
MakeNameEx(0x4CE020, "gvar_004CE020", 0);
MakeByte(0x4CE038);
MakeUnkn(0x4CE038, 1);
MakeNameEx(0x4CE038, "gvar_004CE038", 0);
MakeByte(0x4CE03C);
MakeUnkn(0x4CE03C, 1);
MakeNameEx(0x4CE03C, "gvar_004CE03C", 0);
MakeByte(0x4CE794);
MakeUnkn(0x4CE794, 1);
MakeNameEx(0x4CE794, "gvar_004CE794", 0);
MakeByte(0x4CE7B8);
MakeUnkn(0x4CE7B8, 1);
MakeNameEx(0x4CE7B8, "gvar_004CE7B8", 0);
MakeByte(0x4CE7BC);
MakeUnkn(0x4CE7BC, 1);
MakeNameEx(0x4CE7BC, "gvar_004CE7BC", 0);
MakeByte(0x4CE7C0);
MakeUnkn(0x4CE7C0, 1);
MakeNameEx(0x4CE7C0, "gvar_004CE7C0", 0);
MakeByte(0x4CE800);
MakeUnkn(0x4CE800, 1);
MakeNameEx(0x4CE800, "gvar_004CE800", 0);
MakeUnkn(0x4CE878, 1);
MakeNameEx(0x4CE878, "Format_0", 0x20);
MakeComm(0x4CE878, "'function Format(const Format:AnsiString; const Args:array[$0..-$1] of System.TVarRec; const _Dv_:$0..-$1; const FormatSettings:TFormatSettings):AnsiString;'");
MakeCode(0x4CE878);
MakeFunction(0x4CE878, 0x4CE915);
MakeByte(0x4CEA08);
MakeUnkn(0x4CEA08, 1);
MakeNameEx(0x4CEA08, "gvar_004CEA08", 0);
MakeByte(0x4CEA0C);
MakeUnkn(0x4CEA0C, 1);
MakeNameEx(0x4CEA0C, "gvar_004CEA0C", 0);
MakeByte(0x4CEB18);
MakeUnkn(0x4CEB18, 1);
MakeNameEx(0x4CEB18, "gvar_004CEB18", 0);
MakeByte(0x4CF77C);
MakeUnkn(0x4CF77C, 1);
MakeNameEx(0x4CF77C, "WINDOWPOS", 0);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4CF888, -1);
MakeDword(0x4CF884);
MakeDword(0x4CF880);
MakeByte(0x4CF990);
MakeUnkn(0x4CF990, 1);
MakeNameEx(0x4CF990, "gvar_004CF990", 0);
MakeByte(0x4CFAA8);
MakeUnkn(0x4CFAA8, 1);
MakeNameEx(0x4CFAA8, "gvar_004CFAA8", 0);
MakeByte(0x4CFEA8);
MakeUnkn(0x4CFEA8, 1);
MakeNameEx(0x4CFEA8, "gvar_004CFEA8", 0);
MakeByte(0x4D0028);
MakeUnkn(0x4D0028, 1);
MakeNameEx(0x4D0028, "gvar_004D0028", 0);
MakeByte(0x4D090A);
MakeUnkn(0x4D090A, 1);
MakeNameEx(0x4D090A, "gvar_004D090A", 0);
MakeByte(0x4D165A);
MakeUnkn(0x4D165A, 1);
MakeNameEx(0x4D165A, "gvar_004D165A", 0);
MakeByte(0x4D1672);
MakeUnkn(0x4D1672, 1);
MakeNameEx(0x4D1672, "gvar_004D1672", 0);
MakeByte(0x4D1686);
MakeUnkn(0x4D1686, 1);
MakeNameEx(0x4D1686, "gvar_004D1686", 0);
MakeByte(0x4D170C);
MakeUnkn(0x4D170C, 1);
MakeNameEx(0x4D170C, "gvar_004D170C", 0);
MakeByte(0x4D1728);
MakeUnkn(0x4D1728, 1);
MakeNameEx(0x4D1728, "gvar_004D1728", 0);
MakeByte(0x4D1830);
MakeArray(0x4D1830, 16);
SetLongPrm(INF_STRTYPE, ASCSTR_TERMCHR);
MakeStr(0x4D184C, -1);
MakeDword(0x4D1848);
MakeDword(0x4D1844);
MakeByte(0x4D1A90);
MakeUnkn(0x4D1A90, 1);
MakeNameEx(0x4D1A90, "gvar_004D1A90", 0);
MakeByte(0x4D1AA4);
MakeUnkn(0x4D1AA4, 1);
MakeNameEx(0x4D1AA4, "gvar_004D1AA4", 0);
MakeByte(0x4D1AC8);
MakeUnkn(0x4D1AC8, 1);
MakeNameEx(0x4D1AC8, "gvar_004D1AC8", 0);
MakeByte(0x4D1B14);
MakeUnkn(0x4D1B14, 1);
MakeNameEx(0x4D1B14, "gvar_004D1B14", 0);
MakeByte(0x4D1B44);
MakeUnkn(0x4D1B44, 1);
MakeNameEx(0x4D1B44, "gvar_004D1B44", 0);
MakeByte(0x4D1B48);
MakeUnkn(0x4D1B48, 1);
MakeNameEx(0x4D1B48, "IsLibrary", 0);
MakeComm(0x4D1B48, "'Boolean'");
MakeByte(0x4D1B5C);
MakeUnkn(0x4D1B5C, 1);
MakeNameEx(0x4D1B5C, "AbstractErrorProc", 0);
MakeComm(0x4D1B5C, "'procedure'");
MakeByte(0x4D1B70);
MakeUnkn(0x4D1B70, 1);
MakeNameEx(0x4D1B70, "ExitProc", 0);
MakeComm(0x4D1B70, "'Pointer'");
MakeByte(0x4D1B74);
MakeUnkn(0x4D1B74, 1);
MakeNameEx(0x4D1B74, "ErrorProc", 0);
MakeComm(0x4D1B74, "'procedure(val ErrorCode:Byte;val ErrorAddr:Pointer)'");
MakeByte(0x4D1BB4);
MakeUnkn(0x4D1BB4, 1);
MakeNameEx(0x4D1BB4, "gvar_004D1BB4", 0);
MakeByte(0x4D1BC4);
MakeUnkn(0x4D1BC4, 1);
MakeNameEx(0x4D1BC4, "VarBstrFromCy", 0);
MakeComm(0x4D1BC4, "'function(val cyIn:System.Currency;val LCID:System.Integer;val dwFlags:System.Longint;var bstrOut:System.WideString):System.HRESULT stdcall'");
MakeByte(0x4D1C00);
MakeUnkn(0x4D1C00, 1);
MakeNameEx(0x4D1C00, "ExceptionClass", 0);
MakeComm(0x4D1C00, "'TClass'");
MakeByte(0x4D1C10);
MakeUnkn(0x4D1C10, 1);
MakeNameEx(0x4D1C10, "gvar_004D1C10", 0);
MakeByte(0x4D1C38);
MakeUnkn(0x4D1C38, 1);
MakeNameEx(0x4D1C38, "gvar_004D1C38", 0);
MakeByte(0x4D1C3C);
MakeUnkn(0x4D1C3C, 1);
MakeNameEx(0x4D1C3C, "IsThemeBackgroundPartiallyTransparent", 0);
MakeComm(0x4D1C3C, "'function(val hTheme:Windows.THandle;val iPartId:System.Integer;val iStateId:System.Integer):Windows.BOOL stdcall'");
MakeByte(0x4D1C48);
MakeUnkn(0x4D1C48, 1);
MakeNameEx(0x4D1C48, "GetThemeSysBool", 0);
MakeComm(0x4D1C48, "'function(val hTheme:Windows.THandle;val iBoolId:System.Integer):Windows.BOOL stdcall'");
MakeByte(0x4D1C5C);
MakeUnkn(0x4D1C5C, 1);
MakeNameEx(0x4D1C5C, "OpenThemeData", 0);
MakeComm(0x4D1C5C, "'function(val hwnd:Windows.HWND;val pszClassList:Windows.LPCWSTR):Windows.THandle stdcall'");
MakeByte(0x4D1C80);
MakeUnkn(0x4D1C80, 1);
MakeNameEx(0x4D1C80, "Output", 0);
MakeComm(0x4D1C80, "'Text'");
MakeByte(0x4D1C90);
MakeUnkn(0x4D1C90, 1);
MakeNameEx(0x4D1C90, "GetMonitorInfo", 0);
MakeComm(0x4D1C90, "'TGetMonitorInfoA'");
MakeByte(0x4D1C94);
MakeUnkn(0x4D1C94, 1);
MakeNameEx(0x4D1C94, "ExceptClsProc", 0);
MakeComm(0x4D1C94, "'Pointer'");
MakeByte(0x4D1C98);
MakeUnkn(0x4D1C98, 1);
MakeNameEx(0x4D1C98, "MainInstance", 0);
MakeComm(0x4D1C98, "'Cardinal'");
MakeByte(0x4D1CB8);
MakeUnkn(0x4D1CB8, 1);
MakeNameEx(0x4D1CB8, "ExceptProc", 0);
MakeComm(0x4D1CB8, "'Pointer'");
MakeByte(0x4D1CC0);
MakeUnkn(0x4D1CC0, 1);
MakeNameEx(0x4D1CC0, "ExceptObjProc", 0);
MakeComm(0x4D1CC0, "'Pointer'");
MakeByte(0x4D1D00);
MakeUnkn(0x4D1D00, 1);
MakeNameEx(0x4D1D00, "gvar_004D1D00", 0);
MakeByte(0x4D1D48);
MakeUnkn(0x4D1D48, 1);
MakeNameEx(0x4D1D48, "NewStyleControls", 0);
MakeComm(0x4D1D48, "'Boolean'");
MakeByte(0x4D1D5C);
MakeUnkn(0x4D1D5C, 1);
MakeNameEx(0x4D1D5C, "MonitorFromWindow", 0);
MakeComm(0x4D1D5C, "'TMonitorFromWindow'");
MakeByte(0x4D1D78);
MakeUnkn(0x4D1D78, 1);
MakeNameEx(0x4D1D78, "DrawThemeBackground", 0);
MakeComm(0x4D1D78, "'function(val hTheme:Windows.THandle;val hdc:Windows.HDC;val iPartId:System.Integer;val iStateId:System.Integer;const pRect:Windows.TRect;val pClipRect:Windows.PRect):System.HRESULT stdcall'");
MakeByte(0x4D1D80);
MakeUnkn(0x4D1D80, 1);
MakeNameEx(0x4D1D80, "InitProc", 0);
MakeComm(0x4D1D80, "'Pointer'");
MakeByte(0x4D1D8C);
MakeUnkn(0x4D1D8C, 1);
MakeNameEx(0x4D1D8C, "CloseThemeData", 0);
MakeComm(0x4D1D8C, "'function(val hTheme:Windows.THandle):System.HRESULT stdcall'");
MakeByte(0x4D1D98);
MakeUnkn(0x4D1D98, 1);
MakeNameEx(0x4D1D98, "VarBoolFromStr", 0);
MakeComm(0x4D1D98, "'function(const strIn:System.WideString;val LCID:System.Integer;val dwFlags:System.Longint;var boolOut:System.WordBool):System.HRESULT stdcall'");
MakeByte(0x4D1DA8);
MakeUnkn(0x4D1DA8, 1);
MakeNameEx(0x4D1DA8, "VarBstrFromDate", 0);
MakeComm(0x4D1DA8, "'function(val dateIn:System.TDateTime;val LCID:System.Integer;val dwFlags:System.Longint;var bstrOut:System.WideString):System.HRESULT stdcall'");
MakeByte(0x4D1DBC);
MakeUnkn(0x4D1DBC, 1);
MakeNameEx(0x4D1DBC, "EnumDisplayMonitors", 0);
MakeComm(0x4D1DBC, "'TEnumDisplayMonitors'");
MakeByte(0x4D1DC4);
MakeUnkn(0x4D1DC4, 1);
MakeNameEx(0x4D1DC4, "DrawThemeEdge", 0);
MakeComm(0x4D1DC4, "'function(val hTheme:Windows.THandle;val hdc:Windows.HDC;val iPartId:System.Integer;val iStateId:System.Integer;const pDestRect:Windows.TRect;val uEdge:Windows.UINT;val uFlags:Windows.UINT;val pContentRect:Windows.PRect):System.HRESULT stdcall'");
MakeByte(0x4D1E00);
MakeUnkn(0x4D1E00, 1);
MakeNameEx(0x4D1E00, "CmdShow", 0);
MakeComm(0x4D1E00, "'Integer'");
MakeByte(0x4D1E20);
MakeUnkn(0x4D1E20, 1);
MakeNameEx(0x4D1E20, "DrawThemeParentBackground", 0);
MakeComm(0x4D1E20, "'function(val hwnd:Windows.HWND;val hdc:Windows.HDC;val prc:Windows.PRect):System.HRESULT stdcall'");
MakeByte(0x4D1E3C);
MakeUnkn(0x4D1E3C, 1);
MakeNameEx(0x4D1E3C, "AssertErrorProc", 0);
MakeComm(0x4D1E3C, "'TAssertErrorProc'");
MakeByte(0x4D1E4C);
MakeUnkn(0x4D1E4C, 1);
MakeNameEx(0x4D1E4C, "Application", 0);
MakeComm(0x4D1E4C, "'TApplication'");
MakeByte(0x4D1E90);
MakeUnkn(0x4D1E90, 1);
MakeNameEx(0x4D1E90, "gvar_004D1E90", 0);
MakeByte(0x4D1EC8);
MakeUnkn(0x4D1EC8, 1);
MakeNameEx(0x4D1EC8, "IsConsole", 0);
MakeComm(0x4D1EC8, "'Boolean'");
MakeByte(0x4D1EDC);
MakeUnkn(0x4D1EDC, 1);
MakeNameEx(0x4D1EDC, "VarBstrFromBool", 0);
MakeComm(0x4D1EDC, "'function(val boolIn:System.WordBool;val LCID:System.Integer;val dwFlags:System.Longint;var bstrOut:System.WideString):System.HRESULT stdcall'");
MakeByte(0x4D1EE4);
MakeUnkn(0x4D1EE4, 1);
MakeNameEx(0x4D1EE4, "gvar_004D1EE4", 0);
MakeByte(0x4D1F04);
MakeUnkn(0x4D1F04, 1);
MakeNameEx(0x4D1F04, "VariantChangeTypeEx", 0);
MakeComm(0x4D1F04, "'function(var Dest:System.TVarData;const Source:System.TVarData;val LCID:System.Integer;val wFlags:System.Word;val VarType:System.Word):System.HRESULT stdcall'");
MakeByte(0x4D1F14);
MakeUnkn(0x4D1F14, 1);
MakeNameEx(0x4D1F14, "Test8086", 0);
MakeComm(0x4D1F14, "'Byte'");
MakeByte(0x4D1F50);
MakeUnkn(0x4D1F50, 1);
MakeNameEx(0x4D1F50, "gvar_004D1F50", 0);
MakeByte(0x4D1FAC);
MakeUnkn(0x4D1FAC, 1);
MakeNameEx(0x4D1FAC, "Mouse", 0);
MakeComm(0x4D1FAC, "'TMouse'");
MakeByte(0x4D1FC4);
MakeUnkn(0x4D1FC4, 1);
MakeNameEx(0x4D1FC4, "VarI4FromStr", 0);
MakeComm(0x4D1FC4, "'function(const strIn:System.WideString;val LCID:System.Integer;val dwFlags:System.Longint;var lOut:System.Longint):System.HRESULT stdcall'");
MakeByte(0x4D1FDC);
MakeUnkn(0x4D1FDC, 1);
MakeNameEx(0x4D1FDC, "GlobalNameSpace", 0);
MakeComm(0x4D1FDC, "'IReadWriteSync'");
MakeByte(0x4D1FEC);
MakeUnkn(0x4D1FEC, 1);
MakeNameEx(0x4D1FEC, "Screen", 0);
MakeComm(0x4D1FEC, "'TScreen'");
MakeByte(0x4D201C);
MakeUnkn(0x4D201C, 1);
MakeNameEx(0x4D201C, "MainThreadID", 0);
MakeComm(0x4D201C, "'Cardinal'");
MakeByte(0x4D2020);
MakeUnkn(0x4D2020, 1);
MakeNameEx(0x4D2020, "SysLocale", 0);
MakeComm(0x4D2020, "'TSysLocale'");
}